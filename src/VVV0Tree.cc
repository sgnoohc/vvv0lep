#include "VVV0Tree.h"
VVV0Tree vvv;

void VVV0Tree::Init(TTree *tree) {
  Lep_branch = tree->GetBranch("Lep");
  if (Lep_branch) Lep_branch->SetAddress(&Lep_);
  Js_branch = tree->GetBranch("Js");
  if (Js_branch) Js_branch->SetAddress(&Js_);
  FJ0_branch = tree->GetBranch("FJ0");
  if (FJ0_branch) FJ0_branch->SetAddress(&FJ0_);
  FJ1_branch = tree->GetBranch("FJ1");
  if (FJ1_branch) FJ1_branch->SetAddress(&FJ1_);
  FJ2_branch = tree->GetBranch("FJ2");
  if (FJ2_branch) FJ2_branch->SetAddress(&FJ2_);
  FJ3_branch = tree->GetBranch("FJ3");
  if (FJ3_branch) FJ3_branch->SetAddress(&FJ3_);
  FJ4_branch = tree->GetBranch("FJ4");
  if (FJ4_branch) FJ4_branch->SetAddress(&FJ4_);
  iFJ0_branch = tree->GetBranch("iFJ0");
  if (iFJ0_branch) iFJ0_branch->SetAddress(&iFJ0_);
  iFJ1_branch = tree->GetBranch("iFJ1");
  if (iFJ1_branch) iFJ1_branch->SetAddress(&iFJ1_);
  iFJ2_branch = tree->GetBranch("iFJ2");
  if (iFJ2_branch) iFJ2_branch->SetAddress(&iFJ2_);
  iFJ3_branch = tree->GetBranch("iFJ3");
  if (iFJ3_branch) iFJ3_branch->SetAddress(&iFJ3_);
  iFJ4_branch = tree->GetBranch("iFJ4");
  if (iFJ4_branch) iFJ4_branch->SetAddress(&iFJ4_);
  MET_branch = tree->GetBranch("MET");
  if (MET_branch) MET_branch->SetAddress(&MET_);
  Nu_branch = tree->GetBranch("Nu");
  if (Nu_branch) Nu_branch->SetAddress(&Nu_);
  J0_branch = tree->GetBranch("J0");
  if (J0_branch) J0_branch->SetAddress(&J0_);
  J1_branch = tree->GetBranch("J1");
  if (J1_branch) J1_branch->SetAddress(&J1_);
  J2_branch = tree->GetBranch("J2");
  if (J2_branch) J2_branch->SetAddress(&J2_);
  J3_branch = tree->GetBranch("J3");
  if (J3_branch) J3_branch->SetAddress(&J3_);
  J4_branch = tree->GetBranch("J4");
  if (J4_branch) J4_branch->SetAddress(&J4_);
  J5_branch = tree->GetBranch("J5");
  if (J5_branch) J5_branch->SetAddress(&J5_);
  J6_branch = tree->GetBranch("J6");
  if (J6_branch) J6_branch->SetAddress(&J6_);
  J7_branch = tree->GetBranch("J7");
  if (J7_branch) J7_branch->SetAddress(&J7_);
  JsJESUp_branch = tree->GetBranch("JsJESUp");
  if (JsJESUp_branch) JsJESUp_branch->SetAddress(&JsJESUp_);
  FJ0JESUp_branch = tree->GetBranch("FJ0JESUp");
  if (FJ0JESUp_branch) FJ0JESUp_branch->SetAddress(&FJ0JESUp_);
  FJ1JESUp_branch = tree->GetBranch("FJ1JESUp");
  if (FJ1JESUp_branch) FJ1JESUp_branch->SetAddress(&FJ1JESUp_);
  FJ2JESUp_branch = tree->GetBranch("FJ2JESUp");
  if (FJ2JESUp_branch) FJ2JESUp_branch->SetAddress(&FJ2JESUp_);
  FJ3JESUp_branch = tree->GetBranch("FJ3JESUp");
  if (FJ3JESUp_branch) FJ3JESUp_branch->SetAddress(&FJ3JESUp_);
  FJ4JESUp_branch = tree->GetBranch("FJ4JESUp");
  if (FJ4JESUp_branch) FJ4JESUp_branch->SetAddress(&FJ4JESUp_);
  iFJ0JESUp_branch = tree->GetBranch("iFJ0JESUp");
  if (iFJ0JESUp_branch) iFJ0JESUp_branch->SetAddress(&iFJ0JESUp_);
  iFJ1JESUp_branch = tree->GetBranch("iFJ1JESUp");
  if (iFJ1JESUp_branch) iFJ1JESUp_branch->SetAddress(&iFJ1JESUp_);
  iFJ2JESUp_branch = tree->GetBranch("iFJ2JESUp");
  if (iFJ2JESUp_branch) iFJ2JESUp_branch->SetAddress(&iFJ2JESUp_);
  iFJ3JESUp_branch = tree->GetBranch("iFJ3JESUp");
  if (iFJ3JESUp_branch) iFJ3JESUp_branch->SetAddress(&iFJ3JESUp_);
  iFJ4JESUp_branch = tree->GetBranch("iFJ4JESUp");
  if (iFJ4JESUp_branch) iFJ4JESUp_branch->SetAddress(&iFJ4JESUp_);
  METJESUp_branch = tree->GetBranch("METJESUp");
  if (METJESUp_branch) METJESUp_branch->SetAddress(&METJESUp_);
  NuJESUp_branch = tree->GetBranch("NuJESUp");
  if (NuJESUp_branch) NuJESUp_branch->SetAddress(&NuJESUp_);
  J0JESUp_branch = tree->GetBranch("J0JESUp");
  if (J0JESUp_branch) J0JESUp_branch->SetAddress(&J0JESUp_);
  J1JESUp_branch = tree->GetBranch("J1JESUp");
  if (J1JESUp_branch) J1JESUp_branch->SetAddress(&J1JESUp_);
  J2JESUp_branch = tree->GetBranch("J2JESUp");
  if (J2JESUp_branch) J2JESUp_branch->SetAddress(&J2JESUp_);
  J3JESUp_branch = tree->GetBranch("J3JESUp");
  if (J3JESUp_branch) J3JESUp_branch->SetAddress(&J3JESUp_);
  J4JESUp_branch = tree->GetBranch("J4JESUp");
  if (J4JESUp_branch) J4JESUp_branch->SetAddress(&J4JESUp_);
  J5JESUp_branch = tree->GetBranch("J5JESUp");
  if (J5JESUp_branch) J5JESUp_branch->SetAddress(&J5JESUp_);
  J6JESUp_branch = tree->GetBranch("J6JESUp");
  if (J6JESUp_branch) J6JESUp_branch->SetAddress(&J6JESUp_);
  J7JESUp_branch = tree->GetBranch("J7JESUp");
  if (J7JESUp_branch) J7JESUp_branch->SetAddress(&J7JESUp_);
  JsJESDn_branch = tree->GetBranch("JsJESDn");
  if (JsJESDn_branch) JsJESDn_branch->SetAddress(&JsJESDn_);
  FJ0JESDn_branch = tree->GetBranch("FJ0JESDn");
  if (FJ0JESDn_branch) FJ0JESDn_branch->SetAddress(&FJ0JESDn_);
  FJ1JESDn_branch = tree->GetBranch("FJ1JESDn");
  if (FJ1JESDn_branch) FJ1JESDn_branch->SetAddress(&FJ1JESDn_);
  FJ2JESDn_branch = tree->GetBranch("FJ2JESDn");
  if (FJ2JESDn_branch) FJ2JESDn_branch->SetAddress(&FJ2JESDn_);
  FJ3JESDn_branch = tree->GetBranch("FJ3JESDn");
  if (FJ3JESDn_branch) FJ3JESDn_branch->SetAddress(&FJ3JESDn_);
  FJ4JESDn_branch = tree->GetBranch("FJ4JESDn");
  if (FJ4JESDn_branch) FJ4JESDn_branch->SetAddress(&FJ4JESDn_);
  iFJ0JESDn_branch = tree->GetBranch("iFJ0JESDn");
  if (iFJ0JESDn_branch) iFJ0JESDn_branch->SetAddress(&iFJ0JESDn_);
  iFJ1JESDn_branch = tree->GetBranch("iFJ1JESDn");
  if (iFJ1JESDn_branch) iFJ1JESDn_branch->SetAddress(&iFJ1JESDn_);
  iFJ2JESDn_branch = tree->GetBranch("iFJ2JESDn");
  if (iFJ2JESDn_branch) iFJ2JESDn_branch->SetAddress(&iFJ2JESDn_);
  iFJ3JESDn_branch = tree->GetBranch("iFJ3JESDn");
  if (iFJ3JESDn_branch) iFJ3JESDn_branch->SetAddress(&iFJ3JESDn_);
  iFJ4JESDn_branch = tree->GetBranch("iFJ4JESDn");
  if (iFJ4JESDn_branch) iFJ4JESDn_branch->SetAddress(&iFJ4JESDn_);
  METJESDn_branch = tree->GetBranch("METJESDn");
  if (METJESDn_branch) METJESDn_branch->SetAddress(&METJESDn_);
  NuJESDn_branch = tree->GetBranch("NuJESDn");
  if (NuJESDn_branch) NuJESDn_branch->SetAddress(&NuJESDn_);
  J0JESDn_branch = tree->GetBranch("J0JESDn");
  if (J0JESDn_branch) J0JESDn_branch->SetAddress(&J0JESDn_);
  J1JESDn_branch = tree->GetBranch("J1JESDn");
  if (J1JESDn_branch) J1JESDn_branch->SetAddress(&J1JESDn_);
  J2JESDn_branch = tree->GetBranch("J2JESDn");
  if (J2JESDn_branch) J2JESDn_branch->SetAddress(&J2JESDn_);
  J3JESDn_branch = tree->GetBranch("J3JESDn");
  if (J3JESDn_branch) J3JESDn_branch->SetAddress(&J3JESDn_);
  J4JESDn_branch = tree->GetBranch("J4JESDn");
  if (J4JESDn_branch) J4JESDn_branch->SetAddress(&J4JESDn_);
  J5JESDn_branch = tree->GetBranch("J5JESDn");
  if (J5JESDn_branch) J5JESDn_branch->SetAddress(&J5JESDn_);
  J6JESDn_branch = tree->GetBranch("J6JESDn");
  if (J6JESDn_branch) J6JESDn_branch->SetAddress(&J6JESDn_);
  J7JESDn_branch = tree->GetBranch("J7JESDn");
  if (J7JESDn_branch) J7JESDn_branch->SetAddress(&J7JESDn_);
  JsJERUp_branch = tree->GetBranch("JsJERUp");
  if (JsJERUp_branch) JsJERUp_branch->SetAddress(&JsJERUp_);
  FJ0JERUp_branch = tree->GetBranch("FJ0JERUp");
  if (FJ0JERUp_branch) FJ0JERUp_branch->SetAddress(&FJ0JERUp_);
  FJ1JERUp_branch = tree->GetBranch("FJ1JERUp");
  if (FJ1JERUp_branch) FJ1JERUp_branch->SetAddress(&FJ1JERUp_);
  FJ2JERUp_branch = tree->GetBranch("FJ2JERUp");
  if (FJ2JERUp_branch) FJ2JERUp_branch->SetAddress(&FJ2JERUp_);
  FJ3JERUp_branch = tree->GetBranch("FJ3JERUp");
  if (FJ3JERUp_branch) FJ3JERUp_branch->SetAddress(&FJ3JERUp_);
  FJ4JERUp_branch = tree->GetBranch("FJ4JERUp");
  if (FJ4JERUp_branch) FJ4JERUp_branch->SetAddress(&FJ4JERUp_);
  iFJ0JERUp_branch = tree->GetBranch("iFJ0JERUp");
  if (iFJ0JERUp_branch) iFJ0JERUp_branch->SetAddress(&iFJ0JERUp_);
  iFJ1JERUp_branch = tree->GetBranch("iFJ1JERUp");
  if (iFJ1JERUp_branch) iFJ1JERUp_branch->SetAddress(&iFJ1JERUp_);
  iFJ2JERUp_branch = tree->GetBranch("iFJ2JERUp");
  if (iFJ2JERUp_branch) iFJ2JERUp_branch->SetAddress(&iFJ2JERUp_);
  iFJ3JERUp_branch = tree->GetBranch("iFJ3JERUp");
  if (iFJ3JERUp_branch) iFJ3JERUp_branch->SetAddress(&iFJ3JERUp_);
  iFJ4JERUp_branch = tree->GetBranch("iFJ4JERUp");
  if (iFJ4JERUp_branch) iFJ4JERUp_branch->SetAddress(&iFJ4JERUp_);
  METJERUp_branch = tree->GetBranch("METJERUp");
  if (METJERUp_branch) METJERUp_branch->SetAddress(&METJERUp_);
  NuJERUp_branch = tree->GetBranch("NuJERUp");
  if (NuJERUp_branch) NuJERUp_branch->SetAddress(&NuJERUp_);
  J0JERUp_branch = tree->GetBranch("J0JERUp");
  if (J0JERUp_branch) J0JERUp_branch->SetAddress(&J0JERUp_);
  J1JERUp_branch = tree->GetBranch("J1JERUp");
  if (J1JERUp_branch) J1JERUp_branch->SetAddress(&J1JERUp_);
  J2JERUp_branch = tree->GetBranch("J2JERUp");
  if (J2JERUp_branch) J2JERUp_branch->SetAddress(&J2JERUp_);
  J3JERUp_branch = tree->GetBranch("J3JERUp");
  if (J3JERUp_branch) J3JERUp_branch->SetAddress(&J3JERUp_);
  J4JERUp_branch = tree->GetBranch("J4JERUp");
  if (J4JERUp_branch) J4JERUp_branch->SetAddress(&J4JERUp_);
  J5JERUp_branch = tree->GetBranch("J5JERUp");
  if (J5JERUp_branch) J5JERUp_branch->SetAddress(&J5JERUp_);
  J6JERUp_branch = tree->GetBranch("J6JERUp");
  if (J6JERUp_branch) J6JERUp_branch->SetAddress(&J6JERUp_);
  J7JERUp_branch = tree->GetBranch("J7JERUp");
  if (J7JERUp_branch) J7JERUp_branch->SetAddress(&J7JERUp_);
  JsJERDn_branch = tree->GetBranch("JsJERDn");
  if (JsJERDn_branch) JsJERDn_branch->SetAddress(&JsJERDn_);
  FJ0JERDn_branch = tree->GetBranch("FJ0JERDn");
  if (FJ0JERDn_branch) FJ0JERDn_branch->SetAddress(&FJ0JERDn_);
  FJ1JERDn_branch = tree->GetBranch("FJ1JERDn");
  if (FJ1JERDn_branch) FJ1JERDn_branch->SetAddress(&FJ1JERDn_);
  FJ2JERDn_branch = tree->GetBranch("FJ2JERDn");
  if (FJ2JERDn_branch) FJ2JERDn_branch->SetAddress(&FJ2JERDn_);
  FJ3JERDn_branch = tree->GetBranch("FJ3JERDn");
  if (FJ3JERDn_branch) FJ3JERDn_branch->SetAddress(&FJ3JERDn_);
  FJ4JERDn_branch = tree->GetBranch("FJ4JERDn");
  if (FJ4JERDn_branch) FJ4JERDn_branch->SetAddress(&FJ4JERDn_);
  iFJ0JERDn_branch = tree->GetBranch("iFJ0JERDn");
  if (iFJ0JERDn_branch) iFJ0JERDn_branch->SetAddress(&iFJ0JERDn_);
  iFJ1JERDn_branch = tree->GetBranch("iFJ1JERDn");
  if (iFJ1JERDn_branch) iFJ1JERDn_branch->SetAddress(&iFJ1JERDn_);
  iFJ2JERDn_branch = tree->GetBranch("iFJ2JERDn");
  if (iFJ2JERDn_branch) iFJ2JERDn_branch->SetAddress(&iFJ2JERDn_);
  iFJ3JERDn_branch = tree->GetBranch("iFJ3JERDn");
  if (iFJ3JERDn_branch) iFJ3JERDn_branch->SetAddress(&iFJ3JERDn_);
  iFJ4JERDn_branch = tree->GetBranch("iFJ4JERDn");
  if (iFJ4JERDn_branch) iFJ4JERDn_branch->SetAddress(&iFJ4JERDn_);
  METJERDn_branch = tree->GetBranch("METJERDn");
  if (METJERDn_branch) METJERDn_branch->SetAddress(&METJERDn_);
  NuJERDn_branch = tree->GetBranch("NuJERDn");
  if (NuJERDn_branch) NuJERDn_branch->SetAddress(&NuJERDn_);
  J0JERDn_branch = tree->GetBranch("J0JERDn");
  if (J0JERDn_branch) J0JERDn_branch->SetAddress(&J0JERDn_);
  J1JERDn_branch = tree->GetBranch("J1JERDn");
  if (J1JERDn_branch) J1JERDn_branch->SetAddress(&J1JERDn_);
  J2JERDn_branch = tree->GetBranch("J2JERDn");
  if (J2JERDn_branch) J2JERDn_branch->SetAddress(&J2JERDn_);
  J3JERDn_branch = tree->GetBranch("J3JERDn");
  if (J3JERDn_branch) J3JERDn_branch->SetAddress(&J3JERDn_);
  J4JERDn_branch = tree->GetBranch("J4JERDn");
  if (J4JERDn_branch) J4JERDn_branch->SetAddress(&J4JERDn_);
  J5JERDn_branch = tree->GetBranch("J5JERDn");
  if (J5JERDn_branch) J5JERDn_branch->SetAddress(&J5JERDn_);
  J6JERDn_branch = tree->GetBranch("J6JERDn");
  if (J6JERDn_branch) J6JERDn_branch->SetAddress(&J6JERDn_);
  J7JERDn_branch = tree->GetBranch("J7JERDn");
  if (J7JERDn_branch) J7JERDn_branch->SetAddress(&J7JERDn_);
  JsJMSUp_branch = tree->GetBranch("JsJMSUp");
  if (JsJMSUp_branch) JsJMSUp_branch->SetAddress(&JsJMSUp_);
  FJ0JMSUp_branch = tree->GetBranch("FJ0JMSUp");
  if (FJ0JMSUp_branch) FJ0JMSUp_branch->SetAddress(&FJ0JMSUp_);
  FJ1JMSUp_branch = tree->GetBranch("FJ1JMSUp");
  if (FJ1JMSUp_branch) FJ1JMSUp_branch->SetAddress(&FJ1JMSUp_);
  FJ2JMSUp_branch = tree->GetBranch("FJ2JMSUp");
  if (FJ2JMSUp_branch) FJ2JMSUp_branch->SetAddress(&FJ2JMSUp_);
  FJ3JMSUp_branch = tree->GetBranch("FJ3JMSUp");
  if (FJ3JMSUp_branch) FJ3JMSUp_branch->SetAddress(&FJ3JMSUp_);
  FJ4JMSUp_branch = tree->GetBranch("FJ4JMSUp");
  if (FJ4JMSUp_branch) FJ4JMSUp_branch->SetAddress(&FJ4JMSUp_);
  iFJ0JMSUp_branch = tree->GetBranch("iFJ0JMSUp");
  if (iFJ0JMSUp_branch) iFJ0JMSUp_branch->SetAddress(&iFJ0JMSUp_);
  iFJ1JMSUp_branch = tree->GetBranch("iFJ1JMSUp");
  if (iFJ1JMSUp_branch) iFJ1JMSUp_branch->SetAddress(&iFJ1JMSUp_);
  iFJ2JMSUp_branch = tree->GetBranch("iFJ2JMSUp");
  if (iFJ2JMSUp_branch) iFJ2JMSUp_branch->SetAddress(&iFJ2JMSUp_);
  iFJ3JMSUp_branch = tree->GetBranch("iFJ3JMSUp");
  if (iFJ3JMSUp_branch) iFJ3JMSUp_branch->SetAddress(&iFJ3JMSUp_);
  iFJ4JMSUp_branch = tree->GetBranch("iFJ4JMSUp");
  if (iFJ4JMSUp_branch) iFJ4JMSUp_branch->SetAddress(&iFJ4JMSUp_);
  METJMSUp_branch = tree->GetBranch("METJMSUp");
  if (METJMSUp_branch) METJMSUp_branch->SetAddress(&METJMSUp_);
  NuJMSUp_branch = tree->GetBranch("NuJMSUp");
  if (NuJMSUp_branch) NuJMSUp_branch->SetAddress(&NuJMSUp_);
  J0JMSUp_branch = tree->GetBranch("J0JMSUp");
  if (J0JMSUp_branch) J0JMSUp_branch->SetAddress(&J0JMSUp_);
  J1JMSUp_branch = tree->GetBranch("J1JMSUp");
  if (J1JMSUp_branch) J1JMSUp_branch->SetAddress(&J1JMSUp_);
  J2JMSUp_branch = tree->GetBranch("J2JMSUp");
  if (J2JMSUp_branch) J2JMSUp_branch->SetAddress(&J2JMSUp_);
  J3JMSUp_branch = tree->GetBranch("J3JMSUp");
  if (J3JMSUp_branch) J3JMSUp_branch->SetAddress(&J3JMSUp_);
  J4JMSUp_branch = tree->GetBranch("J4JMSUp");
  if (J4JMSUp_branch) J4JMSUp_branch->SetAddress(&J4JMSUp_);
  J5JMSUp_branch = tree->GetBranch("J5JMSUp");
  if (J5JMSUp_branch) J5JMSUp_branch->SetAddress(&J5JMSUp_);
  J6JMSUp_branch = tree->GetBranch("J6JMSUp");
  if (J6JMSUp_branch) J6JMSUp_branch->SetAddress(&J6JMSUp_);
  J7JMSUp_branch = tree->GetBranch("J7JMSUp");
  if (J7JMSUp_branch) J7JMSUp_branch->SetAddress(&J7JMSUp_);
  JsJMSDn_branch = tree->GetBranch("JsJMSDn");
  if (JsJMSDn_branch) JsJMSDn_branch->SetAddress(&JsJMSDn_);
  FJ0JMSDn_branch = tree->GetBranch("FJ0JMSDn");
  if (FJ0JMSDn_branch) FJ0JMSDn_branch->SetAddress(&FJ0JMSDn_);
  FJ1JMSDn_branch = tree->GetBranch("FJ1JMSDn");
  if (FJ1JMSDn_branch) FJ1JMSDn_branch->SetAddress(&FJ1JMSDn_);
  FJ2JMSDn_branch = tree->GetBranch("FJ2JMSDn");
  if (FJ2JMSDn_branch) FJ2JMSDn_branch->SetAddress(&FJ2JMSDn_);
  FJ3JMSDn_branch = tree->GetBranch("FJ3JMSDn");
  if (FJ3JMSDn_branch) FJ3JMSDn_branch->SetAddress(&FJ3JMSDn_);
  FJ4JMSDn_branch = tree->GetBranch("FJ4JMSDn");
  if (FJ4JMSDn_branch) FJ4JMSDn_branch->SetAddress(&FJ4JMSDn_);
  iFJ0JMSDn_branch = tree->GetBranch("iFJ0JMSDn");
  if (iFJ0JMSDn_branch) iFJ0JMSDn_branch->SetAddress(&iFJ0JMSDn_);
  iFJ1JMSDn_branch = tree->GetBranch("iFJ1JMSDn");
  if (iFJ1JMSDn_branch) iFJ1JMSDn_branch->SetAddress(&iFJ1JMSDn_);
  iFJ2JMSDn_branch = tree->GetBranch("iFJ2JMSDn");
  if (iFJ2JMSDn_branch) iFJ2JMSDn_branch->SetAddress(&iFJ2JMSDn_);
  iFJ3JMSDn_branch = tree->GetBranch("iFJ3JMSDn");
  if (iFJ3JMSDn_branch) iFJ3JMSDn_branch->SetAddress(&iFJ3JMSDn_);
  iFJ4JMSDn_branch = tree->GetBranch("iFJ4JMSDn");
  if (iFJ4JMSDn_branch) iFJ4JMSDn_branch->SetAddress(&iFJ4JMSDn_);
  METJMSDn_branch = tree->GetBranch("METJMSDn");
  if (METJMSDn_branch) METJMSDn_branch->SetAddress(&METJMSDn_);
  NuJMSDn_branch = tree->GetBranch("NuJMSDn");
  if (NuJMSDn_branch) NuJMSDn_branch->SetAddress(&NuJMSDn_);
  J0JMSDn_branch = tree->GetBranch("J0JMSDn");
  if (J0JMSDn_branch) J0JMSDn_branch->SetAddress(&J0JMSDn_);
  J1JMSDn_branch = tree->GetBranch("J1JMSDn");
  if (J1JMSDn_branch) J1JMSDn_branch->SetAddress(&J1JMSDn_);
  J2JMSDn_branch = tree->GetBranch("J2JMSDn");
  if (J2JMSDn_branch) J2JMSDn_branch->SetAddress(&J2JMSDn_);
  J3JMSDn_branch = tree->GetBranch("J3JMSDn");
  if (J3JMSDn_branch) J3JMSDn_branch->SetAddress(&J3JMSDn_);
  J4JMSDn_branch = tree->GetBranch("J4JMSDn");
  if (J4JMSDn_branch) J4JMSDn_branch->SetAddress(&J4JMSDn_);
  J5JMSDn_branch = tree->GetBranch("J5JMSDn");
  if (J5JMSDn_branch) J5JMSDn_branch->SetAddress(&J5JMSDn_);
  J6JMSDn_branch = tree->GetBranch("J6JMSDn");
  if (J6JMSDn_branch) J6JMSDn_branch->SetAddress(&J6JMSDn_);
  J7JMSDn_branch = tree->GetBranch("J7JMSDn");
  if (J7JMSDn_branch) J7JMSDn_branch->SetAddress(&J7JMSDn_);
  JsJMRUp_branch = tree->GetBranch("JsJMRUp");
  if (JsJMRUp_branch) JsJMRUp_branch->SetAddress(&JsJMRUp_);
  FJ0JMRUp_branch = tree->GetBranch("FJ0JMRUp");
  if (FJ0JMRUp_branch) FJ0JMRUp_branch->SetAddress(&FJ0JMRUp_);
  FJ1JMRUp_branch = tree->GetBranch("FJ1JMRUp");
  if (FJ1JMRUp_branch) FJ1JMRUp_branch->SetAddress(&FJ1JMRUp_);
  FJ2JMRUp_branch = tree->GetBranch("FJ2JMRUp");
  if (FJ2JMRUp_branch) FJ2JMRUp_branch->SetAddress(&FJ2JMRUp_);
  FJ3JMRUp_branch = tree->GetBranch("FJ3JMRUp");
  if (FJ3JMRUp_branch) FJ3JMRUp_branch->SetAddress(&FJ3JMRUp_);
  FJ4JMRUp_branch = tree->GetBranch("FJ4JMRUp");
  if (FJ4JMRUp_branch) FJ4JMRUp_branch->SetAddress(&FJ4JMRUp_);
  iFJ0JMRUp_branch = tree->GetBranch("iFJ0JMRUp");
  if (iFJ0JMRUp_branch) iFJ0JMRUp_branch->SetAddress(&iFJ0JMRUp_);
  iFJ1JMRUp_branch = tree->GetBranch("iFJ1JMRUp");
  if (iFJ1JMRUp_branch) iFJ1JMRUp_branch->SetAddress(&iFJ1JMRUp_);
  iFJ2JMRUp_branch = tree->GetBranch("iFJ2JMRUp");
  if (iFJ2JMRUp_branch) iFJ2JMRUp_branch->SetAddress(&iFJ2JMRUp_);
  iFJ3JMRUp_branch = tree->GetBranch("iFJ3JMRUp");
  if (iFJ3JMRUp_branch) iFJ3JMRUp_branch->SetAddress(&iFJ3JMRUp_);
  iFJ4JMRUp_branch = tree->GetBranch("iFJ4JMRUp");
  if (iFJ4JMRUp_branch) iFJ4JMRUp_branch->SetAddress(&iFJ4JMRUp_);
  METJMRUp_branch = tree->GetBranch("METJMRUp");
  if (METJMRUp_branch) METJMRUp_branch->SetAddress(&METJMRUp_);
  NuJMRUp_branch = tree->GetBranch("NuJMRUp");
  if (NuJMRUp_branch) NuJMRUp_branch->SetAddress(&NuJMRUp_);
  J0JMRUp_branch = tree->GetBranch("J0JMRUp");
  if (J0JMRUp_branch) J0JMRUp_branch->SetAddress(&J0JMRUp_);
  J1JMRUp_branch = tree->GetBranch("J1JMRUp");
  if (J1JMRUp_branch) J1JMRUp_branch->SetAddress(&J1JMRUp_);
  J2JMRUp_branch = tree->GetBranch("J2JMRUp");
  if (J2JMRUp_branch) J2JMRUp_branch->SetAddress(&J2JMRUp_);
  J3JMRUp_branch = tree->GetBranch("J3JMRUp");
  if (J3JMRUp_branch) J3JMRUp_branch->SetAddress(&J3JMRUp_);
  J4JMRUp_branch = tree->GetBranch("J4JMRUp");
  if (J4JMRUp_branch) J4JMRUp_branch->SetAddress(&J4JMRUp_);
  J5JMRUp_branch = tree->GetBranch("J5JMRUp");
  if (J5JMRUp_branch) J5JMRUp_branch->SetAddress(&J5JMRUp_);
  J6JMRUp_branch = tree->GetBranch("J6JMRUp");
  if (J6JMRUp_branch) J6JMRUp_branch->SetAddress(&J6JMRUp_);
  J7JMRUp_branch = tree->GetBranch("J7JMRUp");
  if (J7JMRUp_branch) J7JMRUp_branch->SetAddress(&J7JMRUp_);
  JsJMRDn_branch = tree->GetBranch("JsJMRDn");
  if (JsJMRDn_branch) JsJMRDn_branch->SetAddress(&JsJMRDn_);
  FJ0JMRDn_branch = tree->GetBranch("FJ0JMRDn");
  if (FJ0JMRDn_branch) FJ0JMRDn_branch->SetAddress(&FJ0JMRDn_);
  FJ1JMRDn_branch = tree->GetBranch("FJ1JMRDn");
  if (FJ1JMRDn_branch) FJ1JMRDn_branch->SetAddress(&FJ1JMRDn_);
  FJ2JMRDn_branch = tree->GetBranch("FJ2JMRDn");
  if (FJ2JMRDn_branch) FJ2JMRDn_branch->SetAddress(&FJ2JMRDn_);
  FJ3JMRDn_branch = tree->GetBranch("FJ3JMRDn");
  if (FJ3JMRDn_branch) FJ3JMRDn_branch->SetAddress(&FJ3JMRDn_);
  FJ4JMRDn_branch = tree->GetBranch("FJ4JMRDn");
  if (FJ4JMRDn_branch) FJ4JMRDn_branch->SetAddress(&FJ4JMRDn_);
  iFJ0JMRDn_branch = tree->GetBranch("iFJ0JMRDn");
  if (iFJ0JMRDn_branch) iFJ0JMRDn_branch->SetAddress(&iFJ0JMRDn_);
  iFJ1JMRDn_branch = tree->GetBranch("iFJ1JMRDn");
  if (iFJ1JMRDn_branch) iFJ1JMRDn_branch->SetAddress(&iFJ1JMRDn_);
  iFJ2JMRDn_branch = tree->GetBranch("iFJ2JMRDn");
  if (iFJ2JMRDn_branch) iFJ2JMRDn_branch->SetAddress(&iFJ2JMRDn_);
  iFJ3JMRDn_branch = tree->GetBranch("iFJ3JMRDn");
  if (iFJ3JMRDn_branch) iFJ3JMRDn_branch->SetAddress(&iFJ3JMRDn_);
  iFJ4JMRDn_branch = tree->GetBranch("iFJ4JMRDn");
  if (iFJ4JMRDn_branch) iFJ4JMRDn_branch->SetAddress(&iFJ4JMRDn_);
  METJMRDn_branch = tree->GetBranch("METJMRDn");
  if (METJMRDn_branch) METJMRDn_branch->SetAddress(&METJMRDn_);
  NuJMRDn_branch = tree->GetBranch("NuJMRDn");
  if (NuJMRDn_branch) NuJMRDn_branch->SetAddress(&NuJMRDn_);
  J0JMRDn_branch = tree->GetBranch("J0JMRDn");
  if (J0JMRDn_branch) J0JMRDn_branch->SetAddress(&J0JMRDn_);
  J1JMRDn_branch = tree->GetBranch("J1JMRDn");
  if (J1JMRDn_branch) J1JMRDn_branch->SetAddress(&J1JMRDn_);
  J2JMRDn_branch = tree->GetBranch("J2JMRDn");
  if (J2JMRDn_branch) J2JMRDn_branch->SetAddress(&J2JMRDn_);
  J3JMRDn_branch = tree->GetBranch("J3JMRDn");
  if (J3JMRDn_branch) J3JMRDn_branch->SetAddress(&J3JMRDn_);
  J4JMRDn_branch = tree->GetBranch("J4JMRDn");
  if (J4JMRDn_branch) J4JMRDn_branch->SetAddress(&J4JMRDn_);
  J5JMRDn_branch = tree->GetBranch("J5JMRDn");
  if (J5JMRDn_branch) J5JMRDn_branch->SetAddress(&J5JMRDn_);
  J6JMRDn_branch = tree->GetBranch("J6JMRDn");
  if (J6JMRDn_branch) J6JMRDn_branch->SetAddress(&J6JMRDn_);
  J7JMRDn_branch = tree->GetBranch("J7JMRDn");
  if (J7JMRDn_branch) J7JMRDn_branch->SetAddress(&J7JMRDn_);
  JsjesAbsoluteStatup_branch = tree->GetBranch("JsjesAbsoluteStatup");
  if (JsjesAbsoluteStatup_branch) JsjesAbsoluteStatup_branch->SetAddress(&JsjesAbsoluteStatup_);
  FJ0jesAbsoluteStatup_branch = tree->GetBranch("FJ0jesAbsoluteStatup");
  if (FJ0jesAbsoluteStatup_branch) FJ0jesAbsoluteStatup_branch->SetAddress(&FJ0jesAbsoluteStatup_);
  FJ1jesAbsoluteStatup_branch = tree->GetBranch("FJ1jesAbsoluteStatup");
  if (FJ1jesAbsoluteStatup_branch) FJ1jesAbsoluteStatup_branch->SetAddress(&FJ1jesAbsoluteStatup_);
  FJ2jesAbsoluteStatup_branch = tree->GetBranch("FJ2jesAbsoluteStatup");
  if (FJ2jesAbsoluteStatup_branch) FJ2jesAbsoluteStatup_branch->SetAddress(&FJ2jesAbsoluteStatup_);
  FJ3jesAbsoluteStatup_branch = tree->GetBranch("FJ3jesAbsoluteStatup");
  if (FJ3jesAbsoluteStatup_branch) FJ3jesAbsoluteStatup_branch->SetAddress(&FJ3jesAbsoluteStatup_);
  FJ4jesAbsoluteStatup_branch = tree->GetBranch("FJ4jesAbsoluteStatup");
  if (FJ4jesAbsoluteStatup_branch) FJ4jesAbsoluteStatup_branch->SetAddress(&FJ4jesAbsoluteStatup_);
  iFJ0jesAbsoluteStatup_branch = tree->GetBranch("iFJ0jesAbsoluteStatup");
  if (iFJ0jesAbsoluteStatup_branch) iFJ0jesAbsoluteStatup_branch->SetAddress(&iFJ0jesAbsoluteStatup_);
  iFJ1jesAbsoluteStatup_branch = tree->GetBranch("iFJ1jesAbsoluteStatup");
  if (iFJ1jesAbsoluteStatup_branch) iFJ1jesAbsoluteStatup_branch->SetAddress(&iFJ1jesAbsoluteStatup_);
  iFJ2jesAbsoluteStatup_branch = tree->GetBranch("iFJ2jesAbsoluteStatup");
  if (iFJ2jesAbsoluteStatup_branch) iFJ2jesAbsoluteStatup_branch->SetAddress(&iFJ2jesAbsoluteStatup_);
  iFJ3jesAbsoluteStatup_branch = tree->GetBranch("iFJ3jesAbsoluteStatup");
  if (iFJ3jesAbsoluteStatup_branch) iFJ3jesAbsoluteStatup_branch->SetAddress(&iFJ3jesAbsoluteStatup_);
  iFJ4jesAbsoluteStatup_branch = tree->GetBranch("iFJ4jesAbsoluteStatup");
  if (iFJ4jesAbsoluteStatup_branch) iFJ4jesAbsoluteStatup_branch->SetAddress(&iFJ4jesAbsoluteStatup_);
  METjesAbsoluteStatup_branch = tree->GetBranch("METjesAbsoluteStatup");
  if (METjesAbsoluteStatup_branch) METjesAbsoluteStatup_branch->SetAddress(&METjesAbsoluteStatup_);
  NujesAbsoluteStatup_branch = tree->GetBranch("NujesAbsoluteStatup");
  if (NujesAbsoluteStatup_branch) NujesAbsoluteStatup_branch->SetAddress(&NujesAbsoluteStatup_);
  J0jesAbsoluteStatup_branch = tree->GetBranch("J0jesAbsoluteStatup");
  if (J0jesAbsoluteStatup_branch) J0jesAbsoluteStatup_branch->SetAddress(&J0jesAbsoluteStatup_);
  J1jesAbsoluteStatup_branch = tree->GetBranch("J1jesAbsoluteStatup");
  if (J1jesAbsoluteStatup_branch) J1jesAbsoluteStatup_branch->SetAddress(&J1jesAbsoluteStatup_);
  J2jesAbsoluteStatup_branch = tree->GetBranch("J2jesAbsoluteStatup");
  if (J2jesAbsoluteStatup_branch) J2jesAbsoluteStatup_branch->SetAddress(&J2jesAbsoluteStatup_);
  J3jesAbsoluteStatup_branch = tree->GetBranch("J3jesAbsoluteStatup");
  if (J3jesAbsoluteStatup_branch) J3jesAbsoluteStatup_branch->SetAddress(&J3jesAbsoluteStatup_);
  J4jesAbsoluteStatup_branch = tree->GetBranch("J4jesAbsoluteStatup");
  if (J4jesAbsoluteStatup_branch) J4jesAbsoluteStatup_branch->SetAddress(&J4jesAbsoluteStatup_);
  J5jesAbsoluteStatup_branch = tree->GetBranch("J5jesAbsoluteStatup");
  if (J5jesAbsoluteStatup_branch) J5jesAbsoluteStatup_branch->SetAddress(&J5jesAbsoluteStatup_);
  J6jesAbsoluteStatup_branch = tree->GetBranch("J6jesAbsoluteStatup");
  if (J6jesAbsoluteStatup_branch) J6jesAbsoluteStatup_branch->SetAddress(&J6jesAbsoluteStatup_);
  J7jesAbsoluteStatup_branch = tree->GetBranch("J7jesAbsoluteStatup");
  if (J7jesAbsoluteStatup_branch) J7jesAbsoluteStatup_branch->SetAddress(&J7jesAbsoluteStatup_);
  JsjesAbsoluteStatdn_branch = tree->GetBranch("JsjesAbsoluteStatdn");
  if (JsjesAbsoluteStatdn_branch) JsjesAbsoluteStatdn_branch->SetAddress(&JsjesAbsoluteStatdn_);
  FJ0jesAbsoluteStatdn_branch = tree->GetBranch("FJ0jesAbsoluteStatdn");
  if (FJ0jesAbsoluteStatdn_branch) FJ0jesAbsoluteStatdn_branch->SetAddress(&FJ0jesAbsoluteStatdn_);
  FJ1jesAbsoluteStatdn_branch = tree->GetBranch("FJ1jesAbsoluteStatdn");
  if (FJ1jesAbsoluteStatdn_branch) FJ1jesAbsoluteStatdn_branch->SetAddress(&FJ1jesAbsoluteStatdn_);
  FJ2jesAbsoluteStatdn_branch = tree->GetBranch("FJ2jesAbsoluteStatdn");
  if (FJ2jesAbsoluteStatdn_branch) FJ2jesAbsoluteStatdn_branch->SetAddress(&FJ2jesAbsoluteStatdn_);
  FJ3jesAbsoluteStatdn_branch = tree->GetBranch("FJ3jesAbsoluteStatdn");
  if (FJ3jesAbsoluteStatdn_branch) FJ3jesAbsoluteStatdn_branch->SetAddress(&FJ3jesAbsoluteStatdn_);
  FJ4jesAbsoluteStatdn_branch = tree->GetBranch("FJ4jesAbsoluteStatdn");
  if (FJ4jesAbsoluteStatdn_branch) FJ4jesAbsoluteStatdn_branch->SetAddress(&FJ4jesAbsoluteStatdn_);
  iFJ0jesAbsoluteStatdn_branch = tree->GetBranch("iFJ0jesAbsoluteStatdn");
  if (iFJ0jesAbsoluteStatdn_branch) iFJ0jesAbsoluteStatdn_branch->SetAddress(&iFJ0jesAbsoluteStatdn_);
  iFJ1jesAbsoluteStatdn_branch = tree->GetBranch("iFJ1jesAbsoluteStatdn");
  if (iFJ1jesAbsoluteStatdn_branch) iFJ1jesAbsoluteStatdn_branch->SetAddress(&iFJ1jesAbsoluteStatdn_);
  iFJ2jesAbsoluteStatdn_branch = tree->GetBranch("iFJ2jesAbsoluteStatdn");
  if (iFJ2jesAbsoluteStatdn_branch) iFJ2jesAbsoluteStatdn_branch->SetAddress(&iFJ2jesAbsoluteStatdn_);
  iFJ3jesAbsoluteStatdn_branch = tree->GetBranch("iFJ3jesAbsoluteStatdn");
  if (iFJ3jesAbsoluteStatdn_branch) iFJ3jesAbsoluteStatdn_branch->SetAddress(&iFJ3jesAbsoluteStatdn_);
  iFJ4jesAbsoluteStatdn_branch = tree->GetBranch("iFJ4jesAbsoluteStatdn");
  if (iFJ4jesAbsoluteStatdn_branch) iFJ4jesAbsoluteStatdn_branch->SetAddress(&iFJ4jesAbsoluteStatdn_);
  METjesAbsoluteStatdn_branch = tree->GetBranch("METjesAbsoluteStatdn");
  if (METjesAbsoluteStatdn_branch) METjesAbsoluteStatdn_branch->SetAddress(&METjesAbsoluteStatdn_);
  NujesAbsoluteStatdn_branch = tree->GetBranch("NujesAbsoluteStatdn");
  if (NujesAbsoluteStatdn_branch) NujesAbsoluteStatdn_branch->SetAddress(&NujesAbsoluteStatdn_);
  J0jesAbsoluteStatdn_branch = tree->GetBranch("J0jesAbsoluteStatdn");
  if (J0jesAbsoluteStatdn_branch) J0jesAbsoluteStatdn_branch->SetAddress(&J0jesAbsoluteStatdn_);
  J1jesAbsoluteStatdn_branch = tree->GetBranch("J1jesAbsoluteStatdn");
  if (J1jesAbsoluteStatdn_branch) J1jesAbsoluteStatdn_branch->SetAddress(&J1jesAbsoluteStatdn_);
  J2jesAbsoluteStatdn_branch = tree->GetBranch("J2jesAbsoluteStatdn");
  if (J2jesAbsoluteStatdn_branch) J2jesAbsoluteStatdn_branch->SetAddress(&J2jesAbsoluteStatdn_);
  J3jesAbsoluteStatdn_branch = tree->GetBranch("J3jesAbsoluteStatdn");
  if (J3jesAbsoluteStatdn_branch) J3jesAbsoluteStatdn_branch->SetAddress(&J3jesAbsoluteStatdn_);
  J4jesAbsoluteStatdn_branch = tree->GetBranch("J4jesAbsoluteStatdn");
  if (J4jesAbsoluteStatdn_branch) J4jesAbsoluteStatdn_branch->SetAddress(&J4jesAbsoluteStatdn_);
  J5jesAbsoluteStatdn_branch = tree->GetBranch("J5jesAbsoluteStatdn");
  if (J5jesAbsoluteStatdn_branch) J5jesAbsoluteStatdn_branch->SetAddress(&J5jesAbsoluteStatdn_);
  J6jesAbsoluteStatdn_branch = tree->GetBranch("J6jesAbsoluteStatdn");
  if (J6jesAbsoluteStatdn_branch) J6jesAbsoluteStatdn_branch->SetAddress(&J6jesAbsoluteStatdn_);
  J7jesAbsoluteStatdn_branch = tree->GetBranch("J7jesAbsoluteStatdn");
  if (J7jesAbsoluteStatdn_branch) J7jesAbsoluteStatdn_branch->SetAddress(&J7jesAbsoluteStatdn_);
  JsjesAbsoluteScaleup_branch = tree->GetBranch("JsjesAbsoluteScaleup");
  if (JsjesAbsoluteScaleup_branch) JsjesAbsoluteScaleup_branch->SetAddress(&JsjesAbsoluteScaleup_);
  FJ0jesAbsoluteScaleup_branch = tree->GetBranch("FJ0jesAbsoluteScaleup");
  if (FJ0jesAbsoluteScaleup_branch) FJ0jesAbsoluteScaleup_branch->SetAddress(&FJ0jesAbsoluteScaleup_);
  FJ1jesAbsoluteScaleup_branch = tree->GetBranch("FJ1jesAbsoluteScaleup");
  if (FJ1jesAbsoluteScaleup_branch) FJ1jesAbsoluteScaleup_branch->SetAddress(&FJ1jesAbsoluteScaleup_);
  FJ2jesAbsoluteScaleup_branch = tree->GetBranch("FJ2jesAbsoluteScaleup");
  if (FJ2jesAbsoluteScaleup_branch) FJ2jesAbsoluteScaleup_branch->SetAddress(&FJ2jesAbsoluteScaleup_);
  FJ3jesAbsoluteScaleup_branch = tree->GetBranch("FJ3jesAbsoluteScaleup");
  if (FJ3jesAbsoluteScaleup_branch) FJ3jesAbsoluteScaleup_branch->SetAddress(&FJ3jesAbsoluteScaleup_);
  FJ4jesAbsoluteScaleup_branch = tree->GetBranch("FJ4jesAbsoluteScaleup");
  if (FJ4jesAbsoluteScaleup_branch) FJ4jesAbsoluteScaleup_branch->SetAddress(&FJ4jesAbsoluteScaleup_);
  iFJ0jesAbsoluteScaleup_branch = tree->GetBranch("iFJ0jesAbsoluteScaleup");
  if (iFJ0jesAbsoluteScaleup_branch) iFJ0jesAbsoluteScaleup_branch->SetAddress(&iFJ0jesAbsoluteScaleup_);
  iFJ1jesAbsoluteScaleup_branch = tree->GetBranch("iFJ1jesAbsoluteScaleup");
  if (iFJ1jesAbsoluteScaleup_branch) iFJ1jesAbsoluteScaleup_branch->SetAddress(&iFJ1jesAbsoluteScaleup_);
  iFJ2jesAbsoluteScaleup_branch = tree->GetBranch("iFJ2jesAbsoluteScaleup");
  if (iFJ2jesAbsoluteScaleup_branch) iFJ2jesAbsoluteScaleup_branch->SetAddress(&iFJ2jesAbsoluteScaleup_);
  iFJ3jesAbsoluteScaleup_branch = tree->GetBranch("iFJ3jesAbsoluteScaleup");
  if (iFJ3jesAbsoluteScaleup_branch) iFJ3jesAbsoluteScaleup_branch->SetAddress(&iFJ3jesAbsoluteScaleup_);
  iFJ4jesAbsoluteScaleup_branch = tree->GetBranch("iFJ4jesAbsoluteScaleup");
  if (iFJ4jesAbsoluteScaleup_branch) iFJ4jesAbsoluteScaleup_branch->SetAddress(&iFJ4jesAbsoluteScaleup_);
  METjesAbsoluteScaleup_branch = tree->GetBranch("METjesAbsoluteScaleup");
  if (METjesAbsoluteScaleup_branch) METjesAbsoluteScaleup_branch->SetAddress(&METjesAbsoluteScaleup_);
  NujesAbsoluteScaleup_branch = tree->GetBranch("NujesAbsoluteScaleup");
  if (NujesAbsoluteScaleup_branch) NujesAbsoluteScaleup_branch->SetAddress(&NujesAbsoluteScaleup_);
  J0jesAbsoluteScaleup_branch = tree->GetBranch("J0jesAbsoluteScaleup");
  if (J0jesAbsoluteScaleup_branch) J0jesAbsoluteScaleup_branch->SetAddress(&J0jesAbsoluteScaleup_);
  J1jesAbsoluteScaleup_branch = tree->GetBranch("J1jesAbsoluteScaleup");
  if (J1jesAbsoluteScaleup_branch) J1jesAbsoluteScaleup_branch->SetAddress(&J1jesAbsoluteScaleup_);
  J2jesAbsoluteScaleup_branch = tree->GetBranch("J2jesAbsoluteScaleup");
  if (J2jesAbsoluteScaleup_branch) J2jesAbsoluteScaleup_branch->SetAddress(&J2jesAbsoluteScaleup_);
  J3jesAbsoluteScaleup_branch = tree->GetBranch("J3jesAbsoluteScaleup");
  if (J3jesAbsoluteScaleup_branch) J3jesAbsoluteScaleup_branch->SetAddress(&J3jesAbsoluteScaleup_);
  J4jesAbsoluteScaleup_branch = tree->GetBranch("J4jesAbsoluteScaleup");
  if (J4jesAbsoluteScaleup_branch) J4jesAbsoluteScaleup_branch->SetAddress(&J4jesAbsoluteScaleup_);
  J5jesAbsoluteScaleup_branch = tree->GetBranch("J5jesAbsoluteScaleup");
  if (J5jesAbsoluteScaleup_branch) J5jesAbsoluteScaleup_branch->SetAddress(&J5jesAbsoluteScaleup_);
  J6jesAbsoluteScaleup_branch = tree->GetBranch("J6jesAbsoluteScaleup");
  if (J6jesAbsoluteScaleup_branch) J6jesAbsoluteScaleup_branch->SetAddress(&J6jesAbsoluteScaleup_);
  J7jesAbsoluteScaleup_branch = tree->GetBranch("J7jesAbsoluteScaleup");
  if (J7jesAbsoluteScaleup_branch) J7jesAbsoluteScaleup_branch->SetAddress(&J7jesAbsoluteScaleup_);
  JsjesAbsoluteScaledn_branch = tree->GetBranch("JsjesAbsoluteScaledn");
  if (JsjesAbsoluteScaledn_branch) JsjesAbsoluteScaledn_branch->SetAddress(&JsjesAbsoluteScaledn_);
  FJ0jesAbsoluteScaledn_branch = tree->GetBranch("FJ0jesAbsoluteScaledn");
  if (FJ0jesAbsoluteScaledn_branch) FJ0jesAbsoluteScaledn_branch->SetAddress(&FJ0jesAbsoluteScaledn_);
  FJ1jesAbsoluteScaledn_branch = tree->GetBranch("FJ1jesAbsoluteScaledn");
  if (FJ1jesAbsoluteScaledn_branch) FJ1jesAbsoluteScaledn_branch->SetAddress(&FJ1jesAbsoluteScaledn_);
  FJ2jesAbsoluteScaledn_branch = tree->GetBranch("FJ2jesAbsoluteScaledn");
  if (FJ2jesAbsoluteScaledn_branch) FJ2jesAbsoluteScaledn_branch->SetAddress(&FJ2jesAbsoluteScaledn_);
  FJ3jesAbsoluteScaledn_branch = tree->GetBranch("FJ3jesAbsoluteScaledn");
  if (FJ3jesAbsoluteScaledn_branch) FJ3jesAbsoluteScaledn_branch->SetAddress(&FJ3jesAbsoluteScaledn_);
  FJ4jesAbsoluteScaledn_branch = tree->GetBranch("FJ4jesAbsoluteScaledn");
  if (FJ4jesAbsoluteScaledn_branch) FJ4jesAbsoluteScaledn_branch->SetAddress(&FJ4jesAbsoluteScaledn_);
  iFJ0jesAbsoluteScaledn_branch = tree->GetBranch("iFJ0jesAbsoluteScaledn");
  if (iFJ0jesAbsoluteScaledn_branch) iFJ0jesAbsoluteScaledn_branch->SetAddress(&iFJ0jesAbsoluteScaledn_);
  iFJ1jesAbsoluteScaledn_branch = tree->GetBranch("iFJ1jesAbsoluteScaledn");
  if (iFJ1jesAbsoluteScaledn_branch) iFJ1jesAbsoluteScaledn_branch->SetAddress(&iFJ1jesAbsoluteScaledn_);
  iFJ2jesAbsoluteScaledn_branch = tree->GetBranch("iFJ2jesAbsoluteScaledn");
  if (iFJ2jesAbsoluteScaledn_branch) iFJ2jesAbsoluteScaledn_branch->SetAddress(&iFJ2jesAbsoluteScaledn_);
  iFJ3jesAbsoluteScaledn_branch = tree->GetBranch("iFJ3jesAbsoluteScaledn");
  if (iFJ3jesAbsoluteScaledn_branch) iFJ3jesAbsoluteScaledn_branch->SetAddress(&iFJ3jesAbsoluteScaledn_);
  iFJ4jesAbsoluteScaledn_branch = tree->GetBranch("iFJ4jesAbsoluteScaledn");
  if (iFJ4jesAbsoluteScaledn_branch) iFJ4jesAbsoluteScaledn_branch->SetAddress(&iFJ4jesAbsoluteScaledn_);
  METjesAbsoluteScaledn_branch = tree->GetBranch("METjesAbsoluteScaledn");
  if (METjesAbsoluteScaledn_branch) METjesAbsoluteScaledn_branch->SetAddress(&METjesAbsoluteScaledn_);
  NujesAbsoluteScaledn_branch = tree->GetBranch("NujesAbsoluteScaledn");
  if (NujesAbsoluteScaledn_branch) NujesAbsoluteScaledn_branch->SetAddress(&NujesAbsoluteScaledn_);
  J0jesAbsoluteScaledn_branch = tree->GetBranch("J0jesAbsoluteScaledn");
  if (J0jesAbsoluteScaledn_branch) J0jesAbsoluteScaledn_branch->SetAddress(&J0jesAbsoluteScaledn_);
  J1jesAbsoluteScaledn_branch = tree->GetBranch("J1jesAbsoluteScaledn");
  if (J1jesAbsoluteScaledn_branch) J1jesAbsoluteScaledn_branch->SetAddress(&J1jesAbsoluteScaledn_);
  J2jesAbsoluteScaledn_branch = tree->GetBranch("J2jesAbsoluteScaledn");
  if (J2jesAbsoluteScaledn_branch) J2jesAbsoluteScaledn_branch->SetAddress(&J2jesAbsoluteScaledn_);
  J3jesAbsoluteScaledn_branch = tree->GetBranch("J3jesAbsoluteScaledn");
  if (J3jesAbsoluteScaledn_branch) J3jesAbsoluteScaledn_branch->SetAddress(&J3jesAbsoluteScaledn_);
  J4jesAbsoluteScaledn_branch = tree->GetBranch("J4jesAbsoluteScaledn");
  if (J4jesAbsoluteScaledn_branch) J4jesAbsoluteScaledn_branch->SetAddress(&J4jesAbsoluteScaledn_);
  J5jesAbsoluteScaledn_branch = tree->GetBranch("J5jesAbsoluteScaledn");
  if (J5jesAbsoluteScaledn_branch) J5jesAbsoluteScaledn_branch->SetAddress(&J5jesAbsoluteScaledn_);
  J6jesAbsoluteScaledn_branch = tree->GetBranch("J6jesAbsoluteScaledn");
  if (J6jesAbsoluteScaledn_branch) J6jesAbsoluteScaledn_branch->SetAddress(&J6jesAbsoluteScaledn_);
  J7jesAbsoluteScaledn_branch = tree->GetBranch("J7jesAbsoluteScaledn");
  if (J7jesAbsoluteScaledn_branch) J7jesAbsoluteScaledn_branch->SetAddress(&J7jesAbsoluteScaledn_);
  JsjesAbsoluteMPFBiasup_branch = tree->GetBranch("JsjesAbsoluteMPFBiasup");
  if (JsjesAbsoluteMPFBiasup_branch) JsjesAbsoluteMPFBiasup_branch->SetAddress(&JsjesAbsoluteMPFBiasup_);
  FJ0jesAbsoluteMPFBiasup_branch = tree->GetBranch("FJ0jesAbsoluteMPFBiasup");
  if (FJ0jesAbsoluteMPFBiasup_branch) FJ0jesAbsoluteMPFBiasup_branch->SetAddress(&FJ0jesAbsoluteMPFBiasup_);
  FJ1jesAbsoluteMPFBiasup_branch = tree->GetBranch("FJ1jesAbsoluteMPFBiasup");
  if (FJ1jesAbsoluteMPFBiasup_branch) FJ1jesAbsoluteMPFBiasup_branch->SetAddress(&FJ1jesAbsoluteMPFBiasup_);
  FJ2jesAbsoluteMPFBiasup_branch = tree->GetBranch("FJ2jesAbsoluteMPFBiasup");
  if (FJ2jesAbsoluteMPFBiasup_branch) FJ2jesAbsoluteMPFBiasup_branch->SetAddress(&FJ2jesAbsoluteMPFBiasup_);
  FJ3jesAbsoluteMPFBiasup_branch = tree->GetBranch("FJ3jesAbsoluteMPFBiasup");
  if (FJ3jesAbsoluteMPFBiasup_branch) FJ3jesAbsoluteMPFBiasup_branch->SetAddress(&FJ3jesAbsoluteMPFBiasup_);
  FJ4jesAbsoluteMPFBiasup_branch = tree->GetBranch("FJ4jesAbsoluteMPFBiasup");
  if (FJ4jesAbsoluteMPFBiasup_branch) FJ4jesAbsoluteMPFBiasup_branch->SetAddress(&FJ4jesAbsoluteMPFBiasup_);
  iFJ0jesAbsoluteMPFBiasup_branch = tree->GetBranch("iFJ0jesAbsoluteMPFBiasup");
  if (iFJ0jesAbsoluteMPFBiasup_branch) iFJ0jesAbsoluteMPFBiasup_branch->SetAddress(&iFJ0jesAbsoluteMPFBiasup_);
  iFJ1jesAbsoluteMPFBiasup_branch = tree->GetBranch("iFJ1jesAbsoluteMPFBiasup");
  if (iFJ1jesAbsoluteMPFBiasup_branch) iFJ1jesAbsoluteMPFBiasup_branch->SetAddress(&iFJ1jesAbsoluteMPFBiasup_);
  iFJ2jesAbsoluteMPFBiasup_branch = tree->GetBranch("iFJ2jesAbsoluteMPFBiasup");
  if (iFJ2jesAbsoluteMPFBiasup_branch) iFJ2jesAbsoluteMPFBiasup_branch->SetAddress(&iFJ2jesAbsoluteMPFBiasup_);
  iFJ3jesAbsoluteMPFBiasup_branch = tree->GetBranch("iFJ3jesAbsoluteMPFBiasup");
  if (iFJ3jesAbsoluteMPFBiasup_branch) iFJ3jesAbsoluteMPFBiasup_branch->SetAddress(&iFJ3jesAbsoluteMPFBiasup_);
  iFJ4jesAbsoluteMPFBiasup_branch = tree->GetBranch("iFJ4jesAbsoluteMPFBiasup");
  if (iFJ4jesAbsoluteMPFBiasup_branch) iFJ4jesAbsoluteMPFBiasup_branch->SetAddress(&iFJ4jesAbsoluteMPFBiasup_);
  METjesAbsoluteMPFBiasup_branch = tree->GetBranch("METjesAbsoluteMPFBiasup");
  if (METjesAbsoluteMPFBiasup_branch) METjesAbsoluteMPFBiasup_branch->SetAddress(&METjesAbsoluteMPFBiasup_);
  NujesAbsoluteMPFBiasup_branch = tree->GetBranch("NujesAbsoluteMPFBiasup");
  if (NujesAbsoluteMPFBiasup_branch) NujesAbsoluteMPFBiasup_branch->SetAddress(&NujesAbsoluteMPFBiasup_);
  J0jesAbsoluteMPFBiasup_branch = tree->GetBranch("J0jesAbsoluteMPFBiasup");
  if (J0jesAbsoluteMPFBiasup_branch) J0jesAbsoluteMPFBiasup_branch->SetAddress(&J0jesAbsoluteMPFBiasup_);
  J1jesAbsoluteMPFBiasup_branch = tree->GetBranch("J1jesAbsoluteMPFBiasup");
  if (J1jesAbsoluteMPFBiasup_branch) J1jesAbsoluteMPFBiasup_branch->SetAddress(&J1jesAbsoluteMPFBiasup_);
  J2jesAbsoluteMPFBiasup_branch = tree->GetBranch("J2jesAbsoluteMPFBiasup");
  if (J2jesAbsoluteMPFBiasup_branch) J2jesAbsoluteMPFBiasup_branch->SetAddress(&J2jesAbsoluteMPFBiasup_);
  J3jesAbsoluteMPFBiasup_branch = tree->GetBranch("J3jesAbsoluteMPFBiasup");
  if (J3jesAbsoluteMPFBiasup_branch) J3jesAbsoluteMPFBiasup_branch->SetAddress(&J3jesAbsoluteMPFBiasup_);
  J4jesAbsoluteMPFBiasup_branch = tree->GetBranch("J4jesAbsoluteMPFBiasup");
  if (J4jesAbsoluteMPFBiasup_branch) J4jesAbsoluteMPFBiasup_branch->SetAddress(&J4jesAbsoluteMPFBiasup_);
  J5jesAbsoluteMPFBiasup_branch = tree->GetBranch("J5jesAbsoluteMPFBiasup");
  if (J5jesAbsoluteMPFBiasup_branch) J5jesAbsoluteMPFBiasup_branch->SetAddress(&J5jesAbsoluteMPFBiasup_);
  J6jesAbsoluteMPFBiasup_branch = tree->GetBranch("J6jesAbsoluteMPFBiasup");
  if (J6jesAbsoluteMPFBiasup_branch) J6jesAbsoluteMPFBiasup_branch->SetAddress(&J6jesAbsoluteMPFBiasup_);
  J7jesAbsoluteMPFBiasup_branch = tree->GetBranch("J7jesAbsoluteMPFBiasup");
  if (J7jesAbsoluteMPFBiasup_branch) J7jesAbsoluteMPFBiasup_branch->SetAddress(&J7jesAbsoluteMPFBiasup_);
  JsjesAbsoluteMPFBiasdn_branch = tree->GetBranch("JsjesAbsoluteMPFBiasdn");
  if (JsjesAbsoluteMPFBiasdn_branch) JsjesAbsoluteMPFBiasdn_branch->SetAddress(&JsjesAbsoluteMPFBiasdn_);
  FJ0jesAbsoluteMPFBiasdn_branch = tree->GetBranch("FJ0jesAbsoluteMPFBiasdn");
  if (FJ0jesAbsoluteMPFBiasdn_branch) FJ0jesAbsoluteMPFBiasdn_branch->SetAddress(&FJ0jesAbsoluteMPFBiasdn_);
  FJ1jesAbsoluteMPFBiasdn_branch = tree->GetBranch("FJ1jesAbsoluteMPFBiasdn");
  if (FJ1jesAbsoluteMPFBiasdn_branch) FJ1jesAbsoluteMPFBiasdn_branch->SetAddress(&FJ1jesAbsoluteMPFBiasdn_);
  FJ2jesAbsoluteMPFBiasdn_branch = tree->GetBranch("FJ2jesAbsoluteMPFBiasdn");
  if (FJ2jesAbsoluteMPFBiasdn_branch) FJ2jesAbsoluteMPFBiasdn_branch->SetAddress(&FJ2jesAbsoluteMPFBiasdn_);
  FJ3jesAbsoluteMPFBiasdn_branch = tree->GetBranch("FJ3jesAbsoluteMPFBiasdn");
  if (FJ3jesAbsoluteMPFBiasdn_branch) FJ3jesAbsoluteMPFBiasdn_branch->SetAddress(&FJ3jesAbsoluteMPFBiasdn_);
  FJ4jesAbsoluteMPFBiasdn_branch = tree->GetBranch("FJ4jesAbsoluteMPFBiasdn");
  if (FJ4jesAbsoluteMPFBiasdn_branch) FJ4jesAbsoluteMPFBiasdn_branch->SetAddress(&FJ4jesAbsoluteMPFBiasdn_);
  iFJ0jesAbsoluteMPFBiasdn_branch = tree->GetBranch("iFJ0jesAbsoluteMPFBiasdn");
  if (iFJ0jesAbsoluteMPFBiasdn_branch) iFJ0jesAbsoluteMPFBiasdn_branch->SetAddress(&iFJ0jesAbsoluteMPFBiasdn_);
  iFJ1jesAbsoluteMPFBiasdn_branch = tree->GetBranch("iFJ1jesAbsoluteMPFBiasdn");
  if (iFJ1jesAbsoluteMPFBiasdn_branch) iFJ1jesAbsoluteMPFBiasdn_branch->SetAddress(&iFJ1jesAbsoluteMPFBiasdn_);
  iFJ2jesAbsoluteMPFBiasdn_branch = tree->GetBranch("iFJ2jesAbsoluteMPFBiasdn");
  if (iFJ2jesAbsoluteMPFBiasdn_branch) iFJ2jesAbsoluteMPFBiasdn_branch->SetAddress(&iFJ2jesAbsoluteMPFBiasdn_);
  iFJ3jesAbsoluteMPFBiasdn_branch = tree->GetBranch("iFJ3jesAbsoluteMPFBiasdn");
  if (iFJ3jesAbsoluteMPFBiasdn_branch) iFJ3jesAbsoluteMPFBiasdn_branch->SetAddress(&iFJ3jesAbsoluteMPFBiasdn_);
  iFJ4jesAbsoluteMPFBiasdn_branch = tree->GetBranch("iFJ4jesAbsoluteMPFBiasdn");
  if (iFJ4jesAbsoluteMPFBiasdn_branch) iFJ4jesAbsoluteMPFBiasdn_branch->SetAddress(&iFJ4jesAbsoluteMPFBiasdn_);
  METjesAbsoluteMPFBiasdn_branch = tree->GetBranch("METjesAbsoluteMPFBiasdn");
  if (METjesAbsoluteMPFBiasdn_branch) METjesAbsoluteMPFBiasdn_branch->SetAddress(&METjesAbsoluteMPFBiasdn_);
  NujesAbsoluteMPFBiasdn_branch = tree->GetBranch("NujesAbsoluteMPFBiasdn");
  if (NujesAbsoluteMPFBiasdn_branch) NujesAbsoluteMPFBiasdn_branch->SetAddress(&NujesAbsoluteMPFBiasdn_);
  J0jesAbsoluteMPFBiasdn_branch = tree->GetBranch("J0jesAbsoluteMPFBiasdn");
  if (J0jesAbsoluteMPFBiasdn_branch) J0jesAbsoluteMPFBiasdn_branch->SetAddress(&J0jesAbsoluteMPFBiasdn_);
  J1jesAbsoluteMPFBiasdn_branch = tree->GetBranch("J1jesAbsoluteMPFBiasdn");
  if (J1jesAbsoluteMPFBiasdn_branch) J1jesAbsoluteMPFBiasdn_branch->SetAddress(&J1jesAbsoluteMPFBiasdn_);
  J2jesAbsoluteMPFBiasdn_branch = tree->GetBranch("J2jesAbsoluteMPFBiasdn");
  if (J2jesAbsoluteMPFBiasdn_branch) J2jesAbsoluteMPFBiasdn_branch->SetAddress(&J2jesAbsoluteMPFBiasdn_);
  J3jesAbsoluteMPFBiasdn_branch = tree->GetBranch("J3jesAbsoluteMPFBiasdn");
  if (J3jesAbsoluteMPFBiasdn_branch) J3jesAbsoluteMPFBiasdn_branch->SetAddress(&J3jesAbsoluteMPFBiasdn_);
  J4jesAbsoluteMPFBiasdn_branch = tree->GetBranch("J4jesAbsoluteMPFBiasdn");
  if (J4jesAbsoluteMPFBiasdn_branch) J4jesAbsoluteMPFBiasdn_branch->SetAddress(&J4jesAbsoluteMPFBiasdn_);
  J5jesAbsoluteMPFBiasdn_branch = tree->GetBranch("J5jesAbsoluteMPFBiasdn");
  if (J5jesAbsoluteMPFBiasdn_branch) J5jesAbsoluteMPFBiasdn_branch->SetAddress(&J5jesAbsoluteMPFBiasdn_);
  J6jesAbsoluteMPFBiasdn_branch = tree->GetBranch("J6jesAbsoluteMPFBiasdn");
  if (J6jesAbsoluteMPFBiasdn_branch) J6jesAbsoluteMPFBiasdn_branch->SetAddress(&J6jesAbsoluteMPFBiasdn_);
  J7jesAbsoluteMPFBiasdn_branch = tree->GetBranch("J7jesAbsoluteMPFBiasdn");
  if (J7jesAbsoluteMPFBiasdn_branch) J7jesAbsoluteMPFBiasdn_branch->SetAddress(&J7jesAbsoluteMPFBiasdn_);
  JsjesFragmentationup_branch = tree->GetBranch("JsjesFragmentationup");
  if (JsjesFragmentationup_branch) JsjesFragmentationup_branch->SetAddress(&JsjesFragmentationup_);
  FJ0jesFragmentationup_branch = tree->GetBranch("FJ0jesFragmentationup");
  if (FJ0jesFragmentationup_branch) FJ0jesFragmentationup_branch->SetAddress(&FJ0jesFragmentationup_);
  FJ1jesFragmentationup_branch = tree->GetBranch("FJ1jesFragmentationup");
  if (FJ1jesFragmentationup_branch) FJ1jesFragmentationup_branch->SetAddress(&FJ1jesFragmentationup_);
  FJ2jesFragmentationup_branch = tree->GetBranch("FJ2jesFragmentationup");
  if (FJ2jesFragmentationup_branch) FJ2jesFragmentationup_branch->SetAddress(&FJ2jesFragmentationup_);
  FJ3jesFragmentationup_branch = tree->GetBranch("FJ3jesFragmentationup");
  if (FJ3jesFragmentationup_branch) FJ3jesFragmentationup_branch->SetAddress(&FJ3jesFragmentationup_);
  FJ4jesFragmentationup_branch = tree->GetBranch("FJ4jesFragmentationup");
  if (FJ4jesFragmentationup_branch) FJ4jesFragmentationup_branch->SetAddress(&FJ4jesFragmentationup_);
  iFJ0jesFragmentationup_branch = tree->GetBranch("iFJ0jesFragmentationup");
  if (iFJ0jesFragmentationup_branch) iFJ0jesFragmentationup_branch->SetAddress(&iFJ0jesFragmentationup_);
  iFJ1jesFragmentationup_branch = tree->GetBranch("iFJ1jesFragmentationup");
  if (iFJ1jesFragmentationup_branch) iFJ1jesFragmentationup_branch->SetAddress(&iFJ1jesFragmentationup_);
  iFJ2jesFragmentationup_branch = tree->GetBranch("iFJ2jesFragmentationup");
  if (iFJ2jesFragmentationup_branch) iFJ2jesFragmentationup_branch->SetAddress(&iFJ2jesFragmentationup_);
  iFJ3jesFragmentationup_branch = tree->GetBranch("iFJ3jesFragmentationup");
  if (iFJ3jesFragmentationup_branch) iFJ3jesFragmentationup_branch->SetAddress(&iFJ3jesFragmentationup_);
  iFJ4jesFragmentationup_branch = tree->GetBranch("iFJ4jesFragmentationup");
  if (iFJ4jesFragmentationup_branch) iFJ4jesFragmentationup_branch->SetAddress(&iFJ4jesFragmentationup_);
  METjesFragmentationup_branch = tree->GetBranch("METjesFragmentationup");
  if (METjesFragmentationup_branch) METjesFragmentationup_branch->SetAddress(&METjesFragmentationup_);
  NujesFragmentationup_branch = tree->GetBranch("NujesFragmentationup");
  if (NujesFragmentationup_branch) NujesFragmentationup_branch->SetAddress(&NujesFragmentationup_);
  J0jesFragmentationup_branch = tree->GetBranch("J0jesFragmentationup");
  if (J0jesFragmentationup_branch) J0jesFragmentationup_branch->SetAddress(&J0jesFragmentationup_);
  J1jesFragmentationup_branch = tree->GetBranch("J1jesFragmentationup");
  if (J1jesFragmentationup_branch) J1jesFragmentationup_branch->SetAddress(&J1jesFragmentationup_);
  J2jesFragmentationup_branch = tree->GetBranch("J2jesFragmentationup");
  if (J2jesFragmentationup_branch) J2jesFragmentationup_branch->SetAddress(&J2jesFragmentationup_);
  J3jesFragmentationup_branch = tree->GetBranch("J3jesFragmentationup");
  if (J3jesFragmentationup_branch) J3jesFragmentationup_branch->SetAddress(&J3jesFragmentationup_);
  J4jesFragmentationup_branch = tree->GetBranch("J4jesFragmentationup");
  if (J4jesFragmentationup_branch) J4jesFragmentationup_branch->SetAddress(&J4jesFragmentationup_);
  J5jesFragmentationup_branch = tree->GetBranch("J5jesFragmentationup");
  if (J5jesFragmentationup_branch) J5jesFragmentationup_branch->SetAddress(&J5jesFragmentationup_);
  J6jesFragmentationup_branch = tree->GetBranch("J6jesFragmentationup");
  if (J6jesFragmentationup_branch) J6jesFragmentationup_branch->SetAddress(&J6jesFragmentationup_);
  J7jesFragmentationup_branch = tree->GetBranch("J7jesFragmentationup");
  if (J7jesFragmentationup_branch) J7jesFragmentationup_branch->SetAddress(&J7jesFragmentationup_);
  JsjesFragmentationdn_branch = tree->GetBranch("JsjesFragmentationdn");
  if (JsjesFragmentationdn_branch) JsjesFragmentationdn_branch->SetAddress(&JsjesFragmentationdn_);
  FJ0jesFragmentationdn_branch = tree->GetBranch("FJ0jesFragmentationdn");
  if (FJ0jesFragmentationdn_branch) FJ0jesFragmentationdn_branch->SetAddress(&FJ0jesFragmentationdn_);
  FJ1jesFragmentationdn_branch = tree->GetBranch("FJ1jesFragmentationdn");
  if (FJ1jesFragmentationdn_branch) FJ1jesFragmentationdn_branch->SetAddress(&FJ1jesFragmentationdn_);
  FJ2jesFragmentationdn_branch = tree->GetBranch("FJ2jesFragmentationdn");
  if (FJ2jesFragmentationdn_branch) FJ2jesFragmentationdn_branch->SetAddress(&FJ2jesFragmentationdn_);
  FJ3jesFragmentationdn_branch = tree->GetBranch("FJ3jesFragmentationdn");
  if (FJ3jesFragmentationdn_branch) FJ3jesFragmentationdn_branch->SetAddress(&FJ3jesFragmentationdn_);
  FJ4jesFragmentationdn_branch = tree->GetBranch("FJ4jesFragmentationdn");
  if (FJ4jesFragmentationdn_branch) FJ4jesFragmentationdn_branch->SetAddress(&FJ4jesFragmentationdn_);
  iFJ0jesFragmentationdn_branch = tree->GetBranch("iFJ0jesFragmentationdn");
  if (iFJ0jesFragmentationdn_branch) iFJ0jesFragmentationdn_branch->SetAddress(&iFJ0jesFragmentationdn_);
  iFJ1jesFragmentationdn_branch = tree->GetBranch("iFJ1jesFragmentationdn");
  if (iFJ1jesFragmentationdn_branch) iFJ1jesFragmentationdn_branch->SetAddress(&iFJ1jesFragmentationdn_);
  iFJ2jesFragmentationdn_branch = tree->GetBranch("iFJ2jesFragmentationdn");
  if (iFJ2jesFragmentationdn_branch) iFJ2jesFragmentationdn_branch->SetAddress(&iFJ2jesFragmentationdn_);
  iFJ3jesFragmentationdn_branch = tree->GetBranch("iFJ3jesFragmentationdn");
  if (iFJ3jesFragmentationdn_branch) iFJ3jesFragmentationdn_branch->SetAddress(&iFJ3jesFragmentationdn_);
  iFJ4jesFragmentationdn_branch = tree->GetBranch("iFJ4jesFragmentationdn");
  if (iFJ4jesFragmentationdn_branch) iFJ4jesFragmentationdn_branch->SetAddress(&iFJ4jesFragmentationdn_);
  METjesFragmentationdn_branch = tree->GetBranch("METjesFragmentationdn");
  if (METjesFragmentationdn_branch) METjesFragmentationdn_branch->SetAddress(&METjesFragmentationdn_);
  NujesFragmentationdn_branch = tree->GetBranch("NujesFragmentationdn");
  if (NujesFragmentationdn_branch) NujesFragmentationdn_branch->SetAddress(&NujesFragmentationdn_);
  J0jesFragmentationdn_branch = tree->GetBranch("J0jesFragmentationdn");
  if (J0jesFragmentationdn_branch) J0jesFragmentationdn_branch->SetAddress(&J0jesFragmentationdn_);
  J1jesFragmentationdn_branch = tree->GetBranch("J1jesFragmentationdn");
  if (J1jesFragmentationdn_branch) J1jesFragmentationdn_branch->SetAddress(&J1jesFragmentationdn_);
  J2jesFragmentationdn_branch = tree->GetBranch("J2jesFragmentationdn");
  if (J2jesFragmentationdn_branch) J2jesFragmentationdn_branch->SetAddress(&J2jesFragmentationdn_);
  J3jesFragmentationdn_branch = tree->GetBranch("J3jesFragmentationdn");
  if (J3jesFragmentationdn_branch) J3jesFragmentationdn_branch->SetAddress(&J3jesFragmentationdn_);
  J4jesFragmentationdn_branch = tree->GetBranch("J4jesFragmentationdn");
  if (J4jesFragmentationdn_branch) J4jesFragmentationdn_branch->SetAddress(&J4jesFragmentationdn_);
  J5jesFragmentationdn_branch = tree->GetBranch("J5jesFragmentationdn");
  if (J5jesFragmentationdn_branch) J5jesFragmentationdn_branch->SetAddress(&J5jesFragmentationdn_);
  J6jesFragmentationdn_branch = tree->GetBranch("J6jesFragmentationdn");
  if (J6jesFragmentationdn_branch) J6jesFragmentationdn_branch->SetAddress(&J6jesFragmentationdn_);
  J7jesFragmentationdn_branch = tree->GetBranch("J7jesFragmentationdn");
  if (J7jesFragmentationdn_branch) J7jesFragmentationdn_branch->SetAddress(&J7jesFragmentationdn_);
  JsjesSinglePionECALup_branch = tree->GetBranch("JsjesSinglePionECALup");
  if (JsjesSinglePionECALup_branch) JsjesSinglePionECALup_branch->SetAddress(&JsjesSinglePionECALup_);
  FJ0jesSinglePionECALup_branch = tree->GetBranch("FJ0jesSinglePionECALup");
  if (FJ0jesSinglePionECALup_branch) FJ0jesSinglePionECALup_branch->SetAddress(&FJ0jesSinglePionECALup_);
  FJ1jesSinglePionECALup_branch = tree->GetBranch("FJ1jesSinglePionECALup");
  if (FJ1jesSinglePionECALup_branch) FJ1jesSinglePionECALup_branch->SetAddress(&FJ1jesSinglePionECALup_);
  FJ2jesSinglePionECALup_branch = tree->GetBranch("FJ2jesSinglePionECALup");
  if (FJ2jesSinglePionECALup_branch) FJ2jesSinglePionECALup_branch->SetAddress(&FJ2jesSinglePionECALup_);
  FJ3jesSinglePionECALup_branch = tree->GetBranch("FJ3jesSinglePionECALup");
  if (FJ3jesSinglePionECALup_branch) FJ3jesSinglePionECALup_branch->SetAddress(&FJ3jesSinglePionECALup_);
  FJ4jesSinglePionECALup_branch = tree->GetBranch("FJ4jesSinglePionECALup");
  if (FJ4jesSinglePionECALup_branch) FJ4jesSinglePionECALup_branch->SetAddress(&FJ4jesSinglePionECALup_);
  iFJ0jesSinglePionECALup_branch = tree->GetBranch("iFJ0jesSinglePionECALup");
  if (iFJ0jesSinglePionECALup_branch) iFJ0jesSinglePionECALup_branch->SetAddress(&iFJ0jesSinglePionECALup_);
  iFJ1jesSinglePionECALup_branch = tree->GetBranch("iFJ1jesSinglePionECALup");
  if (iFJ1jesSinglePionECALup_branch) iFJ1jesSinglePionECALup_branch->SetAddress(&iFJ1jesSinglePionECALup_);
  iFJ2jesSinglePionECALup_branch = tree->GetBranch("iFJ2jesSinglePionECALup");
  if (iFJ2jesSinglePionECALup_branch) iFJ2jesSinglePionECALup_branch->SetAddress(&iFJ2jesSinglePionECALup_);
  iFJ3jesSinglePionECALup_branch = tree->GetBranch("iFJ3jesSinglePionECALup");
  if (iFJ3jesSinglePionECALup_branch) iFJ3jesSinglePionECALup_branch->SetAddress(&iFJ3jesSinglePionECALup_);
  iFJ4jesSinglePionECALup_branch = tree->GetBranch("iFJ4jesSinglePionECALup");
  if (iFJ4jesSinglePionECALup_branch) iFJ4jesSinglePionECALup_branch->SetAddress(&iFJ4jesSinglePionECALup_);
  METjesSinglePionECALup_branch = tree->GetBranch("METjesSinglePionECALup");
  if (METjesSinglePionECALup_branch) METjesSinglePionECALup_branch->SetAddress(&METjesSinglePionECALup_);
  NujesSinglePionECALup_branch = tree->GetBranch("NujesSinglePionECALup");
  if (NujesSinglePionECALup_branch) NujesSinglePionECALup_branch->SetAddress(&NujesSinglePionECALup_);
  J0jesSinglePionECALup_branch = tree->GetBranch("J0jesSinglePionECALup");
  if (J0jesSinglePionECALup_branch) J0jesSinglePionECALup_branch->SetAddress(&J0jesSinglePionECALup_);
  J1jesSinglePionECALup_branch = tree->GetBranch("J1jesSinglePionECALup");
  if (J1jesSinglePionECALup_branch) J1jesSinglePionECALup_branch->SetAddress(&J1jesSinglePionECALup_);
  J2jesSinglePionECALup_branch = tree->GetBranch("J2jesSinglePionECALup");
  if (J2jesSinglePionECALup_branch) J2jesSinglePionECALup_branch->SetAddress(&J2jesSinglePionECALup_);
  J3jesSinglePionECALup_branch = tree->GetBranch("J3jesSinglePionECALup");
  if (J3jesSinglePionECALup_branch) J3jesSinglePionECALup_branch->SetAddress(&J3jesSinglePionECALup_);
  J4jesSinglePionECALup_branch = tree->GetBranch("J4jesSinglePionECALup");
  if (J4jesSinglePionECALup_branch) J4jesSinglePionECALup_branch->SetAddress(&J4jesSinglePionECALup_);
  J5jesSinglePionECALup_branch = tree->GetBranch("J5jesSinglePionECALup");
  if (J5jesSinglePionECALup_branch) J5jesSinglePionECALup_branch->SetAddress(&J5jesSinglePionECALup_);
  J6jesSinglePionECALup_branch = tree->GetBranch("J6jesSinglePionECALup");
  if (J6jesSinglePionECALup_branch) J6jesSinglePionECALup_branch->SetAddress(&J6jesSinglePionECALup_);
  J7jesSinglePionECALup_branch = tree->GetBranch("J7jesSinglePionECALup");
  if (J7jesSinglePionECALup_branch) J7jesSinglePionECALup_branch->SetAddress(&J7jesSinglePionECALup_);
  JsjesSinglePionECALdn_branch = tree->GetBranch("JsjesSinglePionECALdn");
  if (JsjesSinglePionECALdn_branch) JsjesSinglePionECALdn_branch->SetAddress(&JsjesSinglePionECALdn_);
  FJ0jesSinglePionECALdn_branch = tree->GetBranch("FJ0jesSinglePionECALdn");
  if (FJ0jesSinglePionECALdn_branch) FJ0jesSinglePionECALdn_branch->SetAddress(&FJ0jesSinglePionECALdn_);
  FJ1jesSinglePionECALdn_branch = tree->GetBranch("FJ1jesSinglePionECALdn");
  if (FJ1jesSinglePionECALdn_branch) FJ1jesSinglePionECALdn_branch->SetAddress(&FJ1jesSinglePionECALdn_);
  FJ2jesSinglePionECALdn_branch = tree->GetBranch("FJ2jesSinglePionECALdn");
  if (FJ2jesSinglePionECALdn_branch) FJ2jesSinglePionECALdn_branch->SetAddress(&FJ2jesSinglePionECALdn_);
  FJ3jesSinglePionECALdn_branch = tree->GetBranch("FJ3jesSinglePionECALdn");
  if (FJ3jesSinglePionECALdn_branch) FJ3jesSinglePionECALdn_branch->SetAddress(&FJ3jesSinglePionECALdn_);
  FJ4jesSinglePionECALdn_branch = tree->GetBranch("FJ4jesSinglePionECALdn");
  if (FJ4jesSinglePionECALdn_branch) FJ4jesSinglePionECALdn_branch->SetAddress(&FJ4jesSinglePionECALdn_);
  iFJ0jesSinglePionECALdn_branch = tree->GetBranch("iFJ0jesSinglePionECALdn");
  if (iFJ0jesSinglePionECALdn_branch) iFJ0jesSinglePionECALdn_branch->SetAddress(&iFJ0jesSinglePionECALdn_);
  iFJ1jesSinglePionECALdn_branch = tree->GetBranch("iFJ1jesSinglePionECALdn");
  if (iFJ1jesSinglePionECALdn_branch) iFJ1jesSinglePionECALdn_branch->SetAddress(&iFJ1jesSinglePionECALdn_);
  iFJ2jesSinglePionECALdn_branch = tree->GetBranch("iFJ2jesSinglePionECALdn");
  if (iFJ2jesSinglePionECALdn_branch) iFJ2jesSinglePionECALdn_branch->SetAddress(&iFJ2jesSinglePionECALdn_);
  iFJ3jesSinglePionECALdn_branch = tree->GetBranch("iFJ3jesSinglePionECALdn");
  if (iFJ3jesSinglePionECALdn_branch) iFJ3jesSinglePionECALdn_branch->SetAddress(&iFJ3jesSinglePionECALdn_);
  iFJ4jesSinglePionECALdn_branch = tree->GetBranch("iFJ4jesSinglePionECALdn");
  if (iFJ4jesSinglePionECALdn_branch) iFJ4jesSinglePionECALdn_branch->SetAddress(&iFJ4jesSinglePionECALdn_);
  METjesSinglePionECALdn_branch = tree->GetBranch("METjesSinglePionECALdn");
  if (METjesSinglePionECALdn_branch) METjesSinglePionECALdn_branch->SetAddress(&METjesSinglePionECALdn_);
  NujesSinglePionECALdn_branch = tree->GetBranch("NujesSinglePionECALdn");
  if (NujesSinglePionECALdn_branch) NujesSinglePionECALdn_branch->SetAddress(&NujesSinglePionECALdn_);
  J0jesSinglePionECALdn_branch = tree->GetBranch("J0jesSinglePionECALdn");
  if (J0jesSinglePionECALdn_branch) J0jesSinglePionECALdn_branch->SetAddress(&J0jesSinglePionECALdn_);
  J1jesSinglePionECALdn_branch = tree->GetBranch("J1jesSinglePionECALdn");
  if (J1jesSinglePionECALdn_branch) J1jesSinglePionECALdn_branch->SetAddress(&J1jesSinglePionECALdn_);
  J2jesSinglePionECALdn_branch = tree->GetBranch("J2jesSinglePionECALdn");
  if (J2jesSinglePionECALdn_branch) J2jesSinglePionECALdn_branch->SetAddress(&J2jesSinglePionECALdn_);
  J3jesSinglePionECALdn_branch = tree->GetBranch("J3jesSinglePionECALdn");
  if (J3jesSinglePionECALdn_branch) J3jesSinglePionECALdn_branch->SetAddress(&J3jesSinglePionECALdn_);
  J4jesSinglePionECALdn_branch = tree->GetBranch("J4jesSinglePionECALdn");
  if (J4jesSinglePionECALdn_branch) J4jesSinglePionECALdn_branch->SetAddress(&J4jesSinglePionECALdn_);
  J5jesSinglePionECALdn_branch = tree->GetBranch("J5jesSinglePionECALdn");
  if (J5jesSinglePionECALdn_branch) J5jesSinglePionECALdn_branch->SetAddress(&J5jesSinglePionECALdn_);
  J6jesSinglePionECALdn_branch = tree->GetBranch("J6jesSinglePionECALdn");
  if (J6jesSinglePionECALdn_branch) J6jesSinglePionECALdn_branch->SetAddress(&J6jesSinglePionECALdn_);
  J7jesSinglePionECALdn_branch = tree->GetBranch("J7jesSinglePionECALdn");
  if (J7jesSinglePionECALdn_branch) J7jesSinglePionECALdn_branch->SetAddress(&J7jesSinglePionECALdn_);
  JsjesSinglePionHCALup_branch = tree->GetBranch("JsjesSinglePionHCALup");
  if (JsjesSinglePionHCALup_branch) JsjesSinglePionHCALup_branch->SetAddress(&JsjesSinglePionHCALup_);
  FJ0jesSinglePionHCALup_branch = tree->GetBranch("FJ0jesSinglePionHCALup");
  if (FJ0jesSinglePionHCALup_branch) FJ0jesSinglePionHCALup_branch->SetAddress(&FJ0jesSinglePionHCALup_);
  FJ1jesSinglePionHCALup_branch = tree->GetBranch("FJ1jesSinglePionHCALup");
  if (FJ1jesSinglePionHCALup_branch) FJ1jesSinglePionHCALup_branch->SetAddress(&FJ1jesSinglePionHCALup_);
  FJ2jesSinglePionHCALup_branch = tree->GetBranch("FJ2jesSinglePionHCALup");
  if (FJ2jesSinglePionHCALup_branch) FJ2jesSinglePionHCALup_branch->SetAddress(&FJ2jesSinglePionHCALup_);
  FJ3jesSinglePionHCALup_branch = tree->GetBranch("FJ3jesSinglePionHCALup");
  if (FJ3jesSinglePionHCALup_branch) FJ3jesSinglePionHCALup_branch->SetAddress(&FJ3jesSinglePionHCALup_);
  FJ4jesSinglePionHCALup_branch = tree->GetBranch("FJ4jesSinglePionHCALup");
  if (FJ4jesSinglePionHCALup_branch) FJ4jesSinglePionHCALup_branch->SetAddress(&FJ4jesSinglePionHCALup_);
  iFJ0jesSinglePionHCALup_branch = tree->GetBranch("iFJ0jesSinglePionHCALup");
  if (iFJ0jesSinglePionHCALup_branch) iFJ0jesSinglePionHCALup_branch->SetAddress(&iFJ0jesSinglePionHCALup_);
  iFJ1jesSinglePionHCALup_branch = tree->GetBranch("iFJ1jesSinglePionHCALup");
  if (iFJ1jesSinglePionHCALup_branch) iFJ1jesSinglePionHCALup_branch->SetAddress(&iFJ1jesSinglePionHCALup_);
  iFJ2jesSinglePionHCALup_branch = tree->GetBranch("iFJ2jesSinglePionHCALup");
  if (iFJ2jesSinglePionHCALup_branch) iFJ2jesSinglePionHCALup_branch->SetAddress(&iFJ2jesSinglePionHCALup_);
  iFJ3jesSinglePionHCALup_branch = tree->GetBranch("iFJ3jesSinglePionHCALup");
  if (iFJ3jesSinglePionHCALup_branch) iFJ3jesSinglePionHCALup_branch->SetAddress(&iFJ3jesSinglePionHCALup_);
  iFJ4jesSinglePionHCALup_branch = tree->GetBranch("iFJ4jesSinglePionHCALup");
  if (iFJ4jesSinglePionHCALup_branch) iFJ4jesSinglePionHCALup_branch->SetAddress(&iFJ4jesSinglePionHCALup_);
  METjesSinglePionHCALup_branch = tree->GetBranch("METjesSinglePionHCALup");
  if (METjesSinglePionHCALup_branch) METjesSinglePionHCALup_branch->SetAddress(&METjesSinglePionHCALup_);
  NujesSinglePionHCALup_branch = tree->GetBranch("NujesSinglePionHCALup");
  if (NujesSinglePionHCALup_branch) NujesSinglePionHCALup_branch->SetAddress(&NujesSinglePionHCALup_);
  J0jesSinglePionHCALup_branch = tree->GetBranch("J0jesSinglePionHCALup");
  if (J0jesSinglePionHCALup_branch) J0jesSinglePionHCALup_branch->SetAddress(&J0jesSinglePionHCALup_);
  J1jesSinglePionHCALup_branch = tree->GetBranch("J1jesSinglePionHCALup");
  if (J1jesSinglePionHCALup_branch) J1jesSinglePionHCALup_branch->SetAddress(&J1jesSinglePionHCALup_);
  J2jesSinglePionHCALup_branch = tree->GetBranch("J2jesSinglePionHCALup");
  if (J2jesSinglePionHCALup_branch) J2jesSinglePionHCALup_branch->SetAddress(&J2jesSinglePionHCALup_);
  J3jesSinglePionHCALup_branch = tree->GetBranch("J3jesSinglePionHCALup");
  if (J3jesSinglePionHCALup_branch) J3jesSinglePionHCALup_branch->SetAddress(&J3jesSinglePionHCALup_);
  J4jesSinglePionHCALup_branch = tree->GetBranch("J4jesSinglePionHCALup");
  if (J4jesSinglePionHCALup_branch) J4jesSinglePionHCALup_branch->SetAddress(&J4jesSinglePionHCALup_);
  J5jesSinglePionHCALup_branch = tree->GetBranch("J5jesSinglePionHCALup");
  if (J5jesSinglePionHCALup_branch) J5jesSinglePionHCALup_branch->SetAddress(&J5jesSinglePionHCALup_);
  J6jesSinglePionHCALup_branch = tree->GetBranch("J6jesSinglePionHCALup");
  if (J6jesSinglePionHCALup_branch) J6jesSinglePionHCALup_branch->SetAddress(&J6jesSinglePionHCALup_);
  J7jesSinglePionHCALup_branch = tree->GetBranch("J7jesSinglePionHCALup");
  if (J7jesSinglePionHCALup_branch) J7jesSinglePionHCALup_branch->SetAddress(&J7jesSinglePionHCALup_);
  JsjesSinglePionHCALdn_branch = tree->GetBranch("JsjesSinglePionHCALdn");
  if (JsjesSinglePionHCALdn_branch) JsjesSinglePionHCALdn_branch->SetAddress(&JsjesSinglePionHCALdn_);
  FJ0jesSinglePionHCALdn_branch = tree->GetBranch("FJ0jesSinglePionHCALdn");
  if (FJ0jesSinglePionHCALdn_branch) FJ0jesSinglePionHCALdn_branch->SetAddress(&FJ0jesSinglePionHCALdn_);
  FJ1jesSinglePionHCALdn_branch = tree->GetBranch("FJ1jesSinglePionHCALdn");
  if (FJ1jesSinglePionHCALdn_branch) FJ1jesSinglePionHCALdn_branch->SetAddress(&FJ1jesSinglePionHCALdn_);
  FJ2jesSinglePionHCALdn_branch = tree->GetBranch("FJ2jesSinglePionHCALdn");
  if (FJ2jesSinglePionHCALdn_branch) FJ2jesSinglePionHCALdn_branch->SetAddress(&FJ2jesSinglePionHCALdn_);
  FJ3jesSinglePionHCALdn_branch = tree->GetBranch("FJ3jesSinglePionHCALdn");
  if (FJ3jesSinglePionHCALdn_branch) FJ3jesSinglePionHCALdn_branch->SetAddress(&FJ3jesSinglePionHCALdn_);
  FJ4jesSinglePionHCALdn_branch = tree->GetBranch("FJ4jesSinglePionHCALdn");
  if (FJ4jesSinglePionHCALdn_branch) FJ4jesSinglePionHCALdn_branch->SetAddress(&FJ4jesSinglePionHCALdn_);
  iFJ0jesSinglePionHCALdn_branch = tree->GetBranch("iFJ0jesSinglePionHCALdn");
  if (iFJ0jesSinglePionHCALdn_branch) iFJ0jesSinglePionHCALdn_branch->SetAddress(&iFJ0jesSinglePionHCALdn_);
  iFJ1jesSinglePionHCALdn_branch = tree->GetBranch("iFJ1jesSinglePionHCALdn");
  if (iFJ1jesSinglePionHCALdn_branch) iFJ1jesSinglePionHCALdn_branch->SetAddress(&iFJ1jesSinglePionHCALdn_);
  iFJ2jesSinglePionHCALdn_branch = tree->GetBranch("iFJ2jesSinglePionHCALdn");
  if (iFJ2jesSinglePionHCALdn_branch) iFJ2jesSinglePionHCALdn_branch->SetAddress(&iFJ2jesSinglePionHCALdn_);
  iFJ3jesSinglePionHCALdn_branch = tree->GetBranch("iFJ3jesSinglePionHCALdn");
  if (iFJ3jesSinglePionHCALdn_branch) iFJ3jesSinglePionHCALdn_branch->SetAddress(&iFJ3jesSinglePionHCALdn_);
  iFJ4jesSinglePionHCALdn_branch = tree->GetBranch("iFJ4jesSinglePionHCALdn");
  if (iFJ4jesSinglePionHCALdn_branch) iFJ4jesSinglePionHCALdn_branch->SetAddress(&iFJ4jesSinglePionHCALdn_);
  METjesSinglePionHCALdn_branch = tree->GetBranch("METjesSinglePionHCALdn");
  if (METjesSinglePionHCALdn_branch) METjesSinglePionHCALdn_branch->SetAddress(&METjesSinglePionHCALdn_);
  NujesSinglePionHCALdn_branch = tree->GetBranch("NujesSinglePionHCALdn");
  if (NujesSinglePionHCALdn_branch) NujesSinglePionHCALdn_branch->SetAddress(&NujesSinglePionHCALdn_);
  J0jesSinglePionHCALdn_branch = tree->GetBranch("J0jesSinglePionHCALdn");
  if (J0jesSinglePionHCALdn_branch) J0jesSinglePionHCALdn_branch->SetAddress(&J0jesSinglePionHCALdn_);
  J1jesSinglePionHCALdn_branch = tree->GetBranch("J1jesSinglePionHCALdn");
  if (J1jesSinglePionHCALdn_branch) J1jesSinglePionHCALdn_branch->SetAddress(&J1jesSinglePionHCALdn_);
  J2jesSinglePionHCALdn_branch = tree->GetBranch("J2jesSinglePionHCALdn");
  if (J2jesSinglePionHCALdn_branch) J2jesSinglePionHCALdn_branch->SetAddress(&J2jesSinglePionHCALdn_);
  J3jesSinglePionHCALdn_branch = tree->GetBranch("J3jesSinglePionHCALdn");
  if (J3jesSinglePionHCALdn_branch) J3jesSinglePionHCALdn_branch->SetAddress(&J3jesSinglePionHCALdn_);
  J4jesSinglePionHCALdn_branch = tree->GetBranch("J4jesSinglePionHCALdn");
  if (J4jesSinglePionHCALdn_branch) J4jesSinglePionHCALdn_branch->SetAddress(&J4jesSinglePionHCALdn_);
  J5jesSinglePionHCALdn_branch = tree->GetBranch("J5jesSinglePionHCALdn");
  if (J5jesSinglePionHCALdn_branch) J5jesSinglePionHCALdn_branch->SetAddress(&J5jesSinglePionHCALdn_);
  J6jesSinglePionHCALdn_branch = tree->GetBranch("J6jesSinglePionHCALdn");
  if (J6jesSinglePionHCALdn_branch) J6jesSinglePionHCALdn_branch->SetAddress(&J6jesSinglePionHCALdn_);
  J7jesSinglePionHCALdn_branch = tree->GetBranch("J7jesSinglePionHCALdn");
  if (J7jesSinglePionHCALdn_branch) J7jesSinglePionHCALdn_branch->SetAddress(&J7jesSinglePionHCALdn_);
  JsjesFlavorQCDup_branch = tree->GetBranch("JsjesFlavorQCDup");
  if (JsjesFlavorQCDup_branch) JsjesFlavorQCDup_branch->SetAddress(&JsjesFlavorQCDup_);
  FJ0jesFlavorQCDup_branch = tree->GetBranch("FJ0jesFlavorQCDup");
  if (FJ0jesFlavorQCDup_branch) FJ0jesFlavorQCDup_branch->SetAddress(&FJ0jesFlavorQCDup_);
  FJ1jesFlavorQCDup_branch = tree->GetBranch("FJ1jesFlavorQCDup");
  if (FJ1jesFlavorQCDup_branch) FJ1jesFlavorQCDup_branch->SetAddress(&FJ1jesFlavorQCDup_);
  FJ2jesFlavorQCDup_branch = tree->GetBranch("FJ2jesFlavorQCDup");
  if (FJ2jesFlavorQCDup_branch) FJ2jesFlavorQCDup_branch->SetAddress(&FJ2jesFlavorQCDup_);
  FJ3jesFlavorQCDup_branch = tree->GetBranch("FJ3jesFlavorQCDup");
  if (FJ3jesFlavorQCDup_branch) FJ3jesFlavorQCDup_branch->SetAddress(&FJ3jesFlavorQCDup_);
  FJ4jesFlavorQCDup_branch = tree->GetBranch("FJ4jesFlavorQCDup");
  if (FJ4jesFlavorQCDup_branch) FJ4jesFlavorQCDup_branch->SetAddress(&FJ4jesFlavorQCDup_);
  iFJ0jesFlavorQCDup_branch = tree->GetBranch("iFJ0jesFlavorQCDup");
  if (iFJ0jesFlavorQCDup_branch) iFJ0jesFlavorQCDup_branch->SetAddress(&iFJ0jesFlavorQCDup_);
  iFJ1jesFlavorQCDup_branch = tree->GetBranch("iFJ1jesFlavorQCDup");
  if (iFJ1jesFlavorQCDup_branch) iFJ1jesFlavorQCDup_branch->SetAddress(&iFJ1jesFlavorQCDup_);
  iFJ2jesFlavorQCDup_branch = tree->GetBranch("iFJ2jesFlavorQCDup");
  if (iFJ2jesFlavorQCDup_branch) iFJ2jesFlavorQCDup_branch->SetAddress(&iFJ2jesFlavorQCDup_);
  iFJ3jesFlavorQCDup_branch = tree->GetBranch("iFJ3jesFlavorQCDup");
  if (iFJ3jesFlavorQCDup_branch) iFJ3jesFlavorQCDup_branch->SetAddress(&iFJ3jesFlavorQCDup_);
  iFJ4jesFlavorQCDup_branch = tree->GetBranch("iFJ4jesFlavorQCDup");
  if (iFJ4jesFlavorQCDup_branch) iFJ4jesFlavorQCDup_branch->SetAddress(&iFJ4jesFlavorQCDup_);
  METjesFlavorQCDup_branch = tree->GetBranch("METjesFlavorQCDup");
  if (METjesFlavorQCDup_branch) METjesFlavorQCDup_branch->SetAddress(&METjesFlavorQCDup_);
  NujesFlavorQCDup_branch = tree->GetBranch("NujesFlavorQCDup");
  if (NujesFlavorQCDup_branch) NujesFlavorQCDup_branch->SetAddress(&NujesFlavorQCDup_);
  J0jesFlavorQCDup_branch = tree->GetBranch("J0jesFlavorQCDup");
  if (J0jesFlavorQCDup_branch) J0jesFlavorQCDup_branch->SetAddress(&J0jesFlavorQCDup_);
  J1jesFlavorQCDup_branch = tree->GetBranch("J1jesFlavorQCDup");
  if (J1jesFlavorQCDup_branch) J1jesFlavorQCDup_branch->SetAddress(&J1jesFlavorQCDup_);
  J2jesFlavorQCDup_branch = tree->GetBranch("J2jesFlavorQCDup");
  if (J2jesFlavorQCDup_branch) J2jesFlavorQCDup_branch->SetAddress(&J2jesFlavorQCDup_);
  J3jesFlavorQCDup_branch = tree->GetBranch("J3jesFlavorQCDup");
  if (J3jesFlavorQCDup_branch) J3jesFlavorQCDup_branch->SetAddress(&J3jesFlavorQCDup_);
  J4jesFlavorQCDup_branch = tree->GetBranch("J4jesFlavorQCDup");
  if (J4jesFlavorQCDup_branch) J4jesFlavorQCDup_branch->SetAddress(&J4jesFlavorQCDup_);
  J5jesFlavorQCDup_branch = tree->GetBranch("J5jesFlavorQCDup");
  if (J5jesFlavorQCDup_branch) J5jesFlavorQCDup_branch->SetAddress(&J5jesFlavorQCDup_);
  J6jesFlavorQCDup_branch = tree->GetBranch("J6jesFlavorQCDup");
  if (J6jesFlavorQCDup_branch) J6jesFlavorQCDup_branch->SetAddress(&J6jesFlavorQCDup_);
  J7jesFlavorQCDup_branch = tree->GetBranch("J7jesFlavorQCDup");
  if (J7jesFlavorQCDup_branch) J7jesFlavorQCDup_branch->SetAddress(&J7jesFlavorQCDup_);
  JsjesFlavorQCDdn_branch = tree->GetBranch("JsjesFlavorQCDdn");
  if (JsjesFlavorQCDdn_branch) JsjesFlavorQCDdn_branch->SetAddress(&JsjesFlavorQCDdn_);
  FJ0jesFlavorQCDdn_branch = tree->GetBranch("FJ0jesFlavorQCDdn");
  if (FJ0jesFlavorQCDdn_branch) FJ0jesFlavorQCDdn_branch->SetAddress(&FJ0jesFlavorQCDdn_);
  FJ1jesFlavorQCDdn_branch = tree->GetBranch("FJ1jesFlavorQCDdn");
  if (FJ1jesFlavorQCDdn_branch) FJ1jesFlavorQCDdn_branch->SetAddress(&FJ1jesFlavorQCDdn_);
  FJ2jesFlavorQCDdn_branch = tree->GetBranch("FJ2jesFlavorQCDdn");
  if (FJ2jesFlavorQCDdn_branch) FJ2jesFlavorQCDdn_branch->SetAddress(&FJ2jesFlavorQCDdn_);
  FJ3jesFlavorQCDdn_branch = tree->GetBranch("FJ3jesFlavorQCDdn");
  if (FJ3jesFlavorQCDdn_branch) FJ3jesFlavorQCDdn_branch->SetAddress(&FJ3jesFlavorQCDdn_);
  FJ4jesFlavorQCDdn_branch = tree->GetBranch("FJ4jesFlavorQCDdn");
  if (FJ4jesFlavorQCDdn_branch) FJ4jesFlavorQCDdn_branch->SetAddress(&FJ4jesFlavorQCDdn_);
  iFJ0jesFlavorQCDdn_branch = tree->GetBranch("iFJ0jesFlavorQCDdn");
  if (iFJ0jesFlavorQCDdn_branch) iFJ0jesFlavorQCDdn_branch->SetAddress(&iFJ0jesFlavorQCDdn_);
  iFJ1jesFlavorQCDdn_branch = tree->GetBranch("iFJ1jesFlavorQCDdn");
  if (iFJ1jesFlavorQCDdn_branch) iFJ1jesFlavorQCDdn_branch->SetAddress(&iFJ1jesFlavorQCDdn_);
  iFJ2jesFlavorQCDdn_branch = tree->GetBranch("iFJ2jesFlavorQCDdn");
  if (iFJ2jesFlavorQCDdn_branch) iFJ2jesFlavorQCDdn_branch->SetAddress(&iFJ2jesFlavorQCDdn_);
  iFJ3jesFlavorQCDdn_branch = tree->GetBranch("iFJ3jesFlavorQCDdn");
  if (iFJ3jesFlavorQCDdn_branch) iFJ3jesFlavorQCDdn_branch->SetAddress(&iFJ3jesFlavorQCDdn_);
  iFJ4jesFlavorQCDdn_branch = tree->GetBranch("iFJ4jesFlavorQCDdn");
  if (iFJ4jesFlavorQCDdn_branch) iFJ4jesFlavorQCDdn_branch->SetAddress(&iFJ4jesFlavorQCDdn_);
  METjesFlavorQCDdn_branch = tree->GetBranch("METjesFlavorQCDdn");
  if (METjesFlavorQCDdn_branch) METjesFlavorQCDdn_branch->SetAddress(&METjesFlavorQCDdn_);
  NujesFlavorQCDdn_branch = tree->GetBranch("NujesFlavorQCDdn");
  if (NujesFlavorQCDdn_branch) NujesFlavorQCDdn_branch->SetAddress(&NujesFlavorQCDdn_);
  J0jesFlavorQCDdn_branch = tree->GetBranch("J0jesFlavorQCDdn");
  if (J0jesFlavorQCDdn_branch) J0jesFlavorQCDdn_branch->SetAddress(&J0jesFlavorQCDdn_);
  J1jesFlavorQCDdn_branch = tree->GetBranch("J1jesFlavorQCDdn");
  if (J1jesFlavorQCDdn_branch) J1jesFlavorQCDdn_branch->SetAddress(&J1jesFlavorQCDdn_);
  J2jesFlavorQCDdn_branch = tree->GetBranch("J2jesFlavorQCDdn");
  if (J2jesFlavorQCDdn_branch) J2jesFlavorQCDdn_branch->SetAddress(&J2jesFlavorQCDdn_);
  J3jesFlavorQCDdn_branch = tree->GetBranch("J3jesFlavorQCDdn");
  if (J3jesFlavorQCDdn_branch) J3jesFlavorQCDdn_branch->SetAddress(&J3jesFlavorQCDdn_);
  J4jesFlavorQCDdn_branch = tree->GetBranch("J4jesFlavorQCDdn");
  if (J4jesFlavorQCDdn_branch) J4jesFlavorQCDdn_branch->SetAddress(&J4jesFlavorQCDdn_);
  J5jesFlavorQCDdn_branch = tree->GetBranch("J5jesFlavorQCDdn");
  if (J5jesFlavorQCDdn_branch) J5jesFlavorQCDdn_branch->SetAddress(&J5jesFlavorQCDdn_);
  J6jesFlavorQCDdn_branch = tree->GetBranch("J6jesFlavorQCDdn");
  if (J6jesFlavorQCDdn_branch) J6jesFlavorQCDdn_branch->SetAddress(&J6jesFlavorQCDdn_);
  J7jesFlavorQCDdn_branch = tree->GetBranch("J7jesFlavorQCDdn");
  if (J7jesFlavorQCDdn_branch) J7jesFlavorQCDdn_branch->SetAddress(&J7jesFlavorQCDdn_);
  JsjesTimePtEtaup_branch = tree->GetBranch("JsjesTimePtEtaup");
  if (JsjesTimePtEtaup_branch) JsjesTimePtEtaup_branch->SetAddress(&JsjesTimePtEtaup_);
  FJ0jesTimePtEtaup_branch = tree->GetBranch("FJ0jesTimePtEtaup");
  if (FJ0jesTimePtEtaup_branch) FJ0jesTimePtEtaup_branch->SetAddress(&FJ0jesTimePtEtaup_);
  FJ1jesTimePtEtaup_branch = tree->GetBranch("FJ1jesTimePtEtaup");
  if (FJ1jesTimePtEtaup_branch) FJ1jesTimePtEtaup_branch->SetAddress(&FJ1jesTimePtEtaup_);
  FJ2jesTimePtEtaup_branch = tree->GetBranch("FJ2jesTimePtEtaup");
  if (FJ2jesTimePtEtaup_branch) FJ2jesTimePtEtaup_branch->SetAddress(&FJ2jesTimePtEtaup_);
  FJ3jesTimePtEtaup_branch = tree->GetBranch("FJ3jesTimePtEtaup");
  if (FJ3jesTimePtEtaup_branch) FJ3jesTimePtEtaup_branch->SetAddress(&FJ3jesTimePtEtaup_);
  FJ4jesTimePtEtaup_branch = tree->GetBranch("FJ4jesTimePtEtaup");
  if (FJ4jesTimePtEtaup_branch) FJ4jesTimePtEtaup_branch->SetAddress(&FJ4jesTimePtEtaup_);
  iFJ0jesTimePtEtaup_branch = tree->GetBranch("iFJ0jesTimePtEtaup");
  if (iFJ0jesTimePtEtaup_branch) iFJ0jesTimePtEtaup_branch->SetAddress(&iFJ0jesTimePtEtaup_);
  iFJ1jesTimePtEtaup_branch = tree->GetBranch("iFJ1jesTimePtEtaup");
  if (iFJ1jesTimePtEtaup_branch) iFJ1jesTimePtEtaup_branch->SetAddress(&iFJ1jesTimePtEtaup_);
  iFJ2jesTimePtEtaup_branch = tree->GetBranch("iFJ2jesTimePtEtaup");
  if (iFJ2jesTimePtEtaup_branch) iFJ2jesTimePtEtaup_branch->SetAddress(&iFJ2jesTimePtEtaup_);
  iFJ3jesTimePtEtaup_branch = tree->GetBranch("iFJ3jesTimePtEtaup");
  if (iFJ3jesTimePtEtaup_branch) iFJ3jesTimePtEtaup_branch->SetAddress(&iFJ3jesTimePtEtaup_);
  iFJ4jesTimePtEtaup_branch = tree->GetBranch("iFJ4jesTimePtEtaup");
  if (iFJ4jesTimePtEtaup_branch) iFJ4jesTimePtEtaup_branch->SetAddress(&iFJ4jesTimePtEtaup_);
  METjesTimePtEtaup_branch = tree->GetBranch("METjesTimePtEtaup");
  if (METjesTimePtEtaup_branch) METjesTimePtEtaup_branch->SetAddress(&METjesTimePtEtaup_);
  NujesTimePtEtaup_branch = tree->GetBranch("NujesTimePtEtaup");
  if (NujesTimePtEtaup_branch) NujesTimePtEtaup_branch->SetAddress(&NujesTimePtEtaup_);
  J0jesTimePtEtaup_branch = tree->GetBranch("J0jesTimePtEtaup");
  if (J0jesTimePtEtaup_branch) J0jesTimePtEtaup_branch->SetAddress(&J0jesTimePtEtaup_);
  J1jesTimePtEtaup_branch = tree->GetBranch("J1jesTimePtEtaup");
  if (J1jesTimePtEtaup_branch) J1jesTimePtEtaup_branch->SetAddress(&J1jesTimePtEtaup_);
  J2jesTimePtEtaup_branch = tree->GetBranch("J2jesTimePtEtaup");
  if (J2jesTimePtEtaup_branch) J2jesTimePtEtaup_branch->SetAddress(&J2jesTimePtEtaup_);
  J3jesTimePtEtaup_branch = tree->GetBranch("J3jesTimePtEtaup");
  if (J3jesTimePtEtaup_branch) J3jesTimePtEtaup_branch->SetAddress(&J3jesTimePtEtaup_);
  J4jesTimePtEtaup_branch = tree->GetBranch("J4jesTimePtEtaup");
  if (J4jesTimePtEtaup_branch) J4jesTimePtEtaup_branch->SetAddress(&J4jesTimePtEtaup_);
  J5jesTimePtEtaup_branch = tree->GetBranch("J5jesTimePtEtaup");
  if (J5jesTimePtEtaup_branch) J5jesTimePtEtaup_branch->SetAddress(&J5jesTimePtEtaup_);
  J6jesTimePtEtaup_branch = tree->GetBranch("J6jesTimePtEtaup");
  if (J6jesTimePtEtaup_branch) J6jesTimePtEtaup_branch->SetAddress(&J6jesTimePtEtaup_);
  J7jesTimePtEtaup_branch = tree->GetBranch("J7jesTimePtEtaup");
  if (J7jesTimePtEtaup_branch) J7jesTimePtEtaup_branch->SetAddress(&J7jesTimePtEtaup_);
  JsjesTimePtEtadn_branch = tree->GetBranch("JsjesTimePtEtadn");
  if (JsjesTimePtEtadn_branch) JsjesTimePtEtadn_branch->SetAddress(&JsjesTimePtEtadn_);
  FJ0jesTimePtEtadn_branch = tree->GetBranch("FJ0jesTimePtEtadn");
  if (FJ0jesTimePtEtadn_branch) FJ0jesTimePtEtadn_branch->SetAddress(&FJ0jesTimePtEtadn_);
  FJ1jesTimePtEtadn_branch = tree->GetBranch("FJ1jesTimePtEtadn");
  if (FJ1jesTimePtEtadn_branch) FJ1jesTimePtEtadn_branch->SetAddress(&FJ1jesTimePtEtadn_);
  FJ2jesTimePtEtadn_branch = tree->GetBranch("FJ2jesTimePtEtadn");
  if (FJ2jesTimePtEtadn_branch) FJ2jesTimePtEtadn_branch->SetAddress(&FJ2jesTimePtEtadn_);
  FJ3jesTimePtEtadn_branch = tree->GetBranch("FJ3jesTimePtEtadn");
  if (FJ3jesTimePtEtadn_branch) FJ3jesTimePtEtadn_branch->SetAddress(&FJ3jesTimePtEtadn_);
  FJ4jesTimePtEtadn_branch = tree->GetBranch("FJ4jesTimePtEtadn");
  if (FJ4jesTimePtEtadn_branch) FJ4jesTimePtEtadn_branch->SetAddress(&FJ4jesTimePtEtadn_);
  iFJ0jesTimePtEtadn_branch = tree->GetBranch("iFJ0jesTimePtEtadn");
  if (iFJ0jesTimePtEtadn_branch) iFJ0jesTimePtEtadn_branch->SetAddress(&iFJ0jesTimePtEtadn_);
  iFJ1jesTimePtEtadn_branch = tree->GetBranch("iFJ1jesTimePtEtadn");
  if (iFJ1jesTimePtEtadn_branch) iFJ1jesTimePtEtadn_branch->SetAddress(&iFJ1jesTimePtEtadn_);
  iFJ2jesTimePtEtadn_branch = tree->GetBranch("iFJ2jesTimePtEtadn");
  if (iFJ2jesTimePtEtadn_branch) iFJ2jesTimePtEtadn_branch->SetAddress(&iFJ2jesTimePtEtadn_);
  iFJ3jesTimePtEtadn_branch = tree->GetBranch("iFJ3jesTimePtEtadn");
  if (iFJ3jesTimePtEtadn_branch) iFJ3jesTimePtEtadn_branch->SetAddress(&iFJ3jesTimePtEtadn_);
  iFJ4jesTimePtEtadn_branch = tree->GetBranch("iFJ4jesTimePtEtadn");
  if (iFJ4jesTimePtEtadn_branch) iFJ4jesTimePtEtadn_branch->SetAddress(&iFJ4jesTimePtEtadn_);
  METjesTimePtEtadn_branch = tree->GetBranch("METjesTimePtEtadn");
  if (METjesTimePtEtadn_branch) METjesTimePtEtadn_branch->SetAddress(&METjesTimePtEtadn_);
  NujesTimePtEtadn_branch = tree->GetBranch("NujesTimePtEtadn");
  if (NujesTimePtEtadn_branch) NujesTimePtEtadn_branch->SetAddress(&NujesTimePtEtadn_);
  J0jesTimePtEtadn_branch = tree->GetBranch("J0jesTimePtEtadn");
  if (J0jesTimePtEtadn_branch) J0jesTimePtEtadn_branch->SetAddress(&J0jesTimePtEtadn_);
  J1jesTimePtEtadn_branch = tree->GetBranch("J1jesTimePtEtadn");
  if (J1jesTimePtEtadn_branch) J1jesTimePtEtadn_branch->SetAddress(&J1jesTimePtEtadn_);
  J2jesTimePtEtadn_branch = tree->GetBranch("J2jesTimePtEtadn");
  if (J2jesTimePtEtadn_branch) J2jesTimePtEtadn_branch->SetAddress(&J2jesTimePtEtadn_);
  J3jesTimePtEtadn_branch = tree->GetBranch("J3jesTimePtEtadn");
  if (J3jesTimePtEtadn_branch) J3jesTimePtEtadn_branch->SetAddress(&J3jesTimePtEtadn_);
  J4jesTimePtEtadn_branch = tree->GetBranch("J4jesTimePtEtadn");
  if (J4jesTimePtEtadn_branch) J4jesTimePtEtadn_branch->SetAddress(&J4jesTimePtEtadn_);
  J5jesTimePtEtadn_branch = tree->GetBranch("J5jesTimePtEtadn");
  if (J5jesTimePtEtadn_branch) J5jesTimePtEtadn_branch->SetAddress(&J5jesTimePtEtadn_);
  J6jesTimePtEtadn_branch = tree->GetBranch("J6jesTimePtEtadn");
  if (J6jesTimePtEtadn_branch) J6jesTimePtEtadn_branch->SetAddress(&J6jesTimePtEtadn_);
  J7jesTimePtEtadn_branch = tree->GetBranch("J7jesTimePtEtadn");
  if (J7jesTimePtEtadn_branch) J7jesTimePtEtadn_branch->SetAddress(&J7jesTimePtEtadn_);
  JsjesRelativeJEREC1up_branch = tree->GetBranch("JsjesRelativeJEREC1up");
  if (JsjesRelativeJEREC1up_branch) JsjesRelativeJEREC1up_branch->SetAddress(&JsjesRelativeJEREC1up_);
  FJ0jesRelativeJEREC1up_branch = tree->GetBranch("FJ0jesRelativeJEREC1up");
  if (FJ0jesRelativeJEREC1up_branch) FJ0jesRelativeJEREC1up_branch->SetAddress(&FJ0jesRelativeJEREC1up_);
  FJ1jesRelativeJEREC1up_branch = tree->GetBranch("FJ1jesRelativeJEREC1up");
  if (FJ1jesRelativeJEREC1up_branch) FJ1jesRelativeJEREC1up_branch->SetAddress(&FJ1jesRelativeJEREC1up_);
  FJ2jesRelativeJEREC1up_branch = tree->GetBranch("FJ2jesRelativeJEREC1up");
  if (FJ2jesRelativeJEREC1up_branch) FJ2jesRelativeJEREC1up_branch->SetAddress(&FJ2jesRelativeJEREC1up_);
  FJ3jesRelativeJEREC1up_branch = tree->GetBranch("FJ3jesRelativeJEREC1up");
  if (FJ3jesRelativeJEREC1up_branch) FJ3jesRelativeJEREC1up_branch->SetAddress(&FJ3jesRelativeJEREC1up_);
  FJ4jesRelativeJEREC1up_branch = tree->GetBranch("FJ4jesRelativeJEREC1up");
  if (FJ4jesRelativeJEREC1up_branch) FJ4jesRelativeJEREC1up_branch->SetAddress(&FJ4jesRelativeJEREC1up_);
  iFJ0jesRelativeJEREC1up_branch = tree->GetBranch("iFJ0jesRelativeJEREC1up");
  if (iFJ0jesRelativeJEREC1up_branch) iFJ0jesRelativeJEREC1up_branch->SetAddress(&iFJ0jesRelativeJEREC1up_);
  iFJ1jesRelativeJEREC1up_branch = tree->GetBranch("iFJ1jesRelativeJEREC1up");
  if (iFJ1jesRelativeJEREC1up_branch) iFJ1jesRelativeJEREC1up_branch->SetAddress(&iFJ1jesRelativeJEREC1up_);
  iFJ2jesRelativeJEREC1up_branch = tree->GetBranch("iFJ2jesRelativeJEREC1up");
  if (iFJ2jesRelativeJEREC1up_branch) iFJ2jesRelativeJEREC1up_branch->SetAddress(&iFJ2jesRelativeJEREC1up_);
  iFJ3jesRelativeJEREC1up_branch = tree->GetBranch("iFJ3jesRelativeJEREC1up");
  if (iFJ3jesRelativeJEREC1up_branch) iFJ3jesRelativeJEREC1up_branch->SetAddress(&iFJ3jesRelativeJEREC1up_);
  iFJ4jesRelativeJEREC1up_branch = tree->GetBranch("iFJ4jesRelativeJEREC1up");
  if (iFJ4jesRelativeJEREC1up_branch) iFJ4jesRelativeJEREC1up_branch->SetAddress(&iFJ4jesRelativeJEREC1up_);
  METjesRelativeJEREC1up_branch = tree->GetBranch("METjesRelativeJEREC1up");
  if (METjesRelativeJEREC1up_branch) METjesRelativeJEREC1up_branch->SetAddress(&METjesRelativeJEREC1up_);
  NujesRelativeJEREC1up_branch = tree->GetBranch("NujesRelativeJEREC1up");
  if (NujesRelativeJEREC1up_branch) NujesRelativeJEREC1up_branch->SetAddress(&NujesRelativeJEREC1up_);
  J0jesRelativeJEREC1up_branch = tree->GetBranch("J0jesRelativeJEREC1up");
  if (J0jesRelativeJEREC1up_branch) J0jesRelativeJEREC1up_branch->SetAddress(&J0jesRelativeJEREC1up_);
  J1jesRelativeJEREC1up_branch = tree->GetBranch("J1jesRelativeJEREC1up");
  if (J1jesRelativeJEREC1up_branch) J1jesRelativeJEREC1up_branch->SetAddress(&J1jesRelativeJEREC1up_);
  J2jesRelativeJEREC1up_branch = tree->GetBranch("J2jesRelativeJEREC1up");
  if (J2jesRelativeJEREC1up_branch) J2jesRelativeJEREC1up_branch->SetAddress(&J2jesRelativeJEREC1up_);
  J3jesRelativeJEREC1up_branch = tree->GetBranch("J3jesRelativeJEREC1up");
  if (J3jesRelativeJEREC1up_branch) J3jesRelativeJEREC1up_branch->SetAddress(&J3jesRelativeJEREC1up_);
  J4jesRelativeJEREC1up_branch = tree->GetBranch("J4jesRelativeJEREC1up");
  if (J4jesRelativeJEREC1up_branch) J4jesRelativeJEREC1up_branch->SetAddress(&J4jesRelativeJEREC1up_);
  J5jesRelativeJEREC1up_branch = tree->GetBranch("J5jesRelativeJEREC1up");
  if (J5jesRelativeJEREC1up_branch) J5jesRelativeJEREC1up_branch->SetAddress(&J5jesRelativeJEREC1up_);
  J6jesRelativeJEREC1up_branch = tree->GetBranch("J6jesRelativeJEREC1up");
  if (J6jesRelativeJEREC1up_branch) J6jesRelativeJEREC1up_branch->SetAddress(&J6jesRelativeJEREC1up_);
  J7jesRelativeJEREC1up_branch = tree->GetBranch("J7jesRelativeJEREC1up");
  if (J7jesRelativeJEREC1up_branch) J7jesRelativeJEREC1up_branch->SetAddress(&J7jesRelativeJEREC1up_);
  JsjesRelativeJEREC1dn_branch = tree->GetBranch("JsjesRelativeJEREC1dn");
  if (JsjesRelativeJEREC1dn_branch) JsjesRelativeJEREC1dn_branch->SetAddress(&JsjesRelativeJEREC1dn_);
  FJ0jesRelativeJEREC1dn_branch = tree->GetBranch("FJ0jesRelativeJEREC1dn");
  if (FJ0jesRelativeJEREC1dn_branch) FJ0jesRelativeJEREC1dn_branch->SetAddress(&FJ0jesRelativeJEREC1dn_);
  FJ1jesRelativeJEREC1dn_branch = tree->GetBranch("FJ1jesRelativeJEREC1dn");
  if (FJ1jesRelativeJEREC1dn_branch) FJ1jesRelativeJEREC1dn_branch->SetAddress(&FJ1jesRelativeJEREC1dn_);
  FJ2jesRelativeJEREC1dn_branch = tree->GetBranch("FJ2jesRelativeJEREC1dn");
  if (FJ2jesRelativeJEREC1dn_branch) FJ2jesRelativeJEREC1dn_branch->SetAddress(&FJ2jesRelativeJEREC1dn_);
  FJ3jesRelativeJEREC1dn_branch = tree->GetBranch("FJ3jesRelativeJEREC1dn");
  if (FJ3jesRelativeJEREC1dn_branch) FJ3jesRelativeJEREC1dn_branch->SetAddress(&FJ3jesRelativeJEREC1dn_);
  FJ4jesRelativeJEREC1dn_branch = tree->GetBranch("FJ4jesRelativeJEREC1dn");
  if (FJ4jesRelativeJEREC1dn_branch) FJ4jesRelativeJEREC1dn_branch->SetAddress(&FJ4jesRelativeJEREC1dn_);
  iFJ0jesRelativeJEREC1dn_branch = tree->GetBranch("iFJ0jesRelativeJEREC1dn");
  if (iFJ0jesRelativeJEREC1dn_branch) iFJ0jesRelativeJEREC1dn_branch->SetAddress(&iFJ0jesRelativeJEREC1dn_);
  iFJ1jesRelativeJEREC1dn_branch = tree->GetBranch("iFJ1jesRelativeJEREC1dn");
  if (iFJ1jesRelativeJEREC1dn_branch) iFJ1jesRelativeJEREC1dn_branch->SetAddress(&iFJ1jesRelativeJEREC1dn_);
  iFJ2jesRelativeJEREC1dn_branch = tree->GetBranch("iFJ2jesRelativeJEREC1dn");
  if (iFJ2jesRelativeJEREC1dn_branch) iFJ2jesRelativeJEREC1dn_branch->SetAddress(&iFJ2jesRelativeJEREC1dn_);
  iFJ3jesRelativeJEREC1dn_branch = tree->GetBranch("iFJ3jesRelativeJEREC1dn");
  if (iFJ3jesRelativeJEREC1dn_branch) iFJ3jesRelativeJEREC1dn_branch->SetAddress(&iFJ3jesRelativeJEREC1dn_);
  iFJ4jesRelativeJEREC1dn_branch = tree->GetBranch("iFJ4jesRelativeJEREC1dn");
  if (iFJ4jesRelativeJEREC1dn_branch) iFJ4jesRelativeJEREC1dn_branch->SetAddress(&iFJ4jesRelativeJEREC1dn_);
  METjesRelativeJEREC1dn_branch = tree->GetBranch("METjesRelativeJEREC1dn");
  if (METjesRelativeJEREC1dn_branch) METjesRelativeJEREC1dn_branch->SetAddress(&METjesRelativeJEREC1dn_);
  NujesRelativeJEREC1dn_branch = tree->GetBranch("NujesRelativeJEREC1dn");
  if (NujesRelativeJEREC1dn_branch) NujesRelativeJEREC1dn_branch->SetAddress(&NujesRelativeJEREC1dn_);
  J0jesRelativeJEREC1dn_branch = tree->GetBranch("J0jesRelativeJEREC1dn");
  if (J0jesRelativeJEREC1dn_branch) J0jesRelativeJEREC1dn_branch->SetAddress(&J0jesRelativeJEREC1dn_);
  J1jesRelativeJEREC1dn_branch = tree->GetBranch("J1jesRelativeJEREC1dn");
  if (J1jesRelativeJEREC1dn_branch) J1jesRelativeJEREC1dn_branch->SetAddress(&J1jesRelativeJEREC1dn_);
  J2jesRelativeJEREC1dn_branch = tree->GetBranch("J2jesRelativeJEREC1dn");
  if (J2jesRelativeJEREC1dn_branch) J2jesRelativeJEREC1dn_branch->SetAddress(&J2jesRelativeJEREC1dn_);
  J3jesRelativeJEREC1dn_branch = tree->GetBranch("J3jesRelativeJEREC1dn");
  if (J3jesRelativeJEREC1dn_branch) J3jesRelativeJEREC1dn_branch->SetAddress(&J3jesRelativeJEREC1dn_);
  J4jesRelativeJEREC1dn_branch = tree->GetBranch("J4jesRelativeJEREC1dn");
  if (J4jesRelativeJEREC1dn_branch) J4jesRelativeJEREC1dn_branch->SetAddress(&J4jesRelativeJEREC1dn_);
  J5jesRelativeJEREC1dn_branch = tree->GetBranch("J5jesRelativeJEREC1dn");
  if (J5jesRelativeJEREC1dn_branch) J5jesRelativeJEREC1dn_branch->SetAddress(&J5jesRelativeJEREC1dn_);
  J6jesRelativeJEREC1dn_branch = tree->GetBranch("J6jesRelativeJEREC1dn");
  if (J6jesRelativeJEREC1dn_branch) J6jesRelativeJEREC1dn_branch->SetAddress(&J6jesRelativeJEREC1dn_);
  J7jesRelativeJEREC1dn_branch = tree->GetBranch("J7jesRelativeJEREC1dn");
  if (J7jesRelativeJEREC1dn_branch) J7jesRelativeJEREC1dn_branch->SetAddress(&J7jesRelativeJEREC1dn_);
  JsjesRelativeJEREC2up_branch = tree->GetBranch("JsjesRelativeJEREC2up");
  if (JsjesRelativeJEREC2up_branch) JsjesRelativeJEREC2up_branch->SetAddress(&JsjesRelativeJEREC2up_);
  FJ0jesRelativeJEREC2up_branch = tree->GetBranch("FJ0jesRelativeJEREC2up");
  if (FJ0jesRelativeJEREC2up_branch) FJ0jesRelativeJEREC2up_branch->SetAddress(&FJ0jesRelativeJEREC2up_);
  FJ1jesRelativeJEREC2up_branch = tree->GetBranch("FJ1jesRelativeJEREC2up");
  if (FJ1jesRelativeJEREC2up_branch) FJ1jesRelativeJEREC2up_branch->SetAddress(&FJ1jesRelativeJEREC2up_);
  FJ2jesRelativeJEREC2up_branch = tree->GetBranch("FJ2jesRelativeJEREC2up");
  if (FJ2jesRelativeJEREC2up_branch) FJ2jesRelativeJEREC2up_branch->SetAddress(&FJ2jesRelativeJEREC2up_);
  FJ3jesRelativeJEREC2up_branch = tree->GetBranch("FJ3jesRelativeJEREC2up");
  if (FJ3jesRelativeJEREC2up_branch) FJ3jesRelativeJEREC2up_branch->SetAddress(&FJ3jesRelativeJEREC2up_);
  FJ4jesRelativeJEREC2up_branch = tree->GetBranch("FJ4jesRelativeJEREC2up");
  if (FJ4jesRelativeJEREC2up_branch) FJ4jesRelativeJEREC2up_branch->SetAddress(&FJ4jesRelativeJEREC2up_);
  iFJ0jesRelativeJEREC2up_branch = tree->GetBranch("iFJ0jesRelativeJEREC2up");
  if (iFJ0jesRelativeJEREC2up_branch) iFJ0jesRelativeJEREC2up_branch->SetAddress(&iFJ0jesRelativeJEREC2up_);
  iFJ1jesRelativeJEREC2up_branch = tree->GetBranch("iFJ1jesRelativeJEREC2up");
  if (iFJ1jesRelativeJEREC2up_branch) iFJ1jesRelativeJEREC2up_branch->SetAddress(&iFJ1jesRelativeJEREC2up_);
  iFJ2jesRelativeJEREC2up_branch = tree->GetBranch("iFJ2jesRelativeJEREC2up");
  if (iFJ2jesRelativeJEREC2up_branch) iFJ2jesRelativeJEREC2up_branch->SetAddress(&iFJ2jesRelativeJEREC2up_);
  iFJ3jesRelativeJEREC2up_branch = tree->GetBranch("iFJ3jesRelativeJEREC2up");
  if (iFJ3jesRelativeJEREC2up_branch) iFJ3jesRelativeJEREC2up_branch->SetAddress(&iFJ3jesRelativeJEREC2up_);
  iFJ4jesRelativeJEREC2up_branch = tree->GetBranch("iFJ4jesRelativeJEREC2up");
  if (iFJ4jesRelativeJEREC2up_branch) iFJ4jesRelativeJEREC2up_branch->SetAddress(&iFJ4jesRelativeJEREC2up_);
  METjesRelativeJEREC2up_branch = tree->GetBranch("METjesRelativeJEREC2up");
  if (METjesRelativeJEREC2up_branch) METjesRelativeJEREC2up_branch->SetAddress(&METjesRelativeJEREC2up_);
  NujesRelativeJEREC2up_branch = tree->GetBranch("NujesRelativeJEREC2up");
  if (NujesRelativeJEREC2up_branch) NujesRelativeJEREC2up_branch->SetAddress(&NujesRelativeJEREC2up_);
  J0jesRelativeJEREC2up_branch = tree->GetBranch("J0jesRelativeJEREC2up");
  if (J0jesRelativeJEREC2up_branch) J0jesRelativeJEREC2up_branch->SetAddress(&J0jesRelativeJEREC2up_);
  J1jesRelativeJEREC2up_branch = tree->GetBranch("J1jesRelativeJEREC2up");
  if (J1jesRelativeJEREC2up_branch) J1jesRelativeJEREC2up_branch->SetAddress(&J1jesRelativeJEREC2up_);
  J2jesRelativeJEREC2up_branch = tree->GetBranch("J2jesRelativeJEREC2up");
  if (J2jesRelativeJEREC2up_branch) J2jesRelativeJEREC2up_branch->SetAddress(&J2jesRelativeJEREC2up_);
  J3jesRelativeJEREC2up_branch = tree->GetBranch("J3jesRelativeJEREC2up");
  if (J3jesRelativeJEREC2up_branch) J3jesRelativeJEREC2up_branch->SetAddress(&J3jesRelativeJEREC2up_);
  J4jesRelativeJEREC2up_branch = tree->GetBranch("J4jesRelativeJEREC2up");
  if (J4jesRelativeJEREC2up_branch) J4jesRelativeJEREC2up_branch->SetAddress(&J4jesRelativeJEREC2up_);
  J5jesRelativeJEREC2up_branch = tree->GetBranch("J5jesRelativeJEREC2up");
  if (J5jesRelativeJEREC2up_branch) J5jesRelativeJEREC2up_branch->SetAddress(&J5jesRelativeJEREC2up_);
  J6jesRelativeJEREC2up_branch = tree->GetBranch("J6jesRelativeJEREC2up");
  if (J6jesRelativeJEREC2up_branch) J6jesRelativeJEREC2up_branch->SetAddress(&J6jesRelativeJEREC2up_);
  J7jesRelativeJEREC2up_branch = tree->GetBranch("J7jesRelativeJEREC2up");
  if (J7jesRelativeJEREC2up_branch) J7jesRelativeJEREC2up_branch->SetAddress(&J7jesRelativeJEREC2up_);
  JsjesRelativeJEREC2dn_branch = tree->GetBranch("JsjesRelativeJEREC2dn");
  if (JsjesRelativeJEREC2dn_branch) JsjesRelativeJEREC2dn_branch->SetAddress(&JsjesRelativeJEREC2dn_);
  FJ0jesRelativeJEREC2dn_branch = tree->GetBranch("FJ0jesRelativeJEREC2dn");
  if (FJ0jesRelativeJEREC2dn_branch) FJ0jesRelativeJEREC2dn_branch->SetAddress(&FJ0jesRelativeJEREC2dn_);
  FJ1jesRelativeJEREC2dn_branch = tree->GetBranch("FJ1jesRelativeJEREC2dn");
  if (FJ1jesRelativeJEREC2dn_branch) FJ1jesRelativeJEREC2dn_branch->SetAddress(&FJ1jesRelativeJEREC2dn_);
  FJ2jesRelativeJEREC2dn_branch = tree->GetBranch("FJ2jesRelativeJEREC2dn");
  if (FJ2jesRelativeJEREC2dn_branch) FJ2jesRelativeJEREC2dn_branch->SetAddress(&FJ2jesRelativeJEREC2dn_);
  FJ3jesRelativeJEREC2dn_branch = tree->GetBranch("FJ3jesRelativeJEREC2dn");
  if (FJ3jesRelativeJEREC2dn_branch) FJ3jesRelativeJEREC2dn_branch->SetAddress(&FJ3jesRelativeJEREC2dn_);
  FJ4jesRelativeJEREC2dn_branch = tree->GetBranch("FJ4jesRelativeJEREC2dn");
  if (FJ4jesRelativeJEREC2dn_branch) FJ4jesRelativeJEREC2dn_branch->SetAddress(&FJ4jesRelativeJEREC2dn_);
  iFJ0jesRelativeJEREC2dn_branch = tree->GetBranch("iFJ0jesRelativeJEREC2dn");
  if (iFJ0jesRelativeJEREC2dn_branch) iFJ0jesRelativeJEREC2dn_branch->SetAddress(&iFJ0jesRelativeJEREC2dn_);
  iFJ1jesRelativeJEREC2dn_branch = tree->GetBranch("iFJ1jesRelativeJEREC2dn");
  if (iFJ1jesRelativeJEREC2dn_branch) iFJ1jesRelativeJEREC2dn_branch->SetAddress(&iFJ1jesRelativeJEREC2dn_);
  iFJ2jesRelativeJEREC2dn_branch = tree->GetBranch("iFJ2jesRelativeJEREC2dn");
  if (iFJ2jesRelativeJEREC2dn_branch) iFJ2jesRelativeJEREC2dn_branch->SetAddress(&iFJ2jesRelativeJEREC2dn_);
  iFJ3jesRelativeJEREC2dn_branch = tree->GetBranch("iFJ3jesRelativeJEREC2dn");
  if (iFJ3jesRelativeJEREC2dn_branch) iFJ3jesRelativeJEREC2dn_branch->SetAddress(&iFJ3jesRelativeJEREC2dn_);
  iFJ4jesRelativeJEREC2dn_branch = tree->GetBranch("iFJ4jesRelativeJEREC2dn");
  if (iFJ4jesRelativeJEREC2dn_branch) iFJ4jesRelativeJEREC2dn_branch->SetAddress(&iFJ4jesRelativeJEREC2dn_);
  METjesRelativeJEREC2dn_branch = tree->GetBranch("METjesRelativeJEREC2dn");
  if (METjesRelativeJEREC2dn_branch) METjesRelativeJEREC2dn_branch->SetAddress(&METjesRelativeJEREC2dn_);
  NujesRelativeJEREC2dn_branch = tree->GetBranch("NujesRelativeJEREC2dn");
  if (NujesRelativeJEREC2dn_branch) NujesRelativeJEREC2dn_branch->SetAddress(&NujesRelativeJEREC2dn_);
  J0jesRelativeJEREC2dn_branch = tree->GetBranch("J0jesRelativeJEREC2dn");
  if (J0jesRelativeJEREC2dn_branch) J0jesRelativeJEREC2dn_branch->SetAddress(&J0jesRelativeJEREC2dn_);
  J1jesRelativeJEREC2dn_branch = tree->GetBranch("J1jesRelativeJEREC2dn");
  if (J1jesRelativeJEREC2dn_branch) J1jesRelativeJEREC2dn_branch->SetAddress(&J1jesRelativeJEREC2dn_);
  J2jesRelativeJEREC2dn_branch = tree->GetBranch("J2jesRelativeJEREC2dn");
  if (J2jesRelativeJEREC2dn_branch) J2jesRelativeJEREC2dn_branch->SetAddress(&J2jesRelativeJEREC2dn_);
  J3jesRelativeJEREC2dn_branch = tree->GetBranch("J3jesRelativeJEREC2dn");
  if (J3jesRelativeJEREC2dn_branch) J3jesRelativeJEREC2dn_branch->SetAddress(&J3jesRelativeJEREC2dn_);
  J4jesRelativeJEREC2dn_branch = tree->GetBranch("J4jesRelativeJEREC2dn");
  if (J4jesRelativeJEREC2dn_branch) J4jesRelativeJEREC2dn_branch->SetAddress(&J4jesRelativeJEREC2dn_);
  J5jesRelativeJEREC2dn_branch = tree->GetBranch("J5jesRelativeJEREC2dn");
  if (J5jesRelativeJEREC2dn_branch) J5jesRelativeJEREC2dn_branch->SetAddress(&J5jesRelativeJEREC2dn_);
  J6jesRelativeJEREC2dn_branch = tree->GetBranch("J6jesRelativeJEREC2dn");
  if (J6jesRelativeJEREC2dn_branch) J6jesRelativeJEREC2dn_branch->SetAddress(&J6jesRelativeJEREC2dn_);
  J7jesRelativeJEREC2dn_branch = tree->GetBranch("J7jesRelativeJEREC2dn");
  if (J7jesRelativeJEREC2dn_branch) J7jesRelativeJEREC2dn_branch->SetAddress(&J7jesRelativeJEREC2dn_);
  JsjesRelativeJERHFup_branch = tree->GetBranch("JsjesRelativeJERHFup");
  if (JsjesRelativeJERHFup_branch) JsjesRelativeJERHFup_branch->SetAddress(&JsjesRelativeJERHFup_);
  FJ0jesRelativeJERHFup_branch = tree->GetBranch("FJ0jesRelativeJERHFup");
  if (FJ0jesRelativeJERHFup_branch) FJ0jesRelativeJERHFup_branch->SetAddress(&FJ0jesRelativeJERHFup_);
  FJ1jesRelativeJERHFup_branch = tree->GetBranch("FJ1jesRelativeJERHFup");
  if (FJ1jesRelativeJERHFup_branch) FJ1jesRelativeJERHFup_branch->SetAddress(&FJ1jesRelativeJERHFup_);
  FJ2jesRelativeJERHFup_branch = tree->GetBranch("FJ2jesRelativeJERHFup");
  if (FJ2jesRelativeJERHFup_branch) FJ2jesRelativeJERHFup_branch->SetAddress(&FJ2jesRelativeJERHFup_);
  FJ3jesRelativeJERHFup_branch = tree->GetBranch("FJ3jesRelativeJERHFup");
  if (FJ3jesRelativeJERHFup_branch) FJ3jesRelativeJERHFup_branch->SetAddress(&FJ3jesRelativeJERHFup_);
  FJ4jesRelativeJERHFup_branch = tree->GetBranch("FJ4jesRelativeJERHFup");
  if (FJ4jesRelativeJERHFup_branch) FJ4jesRelativeJERHFup_branch->SetAddress(&FJ4jesRelativeJERHFup_);
  iFJ0jesRelativeJERHFup_branch = tree->GetBranch("iFJ0jesRelativeJERHFup");
  if (iFJ0jesRelativeJERHFup_branch) iFJ0jesRelativeJERHFup_branch->SetAddress(&iFJ0jesRelativeJERHFup_);
  iFJ1jesRelativeJERHFup_branch = tree->GetBranch("iFJ1jesRelativeJERHFup");
  if (iFJ1jesRelativeJERHFup_branch) iFJ1jesRelativeJERHFup_branch->SetAddress(&iFJ1jesRelativeJERHFup_);
  iFJ2jesRelativeJERHFup_branch = tree->GetBranch("iFJ2jesRelativeJERHFup");
  if (iFJ2jesRelativeJERHFup_branch) iFJ2jesRelativeJERHFup_branch->SetAddress(&iFJ2jesRelativeJERHFup_);
  iFJ3jesRelativeJERHFup_branch = tree->GetBranch("iFJ3jesRelativeJERHFup");
  if (iFJ3jesRelativeJERHFup_branch) iFJ3jesRelativeJERHFup_branch->SetAddress(&iFJ3jesRelativeJERHFup_);
  iFJ4jesRelativeJERHFup_branch = tree->GetBranch("iFJ4jesRelativeJERHFup");
  if (iFJ4jesRelativeJERHFup_branch) iFJ4jesRelativeJERHFup_branch->SetAddress(&iFJ4jesRelativeJERHFup_);
  METjesRelativeJERHFup_branch = tree->GetBranch("METjesRelativeJERHFup");
  if (METjesRelativeJERHFup_branch) METjesRelativeJERHFup_branch->SetAddress(&METjesRelativeJERHFup_);
  NujesRelativeJERHFup_branch = tree->GetBranch("NujesRelativeJERHFup");
  if (NujesRelativeJERHFup_branch) NujesRelativeJERHFup_branch->SetAddress(&NujesRelativeJERHFup_);
  J0jesRelativeJERHFup_branch = tree->GetBranch("J0jesRelativeJERHFup");
  if (J0jesRelativeJERHFup_branch) J0jesRelativeJERHFup_branch->SetAddress(&J0jesRelativeJERHFup_);
  J1jesRelativeJERHFup_branch = tree->GetBranch("J1jesRelativeJERHFup");
  if (J1jesRelativeJERHFup_branch) J1jesRelativeJERHFup_branch->SetAddress(&J1jesRelativeJERHFup_);
  J2jesRelativeJERHFup_branch = tree->GetBranch("J2jesRelativeJERHFup");
  if (J2jesRelativeJERHFup_branch) J2jesRelativeJERHFup_branch->SetAddress(&J2jesRelativeJERHFup_);
  J3jesRelativeJERHFup_branch = tree->GetBranch("J3jesRelativeJERHFup");
  if (J3jesRelativeJERHFup_branch) J3jesRelativeJERHFup_branch->SetAddress(&J3jesRelativeJERHFup_);
  J4jesRelativeJERHFup_branch = tree->GetBranch("J4jesRelativeJERHFup");
  if (J4jesRelativeJERHFup_branch) J4jesRelativeJERHFup_branch->SetAddress(&J4jesRelativeJERHFup_);
  J5jesRelativeJERHFup_branch = tree->GetBranch("J5jesRelativeJERHFup");
  if (J5jesRelativeJERHFup_branch) J5jesRelativeJERHFup_branch->SetAddress(&J5jesRelativeJERHFup_);
  J6jesRelativeJERHFup_branch = tree->GetBranch("J6jesRelativeJERHFup");
  if (J6jesRelativeJERHFup_branch) J6jesRelativeJERHFup_branch->SetAddress(&J6jesRelativeJERHFup_);
  J7jesRelativeJERHFup_branch = tree->GetBranch("J7jesRelativeJERHFup");
  if (J7jesRelativeJERHFup_branch) J7jesRelativeJERHFup_branch->SetAddress(&J7jesRelativeJERHFup_);
  JsjesRelativeJERHFdn_branch = tree->GetBranch("JsjesRelativeJERHFdn");
  if (JsjesRelativeJERHFdn_branch) JsjesRelativeJERHFdn_branch->SetAddress(&JsjesRelativeJERHFdn_);
  FJ0jesRelativeJERHFdn_branch = tree->GetBranch("FJ0jesRelativeJERHFdn");
  if (FJ0jesRelativeJERHFdn_branch) FJ0jesRelativeJERHFdn_branch->SetAddress(&FJ0jesRelativeJERHFdn_);
  FJ1jesRelativeJERHFdn_branch = tree->GetBranch("FJ1jesRelativeJERHFdn");
  if (FJ1jesRelativeJERHFdn_branch) FJ1jesRelativeJERHFdn_branch->SetAddress(&FJ1jesRelativeJERHFdn_);
  FJ2jesRelativeJERHFdn_branch = tree->GetBranch("FJ2jesRelativeJERHFdn");
  if (FJ2jesRelativeJERHFdn_branch) FJ2jesRelativeJERHFdn_branch->SetAddress(&FJ2jesRelativeJERHFdn_);
  FJ3jesRelativeJERHFdn_branch = tree->GetBranch("FJ3jesRelativeJERHFdn");
  if (FJ3jesRelativeJERHFdn_branch) FJ3jesRelativeJERHFdn_branch->SetAddress(&FJ3jesRelativeJERHFdn_);
  FJ4jesRelativeJERHFdn_branch = tree->GetBranch("FJ4jesRelativeJERHFdn");
  if (FJ4jesRelativeJERHFdn_branch) FJ4jesRelativeJERHFdn_branch->SetAddress(&FJ4jesRelativeJERHFdn_);
  iFJ0jesRelativeJERHFdn_branch = tree->GetBranch("iFJ0jesRelativeJERHFdn");
  if (iFJ0jesRelativeJERHFdn_branch) iFJ0jesRelativeJERHFdn_branch->SetAddress(&iFJ0jesRelativeJERHFdn_);
  iFJ1jesRelativeJERHFdn_branch = tree->GetBranch("iFJ1jesRelativeJERHFdn");
  if (iFJ1jesRelativeJERHFdn_branch) iFJ1jesRelativeJERHFdn_branch->SetAddress(&iFJ1jesRelativeJERHFdn_);
  iFJ2jesRelativeJERHFdn_branch = tree->GetBranch("iFJ2jesRelativeJERHFdn");
  if (iFJ2jesRelativeJERHFdn_branch) iFJ2jesRelativeJERHFdn_branch->SetAddress(&iFJ2jesRelativeJERHFdn_);
  iFJ3jesRelativeJERHFdn_branch = tree->GetBranch("iFJ3jesRelativeJERHFdn");
  if (iFJ3jesRelativeJERHFdn_branch) iFJ3jesRelativeJERHFdn_branch->SetAddress(&iFJ3jesRelativeJERHFdn_);
  iFJ4jesRelativeJERHFdn_branch = tree->GetBranch("iFJ4jesRelativeJERHFdn");
  if (iFJ4jesRelativeJERHFdn_branch) iFJ4jesRelativeJERHFdn_branch->SetAddress(&iFJ4jesRelativeJERHFdn_);
  METjesRelativeJERHFdn_branch = tree->GetBranch("METjesRelativeJERHFdn");
  if (METjesRelativeJERHFdn_branch) METjesRelativeJERHFdn_branch->SetAddress(&METjesRelativeJERHFdn_);
  NujesRelativeJERHFdn_branch = tree->GetBranch("NujesRelativeJERHFdn");
  if (NujesRelativeJERHFdn_branch) NujesRelativeJERHFdn_branch->SetAddress(&NujesRelativeJERHFdn_);
  J0jesRelativeJERHFdn_branch = tree->GetBranch("J0jesRelativeJERHFdn");
  if (J0jesRelativeJERHFdn_branch) J0jesRelativeJERHFdn_branch->SetAddress(&J0jesRelativeJERHFdn_);
  J1jesRelativeJERHFdn_branch = tree->GetBranch("J1jesRelativeJERHFdn");
  if (J1jesRelativeJERHFdn_branch) J1jesRelativeJERHFdn_branch->SetAddress(&J1jesRelativeJERHFdn_);
  J2jesRelativeJERHFdn_branch = tree->GetBranch("J2jesRelativeJERHFdn");
  if (J2jesRelativeJERHFdn_branch) J2jesRelativeJERHFdn_branch->SetAddress(&J2jesRelativeJERHFdn_);
  J3jesRelativeJERHFdn_branch = tree->GetBranch("J3jesRelativeJERHFdn");
  if (J3jesRelativeJERHFdn_branch) J3jesRelativeJERHFdn_branch->SetAddress(&J3jesRelativeJERHFdn_);
  J4jesRelativeJERHFdn_branch = tree->GetBranch("J4jesRelativeJERHFdn");
  if (J4jesRelativeJERHFdn_branch) J4jesRelativeJERHFdn_branch->SetAddress(&J4jesRelativeJERHFdn_);
  J5jesRelativeJERHFdn_branch = tree->GetBranch("J5jesRelativeJERHFdn");
  if (J5jesRelativeJERHFdn_branch) J5jesRelativeJERHFdn_branch->SetAddress(&J5jesRelativeJERHFdn_);
  J6jesRelativeJERHFdn_branch = tree->GetBranch("J6jesRelativeJERHFdn");
  if (J6jesRelativeJERHFdn_branch) J6jesRelativeJERHFdn_branch->SetAddress(&J6jesRelativeJERHFdn_);
  J7jesRelativeJERHFdn_branch = tree->GetBranch("J7jesRelativeJERHFdn");
  if (J7jesRelativeJERHFdn_branch) J7jesRelativeJERHFdn_branch->SetAddress(&J7jesRelativeJERHFdn_);
  JsjesRelativePtBBup_branch = tree->GetBranch("JsjesRelativePtBBup");
  if (JsjesRelativePtBBup_branch) JsjesRelativePtBBup_branch->SetAddress(&JsjesRelativePtBBup_);
  FJ0jesRelativePtBBup_branch = tree->GetBranch("FJ0jesRelativePtBBup");
  if (FJ0jesRelativePtBBup_branch) FJ0jesRelativePtBBup_branch->SetAddress(&FJ0jesRelativePtBBup_);
  FJ1jesRelativePtBBup_branch = tree->GetBranch("FJ1jesRelativePtBBup");
  if (FJ1jesRelativePtBBup_branch) FJ1jesRelativePtBBup_branch->SetAddress(&FJ1jesRelativePtBBup_);
  FJ2jesRelativePtBBup_branch = tree->GetBranch("FJ2jesRelativePtBBup");
  if (FJ2jesRelativePtBBup_branch) FJ2jesRelativePtBBup_branch->SetAddress(&FJ2jesRelativePtBBup_);
  FJ3jesRelativePtBBup_branch = tree->GetBranch("FJ3jesRelativePtBBup");
  if (FJ3jesRelativePtBBup_branch) FJ3jesRelativePtBBup_branch->SetAddress(&FJ3jesRelativePtBBup_);
  FJ4jesRelativePtBBup_branch = tree->GetBranch("FJ4jesRelativePtBBup");
  if (FJ4jesRelativePtBBup_branch) FJ4jesRelativePtBBup_branch->SetAddress(&FJ4jesRelativePtBBup_);
  iFJ0jesRelativePtBBup_branch = tree->GetBranch("iFJ0jesRelativePtBBup");
  if (iFJ0jesRelativePtBBup_branch) iFJ0jesRelativePtBBup_branch->SetAddress(&iFJ0jesRelativePtBBup_);
  iFJ1jesRelativePtBBup_branch = tree->GetBranch("iFJ1jesRelativePtBBup");
  if (iFJ1jesRelativePtBBup_branch) iFJ1jesRelativePtBBup_branch->SetAddress(&iFJ1jesRelativePtBBup_);
  iFJ2jesRelativePtBBup_branch = tree->GetBranch("iFJ2jesRelativePtBBup");
  if (iFJ2jesRelativePtBBup_branch) iFJ2jesRelativePtBBup_branch->SetAddress(&iFJ2jesRelativePtBBup_);
  iFJ3jesRelativePtBBup_branch = tree->GetBranch("iFJ3jesRelativePtBBup");
  if (iFJ3jesRelativePtBBup_branch) iFJ3jesRelativePtBBup_branch->SetAddress(&iFJ3jesRelativePtBBup_);
  iFJ4jesRelativePtBBup_branch = tree->GetBranch("iFJ4jesRelativePtBBup");
  if (iFJ4jesRelativePtBBup_branch) iFJ4jesRelativePtBBup_branch->SetAddress(&iFJ4jesRelativePtBBup_);
  METjesRelativePtBBup_branch = tree->GetBranch("METjesRelativePtBBup");
  if (METjesRelativePtBBup_branch) METjesRelativePtBBup_branch->SetAddress(&METjesRelativePtBBup_);
  NujesRelativePtBBup_branch = tree->GetBranch("NujesRelativePtBBup");
  if (NujesRelativePtBBup_branch) NujesRelativePtBBup_branch->SetAddress(&NujesRelativePtBBup_);
  J0jesRelativePtBBup_branch = tree->GetBranch("J0jesRelativePtBBup");
  if (J0jesRelativePtBBup_branch) J0jesRelativePtBBup_branch->SetAddress(&J0jesRelativePtBBup_);
  J1jesRelativePtBBup_branch = tree->GetBranch("J1jesRelativePtBBup");
  if (J1jesRelativePtBBup_branch) J1jesRelativePtBBup_branch->SetAddress(&J1jesRelativePtBBup_);
  J2jesRelativePtBBup_branch = tree->GetBranch("J2jesRelativePtBBup");
  if (J2jesRelativePtBBup_branch) J2jesRelativePtBBup_branch->SetAddress(&J2jesRelativePtBBup_);
  J3jesRelativePtBBup_branch = tree->GetBranch("J3jesRelativePtBBup");
  if (J3jesRelativePtBBup_branch) J3jesRelativePtBBup_branch->SetAddress(&J3jesRelativePtBBup_);
  J4jesRelativePtBBup_branch = tree->GetBranch("J4jesRelativePtBBup");
  if (J4jesRelativePtBBup_branch) J4jesRelativePtBBup_branch->SetAddress(&J4jesRelativePtBBup_);
  J5jesRelativePtBBup_branch = tree->GetBranch("J5jesRelativePtBBup");
  if (J5jesRelativePtBBup_branch) J5jesRelativePtBBup_branch->SetAddress(&J5jesRelativePtBBup_);
  J6jesRelativePtBBup_branch = tree->GetBranch("J6jesRelativePtBBup");
  if (J6jesRelativePtBBup_branch) J6jesRelativePtBBup_branch->SetAddress(&J6jesRelativePtBBup_);
  J7jesRelativePtBBup_branch = tree->GetBranch("J7jesRelativePtBBup");
  if (J7jesRelativePtBBup_branch) J7jesRelativePtBBup_branch->SetAddress(&J7jesRelativePtBBup_);
  JsjesRelativePtBBdn_branch = tree->GetBranch("JsjesRelativePtBBdn");
  if (JsjesRelativePtBBdn_branch) JsjesRelativePtBBdn_branch->SetAddress(&JsjesRelativePtBBdn_);
  FJ0jesRelativePtBBdn_branch = tree->GetBranch("FJ0jesRelativePtBBdn");
  if (FJ0jesRelativePtBBdn_branch) FJ0jesRelativePtBBdn_branch->SetAddress(&FJ0jesRelativePtBBdn_);
  FJ1jesRelativePtBBdn_branch = tree->GetBranch("FJ1jesRelativePtBBdn");
  if (FJ1jesRelativePtBBdn_branch) FJ1jesRelativePtBBdn_branch->SetAddress(&FJ1jesRelativePtBBdn_);
  FJ2jesRelativePtBBdn_branch = tree->GetBranch("FJ2jesRelativePtBBdn");
  if (FJ2jesRelativePtBBdn_branch) FJ2jesRelativePtBBdn_branch->SetAddress(&FJ2jesRelativePtBBdn_);
  FJ3jesRelativePtBBdn_branch = tree->GetBranch("FJ3jesRelativePtBBdn");
  if (FJ3jesRelativePtBBdn_branch) FJ3jesRelativePtBBdn_branch->SetAddress(&FJ3jesRelativePtBBdn_);
  FJ4jesRelativePtBBdn_branch = tree->GetBranch("FJ4jesRelativePtBBdn");
  if (FJ4jesRelativePtBBdn_branch) FJ4jesRelativePtBBdn_branch->SetAddress(&FJ4jesRelativePtBBdn_);
  iFJ0jesRelativePtBBdn_branch = tree->GetBranch("iFJ0jesRelativePtBBdn");
  if (iFJ0jesRelativePtBBdn_branch) iFJ0jesRelativePtBBdn_branch->SetAddress(&iFJ0jesRelativePtBBdn_);
  iFJ1jesRelativePtBBdn_branch = tree->GetBranch("iFJ1jesRelativePtBBdn");
  if (iFJ1jesRelativePtBBdn_branch) iFJ1jesRelativePtBBdn_branch->SetAddress(&iFJ1jesRelativePtBBdn_);
  iFJ2jesRelativePtBBdn_branch = tree->GetBranch("iFJ2jesRelativePtBBdn");
  if (iFJ2jesRelativePtBBdn_branch) iFJ2jesRelativePtBBdn_branch->SetAddress(&iFJ2jesRelativePtBBdn_);
  iFJ3jesRelativePtBBdn_branch = tree->GetBranch("iFJ3jesRelativePtBBdn");
  if (iFJ3jesRelativePtBBdn_branch) iFJ3jesRelativePtBBdn_branch->SetAddress(&iFJ3jesRelativePtBBdn_);
  iFJ4jesRelativePtBBdn_branch = tree->GetBranch("iFJ4jesRelativePtBBdn");
  if (iFJ4jesRelativePtBBdn_branch) iFJ4jesRelativePtBBdn_branch->SetAddress(&iFJ4jesRelativePtBBdn_);
  METjesRelativePtBBdn_branch = tree->GetBranch("METjesRelativePtBBdn");
  if (METjesRelativePtBBdn_branch) METjesRelativePtBBdn_branch->SetAddress(&METjesRelativePtBBdn_);
  NujesRelativePtBBdn_branch = tree->GetBranch("NujesRelativePtBBdn");
  if (NujesRelativePtBBdn_branch) NujesRelativePtBBdn_branch->SetAddress(&NujesRelativePtBBdn_);
  J0jesRelativePtBBdn_branch = tree->GetBranch("J0jesRelativePtBBdn");
  if (J0jesRelativePtBBdn_branch) J0jesRelativePtBBdn_branch->SetAddress(&J0jesRelativePtBBdn_);
  J1jesRelativePtBBdn_branch = tree->GetBranch("J1jesRelativePtBBdn");
  if (J1jesRelativePtBBdn_branch) J1jesRelativePtBBdn_branch->SetAddress(&J1jesRelativePtBBdn_);
  J2jesRelativePtBBdn_branch = tree->GetBranch("J2jesRelativePtBBdn");
  if (J2jesRelativePtBBdn_branch) J2jesRelativePtBBdn_branch->SetAddress(&J2jesRelativePtBBdn_);
  J3jesRelativePtBBdn_branch = tree->GetBranch("J3jesRelativePtBBdn");
  if (J3jesRelativePtBBdn_branch) J3jesRelativePtBBdn_branch->SetAddress(&J3jesRelativePtBBdn_);
  J4jesRelativePtBBdn_branch = tree->GetBranch("J4jesRelativePtBBdn");
  if (J4jesRelativePtBBdn_branch) J4jesRelativePtBBdn_branch->SetAddress(&J4jesRelativePtBBdn_);
  J5jesRelativePtBBdn_branch = tree->GetBranch("J5jesRelativePtBBdn");
  if (J5jesRelativePtBBdn_branch) J5jesRelativePtBBdn_branch->SetAddress(&J5jesRelativePtBBdn_);
  J6jesRelativePtBBdn_branch = tree->GetBranch("J6jesRelativePtBBdn");
  if (J6jesRelativePtBBdn_branch) J6jesRelativePtBBdn_branch->SetAddress(&J6jesRelativePtBBdn_);
  J7jesRelativePtBBdn_branch = tree->GetBranch("J7jesRelativePtBBdn");
  if (J7jesRelativePtBBdn_branch) J7jesRelativePtBBdn_branch->SetAddress(&J7jesRelativePtBBdn_);
  JsjesRelativePtEC1up_branch = tree->GetBranch("JsjesRelativePtEC1up");
  if (JsjesRelativePtEC1up_branch) JsjesRelativePtEC1up_branch->SetAddress(&JsjesRelativePtEC1up_);
  FJ0jesRelativePtEC1up_branch = tree->GetBranch("FJ0jesRelativePtEC1up");
  if (FJ0jesRelativePtEC1up_branch) FJ0jesRelativePtEC1up_branch->SetAddress(&FJ0jesRelativePtEC1up_);
  FJ1jesRelativePtEC1up_branch = tree->GetBranch("FJ1jesRelativePtEC1up");
  if (FJ1jesRelativePtEC1up_branch) FJ1jesRelativePtEC1up_branch->SetAddress(&FJ1jesRelativePtEC1up_);
  FJ2jesRelativePtEC1up_branch = tree->GetBranch("FJ2jesRelativePtEC1up");
  if (FJ2jesRelativePtEC1up_branch) FJ2jesRelativePtEC1up_branch->SetAddress(&FJ2jesRelativePtEC1up_);
  FJ3jesRelativePtEC1up_branch = tree->GetBranch("FJ3jesRelativePtEC1up");
  if (FJ3jesRelativePtEC1up_branch) FJ3jesRelativePtEC1up_branch->SetAddress(&FJ3jesRelativePtEC1up_);
  FJ4jesRelativePtEC1up_branch = tree->GetBranch("FJ4jesRelativePtEC1up");
  if (FJ4jesRelativePtEC1up_branch) FJ4jesRelativePtEC1up_branch->SetAddress(&FJ4jesRelativePtEC1up_);
  iFJ0jesRelativePtEC1up_branch = tree->GetBranch("iFJ0jesRelativePtEC1up");
  if (iFJ0jesRelativePtEC1up_branch) iFJ0jesRelativePtEC1up_branch->SetAddress(&iFJ0jesRelativePtEC1up_);
  iFJ1jesRelativePtEC1up_branch = tree->GetBranch("iFJ1jesRelativePtEC1up");
  if (iFJ1jesRelativePtEC1up_branch) iFJ1jesRelativePtEC1up_branch->SetAddress(&iFJ1jesRelativePtEC1up_);
  iFJ2jesRelativePtEC1up_branch = tree->GetBranch("iFJ2jesRelativePtEC1up");
  if (iFJ2jesRelativePtEC1up_branch) iFJ2jesRelativePtEC1up_branch->SetAddress(&iFJ2jesRelativePtEC1up_);
  iFJ3jesRelativePtEC1up_branch = tree->GetBranch("iFJ3jesRelativePtEC1up");
  if (iFJ3jesRelativePtEC1up_branch) iFJ3jesRelativePtEC1up_branch->SetAddress(&iFJ3jesRelativePtEC1up_);
  iFJ4jesRelativePtEC1up_branch = tree->GetBranch("iFJ4jesRelativePtEC1up");
  if (iFJ4jesRelativePtEC1up_branch) iFJ4jesRelativePtEC1up_branch->SetAddress(&iFJ4jesRelativePtEC1up_);
  METjesRelativePtEC1up_branch = tree->GetBranch("METjesRelativePtEC1up");
  if (METjesRelativePtEC1up_branch) METjesRelativePtEC1up_branch->SetAddress(&METjesRelativePtEC1up_);
  NujesRelativePtEC1up_branch = tree->GetBranch("NujesRelativePtEC1up");
  if (NujesRelativePtEC1up_branch) NujesRelativePtEC1up_branch->SetAddress(&NujesRelativePtEC1up_);
  J0jesRelativePtEC1up_branch = tree->GetBranch("J0jesRelativePtEC1up");
  if (J0jesRelativePtEC1up_branch) J0jesRelativePtEC1up_branch->SetAddress(&J0jesRelativePtEC1up_);
  J1jesRelativePtEC1up_branch = tree->GetBranch("J1jesRelativePtEC1up");
  if (J1jesRelativePtEC1up_branch) J1jesRelativePtEC1up_branch->SetAddress(&J1jesRelativePtEC1up_);
  J2jesRelativePtEC1up_branch = tree->GetBranch("J2jesRelativePtEC1up");
  if (J2jesRelativePtEC1up_branch) J2jesRelativePtEC1up_branch->SetAddress(&J2jesRelativePtEC1up_);
  J3jesRelativePtEC1up_branch = tree->GetBranch("J3jesRelativePtEC1up");
  if (J3jesRelativePtEC1up_branch) J3jesRelativePtEC1up_branch->SetAddress(&J3jesRelativePtEC1up_);
  J4jesRelativePtEC1up_branch = tree->GetBranch("J4jesRelativePtEC1up");
  if (J4jesRelativePtEC1up_branch) J4jesRelativePtEC1up_branch->SetAddress(&J4jesRelativePtEC1up_);
  J5jesRelativePtEC1up_branch = tree->GetBranch("J5jesRelativePtEC1up");
  if (J5jesRelativePtEC1up_branch) J5jesRelativePtEC1up_branch->SetAddress(&J5jesRelativePtEC1up_);
  J6jesRelativePtEC1up_branch = tree->GetBranch("J6jesRelativePtEC1up");
  if (J6jesRelativePtEC1up_branch) J6jesRelativePtEC1up_branch->SetAddress(&J6jesRelativePtEC1up_);
  J7jesRelativePtEC1up_branch = tree->GetBranch("J7jesRelativePtEC1up");
  if (J7jesRelativePtEC1up_branch) J7jesRelativePtEC1up_branch->SetAddress(&J7jesRelativePtEC1up_);
  JsjesRelativePtEC1dn_branch = tree->GetBranch("JsjesRelativePtEC1dn");
  if (JsjesRelativePtEC1dn_branch) JsjesRelativePtEC1dn_branch->SetAddress(&JsjesRelativePtEC1dn_);
  FJ0jesRelativePtEC1dn_branch = tree->GetBranch("FJ0jesRelativePtEC1dn");
  if (FJ0jesRelativePtEC1dn_branch) FJ0jesRelativePtEC1dn_branch->SetAddress(&FJ0jesRelativePtEC1dn_);
  FJ1jesRelativePtEC1dn_branch = tree->GetBranch("FJ1jesRelativePtEC1dn");
  if (FJ1jesRelativePtEC1dn_branch) FJ1jesRelativePtEC1dn_branch->SetAddress(&FJ1jesRelativePtEC1dn_);
  FJ2jesRelativePtEC1dn_branch = tree->GetBranch("FJ2jesRelativePtEC1dn");
  if (FJ2jesRelativePtEC1dn_branch) FJ2jesRelativePtEC1dn_branch->SetAddress(&FJ2jesRelativePtEC1dn_);
  FJ3jesRelativePtEC1dn_branch = tree->GetBranch("FJ3jesRelativePtEC1dn");
  if (FJ3jesRelativePtEC1dn_branch) FJ3jesRelativePtEC1dn_branch->SetAddress(&FJ3jesRelativePtEC1dn_);
  FJ4jesRelativePtEC1dn_branch = tree->GetBranch("FJ4jesRelativePtEC1dn");
  if (FJ4jesRelativePtEC1dn_branch) FJ4jesRelativePtEC1dn_branch->SetAddress(&FJ4jesRelativePtEC1dn_);
  iFJ0jesRelativePtEC1dn_branch = tree->GetBranch("iFJ0jesRelativePtEC1dn");
  if (iFJ0jesRelativePtEC1dn_branch) iFJ0jesRelativePtEC1dn_branch->SetAddress(&iFJ0jesRelativePtEC1dn_);
  iFJ1jesRelativePtEC1dn_branch = tree->GetBranch("iFJ1jesRelativePtEC1dn");
  if (iFJ1jesRelativePtEC1dn_branch) iFJ1jesRelativePtEC1dn_branch->SetAddress(&iFJ1jesRelativePtEC1dn_);
  iFJ2jesRelativePtEC1dn_branch = tree->GetBranch("iFJ2jesRelativePtEC1dn");
  if (iFJ2jesRelativePtEC1dn_branch) iFJ2jesRelativePtEC1dn_branch->SetAddress(&iFJ2jesRelativePtEC1dn_);
  iFJ3jesRelativePtEC1dn_branch = tree->GetBranch("iFJ3jesRelativePtEC1dn");
  if (iFJ3jesRelativePtEC1dn_branch) iFJ3jesRelativePtEC1dn_branch->SetAddress(&iFJ3jesRelativePtEC1dn_);
  iFJ4jesRelativePtEC1dn_branch = tree->GetBranch("iFJ4jesRelativePtEC1dn");
  if (iFJ4jesRelativePtEC1dn_branch) iFJ4jesRelativePtEC1dn_branch->SetAddress(&iFJ4jesRelativePtEC1dn_);
  METjesRelativePtEC1dn_branch = tree->GetBranch("METjesRelativePtEC1dn");
  if (METjesRelativePtEC1dn_branch) METjesRelativePtEC1dn_branch->SetAddress(&METjesRelativePtEC1dn_);
  NujesRelativePtEC1dn_branch = tree->GetBranch("NujesRelativePtEC1dn");
  if (NujesRelativePtEC1dn_branch) NujesRelativePtEC1dn_branch->SetAddress(&NujesRelativePtEC1dn_);
  J0jesRelativePtEC1dn_branch = tree->GetBranch("J0jesRelativePtEC1dn");
  if (J0jesRelativePtEC1dn_branch) J0jesRelativePtEC1dn_branch->SetAddress(&J0jesRelativePtEC1dn_);
  J1jesRelativePtEC1dn_branch = tree->GetBranch("J1jesRelativePtEC1dn");
  if (J1jesRelativePtEC1dn_branch) J1jesRelativePtEC1dn_branch->SetAddress(&J1jesRelativePtEC1dn_);
  J2jesRelativePtEC1dn_branch = tree->GetBranch("J2jesRelativePtEC1dn");
  if (J2jesRelativePtEC1dn_branch) J2jesRelativePtEC1dn_branch->SetAddress(&J2jesRelativePtEC1dn_);
  J3jesRelativePtEC1dn_branch = tree->GetBranch("J3jesRelativePtEC1dn");
  if (J3jesRelativePtEC1dn_branch) J3jesRelativePtEC1dn_branch->SetAddress(&J3jesRelativePtEC1dn_);
  J4jesRelativePtEC1dn_branch = tree->GetBranch("J4jesRelativePtEC1dn");
  if (J4jesRelativePtEC1dn_branch) J4jesRelativePtEC1dn_branch->SetAddress(&J4jesRelativePtEC1dn_);
  J5jesRelativePtEC1dn_branch = tree->GetBranch("J5jesRelativePtEC1dn");
  if (J5jesRelativePtEC1dn_branch) J5jesRelativePtEC1dn_branch->SetAddress(&J5jesRelativePtEC1dn_);
  J6jesRelativePtEC1dn_branch = tree->GetBranch("J6jesRelativePtEC1dn");
  if (J6jesRelativePtEC1dn_branch) J6jesRelativePtEC1dn_branch->SetAddress(&J6jesRelativePtEC1dn_);
  J7jesRelativePtEC1dn_branch = tree->GetBranch("J7jesRelativePtEC1dn");
  if (J7jesRelativePtEC1dn_branch) J7jesRelativePtEC1dn_branch->SetAddress(&J7jesRelativePtEC1dn_);
  JsjesRelativePtEC2up_branch = tree->GetBranch("JsjesRelativePtEC2up");
  if (JsjesRelativePtEC2up_branch) JsjesRelativePtEC2up_branch->SetAddress(&JsjesRelativePtEC2up_);
  FJ0jesRelativePtEC2up_branch = tree->GetBranch("FJ0jesRelativePtEC2up");
  if (FJ0jesRelativePtEC2up_branch) FJ0jesRelativePtEC2up_branch->SetAddress(&FJ0jesRelativePtEC2up_);
  FJ1jesRelativePtEC2up_branch = tree->GetBranch("FJ1jesRelativePtEC2up");
  if (FJ1jesRelativePtEC2up_branch) FJ1jesRelativePtEC2up_branch->SetAddress(&FJ1jesRelativePtEC2up_);
  FJ2jesRelativePtEC2up_branch = tree->GetBranch("FJ2jesRelativePtEC2up");
  if (FJ2jesRelativePtEC2up_branch) FJ2jesRelativePtEC2up_branch->SetAddress(&FJ2jesRelativePtEC2up_);
  FJ3jesRelativePtEC2up_branch = tree->GetBranch("FJ3jesRelativePtEC2up");
  if (FJ3jesRelativePtEC2up_branch) FJ3jesRelativePtEC2up_branch->SetAddress(&FJ3jesRelativePtEC2up_);
  FJ4jesRelativePtEC2up_branch = tree->GetBranch("FJ4jesRelativePtEC2up");
  if (FJ4jesRelativePtEC2up_branch) FJ4jesRelativePtEC2up_branch->SetAddress(&FJ4jesRelativePtEC2up_);
  iFJ0jesRelativePtEC2up_branch = tree->GetBranch("iFJ0jesRelativePtEC2up");
  if (iFJ0jesRelativePtEC2up_branch) iFJ0jesRelativePtEC2up_branch->SetAddress(&iFJ0jesRelativePtEC2up_);
  iFJ1jesRelativePtEC2up_branch = tree->GetBranch("iFJ1jesRelativePtEC2up");
  if (iFJ1jesRelativePtEC2up_branch) iFJ1jesRelativePtEC2up_branch->SetAddress(&iFJ1jesRelativePtEC2up_);
  iFJ2jesRelativePtEC2up_branch = tree->GetBranch("iFJ2jesRelativePtEC2up");
  if (iFJ2jesRelativePtEC2up_branch) iFJ2jesRelativePtEC2up_branch->SetAddress(&iFJ2jesRelativePtEC2up_);
  iFJ3jesRelativePtEC2up_branch = tree->GetBranch("iFJ3jesRelativePtEC2up");
  if (iFJ3jesRelativePtEC2up_branch) iFJ3jesRelativePtEC2up_branch->SetAddress(&iFJ3jesRelativePtEC2up_);
  iFJ4jesRelativePtEC2up_branch = tree->GetBranch("iFJ4jesRelativePtEC2up");
  if (iFJ4jesRelativePtEC2up_branch) iFJ4jesRelativePtEC2up_branch->SetAddress(&iFJ4jesRelativePtEC2up_);
  METjesRelativePtEC2up_branch = tree->GetBranch("METjesRelativePtEC2up");
  if (METjesRelativePtEC2up_branch) METjesRelativePtEC2up_branch->SetAddress(&METjesRelativePtEC2up_);
  NujesRelativePtEC2up_branch = tree->GetBranch("NujesRelativePtEC2up");
  if (NujesRelativePtEC2up_branch) NujesRelativePtEC2up_branch->SetAddress(&NujesRelativePtEC2up_);
  J0jesRelativePtEC2up_branch = tree->GetBranch("J0jesRelativePtEC2up");
  if (J0jesRelativePtEC2up_branch) J0jesRelativePtEC2up_branch->SetAddress(&J0jesRelativePtEC2up_);
  J1jesRelativePtEC2up_branch = tree->GetBranch("J1jesRelativePtEC2up");
  if (J1jesRelativePtEC2up_branch) J1jesRelativePtEC2up_branch->SetAddress(&J1jesRelativePtEC2up_);
  J2jesRelativePtEC2up_branch = tree->GetBranch("J2jesRelativePtEC2up");
  if (J2jesRelativePtEC2up_branch) J2jesRelativePtEC2up_branch->SetAddress(&J2jesRelativePtEC2up_);
  J3jesRelativePtEC2up_branch = tree->GetBranch("J3jesRelativePtEC2up");
  if (J3jesRelativePtEC2up_branch) J3jesRelativePtEC2up_branch->SetAddress(&J3jesRelativePtEC2up_);
  J4jesRelativePtEC2up_branch = tree->GetBranch("J4jesRelativePtEC2up");
  if (J4jesRelativePtEC2up_branch) J4jesRelativePtEC2up_branch->SetAddress(&J4jesRelativePtEC2up_);
  J5jesRelativePtEC2up_branch = tree->GetBranch("J5jesRelativePtEC2up");
  if (J5jesRelativePtEC2up_branch) J5jesRelativePtEC2up_branch->SetAddress(&J5jesRelativePtEC2up_);
  J6jesRelativePtEC2up_branch = tree->GetBranch("J6jesRelativePtEC2up");
  if (J6jesRelativePtEC2up_branch) J6jesRelativePtEC2up_branch->SetAddress(&J6jesRelativePtEC2up_);
  J7jesRelativePtEC2up_branch = tree->GetBranch("J7jesRelativePtEC2up");
  if (J7jesRelativePtEC2up_branch) J7jesRelativePtEC2up_branch->SetAddress(&J7jesRelativePtEC2up_);
  JsjesRelativePtEC2dn_branch = tree->GetBranch("JsjesRelativePtEC2dn");
  if (JsjesRelativePtEC2dn_branch) JsjesRelativePtEC2dn_branch->SetAddress(&JsjesRelativePtEC2dn_);
  FJ0jesRelativePtEC2dn_branch = tree->GetBranch("FJ0jesRelativePtEC2dn");
  if (FJ0jesRelativePtEC2dn_branch) FJ0jesRelativePtEC2dn_branch->SetAddress(&FJ0jesRelativePtEC2dn_);
  FJ1jesRelativePtEC2dn_branch = tree->GetBranch("FJ1jesRelativePtEC2dn");
  if (FJ1jesRelativePtEC2dn_branch) FJ1jesRelativePtEC2dn_branch->SetAddress(&FJ1jesRelativePtEC2dn_);
  FJ2jesRelativePtEC2dn_branch = tree->GetBranch("FJ2jesRelativePtEC2dn");
  if (FJ2jesRelativePtEC2dn_branch) FJ2jesRelativePtEC2dn_branch->SetAddress(&FJ2jesRelativePtEC2dn_);
  FJ3jesRelativePtEC2dn_branch = tree->GetBranch("FJ3jesRelativePtEC2dn");
  if (FJ3jesRelativePtEC2dn_branch) FJ3jesRelativePtEC2dn_branch->SetAddress(&FJ3jesRelativePtEC2dn_);
  FJ4jesRelativePtEC2dn_branch = tree->GetBranch("FJ4jesRelativePtEC2dn");
  if (FJ4jesRelativePtEC2dn_branch) FJ4jesRelativePtEC2dn_branch->SetAddress(&FJ4jesRelativePtEC2dn_);
  iFJ0jesRelativePtEC2dn_branch = tree->GetBranch("iFJ0jesRelativePtEC2dn");
  if (iFJ0jesRelativePtEC2dn_branch) iFJ0jesRelativePtEC2dn_branch->SetAddress(&iFJ0jesRelativePtEC2dn_);
  iFJ1jesRelativePtEC2dn_branch = tree->GetBranch("iFJ1jesRelativePtEC2dn");
  if (iFJ1jesRelativePtEC2dn_branch) iFJ1jesRelativePtEC2dn_branch->SetAddress(&iFJ1jesRelativePtEC2dn_);
  iFJ2jesRelativePtEC2dn_branch = tree->GetBranch("iFJ2jesRelativePtEC2dn");
  if (iFJ2jesRelativePtEC2dn_branch) iFJ2jesRelativePtEC2dn_branch->SetAddress(&iFJ2jesRelativePtEC2dn_);
  iFJ3jesRelativePtEC2dn_branch = tree->GetBranch("iFJ3jesRelativePtEC2dn");
  if (iFJ3jesRelativePtEC2dn_branch) iFJ3jesRelativePtEC2dn_branch->SetAddress(&iFJ3jesRelativePtEC2dn_);
  iFJ4jesRelativePtEC2dn_branch = tree->GetBranch("iFJ4jesRelativePtEC2dn");
  if (iFJ4jesRelativePtEC2dn_branch) iFJ4jesRelativePtEC2dn_branch->SetAddress(&iFJ4jesRelativePtEC2dn_);
  METjesRelativePtEC2dn_branch = tree->GetBranch("METjesRelativePtEC2dn");
  if (METjesRelativePtEC2dn_branch) METjesRelativePtEC2dn_branch->SetAddress(&METjesRelativePtEC2dn_);
  NujesRelativePtEC2dn_branch = tree->GetBranch("NujesRelativePtEC2dn");
  if (NujesRelativePtEC2dn_branch) NujesRelativePtEC2dn_branch->SetAddress(&NujesRelativePtEC2dn_);
  J0jesRelativePtEC2dn_branch = tree->GetBranch("J0jesRelativePtEC2dn");
  if (J0jesRelativePtEC2dn_branch) J0jesRelativePtEC2dn_branch->SetAddress(&J0jesRelativePtEC2dn_);
  J1jesRelativePtEC2dn_branch = tree->GetBranch("J1jesRelativePtEC2dn");
  if (J1jesRelativePtEC2dn_branch) J1jesRelativePtEC2dn_branch->SetAddress(&J1jesRelativePtEC2dn_);
  J2jesRelativePtEC2dn_branch = tree->GetBranch("J2jesRelativePtEC2dn");
  if (J2jesRelativePtEC2dn_branch) J2jesRelativePtEC2dn_branch->SetAddress(&J2jesRelativePtEC2dn_);
  J3jesRelativePtEC2dn_branch = tree->GetBranch("J3jesRelativePtEC2dn");
  if (J3jesRelativePtEC2dn_branch) J3jesRelativePtEC2dn_branch->SetAddress(&J3jesRelativePtEC2dn_);
  J4jesRelativePtEC2dn_branch = tree->GetBranch("J4jesRelativePtEC2dn");
  if (J4jesRelativePtEC2dn_branch) J4jesRelativePtEC2dn_branch->SetAddress(&J4jesRelativePtEC2dn_);
  J5jesRelativePtEC2dn_branch = tree->GetBranch("J5jesRelativePtEC2dn");
  if (J5jesRelativePtEC2dn_branch) J5jesRelativePtEC2dn_branch->SetAddress(&J5jesRelativePtEC2dn_);
  J6jesRelativePtEC2dn_branch = tree->GetBranch("J6jesRelativePtEC2dn");
  if (J6jesRelativePtEC2dn_branch) J6jesRelativePtEC2dn_branch->SetAddress(&J6jesRelativePtEC2dn_);
  J7jesRelativePtEC2dn_branch = tree->GetBranch("J7jesRelativePtEC2dn");
  if (J7jesRelativePtEC2dn_branch) J7jesRelativePtEC2dn_branch->SetAddress(&J7jesRelativePtEC2dn_);
  JsjesRelativePtHFup_branch = tree->GetBranch("JsjesRelativePtHFup");
  if (JsjesRelativePtHFup_branch) JsjesRelativePtHFup_branch->SetAddress(&JsjesRelativePtHFup_);
  FJ0jesRelativePtHFup_branch = tree->GetBranch("FJ0jesRelativePtHFup");
  if (FJ0jesRelativePtHFup_branch) FJ0jesRelativePtHFup_branch->SetAddress(&FJ0jesRelativePtHFup_);
  FJ1jesRelativePtHFup_branch = tree->GetBranch("FJ1jesRelativePtHFup");
  if (FJ1jesRelativePtHFup_branch) FJ1jesRelativePtHFup_branch->SetAddress(&FJ1jesRelativePtHFup_);
  FJ2jesRelativePtHFup_branch = tree->GetBranch("FJ2jesRelativePtHFup");
  if (FJ2jesRelativePtHFup_branch) FJ2jesRelativePtHFup_branch->SetAddress(&FJ2jesRelativePtHFup_);
  FJ3jesRelativePtHFup_branch = tree->GetBranch("FJ3jesRelativePtHFup");
  if (FJ3jesRelativePtHFup_branch) FJ3jesRelativePtHFup_branch->SetAddress(&FJ3jesRelativePtHFup_);
  FJ4jesRelativePtHFup_branch = tree->GetBranch("FJ4jesRelativePtHFup");
  if (FJ4jesRelativePtHFup_branch) FJ4jesRelativePtHFup_branch->SetAddress(&FJ4jesRelativePtHFup_);
  iFJ0jesRelativePtHFup_branch = tree->GetBranch("iFJ0jesRelativePtHFup");
  if (iFJ0jesRelativePtHFup_branch) iFJ0jesRelativePtHFup_branch->SetAddress(&iFJ0jesRelativePtHFup_);
  iFJ1jesRelativePtHFup_branch = tree->GetBranch("iFJ1jesRelativePtHFup");
  if (iFJ1jesRelativePtHFup_branch) iFJ1jesRelativePtHFup_branch->SetAddress(&iFJ1jesRelativePtHFup_);
  iFJ2jesRelativePtHFup_branch = tree->GetBranch("iFJ2jesRelativePtHFup");
  if (iFJ2jesRelativePtHFup_branch) iFJ2jesRelativePtHFup_branch->SetAddress(&iFJ2jesRelativePtHFup_);
  iFJ3jesRelativePtHFup_branch = tree->GetBranch("iFJ3jesRelativePtHFup");
  if (iFJ3jesRelativePtHFup_branch) iFJ3jesRelativePtHFup_branch->SetAddress(&iFJ3jesRelativePtHFup_);
  iFJ4jesRelativePtHFup_branch = tree->GetBranch("iFJ4jesRelativePtHFup");
  if (iFJ4jesRelativePtHFup_branch) iFJ4jesRelativePtHFup_branch->SetAddress(&iFJ4jesRelativePtHFup_);
  METjesRelativePtHFup_branch = tree->GetBranch("METjesRelativePtHFup");
  if (METjesRelativePtHFup_branch) METjesRelativePtHFup_branch->SetAddress(&METjesRelativePtHFup_);
  NujesRelativePtHFup_branch = tree->GetBranch("NujesRelativePtHFup");
  if (NujesRelativePtHFup_branch) NujesRelativePtHFup_branch->SetAddress(&NujesRelativePtHFup_);
  J0jesRelativePtHFup_branch = tree->GetBranch("J0jesRelativePtHFup");
  if (J0jesRelativePtHFup_branch) J0jesRelativePtHFup_branch->SetAddress(&J0jesRelativePtHFup_);
  J1jesRelativePtHFup_branch = tree->GetBranch("J1jesRelativePtHFup");
  if (J1jesRelativePtHFup_branch) J1jesRelativePtHFup_branch->SetAddress(&J1jesRelativePtHFup_);
  J2jesRelativePtHFup_branch = tree->GetBranch("J2jesRelativePtHFup");
  if (J2jesRelativePtHFup_branch) J2jesRelativePtHFup_branch->SetAddress(&J2jesRelativePtHFup_);
  J3jesRelativePtHFup_branch = tree->GetBranch("J3jesRelativePtHFup");
  if (J3jesRelativePtHFup_branch) J3jesRelativePtHFup_branch->SetAddress(&J3jesRelativePtHFup_);
  J4jesRelativePtHFup_branch = tree->GetBranch("J4jesRelativePtHFup");
  if (J4jesRelativePtHFup_branch) J4jesRelativePtHFup_branch->SetAddress(&J4jesRelativePtHFup_);
  J5jesRelativePtHFup_branch = tree->GetBranch("J5jesRelativePtHFup");
  if (J5jesRelativePtHFup_branch) J5jesRelativePtHFup_branch->SetAddress(&J5jesRelativePtHFup_);
  J6jesRelativePtHFup_branch = tree->GetBranch("J6jesRelativePtHFup");
  if (J6jesRelativePtHFup_branch) J6jesRelativePtHFup_branch->SetAddress(&J6jesRelativePtHFup_);
  J7jesRelativePtHFup_branch = tree->GetBranch("J7jesRelativePtHFup");
  if (J7jesRelativePtHFup_branch) J7jesRelativePtHFup_branch->SetAddress(&J7jesRelativePtHFup_);
  JsjesRelativePtHFdn_branch = tree->GetBranch("JsjesRelativePtHFdn");
  if (JsjesRelativePtHFdn_branch) JsjesRelativePtHFdn_branch->SetAddress(&JsjesRelativePtHFdn_);
  FJ0jesRelativePtHFdn_branch = tree->GetBranch("FJ0jesRelativePtHFdn");
  if (FJ0jesRelativePtHFdn_branch) FJ0jesRelativePtHFdn_branch->SetAddress(&FJ0jesRelativePtHFdn_);
  FJ1jesRelativePtHFdn_branch = tree->GetBranch("FJ1jesRelativePtHFdn");
  if (FJ1jesRelativePtHFdn_branch) FJ1jesRelativePtHFdn_branch->SetAddress(&FJ1jesRelativePtHFdn_);
  FJ2jesRelativePtHFdn_branch = tree->GetBranch("FJ2jesRelativePtHFdn");
  if (FJ2jesRelativePtHFdn_branch) FJ2jesRelativePtHFdn_branch->SetAddress(&FJ2jesRelativePtHFdn_);
  FJ3jesRelativePtHFdn_branch = tree->GetBranch("FJ3jesRelativePtHFdn");
  if (FJ3jesRelativePtHFdn_branch) FJ3jesRelativePtHFdn_branch->SetAddress(&FJ3jesRelativePtHFdn_);
  FJ4jesRelativePtHFdn_branch = tree->GetBranch("FJ4jesRelativePtHFdn");
  if (FJ4jesRelativePtHFdn_branch) FJ4jesRelativePtHFdn_branch->SetAddress(&FJ4jesRelativePtHFdn_);
  iFJ0jesRelativePtHFdn_branch = tree->GetBranch("iFJ0jesRelativePtHFdn");
  if (iFJ0jesRelativePtHFdn_branch) iFJ0jesRelativePtHFdn_branch->SetAddress(&iFJ0jesRelativePtHFdn_);
  iFJ1jesRelativePtHFdn_branch = tree->GetBranch("iFJ1jesRelativePtHFdn");
  if (iFJ1jesRelativePtHFdn_branch) iFJ1jesRelativePtHFdn_branch->SetAddress(&iFJ1jesRelativePtHFdn_);
  iFJ2jesRelativePtHFdn_branch = tree->GetBranch("iFJ2jesRelativePtHFdn");
  if (iFJ2jesRelativePtHFdn_branch) iFJ2jesRelativePtHFdn_branch->SetAddress(&iFJ2jesRelativePtHFdn_);
  iFJ3jesRelativePtHFdn_branch = tree->GetBranch("iFJ3jesRelativePtHFdn");
  if (iFJ3jesRelativePtHFdn_branch) iFJ3jesRelativePtHFdn_branch->SetAddress(&iFJ3jesRelativePtHFdn_);
  iFJ4jesRelativePtHFdn_branch = tree->GetBranch("iFJ4jesRelativePtHFdn");
  if (iFJ4jesRelativePtHFdn_branch) iFJ4jesRelativePtHFdn_branch->SetAddress(&iFJ4jesRelativePtHFdn_);
  METjesRelativePtHFdn_branch = tree->GetBranch("METjesRelativePtHFdn");
  if (METjesRelativePtHFdn_branch) METjesRelativePtHFdn_branch->SetAddress(&METjesRelativePtHFdn_);
  NujesRelativePtHFdn_branch = tree->GetBranch("NujesRelativePtHFdn");
  if (NujesRelativePtHFdn_branch) NujesRelativePtHFdn_branch->SetAddress(&NujesRelativePtHFdn_);
  J0jesRelativePtHFdn_branch = tree->GetBranch("J0jesRelativePtHFdn");
  if (J0jesRelativePtHFdn_branch) J0jesRelativePtHFdn_branch->SetAddress(&J0jesRelativePtHFdn_);
  J1jesRelativePtHFdn_branch = tree->GetBranch("J1jesRelativePtHFdn");
  if (J1jesRelativePtHFdn_branch) J1jesRelativePtHFdn_branch->SetAddress(&J1jesRelativePtHFdn_);
  J2jesRelativePtHFdn_branch = tree->GetBranch("J2jesRelativePtHFdn");
  if (J2jesRelativePtHFdn_branch) J2jesRelativePtHFdn_branch->SetAddress(&J2jesRelativePtHFdn_);
  J3jesRelativePtHFdn_branch = tree->GetBranch("J3jesRelativePtHFdn");
  if (J3jesRelativePtHFdn_branch) J3jesRelativePtHFdn_branch->SetAddress(&J3jesRelativePtHFdn_);
  J4jesRelativePtHFdn_branch = tree->GetBranch("J4jesRelativePtHFdn");
  if (J4jesRelativePtHFdn_branch) J4jesRelativePtHFdn_branch->SetAddress(&J4jesRelativePtHFdn_);
  J5jesRelativePtHFdn_branch = tree->GetBranch("J5jesRelativePtHFdn");
  if (J5jesRelativePtHFdn_branch) J5jesRelativePtHFdn_branch->SetAddress(&J5jesRelativePtHFdn_);
  J6jesRelativePtHFdn_branch = tree->GetBranch("J6jesRelativePtHFdn");
  if (J6jesRelativePtHFdn_branch) J6jesRelativePtHFdn_branch->SetAddress(&J6jesRelativePtHFdn_);
  J7jesRelativePtHFdn_branch = tree->GetBranch("J7jesRelativePtHFdn");
  if (J7jesRelativePtHFdn_branch) J7jesRelativePtHFdn_branch->SetAddress(&J7jesRelativePtHFdn_);
  JsjesRelativeBalup_branch = tree->GetBranch("JsjesRelativeBalup");
  if (JsjesRelativeBalup_branch) JsjesRelativeBalup_branch->SetAddress(&JsjesRelativeBalup_);
  FJ0jesRelativeBalup_branch = tree->GetBranch("FJ0jesRelativeBalup");
  if (FJ0jesRelativeBalup_branch) FJ0jesRelativeBalup_branch->SetAddress(&FJ0jesRelativeBalup_);
  FJ1jesRelativeBalup_branch = tree->GetBranch("FJ1jesRelativeBalup");
  if (FJ1jesRelativeBalup_branch) FJ1jesRelativeBalup_branch->SetAddress(&FJ1jesRelativeBalup_);
  FJ2jesRelativeBalup_branch = tree->GetBranch("FJ2jesRelativeBalup");
  if (FJ2jesRelativeBalup_branch) FJ2jesRelativeBalup_branch->SetAddress(&FJ2jesRelativeBalup_);
  FJ3jesRelativeBalup_branch = tree->GetBranch("FJ3jesRelativeBalup");
  if (FJ3jesRelativeBalup_branch) FJ3jesRelativeBalup_branch->SetAddress(&FJ3jesRelativeBalup_);
  FJ4jesRelativeBalup_branch = tree->GetBranch("FJ4jesRelativeBalup");
  if (FJ4jesRelativeBalup_branch) FJ4jesRelativeBalup_branch->SetAddress(&FJ4jesRelativeBalup_);
  iFJ0jesRelativeBalup_branch = tree->GetBranch("iFJ0jesRelativeBalup");
  if (iFJ0jesRelativeBalup_branch) iFJ0jesRelativeBalup_branch->SetAddress(&iFJ0jesRelativeBalup_);
  iFJ1jesRelativeBalup_branch = tree->GetBranch("iFJ1jesRelativeBalup");
  if (iFJ1jesRelativeBalup_branch) iFJ1jesRelativeBalup_branch->SetAddress(&iFJ1jesRelativeBalup_);
  iFJ2jesRelativeBalup_branch = tree->GetBranch("iFJ2jesRelativeBalup");
  if (iFJ2jesRelativeBalup_branch) iFJ2jesRelativeBalup_branch->SetAddress(&iFJ2jesRelativeBalup_);
  iFJ3jesRelativeBalup_branch = tree->GetBranch("iFJ3jesRelativeBalup");
  if (iFJ3jesRelativeBalup_branch) iFJ3jesRelativeBalup_branch->SetAddress(&iFJ3jesRelativeBalup_);
  iFJ4jesRelativeBalup_branch = tree->GetBranch("iFJ4jesRelativeBalup");
  if (iFJ4jesRelativeBalup_branch) iFJ4jesRelativeBalup_branch->SetAddress(&iFJ4jesRelativeBalup_);
  METjesRelativeBalup_branch = tree->GetBranch("METjesRelativeBalup");
  if (METjesRelativeBalup_branch) METjesRelativeBalup_branch->SetAddress(&METjesRelativeBalup_);
  NujesRelativeBalup_branch = tree->GetBranch("NujesRelativeBalup");
  if (NujesRelativeBalup_branch) NujesRelativeBalup_branch->SetAddress(&NujesRelativeBalup_);
  J0jesRelativeBalup_branch = tree->GetBranch("J0jesRelativeBalup");
  if (J0jesRelativeBalup_branch) J0jesRelativeBalup_branch->SetAddress(&J0jesRelativeBalup_);
  J1jesRelativeBalup_branch = tree->GetBranch("J1jesRelativeBalup");
  if (J1jesRelativeBalup_branch) J1jesRelativeBalup_branch->SetAddress(&J1jesRelativeBalup_);
  J2jesRelativeBalup_branch = tree->GetBranch("J2jesRelativeBalup");
  if (J2jesRelativeBalup_branch) J2jesRelativeBalup_branch->SetAddress(&J2jesRelativeBalup_);
  J3jesRelativeBalup_branch = tree->GetBranch("J3jesRelativeBalup");
  if (J3jesRelativeBalup_branch) J3jesRelativeBalup_branch->SetAddress(&J3jesRelativeBalup_);
  J4jesRelativeBalup_branch = tree->GetBranch("J4jesRelativeBalup");
  if (J4jesRelativeBalup_branch) J4jesRelativeBalup_branch->SetAddress(&J4jesRelativeBalup_);
  J5jesRelativeBalup_branch = tree->GetBranch("J5jesRelativeBalup");
  if (J5jesRelativeBalup_branch) J5jesRelativeBalup_branch->SetAddress(&J5jesRelativeBalup_);
  J6jesRelativeBalup_branch = tree->GetBranch("J6jesRelativeBalup");
  if (J6jesRelativeBalup_branch) J6jesRelativeBalup_branch->SetAddress(&J6jesRelativeBalup_);
  J7jesRelativeBalup_branch = tree->GetBranch("J7jesRelativeBalup");
  if (J7jesRelativeBalup_branch) J7jesRelativeBalup_branch->SetAddress(&J7jesRelativeBalup_);
  JsjesRelativeBaldn_branch = tree->GetBranch("JsjesRelativeBaldn");
  if (JsjesRelativeBaldn_branch) JsjesRelativeBaldn_branch->SetAddress(&JsjesRelativeBaldn_);
  FJ0jesRelativeBaldn_branch = tree->GetBranch("FJ0jesRelativeBaldn");
  if (FJ0jesRelativeBaldn_branch) FJ0jesRelativeBaldn_branch->SetAddress(&FJ0jesRelativeBaldn_);
  FJ1jesRelativeBaldn_branch = tree->GetBranch("FJ1jesRelativeBaldn");
  if (FJ1jesRelativeBaldn_branch) FJ1jesRelativeBaldn_branch->SetAddress(&FJ1jesRelativeBaldn_);
  FJ2jesRelativeBaldn_branch = tree->GetBranch("FJ2jesRelativeBaldn");
  if (FJ2jesRelativeBaldn_branch) FJ2jesRelativeBaldn_branch->SetAddress(&FJ2jesRelativeBaldn_);
  FJ3jesRelativeBaldn_branch = tree->GetBranch("FJ3jesRelativeBaldn");
  if (FJ3jesRelativeBaldn_branch) FJ3jesRelativeBaldn_branch->SetAddress(&FJ3jesRelativeBaldn_);
  FJ4jesRelativeBaldn_branch = tree->GetBranch("FJ4jesRelativeBaldn");
  if (FJ4jesRelativeBaldn_branch) FJ4jesRelativeBaldn_branch->SetAddress(&FJ4jesRelativeBaldn_);
  iFJ0jesRelativeBaldn_branch = tree->GetBranch("iFJ0jesRelativeBaldn");
  if (iFJ0jesRelativeBaldn_branch) iFJ0jesRelativeBaldn_branch->SetAddress(&iFJ0jesRelativeBaldn_);
  iFJ1jesRelativeBaldn_branch = tree->GetBranch("iFJ1jesRelativeBaldn");
  if (iFJ1jesRelativeBaldn_branch) iFJ1jesRelativeBaldn_branch->SetAddress(&iFJ1jesRelativeBaldn_);
  iFJ2jesRelativeBaldn_branch = tree->GetBranch("iFJ2jesRelativeBaldn");
  if (iFJ2jesRelativeBaldn_branch) iFJ2jesRelativeBaldn_branch->SetAddress(&iFJ2jesRelativeBaldn_);
  iFJ3jesRelativeBaldn_branch = tree->GetBranch("iFJ3jesRelativeBaldn");
  if (iFJ3jesRelativeBaldn_branch) iFJ3jesRelativeBaldn_branch->SetAddress(&iFJ3jesRelativeBaldn_);
  iFJ4jesRelativeBaldn_branch = tree->GetBranch("iFJ4jesRelativeBaldn");
  if (iFJ4jesRelativeBaldn_branch) iFJ4jesRelativeBaldn_branch->SetAddress(&iFJ4jesRelativeBaldn_);
  METjesRelativeBaldn_branch = tree->GetBranch("METjesRelativeBaldn");
  if (METjesRelativeBaldn_branch) METjesRelativeBaldn_branch->SetAddress(&METjesRelativeBaldn_);
  NujesRelativeBaldn_branch = tree->GetBranch("NujesRelativeBaldn");
  if (NujesRelativeBaldn_branch) NujesRelativeBaldn_branch->SetAddress(&NujesRelativeBaldn_);
  J0jesRelativeBaldn_branch = tree->GetBranch("J0jesRelativeBaldn");
  if (J0jesRelativeBaldn_branch) J0jesRelativeBaldn_branch->SetAddress(&J0jesRelativeBaldn_);
  J1jesRelativeBaldn_branch = tree->GetBranch("J1jesRelativeBaldn");
  if (J1jesRelativeBaldn_branch) J1jesRelativeBaldn_branch->SetAddress(&J1jesRelativeBaldn_);
  J2jesRelativeBaldn_branch = tree->GetBranch("J2jesRelativeBaldn");
  if (J2jesRelativeBaldn_branch) J2jesRelativeBaldn_branch->SetAddress(&J2jesRelativeBaldn_);
  J3jesRelativeBaldn_branch = tree->GetBranch("J3jesRelativeBaldn");
  if (J3jesRelativeBaldn_branch) J3jesRelativeBaldn_branch->SetAddress(&J3jesRelativeBaldn_);
  J4jesRelativeBaldn_branch = tree->GetBranch("J4jesRelativeBaldn");
  if (J4jesRelativeBaldn_branch) J4jesRelativeBaldn_branch->SetAddress(&J4jesRelativeBaldn_);
  J5jesRelativeBaldn_branch = tree->GetBranch("J5jesRelativeBaldn");
  if (J5jesRelativeBaldn_branch) J5jesRelativeBaldn_branch->SetAddress(&J5jesRelativeBaldn_);
  J6jesRelativeBaldn_branch = tree->GetBranch("J6jesRelativeBaldn");
  if (J6jesRelativeBaldn_branch) J6jesRelativeBaldn_branch->SetAddress(&J6jesRelativeBaldn_);
  J7jesRelativeBaldn_branch = tree->GetBranch("J7jesRelativeBaldn");
  if (J7jesRelativeBaldn_branch) J7jesRelativeBaldn_branch->SetAddress(&J7jesRelativeBaldn_);
  JsjesRelativeSampleup_branch = tree->GetBranch("JsjesRelativeSampleup");
  if (JsjesRelativeSampleup_branch) JsjesRelativeSampleup_branch->SetAddress(&JsjesRelativeSampleup_);
  FJ0jesRelativeSampleup_branch = tree->GetBranch("FJ0jesRelativeSampleup");
  if (FJ0jesRelativeSampleup_branch) FJ0jesRelativeSampleup_branch->SetAddress(&FJ0jesRelativeSampleup_);
  FJ1jesRelativeSampleup_branch = tree->GetBranch("FJ1jesRelativeSampleup");
  if (FJ1jesRelativeSampleup_branch) FJ1jesRelativeSampleup_branch->SetAddress(&FJ1jesRelativeSampleup_);
  FJ2jesRelativeSampleup_branch = tree->GetBranch("FJ2jesRelativeSampleup");
  if (FJ2jesRelativeSampleup_branch) FJ2jesRelativeSampleup_branch->SetAddress(&FJ2jesRelativeSampleup_);
  FJ3jesRelativeSampleup_branch = tree->GetBranch("FJ3jesRelativeSampleup");
  if (FJ3jesRelativeSampleup_branch) FJ3jesRelativeSampleup_branch->SetAddress(&FJ3jesRelativeSampleup_);
  FJ4jesRelativeSampleup_branch = tree->GetBranch("FJ4jesRelativeSampleup");
  if (FJ4jesRelativeSampleup_branch) FJ4jesRelativeSampleup_branch->SetAddress(&FJ4jesRelativeSampleup_);
  iFJ0jesRelativeSampleup_branch = tree->GetBranch("iFJ0jesRelativeSampleup");
  if (iFJ0jesRelativeSampleup_branch) iFJ0jesRelativeSampleup_branch->SetAddress(&iFJ0jesRelativeSampleup_);
  iFJ1jesRelativeSampleup_branch = tree->GetBranch("iFJ1jesRelativeSampleup");
  if (iFJ1jesRelativeSampleup_branch) iFJ1jesRelativeSampleup_branch->SetAddress(&iFJ1jesRelativeSampleup_);
  iFJ2jesRelativeSampleup_branch = tree->GetBranch("iFJ2jesRelativeSampleup");
  if (iFJ2jesRelativeSampleup_branch) iFJ2jesRelativeSampleup_branch->SetAddress(&iFJ2jesRelativeSampleup_);
  iFJ3jesRelativeSampleup_branch = tree->GetBranch("iFJ3jesRelativeSampleup");
  if (iFJ3jesRelativeSampleup_branch) iFJ3jesRelativeSampleup_branch->SetAddress(&iFJ3jesRelativeSampleup_);
  iFJ4jesRelativeSampleup_branch = tree->GetBranch("iFJ4jesRelativeSampleup");
  if (iFJ4jesRelativeSampleup_branch) iFJ4jesRelativeSampleup_branch->SetAddress(&iFJ4jesRelativeSampleup_);
  METjesRelativeSampleup_branch = tree->GetBranch("METjesRelativeSampleup");
  if (METjesRelativeSampleup_branch) METjesRelativeSampleup_branch->SetAddress(&METjesRelativeSampleup_);
  NujesRelativeSampleup_branch = tree->GetBranch("NujesRelativeSampleup");
  if (NujesRelativeSampleup_branch) NujesRelativeSampleup_branch->SetAddress(&NujesRelativeSampleup_);
  J0jesRelativeSampleup_branch = tree->GetBranch("J0jesRelativeSampleup");
  if (J0jesRelativeSampleup_branch) J0jesRelativeSampleup_branch->SetAddress(&J0jesRelativeSampleup_);
  J1jesRelativeSampleup_branch = tree->GetBranch("J1jesRelativeSampleup");
  if (J1jesRelativeSampleup_branch) J1jesRelativeSampleup_branch->SetAddress(&J1jesRelativeSampleup_);
  J2jesRelativeSampleup_branch = tree->GetBranch("J2jesRelativeSampleup");
  if (J2jesRelativeSampleup_branch) J2jesRelativeSampleup_branch->SetAddress(&J2jesRelativeSampleup_);
  J3jesRelativeSampleup_branch = tree->GetBranch("J3jesRelativeSampleup");
  if (J3jesRelativeSampleup_branch) J3jesRelativeSampleup_branch->SetAddress(&J3jesRelativeSampleup_);
  J4jesRelativeSampleup_branch = tree->GetBranch("J4jesRelativeSampleup");
  if (J4jesRelativeSampleup_branch) J4jesRelativeSampleup_branch->SetAddress(&J4jesRelativeSampleup_);
  J5jesRelativeSampleup_branch = tree->GetBranch("J5jesRelativeSampleup");
  if (J5jesRelativeSampleup_branch) J5jesRelativeSampleup_branch->SetAddress(&J5jesRelativeSampleup_);
  J6jesRelativeSampleup_branch = tree->GetBranch("J6jesRelativeSampleup");
  if (J6jesRelativeSampleup_branch) J6jesRelativeSampleup_branch->SetAddress(&J6jesRelativeSampleup_);
  J7jesRelativeSampleup_branch = tree->GetBranch("J7jesRelativeSampleup");
  if (J7jesRelativeSampleup_branch) J7jesRelativeSampleup_branch->SetAddress(&J7jesRelativeSampleup_);
  JsjesRelativeSampledn_branch = tree->GetBranch("JsjesRelativeSampledn");
  if (JsjesRelativeSampledn_branch) JsjesRelativeSampledn_branch->SetAddress(&JsjesRelativeSampledn_);
  FJ0jesRelativeSampledn_branch = tree->GetBranch("FJ0jesRelativeSampledn");
  if (FJ0jesRelativeSampledn_branch) FJ0jesRelativeSampledn_branch->SetAddress(&FJ0jesRelativeSampledn_);
  FJ1jesRelativeSampledn_branch = tree->GetBranch("FJ1jesRelativeSampledn");
  if (FJ1jesRelativeSampledn_branch) FJ1jesRelativeSampledn_branch->SetAddress(&FJ1jesRelativeSampledn_);
  FJ2jesRelativeSampledn_branch = tree->GetBranch("FJ2jesRelativeSampledn");
  if (FJ2jesRelativeSampledn_branch) FJ2jesRelativeSampledn_branch->SetAddress(&FJ2jesRelativeSampledn_);
  FJ3jesRelativeSampledn_branch = tree->GetBranch("FJ3jesRelativeSampledn");
  if (FJ3jesRelativeSampledn_branch) FJ3jesRelativeSampledn_branch->SetAddress(&FJ3jesRelativeSampledn_);
  FJ4jesRelativeSampledn_branch = tree->GetBranch("FJ4jesRelativeSampledn");
  if (FJ4jesRelativeSampledn_branch) FJ4jesRelativeSampledn_branch->SetAddress(&FJ4jesRelativeSampledn_);
  iFJ0jesRelativeSampledn_branch = tree->GetBranch("iFJ0jesRelativeSampledn");
  if (iFJ0jesRelativeSampledn_branch) iFJ0jesRelativeSampledn_branch->SetAddress(&iFJ0jesRelativeSampledn_);
  iFJ1jesRelativeSampledn_branch = tree->GetBranch("iFJ1jesRelativeSampledn");
  if (iFJ1jesRelativeSampledn_branch) iFJ1jesRelativeSampledn_branch->SetAddress(&iFJ1jesRelativeSampledn_);
  iFJ2jesRelativeSampledn_branch = tree->GetBranch("iFJ2jesRelativeSampledn");
  if (iFJ2jesRelativeSampledn_branch) iFJ2jesRelativeSampledn_branch->SetAddress(&iFJ2jesRelativeSampledn_);
  iFJ3jesRelativeSampledn_branch = tree->GetBranch("iFJ3jesRelativeSampledn");
  if (iFJ3jesRelativeSampledn_branch) iFJ3jesRelativeSampledn_branch->SetAddress(&iFJ3jesRelativeSampledn_);
  iFJ4jesRelativeSampledn_branch = tree->GetBranch("iFJ4jesRelativeSampledn");
  if (iFJ4jesRelativeSampledn_branch) iFJ4jesRelativeSampledn_branch->SetAddress(&iFJ4jesRelativeSampledn_);
  METjesRelativeSampledn_branch = tree->GetBranch("METjesRelativeSampledn");
  if (METjesRelativeSampledn_branch) METjesRelativeSampledn_branch->SetAddress(&METjesRelativeSampledn_);
  NujesRelativeSampledn_branch = tree->GetBranch("NujesRelativeSampledn");
  if (NujesRelativeSampledn_branch) NujesRelativeSampledn_branch->SetAddress(&NujesRelativeSampledn_);
  J0jesRelativeSampledn_branch = tree->GetBranch("J0jesRelativeSampledn");
  if (J0jesRelativeSampledn_branch) J0jesRelativeSampledn_branch->SetAddress(&J0jesRelativeSampledn_);
  J1jesRelativeSampledn_branch = tree->GetBranch("J1jesRelativeSampledn");
  if (J1jesRelativeSampledn_branch) J1jesRelativeSampledn_branch->SetAddress(&J1jesRelativeSampledn_);
  J2jesRelativeSampledn_branch = tree->GetBranch("J2jesRelativeSampledn");
  if (J2jesRelativeSampledn_branch) J2jesRelativeSampledn_branch->SetAddress(&J2jesRelativeSampledn_);
  J3jesRelativeSampledn_branch = tree->GetBranch("J3jesRelativeSampledn");
  if (J3jesRelativeSampledn_branch) J3jesRelativeSampledn_branch->SetAddress(&J3jesRelativeSampledn_);
  J4jesRelativeSampledn_branch = tree->GetBranch("J4jesRelativeSampledn");
  if (J4jesRelativeSampledn_branch) J4jesRelativeSampledn_branch->SetAddress(&J4jesRelativeSampledn_);
  J5jesRelativeSampledn_branch = tree->GetBranch("J5jesRelativeSampledn");
  if (J5jesRelativeSampledn_branch) J5jesRelativeSampledn_branch->SetAddress(&J5jesRelativeSampledn_);
  J6jesRelativeSampledn_branch = tree->GetBranch("J6jesRelativeSampledn");
  if (J6jesRelativeSampledn_branch) J6jesRelativeSampledn_branch->SetAddress(&J6jesRelativeSampledn_);
  J7jesRelativeSampledn_branch = tree->GetBranch("J7jesRelativeSampledn");
  if (J7jesRelativeSampledn_branch) J7jesRelativeSampledn_branch->SetAddress(&J7jesRelativeSampledn_);
  JsjesRelativeFSRup_branch = tree->GetBranch("JsjesRelativeFSRup");
  if (JsjesRelativeFSRup_branch) JsjesRelativeFSRup_branch->SetAddress(&JsjesRelativeFSRup_);
  FJ0jesRelativeFSRup_branch = tree->GetBranch("FJ0jesRelativeFSRup");
  if (FJ0jesRelativeFSRup_branch) FJ0jesRelativeFSRup_branch->SetAddress(&FJ0jesRelativeFSRup_);
  FJ1jesRelativeFSRup_branch = tree->GetBranch("FJ1jesRelativeFSRup");
  if (FJ1jesRelativeFSRup_branch) FJ1jesRelativeFSRup_branch->SetAddress(&FJ1jesRelativeFSRup_);
  FJ2jesRelativeFSRup_branch = tree->GetBranch("FJ2jesRelativeFSRup");
  if (FJ2jesRelativeFSRup_branch) FJ2jesRelativeFSRup_branch->SetAddress(&FJ2jesRelativeFSRup_);
  FJ3jesRelativeFSRup_branch = tree->GetBranch("FJ3jesRelativeFSRup");
  if (FJ3jesRelativeFSRup_branch) FJ3jesRelativeFSRup_branch->SetAddress(&FJ3jesRelativeFSRup_);
  FJ4jesRelativeFSRup_branch = tree->GetBranch("FJ4jesRelativeFSRup");
  if (FJ4jesRelativeFSRup_branch) FJ4jesRelativeFSRup_branch->SetAddress(&FJ4jesRelativeFSRup_);
  iFJ0jesRelativeFSRup_branch = tree->GetBranch("iFJ0jesRelativeFSRup");
  if (iFJ0jesRelativeFSRup_branch) iFJ0jesRelativeFSRup_branch->SetAddress(&iFJ0jesRelativeFSRup_);
  iFJ1jesRelativeFSRup_branch = tree->GetBranch("iFJ1jesRelativeFSRup");
  if (iFJ1jesRelativeFSRup_branch) iFJ1jesRelativeFSRup_branch->SetAddress(&iFJ1jesRelativeFSRup_);
  iFJ2jesRelativeFSRup_branch = tree->GetBranch("iFJ2jesRelativeFSRup");
  if (iFJ2jesRelativeFSRup_branch) iFJ2jesRelativeFSRup_branch->SetAddress(&iFJ2jesRelativeFSRup_);
  iFJ3jesRelativeFSRup_branch = tree->GetBranch("iFJ3jesRelativeFSRup");
  if (iFJ3jesRelativeFSRup_branch) iFJ3jesRelativeFSRup_branch->SetAddress(&iFJ3jesRelativeFSRup_);
  iFJ4jesRelativeFSRup_branch = tree->GetBranch("iFJ4jesRelativeFSRup");
  if (iFJ4jesRelativeFSRup_branch) iFJ4jesRelativeFSRup_branch->SetAddress(&iFJ4jesRelativeFSRup_);
  METjesRelativeFSRup_branch = tree->GetBranch("METjesRelativeFSRup");
  if (METjesRelativeFSRup_branch) METjesRelativeFSRup_branch->SetAddress(&METjesRelativeFSRup_);
  NujesRelativeFSRup_branch = tree->GetBranch("NujesRelativeFSRup");
  if (NujesRelativeFSRup_branch) NujesRelativeFSRup_branch->SetAddress(&NujesRelativeFSRup_);
  J0jesRelativeFSRup_branch = tree->GetBranch("J0jesRelativeFSRup");
  if (J0jesRelativeFSRup_branch) J0jesRelativeFSRup_branch->SetAddress(&J0jesRelativeFSRup_);
  J1jesRelativeFSRup_branch = tree->GetBranch("J1jesRelativeFSRup");
  if (J1jesRelativeFSRup_branch) J1jesRelativeFSRup_branch->SetAddress(&J1jesRelativeFSRup_);
  J2jesRelativeFSRup_branch = tree->GetBranch("J2jesRelativeFSRup");
  if (J2jesRelativeFSRup_branch) J2jesRelativeFSRup_branch->SetAddress(&J2jesRelativeFSRup_);
  J3jesRelativeFSRup_branch = tree->GetBranch("J3jesRelativeFSRup");
  if (J3jesRelativeFSRup_branch) J3jesRelativeFSRup_branch->SetAddress(&J3jesRelativeFSRup_);
  J4jesRelativeFSRup_branch = tree->GetBranch("J4jesRelativeFSRup");
  if (J4jesRelativeFSRup_branch) J4jesRelativeFSRup_branch->SetAddress(&J4jesRelativeFSRup_);
  J5jesRelativeFSRup_branch = tree->GetBranch("J5jesRelativeFSRup");
  if (J5jesRelativeFSRup_branch) J5jesRelativeFSRup_branch->SetAddress(&J5jesRelativeFSRup_);
  J6jesRelativeFSRup_branch = tree->GetBranch("J6jesRelativeFSRup");
  if (J6jesRelativeFSRup_branch) J6jesRelativeFSRup_branch->SetAddress(&J6jesRelativeFSRup_);
  J7jesRelativeFSRup_branch = tree->GetBranch("J7jesRelativeFSRup");
  if (J7jesRelativeFSRup_branch) J7jesRelativeFSRup_branch->SetAddress(&J7jesRelativeFSRup_);
  JsjesRelativeFSRdn_branch = tree->GetBranch("JsjesRelativeFSRdn");
  if (JsjesRelativeFSRdn_branch) JsjesRelativeFSRdn_branch->SetAddress(&JsjesRelativeFSRdn_);
  FJ0jesRelativeFSRdn_branch = tree->GetBranch("FJ0jesRelativeFSRdn");
  if (FJ0jesRelativeFSRdn_branch) FJ0jesRelativeFSRdn_branch->SetAddress(&FJ0jesRelativeFSRdn_);
  FJ1jesRelativeFSRdn_branch = tree->GetBranch("FJ1jesRelativeFSRdn");
  if (FJ1jesRelativeFSRdn_branch) FJ1jesRelativeFSRdn_branch->SetAddress(&FJ1jesRelativeFSRdn_);
  FJ2jesRelativeFSRdn_branch = tree->GetBranch("FJ2jesRelativeFSRdn");
  if (FJ2jesRelativeFSRdn_branch) FJ2jesRelativeFSRdn_branch->SetAddress(&FJ2jesRelativeFSRdn_);
  FJ3jesRelativeFSRdn_branch = tree->GetBranch("FJ3jesRelativeFSRdn");
  if (FJ3jesRelativeFSRdn_branch) FJ3jesRelativeFSRdn_branch->SetAddress(&FJ3jesRelativeFSRdn_);
  FJ4jesRelativeFSRdn_branch = tree->GetBranch("FJ4jesRelativeFSRdn");
  if (FJ4jesRelativeFSRdn_branch) FJ4jesRelativeFSRdn_branch->SetAddress(&FJ4jesRelativeFSRdn_);
  iFJ0jesRelativeFSRdn_branch = tree->GetBranch("iFJ0jesRelativeFSRdn");
  if (iFJ0jesRelativeFSRdn_branch) iFJ0jesRelativeFSRdn_branch->SetAddress(&iFJ0jesRelativeFSRdn_);
  iFJ1jesRelativeFSRdn_branch = tree->GetBranch("iFJ1jesRelativeFSRdn");
  if (iFJ1jesRelativeFSRdn_branch) iFJ1jesRelativeFSRdn_branch->SetAddress(&iFJ1jesRelativeFSRdn_);
  iFJ2jesRelativeFSRdn_branch = tree->GetBranch("iFJ2jesRelativeFSRdn");
  if (iFJ2jesRelativeFSRdn_branch) iFJ2jesRelativeFSRdn_branch->SetAddress(&iFJ2jesRelativeFSRdn_);
  iFJ3jesRelativeFSRdn_branch = tree->GetBranch("iFJ3jesRelativeFSRdn");
  if (iFJ3jesRelativeFSRdn_branch) iFJ3jesRelativeFSRdn_branch->SetAddress(&iFJ3jesRelativeFSRdn_);
  iFJ4jesRelativeFSRdn_branch = tree->GetBranch("iFJ4jesRelativeFSRdn");
  if (iFJ4jesRelativeFSRdn_branch) iFJ4jesRelativeFSRdn_branch->SetAddress(&iFJ4jesRelativeFSRdn_);
  METjesRelativeFSRdn_branch = tree->GetBranch("METjesRelativeFSRdn");
  if (METjesRelativeFSRdn_branch) METjesRelativeFSRdn_branch->SetAddress(&METjesRelativeFSRdn_);
  NujesRelativeFSRdn_branch = tree->GetBranch("NujesRelativeFSRdn");
  if (NujesRelativeFSRdn_branch) NujesRelativeFSRdn_branch->SetAddress(&NujesRelativeFSRdn_);
  J0jesRelativeFSRdn_branch = tree->GetBranch("J0jesRelativeFSRdn");
  if (J0jesRelativeFSRdn_branch) J0jesRelativeFSRdn_branch->SetAddress(&J0jesRelativeFSRdn_);
  J1jesRelativeFSRdn_branch = tree->GetBranch("J1jesRelativeFSRdn");
  if (J1jesRelativeFSRdn_branch) J1jesRelativeFSRdn_branch->SetAddress(&J1jesRelativeFSRdn_);
  J2jesRelativeFSRdn_branch = tree->GetBranch("J2jesRelativeFSRdn");
  if (J2jesRelativeFSRdn_branch) J2jesRelativeFSRdn_branch->SetAddress(&J2jesRelativeFSRdn_);
  J3jesRelativeFSRdn_branch = tree->GetBranch("J3jesRelativeFSRdn");
  if (J3jesRelativeFSRdn_branch) J3jesRelativeFSRdn_branch->SetAddress(&J3jesRelativeFSRdn_);
  J4jesRelativeFSRdn_branch = tree->GetBranch("J4jesRelativeFSRdn");
  if (J4jesRelativeFSRdn_branch) J4jesRelativeFSRdn_branch->SetAddress(&J4jesRelativeFSRdn_);
  J5jesRelativeFSRdn_branch = tree->GetBranch("J5jesRelativeFSRdn");
  if (J5jesRelativeFSRdn_branch) J5jesRelativeFSRdn_branch->SetAddress(&J5jesRelativeFSRdn_);
  J6jesRelativeFSRdn_branch = tree->GetBranch("J6jesRelativeFSRdn");
  if (J6jesRelativeFSRdn_branch) J6jesRelativeFSRdn_branch->SetAddress(&J6jesRelativeFSRdn_);
  J7jesRelativeFSRdn_branch = tree->GetBranch("J7jesRelativeFSRdn");
  if (J7jesRelativeFSRdn_branch) J7jesRelativeFSRdn_branch->SetAddress(&J7jesRelativeFSRdn_);
  JsjesRelativeStatFSRup_branch = tree->GetBranch("JsjesRelativeStatFSRup");
  if (JsjesRelativeStatFSRup_branch) JsjesRelativeStatFSRup_branch->SetAddress(&JsjesRelativeStatFSRup_);
  FJ0jesRelativeStatFSRup_branch = tree->GetBranch("FJ0jesRelativeStatFSRup");
  if (FJ0jesRelativeStatFSRup_branch) FJ0jesRelativeStatFSRup_branch->SetAddress(&FJ0jesRelativeStatFSRup_);
  FJ1jesRelativeStatFSRup_branch = tree->GetBranch("FJ1jesRelativeStatFSRup");
  if (FJ1jesRelativeStatFSRup_branch) FJ1jesRelativeStatFSRup_branch->SetAddress(&FJ1jesRelativeStatFSRup_);
  FJ2jesRelativeStatFSRup_branch = tree->GetBranch("FJ2jesRelativeStatFSRup");
  if (FJ2jesRelativeStatFSRup_branch) FJ2jesRelativeStatFSRup_branch->SetAddress(&FJ2jesRelativeStatFSRup_);
  FJ3jesRelativeStatFSRup_branch = tree->GetBranch("FJ3jesRelativeStatFSRup");
  if (FJ3jesRelativeStatFSRup_branch) FJ3jesRelativeStatFSRup_branch->SetAddress(&FJ3jesRelativeStatFSRup_);
  FJ4jesRelativeStatFSRup_branch = tree->GetBranch("FJ4jesRelativeStatFSRup");
  if (FJ4jesRelativeStatFSRup_branch) FJ4jesRelativeStatFSRup_branch->SetAddress(&FJ4jesRelativeStatFSRup_);
  iFJ0jesRelativeStatFSRup_branch = tree->GetBranch("iFJ0jesRelativeStatFSRup");
  if (iFJ0jesRelativeStatFSRup_branch) iFJ0jesRelativeStatFSRup_branch->SetAddress(&iFJ0jesRelativeStatFSRup_);
  iFJ1jesRelativeStatFSRup_branch = tree->GetBranch("iFJ1jesRelativeStatFSRup");
  if (iFJ1jesRelativeStatFSRup_branch) iFJ1jesRelativeStatFSRup_branch->SetAddress(&iFJ1jesRelativeStatFSRup_);
  iFJ2jesRelativeStatFSRup_branch = tree->GetBranch("iFJ2jesRelativeStatFSRup");
  if (iFJ2jesRelativeStatFSRup_branch) iFJ2jesRelativeStatFSRup_branch->SetAddress(&iFJ2jesRelativeStatFSRup_);
  iFJ3jesRelativeStatFSRup_branch = tree->GetBranch("iFJ3jesRelativeStatFSRup");
  if (iFJ3jesRelativeStatFSRup_branch) iFJ3jesRelativeStatFSRup_branch->SetAddress(&iFJ3jesRelativeStatFSRup_);
  iFJ4jesRelativeStatFSRup_branch = tree->GetBranch("iFJ4jesRelativeStatFSRup");
  if (iFJ4jesRelativeStatFSRup_branch) iFJ4jesRelativeStatFSRup_branch->SetAddress(&iFJ4jesRelativeStatFSRup_);
  METjesRelativeStatFSRup_branch = tree->GetBranch("METjesRelativeStatFSRup");
  if (METjesRelativeStatFSRup_branch) METjesRelativeStatFSRup_branch->SetAddress(&METjesRelativeStatFSRup_);
  NujesRelativeStatFSRup_branch = tree->GetBranch("NujesRelativeStatFSRup");
  if (NujesRelativeStatFSRup_branch) NujesRelativeStatFSRup_branch->SetAddress(&NujesRelativeStatFSRup_);
  J0jesRelativeStatFSRup_branch = tree->GetBranch("J0jesRelativeStatFSRup");
  if (J0jesRelativeStatFSRup_branch) J0jesRelativeStatFSRup_branch->SetAddress(&J0jesRelativeStatFSRup_);
  J1jesRelativeStatFSRup_branch = tree->GetBranch("J1jesRelativeStatFSRup");
  if (J1jesRelativeStatFSRup_branch) J1jesRelativeStatFSRup_branch->SetAddress(&J1jesRelativeStatFSRup_);
  J2jesRelativeStatFSRup_branch = tree->GetBranch("J2jesRelativeStatFSRup");
  if (J2jesRelativeStatFSRup_branch) J2jesRelativeStatFSRup_branch->SetAddress(&J2jesRelativeStatFSRup_);
  J3jesRelativeStatFSRup_branch = tree->GetBranch("J3jesRelativeStatFSRup");
  if (J3jesRelativeStatFSRup_branch) J3jesRelativeStatFSRup_branch->SetAddress(&J3jesRelativeStatFSRup_);
  J4jesRelativeStatFSRup_branch = tree->GetBranch("J4jesRelativeStatFSRup");
  if (J4jesRelativeStatFSRup_branch) J4jesRelativeStatFSRup_branch->SetAddress(&J4jesRelativeStatFSRup_);
  J5jesRelativeStatFSRup_branch = tree->GetBranch("J5jesRelativeStatFSRup");
  if (J5jesRelativeStatFSRup_branch) J5jesRelativeStatFSRup_branch->SetAddress(&J5jesRelativeStatFSRup_);
  J6jesRelativeStatFSRup_branch = tree->GetBranch("J6jesRelativeStatFSRup");
  if (J6jesRelativeStatFSRup_branch) J6jesRelativeStatFSRup_branch->SetAddress(&J6jesRelativeStatFSRup_);
  J7jesRelativeStatFSRup_branch = tree->GetBranch("J7jesRelativeStatFSRup");
  if (J7jesRelativeStatFSRup_branch) J7jesRelativeStatFSRup_branch->SetAddress(&J7jesRelativeStatFSRup_);
  JsjesRelativeStatFSRdn_branch = tree->GetBranch("JsjesRelativeStatFSRdn");
  if (JsjesRelativeStatFSRdn_branch) JsjesRelativeStatFSRdn_branch->SetAddress(&JsjesRelativeStatFSRdn_);
  FJ0jesRelativeStatFSRdn_branch = tree->GetBranch("FJ0jesRelativeStatFSRdn");
  if (FJ0jesRelativeStatFSRdn_branch) FJ0jesRelativeStatFSRdn_branch->SetAddress(&FJ0jesRelativeStatFSRdn_);
  FJ1jesRelativeStatFSRdn_branch = tree->GetBranch("FJ1jesRelativeStatFSRdn");
  if (FJ1jesRelativeStatFSRdn_branch) FJ1jesRelativeStatFSRdn_branch->SetAddress(&FJ1jesRelativeStatFSRdn_);
  FJ2jesRelativeStatFSRdn_branch = tree->GetBranch("FJ2jesRelativeStatFSRdn");
  if (FJ2jesRelativeStatFSRdn_branch) FJ2jesRelativeStatFSRdn_branch->SetAddress(&FJ2jesRelativeStatFSRdn_);
  FJ3jesRelativeStatFSRdn_branch = tree->GetBranch("FJ3jesRelativeStatFSRdn");
  if (FJ3jesRelativeStatFSRdn_branch) FJ3jesRelativeStatFSRdn_branch->SetAddress(&FJ3jesRelativeStatFSRdn_);
  FJ4jesRelativeStatFSRdn_branch = tree->GetBranch("FJ4jesRelativeStatFSRdn");
  if (FJ4jesRelativeStatFSRdn_branch) FJ4jesRelativeStatFSRdn_branch->SetAddress(&FJ4jesRelativeStatFSRdn_);
  iFJ0jesRelativeStatFSRdn_branch = tree->GetBranch("iFJ0jesRelativeStatFSRdn");
  if (iFJ0jesRelativeStatFSRdn_branch) iFJ0jesRelativeStatFSRdn_branch->SetAddress(&iFJ0jesRelativeStatFSRdn_);
  iFJ1jesRelativeStatFSRdn_branch = tree->GetBranch("iFJ1jesRelativeStatFSRdn");
  if (iFJ1jesRelativeStatFSRdn_branch) iFJ1jesRelativeStatFSRdn_branch->SetAddress(&iFJ1jesRelativeStatFSRdn_);
  iFJ2jesRelativeStatFSRdn_branch = tree->GetBranch("iFJ2jesRelativeStatFSRdn");
  if (iFJ2jesRelativeStatFSRdn_branch) iFJ2jesRelativeStatFSRdn_branch->SetAddress(&iFJ2jesRelativeStatFSRdn_);
  iFJ3jesRelativeStatFSRdn_branch = tree->GetBranch("iFJ3jesRelativeStatFSRdn");
  if (iFJ3jesRelativeStatFSRdn_branch) iFJ3jesRelativeStatFSRdn_branch->SetAddress(&iFJ3jesRelativeStatFSRdn_);
  iFJ4jesRelativeStatFSRdn_branch = tree->GetBranch("iFJ4jesRelativeStatFSRdn");
  if (iFJ4jesRelativeStatFSRdn_branch) iFJ4jesRelativeStatFSRdn_branch->SetAddress(&iFJ4jesRelativeStatFSRdn_);
  METjesRelativeStatFSRdn_branch = tree->GetBranch("METjesRelativeStatFSRdn");
  if (METjesRelativeStatFSRdn_branch) METjesRelativeStatFSRdn_branch->SetAddress(&METjesRelativeStatFSRdn_);
  NujesRelativeStatFSRdn_branch = tree->GetBranch("NujesRelativeStatFSRdn");
  if (NujesRelativeStatFSRdn_branch) NujesRelativeStatFSRdn_branch->SetAddress(&NujesRelativeStatFSRdn_);
  J0jesRelativeStatFSRdn_branch = tree->GetBranch("J0jesRelativeStatFSRdn");
  if (J0jesRelativeStatFSRdn_branch) J0jesRelativeStatFSRdn_branch->SetAddress(&J0jesRelativeStatFSRdn_);
  J1jesRelativeStatFSRdn_branch = tree->GetBranch("J1jesRelativeStatFSRdn");
  if (J1jesRelativeStatFSRdn_branch) J1jesRelativeStatFSRdn_branch->SetAddress(&J1jesRelativeStatFSRdn_);
  J2jesRelativeStatFSRdn_branch = tree->GetBranch("J2jesRelativeStatFSRdn");
  if (J2jesRelativeStatFSRdn_branch) J2jesRelativeStatFSRdn_branch->SetAddress(&J2jesRelativeStatFSRdn_);
  J3jesRelativeStatFSRdn_branch = tree->GetBranch("J3jesRelativeStatFSRdn");
  if (J3jesRelativeStatFSRdn_branch) J3jesRelativeStatFSRdn_branch->SetAddress(&J3jesRelativeStatFSRdn_);
  J4jesRelativeStatFSRdn_branch = tree->GetBranch("J4jesRelativeStatFSRdn");
  if (J4jesRelativeStatFSRdn_branch) J4jesRelativeStatFSRdn_branch->SetAddress(&J4jesRelativeStatFSRdn_);
  J5jesRelativeStatFSRdn_branch = tree->GetBranch("J5jesRelativeStatFSRdn");
  if (J5jesRelativeStatFSRdn_branch) J5jesRelativeStatFSRdn_branch->SetAddress(&J5jesRelativeStatFSRdn_);
  J6jesRelativeStatFSRdn_branch = tree->GetBranch("J6jesRelativeStatFSRdn");
  if (J6jesRelativeStatFSRdn_branch) J6jesRelativeStatFSRdn_branch->SetAddress(&J6jesRelativeStatFSRdn_);
  J7jesRelativeStatFSRdn_branch = tree->GetBranch("J7jesRelativeStatFSRdn");
  if (J7jesRelativeStatFSRdn_branch) J7jesRelativeStatFSRdn_branch->SetAddress(&J7jesRelativeStatFSRdn_);
  JsjesRelativeStatECup_branch = tree->GetBranch("JsjesRelativeStatECup");
  if (JsjesRelativeStatECup_branch) JsjesRelativeStatECup_branch->SetAddress(&JsjesRelativeStatECup_);
  FJ0jesRelativeStatECup_branch = tree->GetBranch("FJ0jesRelativeStatECup");
  if (FJ0jesRelativeStatECup_branch) FJ0jesRelativeStatECup_branch->SetAddress(&FJ0jesRelativeStatECup_);
  FJ1jesRelativeStatECup_branch = tree->GetBranch("FJ1jesRelativeStatECup");
  if (FJ1jesRelativeStatECup_branch) FJ1jesRelativeStatECup_branch->SetAddress(&FJ1jesRelativeStatECup_);
  FJ2jesRelativeStatECup_branch = tree->GetBranch("FJ2jesRelativeStatECup");
  if (FJ2jesRelativeStatECup_branch) FJ2jesRelativeStatECup_branch->SetAddress(&FJ2jesRelativeStatECup_);
  FJ3jesRelativeStatECup_branch = tree->GetBranch("FJ3jesRelativeStatECup");
  if (FJ3jesRelativeStatECup_branch) FJ3jesRelativeStatECup_branch->SetAddress(&FJ3jesRelativeStatECup_);
  FJ4jesRelativeStatECup_branch = tree->GetBranch("FJ4jesRelativeStatECup");
  if (FJ4jesRelativeStatECup_branch) FJ4jesRelativeStatECup_branch->SetAddress(&FJ4jesRelativeStatECup_);
  iFJ0jesRelativeStatECup_branch = tree->GetBranch("iFJ0jesRelativeStatECup");
  if (iFJ0jesRelativeStatECup_branch) iFJ0jesRelativeStatECup_branch->SetAddress(&iFJ0jesRelativeStatECup_);
  iFJ1jesRelativeStatECup_branch = tree->GetBranch("iFJ1jesRelativeStatECup");
  if (iFJ1jesRelativeStatECup_branch) iFJ1jesRelativeStatECup_branch->SetAddress(&iFJ1jesRelativeStatECup_);
  iFJ2jesRelativeStatECup_branch = tree->GetBranch("iFJ2jesRelativeStatECup");
  if (iFJ2jesRelativeStatECup_branch) iFJ2jesRelativeStatECup_branch->SetAddress(&iFJ2jesRelativeStatECup_);
  iFJ3jesRelativeStatECup_branch = tree->GetBranch("iFJ3jesRelativeStatECup");
  if (iFJ3jesRelativeStatECup_branch) iFJ3jesRelativeStatECup_branch->SetAddress(&iFJ3jesRelativeStatECup_);
  iFJ4jesRelativeStatECup_branch = tree->GetBranch("iFJ4jesRelativeStatECup");
  if (iFJ4jesRelativeStatECup_branch) iFJ4jesRelativeStatECup_branch->SetAddress(&iFJ4jesRelativeStatECup_);
  METjesRelativeStatECup_branch = tree->GetBranch("METjesRelativeStatECup");
  if (METjesRelativeStatECup_branch) METjesRelativeStatECup_branch->SetAddress(&METjesRelativeStatECup_);
  NujesRelativeStatECup_branch = tree->GetBranch("NujesRelativeStatECup");
  if (NujesRelativeStatECup_branch) NujesRelativeStatECup_branch->SetAddress(&NujesRelativeStatECup_);
  J0jesRelativeStatECup_branch = tree->GetBranch("J0jesRelativeStatECup");
  if (J0jesRelativeStatECup_branch) J0jesRelativeStatECup_branch->SetAddress(&J0jesRelativeStatECup_);
  J1jesRelativeStatECup_branch = tree->GetBranch("J1jesRelativeStatECup");
  if (J1jesRelativeStatECup_branch) J1jesRelativeStatECup_branch->SetAddress(&J1jesRelativeStatECup_);
  J2jesRelativeStatECup_branch = tree->GetBranch("J2jesRelativeStatECup");
  if (J2jesRelativeStatECup_branch) J2jesRelativeStatECup_branch->SetAddress(&J2jesRelativeStatECup_);
  J3jesRelativeStatECup_branch = tree->GetBranch("J3jesRelativeStatECup");
  if (J3jesRelativeStatECup_branch) J3jesRelativeStatECup_branch->SetAddress(&J3jesRelativeStatECup_);
  J4jesRelativeStatECup_branch = tree->GetBranch("J4jesRelativeStatECup");
  if (J4jesRelativeStatECup_branch) J4jesRelativeStatECup_branch->SetAddress(&J4jesRelativeStatECup_);
  J5jesRelativeStatECup_branch = tree->GetBranch("J5jesRelativeStatECup");
  if (J5jesRelativeStatECup_branch) J5jesRelativeStatECup_branch->SetAddress(&J5jesRelativeStatECup_);
  J6jesRelativeStatECup_branch = tree->GetBranch("J6jesRelativeStatECup");
  if (J6jesRelativeStatECup_branch) J6jesRelativeStatECup_branch->SetAddress(&J6jesRelativeStatECup_);
  J7jesRelativeStatECup_branch = tree->GetBranch("J7jesRelativeStatECup");
  if (J7jesRelativeStatECup_branch) J7jesRelativeStatECup_branch->SetAddress(&J7jesRelativeStatECup_);
  JsjesRelativeStatECdn_branch = tree->GetBranch("JsjesRelativeStatECdn");
  if (JsjesRelativeStatECdn_branch) JsjesRelativeStatECdn_branch->SetAddress(&JsjesRelativeStatECdn_);
  FJ0jesRelativeStatECdn_branch = tree->GetBranch("FJ0jesRelativeStatECdn");
  if (FJ0jesRelativeStatECdn_branch) FJ0jesRelativeStatECdn_branch->SetAddress(&FJ0jesRelativeStatECdn_);
  FJ1jesRelativeStatECdn_branch = tree->GetBranch("FJ1jesRelativeStatECdn");
  if (FJ1jesRelativeStatECdn_branch) FJ1jesRelativeStatECdn_branch->SetAddress(&FJ1jesRelativeStatECdn_);
  FJ2jesRelativeStatECdn_branch = tree->GetBranch("FJ2jesRelativeStatECdn");
  if (FJ2jesRelativeStatECdn_branch) FJ2jesRelativeStatECdn_branch->SetAddress(&FJ2jesRelativeStatECdn_);
  FJ3jesRelativeStatECdn_branch = tree->GetBranch("FJ3jesRelativeStatECdn");
  if (FJ3jesRelativeStatECdn_branch) FJ3jesRelativeStatECdn_branch->SetAddress(&FJ3jesRelativeStatECdn_);
  FJ4jesRelativeStatECdn_branch = tree->GetBranch("FJ4jesRelativeStatECdn");
  if (FJ4jesRelativeStatECdn_branch) FJ4jesRelativeStatECdn_branch->SetAddress(&FJ4jesRelativeStatECdn_);
  iFJ0jesRelativeStatECdn_branch = tree->GetBranch("iFJ0jesRelativeStatECdn");
  if (iFJ0jesRelativeStatECdn_branch) iFJ0jesRelativeStatECdn_branch->SetAddress(&iFJ0jesRelativeStatECdn_);
  iFJ1jesRelativeStatECdn_branch = tree->GetBranch("iFJ1jesRelativeStatECdn");
  if (iFJ1jesRelativeStatECdn_branch) iFJ1jesRelativeStatECdn_branch->SetAddress(&iFJ1jesRelativeStatECdn_);
  iFJ2jesRelativeStatECdn_branch = tree->GetBranch("iFJ2jesRelativeStatECdn");
  if (iFJ2jesRelativeStatECdn_branch) iFJ2jesRelativeStatECdn_branch->SetAddress(&iFJ2jesRelativeStatECdn_);
  iFJ3jesRelativeStatECdn_branch = tree->GetBranch("iFJ3jesRelativeStatECdn");
  if (iFJ3jesRelativeStatECdn_branch) iFJ3jesRelativeStatECdn_branch->SetAddress(&iFJ3jesRelativeStatECdn_);
  iFJ4jesRelativeStatECdn_branch = tree->GetBranch("iFJ4jesRelativeStatECdn");
  if (iFJ4jesRelativeStatECdn_branch) iFJ4jesRelativeStatECdn_branch->SetAddress(&iFJ4jesRelativeStatECdn_);
  METjesRelativeStatECdn_branch = tree->GetBranch("METjesRelativeStatECdn");
  if (METjesRelativeStatECdn_branch) METjesRelativeStatECdn_branch->SetAddress(&METjesRelativeStatECdn_);
  NujesRelativeStatECdn_branch = tree->GetBranch("NujesRelativeStatECdn");
  if (NujesRelativeStatECdn_branch) NujesRelativeStatECdn_branch->SetAddress(&NujesRelativeStatECdn_);
  J0jesRelativeStatECdn_branch = tree->GetBranch("J0jesRelativeStatECdn");
  if (J0jesRelativeStatECdn_branch) J0jesRelativeStatECdn_branch->SetAddress(&J0jesRelativeStatECdn_);
  J1jesRelativeStatECdn_branch = tree->GetBranch("J1jesRelativeStatECdn");
  if (J1jesRelativeStatECdn_branch) J1jesRelativeStatECdn_branch->SetAddress(&J1jesRelativeStatECdn_);
  J2jesRelativeStatECdn_branch = tree->GetBranch("J2jesRelativeStatECdn");
  if (J2jesRelativeStatECdn_branch) J2jesRelativeStatECdn_branch->SetAddress(&J2jesRelativeStatECdn_);
  J3jesRelativeStatECdn_branch = tree->GetBranch("J3jesRelativeStatECdn");
  if (J3jesRelativeStatECdn_branch) J3jesRelativeStatECdn_branch->SetAddress(&J3jesRelativeStatECdn_);
  J4jesRelativeStatECdn_branch = tree->GetBranch("J4jesRelativeStatECdn");
  if (J4jesRelativeStatECdn_branch) J4jesRelativeStatECdn_branch->SetAddress(&J4jesRelativeStatECdn_);
  J5jesRelativeStatECdn_branch = tree->GetBranch("J5jesRelativeStatECdn");
  if (J5jesRelativeStatECdn_branch) J5jesRelativeStatECdn_branch->SetAddress(&J5jesRelativeStatECdn_);
  J6jesRelativeStatECdn_branch = tree->GetBranch("J6jesRelativeStatECdn");
  if (J6jesRelativeStatECdn_branch) J6jesRelativeStatECdn_branch->SetAddress(&J6jesRelativeStatECdn_);
  J7jesRelativeStatECdn_branch = tree->GetBranch("J7jesRelativeStatECdn");
  if (J7jesRelativeStatECdn_branch) J7jesRelativeStatECdn_branch->SetAddress(&J7jesRelativeStatECdn_);
  JsjesRelativeStatHFup_branch = tree->GetBranch("JsjesRelativeStatHFup");
  if (JsjesRelativeStatHFup_branch) JsjesRelativeStatHFup_branch->SetAddress(&JsjesRelativeStatHFup_);
  FJ0jesRelativeStatHFup_branch = tree->GetBranch("FJ0jesRelativeStatHFup");
  if (FJ0jesRelativeStatHFup_branch) FJ0jesRelativeStatHFup_branch->SetAddress(&FJ0jesRelativeStatHFup_);
  FJ1jesRelativeStatHFup_branch = tree->GetBranch("FJ1jesRelativeStatHFup");
  if (FJ1jesRelativeStatHFup_branch) FJ1jesRelativeStatHFup_branch->SetAddress(&FJ1jesRelativeStatHFup_);
  FJ2jesRelativeStatHFup_branch = tree->GetBranch("FJ2jesRelativeStatHFup");
  if (FJ2jesRelativeStatHFup_branch) FJ2jesRelativeStatHFup_branch->SetAddress(&FJ2jesRelativeStatHFup_);
  FJ3jesRelativeStatHFup_branch = tree->GetBranch("FJ3jesRelativeStatHFup");
  if (FJ3jesRelativeStatHFup_branch) FJ3jesRelativeStatHFup_branch->SetAddress(&FJ3jesRelativeStatHFup_);
  FJ4jesRelativeStatHFup_branch = tree->GetBranch("FJ4jesRelativeStatHFup");
  if (FJ4jesRelativeStatHFup_branch) FJ4jesRelativeStatHFup_branch->SetAddress(&FJ4jesRelativeStatHFup_);
  iFJ0jesRelativeStatHFup_branch = tree->GetBranch("iFJ0jesRelativeStatHFup");
  if (iFJ0jesRelativeStatHFup_branch) iFJ0jesRelativeStatHFup_branch->SetAddress(&iFJ0jesRelativeStatHFup_);
  iFJ1jesRelativeStatHFup_branch = tree->GetBranch("iFJ1jesRelativeStatHFup");
  if (iFJ1jesRelativeStatHFup_branch) iFJ1jesRelativeStatHFup_branch->SetAddress(&iFJ1jesRelativeStatHFup_);
  iFJ2jesRelativeStatHFup_branch = tree->GetBranch("iFJ2jesRelativeStatHFup");
  if (iFJ2jesRelativeStatHFup_branch) iFJ2jesRelativeStatHFup_branch->SetAddress(&iFJ2jesRelativeStatHFup_);
  iFJ3jesRelativeStatHFup_branch = tree->GetBranch("iFJ3jesRelativeStatHFup");
  if (iFJ3jesRelativeStatHFup_branch) iFJ3jesRelativeStatHFup_branch->SetAddress(&iFJ3jesRelativeStatHFup_);
  iFJ4jesRelativeStatHFup_branch = tree->GetBranch("iFJ4jesRelativeStatHFup");
  if (iFJ4jesRelativeStatHFup_branch) iFJ4jesRelativeStatHFup_branch->SetAddress(&iFJ4jesRelativeStatHFup_);
  METjesRelativeStatHFup_branch = tree->GetBranch("METjesRelativeStatHFup");
  if (METjesRelativeStatHFup_branch) METjesRelativeStatHFup_branch->SetAddress(&METjesRelativeStatHFup_);
  NujesRelativeStatHFup_branch = tree->GetBranch("NujesRelativeStatHFup");
  if (NujesRelativeStatHFup_branch) NujesRelativeStatHFup_branch->SetAddress(&NujesRelativeStatHFup_);
  J0jesRelativeStatHFup_branch = tree->GetBranch("J0jesRelativeStatHFup");
  if (J0jesRelativeStatHFup_branch) J0jesRelativeStatHFup_branch->SetAddress(&J0jesRelativeStatHFup_);
  J1jesRelativeStatHFup_branch = tree->GetBranch("J1jesRelativeStatHFup");
  if (J1jesRelativeStatHFup_branch) J1jesRelativeStatHFup_branch->SetAddress(&J1jesRelativeStatHFup_);
  J2jesRelativeStatHFup_branch = tree->GetBranch("J2jesRelativeStatHFup");
  if (J2jesRelativeStatHFup_branch) J2jesRelativeStatHFup_branch->SetAddress(&J2jesRelativeStatHFup_);
  J3jesRelativeStatHFup_branch = tree->GetBranch("J3jesRelativeStatHFup");
  if (J3jesRelativeStatHFup_branch) J3jesRelativeStatHFup_branch->SetAddress(&J3jesRelativeStatHFup_);
  J4jesRelativeStatHFup_branch = tree->GetBranch("J4jesRelativeStatHFup");
  if (J4jesRelativeStatHFup_branch) J4jesRelativeStatHFup_branch->SetAddress(&J4jesRelativeStatHFup_);
  J5jesRelativeStatHFup_branch = tree->GetBranch("J5jesRelativeStatHFup");
  if (J5jesRelativeStatHFup_branch) J5jesRelativeStatHFup_branch->SetAddress(&J5jesRelativeStatHFup_);
  J6jesRelativeStatHFup_branch = tree->GetBranch("J6jesRelativeStatHFup");
  if (J6jesRelativeStatHFup_branch) J6jesRelativeStatHFup_branch->SetAddress(&J6jesRelativeStatHFup_);
  J7jesRelativeStatHFup_branch = tree->GetBranch("J7jesRelativeStatHFup");
  if (J7jesRelativeStatHFup_branch) J7jesRelativeStatHFup_branch->SetAddress(&J7jesRelativeStatHFup_);
  JsjesRelativeStatHFdn_branch = tree->GetBranch("JsjesRelativeStatHFdn");
  if (JsjesRelativeStatHFdn_branch) JsjesRelativeStatHFdn_branch->SetAddress(&JsjesRelativeStatHFdn_);
  FJ0jesRelativeStatHFdn_branch = tree->GetBranch("FJ0jesRelativeStatHFdn");
  if (FJ0jesRelativeStatHFdn_branch) FJ0jesRelativeStatHFdn_branch->SetAddress(&FJ0jesRelativeStatHFdn_);
  FJ1jesRelativeStatHFdn_branch = tree->GetBranch("FJ1jesRelativeStatHFdn");
  if (FJ1jesRelativeStatHFdn_branch) FJ1jesRelativeStatHFdn_branch->SetAddress(&FJ1jesRelativeStatHFdn_);
  FJ2jesRelativeStatHFdn_branch = tree->GetBranch("FJ2jesRelativeStatHFdn");
  if (FJ2jesRelativeStatHFdn_branch) FJ2jesRelativeStatHFdn_branch->SetAddress(&FJ2jesRelativeStatHFdn_);
  FJ3jesRelativeStatHFdn_branch = tree->GetBranch("FJ3jesRelativeStatHFdn");
  if (FJ3jesRelativeStatHFdn_branch) FJ3jesRelativeStatHFdn_branch->SetAddress(&FJ3jesRelativeStatHFdn_);
  FJ4jesRelativeStatHFdn_branch = tree->GetBranch("FJ4jesRelativeStatHFdn");
  if (FJ4jesRelativeStatHFdn_branch) FJ4jesRelativeStatHFdn_branch->SetAddress(&FJ4jesRelativeStatHFdn_);
  iFJ0jesRelativeStatHFdn_branch = tree->GetBranch("iFJ0jesRelativeStatHFdn");
  if (iFJ0jesRelativeStatHFdn_branch) iFJ0jesRelativeStatHFdn_branch->SetAddress(&iFJ0jesRelativeStatHFdn_);
  iFJ1jesRelativeStatHFdn_branch = tree->GetBranch("iFJ1jesRelativeStatHFdn");
  if (iFJ1jesRelativeStatHFdn_branch) iFJ1jesRelativeStatHFdn_branch->SetAddress(&iFJ1jesRelativeStatHFdn_);
  iFJ2jesRelativeStatHFdn_branch = tree->GetBranch("iFJ2jesRelativeStatHFdn");
  if (iFJ2jesRelativeStatHFdn_branch) iFJ2jesRelativeStatHFdn_branch->SetAddress(&iFJ2jesRelativeStatHFdn_);
  iFJ3jesRelativeStatHFdn_branch = tree->GetBranch("iFJ3jesRelativeStatHFdn");
  if (iFJ3jesRelativeStatHFdn_branch) iFJ3jesRelativeStatHFdn_branch->SetAddress(&iFJ3jesRelativeStatHFdn_);
  iFJ4jesRelativeStatHFdn_branch = tree->GetBranch("iFJ4jesRelativeStatHFdn");
  if (iFJ4jesRelativeStatHFdn_branch) iFJ4jesRelativeStatHFdn_branch->SetAddress(&iFJ4jesRelativeStatHFdn_);
  METjesRelativeStatHFdn_branch = tree->GetBranch("METjesRelativeStatHFdn");
  if (METjesRelativeStatHFdn_branch) METjesRelativeStatHFdn_branch->SetAddress(&METjesRelativeStatHFdn_);
  NujesRelativeStatHFdn_branch = tree->GetBranch("NujesRelativeStatHFdn");
  if (NujesRelativeStatHFdn_branch) NujesRelativeStatHFdn_branch->SetAddress(&NujesRelativeStatHFdn_);
  J0jesRelativeStatHFdn_branch = tree->GetBranch("J0jesRelativeStatHFdn");
  if (J0jesRelativeStatHFdn_branch) J0jesRelativeStatHFdn_branch->SetAddress(&J0jesRelativeStatHFdn_);
  J1jesRelativeStatHFdn_branch = tree->GetBranch("J1jesRelativeStatHFdn");
  if (J1jesRelativeStatHFdn_branch) J1jesRelativeStatHFdn_branch->SetAddress(&J1jesRelativeStatHFdn_);
  J2jesRelativeStatHFdn_branch = tree->GetBranch("J2jesRelativeStatHFdn");
  if (J2jesRelativeStatHFdn_branch) J2jesRelativeStatHFdn_branch->SetAddress(&J2jesRelativeStatHFdn_);
  J3jesRelativeStatHFdn_branch = tree->GetBranch("J3jesRelativeStatHFdn");
  if (J3jesRelativeStatHFdn_branch) J3jesRelativeStatHFdn_branch->SetAddress(&J3jesRelativeStatHFdn_);
  J4jesRelativeStatHFdn_branch = tree->GetBranch("J4jesRelativeStatHFdn");
  if (J4jesRelativeStatHFdn_branch) J4jesRelativeStatHFdn_branch->SetAddress(&J4jesRelativeStatHFdn_);
  J5jesRelativeStatHFdn_branch = tree->GetBranch("J5jesRelativeStatHFdn");
  if (J5jesRelativeStatHFdn_branch) J5jesRelativeStatHFdn_branch->SetAddress(&J5jesRelativeStatHFdn_);
  J6jesRelativeStatHFdn_branch = tree->GetBranch("J6jesRelativeStatHFdn");
  if (J6jesRelativeStatHFdn_branch) J6jesRelativeStatHFdn_branch->SetAddress(&J6jesRelativeStatHFdn_);
  J7jesRelativeStatHFdn_branch = tree->GetBranch("J7jesRelativeStatHFdn");
  if (J7jesRelativeStatHFdn_branch) J7jesRelativeStatHFdn_branch->SetAddress(&J7jesRelativeStatHFdn_);
  JsjesPileUpDataMCup_branch = tree->GetBranch("JsjesPileUpDataMCup");
  if (JsjesPileUpDataMCup_branch) JsjesPileUpDataMCup_branch->SetAddress(&JsjesPileUpDataMCup_);
  FJ0jesPileUpDataMCup_branch = tree->GetBranch("FJ0jesPileUpDataMCup");
  if (FJ0jesPileUpDataMCup_branch) FJ0jesPileUpDataMCup_branch->SetAddress(&FJ0jesPileUpDataMCup_);
  FJ1jesPileUpDataMCup_branch = tree->GetBranch("FJ1jesPileUpDataMCup");
  if (FJ1jesPileUpDataMCup_branch) FJ1jesPileUpDataMCup_branch->SetAddress(&FJ1jesPileUpDataMCup_);
  FJ2jesPileUpDataMCup_branch = tree->GetBranch("FJ2jesPileUpDataMCup");
  if (FJ2jesPileUpDataMCup_branch) FJ2jesPileUpDataMCup_branch->SetAddress(&FJ2jesPileUpDataMCup_);
  FJ3jesPileUpDataMCup_branch = tree->GetBranch("FJ3jesPileUpDataMCup");
  if (FJ3jesPileUpDataMCup_branch) FJ3jesPileUpDataMCup_branch->SetAddress(&FJ3jesPileUpDataMCup_);
  FJ4jesPileUpDataMCup_branch = tree->GetBranch("FJ4jesPileUpDataMCup");
  if (FJ4jesPileUpDataMCup_branch) FJ4jesPileUpDataMCup_branch->SetAddress(&FJ4jesPileUpDataMCup_);
  iFJ0jesPileUpDataMCup_branch = tree->GetBranch("iFJ0jesPileUpDataMCup");
  if (iFJ0jesPileUpDataMCup_branch) iFJ0jesPileUpDataMCup_branch->SetAddress(&iFJ0jesPileUpDataMCup_);
  iFJ1jesPileUpDataMCup_branch = tree->GetBranch("iFJ1jesPileUpDataMCup");
  if (iFJ1jesPileUpDataMCup_branch) iFJ1jesPileUpDataMCup_branch->SetAddress(&iFJ1jesPileUpDataMCup_);
  iFJ2jesPileUpDataMCup_branch = tree->GetBranch("iFJ2jesPileUpDataMCup");
  if (iFJ2jesPileUpDataMCup_branch) iFJ2jesPileUpDataMCup_branch->SetAddress(&iFJ2jesPileUpDataMCup_);
  iFJ3jesPileUpDataMCup_branch = tree->GetBranch("iFJ3jesPileUpDataMCup");
  if (iFJ3jesPileUpDataMCup_branch) iFJ3jesPileUpDataMCup_branch->SetAddress(&iFJ3jesPileUpDataMCup_);
  iFJ4jesPileUpDataMCup_branch = tree->GetBranch("iFJ4jesPileUpDataMCup");
  if (iFJ4jesPileUpDataMCup_branch) iFJ4jesPileUpDataMCup_branch->SetAddress(&iFJ4jesPileUpDataMCup_);
  METjesPileUpDataMCup_branch = tree->GetBranch("METjesPileUpDataMCup");
  if (METjesPileUpDataMCup_branch) METjesPileUpDataMCup_branch->SetAddress(&METjesPileUpDataMCup_);
  NujesPileUpDataMCup_branch = tree->GetBranch("NujesPileUpDataMCup");
  if (NujesPileUpDataMCup_branch) NujesPileUpDataMCup_branch->SetAddress(&NujesPileUpDataMCup_);
  J0jesPileUpDataMCup_branch = tree->GetBranch("J0jesPileUpDataMCup");
  if (J0jesPileUpDataMCup_branch) J0jesPileUpDataMCup_branch->SetAddress(&J0jesPileUpDataMCup_);
  J1jesPileUpDataMCup_branch = tree->GetBranch("J1jesPileUpDataMCup");
  if (J1jesPileUpDataMCup_branch) J1jesPileUpDataMCup_branch->SetAddress(&J1jesPileUpDataMCup_);
  J2jesPileUpDataMCup_branch = tree->GetBranch("J2jesPileUpDataMCup");
  if (J2jesPileUpDataMCup_branch) J2jesPileUpDataMCup_branch->SetAddress(&J2jesPileUpDataMCup_);
  J3jesPileUpDataMCup_branch = tree->GetBranch("J3jesPileUpDataMCup");
  if (J3jesPileUpDataMCup_branch) J3jesPileUpDataMCup_branch->SetAddress(&J3jesPileUpDataMCup_);
  J4jesPileUpDataMCup_branch = tree->GetBranch("J4jesPileUpDataMCup");
  if (J4jesPileUpDataMCup_branch) J4jesPileUpDataMCup_branch->SetAddress(&J4jesPileUpDataMCup_);
  J5jesPileUpDataMCup_branch = tree->GetBranch("J5jesPileUpDataMCup");
  if (J5jesPileUpDataMCup_branch) J5jesPileUpDataMCup_branch->SetAddress(&J5jesPileUpDataMCup_);
  J6jesPileUpDataMCup_branch = tree->GetBranch("J6jesPileUpDataMCup");
  if (J6jesPileUpDataMCup_branch) J6jesPileUpDataMCup_branch->SetAddress(&J6jesPileUpDataMCup_);
  J7jesPileUpDataMCup_branch = tree->GetBranch("J7jesPileUpDataMCup");
  if (J7jesPileUpDataMCup_branch) J7jesPileUpDataMCup_branch->SetAddress(&J7jesPileUpDataMCup_);
  JsjesPileUpDataMCdn_branch = tree->GetBranch("JsjesPileUpDataMCdn");
  if (JsjesPileUpDataMCdn_branch) JsjesPileUpDataMCdn_branch->SetAddress(&JsjesPileUpDataMCdn_);
  FJ0jesPileUpDataMCdn_branch = tree->GetBranch("FJ0jesPileUpDataMCdn");
  if (FJ0jesPileUpDataMCdn_branch) FJ0jesPileUpDataMCdn_branch->SetAddress(&FJ0jesPileUpDataMCdn_);
  FJ1jesPileUpDataMCdn_branch = tree->GetBranch("FJ1jesPileUpDataMCdn");
  if (FJ1jesPileUpDataMCdn_branch) FJ1jesPileUpDataMCdn_branch->SetAddress(&FJ1jesPileUpDataMCdn_);
  FJ2jesPileUpDataMCdn_branch = tree->GetBranch("FJ2jesPileUpDataMCdn");
  if (FJ2jesPileUpDataMCdn_branch) FJ2jesPileUpDataMCdn_branch->SetAddress(&FJ2jesPileUpDataMCdn_);
  FJ3jesPileUpDataMCdn_branch = tree->GetBranch("FJ3jesPileUpDataMCdn");
  if (FJ3jesPileUpDataMCdn_branch) FJ3jesPileUpDataMCdn_branch->SetAddress(&FJ3jesPileUpDataMCdn_);
  FJ4jesPileUpDataMCdn_branch = tree->GetBranch("FJ4jesPileUpDataMCdn");
  if (FJ4jesPileUpDataMCdn_branch) FJ4jesPileUpDataMCdn_branch->SetAddress(&FJ4jesPileUpDataMCdn_);
  iFJ0jesPileUpDataMCdn_branch = tree->GetBranch("iFJ0jesPileUpDataMCdn");
  if (iFJ0jesPileUpDataMCdn_branch) iFJ0jesPileUpDataMCdn_branch->SetAddress(&iFJ0jesPileUpDataMCdn_);
  iFJ1jesPileUpDataMCdn_branch = tree->GetBranch("iFJ1jesPileUpDataMCdn");
  if (iFJ1jesPileUpDataMCdn_branch) iFJ1jesPileUpDataMCdn_branch->SetAddress(&iFJ1jesPileUpDataMCdn_);
  iFJ2jesPileUpDataMCdn_branch = tree->GetBranch("iFJ2jesPileUpDataMCdn");
  if (iFJ2jesPileUpDataMCdn_branch) iFJ2jesPileUpDataMCdn_branch->SetAddress(&iFJ2jesPileUpDataMCdn_);
  iFJ3jesPileUpDataMCdn_branch = tree->GetBranch("iFJ3jesPileUpDataMCdn");
  if (iFJ3jesPileUpDataMCdn_branch) iFJ3jesPileUpDataMCdn_branch->SetAddress(&iFJ3jesPileUpDataMCdn_);
  iFJ4jesPileUpDataMCdn_branch = tree->GetBranch("iFJ4jesPileUpDataMCdn");
  if (iFJ4jesPileUpDataMCdn_branch) iFJ4jesPileUpDataMCdn_branch->SetAddress(&iFJ4jesPileUpDataMCdn_);
  METjesPileUpDataMCdn_branch = tree->GetBranch("METjesPileUpDataMCdn");
  if (METjesPileUpDataMCdn_branch) METjesPileUpDataMCdn_branch->SetAddress(&METjesPileUpDataMCdn_);
  NujesPileUpDataMCdn_branch = tree->GetBranch("NujesPileUpDataMCdn");
  if (NujesPileUpDataMCdn_branch) NujesPileUpDataMCdn_branch->SetAddress(&NujesPileUpDataMCdn_);
  J0jesPileUpDataMCdn_branch = tree->GetBranch("J0jesPileUpDataMCdn");
  if (J0jesPileUpDataMCdn_branch) J0jesPileUpDataMCdn_branch->SetAddress(&J0jesPileUpDataMCdn_);
  J1jesPileUpDataMCdn_branch = tree->GetBranch("J1jesPileUpDataMCdn");
  if (J1jesPileUpDataMCdn_branch) J1jesPileUpDataMCdn_branch->SetAddress(&J1jesPileUpDataMCdn_);
  J2jesPileUpDataMCdn_branch = tree->GetBranch("J2jesPileUpDataMCdn");
  if (J2jesPileUpDataMCdn_branch) J2jesPileUpDataMCdn_branch->SetAddress(&J2jesPileUpDataMCdn_);
  J3jesPileUpDataMCdn_branch = tree->GetBranch("J3jesPileUpDataMCdn");
  if (J3jesPileUpDataMCdn_branch) J3jesPileUpDataMCdn_branch->SetAddress(&J3jesPileUpDataMCdn_);
  J4jesPileUpDataMCdn_branch = tree->GetBranch("J4jesPileUpDataMCdn");
  if (J4jesPileUpDataMCdn_branch) J4jesPileUpDataMCdn_branch->SetAddress(&J4jesPileUpDataMCdn_);
  J5jesPileUpDataMCdn_branch = tree->GetBranch("J5jesPileUpDataMCdn");
  if (J5jesPileUpDataMCdn_branch) J5jesPileUpDataMCdn_branch->SetAddress(&J5jesPileUpDataMCdn_);
  J6jesPileUpDataMCdn_branch = tree->GetBranch("J6jesPileUpDataMCdn");
  if (J6jesPileUpDataMCdn_branch) J6jesPileUpDataMCdn_branch->SetAddress(&J6jesPileUpDataMCdn_);
  J7jesPileUpDataMCdn_branch = tree->GetBranch("J7jesPileUpDataMCdn");
  if (J7jesPileUpDataMCdn_branch) J7jesPileUpDataMCdn_branch->SetAddress(&J7jesPileUpDataMCdn_);
  JsjesPileUpPtRefup_branch = tree->GetBranch("JsjesPileUpPtRefup");
  if (JsjesPileUpPtRefup_branch) JsjesPileUpPtRefup_branch->SetAddress(&JsjesPileUpPtRefup_);
  FJ0jesPileUpPtRefup_branch = tree->GetBranch("FJ0jesPileUpPtRefup");
  if (FJ0jesPileUpPtRefup_branch) FJ0jesPileUpPtRefup_branch->SetAddress(&FJ0jesPileUpPtRefup_);
  FJ1jesPileUpPtRefup_branch = tree->GetBranch("FJ1jesPileUpPtRefup");
  if (FJ1jesPileUpPtRefup_branch) FJ1jesPileUpPtRefup_branch->SetAddress(&FJ1jesPileUpPtRefup_);
  FJ2jesPileUpPtRefup_branch = tree->GetBranch("FJ2jesPileUpPtRefup");
  if (FJ2jesPileUpPtRefup_branch) FJ2jesPileUpPtRefup_branch->SetAddress(&FJ2jesPileUpPtRefup_);
  FJ3jesPileUpPtRefup_branch = tree->GetBranch("FJ3jesPileUpPtRefup");
  if (FJ3jesPileUpPtRefup_branch) FJ3jesPileUpPtRefup_branch->SetAddress(&FJ3jesPileUpPtRefup_);
  FJ4jesPileUpPtRefup_branch = tree->GetBranch("FJ4jesPileUpPtRefup");
  if (FJ4jesPileUpPtRefup_branch) FJ4jesPileUpPtRefup_branch->SetAddress(&FJ4jesPileUpPtRefup_);
  iFJ0jesPileUpPtRefup_branch = tree->GetBranch("iFJ0jesPileUpPtRefup");
  if (iFJ0jesPileUpPtRefup_branch) iFJ0jesPileUpPtRefup_branch->SetAddress(&iFJ0jesPileUpPtRefup_);
  iFJ1jesPileUpPtRefup_branch = tree->GetBranch("iFJ1jesPileUpPtRefup");
  if (iFJ1jesPileUpPtRefup_branch) iFJ1jesPileUpPtRefup_branch->SetAddress(&iFJ1jesPileUpPtRefup_);
  iFJ2jesPileUpPtRefup_branch = tree->GetBranch("iFJ2jesPileUpPtRefup");
  if (iFJ2jesPileUpPtRefup_branch) iFJ2jesPileUpPtRefup_branch->SetAddress(&iFJ2jesPileUpPtRefup_);
  iFJ3jesPileUpPtRefup_branch = tree->GetBranch("iFJ3jesPileUpPtRefup");
  if (iFJ3jesPileUpPtRefup_branch) iFJ3jesPileUpPtRefup_branch->SetAddress(&iFJ3jesPileUpPtRefup_);
  iFJ4jesPileUpPtRefup_branch = tree->GetBranch("iFJ4jesPileUpPtRefup");
  if (iFJ4jesPileUpPtRefup_branch) iFJ4jesPileUpPtRefup_branch->SetAddress(&iFJ4jesPileUpPtRefup_);
  METjesPileUpPtRefup_branch = tree->GetBranch("METjesPileUpPtRefup");
  if (METjesPileUpPtRefup_branch) METjesPileUpPtRefup_branch->SetAddress(&METjesPileUpPtRefup_);
  NujesPileUpPtRefup_branch = tree->GetBranch("NujesPileUpPtRefup");
  if (NujesPileUpPtRefup_branch) NujesPileUpPtRefup_branch->SetAddress(&NujesPileUpPtRefup_);
  J0jesPileUpPtRefup_branch = tree->GetBranch("J0jesPileUpPtRefup");
  if (J0jesPileUpPtRefup_branch) J0jesPileUpPtRefup_branch->SetAddress(&J0jesPileUpPtRefup_);
  J1jesPileUpPtRefup_branch = tree->GetBranch("J1jesPileUpPtRefup");
  if (J1jesPileUpPtRefup_branch) J1jesPileUpPtRefup_branch->SetAddress(&J1jesPileUpPtRefup_);
  J2jesPileUpPtRefup_branch = tree->GetBranch("J2jesPileUpPtRefup");
  if (J2jesPileUpPtRefup_branch) J2jesPileUpPtRefup_branch->SetAddress(&J2jesPileUpPtRefup_);
  J3jesPileUpPtRefup_branch = tree->GetBranch("J3jesPileUpPtRefup");
  if (J3jesPileUpPtRefup_branch) J3jesPileUpPtRefup_branch->SetAddress(&J3jesPileUpPtRefup_);
  J4jesPileUpPtRefup_branch = tree->GetBranch("J4jesPileUpPtRefup");
  if (J4jesPileUpPtRefup_branch) J4jesPileUpPtRefup_branch->SetAddress(&J4jesPileUpPtRefup_);
  J5jesPileUpPtRefup_branch = tree->GetBranch("J5jesPileUpPtRefup");
  if (J5jesPileUpPtRefup_branch) J5jesPileUpPtRefup_branch->SetAddress(&J5jesPileUpPtRefup_);
  J6jesPileUpPtRefup_branch = tree->GetBranch("J6jesPileUpPtRefup");
  if (J6jesPileUpPtRefup_branch) J6jesPileUpPtRefup_branch->SetAddress(&J6jesPileUpPtRefup_);
  J7jesPileUpPtRefup_branch = tree->GetBranch("J7jesPileUpPtRefup");
  if (J7jesPileUpPtRefup_branch) J7jesPileUpPtRefup_branch->SetAddress(&J7jesPileUpPtRefup_);
  JsjesPileUpPtRefdn_branch = tree->GetBranch("JsjesPileUpPtRefdn");
  if (JsjesPileUpPtRefdn_branch) JsjesPileUpPtRefdn_branch->SetAddress(&JsjesPileUpPtRefdn_);
  FJ0jesPileUpPtRefdn_branch = tree->GetBranch("FJ0jesPileUpPtRefdn");
  if (FJ0jesPileUpPtRefdn_branch) FJ0jesPileUpPtRefdn_branch->SetAddress(&FJ0jesPileUpPtRefdn_);
  FJ1jesPileUpPtRefdn_branch = tree->GetBranch("FJ1jesPileUpPtRefdn");
  if (FJ1jesPileUpPtRefdn_branch) FJ1jesPileUpPtRefdn_branch->SetAddress(&FJ1jesPileUpPtRefdn_);
  FJ2jesPileUpPtRefdn_branch = tree->GetBranch("FJ2jesPileUpPtRefdn");
  if (FJ2jesPileUpPtRefdn_branch) FJ2jesPileUpPtRefdn_branch->SetAddress(&FJ2jesPileUpPtRefdn_);
  FJ3jesPileUpPtRefdn_branch = tree->GetBranch("FJ3jesPileUpPtRefdn");
  if (FJ3jesPileUpPtRefdn_branch) FJ3jesPileUpPtRefdn_branch->SetAddress(&FJ3jesPileUpPtRefdn_);
  FJ4jesPileUpPtRefdn_branch = tree->GetBranch("FJ4jesPileUpPtRefdn");
  if (FJ4jesPileUpPtRefdn_branch) FJ4jesPileUpPtRefdn_branch->SetAddress(&FJ4jesPileUpPtRefdn_);
  iFJ0jesPileUpPtRefdn_branch = tree->GetBranch("iFJ0jesPileUpPtRefdn");
  if (iFJ0jesPileUpPtRefdn_branch) iFJ0jesPileUpPtRefdn_branch->SetAddress(&iFJ0jesPileUpPtRefdn_);
  iFJ1jesPileUpPtRefdn_branch = tree->GetBranch("iFJ1jesPileUpPtRefdn");
  if (iFJ1jesPileUpPtRefdn_branch) iFJ1jesPileUpPtRefdn_branch->SetAddress(&iFJ1jesPileUpPtRefdn_);
  iFJ2jesPileUpPtRefdn_branch = tree->GetBranch("iFJ2jesPileUpPtRefdn");
  if (iFJ2jesPileUpPtRefdn_branch) iFJ2jesPileUpPtRefdn_branch->SetAddress(&iFJ2jesPileUpPtRefdn_);
  iFJ3jesPileUpPtRefdn_branch = tree->GetBranch("iFJ3jesPileUpPtRefdn");
  if (iFJ3jesPileUpPtRefdn_branch) iFJ3jesPileUpPtRefdn_branch->SetAddress(&iFJ3jesPileUpPtRefdn_);
  iFJ4jesPileUpPtRefdn_branch = tree->GetBranch("iFJ4jesPileUpPtRefdn");
  if (iFJ4jesPileUpPtRefdn_branch) iFJ4jesPileUpPtRefdn_branch->SetAddress(&iFJ4jesPileUpPtRefdn_);
  METjesPileUpPtRefdn_branch = tree->GetBranch("METjesPileUpPtRefdn");
  if (METjesPileUpPtRefdn_branch) METjesPileUpPtRefdn_branch->SetAddress(&METjesPileUpPtRefdn_);
  NujesPileUpPtRefdn_branch = tree->GetBranch("NujesPileUpPtRefdn");
  if (NujesPileUpPtRefdn_branch) NujesPileUpPtRefdn_branch->SetAddress(&NujesPileUpPtRefdn_);
  J0jesPileUpPtRefdn_branch = tree->GetBranch("J0jesPileUpPtRefdn");
  if (J0jesPileUpPtRefdn_branch) J0jesPileUpPtRefdn_branch->SetAddress(&J0jesPileUpPtRefdn_);
  J1jesPileUpPtRefdn_branch = tree->GetBranch("J1jesPileUpPtRefdn");
  if (J1jesPileUpPtRefdn_branch) J1jesPileUpPtRefdn_branch->SetAddress(&J1jesPileUpPtRefdn_);
  J2jesPileUpPtRefdn_branch = tree->GetBranch("J2jesPileUpPtRefdn");
  if (J2jesPileUpPtRefdn_branch) J2jesPileUpPtRefdn_branch->SetAddress(&J2jesPileUpPtRefdn_);
  J3jesPileUpPtRefdn_branch = tree->GetBranch("J3jesPileUpPtRefdn");
  if (J3jesPileUpPtRefdn_branch) J3jesPileUpPtRefdn_branch->SetAddress(&J3jesPileUpPtRefdn_);
  J4jesPileUpPtRefdn_branch = tree->GetBranch("J4jesPileUpPtRefdn");
  if (J4jesPileUpPtRefdn_branch) J4jesPileUpPtRefdn_branch->SetAddress(&J4jesPileUpPtRefdn_);
  J5jesPileUpPtRefdn_branch = tree->GetBranch("J5jesPileUpPtRefdn");
  if (J5jesPileUpPtRefdn_branch) J5jesPileUpPtRefdn_branch->SetAddress(&J5jesPileUpPtRefdn_);
  J6jesPileUpPtRefdn_branch = tree->GetBranch("J6jesPileUpPtRefdn");
  if (J6jesPileUpPtRefdn_branch) J6jesPileUpPtRefdn_branch->SetAddress(&J6jesPileUpPtRefdn_);
  J7jesPileUpPtRefdn_branch = tree->GetBranch("J7jesPileUpPtRefdn");
  if (J7jesPileUpPtRefdn_branch) J7jesPileUpPtRefdn_branch->SetAddress(&J7jesPileUpPtRefdn_);
  JsjesPileUpPtBBup_branch = tree->GetBranch("JsjesPileUpPtBBup");
  if (JsjesPileUpPtBBup_branch) JsjesPileUpPtBBup_branch->SetAddress(&JsjesPileUpPtBBup_);
  FJ0jesPileUpPtBBup_branch = tree->GetBranch("FJ0jesPileUpPtBBup");
  if (FJ0jesPileUpPtBBup_branch) FJ0jesPileUpPtBBup_branch->SetAddress(&FJ0jesPileUpPtBBup_);
  FJ1jesPileUpPtBBup_branch = tree->GetBranch("FJ1jesPileUpPtBBup");
  if (FJ1jesPileUpPtBBup_branch) FJ1jesPileUpPtBBup_branch->SetAddress(&FJ1jesPileUpPtBBup_);
  FJ2jesPileUpPtBBup_branch = tree->GetBranch("FJ2jesPileUpPtBBup");
  if (FJ2jesPileUpPtBBup_branch) FJ2jesPileUpPtBBup_branch->SetAddress(&FJ2jesPileUpPtBBup_);
  FJ3jesPileUpPtBBup_branch = tree->GetBranch("FJ3jesPileUpPtBBup");
  if (FJ3jesPileUpPtBBup_branch) FJ3jesPileUpPtBBup_branch->SetAddress(&FJ3jesPileUpPtBBup_);
  FJ4jesPileUpPtBBup_branch = tree->GetBranch("FJ4jesPileUpPtBBup");
  if (FJ4jesPileUpPtBBup_branch) FJ4jesPileUpPtBBup_branch->SetAddress(&FJ4jesPileUpPtBBup_);
  iFJ0jesPileUpPtBBup_branch = tree->GetBranch("iFJ0jesPileUpPtBBup");
  if (iFJ0jesPileUpPtBBup_branch) iFJ0jesPileUpPtBBup_branch->SetAddress(&iFJ0jesPileUpPtBBup_);
  iFJ1jesPileUpPtBBup_branch = tree->GetBranch("iFJ1jesPileUpPtBBup");
  if (iFJ1jesPileUpPtBBup_branch) iFJ1jesPileUpPtBBup_branch->SetAddress(&iFJ1jesPileUpPtBBup_);
  iFJ2jesPileUpPtBBup_branch = tree->GetBranch("iFJ2jesPileUpPtBBup");
  if (iFJ2jesPileUpPtBBup_branch) iFJ2jesPileUpPtBBup_branch->SetAddress(&iFJ2jesPileUpPtBBup_);
  iFJ3jesPileUpPtBBup_branch = tree->GetBranch("iFJ3jesPileUpPtBBup");
  if (iFJ3jesPileUpPtBBup_branch) iFJ3jesPileUpPtBBup_branch->SetAddress(&iFJ3jesPileUpPtBBup_);
  iFJ4jesPileUpPtBBup_branch = tree->GetBranch("iFJ4jesPileUpPtBBup");
  if (iFJ4jesPileUpPtBBup_branch) iFJ4jesPileUpPtBBup_branch->SetAddress(&iFJ4jesPileUpPtBBup_);
  METjesPileUpPtBBup_branch = tree->GetBranch("METjesPileUpPtBBup");
  if (METjesPileUpPtBBup_branch) METjesPileUpPtBBup_branch->SetAddress(&METjesPileUpPtBBup_);
  NujesPileUpPtBBup_branch = tree->GetBranch("NujesPileUpPtBBup");
  if (NujesPileUpPtBBup_branch) NujesPileUpPtBBup_branch->SetAddress(&NujesPileUpPtBBup_);
  J0jesPileUpPtBBup_branch = tree->GetBranch("J0jesPileUpPtBBup");
  if (J0jesPileUpPtBBup_branch) J0jesPileUpPtBBup_branch->SetAddress(&J0jesPileUpPtBBup_);
  J1jesPileUpPtBBup_branch = tree->GetBranch("J1jesPileUpPtBBup");
  if (J1jesPileUpPtBBup_branch) J1jesPileUpPtBBup_branch->SetAddress(&J1jesPileUpPtBBup_);
  J2jesPileUpPtBBup_branch = tree->GetBranch("J2jesPileUpPtBBup");
  if (J2jesPileUpPtBBup_branch) J2jesPileUpPtBBup_branch->SetAddress(&J2jesPileUpPtBBup_);
  J3jesPileUpPtBBup_branch = tree->GetBranch("J3jesPileUpPtBBup");
  if (J3jesPileUpPtBBup_branch) J3jesPileUpPtBBup_branch->SetAddress(&J3jesPileUpPtBBup_);
  J4jesPileUpPtBBup_branch = tree->GetBranch("J4jesPileUpPtBBup");
  if (J4jesPileUpPtBBup_branch) J4jesPileUpPtBBup_branch->SetAddress(&J4jesPileUpPtBBup_);
  J5jesPileUpPtBBup_branch = tree->GetBranch("J5jesPileUpPtBBup");
  if (J5jesPileUpPtBBup_branch) J5jesPileUpPtBBup_branch->SetAddress(&J5jesPileUpPtBBup_);
  J6jesPileUpPtBBup_branch = tree->GetBranch("J6jesPileUpPtBBup");
  if (J6jesPileUpPtBBup_branch) J6jesPileUpPtBBup_branch->SetAddress(&J6jesPileUpPtBBup_);
  J7jesPileUpPtBBup_branch = tree->GetBranch("J7jesPileUpPtBBup");
  if (J7jesPileUpPtBBup_branch) J7jesPileUpPtBBup_branch->SetAddress(&J7jesPileUpPtBBup_);
  JsjesPileUpPtBBdn_branch = tree->GetBranch("JsjesPileUpPtBBdn");
  if (JsjesPileUpPtBBdn_branch) JsjesPileUpPtBBdn_branch->SetAddress(&JsjesPileUpPtBBdn_);
  FJ0jesPileUpPtBBdn_branch = tree->GetBranch("FJ0jesPileUpPtBBdn");
  if (FJ0jesPileUpPtBBdn_branch) FJ0jesPileUpPtBBdn_branch->SetAddress(&FJ0jesPileUpPtBBdn_);
  FJ1jesPileUpPtBBdn_branch = tree->GetBranch("FJ1jesPileUpPtBBdn");
  if (FJ1jesPileUpPtBBdn_branch) FJ1jesPileUpPtBBdn_branch->SetAddress(&FJ1jesPileUpPtBBdn_);
  FJ2jesPileUpPtBBdn_branch = tree->GetBranch("FJ2jesPileUpPtBBdn");
  if (FJ2jesPileUpPtBBdn_branch) FJ2jesPileUpPtBBdn_branch->SetAddress(&FJ2jesPileUpPtBBdn_);
  FJ3jesPileUpPtBBdn_branch = tree->GetBranch("FJ3jesPileUpPtBBdn");
  if (FJ3jesPileUpPtBBdn_branch) FJ3jesPileUpPtBBdn_branch->SetAddress(&FJ3jesPileUpPtBBdn_);
  FJ4jesPileUpPtBBdn_branch = tree->GetBranch("FJ4jesPileUpPtBBdn");
  if (FJ4jesPileUpPtBBdn_branch) FJ4jesPileUpPtBBdn_branch->SetAddress(&FJ4jesPileUpPtBBdn_);
  iFJ0jesPileUpPtBBdn_branch = tree->GetBranch("iFJ0jesPileUpPtBBdn");
  if (iFJ0jesPileUpPtBBdn_branch) iFJ0jesPileUpPtBBdn_branch->SetAddress(&iFJ0jesPileUpPtBBdn_);
  iFJ1jesPileUpPtBBdn_branch = tree->GetBranch("iFJ1jesPileUpPtBBdn");
  if (iFJ1jesPileUpPtBBdn_branch) iFJ1jesPileUpPtBBdn_branch->SetAddress(&iFJ1jesPileUpPtBBdn_);
  iFJ2jesPileUpPtBBdn_branch = tree->GetBranch("iFJ2jesPileUpPtBBdn");
  if (iFJ2jesPileUpPtBBdn_branch) iFJ2jesPileUpPtBBdn_branch->SetAddress(&iFJ2jesPileUpPtBBdn_);
  iFJ3jesPileUpPtBBdn_branch = tree->GetBranch("iFJ3jesPileUpPtBBdn");
  if (iFJ3jesPileUpPtBBdn_branch) iFJ3jesPileUpPtBBdn_branch->SetAddress(&iFJ3jesPileUpPtBBdn_);
  iFJ4jesPileUpPtBBdn_branch = tree->GetBranch("iFJ4jesPileUpPtBBdn");
  if (iFJ4jesPileUpPtBBdn_branch) iFJ4jesPileUpPtBBdn_branch->SetAddress(&iFJ4jesPileUpPtBBdn_);
  METjesPileUpPtBBdn_branch = tree->GetBranch("METjesPileUpPtBBdn");
  if (METjesPileUpPtBBdn_branch) METjesPileUpPtBBdn_branch->SetAddress(&METjesPileUpPtBBdn_);
  NujesPileUpPtBBdn_branch = tree->GetBranch("NujesPileUpPtBBdn");
  if (NujesPileUpPtBBdn_branch) NujesPileUpPtBBdn_branch->SetAddress(&NujesPileUpPtBBdn_);
  J0jesPileUpPtBBdn_branch = tree->GetBranch("J0jesPileUpPtBBdn");
  if (J0jesPileUpPtBBdn_branch) J0jesPileUpPtBBdn_branch->SetAddress(&J0jesPileUpPtBBdn_);
  J1jesPileUpPtBBdn_branch = tree->GetBranch("J1jesPileUpPtBBdn");
  if (J1jesPileUpPtBBdn_branch) J1jesPileUpPtBBdn_branch->SetAddress(&J1jesPileUpPtBBdn_);
  J2jesPileUpPtBBdn_branch = tree->GetBranch("J2jesPileUpPtBBdn");
  if (J2jesPileUpPtBBdn_branch) J2jesPileUpPtBBdn_branch->SetAddress(&J2jesPileUpPtBBdn_);
  J3jesPileUpPtBBdn_branch = tree->GetBranch("J3jesPileUpPtBBdn");
  if (J3jesPileUpPtBBdn_branch) J3jesPileUpPtBBdn_branch->SetAddress(&J3jesPileUpPtBBdn_);
  J4jesPileUpPtBBdn_branch = tree->GetBranch("J4jesPileUpPtBBdn");
  if (J4jesPileUpPtBBdn_branch) J4jesPileUpPtBBdn_branch->SetAddress(&J4jesPileUpPtBBdn_);
  J5jesPileUpPtBBdn_branch = tree->GetBranch("J5jesPileUpPtBBdn");
  if (J5jesPileUpPtBBdn_branch) J5jesPileUpPtBBdn_branch->SetAddress(&J5jesPileUpPtBBdn_);
  J6jesPileUpPtBBdn_branch = tree->GetBranch("J6jesPileUpPtBBdn");
  if (J6jesPileUpPtBBdn_branch) J6jesPileUpPtBBdn_branch->SetAddress(&J6jesPileUpPtBBdn_);
  J7jesPileUpPtBBdn_branch = tree->GetBranch("J7jesPileUpPtBBdn");
  if (J7jesPileUpPtBBdn_branch) J7jesPileUpPtBBdn_branch->SetAddress(&J7jesPileUpPtBBdn_);
  JsjesPileUpPtEC1up_branch = tree->GetBranch("JsjesPileUpPtEC1up");
  if (JsjesPileUpPtEC1up_branch) JsjesPileUpPtEC1up_branch->SetAddress(&JsjesPileUpPtEC1up_);
  FJ0jesPileUpPtEC1up_branch = tree->GetBranch("FJ0jesPileUpPtEC1up");
  if (FJ0jesPileUpPtEC1up_branch) FJ0jesPileUpPtEC1up_branch->SetAddress(&FJ0jesPileUpPtEC1up_);
  FJ1jesPileUpPtEC1up_branch = tree->GetBranch("FJ1jesPileUpPtEC1up");
  if (FJ1jesPileUpPtEC1up_branch) FJ1jesPileUpPtEC1up_branch->SetAddress(&FJ1jesPileUpPtEC1up_);
  FJ2jesPileUpPtEC1up_branch = tree->GetBranch("FJ2jesPileUpPtEC1up");
  if (FJ2jesPileUpPtEC1up_branch) FJ2jesPileUpPtEC1up_branch->SetAddress(&FJ2jesPileUpPtEC1up_);
  FJ3jesPileUpPtEC1up_branch = tree->GetBranch("FJ3jesPileUpPtEC1up");
  if (FJ3jesPileUpPtEC1up_branch) FJ3jesPileUpPtEC1up_branch->SetAddress(&FJ3jesPileUpPtEC1up_);
  FJ4jesPileUpPtEC1up_branch = tree->GetBranch("FJ4jesPileUpPtEC1up");
  if (FJ4jesPileUpPtEC1up_branch) FJ4jesPileUpPtEC1up_branch->SetAddress(&FJ4jesPileUpPtEC1up_);
  iFJ0jesPileUpPtEC1up_branch = tree->GetBranch("iFJ0jesPileUpPtEC1up");
  if (iFJ0jesPileUpPtEC1up_branch) iFJ0jesPileUpPtEC1up_branch->SetAddress(&iFJ0jesPileUpPtEC1up_);
  iFJ1jesPileUpPtEC1up_branch = tree->GetBranch("iFJ1jesPileUpPtEC1up");
  if (iFJ1jesPileUpPtEC1up_branch) iFJ1jesPileUpPtEC1up_branch->SetAddress(&iFJ1jesPileUpPtEC1up_);
  iFJ2jesPileUpPtEC1up_branch = tree->GetBranch("iFJ2jesPileUpPtEC1up");
  if (iFJ2jesPileUpPtEC1up_branch) iFJ2jesPileUpPtEC1up_branch->SetAddress(&iFJ2jesPileUpPtEC1up_);
  iFJ3jesPileUpPtEC1up_branch = tree->GetBranch("iFJ3jesPileUpPtEC1up");
  if (iFJ3jesPileUpPtEC1up_branch) iFJ3jesPileUpPtEC1up_branch->SetAddress(&iFJ3jesPileUpPtEC1up_);
  iFJ4jesPileUpPtEC1up_branch = tree->GetBranch("iFJ4jesPileUpPtEC1up");
  if (iFJ4jesPileUpPtEC1up_branch) iFJ4jesPileUpPtEC1up_branch->SetAddress(&iFJ4jesPileUpPtEC1up_);
  METjesPileUpPtEC1up_branch = tree->GetBranch("METjesPileUpPtEC1up");
  if (METjesPileUpPtEC1up_branch) METjesPileUpPtEC1up_branch->SetAddress(&METjesPileUpPtEC1up_);
  NujesPileUpPtEC1up_branch = tree->GetBranch("NujesPileUpPtEC1up");
  if (NujesPileUpPtEC1up_branch) NujesPileUpPtEC1up_branch->SetAddress(&NujesPileUpPtEC1up_);
  J0jesPileUpPtEC1up_branch = tree->GetBranch("J0jesPileUpPtEC1up");
  if (J0jesPileUpPtEC1up_branch) J0jesPileUpPtEC1up_branch->SetAddress(&J0jesPileUpPtEC1up_);
  J1jesPileUpPtEC1up_branch = tree->GetBranch("J1jesPileUpPtEC1up");
  if (J1jesPileUpPtEC1up_branch) J1jesPileUpPtEC1up_branch->SetAddress(&J1jesPileUpPtEC1up_);
  J2jesPileUpPtEC1up_branch = tree->GetBranch("J2jesPileUpPtEC1up");
  if (J2jesPileUpPtEC1up_branch) J2jesPileUpPtEC1up_branch->SetAddress(&J2jesPileUpPtEC1up_);
  J3jesPileUpPtEC1up_branch = tree->GetBranch("J3jesPileUpPtEC1up");
  if (J3jesPileUpPtEC1up_branch) J3jesPileUpPtEC1up_branch->SetAddress(&J3jesPileUpPtEC1up_);
  J4jesPileUpPtEC1up_branch = tree->GetBranch("J4jesPileUpPtEC1up");
  if (J4jesPileUpPtEC1up_branch) J4jesPileUpPtEC1up_branch->SetAddress(&J4jesPileUpPtEC1up_);
  J5jesPileUpPtEC1up_branch = tree->GetBranch("J5jesPileUpPtEC1up");
  if (J5jesPileUpPtEC1up_branch) J5jesPileUpPtEC1up_branch->SetAddress(&J5jesPileUpPtEC1up_);
  J6jesPileUpPtEC1up_branch = tree->GetBranch("J6jesPileUpPtEC1up");
  if (J6jesPileUpPtEC1up_branch) J6jesPileUpPtEC1up_branch->SetAddress(&J6jesPileUpPtEC1up_);
  J7jesPileUpPtEC1up_branch = tree->GetBranch("J7jesPileUpPtEC1up");
  if (J7jesPileUpPtEC1up_branch) J7jesPileUpPtEC1up_branch->SetAddress(&J7jesPileUpPtEC1up_);
  JsjesPileUpPtEC1dn_branch = tree->GetBranch("JsjesPileUpPtEC1dn");
  if (JsjesPileUpPtEC1dn_branch) JsjesPileUpPtEC1dn_branch->SetAddress(&JsjesPileUpPtEC1dn_);
  FJ0jesPileUpPtEC1dn_branch = tree->GetBranch("FJ0jesPileUpPtEC1dn");
  if (FJ0jesPileUpPtEC1dn_branch) FJ0jesPileUpPtEC1dn_branch->SetAddress(&FJ0jesPileUpPtEC1dn_);
  FJ1jesPileUpPtEC1dn_branch = tree->GetBranch("FJ1jesPileUpPtEC1dn");
  if (FJ1jesPileUpPtEC1dn_branch) FJ1jesPileUpPtEC1dn_branch->SetAddress(&FJ1jesPileUpPtEC1dn_);
  FJ2jesPileUpPtEC1dn_branch = tree->GetBranch("FJ2jesPileUpPtEC1dn");
  if (FJ2jesPileUpPtEC1dn_branch) FJ2jesPileUpPtEC1dn_branch->SetAddress(&FJ2jesPileUpPtEC1dn_);
  FJ3jesPileUpPtEC1dn_branch = tree->GetBranch("FJ3jesPileUpPtEC1dn");
  if (FJ3jesPileUpPtEC1dn_branch) FJ3jesPileUpPtEC1dn_branch->SetAddress(&FJ3jesPileUpPtEC1dn_);
  FJ4jesPileUpPtEC1dn_branch = tree->GetBranch("FJ4jesPileUpPtEC1dn");
  if (FJ4jesPileUpPtEC1dn_branch) FJ4jesPileUpPtEC1dn_branch->SetAddress(&FJ4jesPileUpPtEC1dn_);
  iFJ0jesPileUpPtEC1dn_branch = tree->GetBranch("iFJ0jesPileUpPtEC1dn");
  if (iFJ0jesPileUpPtEC1dn_branch) iFJ0jesPileUpPtEC1dn_branch->SetAddress(&iFJ0jesPileUpPtEC1dn_);
  iFJ1jesPileUpPtEC1dn_branch = tree->GetBranch("iFJ1jesPileUpPtEC1dn");
  if (iFJ1jesPileUpPtEC1dn_branch) iFJ1jesPileUpPtEC1dn_branch->SetAddress(&iFJ1jesPileUpPtEC1dn_);
  iFJ2jesPileUpPtEC1dn_branch = tree->GetBranch("iFJ2jesPileUpPtEC1dn");
  if (iFJ2jesPileUpPtEC1dn_branch) iFJ2jesPileUpPtEC1dn_branch->SetAddress(&iFJ2jesPileUpPtEC1dn_);
  iFJ3jesPileUpPtEC1dn_branch = tree->GetBranch("iFJ3jesPileUpPtEC1dn");
  if (iFJ3jesPileUpPtEC1dn_branch) iFJ3jesPileUpPtEC1dn_branch->SetAddress(&iFJ3jesPileUpPtEC1dn_);
  iFJ4jesPileUpPtEC1dn_branch = tree->GetBranch("iFJ4jesPileUpPtEC1dn");
  if (iFJ4jesPileUpPtEC1dn_branch) iFJ4jesPileUpPtEC1dn_branch->SetAddress(&iFJ4jesPileUpPtEC1dn_);
  METjesPileUpPtEC1dn_branch = tree->GetBranch("METjesPileUpPtEC1dn");
  if (METjesPileUpPtEC1dn_branch) METjesPileUpPtEC1dn_branch->SetAddress(&METjesPileUpPtEC1dn_);
  NujesPileUpPtEC1dn_branch = tree->GetBranch("NujesPileUpPtEC1dn");
  if (NujesPileUpPtEC1dn_branch) NujesPileUpPtEC1dn_branch->SetAddress(&NujesPileUpPtEC1dn_);
  J0jesPileUpPtEC1dn_branch = tree->GetBranch("J0jesPileUpPtEC1dn");
  if (J0jesPileUpPtEC1dn_branch) J0jesPileUpPtEC1dn_branch->SetAddress(&J0jesPileUpPtEC1dn_);
  J1jesPileUpPtEC1dn_branch = tree->GetBranch("J1jesPileUpPtEC1dn");
  if (J1jesPileUpPtEC1dn_branch) J1jesPileUpPtEC1dn_branch->SetAddress(&J1jesPileUpPtEC1dn_);
  J2jesPileUpPtEC1dn_branch = tree->GetBranch("J2jesPileUpPtEC1dn");
  if (J2jesPileUpPtEC1dn_branch) J2jesPileUpPtEC1dn_branch->SetAddress(&J2jesPileUpPtEC1dn_);
  J3jesPileUpPtEC1dn_branch = tree->GetBranch("J3jesPileUpPtEC1dn");
  if (J3jesPileUpPtEC1dn_branch) J3jesPileUpPtEC1dn_branch->SetAddress(&J3jesPileUpPtEC1dn_);
  J4jesPileUpPtEC1dn_branch = tree->GetBranch("J4jesPileUpPtEC1dn");
  if (J4jesPileUpPtEC1dn_branch) J4jesPileUpPtEC1dn_branch->SetAddress(&J4jesPileUpPtEC1dn_);
  J5jesPileUpPtEC1dn_branch = tree->GetBranch("J5jesPileUpPtEC1dn");
  if (J5jesPileUpPtEC1dn_branch) J5jesPileUpPtEC1dn_branch->SetAddress(&J5jesPileUpPtEC1dn_);
  J6jesPileUpPtEC1dn_branch = tree->GetBranch("J6jesPileUpPtEC1dn");
  if (J6jesPileUpPtEC1dn_branch) J6jesPileUpPtEC1dn_branch->SetAddress(&J6jesPileUpPtEC1dn_);
  J7jesPileUpPtEC1dn_branch = tree->GetBranch("J7jesPileUpPtEC1dn");
  if (J7jesPileUpPtEC1dn_branch) J7jesPileUpPtEC1dn_branch->SetAddress(&J7jesPileUpPtEC1dn_);
  JsjesPileUpPtEC2up_branch = tree->GetBranch("JsjesPileUpPtEC2up");
  if (JsjesPileUpPtEC2up_branch) JsjesPileUpPtEC2up_branch->SetAddress(&JsjesPileUpPtEC2up_);
  FJ0jesPileUpPtEC2up_branch = tree->GetBranch("FJ0jesPileUpPtEC2up");
  if (FJ0jesPileUpPtEC2up_branch) FJ0jesPileUpPtEC2up_branch->SetAddress(&FJ0jesPileUpPtEC2up_);
  FJ1jesPileUpPtEC2up_branch = tree->GetBranch("FJ1jesPileUpPtEC2up");
  if (FJ1jesPileUpPtEC2up_branch) FJ1jesPileUpPtEC2up_branch->SetAddress(&FJ1jesPileUpPtEC2up_);
  FJ2jesPileUpPtEC2up_branch = tree->GetBranch("FJ2jesPileUpPtEC2up");
  if (FJ2jesPileUpPtEC2up_branch) FJ2jesPileUpPtEC2up_branch->SetAddress(&FJ2jesPileUpPtEC2up_);
  FJ3jesPileUpPtEC2up_branch = tree->GetBranch("FJ3jesPileUpPtEC2up");
  if (FJ3jesPileUpPtEC2up_branch) FJ3jesPileUpPtEC2up_branch->SetAddress(&FJ3jesPileUpPtEC2up_);
  FJ4jesPileUpPtEC2up_branch = tree->GetBranch("FJ4jesPileUpPtEC2up");
  if (FJ4jesPileUpPtEC2up_branch) FJ4jesPileUpPtEC2up_branch->SetAddress(&FJ4jesPileUpPtEC2up_);
  iFJ0jesPileUpPtEC2up_branch = tree->GetBranch("iFJ0jesPileUpPtEC2up");
  if (iFJ0jesPileUpPtEC2up_branch) iFJ0jesPileUpPtEC2up_branch->SetAddress(&iFJ0jesPileUpPtEC2up_);
  iFJ1jesPileUpPtEC2up_branch = tree->GetBranch("iFJ1jesPileUpPtEC2up");
  if (iFJ1jesPileUpPtEC2up_branch) iFJ1jesPileUpPtEC2up_branch->SetAddress(&iFJ1jesPileUpPtEC2up_);
  iFJ2jesPileUpPtEC2up_branch = tree->GetBranch("iFJ2jesPileUpPtEC2up");
  if (iFJ2jesPileUpPtEC2up_branch) iFJ2jesPileUpPtEC2up_branch->SetAddress(&iFJ2jesPileUpPtEC2up_);
  iFJ3jesPileUpPtEC2up_branch = tree->GetBranch("iFJ3jesPileUpPtEC2up");
  if (iFJ3jesPileUpPtEC2up_branch) iFJ3jesPileUpPtEC2up_branch->SetAddress(&iFJ3jesPileUpPtEC2up_);
  iFJ4jesPileUpPtEC2up_branch = tree->GetBranch("iFJ4jesPileUpPtEC2up");
  if (iFJ4jesPileUpPtEC2up_branch) iFJ4jesPileUpPtEC2up_branch->SetAddress(&iFJ4jesPileUpPtEC2up_);
  METjesPileUpPtEC2up_branch = tree->GetBranch("METjesPileUpPtEC2up");
  if (METjesPileUpPtEC2up_branch) METjesPileUpPtEC2up_branch->SetAddress(&METjesPileUpPtEC2up_);
  NujesPileUpPtEC2up_branch = tree->GetBranch("NujesPileUpPtEC2up");
  if (NujesPileUpPtEC2up_branch) NujesPileUpPtEC2up_branch->SetAddress(&NujesPileUpPtEC2up_);
  J0jesPileUpPtEC2up_branch = tree->GetBranch("J0jesPileUpPtEC2up");
  if (J0jesPileUpPtEC2up_branch) J0jesPileUpPtEC2up_branch->SetAddress(&J0jesPileUpPtEC2up_);
  J1jesPileUpPtEC2up_branch = tree->GetBranch("J1jesPileUpPtEC2up");
  if (J1jesPileUpPtEC2up_branch) J1jesPileUpPtEC2up_branch->SetAddress(&J1jesPileUpPtEC2up_);
  J2jesPileUpPtEC2up_branch = tree->GetBranch("J2jesPileUpPtEC2up");
  if (J2jesPileUpPtEC2up_branch) J2jesPileUpPtEC2up_branch->SetAddress(&J2jesPileUpPtEC2up_);
  J3jesPileUpPtEC2up_branch = tree->GetBranch("J3jesPileUpPtEC2up");
  if (J3jesPileUpPtEC2up_branch) J3jesPileUpPtEC2up_branch->SetAddress(&J3jesPileUpPtEC2up_);
  J4jesPileUpPtEC2up_branch = tree->GetBranch("J4jesPileUpPtEC2up");
  if (J4jesPileUpPtEC2up_branch) J4jesPileUpPtEC2up_branch->SetAddress(&J4jesPileUpPtEC2up_);
  J5jesPileUpPtEC2up_branch = tree->GetBranch("J5jesPileUpPtEC2up");
  if (J5jesPileUpPtEC2up_branch) J5jesPileUpPtEC2up_branch->SetAddress(&J5jesPileUpPtEC2up_);
  J6jesPileUpPtEC2up_branch = tree->GetBranch("J6jesPileUpPtEC2up");
  if (J6jesPileUpPtEC2up_branch) J6jesPileUpPtEC2up_branch->SetAddress(&J6jesPileUpPtEC2up_);
  J7jesPileUpPtEC2up_branch = tree->GetBranch("J7jesPileUpPtEC2up");
  if (J7jesPileUpPtEC2up_branch) J7jesPileUpPtEC2up_branch->SetAddress(&J7jesPileUpPtEC2up_);
  JsjesPileUpPtEC2dn_branch = tree->GetBranch("JsjesPileUpPtEC2dn");
  if (JsjesPileUpPtEC2dn_branch) JsjesPileUpPtEC2dn_branch->SetAddress(&JsjesPileUpPtEC2dn_);
  FJ0jesPileUpPtEC2dn_branch = tree->GetBranch("FJ0jesPileUpPtEC2dn");
  if (FJ0jesPileUpPtEC2dn_branch) FJ0jesPileUpPtEC2dn_branch->SetAddress(&FJ0jesPileUpPtEC2dn_);
  FJ1jesPileUpPtEC2dn_branch = tree->GetBranch("FJ1jesPileUpPtEC2dn");
  if (FJ1jesPileUpPtEC2dn_branch) FJ1jesPileUpPtEC2dn_branch->SetAddress(&FJ1jesPileUpPtEC2dn_);
  FJ2jesPileUpPtEC2dn_branch = tree->GetBranch("FJ2jesPileUpPtEC2dn");
  if (FJ2jesPileUpPtEC2dn_branch) FJ2jesPileUpPtEC2dn_branch->SetAddress(&FJ2jesPileUpPtEC2dn_);
  FJ3jesPileUpPtEC2dn_branch = tree->GetBranch("FJ3jesPileUpPtEC2dn");
  if (FJ3jesPileUpPtEC2dn_branch) FJ3jesPileUpPtEC2dn_branch->SetAddress(&FJ3jesPileUpPtEC2dn_);
  FJ4jesPileUpPtEC2dn_branch = tree->GetBranch("FJ4jesPileUpPtEC2dn");
  if (FJ4jesPileUpPtEC2dn_branch) FJ4jesPileUpPtEC2dn_branch->SetAddress(&FJ4jesPileUpPtEC2dn_);
  iFJ0jesPileUpPtEC2dn_branch = tree->GetBranch("iFJ0jesPileUpPtEC2dn");
  if (iFJ0jesPileUpPtEC2dn_branch) iFJ0jesPileUpPtEC2dn_branch->SetAddress(&iFJ0jesPileUpPtEC2dn_);
  iFJ1jesPileUpPtEC2dn_branch = tree->GetBranch("iFJ1jesPileUpPtEC2dn");
  if (iFJ1jesPileUpPtEC2dn_branch) iFJ1jesPileUpPtEC2dn_branch->SetAddress(&iFJ1jesPileUpPtEC2dn_);
  iFJ2jesPileUpPtEC2dn_branch = tree->GetBranch("iFJ2jesPileUpPtEC2dn");
  if (iFJ2jesPileUpPtEC2dn_branch) iFJ2jesPileUpPtEC2dn_branch->SetAddress(&iFJ2jesPileUpPtEC2dn_);
  iFJ3jesPileUpPtEC2dn_branch = tree->GetBranch("iFJ3jesPileUpPtEC2dn");
  if (iFJ3jesPileUpPtEC2dn_branch) iFJ3jesPileUpPtEC2dn_branch->SetAddress(&iFJ3jesPileUpPtEC2dn_);
  iFJ4jesPileUpPtEC2dn_branch = tree->GetBranch("iFJ4jesPileUpPtEC2dn");
  if (iFJ4jesPileUpPtEC2dn_branch) iFJ4jesPileUpPtEC2dn_branch->SetAddress(&iFJ4jesPileUpPtEC2dn_);
  METjesPileUpPtEC2dn_branch = tree->GetBranch("METjesPileUpPtEC2dn");
  if (METjesPileUpPtEC2dn_branch) METjesPileUpPtEC2dn_branch->SetAddress(&METjesPileUpPtEC2dn_);
  NujesPileUpPtEC2dn_branch = tree->GetBranch("NujesPileUpPtEC2dn");
  if (NujesPileUpPtEC2dn_branch) NujesPileUpPtEC2dn_branch->SetAddress(&NujesPileUpPtEC2dn_);
  J0jesPileUpPtEC2dn_branch = tree->GetBranch("J0jesPileUpPtEC2dn");
  if (J0jesPileUpPtEC2dn_branch) J0jesPileUpPtEC2dn_branch->SetAddress(&J0jesPileUpPtEC2dn_);
  J1jesPileUpPtEC2dn_branch = tree->GetBranch("J1jesPileUpPtEC2dn");
  if (J1jesPileUpPtEC2dn_branch) J1jesPileUpPtEC2dn_branch->SetAddress(&J1jesPileUpPtEC2dn_);
  J2jesPileUpPtEC2dn_branch = tree->GetBranch("J2jesPileUpPtEC2dn");
  if (J2jesPileUpPtEC2dn_branch) J2jesPileUpPtEC2dn_branch->SetAddress(&J2jesPileUpPtEC2dn_);
  J3jesPileUpPtEC2dn_branch = tree->GetBranch("J3jesPileUpPtEC2dn");
  if (J3jesPileUpPtEC2dn_branch) J3jesPileUpPtEC2dn_branch->SetAddress(&J3jesPileUpPtEC2dn_);
  J4jesPileUpPtEC2dn_branch = tree->GetBranch("J4jesPileUpPtEC2dn");
  if (J4jesPileUpPtEC2dn_branch) J4jesPileUpPtEC2dn_branch->SetAddress(&J4jesPileUpPtEC2dn_);
  J5jesPileUpPtEC2dn_branch = tree->GetBranch("J5jesPileUpPtEC2dn");
  if (J5jesPileUpPtEC2dn_branch) J5jesPileUpPtEC2dn_branch->SetAddress(&J5jesPileUpPtEC2dn_);
  J6jesPileUpPtEC2dn_branch = tree->GetBranch("J6jesPileUpPtEC2dn");
  if (J6jesPileUpPtEC2dn_branch) J6jesPileUpPtEC2dn_branch->SetAddress(&J6jesPileUpPtEC2dn_);
  J7jesPileUpPtEC2dn_branch = tree->GetBranch("J7jesPileUpPtEC2dn");
  if (J7jesPileUpPtEC2dn_branch) J7jesPileUpPtEC2dn_branch->SetAddress(&J7jesPileUpPtEC2dn_);
  JsjesPileUpPtHFup_branch = tree->GetBranch("JsjesPileUpPtHFup");
  if (JsjesPileUpPtHFup_branch) JsjesPileUpPtHFup_branch->SetAddress(&JsjesPileUpPtHFup_);
  FJ0jesPileUpPtHFup_branch = tree->GetBranch("FJ0jesPileUpPtHFup");
  if (FJ0jesPileUpPtHFup_branch) FJ0jesPileUpPtHFup_branch->SetAddress(&FJ0jesPileUpPtHFup_);
  FJ1jesPileUpPtHFup_branch = tree->GetBranch("FJ1jesPileUpPtHFup");
  if (FJ1jesPileUpPtHFup_branch) FJ1jesPileUpPtHFup_branch->SetAddress(&FJ1jesPileUpPtHFup_);
  FJ2jesPileUpPtHFup_branch = tree->GetBranch("FJ2jesPileUpPtHFup");
  if (FJ2jesPileUpPtHFup_branch) FJ2jesPileUpPtHFup_branch->SetAddress(&FJ2jesPileUpPtHFup_);
  FJ3jesPileUpPtHFup_branch = tree->GetBranch("FJ3jesPileUpPtHFup");
  if (FJ3jesPileUpPtHFup_branch) FJ3jesPileUpPtHFup_branch->SetAddress(&FJ3jesPileUpPtHFup_);
  FJ4jesPileUpPtHFup_branch = tree->GetBranch("FJ4jesPileUpPtHFup");
  if (FJ4jesPileUpPtHFup_branch) FJ4jesPileUpPtHFup_branch->SetAddress(&FJ4jesPileUpPtHFup_);
  iFJ0jesPileUpPtHFup_branch = tree->GetBranch("iFJ0jesPileUpPtHFup");
  if (iFJ0jesPileUpPtHFup_branch) iFJ0jesPileUpPtHFup_branch->SetAddress(&iFJ0jesPileUpPtHFup_);
  iFJ1jesPileUpPtHFup_branch = tree->GetBranch("iFJ1jesPileUpPtHFup");
  if (iFJ1jesPileUpPtHFup_branch) iFJ1jesPileUpPtHFup_branch->SetAddress(&iFJ1jesPileUpPtHFup_);
  iFJ2jesPileUpPtHFup_branch = tree->GetBranch("iFJ2jesPileUpPtHFup");
  if (iFJ2jesPileUpPtHFup_branch) iFJ2jesPileUpPtHFup_branch->SetAddress(&iFJ2jesPileUpPtHFup_);
  iFJ3jesPileUpPtHFup_branch = tree->GetBranch("iFJ3jesPileUpPtHFup");
  if (iFJ3jesPileUpPtHFup_branch) iFJ3jesPileUpPtHFup_branch->SetAddress(&iFJ3jesPileUpPtHFup_);
  iFJ4jesPileUpPtHFup_branch = tree->GetBranch("iFJ4jesPileUpPtHFup");
  if (iFJ4jesPileUpPtHFup_branch) iFJ4jesPileUpPtHFup_branch->SetAddress(&iFJ4jesPileUpPtHFup_);
  METjesPileUpPtHFup_branch = tree->GetBranch("METjesPileUpPtHFup");
  if (METjesPileUpPtHFup_branch) METjesPileUpPtHFup_branch->SetAddress(&METjesPileUpPtHFup_);
  NujesPileUpPtHFup_branch = tree->GetBranch("NujesPileUpPtHFup");
  if (NujesPileUpPtHFup_branch) NujesPileUpPtHFup_branch->SetAddress(&NujesPileUpPtHFup_);
  J0jesPileUpPtHFup_branch = tree->GetBranch("J0jesPileUpPtHFup");
  if (J0jesPileUpPtHFup_branch) J0jesPileUpPtHFup_branch->SetAddress(&J0jesPileUpPtHFup_);
  J1jesPileUpPtHFup_branch = tree->GetBranch("J1jesPileUpPtHFup");
  if (J1jesPileUpPtHFup_branch) J1jesPileUpPtHFup_branch->SetAddress(&J1jesPileUpPtHFup_);
  J2jesPileUpPtHFup_branch = tree->GetBranch("J2jesPileUpPtHFup");
  if (J2jesPileUpPtHFup_branch) J2jesPileUpPtHFup_branch->SetAddress(&J2jesPileUpPtHFup_);
  J3jesPileUpPtHFup_branch = tree->GetBranch("J3jesPileUpPtHFup");
  if (J3jesPileUpPtHFup_branch) J3jesPileUpPtHFup_branch->SetAddress(&J3jesPileUpPtHFup_);
  J4jesPileUpPtHFup_branch = tree->GetBranch("J4jesPileUpPtHFup");
  if (J4jesPileUpPtHFup_branch) J4jesPileUpPtHFup_branch->SetAddress(&J4jesPileUpPtHFup_);
  J5jesPileUpPtHFup_branch = tree->GetBranch("J5jesPileUpPtHFup");
  if (J5jesPileUpPtHFup_branch) J5jesPileUpPtHFup_branch->SetAddress(&J5jesPileUpPtHFup_);
  J6jesPileUpPtHFup_branch = tree->GetBranch("J6jesPileUpPtHFup");
  if (J6jesPileUpPtHFup_branch) J6jesPileUpPtHFup_branch->SetAddress(&J6jesPileUpPtHFup_);
  J7jesPileUpPtHFup_branch = tree->GetBranch("J7jesPileUpPtHFup");
  if (J7jesPileUpPtHFup_branch) J7jesPileUpPtHFup_branch->SetAddress(&J7jesPileUpPtHFup_);
  JsjesPileUpPtHFdn_branch = tree->GetBranch("JsjesPileUpPtHFdn");
  if (JsjesPileUpPtHFdn_branch) JsjesPileUpPtHFdn_branch->SetAddress(&JsjesPileUpPtHFdn_);
  FJ0jesPileUpPtHFdn_branch = tree->GetBranch("FJ0jesPileUpPtHFdn");
  if (FJ0jesPileUpPtHFdn_branch) FJ0jesPileUpPtHFdn_branch->SetAddress(&FJ0jesPileUpPtHFdn_);
  FJ1jesPileUpPtHFdn_branch = tree->GetBranch("FJ1jesPileUpPtHFdn");
  if (FJ1jesPileUpPtHFdn_branch) FJ1jesPileUpPtHFdn_branch->SetAddress(&FJ1jesPileUpPtHFdn_);
  FJ2jesPileUpPtHFdn_branch = tree->GetBranch("FJ2jesPileUpPtHFdn");
  if (FJ2jesPileUpPtHFdn_branch) FJ2jesPileUpPtHFdn_branch->SetAddress(&FJ2jesPileUpPtHFdn_);
  FJ3jesPileUpPtHFdn_branch = tree->GetBranch("FJ3jesPileUpPtHFdn");
  if (FJ3jesPileUpPtHFdn_branch) FJ3jesPileUpPtHFdn_branch->SetAddress(&FJ3jesPileUpPtHFdn_);
  FJ4jesPileUpPtHFdn_branch = tree->GetBranch("FJ4jesPileUpPtHFdn");
  if (FJ4jesPileUpPtHFdn_branch) FJ4jesPileUpPtHFdn_branch->SetAddress(&FJ4jesPileUpPtHFdn_);
  iFJ0jesPileUpPtHFdn_branch = tree->GetBranch("iFJ0jesPileUpPtHFdn");
  if (iFJ0jesPileUpPtHFdn_branch) iFJ0jesPileUpPtHFdn_branch->SetAddress(&iFJ0jesPileUpPtHFdn_);
  iFJ1jesPileUpPtHFdn_branch = tree->GetBranch("iFJ1jesPileUpPtHFdn");
  if (iFJ1jesPileUpPtHFdn_branch) iFJ1jesPileUpPtHFdn_branch->SetAddress(&iFJ1jesPileUpPtHFdn_);
  iFJ2jesPileUpPtHFdn_branch = tree->GetBranch("iFJ2jesPileUpPtHFdn");
  if (iFJ2jesPileUpPtHFdn_branch) iFJ2jesPileUpPtHFdn_branch->SetAddress(&iFJ2jesPileUpPtHFdn_);
  iFJ3jesPileUpPtHFdn_branch = tree->GetBranch("iFJ3jesPileUpPtHFdn");
  if (iFJ3jesPileUpPtHFdn_branch) iFJ3jesPileUpPtHFdn_branch->SetAddress(&iFJ3jesPileUpPtHFdn_);
  iFJ4jesPileUpPtHFdn_branch = tree->GetBranch("iFJ4jesPileUpPtHFdn");
  if (iFJ4jesPileUpPtHFdn_branch) iFJ4jesPileUpPtHFdn_branch->SetAddress(&iFJ4jesPileUpPtHFdn_);
  METjesPileUpPtHFdn_branch = tree->GetBranch("METjesPileUpPtHFdn");
  if (METjesPileUpPtHFdn_branch) METjesPileUpPtHFdn_branch->SetAddress(&METjesPileUpPtHFdn_);
  NujesPileUpPtHFdn_branch = tree->GetBranch("NujesPileUpPtHFdn");
  if (NujesPileUpPtHFdn_branch) NujesPileUpPtHFdn_branch->SetAddress(&NujesPileUpPtHFdn_);
  J0jesPileUpPtHFdn_branch = tree->GetBranch("J0jesPileUpPtHFdn");
  if (J0jesPileUpPtHFdn_branch) J0jesPileUpPtHFdn_branch->SetAddress(&J0jesPileUpPtHFdn_);
  J1jesPileUpPtHFdn_branch = tree->GetBranch("J1jesPileUpPtHFdn");
  if (J1jesPileUpPtHFdn_branch) J1jesPileUpPtHFdn_branch->SetAddress(&J1jesPileUpPtHFdn_);
  J2jesPileUpPtHFdn_branch = tree->GetBranch("J2jesPileUpPtHFdn");
  if (J2jesPileUpPtHFdn_branch) J2jesPileUpPtHFdn_branch->SetAddress(&J2jesPileUpPtHFdn_);
  J3jesPileUpPtHFdn_branch = tree->GetBranch("J3jesPileUpPtHFdn");
  if (J3jesPileUpPtHFdn_branch) J3jesPileUpPtHFdn_branch->SetAddress(&J3jesPileUpPtHFdn_);
  J4jesPileUpPtHFdn_branch = tree->GetBranch("J4jesPileUpPtHFdn");
  if (J4jesPileUpPtHFdn_branch) J4jesPileUpPtHFdn_branch->SetAddress(&J4jesPileUpPtHFdn_);
  J5jesPileUpPtHFdn_branch = tree->GetBranch("J5jesPileUpPtHFdn");
  if (J5jesPileUpPtHFdn_branch) J5jesPileUpPtHFdn_branch->SetAddress(&J5jesPileUpPtHFdn_);
  J6jesPileUpPtHFdn_branch = tree->GetBranch("J6jesPileUpPtHFdn");
  if (J6jesPileUpPtHFdn_branch) J6jesPileUpPtHFdn_branch->SetAddress(&J6jesPileUpPtHFdn_);
  J7jesPileUpPtHFdn_branch = tree->GetBranch("J7jesPileUpPtHFdn");
  if (J7jesPileUpPtHFdn_branch) J7jesPileUpPtHFdn_branch->SetAddress(&J7jesPileUpPtHFdn_);
  GenV0_branch = tree->GetBranch("GenV0");
  if (GenV0_branch) GenV0_branch->SetAddress(&GenV0_);
  GenV1_branch = tree->GetBranch("GenV1");
  if (GenV1_branch) GenV1_branch->SetAddress(&GenV1_);
  GenV2_branch = tree->GetBranch("GenV2");
  if (GenV2_branch) GenV2_branch->SetAddress(&GenV2_);
  GenF00_branch = tree->GetBranch("GenF00");
  if (GenF00_branch) GenF00_branch->SetAddress(&GenF00_);
  GenF01_branch = tree->GetBranch("GenF01");
  if (GenF01_branch) GenF01_branch->SetAddress(&GenF01_);
  GenF10_branch = tree->GetBranch("GenF10");
  if (GenF10_branch) GenF10_branch->SetAddress(&GenF10_);
  GenF11_branch = tree->GetBranch("GenF11");
  if (GenF11_branch) GenF11_branch->SetAddress(&GenF11_);
  GenF20_branch = tree->GetBranch("GenF20");
  if (GenF20_branch) GenF20_branch->SetAddress(&GenF20_);
  GenF21_branch = tree->GetBranch("GenF21");
  if (GenF21_branch) GenF21_branch->SetAddress(&GenF21_);

  tree->SetMakeClass(1);

  isData_branch = tree->GetBranch("isData");
  if (isData_branch) isData_branch->SetAddress(&isData_);
  run_branch = tree->GetBranch("run");
  if (run_branch) run_branch->SetAddress(&run_);
  lumi_branch = tree->GetBranch("lumi");
  if (lumi_branch) lumi_branch->SetAddress(&lumi_);
  evt_branch = tree->GetBranch("evt");
  if (evt_branch) evt_branch->SetAddress(&evt_);
  year_branch = tree->GetBranch("year");
  if (year_branch) year_branch->SetAddress(&year_);
  genWeight_branch = tree->GetBranch("genWeight");
  if (genWeight_branch) genWeight_branch->SetAddress(&genWeight_);
  wgt_branch = tree->GetBranch("wgt");
  if (wgt_branch) wgt_branch->SetAddress(&wgt_);
  LHEReweightingWeight_branch = tree->GetBranch("LHEReweightingWeight");
  if (LHEReweightingWeight_branch) LHEReweightingWeight_branch->SetAddress(&LHEReweightingWeight_);
  prefireWgt_branch = tree->GetBranch("prefireWgt");
  if (prefireWgt_branch) prefireWgt_branch->SetAddress(&prefireWgt_);
  prefireWgtUp_branch = tree->GetBranch("prefireWgtUp");
  if (prefireWgtUp_branch) prefireWgtUp_branch->SetAddress(&prefireWgtUp_);
  prefireWgtDn_branch = tree->GetBranch("prefireWgtDn");
  if (prefireWgtDn_branch) prefireWgtDn_branch->SetAddress(&prefireWgtDn_);
  puWgt_branch = tree->GetBranch("puWgt");
  if (puWgt_branch) puWgt_branch->SetAddress(&puWgt_);
  puWgtUp_branch = tree->GetBranch("puWgtUp");
  if (puWgtUp_branch) puWgtUp_branch->SetAddress(&puWgtUp_);
  puWgtDn_branch = tree->GetBranch("puWgtDn");
  if (puWgtDn_branch) puWgtDn_branch->SetAddress(&puWgtDn_);
  pu_nPU_branch = tree->GetBranch("pu_nPU");
  if (pu_nPU_branch) pu_nPU_branch->SetAddress(&pu_nPU_);
  pu_nTrueInt_branch = tree->GetBranch("pu_nTrueInt");
  if (pu_nTrueInt_branch) pu_nTrueInt_branch->SetAddress(&pu_nTrueInt_);
  trigWgt_branch = tree->GetBranch("trigWgt");
  if (trigWgt_branch) trigWgt_branch->SetAddress(&trigWgt_);
  trigWgtUp_branch = tree->GetBranch("trigWgtUp");
  if (trigWgtUp_branch) trigWgtUp_branch->SetAddress(&trigWgtUp_);
  trigWgtDn_branch = tree->GetBranch("trigWgtDn");
  if (trigWgtDn_branch) trigWgtDn_branch->SetAddress(&trigWgtDn_);
  PDF_branch = tree->GetBranch("PDF");
  if (PDF_branch) PDF_branch->SetAddress(&PDF_);
  QCDScale_branch = tree->GetBranch("QCDScale");
  if (QCDScale_branch) QCDScale_branch->SetAddress(&QCDScale_);
  trigger_branch = tree->GetBranch("trigger");
  if (trigger_branch) trigger_branch->SetAddress(&trigger_);
  is0Lep_branch = tree->GetBranch("is0Lep");
  if (is0Lep_branch) is0Lep_branch->SetAddress(&is0Lep_);
  is1Lep_branch = tree->GetBranch("is1Lep");
  if (is1Lep_branch) is1Lep_branch->SetAddress(&is1Lep_);
  LepFlav_branch = tree->GetBranch("LepFlav");
  if (LepFlav_branch) LepFlav_branch->SetAddress(&LepFlav_);
  NFJ_branch = tree->GetBranch("NFJ");
  if (NFJ_branch) NFJ_branch->SetAddress(&NFJ_);
  VMD0_branch = tree->GetBranch("VMD0");
  if (VMD0_branch) VMD0_branch->SetAddress(&VMD0_);
  VMD1_branch = tree->GetBranch("VMD1");
  if (VMD1_branch) VMD1_branch->SetAddress(&VMD1_);
  VMD2_branch = tree->GetBranch("VMD2");
  if (VMD2_branch) VMD2_branch->SetAddress(&VMD2_);
  VMD3_branch = tree->GetBranch("VMD3");
  if (VMD3_branch) VMD3_branch->SetAddress(&VMD3_);
  VMD4_branch = tree->GetBranch("VMD4");
  if (VMD4_branch) VMD4_branch->SetAddress(&VMD4_);
  WMD0_branch = tree->GetBranch("WMD0");
  if (WMD0_branch) WMD0_branch->SetAddress(&WMD0_);
  WMD1_branch = tree->GetBranch("WMD1");
  if (WMD1_branch) WMD1_branch->SetAddress(&WMD1_);
  WMD2_branch = tree->GetBranch("WMD2");
  if (WMD2_branch) WMD2_branch->SetAddress(&WMD2_);
  WMD3_branch = tree->GetBranch("WMD3");
  if (WMD3_branch) WMD3_branch->SetAddress(&WMD3_);
  WMD4_branch = tree->GetBranch("WMD4");
  if (WMD4_branch) WMD4_branch->SetAddress(&WMD4_);
  NQGen0_branch = tree->GetBranch("NQGen0");
  if (NQGen0_branch) NQGen0_branch->SetAddress(&NQGen0_);
  NQGen1_branch = tree->GetBranch("NQGen1");
  if (NQGen1_branch) NQGen1_branch->SetAddress(&NQGen1_);
  NQGen2_branch = tree->GetBranch("NQGen2");
  if (NQGen2_branch) NQGen2_branch->SetAddress(&NQGen2_);
  NQGen3_branch = tree->GetBranch("NQGen3");
  if (NQGen3_branch) NQGen3_branch->SetAddress(&NQGen3_);
  NQGen4_branch = tree->GetBranch("NQGen4");
  if (NQGen4_branch) NQGen4_branch->SetAddress(&NQGen4_);
  NBGen0_branch = tree->GetBranch("NBGen0");
  if (NBGen0_branch) NBGen0_branch->SetAddress(&NBGen0_);
  NBGen1_branch = tree->GetBranch("NBGen1");
  if (NBGen1_branch) NBGen1_branch->SetAddress(&NBGen1_);
  NBGen2_branch = tree->GetBranch("NBGen2");
  if (NBGen2_branch) NBGen2_branch->SetAddress(&NBGen2_);
  NBGen3_branch = tree->GetBranch("NBGen3");
  if (NBGen3_branch) NBGen3_branch->SetAddress(&NBGen3_);
  NBGen4_branch = tree->GetBranch("NBGen4");
  if (NBGen4_branch) NBGen4_branch->SetAddress(&NBGen4_);
  NLGen0_branch = tree->GetBranch("NLGen0");
  if (NLGen0_branch) NLGen0_branch->SetAddress(&NLGen0_);
  NLGen1_branch = tree->GetBranch("NLGen1");
  if (NLGen1_branch) NLGen1_branch->SetAddress(&NLGen1_);
  NLGen2_branch = tree->GetBranch("NLGen2");
  if (NLGen2_branch) NLGen2_branch->SetAddress(&NLGen2_);
  NLGen3_branch = tree->GetBranch("NLGen3");
  if (NLGen3_branch) NLGen3_branch->SetAddress(&NLGen3_);
  NLGen4_branch = tree->GetBranch("NLGen4");
  if (NLGen4_branch) NLGen4_branch->SetAddress(&NLGen4_);
  NVQGen0_branch = tree->GetBranch("NVQGen0");
  if (NVQGen0_branch) NVQGen0_branch->SetAddress(&NVQGen0_);
  NVQGen1_branch = tree->GetBranch("NVQGen1");
  if (NVQGen1_branch) NVQGen1_branch->SetAddress(&NVQGen1_);
  NVQGen2_branch = tree->GetBranch("NVQGen2");
  if (NVQGen2_branch) NVQGen2_branch->SetAddress(&NVQGen2_);
  NVQGen3_branch = tree->GetBranch("NVQGen3");
  if (NVQGen3_branch) NVQGen3_branch->SetAddress(&NVQGen3_);
  NVQGen4_branch = tree->GetBranch("NVQGen4");
  if (NVQGen4_branch) NVQGen4_branch->SetAddress(&NVQGen4_);
  NiFJ_branch = tree->GetBranch("NiFJ");
  if (NiFJ_branch) NiFJ_branch->SetAddress(&NiFJ_);
  iVMD0_branch = tree->GetBranch("iVMD0");
  if (iVMD0_branch) iVMD0_branch->SetAddress(&iVMD0_);
  iVMD1_branch = tree->GetBranch("iVMD1");
  if (iVMD1_branch) iVMD1_branch->SetAddress(&iVMD1_);
  iVMD2_branch = tree->GetBranch("iVMD2");
  if (iVMD2_branch) iVMD2_branch->SetAddress(&iVMD2_);
  iVMD3_branch = tree->GetBranch("iVMD3");
  if (iVMD3_branch) iVMD3_branch->SetAddress(&iVMD3_);
  iVMD4_branch = tree->GetBranch("iVMD4");
  if (iVMD4_branch) iVMD4_branch->SetAddress(&iVMD4_);
  iWMD0_branch = tree->GetBranch("iWMD0");
  if (iWMD0_branch) iWMD0_branch->SetAddress(&iWMD0_);
  iWMD1_branch = tree->GetBranch("iWMD1");
  if (iWMD1_branch) iWMD1_branch->SetAddress(&iWMD1_);
  iWMD2_branch = tree->GetBranch("iWMD2");
  if (iWMD2_branch) iWMD2_branch->SetAddress(&iWMD2_);
  iWMD3_branch = tree->GetBranch("iWMD3");
  if (iWMD3_branch) iWMD3_branch->SetAddress(&iWMD3_);
  iWMD4_branch = tree->GetBranch("iWMD4");
  if (iWMD4_branch) iWMD4_branch->SetAddress(&iWMD4_);
  NJ_branch = tree->GetBranch("NJ");
  if (NJ_branch) NJ_branch->SetAddress(&NJ_);
  NbLoose_branch = tree->GetBranch("NbLoose");
  if (NbLoose_branch) NbLoose_branch->SetAddress(&NbLoose_);
  NbMedium_branch = tree->GetBranch("NbMedium");
  if (NbMedium_branch) NbMedium_branch->SetAddress(&NbMedium_);
  NbTight_branch = tree->GetBranch("NbTight");
  if (NbTight_branch) NbTight_branch->SetAddress(&NbTight_);
  NoORNbLoose_branch = tree->GetBranch("NoORNbLoose");
  if (NoORNbLoose_branch) NoORNbLoose_branch->SetAddress(&NoORNbLoose_);
  NoORNbMedium_branch = tree->GetBranch("NoORNbMedium");
  if (NoORNbMedium_branch) NoORNbMedium_branch->SetAddress(&NoORNbMedium_);
  NoORNbTight_branch = tree->GetBranch("NoORNbTight");
  if (NoORNbTight_branch) NoORNbTight_branch->SetAddress(&NoORNbTight_);
  NQJGen_branch = tree->GetBranch("NQJGen");
  if (NQJGen_branch) NQJGen_branch->SetAddress(&NQJGen_);
  NBJGen_branch = tree->GetBranch("NBJGen");
  if (NBJGen_branch) NBJGen_branch->SetAddress(&NBJGen_);
  NLJGen_branch = tree->GetBranch("NLJGen");
  if (NLJGen_branch) NLJGen_branch->SetAddress(&NLJGen_);
  MVVX_branch = tree->GetBranch("MVVX");
  if (MVVX_branch) MVVX_branch->SetAddress(&MVVX_);
  PtVVX_branch = tree->GetBranch("PtVVX");
  if (PtVVX_branch) PtVVX_branch->SetAddress(&PtVVX_);
  HT_branch = tree->GetBranch("HT");
  if (HT_branch) HT_branch->SetAddress(&HT_);
  HTJ_branch = tree->GetBranch("HTJ");
  if (HTJ_branch) HTJ_branch->SetAddress(&HTJ_);
  HTFJ_branch = tree->GetBranch("HTFJ");
  if (HTFJ_branch) HTFJ_branch->SetAddress(&HTFJ_);
  SumPtFJ_branch = tree->GetBranch("SumPtFJ");
  if (SumPtFJ_branch) SumPtFJ_branch->SetAddress(&SumPtFJ_);
  SumPtJ_branch = tree->GetBranch("SumPtJ");
  if (SumPtJ_branch) SumPtJ_branch->SetAddress(&SumPtJ_);
  NFJJESUp_branch = tree->GetBranch("NFJJESUp");
  if (NFJJESUp_branch) NFJJESUp_branch->SetAddress(&NFJJESUp_);
  VMD0JESUp_branch = tree->GetBranch("VMD0JESUp");
  if (VMD0JESUp_branch) VMD0JESUp_branch->SetAddress(&VMD0JESUp_);
  VMD1JESUp_branch = tree->GetBranch("VMD1JESUp");
  if (VMD1JESUp_branch) VMD1JESUp_branch->SetAddress(&VMD1JESUp_);
  VMD2JESUp_branch = tree->GetBranch("VMD2JESUp");
  if (VMD2JESUp_branch) VMD2JESUp_branch->SetAddress(&VMD2JESUp_);
  VMD3JESUp_branch = tree->GetBranch("VMD3JESUp");
  if (VMD3JESUp_branch) VMD3JESUp_branch->SetAddress(&VMD3JESUp_);
  VMD4JESUp_branch = tree->GetBranch("VMD4JESUp");
  if (VMD4JESUp_branch) VMD4JESUp_branch->SetAddress(&VMD4JESUp_);
  WMD0JESUp_branch = tree->GetBranch("WMD0JESUp");
  if (WMD0JESUp_branch) WMD0JESUp_branch->SetAddress(&WMD0JESUp_);
  WMD1JESUp_branch = tree->GetBranch("WMD1JESUp");
  if (WMD1JESUp_branch) WMD1JESUp_branch->SetAddress(&WMD1JESUp_);
  WMD2JESUp_branch = tree->GetBranch("WMD2JESUp");
  if (WMD2JESUp_branch) WMD2JESUp_branch->SetAddress(&WMD2JESUp_);
  WMD3JESUp_branch = tree->GetBranch("WMD3JESUp");
  if (WMD3JESUp_branch) WMD3JESUp_branch->SetAddress(&WMD3JESUp_);
  WMD4JESUp_branch = tree->GetBranch("WMD4JESUp");
  if (WMD4JESUp_branch) WMD4JESUp_branch->SetAddress(&WMD4JESUp_);
  NQGen0JESUp_branch = tree->GetBranch("NQGen0JESUp");
  if (NQGen0JESUp_branch) NQGen0JESUp_branch->SetAddress(&NQGen0JESUp_);
  NQGen1JESUp_branch = tree->GetBranch("NQGen1JESUp");
  if (NQGen1JESUp_branch) NQGen1JESUp_branch->SetAddress(&NQGen1JESUp_);
  NQGen2JESUp_branch = tree->GetBranch("NQGen2JESUp");
  if (NQGen2JESUp_branch) NQGen2JESUp_branch->SetAddress(&NQGen2JESUp_);
  NQGen3JESUp_branch = tree->GetBranch("NQGen3JESUp");
  if (NQGen3JESUp_branch) NQGen3JESUp_branch->SetAddress(&NQGen3JESUp_);
  NQGen4JESUp_branch = tree->GetBranch("NQGen4JESUp");
  if (NQGen4JESUp_branch) NQGen4JESUp_branch->SetAddress(&NQGen4JESUp_);
  NBGen0JESUp_branch = tree->GetBranch("NBGen0JESUp");
  if (NBGen0JESUp_branch) NBGen0JESUp_branch->SetAddress(&NBGen0JESUp_);
  NBGen1JESUp_branch = tree->GetBranch("NBGen1JESUp");
  if (NBGen1JESUp_branch) NBGen1JESUp_branch->SetAddress(&NBGen1JESUp_);
  NBGen2JESUp_branch = tree->GetBranch("NBGen2JESUp");
  if (NBGen2JESUp_branch) NBGen2JESUp_branch->SetAddress(&NBGen2JESUp_);
  NBGen3JESUp_branch = tree->GetBranch("NBGen3JESUp");
  if (NBGen3JESUp_branch) NBGen3JESUp_branch->SetAddress(&NBGen3JESUp_);
  NBGen4JESUp_branch = tree->GetBranch("NBGen4JESUp");
  if (NBGen4JESUp_branch) NBGen4JESUp_branch->SetAddress(&NBGen4JESUp_);
  NLGen0JESUp_branch = tree->GetBranch("NLGen0JESUp");
  if (NLGen0JESUp_branch) NLGen0JESUp_branch->SetAddress(&NLGen0JESUp_);
  NLGen1JESUp_branch = tree->GetBranch("NLGen1JESUp");
  if (NLGen1JESUp_branch) NLGen1JESUp_branch->SetAddress(&NLGen1JESUp_);
  NLGen2JESUp_branch = tree->GetBranch("NLGen2JESUp");
  if (NLGen2JESUp_branch) NLGen2JESUp_branch->SetAddress(&NLGen2JESUp_);
  NLGen3JESUp_branch = tree->GetBranch("NLGen3JESUp");
  if (NLGen3JESUp_branch) NLGen3JESUp_branch->SetAddress(&NLGen3JESUp_);
  NLGen4JESUp_branch = tree->GetBranch("NLGen4JESUp");
  if (NLGen4JESUp_branch) NLGen4JESUp_branch->SetAddress(&NLGen4JESUp_);
  NVQGen0JESUp_branch = tree->GetBranch("NVQGen0JESUp");
  if (NVQGen0JESUp_branch) NVQGen0JESUp_branch->SetAddress(&NVQGen0JESUp_);
  NVQGen1JESUp_branch = tree->GetBranch("NVQGen1JESUp");
  if (NVQGen1JESUp_branch) NVQGen1JESUp_branch->SetAddress(&NVQGen1JESUp_);
  NVQGen2JESUp_branch = tree->GetBranch("NVQGen2JESUp");
  if (NVQGen2JESUp_branch) NVQGen2JESUp_branch->SetAddress(&NVQGen2JESUp_);
  NVQGen3JESUp_branch = tree->GetBranch("NVQGen3JESUp");
  if (NVQGen3JESUp_branch) NVQGen3JESUp_branch->SetAddress(&NVQGen3JESUp_);
  NVQGen4JESUp_branch = tree->GetBranch("NVQGen4JESUp");
  if (NVQGen4JESUp_branch) NVQGen4JESUp_branch->SetAddress(&NVQGen4JESUp_);
  NiFJJESUp_branch = tree->GetBranch("NiFJJESUp");
  if (NiFJJESUp_branch) NiFJJESUp_branch->SetAddress(&NiFJJESUp_);
  iVMD0JESUp_branch = tree->GetBranch("iVMD0JESUp");
  if (iVMD0JESUp_branch) iVMD0JESUp_branch->SetAddress(&iVMD0JESUp_);
  iVMD1JESUp_branch = tree->GetBranch("iVMD1JESUp");
  if (iVMD1JESUp_branch) iVMD1JESUp_branch->SetAddress(&iVMD1JESUp_);
  iVMD2JESUp_branch = tree->GetBranch("iVMD2JESUp");
  if (iVMD2JESUp_branch) iVMD2JESUp_branch->SetAddress(&iVMD2JESUp_);
  iVMD3JESUp_branch = tree->GetBranch("iVMD3JESUp");
  if (iVMD3JESUp_branch) iVMD3JESUp_branch->SetAddress(&iVMD3JESUp_);
  iVMD4JESUp_branch = tree->GetBranch("iVMD4JESUp");
  if (iVMD4JESUp_branch) iVMD4JESUp_branch->SetAddress(&iVMD4JESUp_);
  iWMD0JESUp_branch = tree->GetBranch("iWMD0JESUp");
  if (iWMD0JESUp_branch) iWMD0JESUp_branch->SetAddress(&iWMD0JESUp_);
  iWMD1JESUp_branch = tree->GetBranch("iWMD1JESUp");
  if (iWMD1JESUp_branch) iWMD1JESUp_branch->SetAddress(&iWMD1JESUp_);
  iWMD2JESUp_branch = tree->GetBranch("iWMD2JESUp");
  if (iWMD2JESUp_branch) iWMD2JESUp_branch->SetAddress(&iWMD2JESUp_);
  iWMD3JESUp_branch = tree->GetBranch("iWMD3JESUp");
  if (iWMD3JESUp_branch) iWMD3JESUp_branch->SetAddress(&iWMD3JESUp_);
  iWMD4JESUp_branch = tree->GetBranch("iWMD4JESUp");
  if (iWMD4JESUp_branch) iWMD4JESUp_branch->SetAddress(&iWMD4JESUp_);
  NJJESUp_branch = tree->GetBranch("NJJESUp");
  if (NJJESUp_branch) NJJESUp_branch->SetAddress(&NJJESUp_);
  NbLooseJESUp_branch = tree->GetBranch("NbLooseJESUp");
  if (NbLooseJESUp_branch) NbLooseJESUp_branch->SetAddress(&NbLooseJESUp_);
  NbMediumJESUp_branch = tree->GetBranch("NbMediumJESUp");
  if (NbMediumJESUp_branch) NbMediumJESUp_branch->SetAddress(&NbMediumJESUp_);
  NbTightJESUp_branch = tree->GetBranch("NbTightJESUp");
  if (NbTightJESUp_branch) NbTightJESUp_branch->SetAddress(&NbTightJESUp_);
  NoORNbLooseJESUp_branch = tree->GetBranch("NoORNbLooseJESUp");
  if (NoORNbLooseJESUp_branch) NoORNbLooseJESUp_branch->SetAddress(&NoORNbLooseJESUp_);
  NoORNbMediumJESUp_branch = tree->GetBranch("NoORNbMediumJESUp");
  if (NoORNbMediumJESUp_branch) NoORNbMediumJESUp_branch->SetAddress(&NoORNbMediumJESUp_);
  NoORNbTightJESUp_branch = tree->GetBranch("NoORNbTightJESUp");
  if (NoORNbTightJESUp_branch) NoORNbTightJESUp_branch->SetAddress(&NoORNbTightJESUp_);
  NQJGenJESUp_branch = tree->GetBranch("NQJGenJESUp");
  if (NQJGenJESUp_branch) NQJGenJESUp_branch->SetAddress(&NQJGenJESUp_);
  NBJGenJESUp_branch = tree->GetBranch("NBJGenJESUp");
  if (NBJGenJESUp_branch) NBJGenJESUp_branch->SetAddress(&NBJGenJESUp_);
  NLJGenJESUp_branch = tree->GetBranch("NLJGenJESUp");
  if (NLJGenJESUp_branch) NLJGenJESUp_branch->SetAddress(&NLJGenJESUp_);
  MVVXJESUp_branch = tree->GetBranch("MVVXJESUp");
  if (MVVXJESUp_branch) MVVXJESUp_branch->SetAddress(&MVVXJESUp_);
  PtVVXJESUp_branch = tree->GetBranch("PtVVXJESUp");
  if (PtVVXJESUp_branch) PtVVXJESUp_branch->SetAddress(&PtVVXJESUp_);
  HTJESUp_branch = tree->GetBranch("HTJESUp");
  if (HTJESUp_branch) HTJESUp_branch->SetAddress(&HTJESUp_);
  HTJJESUp_branch = tree->GetBranch("HTJJESUp");
  if (HTJJESUp_branch) HTJJESUp_branch->SetAddress(&HTJJESUp_);
  HTFJJESUp_branch = tree->GetBranch("HTFJJESUp");
  if (HTFJJESUp_branch) HTFJJESUp_branch->SetAddress(&HTFJJESUp_);
  SumPtFJJESUp_branch = tree->GetBranch("SumPtFJJESUp");
  if (SumPtFJJESUp_branch) SumPtFJJESUp_branch->SetAddress(&SumPtFJJESUp_);
  SumPtJJESUp_branch = tree->GetBranch("SumPtJJESUp");
  if (SumPtJJESUp_branch) SumPtJJESUp_branch->SetAddress(&SumPtJJESUp_);
  NFJJESDn_branch = tree->GetBranch("NFJJESDn");
  if (NFJJESDn_branch) NFJJESDn_branch->SetAddress(&NFJJESDn_);
  VMD0JESDn_branch = tree->GetBranch("VMD0JESDn");
  if (VMD0JESDn_branch) VMD0JESDn_branch->SetAddress(&VMD0JESDn_);
  VMD1JESDn_branch = tree->GetBranch("VMD1JESDn");
  if (VMD1JESDn_branch) VMD1JESDn_branch->SetAddress(&VMD1JESDn_);
  VMD2JESDn_branch = tree->GetBranch("VMD2JESDn");
  if (VMD2JESDn_branch) VMD2JESDn_branch->SetAddress(&VMD2JESDn_);
  VMD3JESDn_branch = tree->GetBranch("VMD3JESDn");
  if (VMD3JESDn_branch) VMD3JESDn_branch->SetAddress(&VMD3JESDn_);
  VMD4JESDn_branch = tree->GetBranch("VMD4JESDn");
  if (VMD4JESDn_branch) VMD4JESDn_branch->SetAddress(&VMD4JESDn_);
  WMD0JESDn_branch = tree->GetBranch("WMD0JESDn");
  if (WMD0JESDn_branch) WMD0JESDn_branch->SetAddress(&WMD0JESDn_);
  WMD1JESDn_branch = tree->GetBranch("WMD1JESDn");
  if (WMD1JESDn_branch) WMD1JESDn_branch->SetAddress(&WMD1JESDn_);
  WMD2JESDn_branch = tree->GetBranch("WMD2JESDn");
  if (WMD2JESDn_branch) WMD2JESDn_branch->SetAddress(&WMD2JESDn_);
  WMD3JESDn_branch = tree->GetBranch("WMD3JESDn");
  if (WMD3JESDn_branch) WMD3JESDn_branch->SetAddress(&WMD3JESDn_);
  WMD4JESDn_branch = tree->GetBranch("WMD4JESDn");
  if (WMD4JESDn_branch) WMD4JESDn_branch->SetAddress(&WMD4JESDn_);
  NQGen0JESDn_branch = tree->GetBranch("NQGen0JESDn");
  if (NQGen0JESDn_branch) NQGen0JESDn_branch->SetAddress(&NQGen0JESDn_);
  NQGen1JESDn_branch = tree->GetBranch("NQGen1JESDn");
  if (NQGen1JESDn_branch) NQGen1JESDn_branch->SetAddress(&NQGen1JESDn_);
  NQGen2JESDn_branch = tree->GetBranch("NQGen2JESDn");
  if (NQGen2JESDn_branch) NQGen2JESDn_branch->SetAddress(&NQGen2JESDn_);
  NQGen3JESDn_branch = tree->GetBranch("NQGen3JESDn");
  if (NQGen3JESDn_branch) NQGen3JESDn_branch->SetAddress(&NQGen3JESDn_);
  NQGen4JESDn_branch = tree->GetBranch("NQGen4JESDn");
  if (NQGen4JESDn_branch) NQGen4JESDn_branch->SetAddress(&NQGen4JESDn_);
  NBGen0JESDn_branch = tree->GetBranch("NBGen0JESDn");
  if (NBGen0JESDn_branch) NBGen0JESDn_branch->SetAddress(&NBGen0JESDn_);
  NBGen1JESDn_branch = tree->GetBranch("NBGen1JESDn");
  if (NBGen1JESDn_branch) NBGen1JESDn_branch->SetAddress(&NBGen1JESDn_);
  NBGen2JESDn_branch = tree->GetBranch("NBGen2JESDn");
  if (NBGen2JESDn_branch) NBGen2JESDn_branch->SetAddress(&NBGen2JESDn_);
  NBGen3JESDn_branch = tree->GetBranch("NBGen3JESDn");
  if (NBGen3JESDn_branch) NBGen3JESDn_branch->SetAddress(&NBGen3JESDn_);
  NBGen4JESDn_branch = tree->GetBranch("NBGen4JESDn");
  if (NBGen4JESDn_branch) NBGen4JESDn_branch->SetAddress(&NBGen4JESDn_);
  NLGen0JESDn_branch = tree->GetBranch("NLGen0JESDn");
  if (NLGen0JESDn_branch) NLGen0JESDn_branch->SetAddress(&NLGen0JESDn_);
  NLGen1JESDn_branch = tree->GetBranch("NLGen1JESDn");
  if (NLGen1JESDn_branch) NLGen1JESDn_branch->SetAddress(&NLGen1JESDn_);
  NLGen2JESDn_branch = tree->GetBranch("NLGen2JESDn");
  if (NLGen2JESDn_branch) NLGen2JESDn_branch->SetAddress(&NLGen2JESDn_);
  NLGen3JESDn_branch = tree->GetBranch("NLGen3JESDn");
  if (NLGen3JESDn_branch) NLGen3JESDn_branch->SetAddress(&NLGen3JESDn_);
  NLGen4JESDn_branch = tree->GetBranch("NLGen4JESDn");
  if (NLGen4JESDn_branch) NLGen4JESDn_branch->SetAddress(&NLGen4JESDn_);
  NVQGen0JESDn_branch = tree->GetBranch("NVQGen0JESDn");
  if (NVQGen0JESDn_branch) NVQGen0JESDn_branch->SetAddress(&NVQGen0JESDn_);
  NVQGen1JESDn_branch = tree->GetBranch("NVQGen1JESDn");
  if (NVQGen1JESDn_branch) NVQGen1JESDn_branch->SetAddress(&NVQGen1JESDn_);
  NVQGen2JESDn_branch = tree->GetBranch("NVQGen2JESDn");
  if (NVQGen2JESDn_branch) NVQGen2JESDn_branch->SetAddress(&NVQGen2JESDn_);
  NVQGen3JESDn_branch = tree->GetBranch("NVQGen3JESDn");
  if (NVQGen3JESDn_branch) NVQGen3JESDn_branch->SetAddress(&NVQGen3JESDn_);
  NVQGen4JESDn_branch = tree->GetBranch("NVQGen4JESDn");
  if (NVQGen4JESDn_branch) NVQGen4JESDn_branch->SetAddress(&NVQGen4JESDn_);
  NiFJJESDn_branch = tree->GetBranch("NiFJJESDn");
  if (NiFJJESDn_branch) NiFJJESDn_branch->SetAddress(&NiFJJESDn_);
  iVMD0JESDn_branch = tree->GetBranch("iVMD0JESDn");
  if (iVMD0JESDn_branch) iVMD0JESDn_branch->SetAddress(&iVMD0JESDn_);
  iVMD1JESDn_branch = tree->GetBranch("iVMD1JESDn");
  if (iVMD1JESDn_branch) iVMD1JESDn_branch->SetAddress(&iVMD1JESDn_);
  iVMD2JESDn_branch = tree->GetBranch("iVMD2JESDn");
  if (iVMD2JESDn_branch) iVMD2JESDn_branch->SetAddress(&iVMD2JESDn_);
  iVMD3JESDn_branch = tree->GetBranch("iVMD3JESDn");
  if (iVMD3JESDn_branch) iVMD3JESDn_branch->SetAddress(&iVMD3JESDn_);
  iVMD4JESDn_branch = tree->GetBranch("iVMD4JESDn");
  if (iVMD4JESDn_branch) iVMD4JESDn_branch->SetAddress(&iVMD4JESDn_);
  iWMD0JESDn_branch = tree->GetBranch("iWMD0JESDn");
  if (iWMD0JESDn_branch) iWMD0JESDn_branch->SetAddress(&iWMD0JESDn_);
  iWMD1JESDn_branch = tree->GetBranch("iWMD1JESDn");
  if (iWMD1JESDn_branch) iWMD1JESDn_branch->SetAddress(&iWMD1JESDn_);
  iWMD2JESDn_branch = tree->GetBranch("iWMD2JESDn");
  if (iWMD2JESDn_branch) iWMD2JESDn_branch->SetAddress(&iWMD2JESDn_);
  iWMD3JESDn_branch = tree->GetBranch("iWMD3JESDn");
  if (iWMD3JESDn_branch) iWMD3JESDn_branch->SetAddress(&iWMD3JESDn_);
  iWMD4JESDn_branch = tree->GetBranch("iWMD4JESDn");
  if (iWMD4JESDn_branch) iWMD4JESDn_branch->SetAddress(&iWMD4JESDn_);
  NJJESDn_branch = tree->GetBranch("NJJESDn");
  if (NJJESDn_branch) NJJESDn_branch->SetAddress(&NJJESDn_);
  NbLooseJESDn_branch = tree->GetBranch("NbLooseJESDn");
  if (NbLooseJESDn_branch) NbLooseJESDn_branch->SetAddress(&NbLooseJESDn_);
  NbMediumJESDn_branch = tree->GetBranch("NbMediumJESDn");
  if (NbMediumJESDn_branch) NbMediumJESDn_branch->SetAddress(&NbMediumJESDn_);
  NbTightJESDn_branch = tree->GetBranch("NbTightJESDn");
  if (NbTightJESDn_branch) NbTightJESDn_branch->SetAddress(&NbTightJESDn_);
  NoORNbLooseJESDn_branch = tree->GetBranch("NoORNbLooseJESDn");
  if (NoORNbLooseJESDn_branch) NoORNbLooseJESDn_branch->SetAddress(&NoORNbLooseJESDn_);
  NoORNbMediumJESDn_branch = tree->GetBranch("NoORNbMediumJESDn");
  if (NoORNbMediumJESDn_branch) NoORNbMediumJESDn_branch->SetAddress(&NoORNbMediumJESDn_);
  NoORNbTightJESDn_branch = tree->GetBranch("NoORNbTightJESDn");
  if (NoORNbTightJESDn_branch) NoORNbTightJESDn_branch->SetAddress(&NoORNbTightJESDn_);
  NQJGenJESDn_branch = tree->GetBranch("NQJGenJESDn");
  if (NQJGenJESDn_branch) NQJGenJESDn_branch->SetAddress(&NQJGenJESDn_);
  NBJGenJESDn_branch = tree->GetBranch("NBJGenJESDn");
  if (NBJGenJESDn_branch) NBJGenJESDn_branch->SetAddress(&NBJGenJESDn_);
  NLJGenJESDn_branch = tree->GetBranch("NLJGenJESDn");
  if (NLJGenJESDn_branch) NLJGenJESDn_branch->SetAddress(&NLJGenJESDn_);
  MVVXJESDn_branch = tree->GetBranch("MVVXJESDn");
  if (MVVXJESDn_branch) MVVXJESDn_branch->SetAddress(&MVVXJESDn_);
  PtVVXJESDn_branch = tree->GetBranch("PtVVXJESDn");
  if (PtVVXJESDn_branch) PtVVXJESDn_branch->SetAddress(&PtVVXJESDn_);
  HTJESDn_branch = tree->GetBranch("HTJESDn");
  if (HTJESDn_branch) HTJESDn_branch->SetAddress(&HTJESDn_);
  HTJJESDn_branch = tree->GetBranch("HTJJESDn");
  if (HTJJESDn_branch) HTJJESDn_branch->SetAddress(&HTJJESDn_);
  HTFJJESDn_branch = tree->GetBranch("HTFJJESDn");
  if (HTFJJESDn_branch) HTFJJESDn_branch->SetAddress(&HTFJJESDn_);
  SumPtFJJESDn_branch = tree->GetBranch("SumPtFJJESDn");
  if (SumPtFJJESDn_branch) SumPtFJJESDn_branch->SetAddress(&SumPtFJJESDn_);
  SumPtJJESDn_branch = tree->GetBranch("SumPtJJESDn");
  if (SumPtJJESDn_branch) SumPtJJESDn_branch->SetAddress(&SumPtJJESDn_);
  NFJJERUp_branch = tree->GetBranch("NFJJERUp");
  if (NFJJERUp_branch) NFJJERUp_branch->SetAddress(&NFJJERUp_);
  VMD0JERUp_branch = tree->GetBranch("VMD0JERUp");
  if (VMD0JERUp_branch) VMD0JERUp_branch->SetAddress(&VMD0JERUp_);
  VMD1JERUp_branch = tree->GetBranch("VMD1JERUp");
  if (VMD1JERUp_branch) VMD1JERUp_branch->SetAddress(&VMD1JERUp_);
  VMD2JERUp_branch = tree->GetBranch("VMD2JERUp");
  if (VMD2JERUp_branch) VMD2JERUp_branch->SetAddress(&VMD2JERUp_);
  VMD3JERUp_branch = tree->GetBranch("VMD3JERUp");
  if (VMD3JERUp_branch) VMD3JERUp_branch->SetAddress(&VMD3JERUp_);
  VMD4JERUp_branch = tree->GetBranch("VMD4JERUp");
  if (VMD4JERUp_branch) VMD4JERUp_branch->SetAddress(&VMD4JERUp_);
  WMD0JERUp_branch = tree->GetBranch("WMD0JERUp");
  if (WMD0JERUp_branch) WMD0JERUp_branch->SetAddress(&WMD0JERUp_);
  WMD1JERUp_branch = tree->GetBranch("WMD1JERUp");
  if (WMD1JERUp_branch) WMD1JERUp_branch->SetAddress(&WMD1JERUp_);
  WMD2JERUp_branch = tree->GetBranch("WMD2JERUp");
  if (WMD2JERUp_branch) WMD2JERUp_branch->SetAddress(&WMD2JERUp_);
  WMD3JERUp_branch = tree->GetBranch("WMD3JERUp");
  if (WMD3JERUp_branch) WMD3JERUp_branch->SetAddress(&WMD3JERUp_);
  WMD4JERUp_branch = tree->GetBranch("WMD4JERUp");
  if (WMD4JERUp_branch) WMD4JERUp_branch->SetAddress(&WMD4JERUp_);
  NQGen0JERUp_branch = tree->GetBranch("NQGen0JERUp");
  if (NQGen0JERUp_branch) NQGen0JERUp_branch->SetAddress(&NQGen0JERUp_);
  NQGen1JERUp_branch = tree->GetBranch("NQGen1JERUp");
  if (NQGen1JERUp_branch) NQGen1JERUp_branch->SetAddress(&NQGen1JERUp_);
  NQGen2JERUp_branch = tree->GetBranch("NQGen2JERUp");
  if (NQGen2JERUp_branch) NQGen2JERUp_branch->SetAddress(&NQGen2JERUp_);
  NQGen3JERUp_branch = tree->GetBranch("NQGen3JERUp");
  if (NQGen3JERUp_branch) NQGen3JERUp_branch->SetAddress(&NQGen3JERUp_);
  NQGen4JERUp_branch = tree->GetBranch("NQGen4JERUp");
  if (NQGen4JERUp_branch) NQGen4JERUp_branch->SetAddress(&NQGen4JERUp_);
  NBGen0JERUp_branch = tree->GetBranch("NBGen0JERUp");
  if (NBGen0JERUp_branch) NBGen0JERUp_branch->SetAddress(&NBGen0JERUp_);
  NBGen1JERUp_branch = tree->GetBranch("NBGen1JERUp");
  if (NBGen1JERUp_branch) NBGen1JERUp_branch->SetAddress(&NBGen1JERUp_);
  NBGen2JERUp_branch = tree->GetBranch("NBGen2JERUp");
  if (NBGen2JERUp_branch) NBGen2JERUp_branch->SetAddress(&NBGen2JERUp_);
  NBGen3JERUp_branch = tree->GetBranch("NBGen3JERUp");
  if (NBGen3JERUp_branch) NBGen3JERUp_branch->SetAddress(&NBGen3JERUp_);
  NBGen4JERUp_branch = tree->GetBranch("NBGen4JERUp");
  if (NBGen4JERUp_branch) NBGen4JERUp_branch->SetAddress(&NBGen4JERUp_);
  NLGen0JERUp_branch = tree->GetBranch("NLGen0JERUp");
  if (NLGen0JERUp_branch) NLGen0JERUp_branch->SetAddress(&NLGen0JERUp_);
  NLGen1JERUp_branch = tree->GetBranch("NLGen1JERUp");
  if (NLGen1JERUp_branch) NLGen1JERUp_branch->SetAddress(&NLGen1JERUp_);
  NLGen2JERUp_branch = tree->GetBranch("NLGen2JERUp");
  if (NLGen2JERUp_branch) NLGen2JERUp_branch->SetAddress(&NLGen2JERUp_);
  NLGen3JERUp_branch = tree->GetBranch("NLGen3JERUp");
  if (NLGen3JERUp_branch) NLGen3JERUp_branch->SetAddress(&NLGen3JERUp_);
  NLGen4JERUp_branch = tree->GetBranch("NLGen4JERUp");
  if (NLGen4JERUp_branch) NLGen4JERUp_branch->SetAddress(&NLGen4JERUp_);
  NVQGen0JERUp_branch = tree->GetBranch("NVQGen0JERUp");
  if (NVQGen0JERUp_branch) NVQGen0JERUp_branch->SetAddress(&NVQGen0JERUp_);
  NVQGen1JERUp_branch = tree->GetBranch("NVQGen1JERUp");
  if (NVQGen1JERUp_branch) NVQGen1JERUp_branch->SetAddress(&NVQGen1JERUp_);
  NVQGen2JERUp_branch = tree->GetBranch("NVQGen2JERUp");
  if (NVQGen2JERUp_branch) NVQGen2JERUp_branch->SetAddress(&NVQGen2JERUp_);
  NVQGen3JERUp_branch = tree->GetBranch("NVQGen3JERUp");
  if (NVQGen3JERUp_branch) NVQGen3JERUp_branch->SetAddress(&NVQGen3JERUp_);
  NVQGen4JERUp_branch = tree->GetBranch("NVQGen4JERUp");
  if (NVQGen4JERUp_branch) NVQGen4JERUp_branch->SetAddress(&NVQGen4JERUp_);
  NiFJJERUp_branch = tree->GetBranch("NiFJJERUp");
  if (NiFJJERUp_branch) NiFJJERUp_branch->SetAddress(&NiFJJERUp_);
  iVMD0JERUp_branch = tree->GetBranch("iVMD0JERUp");
  if (iVMD0JERUp_branch) iVMD0JERUp_branch->SetAddress(&iVMD0JERUp_);
  iVMD1JERUp_branch = tree->GetBranch("iVMD1JERUp");
  if (iVMD1JERUp_branch) iVMD1JERUp_branch->SetAddress(&iVMD1JERUp_);
  iVMD2JERUp_branch = tree->GetBranch("iVMD2JERUp");
  if (iVMD2JERUp_branch) iVMD2JERUp_branch->SetAddress(&iVMD2JERUp_);
  iVMD3JERUp_branch = tree->GetBranch("iVMD3JERUp");
  if (iVMD3JERUp_branch) iVMD3JERUp_branch->SetAddress(&iVMD3JERUp_);
  iVMD4JERUp_branch = tree->GetBranch("iVMD4JERUp");
  if (iVMD4JERUp_branch) iVMD4JERUp_branch->SetAddress(&iVMD4JERUp_);
  iWMD0JERUp_branch = tree->GetBranch("iWMD0JERUp");
  if (iWMD0JERUp_branch) iWMD0JERUp_branch->SetAddress(&iWMD0JERUp_);
  iWMD1JERUp_branch = tree->GetBranch("iWMD1JERUp");
  if (iWMD1JERUp_branch) iWMD1JERUp_branch->SetAddress(&iWMD1JERUp_);
  iWMD2JERUp_branch = tree->GetBranch("iWMD2JERUp");
  if (iWMD2JERUp_branch) iWMD2JERUp_branch->SetAddress(&iWMD2JERUp_);
  iWMD3JERUp_branch = tree->GetBranch("iWMD3JERUp");
  if (iWMD3JERUp_branch) iWMD3JERUp_branch->SetAddress(&iWMD3JERUp_);
  iWMD4JERUp_branch = tree->GetBranch("iWMD4JERUp");
  if (iWMD4JERUp_branch) iWMD4JERUp_branch->SetAddress(&iWMD4JERUp_);
  NJJERUp_branch = tree->GetBranch("NJJERUp");
  if (NJJERUp_branch) NJJERUp_branch->SetAddress(&NJJERUp_);
  NbLooseJERUp_branch = tree->GetBranch("NbLooseJERUp");
  if (NbLooseJERUp_branch) NbLooseJERUp_branch->SetAddress(&NbLooseJERUp_);
  NbMediumJERUp_branch = tree->GetBranch("NbMediumJERUp");
  if (NbMediumJERUp_branch) NbMediumJERUp_branch->SetAddress(&NbMediumJERUp_);
  NbTightJERUp_branch = tree->GetBranch("NbTightJERUp");
  if (NbTightJERUp_branch) NbTightJERUp_branch->SetAddress(&NbTightJERUp_);
  NoORNbLooseJERUp_branch = tree->GetBranch("NoORNbLooseJERUp");
  if (NoORNbLooseJERUp_branch) NoORNbLooseJERUp_branch->SetAddress(&NoORNbLooseJERUp_);
  NoORNbMediumJERUp_branch = tree->GetBranch("NoORNbMediumJERUp");
  if (NoORNbMediumJERUp_branch) NoORNbMediumJERUp_branch->SetAddress(&NoORNbMediumJERUp_);
  NoORNbTightJERUp_branch = tree->GetBranch("NoORNbTightJERUp");
  if (NoORNbTightJERUp_branch) NoORNbTightJERUp_branch->SetAddress(&NoORNbTightJERUp_);
  NQJGenJERUp_branch = tree->GetBranch("NQJGenJERUp");
  if (NQJGenJERUp_branch) NQJGenJERUp_branch->SetAddress(&NQJGenJERUp_);
  NBJGenJERUp_branch = tree->GetBranch("NBJGenJERUp");
  if (NBJGenJERUp_branch) NBJGenJERUp_branch->SetAddress(&NBJGenJERUp_);
  NLJGenJERUp_branch = tree->GetBranch("NLJGenJERUp");
  if (NLJGenJERUp_branch) NLJGenJERUp_branch->SetAddress(&NLJGenJERUp_);
  MVVXJERUp_branch = tree->GetBranch("MVVXJERUp");
  if (MVVXJERUp_branch) MVVXJERUp_branch->SetAddress(&MVVXJERUp_);
  PtVVXJERUp_branch = tree->GetBranch("PtVVXJERUp");
  if (PtVVXJERUp_branch) PtVVXJERUp_branch->SetAddress(&PtVVXJERUp_);
  HTJERUp_branch = tree->GetBranch("HTJERUp");
  if (HTJERUp_branch) HTJERUp_branch->SetAddress(&HTJERUp_);
  HTJJERUp_branch = tree->GetBranch("HTJJERUp");
  if (HTJJERUp_branch) HTJJERUp_branch->SetAddress(&HTJJERUp_);
  HTFJJERUp_branch = tree->GetBranch("HTFJJERUp");
  if (HTFJJERUp_branch) HTFJJERUp_branch->SetAddress(&HTFJJERUp_);
  SumPtFJJERUp_branch = tree->GetBranch("SumPtFJJERUp");
  if (SumPtFJJERUp_branch) SumPtFJJERUp_branch->SetAddress(&SumPtFJJERUp_);
  SumPtJJERUp_branch = tree->GetBranch("SumPtJJERUp");
  if (SumPtJJERUp_branch) SumPtJJERUp_branch->SetAddress(&SumPtJJERUp_);
  NFJJERDn_branch = tree->GetBranch("NFJJERDn");
  if (NFJJERDn_branch) NFJJERDn_branch->SetAddress(&NFJJERDn_);
  VMD0JERDn_branch = tree->GetBranch("VMD0JERDn");
  if (VMD0JERDn_branch) VMD0JERDn_branch->SetAddress(&VMD0JERDn_);
  VMD1JERDn_branch = tree->GetBranch("VMD1JERDn");
  if (VMD1JERDn_branch) VMD1JERDn_branch->SetAddress(&VMD1JERDn_);
  VMD2JERDn_branch = tree->GetBranch("VMD2JERDn");
  if (VMD2JERDn_branch) VMD2JERDn_branch->SetAddress(&VMD2JERDn_);
  VMD3JERDn_branch = tree->GetBranch("VMD3JERDn");
  if (VMD3JERDn_branch) VMD3JERDn_branch->SetAddress(&VMD3JERDn_);
  VMD4JERDn_branch = tree->GetBranch("VMD4JERDn");
  if (VMD4JERDn_branch) VMD4JERDn_branch->SetAddress(&VMD4JERDn_);
  WMD0JERDn_branch = tree->GetBranch("WMD0JERDn");
  if (WMD0JERDn_branch) WMD0JERDn_branch->SetAddress(&WMD0JERDn_);
  WMD1JERDn_branch = tree->GetBranch("WMD1JERDn");
  if (WMD1JERDn_branch) WMD1JERDn_branch->SetAddress(&WMD1JERDn_);
  WMD2JERDn_branch = tree->GetBranch("WMD2JERDn");
  if (WMD2JERDn_branch) WMD2JERDn_branch->SetAddress(&WMD2JERDn_);
  WMD3JERDn_branch = tree->GetBranch("WMD3JERDn");
  if (WMD3JERDn_branch) WMD3JERDn_branch->SetAddress(&WMD3JERDn_);
  WMD4JERDn_branch = tree->GetBranch("WMD4JERDn");
  if (WMD4JERDn_branch) WMD4JERDn_branch->SetAddress(&WMD4JERDn_);
  NQGen0JERDn_branch = tree->GetBranch("NQGen0JERDn");
  if (NQGen0JERDn_branch) NQGen0JERDn_branch->SetAddress(&NQGen0JERDn_);
  NQGen1JERDn_branch = tree->GetBranch("NQGen1JERDn");
  if (NQGen1JERDn_branch) NQGen1JERDn_branch->SetAddress(&NQGen1JERDn_);
  NQGen2JERDn_branch = tree->GetBranch("NQGen2JERDn");
  if (NQGen2JERDn_branch) NQGen2JERDn_branch->SetAddress(&NQGen2JERDn_);
  NQGen3JERDn_branch = tree->GetBranch("NQGen3JERDn");
  if (NQGen3JERDn_branch) NQGen3JERDn_branch->SetAddress(&NQGen3JERDn_);
  NQGen4JERDn_branch = tree->GetBranch("NQGen4JERDn");
  if (NQGen4JERDn_branch) NQGen4JERDn_branch->SetAddress(&NQGen4JERDn_);
  NBGen0JERDn_branch = tree->GetBranch("NBGen0JERDn");
  if (NBGen0JERDn_branch) NBGen0JERDn_branch->SetAddress(&NBGen0JERDn_);
  NBGen1JERDn_branch = tree->GetBranch("NBGen1JERDn");
  if (NBGen1JERDn_branch) NBGen1JERDn_branch->SetAddress(&NBGen1JERDn_);
  NBGen2JERDn_branch = tree->GetBranch("NBGen2JERDn");
  if (NBGen2JERDn_branch) NBGen2JERDn_branch->SetAddress(&NBGen2JERDn_);
  NBGen3JERDn_branch = tree->GetBranch("NBGen3JERDn");
  if (NBGen3JERDn_branch) NBGen3JERDn_branch->SetAddress(&NBGen3JERDn_);
  NBGen4JERDn_branch = tree->GetBranch("NBGen4JERDn");
  if (NBGen4JERDn_branch) NBGen4JERDn_branch->SetAddress(&NBGen4JERDn_);
  NLGen0JERDn_branch = tree->GetBranch("NLGen0JERDn");
  if (NLGen0JERDn_branch) NLGen0JERDn_branch->SetAddress(&NLGen0JERDn_);
  NLGen1JERDn_branch = tree->GetBranch("NLGen1JERDn");
  if (NLGen1JERDn_branch) NLGen1JERDn_branch->SetAddress(&NLGen1JERDn_);
  NLGen2JERDn_branch = tree->GetBranch("NLGen2JERDn");
  if (NLGen2JERDn_branch) NLGen2JERDn_branch->SetAddress(&NLGen2JERDn_);
  NLGen3JERDn_branch = tree->GetBranch("NLGen3JERDn");
  if (NLGen3JERDn_branch) NLGen3JERDn_branch->SetAddress(&NLGen3JERDn_);
  NLGen4JERDn_branch = tree->GetBranch("NLGen4JERDn");
  if (NLGen4JERDn_branch) NLGen4JERDn_branch->SetAddress(&NLGen4JERDn_);
  NVQGen0JERDn_branch = tree->GetBranch("NVQGen0JERDn");
  if (NVQGen0JERDn_branch) NVQGen0JERDn_branch->SetAddress(&NVQGen0JERDn_);
  NVQGen1JERDn_branch = tree->GetBranch("NVQGen1JERDn");
  if (NVQGen1JERDn_branch) NVQGen1JERDn_branch->SetAddress(&NVQGen1JERDn_);
  NVQGen2JERDn_branch = tree->GetBranch("NVQGen2JERDn");
  if (NVQGen2JERDn_branch) NVQGen2JERDn_branch->SetAddress(&NVQGen2JERDn_);
  NVQGen3JERDn_branch = tree->GetBranch("NVQGen3JERDn");
  if (NVQGen3JERDn_branch) NVQGen3JERDn_branch->SetAddress(&NVQGen3JERDn_);
  NVQGen4JERDn_branch = tree->GetBranch("NVQGen4JERDn");
  if (NVQGen4JERDn_branch) NVQGen4JERDn_branch->SetAddress(&NVQGen4JERDn_);
  NiFJJERDn_branch = tree->GetBranch("NiFJJERDn");
  if (NiFJJERDn_branch) NiFJJERDn_branch->SetAddress(&NiFJJERDn_);
  iVMD0JERDn_branch = tree->GetBranch("iVMD0JERDn");
  if (iVMD0JERDn_branch) iVMD0JERDn_branch->SetAddress(&iVMD0JERDn_);
  iVMD1JERDn_branch = tree->GetBranch("iVMD1JERDn");
  if (iVMD1JERDn_branch) iVMD1JERDn_branch->SetAddress(&iVMD1JERDn_);
  iVMD2JERDn_branch = tree->GetBranch("iVMD2JERDn");
  if (iVMD2JERDn_branch) iVMD2JERDn_branch->SetAddress(&iVMD2JERDn_);
  iVMD3JERDn_branch = tree->GetBranch("iVMD3JERDn");
  if (iVMD3JERDn_branch) iVMD3JERDn_branch->SetAddress(&iVMD3JERDn_);
  iVMD4JERDn_branch = tree->GetBranch("iVMD4JERDn");
  if (iVMD4JERDn_branch) iVMD4JERDn_branch->SetAddress(&iVMD4JERDn_);
  iWMD0JERDn_branch = tree->GetBranch("iWMD0JERDn");
  if (iWMD0JERDn_branch) iWMD0JERDn_branch->SetAddress(&iWMD0JERDn_);
  iWMD1JERDn_branch = tree->GetBranch("iWMD1JERDn");
  if (iWMD1JERDn_branch) iWMD1JERDn_branch->SetAddress(&iWMD1JERDn_);
  iWMD2JERDn_branch = tree->GetBranch("iWMD2JERDn");
  if (iWMD2JERDn_branch) iWMD2JERDn_branch->SetAddress(&iWMD2JERDn_);
  iWMD3JERDn_branch = tree->GetBranch("iWMD3JERDn");
  if (iWMD3JERDn_branch) iWMD3JERDn_branch->SetAddress(&iWMD3JERDn_);
  iWMD4JERDn_branch = tree->GetBranch("iWMD4JERDn");
  if (iWMD4JERDn_branch) iWMD4JERDn_branch->SetAddress(&iWMD4JERDn_);
  NJJERDn_branch = tree->GetBranch("NJJERDn");
  if (NJJERDn_branch) NJJERDn_branch->SetAddress(&NJJERDn_);
  NbLooseJERDn_branch = tree->GetBranch("NbLooseJERDn");
  if (NbLooseJERDn_branch) NbLooseJERDn_branch->SetAddress(&NbLooseJERDn_);
  NbMediumJERDn_branch = tree->GetBranch("NbMediumJERDn");
  if (NbMediumJERDn_branch) NbMediumJERDn_branch->SetAddress(&NbMediumJERDn_);
  NbTightJERDn_branch = tree->GetBranch("NbTightJERDn");
  if (NbTightJERDn_branch) NbTightJERDn_branch->SetAddress(&NbTightJERDn_);
  NoORNbLooseJERDn_branch = tree->GetBranch("NoORNbLooseJERDn");
  if (NoORNbLooseJERDn_branch) NoORNbLooseJERDn_branch->SetAddress(&NoORNbLooseJERDn_);
  NoORNbMediumJERDn_branch = tree->GetBranch("NoORNbMediumJERDn");
  if (NoORNbMediumJERDn_branch) NoORNbMediumJERDn_branch->SetAddress(&NoORNbMediumJERDn_);
  NoORNbTightJERDn_branch = tree->GetBranch("NoORNbTightJERDn");
  if (NoORNbTightJERDn_branch) NoORNbTightJERDn_branch->SetAddress(&NoORNbTightJERDn_);
  NQJGenJERDn_branch = tree->GetBranch("NQJGenJERDn");
  if (NQJGenJERDn_branch) NQJGenJERDn_branch->SetAddress(&NQJGenJERDn_);
  NBJGenJERDn_branch = tree->GetBranch("NBJGenJERDn");
  if (NBJGenJERDn_branch) NBJGenJERDn_branch->SetAddress(&NBJGenJERDn_);
  NLJGenJERDn_branch = tree->GetBranch("NLJGenJERDn");
  if (NLJGenJERDn_branch) NLJGenJERDn_branch->SetAddress(&NLJGenJERDn_);
  MVVXJERDn_branch = tree->GetBranch("MVVXJERDn");
  if (MVVXJERDn_branch) MVVXJERDn_branch->SetAddress(&MVVXJERDn_);
  PtVVXJERDn_branch = tree->GetBranch("PtVVXJERDn");
  if (PtVVXJERDn_branch) PtVVXJERDn_branch->SetAddress(&PtVVXJERDn_);
  HTJERDn_branch = tree->GetBranch("HTJERDn");
  if (HTJERDn_branch) HTJERDn_branch->SetAddress(&HTJERDn_);
  HTJJERDn_branch = tree->GetBranch("HTJJERDn");
  if (HTJJERDn_branch) HTJJERDn_branch->SetAddress(&HTJJERDn_);
  HTFJJERDn_branch = tree->GetBranch("HTFJJERDn");
  if (HTFJJERDn_branch) HTFJJERDn_branch->SetAddress(&HTFJJERDn_);
  SumPtFJJERDn_branch = tree->GetBranch("SumPtFJJERDn");
  if (SumPtFJJERDn_branch) SumPtFJJERDn_branch->SetAddress(&SumPtFJJERDn_);
  SumPtJJERDn_branch = tree->GetBranch("SumPtJJERDn");
  if (SumPtJJERDn_branch) SumPtJJERDn_branch->SetAddress(&SumPtJJERDn_);
  NFJJMSUp_branch = tree->GetBranch("NFJJMSUp");
  if (NFJJMSUp_branch) NFJJMSUp_branch->SetAddress(&NFJJMSUp_);
  VMD0JMSUp_branch = tree->GetBranch("VMD0JMSUp");
  if (VMD0JMSUp_branch) VMD0JMSUp_branch->SetAddress(&VMD0JMSUp_);
  VMD1JMSUp_branch = tree->GetBranch("VMD1JMSUp");
  if (VMD1JMSUp_branch) VMD1JMSUp_branch->SetAddress(&VMD1JMSUp_);
  VMD2JMSUp_branch = tree->GetBranch("VMD2JMSUp");
  if (VMD2JMSUp_branch) VMD2JMSUp_branch->SetAddress(&VMD2JMSUp_);
  VMD3JMSUp_branch = tree->GetBranch("VMD3JMSUp");
  if (VMD3JMSUp_branch) VMD3JMSUp_branch->SetAddress(&VMD3JMSUp_);
  VMD4JMSUp_branch = tree->GetBranch("VMD4JMSUp");
  if (VMD4JMSUp_branch) VMD4JMSUp_branch->SetAddress(&VMD4JMSUp_);
  WMD0JMSUp_branch = tree->GetBranch("WMD0JMSUp");
  if (WMD0JMSUp_branch) WMD0JMSUp_branch->SetAddress(&WMD0JMSUp_);
  WMD1JMSUp_branch = tree->GetBranch("WMD1JMSUp");
  if (WMD1JMSUp_branch) WMD1JMSUp_branch->SetAddress(&WMD1JMSUp_);
  WMD2JMSUp_branch = tree->GetBranch("WMD2JMSUp");
  if (WMD2JMSUp_branch) WMD2JMSUp_branch->SetAddress(&WMD2JMSUp_);
  WMD3JMSUp_branch = tree->GetBranch("WMD3JMSUp");
  if (WMD3JMSUp_branch) WMD3JMSUp_branch->SetAddress(&WMD3JMSUp_);
  WMD4JMSUp_branch = tree->GetBranch("WMD4JMSUp");
  if (WMD4JMSUp_branch) WMD4JMSUp_branch->SetAddress(&WMD4JMSUp_);
  NQGen0JMSUp_branch = tree->GetBranch("NQGen0JMSUp");
  if (NQGen0JMSUp_branch) NQGen0JMSUp_branch->SetAddress(&NQGen0JMSUp_);
  NQGen1JMSUp_branch = tree->GetBranch("NQGen1JMSUp");
  if (NQGen1JMSUp_branch) NQGen1JMSUp_branch->SetAddress(&NQGen1JMSUp_);
  NQGen2JMSUp_branch = tree->GetBranch("NQGen2JMSUp");
  if (NQGen2JMSUp_branch) NQGen2JMSUp_branch->SetAddress(&NQGen2JMSUp_);
  NQGen3JMSUp_branch = tree->GetBranch("NQGen3JMSUp");
  if (NQGen3JMSUp_branch) NQGen3JMSUp_branch->SetAddress(&NQGen3JMSUp_);
  NQGen4JMSUp_branch = tree->GetBranch("NQGen4JMSUp");
  if (NQGen4JMSUp_branch) NQGen4JMSUp_branch->SetAddress(&NQGen4JMSUp_);
  NBGen0JMSUp_branch = tree->GetBranch("NBGen0JMSUp");
  if (NBGen0JMSUp_branch) NBGen0JMSUp_branch->SetAddress(&NBGen0JMSUp_);
  NBGen1JMSUp_branch = tree->GetBranch("NBGen1JMSUp");
  if (NBGen1JMSUp_branch) NBGen1JMSUp_branch->SetAddress(&NBGen1JMSUp_);
  NBGen2JMSUp_branch = tree->GetBranch("NBGen2JMSUp");
  if (NBGen2JMSUp_branch) NBGen2JMSUp_branch->SetAddress(&NBGen2JMSUp_);
  NBGen3JMSUp_branch = tree->GetBranch("NBGen3JMSUp");
  if (NBGen3JMSUp_branch) NBGen3JMSUp_branch->SetAddress(&NBGen3JMSUp_);
  NBGen4JMSUp_branch = tree->GetBranch("NBGen4JMSUp");
  if (NBGen4JMSUp_branch) NBGen4JMSUp_branch->SetAddress(&NBGen4JMSUp_);
  NLGen0JMSUp_branch = tree->GetBranch("NLGen0JMSUp");
  if (NLGen0JMSUp_branch) NLGen0JMSUp_branch->SetAddress(&NLGen0JMSUp_);
  NLGen1JMSUp_branch = tree->GetBranch("NLGen1JMSUp");
  if (NLGen1JMSUp_branch) NLGen1JMSUp_branch->SetAddress(&NLGen1JMSUp_);
  NLGen2JMSUp_branch = tree->GetBranch("NLGen2JMSUp");
  if (NLGen2JMSUp_branch) NLGen2JMSUp_branch->SetAddress(&NLGen2JMSUp_);
  NLGen3JMSUp_branch = tree->GetBranch("NLGen3JMSUp");
  if (NLGen3JMSUp_branch) NLGen3JMSUp_branch->SetAddress(&NLGen3JMSUp_);
  NLGen4JMSUp_branch = tree->GetBranch("NLGen4JMSUp");
  if (NLGen4JMSUp_branch) NLGen4JMSUp_branch->SetAddress(&NLGen4JMSUp_);
  NVQGen0JMSUp_branch = tree->GetBranch("NVQGen0JMSUp");
  if (NVQGen0JMSUp_branch) NVQGen0JMSUp_branch->SetAddress(&NVQGen0JMSUp_);
  NVQGen1JMSUp_branch = tree->GetBranch("NVQGen1JMSUp");
  if (NVQGen1JMSUp_branch) NVQGen1JMSUp_branch->SetAddress(&NVQGen1JMSUp_);
  NVQGen2JMSUp_branch = tree->GetBranch("NVQGen2JMSUp");
  if (NVQGen2JMSUp_branch) NVQGen2JMSUp_branch->SetAddress(&NVQGen2JMSUp_);
  NVQGen3JMSUp_branch = tree->GetBranch("NVQGen3JMSUp");
  if (NVQGen3JMSUp_branch) NVQGen3JMSUp_branch->SetAddress(&NVQGen3JMSUp_);
  NVQGen4JMSUp_branch = tree->GetBranch("NVQGen4JMSUp");
  if (NVQGen4JMSUp_branch) NVQGen4JMSUp_branch->SetAddress(&NVQGen4JMSUp_);
  NiFJJMSUp_branch = tree->GetBranch("NiFJJMSUp");
  if (NiFJJMSUp_branch) NiFJJMSUp_branch->SetAddress(&NiFJJMSUp_);
  iVMD0JMSUp_branch = tree->GetBranch("iVMD0JMSUp");
  if (iVMD0JMSUp_branch) iVMD0JMSUp_branch->SetAddress(&iVMD0JMSUp_);
  iVMD1JMSUp_branch = tree->GetBranch("iVMD1JMSUp");
  if (iVMD1JMSUp_branch) iVMD1JMSUp_branch->SetAddress(&iVMD1JMSUp_);
  iVMD2JMSUp_branch = tree->GetBranch("iVMD2JMSUp");
  if (iVMD2JMSUp_branch) iVMD2JMSUp_branch->SetAddress(&iVMD2JMSUp_);
  iVMD3JMSUp_branch = tree->GetBranch("iVMD3JMSUp");
  if (iVMD3JMSUp_branch) iVMD3JMSUp_branch->SetAddress(&iVMD3JMSUp_);
  iVMD4JMSUp_branch = tree->GetBranch("iVMD4JMSUp");
  if (iVMD4JMSUp_branch) iVMD4JMSUp_branch->SetAddress(&iVMD4JMSUp_);
  iWMD0JMSUp_branch = tree->GetBranch("iWMD0JMSUp");
  if (iWMD0JMSUp_branch) iWMD0JMSUp_branch->SetAddress(&iWMD0JMSUp_);
  iWMD1JMSUp_branch = tree->GetBranch("iWMD1JMSUp");
  if (iWMD1JMSUp_branch) iWMD1JMSUp_branch->SetAddress(&iWMD1JMSUp_);
  iWMD2JMSUp_branch = tree->GetBranch("iWMD2JMSUp");
  if (iWMD2JMSUp_branch) iWMD2JMSUp_branch->SetAddress(&iWMD2JMSUp_);
  iWMD3JMSUp_branch = tree->GetBranch("iWMD3JMSUp");
  if (iWMD3JMSUp_branch) iWMD3JMSUp_branch->SetAddress(&iWMD3JMSUp_);
  iWMD4JMSUp_branch = tree->GetBranch("iWMD4JMSUp");
  if (iWMD4JMSUp_branch) iWMD4JMSUp_branch->SetAddress(&iWMD4JMSUp_);
  NJJMSUp_branch = tree->GetBranch("NJJMSUp");
  if (NJJMSUp_branch) NJJMSUp_branch->SetAddress(&NJJMSUp_);
  NbLooseJMSUp_branch = tree->GetBranch("NbLooseJMSUp");
  if (NbLooseJMSUp_branch) NbLooseJMSUp_branch->SetAddress(&NbLooseJMSUp_);
  NbMediumJMSUp_branch = tree->GetBranch("NbMediumJMSUp");
  if (NbMediumJMSUp_branch) NbMediumJMSUp_branch->SetAddress(&NbMediumJMSUp_);
  NbTightJMSUp_branch = tree->GetBranch("NbTightJMSUp");
  if (NbTightJMSUp_branch) NbTightJMSUp_branch->SetAddress(&NbTightJMSUp_);
  NoORNbLooseJMSUp_branch = tree->GetBranch("NoORNbLooseJMSUp");
  if (NoORNbLooseJMSUp_branch) NoORNbLooseJMSUp_branch->SetAddress(&NoORNbLooseJMSUp_);
  NoORNbMediumJMSUp_branch = tree->GetBranch("NoORNbMediumJMSUp");
  if (NoORNbMediumJMSUp_branch) NoORNbMediumJMSUp_branch->SetAddress(&NoORNbMediumJMSUp_);
  NoORNbTightJMSUp_branch = tree->GetBranch("NoORNbTightJMSUp");
  if (NoORNbTightJMSUp_branch) NoORNbTightJMSUp_branch->SetAddress(&NoORNbTightJMSUp_);
  NQJGenJMSUp_branch = tree->GetBranch("NQJGenJMSUp");
  if (NQJGenJMSUp_branch) NQJGenJMSUp_branch->SetAddress(&NQJGenJMSUp_);
  NBJGenJMSUp_branch = tree->GetBranch("NBJGenJMSUp");
  if (NBJGenJMSUp_branch) NBJGenJMSUp_branch->SetAddress(&NBJGenJMSUp_);
  NLJGenJMSUp_branch = tree->GetBranch("NLJGenJMSUp");
  if (NLJGenJMSUp_branch) NLJGenJMSUp_branch->SetAddress(&NLJGenJMSUp_);
  MVVXJMSUp_branch = tree->GetBranch("MVVXJMSUp");
  if (MVVXJMSUp_branch) MVVXJMSUp_branch->SetAddress(&MVVXJMSUp_);
  PtVVXJMSUp_branch = tree->GetBranch("PtVVXJMSUp");
  if (PtVVXJMSUp_branch) PtVVXJMSUp_branch->SetAddress(&PtVVXJMSUp_);
  HTJMSUp_branch = tree->GetBranch("HTJMSUp");
  if (HTJMSUp_branch) HTJMSUp_branch->SetAddress(&HTJMSUp_);
  HTJJMSUp_branch = tree->GetBranch("HTJJMSUp");
  if (HTJJMSUp_branch) HTJJMSUp_branch->SetAddress(&HTJJMSUp_);
  HTFJJMSUp_branch = tree->GetBranch("HTFJJMSUp");
  if (HTFJJMSUp_branch) HTFJJMSUp_branch->SetAddress(&HTFJJMSUp_);
  SumPtFJJMSUp_branch = tree->GetBranch("SumPtFJJMSUp");
  if (SumPtFJJMSUp_branch) SumPtFJJMSUp_branch->SetAddress(&SumPtFJJMSUp_);
  SumPtJJMSUp_branch = tree->GetBranch("SumPtJJMSUp");
  if (SumPtJJMSUp_branch) SumPtJJMSUp_branch->SetAddress(&SumPtJJMSUp_);
  NFJJMSDn_branch = tree->GetBranch("NFJJMSDn");
  if (NFJJMSDn_branch) NFJJMSDn_branch->SetAddress(&NFJJMSDn_);
  VMD0JMSDn_branch = tree->GetBranch("VMD0JMSDn");
  if (VMD0JMSDn_branch) VMD0JMSDn_branch->SetAddress(&VMD0JMSDn_);
  VMD1JMSDn_branch = tree->GetBranch("VMD1JMSDn");
  if (VMD1JMSDn_branch) VMD1JMSDn_branch->SetAddress(&VMD1JMSDn_);
  VMD2JMSDn_branch = tree->GetBranch("VMD2JMSDn");
  if (VMD2JMSDn_branch) VMD2JMSDn_branch->SetAddress(&VMD2JMSDn_);
  VMD3JMSDn_branch = tree->GetBranch("VMD3JMSDn");
  if (VMD3JMSDn_branch) VMD3JMSDn_branch->SetAddress(&VMD3JMSDn_);
  VMD4JMSDn_branch = tree->GetBranch("VMD4JMSDn");
  if (VMD4JMSDn_branch) VMD4JMSDn_branch->SetAddress(&VMD4JMSDn_);
  WMD0JMSDn_branch = tree->GetBranch("WMD0JMSDn");
  if (WMD0JMSDn_branch) WMD0JMSDn_branch->SetAddress(&WMD0JMSDn_);
  WMD1JMSDn_branch = tree->GetBranch("WMD1JMSDn");
  if (WMD1JMSDn_branch) WMD1JMSDn_branch->SetAddress(&WMD1JMSDn_);
  WMD2JMSDn_branch = tree->GetBranch("WMD2JMSDn");
  if (WMD2JMSDn_branch) WMD2JMSDn_branch->SetAddress(&WMD2JMSDn_);
  WMD3JMSDn_branch = tree->GetBranch("WMD3JMSDn");
  if (WMD3JMSDn_branch) WMD3JMSDn_branch->SetAddress(&WMD3JMSDn_);
  WMD4JMSDn_branch = tree->GetBranch("WMD4JMSDn");
  if (WMD4JMSDn_branch) WMD4JMSDn_branch->SetAddress(&WMD4JMSDn_);
  NQGen0JMSDn_branch = tree->GetBranch("NQGen0JMSDn");
  if (NQGen0JMSDn_branch) NQGen0JMSDn_branch->SetAddress(&NQGen0JMSDn_);
  NQGen1JMSDn_branch = tree->GetBranch("NQGen1JMSDn");
  if (NQGen1JMSDn_branch) NQGen1JMSDn_branch->SetAddress(&NQGen1JMSDn_);
  NQGen2JMSDn_branch = tree->GetBranch("NQGen2JMSDn");
  if (NQGen2JMSDn_branch) NQGen2JMSDn_branch->SetAddress(&NQGen2JMSDn_);
  NQGen3JMSDn_branch = tree->GetBranch("NQGen3JMSDn");
  if (NQGen3JMSDn_branch) NQGen3JMSDn_branch->SetAddress(&NQGen3JMSDn_);
  NQGen4JMSDn_branch = tree->GetBranch("NQGen4JMSDn");
  if (NQGen4JMSDn_branch) NQGen4JMSDn_branch->SetAddress(&NQGen4JMSDn_);
  NBGen0JMSDn_branch = tree->GetBranch("NBGen0JMSDn");
  if (NBGen0JMSDn_branch) NBGen0JMSDn_branch->SetAddress(&NBGen0JMSDn_);
  NBGen1JMSDn_branch = tree->GetBranch("NBGen1JMSDn");
  if (NBGen1JMSDn_branch) NBGen1JMSDn_branch->SetAddress(&NBGen1JMSDn_);
  NBGen2JMSDn_branch = tree->GetBranch("NBGen2JMSDn");
  if (NBGen2JMSDn_branch) NBGen2JMSDn_branch->SetAddress(&NBGen2JMSDn_);
  NBGen3JMSDn_branch = tree->GetBranch("NBGen3JMSDn");
  if (NBGen3JMSDn_branch) NBGen3JMSDn_branch->SetAddress(&NBGen3JMSDn_);
  NBGen4JMSDn_branch = tree->GetBranch("NBGen4JMSDn");
  if (NBGen4JMSDn_branch) NBGen4JMSDn_branch->SetAddress(&NBGen4JMSDn_);
  NLGen0JMSDn_branch = tree->GetBranch("NLGen0JMSDn");
  if (NLGen0JMSDn_branch) NLGen0JMSDn_branch->SetAddress(&NLGen0JMSDn_);
  NLGen1JMSDn_branch = tree->GetBranch("NLGen1JMSDn");
  if (NLGen1JMSDn_branch) NLGen1JMSDn_branch->SetAddress(&NLGen1JMSDn_);
  NLGen2JMSDn_branch = tree->GetBranch("NLGen2JMSDn");
  if (NLGen2JMSDn_branch) NLGen2JMSDn_branch->SetAddress(&NLGen2JMSDn_);
  NLGen3JMSDn_branch = tree->GetBranch("NLGen3JMSDn");
  if (NLGen3JMSDn_branch) NLGen3JMSDn_branch->SetAddress(&NLGen3JMSDn_);
  NLGen4JMSDn_branch = tree->GetBranch("NLGen4JMSDn");
  if (NLGen4JMSDn_branch) NLGen4JMSDn_branch->SetAddress(&NLGen4JMSDn_);
  NVQGen0JMSDn_branch = tree->GetBranch("NVQGen0JMSDn");
  if (NVQGen0JMSDn_branch) NVQGen0JMSDn_branch->SetAddress(&NVQGen0JMSDn_);
  NVQGen1JMSDn_branch = tree->GetBranch("NVQGen1JMSDn");
  if (NVQGen1JMSDn_branch) NVQGen1JMSDn_branch->SetAddress(&NVQGen1JMSDn_);
  NVQGen2JMSDn_branch = tree->GetBranch("NVQGen2JMSDn");
  if (NVQGen2JMSDn_branch) NVQGen2JMSDn_branch->SetAddress(&NVQGen2JMSDn_);
  NVQGen3JMSDn_branch = tree->GetBranch("NVQGen3JMSDn");
  if (NVQGen3JMSDn_branch) NVQGen3JMSDn_branch->SetAddress(&NVQGen3JMSDn_);
  NVQGen4JMSDn_branch = tree->GetBranch("NVQGen4JMSDn");
  if (NVQGen4JMSDn_branch) NVQGen4JMSDn_branch->SetAddress(&NVQGen4JMSDn_);
  NiFJJMSDn_branch = tree->GetBranch("NiFJJMSDn");
  if (NiFJJMSDn_branch) NiFJJMSDn_branch->SetAddress(&NiFJJMSDn_);
  iVMD0JMSDn_branch = tree->GetBranch("iVMD0JMSDn");
  if (iVMD0JMSDn_branch) iVMD0JMSDn_branch->SetAddress(&iVMD0JMSDn_);
  iVMD1JMSDn_branch = tree->GetBranch("iVMD1JMSDn");
  if (iVMD1JMSDn_branch) iVMD1JMSDn_branch->SetAddress(&iVMD1JMSDn_);
  iVMD2JMSDn_branch = tree->GetBranch("iVMD2JMSDn");
  if (iVMD2JMSDn_branch) iVMD2JMSDn_branch->SetAddress(&iVMD2JMSDn_);
  iVMD3JMSDn_branch = tree->GetBranch("iVMD3JMSDn");
  if (iVMD3JMSDn_branch) iVMD3JMSDn_branch->SetAddress(&iVMD3JMSDn_);
  iVMD4JMSDn_branch = tree->GetBranch("iVMD4JMSDn");
  if (iVMD4JMSDn_branch) iVMD4JMSDn_branch->SetAddress(&iVMD4JMSDn_);
  iWMD0JMSDn_branch = tree->GetBranch("iWMD0JMSDn");
  if (iWMD0JMSDn_branch) iWMD0JMSDn_branch->SetAddress(&iWMD0JMSDn_);
  iWMD1JMSDn_branch = tree->GetBranch("iWMD1JMSDn");
  if (iWMD1JMSDn_branch) iWMD1JMSDn_branch->SetAddress(&iWMD1JMSDn_);
  iWMD2JMSDn_branch = tree->GetBranch("iWMD2JMSDn");
  if (iWMD2JMSDn_branch) iWMD2JMSDn_branch->SetAddress(&iWMD2JMSDn_);
  iWMD3JMSDn_branch = tree->GetBranch("iWMD3JMSDn");
  if (iWMD3JMSDn_branch) iWMD3JMSDn_branch->SetAddress(&iWMD3JMSDn_);
  iWMD4JMSDn_branch = tree->GetBranch("iWMD4JMSDn");
  if (iWMD4JMSDn_branch) iWMD4JMSDn_branch->SetAddress(&iWMD4JMSDn_);
  NJJMSDn_branch = tree->GetBranch("NJJMSDn");
  if (NJJMSDn_branch) NJJMSDn_branch->SetAddress(&NJJMSDn_);
  NbLooseJMSDn_branch = tree->GetBranch("NbLooseJMSDn");
  if (NbLooseJMSDn_branch) NbLooseJMSDn_branch->SetAddress(&NbLooseJMSDn_);
  NbMediumJMSDn_branch = tree->GetBranch("NbMediumJMSDn");
  if (NbMediumJMSDn_branch) NbMediumJMSDn_branch->SetAddress(&NbMediumJMSDn_);
  NbTightJMSDn_branch = tree->GetBranch("NbTightJMSDn");
  if (NbTightJMSDn_branch) NbTightJMSDn_branch->SetAddress(&NbTightJMSDn_);
  NoORNbLooseJMSDn_branch = tree->GetBranch("NoORNbLooseJMSDn");
  if (NoORNbLooseJMSDn_branch) NoORNbLooseJMSDn_branch->SetAddress(&NoORNbLooseJMSDn_);
  NoORNbMediumJMSDn_branch = tree->GetBranch("NoORNbMediumJMSDn");
  if (NoORNbMediumJMSDn_branch) NoORNbMediumJMSDn_branch->SetAddress(&NoORNbMediumJMSDn_);
  NoORNbTightJMSDn_branch = tree->GetBranch("NoORNbTightJMSDn");
  if (NoORNbTightJMSDn_branch) NoORNbTightJMSDn_branch->SetAddress(&NoORNbTightJMSDn_);
  NQJGenJMSDn_branch = tree->GetBranch("NQJGenJMSDn");
  if (NQJGenJMSDn_branch) NQJGenJMSDn_branch->SetAddress(&NQJGenJMSDn_);
  NBJGenJMSDn_branch = tree->GetBranch("NBJGenJMSDn");
  if (NBJGenJMSDn_branch) NBJGenJMSDn_branch->SetAddress(&NBJGenJMSDn_);
  NLJGenJMSDn_branch = tree->GetBranch("NLJGenJMSDn");
  if (NLJGenJMSDn_branch) NLJGenJMSDn_branch->SetAddress(&NLJGenJMSDn_);
  MVVXJMSDn_branch = tree->GetBranch("MVVXJMSDn");
  if (MVVXJMSDn_branch) MVVXJMSDn_branch->SetAddress(&MVVXJMSDn_);
  PtVVXJMSDn_branch = tree->GetBranch("PtVVXJMSDn");
  if (PtVVXJMSDn_branch) PtVVXJMSDn_branch->SetAddress(&PtVVXJMSDn_);
  HTJMSDn_branch = tree->GetBranch("HTJMSDn");
  if (HTJMSDn_branch) HTJMSDn_branch->SetAddress(&HTJMSDn_);
  HTJJMSDn_branch = tree->GetBranch("HTJJMSDn");
  if (HTJJMSDn_branch) HTJJMSDn_branch->SetAddress(&HTJJMSDn_);
  HTFJJMSDn_branch = tree->GetBranch("HTFJJMSDn");
  if (HTFJJMSDn_branch) HTFJJMSDn_branch->SetAddress(&HTFJJMSDn_);
  SumPtFJJMSDn_branch = tree->GetBranch("SumPtFJJMSDn");
  if (SumPtFJJMSDn_branch) SumPtFJJMSDn_branch->SetAddress(&SumPtFJJMSDn_);
  SumPtJJMSDn_branch = tree->GetBranch("SumPtJJMSDn");
  if (SumPtJJMSDn_branch) SumPtJJMSDn_branch->SetAddress(&SumPtJJMSDn_);
  NFJJMRUp_branch = tree->GetBranch("NFJJMRUp");
  if (NFJJMRUp_branch) NFJJMRUp_branch->SetAddress(&NFJJMRUp_);
  VMD0JMRUp_branch = tree->GetBranch("VMD0JMRUp");
  if (VMD0JMRUp_branch) VMD0JMRUp_branch->SetAddress(&VMD0JMRUp_);
  VMD1JMRUp_branch = tree->GetBranch("VMD1JMRUp");
  if (VMD1JMRUp_branch) VMD1JMRUp_branch->SetAddress(&VMD1JMRUp_);
  VMD2JMRUp_branch = tree->GetBranch("VMD2JMRUp");
  if (VMD2JMRUp_branch) VMD2JMRUp_branch->SetAddress(&VMD2JMRUp_);
  VMD3JMRUp_branch = tree->GetBranch("VMD3JMRUp");
  if (VMD3JMRUp_branch) VMD3JMRUp_branch->SetAddress(&VMD3JMRUp_);
  VMD4JMRUp_branch = tree->GetBranch("VMD4JMRUp");
  if (VMD4JMRUp_branch) VMD4JMRUp_branch->SetAddress(&VMD4JMRUp_);
  WMD0JMRUp_branch = tree->GetBranch("WMD0JMRUp");
  if (WMD0JMRUp_branch) WMD0JMRUp_branch->SetAddress(&WMD0JMRUp_);
  WMD1JMRUp_branch = tree->GetBranch("WMD1JMRUp");
  if (WMD1JMRUp_branch) WMD1JMRUp_branch->SetAddress(&WMD1JMRUp_);
  WMD2JMRUp_branch = tree->GetBranch("WMD2JMRUp");
  if (WMD2JMRUp_branch) WMD2JMRUp_branch->SetAddress(&WMD2JMRUp_);
  WMD3JMRUp_branch = tree->GetBranch("WMD3JMRUp");
  if (WMD3JMRUp_branch) WMD3JMRUp_branch->SetAddress(&WMD3JMRUp_);
  WMD4JMRUp_branch = tree->GetBranch("WMD4JMRUp");
  if (WMD4JMRUp_branch) WMD4JMRUp_branch->SetAddress(&WMD4JMRUp_);
  NQGen0JMRUp_branch = tree->GetBranch("NQGen0JMRUp");
  if (NQGen0JMRUp_branch) NQGen0JMRUp_branch->SetAddress(&NQGen0JMRUp_);
  NQGen1JMRUp_branch = tree->GetBranch("NQGen1JMRUp");
  if (NQGen1JMRUp_branch) NQGen1JMRUp_branch->SetAddress(&NQGen1JMRUp_);
  NQGen2JMRUp_branch = tree->GetBranch("NQGen2JMRUp");
  if (NQGen2JMRUp_branch) NQGen2JMRUp_branch->SetAddress(&NQGen2JMRUp_);
  NQGen3JMRUp_branch = tree->GetBranch("NQGen3JMRUp");
  if (NQGen3JMRUp_branch) NQGen3JMRUp_branch->SetAddress(&NQGen3JMRUp_);
  NQGen4JMRUp_branch = tree->GetBranch("NQGen4JMRUp");
  if (NQGen4JMRUp_branch) NQGen4JMRUp_branch->SetAddress(&NQGen4JMRUp_);
  NBGen0JMRUp_branch = tree->GetBranch("NBGen0JMRUp");
  if (NBGen0JMRUp_branch) NBGen0JMRUp_branch->SetAddress(&NBGen0JMRUp_);
  NBGen1JMRUp_branch = tree->GetBranch("NBGen1JMRUp");
  if (NBGen1JMRUp_branch) NBGen1JMRUp_branch->SetAddress(&NBGen1JMRUp_);
  NBGen2JMRUp_branch = tree->GetBranch("NBGen2JMRUp");
  if (NBGen2JMRUp_branch) NBGen2JMRUp_branch->SetAddress(&NBGen2JMRUp_);
  NBGen3JMRUp_branch = tree->GetBranch("NBGen3JMRUp");
  if (NBGen3JMRUp_branch) NBGen3JMRUp_branch->SetAddress(&NBGen3JMRUp_);
  NBGen4JMRUp_branch = tree->GetBranch("NBGen4JMRUp");
  if (NBGen4JMRUp_branch) NBGen4JMRUp_branch->SetAddress(&NBGen4JMRUp_);
  NLGen0JMRUp_branch = tree->GetBranch("NLGen0JMRUp");
  if (NLGen0JMRUp_branch) NLGen0JMRUp_branch->SetAddress(&NLGen0JMRUp_);
  NLGen1JMRUp_branch = tree->GetBranch("NLGen1JMRUp");
  if (NLGen1JMRUp_branch) NLGen1JMRUp_branch->SetAddress(&NLGen1JMRUp_);
  NLGen2JMRUp_branch = tree->GetBranch("NLGen2JMRUp");
  if (NLGen2JMRUp_branch) NLGen2JMRUp_branch->SetAddress(&NLGen2JMRUp_);
  NLGen3JMRUp_branch = tree->GetBranch("NLGen3JMRUp");
  if (NLGen3JMRUp_branch) NLGen3JMRUp_branch->SetAddress(&NLGen3JMRUp_);
  NLGen4JMRUp_branch = tree->GetBranch("NLGen4JMRUp");
  if (NLGen4JMRUp_branch) NLGen4JMRUp_branch->SetAddress(&NLGen4JMRUp_);
  NVQGen0JMRUp_branch = tree->GetBranch("NVQGen0JMRUp");
  if (NVQGen0JMRUp_branch) NVQGen0JMRUp_branch->SetAddress(&NVQGen0JMRUp_);
  NVQGen1JMRUp_branch = tree->GetBranch("NVQGen1JMRUp");
  if (NVQGen1JMRUp_branch) NVQGen1JMRUp_branch->SetAddress(&NVQGen1JMRUp_);
  NVQGen2JMRUp_branch = tree->GetBranch("NVQGen2JMRUp");
  if (NVQGen2JMRUp_branch) NVQGen2JMRUp_branch->SetAddress(&NVQGen2JMRUp_);
  NVQGen3JMRUp_branch = tree->GetBranch("NVQGen3JMRUp");
  if (NVQGen3JMRUp_branch) NVQGen3JMRUp_branch->SetAddress(&NVQGen3JMRUp_);
  NVQGen4JMRUp_branch = tree->GetBranch("NVQGen4JMRUp");
  if (NVQGen4JMRUp_branch) NVQGen4JMRUp_branch->SetAddress(&NVQGen4JMRUp_);
  NiFJJMRUp_branch = tree->GetBranch("NiFJJMRUp");
  if (NiFJJMRUp_branch) NiFJJMRUp_branch->SetAddress(&NiFJJMRUp_);
  iVMD0JMRUp_branch = tree->GetBranch("iVMD0JMRUp");
  if (iVMD0JMRUp_branch) iVMD0JMRUp_branch->SetAddress(&iVMD0JMRUp_);
  iVMD1JMRUp_branch = tree->GetBranch("iVMD1JMRUp");
  if (iVMD1JMRUp_branch) iVMD1JMRUp_branch->SetAddress(&iVMD1JMRUp_);
  iVMD2JMRUp_branch = tree->GetBranch("iVMD2JMRUp");
  if (iVMD2JMRUp_branch) iVMD2JMRUp_branch->SetAddress(&iVMD2JMRUp_);
  iVMD3JMRUp_branch = tree->GetBranch("iVMD3JMRUp");
  if (iVMD3JMRUp_branch) iVMD3JMRUp_branch->SetAddress(&iVMD3JMRUp_);
  iVMD4JMRUp_branch = tree->GetBranch("iVMD4JMRUp");
  if (iVMD4JMRUp_branch) iVMD4JMRUp_branch->SetAddress(&iVMD4JMRUp_);
  iWMD0JMRUp_branch = tree->GetBranch("iWMD0JMRUp");
  if (iWMD0JMRUp_branch) iWMD0JMRUp_branch->SetAddress(&iWMD0JMRUp_);
  iWMD1JMRUp_branch = tree->GetBranch("iWMD1JMRUp");
  if (iWMD1JMRUp_branch) iWMD1JMRUp_branch->SetAddress(&iWMD1JMRUp_);
  iWMD2JMRUp_branch = tree->GetBranch("iWMD2JMRUp");
  if (iWMD2JMRUp_branch) iWMD2JMRUp_branch->SetAddress(&iWMD2JMRUp_);
  iWMD3JMRUp_branch = tree->GetBranch("iWMD3JMRUp");
  if (iWMD3JMRUp_branch) iWMD3JMRUp_branch->SetAddress(&iWMD3JMRUp_);
  iWMD4JMRUp_branch = tree->GetBranch("iWMD4JMRUp");
  if (iWMD4JMRUp_branch) iWMD4JMRUp_branch->SetAddress(&iWMD4JMRUp_);
  NJJMRUp_branch = tree->GetBranch("NJJMRUp");
  if (NJJMRUp_branch) NJJMRUp_branch->SetAddress(&NJJMRUp_);
  NbLooseJMRUp_branch = tree->GetBranch("NbLooseJMRUp");
  if (NbLooseJMRUp_branch) NbLooseJMRUp_branch->SetAddress(&NbLooseJMRUp_);
  NbMediumJMRUp_branch = tree->GetBranch("NbMediumJMRUp");
  if (NbMediumJMRUp_branch) NbMediumJMRUp_branch->SetAddress(&NbMediumJMRUp_);
  NbTightJMRUp_branch = tree->GetBranch("NbTightJMRUp");
  if (NbTightJMRUp_branch) NbTightJMRUp_branch->SetAddress(&NbTightJMRUp_);
  NoORNbLooseJMRUp_branch = tree->GetBranch("NoORNbLooseJMRUp");
  if (NoORNbLooseJMRUp_branch) NoORNbLooseJMRUp_branch->SetAddress(&NoORNbLooseJMRUp_);
  NoORNbMediumJMRUp_branch = tree->GetBranch("NoORNbMediumJMRUp");
  if (NoORNbMediumJMRUp_branch) NoORNbMediumJMRUp_branch->SetAddress(&NoORNbMediumJMRUp_);
  NoORNbTightJMRUp_branch = tree->GetBranch("NoORNbTightJMRUp");
  if (NoORNbTightJMRUp_branch) NoORNbTightJMRUp_branch->SetAddress(&NoORNbTightJMRUp_);
  NQJGenJMRUp_branch = tree->GetBranch("NQJGenJMRUp");
  if (NQJGenJMRUp_branch) NQJGenJMRUp_branch->SetAddress(&NQJGenJMRUp_);
  NBJGenJMRUp_branch = tree->GetBranch("NBJGenJMRUp");
  if (NBJGenJMRUp_branch) NBJGenJMRUp_branch->SetAddress(&NBJGenJMRUp_);
  NLJGenJMRUp_branch = tree->GetBranch("NLJGenJMRUp");
  if (NLJGenJMRUp_branch) NLJGenJMRUp_branch->SetAddress(&NLJGenJMRUp_);
  MVVXJMRUp_branch = tree->GetBranch("MVVXJMRUp");
  if (MVVXJMRUp_branch) MVVXJMRUp_branch->SetAddress(&MVVXJMRUp_);
  PtVVXJMRUp_branch = tree->GetBranch("PtVVXJMRUp");
  if (PtVVXJMRUp_branch) PtVVXJMRUp_branch->SetAddress(&PtVVXJMRUp_);
  HTJMRUp_branch = tree->GetBranch("HTJMRUp");
  if (HTJMRUp_branch) HTJMRUp_branch->SetAddress(&HTJMRUp_);
  HTJJMRUp_branch = tree->GetBranch("HTJJMRUp");
  if (HTJJMRUp_branch) HTJJMRUp_branch->SetAddress(&HTJJMRUp_);
  HTFJJMRUp_branch = tree->GetBranch("HTFJJMRUp");
  if (HTFJJMRUp_branch) HTFJJMRUp_branch->SetAddress(&HTFJJMRUp_);
  SumPtFJJMRUp_branch = tree->GetBranch("SumPtFJJMRUp");
  if (SumPtFJJMRUp_branch) SumPtFJJMRUp_branch->SetAddress(&SumPtFJJMRUp_);
  SumPtJJMRUp_branch = tree->GetBranch("SumPtJJMRUp");
  if (SumPtJJMRUp_branch) SumPtJJMRUp_branch->SetAddress(&SumPtJJMRUp_);
  NFJJMRDn_branch = tree->GetBranch("NFJJMRDn");
  if (NFJJMRDn_branch) NFJJMRDn_branch->SetAddress(&NFJJMRDn_);
  VMD0JMRDn_branch = tree->GetBranch("VMD0JMRDn");
  if (VMD0JMRDn_branch) VMD0JMRDn_branch->SetAddress(&VMD0JMRDn_);
  VMD1JMRDn_branch = tree->GetBranch("VMD1JMRDn");
  if (VMD1JMRDn_branch) VMD1JMRDn_branch->SetAddress(&VMD1JMRDn_);
  VMD2JMRDn_branch = tree->GetBranch("VMD2JMRDn");
  if (VMD2JMRDn_branch) VMD2JMRDn_branch->SetAddress(&VMD2JMRDn_);
  VMD3JMRDn_branch = tree->GetBranch("VMD3JMRDn");
  if (VMD3JMRDn_branch) VMD3JMRDn_branch->SetAddress(&VMD3JMRDn_);
  VMD4JMRDn_branch = tree->GetBranch("VMD4JMRDn");
  if (VMD4JMRDn_branch) VMD4JMRDn_branch->SetAddress(&VMD4JMRDn_);
  WMD0JMRDn_branch = tree->GetBranch("WMD0JMRDn");
  if (WMD0JMRDn_branch) WMD0JMRDn_branch->SetAddress(&WMD0JMRDn_);
  WMD1JMRDn_branch = tree->GetBranch("WMD1JMRDn");
  if (WMD1JMRDn_branch) WMD1JMRDn_branch->SetAddress(&WMD1JMRDn_);
  WMD2JMRDn_branch = tree->GetBranch("WMD2JMRDn");
  if (WMD2JMRDn_branch) WMD2JMRDn_branch->SetAddress(&WMD2JMRDn_);
  WMD3JMRDn_branch = tree->GetBranch("WMD3JMRDn");
  if (WMD3JMRDn_branch) WMD3JMRDn_branch->SetAddress(&WMD3JMRDn_);
  WMD4JMRDn_branch = tree->GetBranch("WMD4JMRDn");
  if (WMD4JMRDn_branch) WMD4JMRDn_branch->SetAddress(&WMD4JMRDn_);
  NQGen0JMRDn_branch = tree->GetBranch("NQGen0JMRDn");
  if (NQGen0JMRDn_branch) NQGen0JMRDn_branch->SetAddress(&NQGen0JMRDn_);
  NQGen1JMRDn_branch = tree->GetBranch("NQGen1JMRDn");
  if (NQGen1JMRDn_branch) NQGen1JMRDn_branch->SetAddress(&NQGen1JMRDn_);
  NQGen2JMRDn_branch = tree->GetBranch("NQGen2JMRDn");
  if (NQGen2JMRDn_branch) NQGen2JMRDn_branch->SetAddress(&NQGen2JMRDn_);
  NQGen3JMRDn_branch = tree->GetBranch("NQGen3JMRDn");
  if (NQGen3JMRDn_branch) NQGen3JMRDn_branch->SetAddress(&NQGen3JMRDn_);
  NQGen4JMRDn_branch = tree->GetBranch("NQGen4JMRDn");
  if (NQGen4JMRDn_branch) NQGen4JMRDn_branch->SetAddress(&NQGen4JMRDn_);
  NBGen0JMRDn_branch = tree->GetBranch("NBGen0JMRDn");
  if (NBGen0JMRDn_branch) NBGen0JMRDn_branch->SetAddress(&NBGen0JMRDn_);
  NBGen1JMRDn_branch = tree->GetBranch("NBGen1JMRDn");
  if (NBGen1JMRDn_branch) NBGen1JMRDn_branch->SetAddress(&NBGen1JMRDn_);
  NBGen2JMRDn_branch = tree->GetBranch("NBGen2JMRDn");
  if (NBGen2JMRDn_branch) NBGen2JMRDn_branch->SetAddress(&NBGen2JMRDn_);
  NBGen3JMRDn_branch = tree->GetBranch("NBGen3JMRDn");
  if (NBGen3JMRDn_branch) NBGen3JMRDn_branch->SetAddress(&NBGen3JMRDn_);
  NBGen4JMRDn_branch = tree->GetBranch("NBGen4JMRDn");
  if (NBGen4JMRDn_branch) NBGen4JMRDn_branch->SetAddress(&NBGen4JMRDn_);
  NLGen0JMRDn_branch = tree->GetBranch("NLGen0JMRDn");
  if (NLGen0JMRDn_branch) NLGen0JMRDn_branch->SetAddress(&NLGen0JMRDn_);
  NLGen1JMRDn_branch = tree->GetBranch("NLGen1JMRDn");
  if (NLGen1JMRDn_branch) NLGen1JMRDn_branch->SetAddress(&NLGen1JMRDn_);
  NLGen2JMRDn_branch = tree->GetBranch("NLGen2JMRDn");
  if (NLGen2JMRDn_branch) NLGen2JMRDn_branch->SetAddress(&NLGen2JMRDn_);
  NLGen3JMRDn_branch = tree->GetBranch("NLGen3JMRDn");
  if (NLGen3JMRDn_branch) NLGen3JMRDn_branch->SetAddress(&NLGen3JMRDn_);
  NLGen4JMRDn_branch = tree->GetBranch("NLGen4JMRDn");
  if (NLGen4JMRDn_branch) NLGen4JMRDn_branch->SetAddress(&NLGen4JMRDn_);
  NVQGen0JMRDn_branch = tree->GetBranch("NVQGen0JMRDn");
  if (NVQGen0JMRDn_branch) NVQGen0JMRDn_branch->SetAddress(&NVQGen0JMRDn_);
  NVQGen1JMRDn_branch = tree->GetBranch("NVQGen1JMRDn");
  if (NVQGen1JMRDn_branch) NVQGen1JMRDn_branch->SetAddress(&NVQGen1JMRDn_);
  NVQGen2JMRDn_branch = tree->GetBranch("NVQGen2JMRDn");
  if (NVQGen2JMRDn_branch) NVQGen2JMRDn_branch->SetAddress(&NVQGen2JMRDn_);
  NVQGen3JMRDn_branch = tree->GetBranch("NVQGen3JMRDn");
  if (NVQGen3JMRDn_branch) NVQGen3JMRDn_branch->SetAddress(&NVQGen3JMRDn_);
  NVQGen4JMRDn_branch = tree->GetBranch("NVQGen4JMRDn");
  if (NVQGen4JMRDn_branch) NVQGen4JMRDn_branch->SetAddress(&NVQGen4JMRDn_);
  NiFJJMRDn_branch = tree->GetBranch("NiFJJMRDn");
  if (NiFJJMRDn_branch) NiFJJMRDn_branch->SetAddress(&NiFJJMRDn_);
  iVMD0JMRDn_branch = tree->GetBranch("iVMD0JMRDn");
  if (iVMD0JMRDn_branch) iVMD0JMRDn_branch->SetAddress(&iVMD0JMRDn_);
  iVMD1JMRDn_branch = tree->GetBranch("iVMD1JMRDn");
  if (iVMD1JMRDn_branch) iVMD1JMRDn_branch->SetAddress(&iVMD1JMRDn_);
  iVMD2JMRDn_branch = tree->GetBranch("iVMD2JMRDn");
  if (iVMD2JMRDn_branch) iVMD2JMRDn_branch->SetAddress(&iVMD2JMRDn_);
  iVMD3JMRDn_branch = tree->GetBranch("iVMD3JMRDn");
  if (iVMD3JMRDn_branch) iVMD3JMRDn_branch->SetAddress(&iVMD3JMRDn_);
  iVMD4JMRDn_branch = tree->GetBranch("iVMD4JMRDn");
  if (iVMD4JMRDn_branch) iVMD4JMRDn_branch->SetAddress(&iVMD4JMRDn_);
  iWMD0JMRDn_branch = tree->GetBranch("iWMD0JMRDn");
  if (iWMD0JMRDn_branch) iWMD0JMRDn_branch->SetAddress(&iWMD0JMRDn_);
  iWMD1JMRDn_branch = tree->GetBranch("iWMD1JMRDn");
  if (iWMD1JMRDn_branch) iWMD1JMRDn_branch->SetAddress(&iWMD1JMRDn_);
  iWMD2JMRDn_branch = tree->GetBranch("iWMD2JMRDn");
  if (iWMD2JMRDn_branch) iWMD2JMRDn_branch->SetAddress(&iWMD2JMRDn_);
  iWMD3JMRDn_branch = tree->GetBranch("iWMD3JMRDn");
  if (iWMD3JMRDn_branch) iWMD3JMRDn_branch->SetAddress(&iWMD3JMRDn_);
  iWMD4JMRDn_branch = tree->GetBranch("iWMD4JMRDn");
  if (iWMD4JMRDn_branch) iWMD4JMRDn_branch->SetAddress(&iWMD4JMRDn_);
  NJJMRDn_branch = tree->GetBranch("NJJMRDn");
  if (NJJMRDn_branch) NJJMRDn_branch->SetAddress(&NJJMRDn_);
  NbLooseJMRDn_branch = tree->GetBranch("NbLooseJMRDn");
  if (NbLooseJMRDn_branch) NbLooseJMRDn_branch->SetAddress(&NbLooseJMRDn_);
  NbMediumJMRDn_branch = tree->GetBranch("NbMediumJMRDn");
  if (NbMediumJMRDn_branch) NbMediumJMRDn_branch->SetAddress(&NbMediumJMRDn_);
  NbTightJMRDn_branch = tree->GetBranch("NbTightJMRDn");
  if (NbTightJMRDn_branch) NbTightJMRDn_branch->SetAddress(&NbTightJMRDn_);
  NoORNbLooseJMRDn_branch = tree->GetBranch("NoORNbLooseJMRDn");
  if (NoORNbLooseJMRDn_branch) NoORNbLooseJMRDn_branch->SetAddress(&NoORNbLooseJMRDn_);
  NoORNbMediumJMRDn_branch = tree->GetBranch("NoORNbMediumJMRDn");
  if (NoORNbMediumJMRDn_branch) NoORNbMediumJMRDn_branch->SetAddress(&NoORNbMediumJMRDn_);
  NoORNbTightJMRDn_branch = tree->GetBranch("NoORNbTightJMRDn");
  if (NoORNbTightJMRDn_branch) NoORNbTightJMRDn_branch->SetAddress(&NoORNbTightJMRDn_);
  NQJGenJMRDn_branch = tree->GetBranch("NQJGenJMRDn");
  if (NQJGenJMRDn_branch) NQJGenJMRDn_branch->SetAddress(&NQJGenJMRDn_);
  NBJGenJMRDn_branch = tree->GetBranch("NBJGenJMRDn");
  if (NBJGenJMRDn_branch) NBJGenJMRDn_branch->SetAddress(&NBJGenJMRDn_);
  NLJGenJMRDn_branch = tree->GetBranch("NLJGenJMRDn");
  if (NLJGenJMRDn_branch) NLJGenJMRDn_branch->SetAddress(&NLJGenJMRDn_);
  MVVXJMRDn_branch = tree->GetBranch("MVVXJMRDn");
  if (MVVXJMRDn_branch) MVVXJMRDn_branch->SetAddress(&MVVXJMRDn_);
  PtVVXJMRDn_branch = tree->GetBranch("PtVVXJMRDn");
  if (PtVVXJMRDn_branch) PtVVXJMRDn_branch->SetAddress(&PtVVXJMRDn_);
  HTJMRDn_branch = tree->GetBranch("HTJMRDn");
  if (HTJMRDn_branch) HTJMRDn_branch->SetAddress(&HTJMRDn_);
  HTJJMRDn_branch = tree->GetBranch("HTJJMRDn");
  if (HTJJMRDn_branch) HTJJMRDn_branch->SetAddress(&HTJJMRDn_);
  HTFJJMRDn_branch = tree->GetBranch("HTFJJMRDn");
  if (HTFJJMRDn_branch) HTFJJMRDn_branch->SetAddress(&HTFJJMRDn_);
  SumPtFJJMRDn_branch = tree->GetBranch("SumPtFJJMRDn");
  if (SumPtFJJMRDn_branch) SumPtFJJMRDn_branch->SetAddress(&SumPtFJJMRDn_);
  SumPtJJMRDn_branch = tree->GetBranch("SumPtJJMRDn");
  if (SumPtJJMRDn_branch) SumPtJJMRDn_branch->SetAddress(&SumPtJJMRDn_);
  NFJjesAbsoluteStatup_branch = tree->GetBranch("NFJjesAbsoluteStatup");
  if (NFJjesAbsoluteStatup_branch) NFJjesAbsoluteStatup_branch->SetAddress(&NFJjesAbsoluteStatup_);
  VMD0jesAbsoluteStatup_branch = tree->GetBranch("VMD0jesAbsoluteStatup");
  if (VMD0jesAbsoluteStatup_branch) VMD0jesAbsoluteStatup_branch->SetAddress(&VMD0jesAbsoluteStatup_);
  VMD1jesAbsoluteStatup_branch = tree->GetBranch("VMD1jesAbsoluteStatup");
  if (VMD1jesAbsoluteStatup_branch) VMD1jesAbsoluteStatup_branch->SetAddress(&VMD1jesAbsoluteStatup_);
  VMD2jesAbsoluteStatup_branch = tree->GetBranch("VMD2jesAbsoluteStatup");
  if (VMD2jesAbsoluteStatup_branch) VMD2jesAbsoluteStatup_branch->SetAddress(&VMD2jesAbsoluteStatup_);
  VMD3jesAbsoluteStatup_branch = tree->GetBranch("VMD3jesAbsoluteStatup");
  if (VMD3jesAbsoluteStatup_branch) VMD3jesAbsoluteStatup_branch->SetAddress(&VMD3jesAbsoluteStatup_);
  VMD4jesAbsoluteStatup_branch = tree->GetBranch("VMD4jesAbsoluteStatup");
  if (VMD4jesAbsoluteStatup_branch) VMD4jesAbsoluteStatup_branch->SetAddress(&VMD4jesAbsoluteStatup_);
  WMD0jesAbsoluteStatup_branch = tree->GetBranch("WMD0jesAbsoluteStatup");
  if (WMD0jesAbsoluteStatup_branch) WMD0jesAbsoluteStatup_branch->SetAddress(&WMD0jesAbsoluteStatup_);
  WMD1jesAbsoluteStatup_branch = tree->GetBranch("WMD1jesAbsoluteStatup");
  if (WMD1jesAbsoluteStatup_branch) WMD1jesAbsoluteStatup_branch->SetAddress(&WMD1jesAbsoluteStatup_);
  WMD2jesAbsoluteStatup_branch = tree->GetBranch("WMD2jesAbsoluteStatup");
  if (WMD2jesAbsoluteStatup_branch) WMD2jesAbsoluteStatup_branch->SetAddress(&WMD2jesAbsoluteStatup_);
  WMD3jesAbsoluteStatup_branch = tree->GetBranch("WMD3jesAbsoluteStatup");
  if (WMD3jesAbsoluteStatup_branch) WMD3jesAbsoluteStatup_branch->SetAddress(&WMD3jesAbsoluteStatup_);
  WMD4jesAbsoluteStatup_branch = tree->GetBranch("WMD4jesAbsoluteStatup");
  if (WMD4jesAbsoluteStatup_branch) WMD4jesAbsoluteStatup_branch->SetAddress(&WMD4jesAbsoluteStatup_);
  NQGen0jesAbsoluteStatup_branch = tree->GetBranch("NQGen0jesAbsoluteStatup");
  if (NQGen0jesAbsoluteStatup_branch) NQGen0jesAbsoluteStatup_branch->SetAddress(&NQGen0jesAbsoluteStatup_);
  NQGen1jesAbsoluteStatup_branch = tree->GetBranch("NQGen1jesAbsoluteStatup");
  if (NQGen1jesAbsoluteStatup_branch) NQGen1jesAbsoluteStatup_branch->SetAddress(&NQGen1jesAbsoluteStatup_);
  NQGen2jesAbsoluteStatup_branch = tree->GetBranch("NQGen2jesAbsoluteStatup");
  if (NQGen2jesAbsoluteStatup_branch) NQGen2jesAbsoluteStatup_branch->SetAddress(&NQGen2jesAbsoluteStatup_);
  NQGen3jesAbsoluteStatup_branch = tree->GetBranch("NQGen3jesAbsoluteStatup");
  if (NQGen3jesAbsoluteStatup_branch) NQGen3jesAbsoluteStatup_branch->SetAddress(&NQGen3jesAbsoluteStatup_);
  NQGen4jesAbsoluteStatup_branch = tree->GetBranch("NQGen4jesAbsoluteStatup");
  if (NQGen4jesAbsoluteStatup_branch) NQGen4jesAbsoluteStatup_branch->SetAddress(&NQGen4jesAbsoluteStatup_);
  NBGen0jesAbsoluteStatup_branch = tree->GetBranch("NBGen0jesAbsoluteStatup");
  if (NBGen0jesAbsoluteStatup_branch) NBGen0jesAbsoluteStatup_branch->SetAddress(&NBGen0jesAbsoluteStatup_);
  NBGen1jesAbsoluteStatup_branch = tree->GetBranch("NBGen1jesAbsoluteStatup");
  if (NBGen1jesAbsoluteStatup_branch) NBGen1jesAbsoluteStatup_branch->SetAddress(&NBGen1jesAbsoluteStatup_);
  NBGen2jesAbsoluteStatup_branch = tree->GetBranch("NBGen2jesAbsoluteStatup");
  if (NBGen2jesAbsoluteStatup_branch) NBGen2jesAbsoluteStatup_branch->SetAddress(&NBGen2jesAbsoluteStatup_);
  NBGen3jesAbsoluteStatup_branch = tree->GetBranch("NBGen3jesAbsoluteStatup");
  if (NBGen3jesAbsoluteStatup_branch) NBGen3jesAbsoluteStatup_branch->SetAddress(&NBGen3jesAbsoluteStatup_);
  NBGen4jesAbsoluteStatup_branch = tree->GetBranch("NBGen4jesAbsoluteStatup");
  if (NBGen4jesAbsoluteStatup_branch) NBGen4jesAbsoluteStatup_branch->SetAddress(&NBGen4jesAbsoluteStatup_);
  NLGen0jesAbsoluteStatup_branch = tree->GetBranch("NLGen0jesAbsoluteStatup");
  if (NLGen0jesAbsoluteStatup_branch) NLGen0jesAbsoluteStatup_branch->SetAddress(&NLGen0jesAbsoluteStatup_);
  NLGen1jesAbsoluteStatup_branch = tree->GetBranch("NLGen1jesAbsoluteStatup");
  if (NLGen1jesAbsoluteStatup_branch) NLGen1jesAbsoluteStatup_branch->SetAddress(&NLGen1jesAbsoluteStatup_);
  NLGen2jesAbsoluteStatup_branch = tree->GetBranch("NLGen2jesAbsoluteStatup");
  if (NLGen2jesAbsoluteStatup_branch) NLGen2jesAbsoluteStatup_branch->SetAddress(&NLGen2jesAbsoluteStatup_);
  NLGen3jesAbsoluteStatup_branch = tree->GetBranch("NLGen3jesAbsoluteStatup");
  if (NLGen3jesAbsoluteStatup_branch) NLGen3jesAbsoluteStatup_branch->SetAddress(&NLGen3jesAbsoluteStatup_);
  NLGen4jesAbsoluteStatup_branch = tree->GetBranch("NLGen4jesAbsoluteStatup");
  if (NLGen4jesAbsoluteStatup_branch) NLGen4jesAbsoluteStatup_branch->SetAddress(&NLGen4jesAbsoluteStatup_);
  NVQGen0jesAbsoluteStatup_branch = tree->GetBranch("NVQGen0jesAbsoluteStatup");
  if (NVQGen0jesAbsoluteStatup_branch) NVQGen0jesAbsoluteStatup_branch->SetAddress(&NVQGen0jesAbsoluteStatup_);
  NVQGen1jesAbsoluteStatup_branch = tree->GetBranch("NVQGen1jesAbsoluteStatup");
  if (NVQGen1jesAbsoluteStatup_branch) NVQGen1jesAbsoluteStatup_branch->SetAddress(&NVQGen1jesAbsoluteStatup_);
  NVQGen2jesAbsoluteStatup_branch = tree->GetBranch("NVQGen2jesAbsoluteStatup");
  if (NVQGen2jesAbsoluteStatup_branch) NVQGen2jesAbsoluteStatup_branch->SetAddress(&NVQGen2jesAbsoluteStatup_);
  NVQGen3jesAbsoluteStatup_branch = tree->GetBranch("NVQGen3jesAbsoluteStatup");
  if (NVQGen3jesAbsoluteStatup_branch) NVQGen3jesAbsoluteStatup_branch->SetAddress(&NVQGen3jesAbsoluteStatup_);
  NVQGen4jesAbsoluteStatup_branch = tree->GetBranch("NVQGen4jesAbsoluteStatup");
  if (NVQGen4jesAbsoluteStatup_branch) NVQGen4jesAbsoluteStatup_branch->SetAddress(&NVQGen4jesAbsoluteStatup_);
  NiFJjesAbsoluteStatup_branch = tree->GetBranch("NiFJjesAbsoluteStatup");
  if (NiFJjesAbsoluteStatup_branch) NiFJjesAbsoluteStatup_branch->SetAddress(&NiFJjesAbsoluteStatup_);
  iVMD0jesAbsoluteStatup_branch = tree->GetBranch("iVMD0jesAbsoluteStatup");
  if (iVMD0jesAbsoluteStatup_branch) iVMD0jesAbsoluteStatup_branch->SetAddress(&iVMD0jesAbsoluteStatup_);
  iVMD1jesAbsoluteStatup_branch = tree->GetBranch("iVMD1jesAbsoluteStatup");
  if (iVMD1jesAbsoluteStatup_branch) iVMD1jesAbsoluteStatup_branch->SetAddress(&iVMD1jesAbsoluteStatup_);
  iVMD2jesAbsoluteStatup_branch = tree->GetBranch("iVMD2jesAbsoluteStatup");
  if (iVMD2jesAbsoluteStatup_branch) iVMD2jesAbsoluteStatup_branch->SetAddress(&iVMD2jesAbsoluteStatup_);
  iVMD3jesAbsoluteStatup_branch = tree->GetBranch("iVMD3jesAbsoluteStatup");
  if (iVMD3jesAbsoluteStatup_branch) iVMD3jesAbsoluteStatup_branch->SetAddress(&iVMD3jesAbsoluteStatup_);
  iVMD4jesAbsoluteStatup_branch = tree->GetBranch("iVMD4jesAbsoluteStatup");
  if (iVMD4jesAbsoluteStatup_branch) iVMD4jesAbsoluteStatup_branch->SetAddress(&iVMD4jesAbsoluteStatup_);
  iWMD0jesAbsoluteStatup_branch = tree->GetBranch("iWMD0jesAbsoluteStatup");
  if (iWMD0jesAbsoluteStatup_branch) iWMD0jesAbsoluteStatup_branch->SetAddress(&iWMD0jesAbsoluteStatup_);
  iWMD1jesAbsoluteStatup_branch = tree->GetBranch("iWMD1jesAbsoluteStatup");
  if (iWMD1jesAbsoluteStatup_branch) iWMD1jesAbsoluteStatup_branch->SetAddress(&iWMD1jesAbsoluteStatup_);
  iWMD2jesAbsoluteStatup_branch = tree->GetBranch("iWMD2jesAbsoluteStatup");
  if (iWMD2jesAbsoluteStatup_branch) iWMD2jesAbsoluteStatup_branch->SetAddress(&iWMD2jesAbsoluteStatup_);
  iWMD3jesAbsoluteStatup_branch = tree->GetBranch("iWMD3jesAbsoluteStatup");
  if (iWMD3jesAbsoluteStatup_branch) iWMD3jesAbsoluteStatup_branch->SetAddress(&iWMD3jesAbsoluteStatup_);
  iWMD4jesAbsoluteStatup_branch = tree->GetBranch("iWMD4jesAbsoluteStatup");
  if (iWMD4jesAbsoluteStatup_branch) iWMD4jesAbsoluteStatup_branch->SetAddress(&iWMD4jesAbsoluteStatup_);
  NJjesAbsoluteStatup_branch = tree->GetBranch("NJjesAbsoluteStatup");
  if (NJjesAbsoluteStatup_branch) NJjesAbsoluteStatup_branch->SetAddress(&NJjesAbsoluteStatup_);
  NbLoosejesAbsoluteStatup_branch = tree->GetBranch("NbLoosejesAbsoluteStatup");
  if (NbLoosejesAbsoluteStatup_branch) NbLoosejesAbsoluteStatup_branch->SetAddress(&NbLoosejesAbsoluteStatup_);
  NbMediumjesAbsoluteStatup_branch = tree->GetBranch("NbMediumjesAbsoluteStatup");
  if (NbMediumjesAbsoluteStatup_branch) NbMediumjesAbsoluteStatup_branch->SetAddress(&NbMediumjesAbsoluteStatup_);
  NbTightjesAbsoluteStatup_branch = tree->GetBranch("NbTightjesAbsoluteStatup");
  if (NbTightjesAbsoluteStatup_branch) NbTightjesAbsoluteStatup_branch->SetAddress(&NbTightjesAbsoluteStatup_);
  NoORNbLoosejesAbsoluteStatup_branch = tree->GetBranch("NoORNbLoosejesAbsoluteStatup");
  if (NoORNbLoosejesAbsoluteStatup_branch) NoORNbLoosejesAbsoluteStatup_branch->SetAddress(&NoORNbLoosejesAbsoluteStatup_);
  NoORNbMediumjesAbsoluteStatup_branch = tree->GetBranch("NoORNbMediumjesAbsoluteStatup");
  if (NoORNbMediumjesAbsoluteStatup_branch) NoORNbMediumjesAbsoluteStatup_branch->SetAddress(&NoORNbMediumjesAbsoluteStatup_);
  NoORNbTightjesAbsoluteStatup_branch = tree->GetBranch("NoORNbTightjesAbsoluteStatup");
  if (NoORNbTightjesAbsoluteStatup_branch) NoORNbTightjesAbsoluteStatup_branch->SetAddress(&NoORNbTightjesAbsoluteStatup_);
  NQJGenjesAbsoluteStatup_branch = tree->GetBranch("NQJGenjesAbsoluteStatup");
  if (NQJGenjesAbsoluteStatup_branch) NQJGenjesAbsoluteStatup_branch->SetAddress(&NQJGenjesAbsoluteStatup_);
  NBJGenjesAbsoluteStatup_branch = tree->GetBranch("NBJGenjesAbsoluteStatup");
  if (NBJGenjesAbsoluteStatup_branch) NBJGenjesAbsoluteStatup_branch->SetAddress(&NBJGenjesAbsoluteStatup_);
  NLJGenjesAbsoluteStatup_branch = tree->GetBranch("NLJGenjesAbsoluteStatup");
  if (NLJGenjesAbsoluteStatup_branch) NLJGenjesAbsoluteStatup_branch->SetAddress(&NLJGenjesAbsoluteStatup_);
  MVVXjesAbsoluteStatup_branch = tree->GetBranch("MVVXjesAbsoluteStatup");
  if (MVVXjesAbsoluteStatup_branch) MVVXjesAbsoluteStatup_branch->SetAddress(&MVVXjesAbsoluteStatup_);
  PtVVXjesAbsoluteStatup_branch = tree->GetBranch("PtVVXjesAbsoluteStatup");
  if (PtVVXjesAbsoluteStatup_branch) PtVVXjesAbsoluteStatup_branch->SetAddress(&PtVVXjesAbsoluteStatup_);
  HTjesAbsoluteStatup_branch = tree->GetBranch("HTjesAbsoluteStatup");
  if (HTjesAbsoluteStatup_branch) HTjesAbsoluteStatup_branch->SetAddress(&HTjesAbsoluteStatup_);
  HTJjesAbsoluteStatup_branch = tree->GetBranch("HTJjesAbsoluteStatup");
  if (HTJjesAbsoluteStatup_branch) HTJjesAbsoluteStatup_branch->SetAddress(&HTJjesAbsoluteStatup_);
  HTFJjesAbsoluteStatup_branch = tree->GetBranch("HTFJjesAbsoluteStatup");
  if (HTFJjesAbsoluteStatup_branch) HTFJjesAbsoluteStatup_branch->SetAddress(&HTFJjesAbsoluteStatup_);
  SumPtFJjesAbsoluteStatup_branch = tree->GetBranch("SumPtFJjesAbsoluteStatup");
  if (SumPtFJjesAbsoluteStatup_branch) SumPtFJjesAbsoluteStatup_branch->SetAddress(&SumPtFJjesAbsoluteStatup_);
  SumPtJjesAbsoluteStatup_branch = tree->GetBranch("SumPtJjesAbsoluteStatup");
  if (SumPtJjesAbsoluteStatup_branch) SumPtJjesAbsoluteStatup_branch->SetAddress(&SumPtJjesAbsoluteStatup_);
  NFJjesAbsoluteStatdn_branch = tree->GetBranch("NFJjesAbsoluteStatdn");
  if (NFJjesAbsoluteStatdn_branch) NFJjesAbsoluteStatdn_branch->SetAddress(&NFJjesAbsoluteStatdn_);
  VMD0jesAbsoluteStatdn_branch = tree->GetBranch("VMD0jesAbsoluteStatdn");
  if (VMD0jesAbsoluteStatdn_branch) VMD0jesAbsoluteStatdn_branch->SetAddress(&VMD0jesAbsoluteStatdn_);
  VMD1jesAbsoluteStatdn_branch = tree->GetBranch("VMD1jesAbsoluteStatdn");
  if (VMD1jesAbsoluteStatdn_branch) VMD1jesAbsoluteStatdn_branch->SetAddress(&VMD1jesAbsoluteStatdn_);
  VMD2jesAbsoluteStatdn_branch = tree->GetBranch("VMD2jesAbsoluteStatdn");
  if (VMD2jesAbsoluteStatdn_branch) VMD2jesAbsoluteStatdn_branch->SetAddress(&VMD2jesAbsoluteStatdn_);
  VMD3jesAbsoluteStatdn_branch = tree->GetBranch("VMD3jesAbsoluteStatdn");
  if (VMD3jesAbsoluteStatdn_branch) VMD3jesAbsoluteStatdn_branch->SetAddress(&VMD3jesAbsoluteStatdn_);
  VMD4jesAbsoluteStatdn_branch = tree->GetBranch("VMD4jesAbsoluteStatdn");
  if (VMD4jesAbsoluteStatdn_branch) VMD4jesAbsoluteStatdn_branch->SetAddress(&VMD4jesAbsoluteStatdn_);
  WMD0jesAbsoluteStatdn_branch = tree->GetBranch("WMD0jesAbsoluteStatdn");
  if (WMD0jesAbsoluteStatdn_branch) WMD0jesAbsoluteStatdn_branch->SetAddress(&WMD0jesAbsoluteStatdn_);
  WMD1jesAbsoluteStatdn_branch = tree->GetBranch("WMD1jesAbsoluteStatdn");
  if (WMD1jesAbsoluteStatdn_branch) WMD1jesAbsoluteStatdn_branch->SetAddress(&WMD1jesAbsoluteStatdn_);
  WMD2jesAbsoluteStatdn_branch = tree->GetBranch("WMD2jesAbsoluteStatdn");
  if (WMD2jesAbsoluteStatdn_branch) WMD2jesAbsoluteStatdn_branch->SetAddress(&WMD2jesAbsoluteStatdn_);
  WMD3jesAbsoluteStatdn_branch = tree->GetBranch("WMD3jesAbsoluteStatdn");
  if (WMD3jesAbsoluteStatdn_branch) WMD3jesAbsoluteStatdn_branch->SetAddress(&WMD3jesAbsoluteStatdn_);
  WMD4jesAbsoluteStatdn_branch = tree->GetBranch("WMD4jesAbsoluteStatdn");
  if (WMD4jesAbsoluteStatdn_branch) WMD4jesAbsoluteStatdn_branch->SetAddress(&WMD4jesAbsoluteStatdn_);
  NQGen0jesAbsoluteStatdn_branch = tree->GetBranch("NQGen0jesAbsoluteStatdn");
  if (NQGen0jesAbsoluteStatdn_branch) NQGen0jesAbsoluteStatdn_branch->SetAddress(&NQGen0jesAbsoluteStatdn_);
  NQGen1jesAbsoluteStatdn_branch = tree->GetBranch("NQGen1jesAbsoluteStatdn");
  if (NQGen1jesAbsoluteStatdn_branch) NQGen1jesAbsoluteStatdn_branch->SetAddress(&NQGen1jesAbsoluteStatdn_);
  NQGen2jesAbsoluteStatdn_branch = tree->GetBranch("NQGen2jesAbsoluteStatdn");
  if (NQGen2jesAbsoluteStatdn_branch) NQGen2jesAbsoluteStatdn_branch->SetAddress(&NQGen2jesAbsoluteStatdn_);
  NQGen3jesAbsoluteStatdn_branch = tree->GetBranch("NQGen3jesAbsoluteStatdn");
  if (NQGen3jesAbsoluteStatdn_branch) NQGen3jesAbsoluteStatdn_branch->SetAddress(&NQGen3jesAbsoluteStatdn_);
  NQGen4jesAbsoluteStatdn_branch = tree->GetBranch("NQGen4jesAbsoluteStatdn");
  if (NQGen4jesAbsoluteStatdn_branch) NQGen4jesAbsoluteStatdn_branch->SetAddress(&NQGen4jesAbsoluteStatdn_);
  NBGen0jesAbsoluteStatdn_branch = tree->GetBranch("NBGen0jesAbsoluteStatdn");
  if (NBGen0jesAbsoluteStatdn_branch) NBGen0jesAbsoluteStatdn_branch->SetAddress(&NBGen0jesAbsoluteStatdn_);
  NBGen1jesAbsoluteStatdn_branch = tree->GetBranch("NBGen1jesAbsoluteStatdn");
  if (NBGen1jesAbsoluteStatdn_branch) NBGen1jesAbsoluteStatdn_branch->SetAddress(&NBGen1jesAbsoluteStatdn_);
  NBGen2jesAbsoluteStatdn_branch = tree->GetBranch("NBGen2jesAbsoluteStatdn");
  if (NBGen2jesAbsoluteStatdn_branch) NBGen2jesAbsoluteStatdn_branch->SetAddress(&NBGen2jesAbsoluteStatdn_);
  NBGen3jesAbsoluteStatdn_branch = tree->GetBranch("NBGen3jesAbsoluteStatdn");
  if (NBGen3jesAbsoluteStatdn_branch) NBGen3jesAbsoluteStatdn_branch->SetAddress(&NBGen3jesAbsoluteStatdn_);
  NBGen4jesAbsoluteStatdn_branch = tree->GetBranch("NBGen4jesAbsoluteStatdn");
  if (NBGen4jesAbsoluteStatdn_branch) NBGen4jesAbsoluteStatdn_branch->SetAddress(&NBGen4jesAbsoluteStatdn_);
  NLGen0jesAbsoluteStatdn_branch = tree->GetBranch("NLGen0jesAbsoluteStatdn");
  if (NLGen0jesAbsoluteStatdn_branch) NLGen0jesAbsoluteStatdn_branch->SetAddress(&NLGen0jesAbsoluteStatdn_);
  NLGen1jesAbsoluteStatdn_branch = tree->GetBranch("NLGen1jesAbsoluteStatdn");
  if (NLGen1jesAbsoluteStatdn_branch) NLGen1jesAbsoluteStatdn_branch->SetAddress(&NLGen1jesAbsoluteStatdn_);
  NLGen2jesAbsoluteStatdn_branch = tree->GetBranch("NLGen2jesAbsoluteStatdn");
  if (NLGen2jesAbsoluteStatdn_branch) NLGen2jesAbsoluteStatdn_branch->SetAddress(&NLGen2jesAbsoluteStatdn_);
  NLGen3jesAbsoluteStatdn_branch = tree->GetBranch("NLGen3jesAbsoluteStatdn");
  if (NLGen3jesAbsoluteStatdn_branch) NLGen3jesAbsoluteStatdn_branch->SetAddress(&NLGen3jesAbsoluteStatdn_);
  NLGen4jesAbsoluteStatdn_branch = tree->GetBranch("NLGen4jesAbsoluteStatdn");
  if (NLGen4jesAbsoluteStatdn_branch) NLGen4jesAbsoluteStatdn_branch->SetAddress(&NLGen4jesAbsoluteStatdn_);
  NVQGen0jesAbsoluteStatdn_branch = tree->GetBranch("NVQGen0jesAbsoluteStatdn");
  if (NVQGen0jesAbsoluteStatdn_branch) NVQGen0jesAbsoluteStatdn_branch->SetAddress(&NVQGen0jesAbsoluteStatdn_);
  NVQGen1jesAbsoluteStatdn_branch = tree->GetBranch("NVQGen1jesAbsoluteStatdn");
  if (NVQGen1jesAbsoluteStatdn_branch) NVQGen1jesAbsoluteStatdn_branch->SetAddress(&NVQGen1jesAbsoluteStatdn_);
  NVQGen2jesAbsoluteStatdn_branch = tree->GetBranch("NVQGen2jesAbsoluteStatdn");
  if (NVQGen2jesAbsoluteStatdn_branch) NVQGen2jesAbsoluteStatdn_branch->SetAddress(&NVQGen2jesAbsoluteStatdn_);
  NVQGen3jesAbsoluteStatdn_branch = tree->GetBranch("NVQGen3jesAbsoluteStatdn");
  if (NVQGen3jesAbsoluteStatdn_branch) NVQGen3jesAbsoluteStatdn_branch->SetAddress(&NVQGen3jesAbsoluteStatdn_);
  NVQGen4jesAbsoluteStatdn_branch = tree->GetBranch("NVQGen4jesAbsoluteStatdn");
  if (NVQGen4jesAbsoluteStatdn_branch) NVQGen4jesAbsoluteStatdn_branch->SetAddress(&NVQGen4jesAbsoluteStatdn_);
  NiFJjesAbsoluteStatdn_branch = tree->GetBranch("NiFJjesAbsoluteStatdn");
  if (NiFJjesAbsoluteStatdn_branch) NiFJjesAbsoluteStatdn_branch->SetAddress(&NiFJjesAbsoluteStatdn_);
  iVMD0jesAbsoluteStatdn_branch = tree->GetBranch("iVMD0jesAbsoluteStatdn");
  if (iVMD0jesAbsoluteStatdn_branch) iVMD0jesAbsoluteStatdn_branch->SetAddress(&iVMD0jesAbsoluteStatdn_);
  iVMD1jesAbsoluteStatdn_branch = tree->GetBranch("iVMD1jesAbsoluteStatdn");
  if (iVMD1jesAbsoluteStatdn_branch) iVMD1jesAbsoluteStatdn_branch->SetAddress(&iVMD1jesAbsoluteStatdn_);
  iVMD2jesAbsoluteStatdn_branch = tree->GetBranch("iVMD2jesAbsoluteStatdn");
  if (iVMD2jesAbsoluteStatdn_branch) iVMD2jesAbsoluteStatdn_branch->SetAddress(&iVMD2jesAbsoluteStatdn_);
  iVMD3jesAbsoluteStatdn_branch = tree->GetBranch("iVMD3jesAbsoluteStatdn");
  if (iVMD3jesAbsoluteStatdn_branch) iVMD3jesAbsoluteStatdn_branch->SetAddress(&iVMD3jesAbsoluteStatdn_);
  iVMD4jesAbsoluteStatdn_branch = tree->GetBranch("iVMD4jesAbsoluteStatdn");
  if (iVMD4jesAbsoluteStatdn_branch) iVMD4jesAbsoluteStatdn_branch->SetAddress(&iVMD4jesAbsoluteStatdn_);
  iWMD0jesAbsoluteStatdn_branch = tree->GetBranch("iWMD0jesAbsoluteStatdn");
  if (iWMD0jesAbsoluteStatdn_branch) iWMD0jesAbsoluteStatdn_branch->SetAddress(&iWMD0jesAbsoluteStatdn_);
  iWMD1jesAbsoluteStatdn_branch = tree->GetBranch("iWMD1jesAbsoluteStatdn");
  if (iWMD1jesAbsoluteStatdn_branch) iWMD1jesAbsoluteStatdn_branch->SetAddress(&iWMD1jesAbsoluteStatdn_);
  iWMD2jesAbsoluteStatdn_branch = tree->GetBranch("iWMD2jesAbsoluteStatdn");
  if (iWMD2jesAbsoluteStatdn_branch) iWMD2jesAbsoluteStatdn_branch->SetAddress(&iWMD2jesAbsoluteStatdn_);
  iWMD3jesAbsoluteStatdn_branch = tree->GetBranch("iWMD3jesAbsoluteStatdn");
  if (iWMD3jesAbsoluteStatdn_branch) iWMD3jesAbsoluteStatdn_branch->SetAddress(&iWMD3jesAbsoluteStatdn_);
  iWMD4jesAbsoluteStatdn_branch = tree->GetBranch("iWMD4jesAbsoluteStatdn");
  if (iWMD4jesAbsoluteStatdn_branch) iWMD4jesAbsoluteStatdn_branch->SetAddress(&iWMD4jesAbsoluteStatdn_);
  NJjesAbsoluteStatdn_branch = tree->GetBranch("NJjesAbsoluteStatdn");
  if (NJjesAbsoluteStatdn_branch) NJjesAbsoluteStatdn_branch->SetAddress(&NJjesAbsoluteStatdn_);
  NbLoosejesAbsoluteStatdn_branch = tree->GetBranch("NbLoosejesAbsoluteStatdn");
  if (NbLoosejesAbsoluteStatdn_branch) NbLoosejesAbsoluteStatdn_branch->SetAddress(&NbLoosejesAbsoluteStatdn_);
  NbMediumjesAbsoluteStatdn_branch = tree->GetBranch("NbMediumjesAbsoluteStatdn");
  if (NbMediumjesAbsoluteStatdn_branch) NbMediumjesAbsoluteStatdn_branch->SetAddress(&NbMediumjesAbsoluteStatdn_);
  NbTightjesAbsoluteStatdn_branch = tree->GetBranch("NbTightjesAbsoluteStatdn");
  if (NbTightjesAbsoluteStatdn_branch) NbTightjesAbsoluteStatdn_branch->SetAddress(&NbTightjesAbsoluteStatdn_);
  NoORNbLoosejesAbsoluteStatdn_branch = tree->GetBranch("NoORNbLoosejesAbsoluteStatdn");
  if (NoORNbLoosejesAbsoluteStatdn_branch) NoORNbLoosejesAbsoluteStatdn_branch->SetAddress(&NoORNbLoosejesAbsoluteStatdn_);
  NoORNbMediumjesAbsoluteStatdn_branch = tree->GetBranch("NoORNbMediumjesAbsoluteStatdn");
  if (NoORNbMediumjesAbsoluteStatdn_branch) NoORNbMediumjesAbsoluteStatdn_branch->SetAddress(&NoORNbMediumjesAbsoluteStatdn_);
  NoORNbTightjesAbsoluteStatdn_branch = tree->GetBranch("NoORNbTightjesAbsoluteStatdn");
  if (NoORNbTightjesAbsoluteStatdn_branch) NoORNbTightjesAbsoluteStatdn_branch->SetAddress(&NoORNbTightjesAbsoluteStatdn_);
  NQJGenjesAbsoluteStatdn_branch = tree->GetBranch("NQJGenjesAbsoluteStatdn");
  if (NQJGenjesAbsoluteStatdn_branch) NQJGenjesAbsoluteStatdn_branch->SetAddress(&NQJGenjesAbsoluteStatdn_);
  NBJGenjesAbsoluteStatdn_branch = tree->GetBranch("NBJGenjesAbsoluteStatdn");
  if (NBJGenjesAbsoluteStatdn_branch) NBJGenjesAbsoluteStatdn_branch->SetAddress(&NBJGenjesAbsoluteStatdn_);
  NLJGenjesAbsoluteStatdn_branch = tree->GetBranch("NLJGenjesAbsoluteStatdn");
  if (NLJGenjesAbsoluteStatdn_branch) NLJGenjesAbsoluteStatdn_branch->SetAddress(&NLJGenjesAbsoluteStatdn_);
  MVVXjesAbsoluteStatdn_branch = tree->GetBranch("MVVXjesAbsoluteStatdn");
  if (MVVXjesAbsoluteStatdn_branch) MVVXjesAbsoluteStatdn_branch->SetAddress(&MVVXjesAbsoluteStatdn_);
  PtVVXjesAbsoluteStatdn_branch = tree->GetBranch("PtVVXjesAbsoluteStatdn");
  if (PtVVXjesAbsoluteStatdn_branch) PtVVXjesAbsoluteStatdn_branch->SetAddress(&PtVVXjesAbsoluteStatdn_);
  HTjesAbsoluteStatdn_branch = tree->GetBranch("HTjesAbsoluteStatdn");
  if (HTjesAbsoluteStatdn_branch) HTjesAbsoluteStatdn_branch->SetAddress(&HTjesAbsoluteStatdn_);
  HTJjesAbsoluteStatdn_branch = tree->GetBranch("HTJjesAbsoluteStatdn");
  if (HTJjesAbsoluteStatdn_branch) HTJjesAbsoluteStatdn_branch->SetAddress(&HTJjesAbsoluteStatdn_);
  HTFJjesAbsoluteStatdn_branch = tree->GetBranch("HTFJjesAbsoluteStatdn");
  if (HTFJjesAbsoluteStatdn_branch) HTFJjesAbsoluteStatdn_branch->SetAddress(&HTFJjesAbsoluteStatdn_);
  SumPtFJjesAbsoluteStatdn_branch = tree->GetBranch("SumPtFJjesAbsoluteStatdn");
  if (SumPtFJjesAbsoluteStatdn_branch) SumPtFJjesAbsoluteStatdn_branch->SetAddress(&SumPtFJjesAbsoluteStatdn_);
  SumPtJjesAbsoluteStatdn_branch = tree->GetBranch("SumPtJjesAbsoluteStatdn");
  if (SumPtJjesAbsoluteStatdn_branch) SumPtJjesAbsoluteStatdn_branch->SetAddress(&SumPtJjesAbsoluteStatdn_);
  NFJjesAbsoluteScaleup_branch = tree->GetBranch("NFJjesAbsoluteScaleup");
  if (NFJjesAbsoluteScaleup_branch) NFJjesAbsoluteScaleup_branch->SetAddress(&NFJjesAbsoluteScaleup_);
  VMD0jesAbsoluteScaleup_branch = tree->GetBranch("VMD0jesAbsoluteScaleup");
  if (VMD0jesAbsoluteScaleup_branch) VMD0jesAbsoluteScaleup_branch->SetAddress(&VMD0jesAbsoluteScaleup_);
  VMD1jesAbsoluteScaleup_branch = tree->GetBranch("VMD1jesAbsoluteScaleup");
  if (VMD1jesAbsoluteScaleup_branch) VMD1jesAbsoluteScaleup_branch->SetAddress(&VMD1jesAbsoluteScaleup_);
  VMD2jesAbsoluteScaleup_branch = tree->GetBranch("VMD2jesAbsoluteScaleup");
  if (VMD2jesAbsoluteScaleup_branch) VMD2jesAbsoluteScaleup_branch->SetAddress(&VMD2jesAbsoluteScaleup_);
  VMD3jesAbsoluteScaleup_branch = tree->GetBranch("VMD3jesAbsoluteScaleup");
  if (VMD3jesAbsoluteScaleup_branch) VMD3jesAbsoluteScaleup_branch->SetAddress(&VMD3jesAbsoluteScaleup_);
  VMD4jesAbsoluteScaleup_branch = tree->GetBranch("VMD4jesAbsoluteScaleup");
  if (VMD4jesAbsoluteScaleup_branch) VMD4jesAbsoluteScaleup_branch->SetAddress(&VMD4jesAbsoluteScaleup_);
  WMD0jesAbsoluteScaleup_branch = tree->GetBranch("WMD0jesAbsoluteScaleup");
  if (WMD0jesAbsoluteScaleup_branch) WMD0jesAbsoluteScaleup_branch->SetAddress(&WMD0jesAbsoluteScaleup_);
  WMD1jesAbsoluteScaleup_branch = tree->GetBranch("WMD1jesAbsoluteScaleup");
  if (WMD1jesAbsoluteScaleup_branch) WMD1jesAbsoluteScaleup_branch->SetAddress(&WMD1jesAbsoluteScaleup_);
  WMD2jesAbsoluteScaleup_branch = tree->GetBranch("WMD2jesAbsoluteScaleup");
  if (WMD2jesAbsoluteScaleup_branch) WMD2jesAbsoluteScaleup_branch->SetAddress(&WMD2jesAbsoluteScaleup_);
  WMD3jesAbsoluteScaleup_branch = tree->GetBranch("WMD3jesAbsoluteScaleup");
  if (WMD3jesAbsoluteScaleup_branch) WMD3jesAbsoluteScaleup_branch->SetAddress(&WMD3jesAbsoluteScaleup_);
  WMD4jesAbsoluteScaleup_branch = tree->GetBranch("WMD4jesAbsoluteScaleup");
  if (WMD4jesAbsoluteScaleup_branch) WMD4jesAbsoluteScaleup_branch->SetAddress(&WMD4jesAbsoluteScaleup_);
  NQGen0jesAbsoluteScaleup_branch = tree->GetBranch("NQGen0jesAbsoluteScaleup");
  if (NQGen0jesAbsoluteScaleup_branch) NQGen0jesAbsoluteScaleup_branch->SetAddress(&NQGen0jesAbsoluteScaleup_);
  NQGen1jesAbsoluteScaleup_branch = tree->GetBranch("NQGen1jesAbsoluteScaleup");
  if (NQGen1jesAbsoluteScaleup_branch) NQGen1jesAbsoluteScaleup_branch->SetAddress(&NQGen1jesAbsoluteScaleup_);
  NQGen2jesAbsoluteScaleup_branch = tree->GetBranch("NQGen2jesAbsoluteScaleup");
  if (NQGen2jesAbsoluteScaleup_branch) NQGen2jesAbsoluteScaleup_branch->SetAddress(&NQGen2jesAbsoluteScaleup_);
  NQGen3jesAbsoluteScaleup_branch = tree->GetBranch("NQGen3jesAbsoluteScaleup");
  if (NQGen3jesAbsoluteScaleup_branch) NQGen3jesAbsoluteScaleup_branch->SetAddress(&NQGen3jesAbsoluteScaleup_);
  NQGen4jesAbsoluteScaleup_branch = tree->GetBranch("NQGen4jesAbsoluteScaleup");
  if (NQGen4jesAbsoluteScaleup_branch) NQGen4jesAbsoluteScaleup_branch->SetAddress(&NQGen4jesAbsoluteScaleup_);
  NBGen0jesAbsoluteScaleup_branch = tree->GetBranch("NBGen0jesAbsoluteScaleup");
  if (NBGen0jesAbsoluteScaleup_branch) NBGen0jesAbsoluteScaleup_branch->SetAddress(&NBGen0jesAbsoluteScaleup_);
  NBGen1jesAbsoluteScaleup_branch = tree->GetBranch("NBGen1jesAbsoluteScaleup");
  if (NBGen1jesAbsoluteScaleup_branch) NBGen1jesAbsoluteScaleup_branch->SetAddress(&NBGen1jesAbsoluteScaleup_);
  NBGen2jesAbsoluteScaleup_branch = tree->GetBranch("NBGen2jesAbsoluteScaleup");
  if (NBGen2jesAbsoluteScaleup_branch) NBGen2jesAbsoluteScaleup_branch->SetAddress(&NBGen2jesAbsoluteScaleup_);
  NBGen3jesAbsoluteScaleup_branch = tree->GetBranch("NBGen3jesAbsoluteScaleup");
  if (NBGen3jesAbsoluteScaleup_branch) NBGen3jesAbsoluteScaleup_branch->SetAddress(&NBGen3jesAbsoluteScaleup_);
  NBGen4jesAbsoluteScaleup_branch = tree->GetBranch("NBGen4jesAbsoluteScaleup");
  if (NBGen4jesAbsoluteScaleup_branch) NBGen4jesAbsoluteScaleup_branch->SetAddress(&NBGen4jesAbsoluteScaleup_);
  NLGen0jesAbsoluteScaleup_branch = tree->GetBranch("NLGen0jesAbsoluteScaleup");
  if (NLGen0jesAbsoluteScaleup_branch) NLGen0jesAbsoluteScaleup_branch->SetAddress(&NLGen0jesAbsoluteScaleup_);
  NLGen1jesAbsoluteScaleup_branch = tree->GetBranch("NLGen1jesAbsoluteScaleup");
  if (NLGen1jesAbsoluteScaleup_branch) NLGen1jesAbsoluteScaleup_branch->SetAddress(&NLGen1jesAbsoluteScaleup_);
  NLGen2jesAbsoluteScaleup_branch = tree->GetBranch("NLGen2jesAbsoluteScaleup");
  if (NLGen2jesAbsoluteScaleup_branch) NLGen2jesAbsoluteScaleup_branch->SetAddress(&NLGen2jesAbsoluteScaleup_);
  NLGen3jesAbsoluteScaleup_branch = tree->GetBranch("NLGen3jesAbsoluteScaleup");
  if (NLGen3jesAbsoluteScaleup_branch) NLGen3jesAbsoluteScaleup_branch->SetAddress(&NLGen3jesAbsoluteScaleup_);
  NLGen4jesAbsoluteScaleup_branch = tree->GetBranch("NLGen4jesAbsoluteScaleup");
  if (NLGen4jesAbsoluteScaleup_branch) NLGen4jesAbsoluteScaleup_branch->SetAddress(&NLGen4jesAbsoluteScaleup_);
  NVQGen0jesAbsoluteScaleup_branch = tree->GetBranch("NVQGen0jesAbsoluteScaleup");
  if (NVQGen0jesAbsoluteScaleup_branch) NVQGen0jesAbsoluteScaleup_branch->SetAddress(&NVQGen0jesAbsoluteScaleup_);
  NVQGen1jesAbsoluteScaleup_branch = tree->GetBranch("NVQGen1jesAbsoluteScaleup");
  if (NVQGen1jesAbsoluteScaleup_branch) NVQGen1jesAbsoluteScaleup_branch->SetAddress(&NVQGen1jesAbsoluteScaleup_);
  NVQGen2jesAbsoluteScaleup_branch = tree->GetBranch("NVQGen2jesAbsoluteScaleup");
  if (NVQGen2jesAbsoluteScaleup_branch) NVQGen2jesAbsoluteScaleup_branch->SetAddress(&NVQGen2jesAbsoluteScaleup_);
  NVQGen3jesAbsoluteScaleup_branch = tree->GetBranch("NVQGen3jesAbsoluteScaleup");
  if (NVQGen3jesAbsoluteScaleup_branch) NVQGen3jesAbsoluteScaleup_branch->SetAddress(&NVQGen3jesAbsoluteScaleup_);
  NVQGen4jesAbsoluteScaleup_branch = tree->GetBranch("NVQGen4jesAbsoluteScaleup");
  if (NVQGen4jesAbsoluteScaleup_branch) NVQGen4jesAbsoluteScaleup_branch->SetAddress(&NVQGen4jesAbsoluteScaleup_);
  NiFJjesAbsoluteScaleup_branch = tree->GetBranch("NiFJjesAbsoluteScaleup");
  if (NiFJjesAbsoluteScaleup_branch) NiFJjesAbsoluteScaleup_branch->SetAddress(&NiFJjesAbsoluteScaleup_);
  iVMD0jesAbsoluteScaleup_branch = tree->GetBranch("iVMD0jesAbsoluteScaleup");
  if (iVMD0jesAbsoluteScaleup_branch) iVMD0jesAbsoluteScaleup_branch->SetAddress(&iVMD0jesAbsoluteScaleup_);
  iVMD1jesAbsoluteScaleup_branch = tree->GetBranch("iVMD1jesAbsoluteScaleup");
  if (iVMD1jesAbsoluteScaleup_branch) iVMD1jesAbsoluteScaleup_branch->SetAddress(&iVMD1jesAbsoluteScaleup_);
  iVMD2jesAbsoluteScaleup_branch = tree->GetBranch("iVMD2jesAbsoluteScaleup");
  if (iVMD2jesAbsoluteScaleup_branch) iVMD2jesAbsoluteScaleup_branch->SetAddress(&iVMD2jesAbsoluteScaleup_);
  iVMD3jesAbsoluteScaleup_branch = tree->GetBranch("iVMD3jesAbsoluteScaleup");
  if (iVMD3jesAbsoluteScaleup_branch) iVMD3jesAbsoluteScaleup_branch->SetAddress(&iVMD3jesAbsoluteScaleup_);
  iVMD4jesAbsoluteScaleup_branch = tree->GetBranch("iVMD4jesAbsoluteScaleup");
  if (iVMD4jesAbsoluteScaleup_branch) iVMD4jesAbsoluteScaleup_branch->SetAddress(&iVMD4jesAbsoluteScaleup_);
  iWMD0jesAbsoluteScaleup_branch = tree->GetBranch("iWMD0jesAbsoluteScaleup");
  if (iWMD0jesAbsoluteScaleup_branch) iWMD0jesAbsoluteScaleup_branch->SetAddress(&iWMD0jesAbsoluteScaleup_);
  iWMD1jesAbsoluteScaleup_branch = tree->GetBranch("iWMD1jesAbsoluteScaleup");
  if (iWMD1jesAbsoluteScaleup_branch) iWMD1jesAbsoluteScaleup_branch->SetAddress(&iWMD1jesAbsoluteScaleup_);
  iWMD2jesAbsoluteScaleup_branch = tree->GetBranch("iWMD2jesAbsoluteScaleup");
  if (iWMD2jesAbsoluteScaleup_branch) iWMD2jesAbsoluteScaleup_branch->SetAddress(&iWMD2jesAbsoluteScaleup_);
  iWMD3jesAbsoluteScaleup_branch = tree->GetBranch("iWMD3jesAbsoluteScaleup");
  if (iWMD3jesAbsoluteScaleup_branch) iWMD3jesAbsoluteScaleup_branch->SetAddress(&iWMD3jesAbsoluteScaleup_);
  iWMD4jesAbsoluteScaleup_branch = tree->GetBranch("iWMD4jesAbsoluteScaleup");
  if (iWMD4jesAbsoluteScaleup_branch) iWMD4jesAbsoluteScaleup_branch->SetAddress(&iWMD4jesAbsoluteScaleup_);
  NJjesAbsoluteScaleup_branch = tree->GetBranch("NJjesAbsoluteScaleup");
  if (NJjesAbsoluteScaleup_branch) NJjesAbsoluteScaleup_branch->SetAddress(&NJjesAbsoluteScaleup_);
  NbLoosejesAbsoluteScaleup_branch = tree->GetBranch("NbLoosejesAbsoluteScaleup");
  if (NbLoosejesAbsoluteScaleup_branch) NbLoosejesAbsoluteScaleup_branch->SetAddress(&NbLoosejesAbsoluteScaleup_);
  NbMediumjesAbsoluteScaleup_branch = tree->GetBranch("NbMediumjesAbsoluteScaleup");
  if (NbMediumjesAbsoluteScaleup_branch) NbMediumjesAbsoluteScaleup_branch->SetAddress(&NbMediumjesAbsoluteScaleup_);
  NbTightjesAbsoluteScaleup_branch = tree->GetBranch("NbTightjesAbsoluteScaleup");
  if (NbTightjesAbsoluteScaleup_branch) NbTightjesAbsoluteScaleup_branch->SetAddress(&NbTightjesAbsoluteScaleup_);
  NoORNbLoosejesAbsoluteScaleup_branch = tree->GetBranch("NoORNbLoosejesAbsoluteScaleup");
  if (NoORNbLoosejesAbsoluteScaleup_branch) NoORNbLoosejesAbsoluteScaleup_branch->SetAddress(&NoORNbLoosejesAbsoluteScaleup_);
  NoORNbMediumjesAbsoluteScaleup_branch = tree->GetBranch("NoORNbMediumjesAbsoluteScaleup");
  if (NoORNbMediumjesAbsoluteScaleup_branch) NoORNbMediumjesAbsoluteScaleup_branch->SetAddress(&NoORNbMediumjesAbsoluteScaleup_);
  NoORNbTightjesAbsoluteScaleup_branch = tree->GetBranch("NoORNbTightjesAbsoluteScaleup");
  if (NoORNbTightjesAbsoluteScaleup_branch) NoORNbTightjesAbsoluteScaleup_branch->SetAddress(&NoORNbTightjesAbsoluteScaleup_);
  NQJGenjesAbsoluteScaleup_branch = tree->GetBranch("NQJGenjesAbsoluteScaleup");
  if (NQJGenjesAbsoluteScaleup_branch) NQJGenjesAbsoluteScaleup_branch->SetAddress(&NQJGenjesAbsoluteScaleup_);
  NBJGenjesAbsoluteScaleup_branch = tree->GetBranch("NBJGenjesAbsoluteScaleup");
  if (NBJGenjesAbsoluteScaleup_branch) NBJGenjesAbsoluteScaleup_branch->SetAddress(&NBJGenjesAbsoluteScaleup_);
  NLJGenjesAbsoluteScaleup_branch = tree->GetBranch("NLJGenjesAbsoluteScaleup");
  if (NLJGenjesAbsoluteScaleup_branch) NLJGenjesAbsoluteScaleup_branch->SetAddress(&NLJGenjesAbsoluteScaleup_);
  MVVXjesAbsoluteScaleup_branch = tree->GetBranch("MVVXjesAbsoluteScaleup");
  if (MVVXjesAbsoluteScaleup_branch) MVVXjesAbsoluteScaleup_branch->SetAddress(&MVVXjesAbsoluteScaleup_);
  PtVVXjesAbsoluteScaleup_branch = tree->GetBranch("PtVVXjesAbsoluteScaleup");
  if (PtVVXjesAbsoluteScaleup_branch) PtVVXjesAbsoluteScaleup_branch->SetAddress(&PtVVXjesAbsoluteScaleup_);
  HTjesAbsoluteScaleup_branch = tree->GetBranch("HTjesAbsoluteScaleup");
  if (HTjesAbsoluteScaleup_branch) HTjesAbsoluteScaleup_branch->SetAddress(&HTjesAbsoluteScaleup_);
  HTJjesAbsoluteScaleup_branch = tree->GetBranch("HTJjesAbsoluteScaleup");
  if (HTJjesAbsoluteScaleup_branch) HTJjesAbsoluteScaleup_branch->SetAddress(&HTJjesAbsoluteScaleup_);
  HTFJjesAbsoluteScaleup_branch = tree->GetBranch("HTFJjesAbsoluteScaleup");
  if (HTFJjesAbsoluteScaleup_branch) HTFJjesAbsoluteScaleup_branch->SetAddress(&HTFJjesAbsoluteScaleup_);
  SumPtFJjesAbsoluteScaleup_branch = tree->GetBranch("SumPtFJjesAbsoluteScaleup");
  if (SumPtFJjesAbsoluteScaleup_branch) SumPtFJjesAbsoluteScaleup_branch->SetAddress(&SumPtFJjesAbsoluteScaleup_);
  SumPtJjesAbsoluteScaleup_branch = tree->GetBranch("SumPtJjesAbsoluteScaleup");
  if (SumPtJjesAbsoluteScaleup_branch) SumPtJjesAbsoluteScaleup_branch->SetAddress(&SumPtJjesAbsoluteScaleup_);
  NFJjesAbsoluteScaledn_branch = tree->GetBranch("NFJjesAbsoluteScaledn");
  if (NFJjesAbsoluteScaledn_branch) NFJjesAbsoluteScaledn_branch->SetAddress(&NFJjesAbsoluteScaledn_);
  VMD0jesAbsoluteScaledn_branch = tree->GetBranch("VMD0jesAbsoluteScaledn");
  if (VMD0jesAbsoluteScaledn_branch) VMD0jesAbsoluteScaledn_branch->SetAddress(&VMD0jesAbsoluteScaledn_);
  VMD1jesAbsoluteScaledn_branch = tree->GetBranch("VMD1jesAbsoluteScaledn");
  if (VMD1jesAbsoluteScaledn_branch) VMD1jesAbsoluteScaledn_branch->SetAddress(&VMD1jesAbsoluteScaledn_);
  VMD2jesAbsoluteScaledn_branch = tree->GetBranch("VMD2jesAbsoluteScaledn");
  if (VMD2jesAbsoluteScaledn_branch) VMD2jesAbsoluteScaledn_branch->SetAddress(&VMD2jesAbsoluteScaledn_);
  VMD3jesAbsoluteScaledn_branch = tree->GetBranch("VMD3jesAbsoluteScaledn");
  if (VMD3jesAbsoluteScaledn_branch) VMD3jesAbsoluteScaledn_branch->SetAddress(&VMD3jesAbsoluteScaledn_);
  VMD4jesAbsoluteScaledn_branch = tree->GetBranch("VMD4jesAbsoluteScaledn");
  if (VMD4jesAbsoluteScaledn_branch) VMD4jesAbsoluteScaledn_branch->SetAddress(&VMD4jesAbsoluteScaledn_);
  WMD0jesAbsoluteScaledn_branch = tree->GetBranch("WMD0jesAbsoluteScaledn");
  if (WMD0jesAbsoluteScaledn_branch) WMD0jesAbsoluteScaledn_branch->SetAddress(&WMD0jesAbsoluteScaledn_);
  WMD1jesAbsoluteScaledn_branch = tree->GetBranch("WMD1jesAbsoluteScaledn");
  if (WMD1jesAbsoluteScaledn_branch) WMD1jesAbsoluteScaledn_branch->SetAddress(&WMD1jesAbsoluteScaledn_);
  WMD2jesAbsoluteScaledn_branch = tree->GetBranch("WMD2jesAbsoluteScaledn");
  if (WMD2jesAbsoluteScaledn_branch) WMD2jesAbsoluteScaledn_branch->SetAddress(&WMD2jesAbsoluteScaledn_);
  WMD3jesAbsoluteScaledn_branch = tree->GetBranch("WMD3jesAbsoluteScaledn");
  if (WMD3jesAbsoluteScaledn_branch) WMD3jesAbsoluteScaledn_branch->SetAddress(&WMD3jesAbsoluteScaledn_);
  WMD4jesAbsoluteScaledn_branch = tree->GetBranch("WMD4jesAbsoluteScaledn");
  if (WMD4jesAbsoluteScaledn_branch) WMD4jesAbsoluteScaledn_branch->SetAddress(&WMD4jesAbsoluteScaledn_);
  NQGen0jesAbsoluteScaledn_branch = tree->GetBranch("NQGen0jesAbsoluteScaledn");
  if (NQGen0jesAbsoluteScaledn_branch) NQGen0jesAbsoluteScaledn_branch->SetAddress(&NQGen0jesAbsoluteScaledn_);
  NQGen1jesAbsoluteScaledn_branch = tree->GetBranch("NQGen1jesAbsoluteScaledn");
  if (NQGen1jesAbsoluteScaledn_branch) NQGen1jesAbsoluteScaledn_branch->SetAddress(&NQGen1jesAbsoluteScaledn_);
  NQGen2jesAbsoluteScaledn_branch = tree->GetBranch("NQGen2jesAbsoluteScaledn");
  if (NQGen2jesAbsoluteScaledn_branch) NQGen2jesAbsoluteScaledn_branch->SetAddress(&NQGen2jesAbsoluteScaledn_);
  NQGen3jesAbsoluteScaledn_branch = tree->GetBranch("NQGen3jesAbsoluteScaledn");
  if (NQGen3jesAbsoluteScaledn_branch) NQGen3jesAbsoluteScaledn_branch->SetAddress(&NQGen3jesAbsoluteScaledn_);
  NQGen4jesAbsoluteScaledn_branch = tree->GetBranch("NQGen4jesAbsoluteScaledn");
  if (NQGen4jesAbsoluteScaledn_branch) NQGen4jesAbsoluteScaledn_branch->SetAddress(&NQGen4jesAbsoluteScaledn_);
  NBGen0jesAbsoluteScaledn_branch = tree->GetBranch("NBGen0jesAbsoluteScaledn");
  if (NBGen0jesAbsoluteScaledn_branch) NBGen0jesAbsoluteScaledn_branch->SetAddress(&NBGen0jesAbsoluteScaledn_);
  NBGen1jesAbsoluteScaledn_branch = tree->GetBranch("NBGen1jesAbsoluteScaledn");
  if (NBGen1jesAbsoluteScaledn_branch) NBGen1jesAbsoluteScaledn_branch->SetAddress(&NBGen1jesAbsoluteScaledn_);
  NBGen2jesAbsoluteScaledn_branch = tree->GetBranch("NBGen2jesAbsoluteScaledn");
  if (NBGen2jesAbsoluteScaledn_branch) NBGen2jesAbsoluteScaledn_branch->SetAddress(&NBGen2jesAbsoluteScaledn_);
  NBGen3jesAbsoluteScaledn_branch = tree->GetBranch("NBGen3jesAbsoluteScaledn");
  if (NBGen3jesAbsoluteScaledn_branch) NBGen3jesAbsoluteScaledn_branch->SetAddress(&NBGen3jesAbsoluteScaledn_);
  NBGen4jesAbsoluteScaledn_branch = tree->GetBranch("NBGen4jesAbsoluteScaledn");
  if (NBGen4jesAbsoluteScaledn_branch) NBGen4jesAbsoluteScaledn_branch->SetAddress(&NBGen4jesAbsoluteScaledn_);
  NLGen0jesAbsoluteScaledn_branch = tree->GetBranch("NLGen0jesAbsoluteScaledn");
  if (NLGen0jesAbsoluteScaledn_branch) NLGen0jesAbsoluteScaledn_branch->SetAddress(&NLGen0jesAbsoluteScaledn_);
  NLGen1jesAbsoluteScaledn_branch = tree->GetBranch("NLGen1jesAbsoluteScaledn");
  if (NLGen1jesAbsoluteScaledn_branch) NLGen1jesAbsoluteScaledn_branch->SetAddress(&NLGen1jesAbsoluteScaledn_);
  NLGen2jesAbsoluteScaledn_branch = tree->GetBranch("NLGen2jesAbsoluteScaledn");
  if (NLGen2jesAbsoluteScaledn_branch) NLGen2jesAbsoluteScaledn_branch->SetAddress(&NLGen2jesAbsoluteScaledn_);
  NLGen3jesAbsoluteScaledn_branch = tree->GetBranch("NLGen3jesAbsoluteScaledn");
  if (NLGen3jesAbsoluteScaledn_branch) NLGen3jesAbsoluteScaledn_branch->SetAddress(&NLGen3jesAbsoluteScaledn_);
  NLGen4jesAbsoluteScaledn_branch = tree->GetBranch("NLGen4jesAbsoluteScaledn");
  if (NLGen4jesAbsoluteScaledn_branch) NLGen4jesAbsoluteScaledn_branch->SetAddress(&NLGen4jesAbsoluteScaledn_);
  NVQGen0jesAbsoluteScaledn_branch = tree->GetBranch("NVQGen0jesAbsoluteScaledn");
  if (NVQGen0jesAbsoluteScaledn_branch) NVQGen0jesAbsoluteScaledn_branch->SetAddress(&NVQGen0jesAbsoluteScaledn_);
  NVQGen1jesAbsoluteScaledn_branch = tree->GetBranch("NVQGen1jesAbsoluteScaledn");
  if (NVQGen1jesAbsoluteScaledn_branch) NVQGen1jesAbsoluteScaledn_branch->SetAddress(&NVQGen1jesAbsoluteScaledn_);
  NVQGen2jesAbsoluteScaledn_branch = tree->GetBranch("NVQGen2jesAbsoluteScaledn");
  if (NVQGen2jesAbsoluteScaledn_branch) NVQGen2jesAbsoluteScaledn_branch->SetAddress(&NVQGen2jesAbsoluteScaledn_);
  NVQGen3jesAbsoluteScaledn_branch = tree->GetBranch("NVQGen3jesAbsoluteScaledn");
  if (NVQGen3jesAbsoluteScaledn_branch) NVQGen3jesAbsoluteScaledn_branch->SetAddress(&NVQGen3jesAbsoluteScaledn_);
  NVQGen4jesAbsoluteScaledn_branch = tree->GetBranch("NVQGen4jesAbsoluteScaledn");
  if (NVQGen4jesAbsoluteScaledn_branch) NVQGen4jesAbsoluteScaledn_branch->SetAddress(&NVQGen4jesAbsoluteScaledn_);
  NiFJjesAbsoluteScaledn_branch = tree->GetBranch("NiFJjesAbsoluteScaledn");
  if (NiFJjesAbsoluteScaledn_branch) NiFJjesAbsoluteScaledn_branch->SetAddress(&NiFJjesAbsoluteScaledn_);
  iVMD0jesAbsoluteScaledn_branch = tree->GetBranch("iVMD0jesAbsoluteScaledn");
  if (iVMD0jesAbsoluteScaledn_branch) iVMD0jesAbsoluteScaledn_branch->SetAddress(&iVMD0jesAbsoluteScaledn_);
  iVMD1jesAbsoluteScaledn_branch = tree->GetBranch("iVMD1jesAbsoluteScaledn");
  if (iVMD1jesAbsoluteScaledn_branch) iVMD1jesAbsoluteScaledn_branch->SetAddress(&iVMD1jesAbsoluteScaledn_);
  iVMD2jesAbsoluteScaledn_branch = tree->GetBranch("iVMD2jesAbsoluteScaledn");
  if (iVMD2jesAbsoluteScaledn_branch) iVMD2jesAbsoluteScaledn_branch->SetAddress(&iVMD2jesAbsoluteScaledn_);
  iVMD3jesAbsoluteScaledn_branch = tree->GetBranch("iVMD3jesAbsoluteScaledn");
  if (iVMD3jesAbsoluteScaledn_branch) iVMD3jesAbsoluteScaledn_branch->SetAddress(&iVMD3jesAbsoluteScaledn_);
  iVMD4jesAbsoluteScaledn_branch = tree->GetBranch("iVMD4jesAbsoluteScaledn");
  if (iVMD4jesAbsoluteScaledn_branch) iVMD4jesAbsoluteScaledn_branch->SetAddress(&iVMD4jesAbsoluteScaledn_);
  iWMD0jesAbsoluteScaledn_branch = tree->GetBranch("iWMD0jesAbsoluteScaledn");
  if (iWMD0jesAbsoluteScaledn_branch) iWMD0jesAbsoluteScaledn_branch->SetAddress(&iWMD0jesAbsoluteScaledn_);
  iWMD1jesAbsoluteScaledn_branch = tree->GetBranch("iWMD1jesAbsoluteScaledn");
  if (iWMD1jesAbsoluteScaledn_branch) iWMD1jesAbsoluteScaledn_branch->SetAddress(&iWMD1jesAbsoluteScaledn_);
  iWMD2jesAbsoluteScaledn_branch = tree->GetBranch("iWMD2jesAbsoluteScaledn");
  if (iWMD2jesAbsoluteScaledn_branch) iWMD2jesAbsoluteScaledn_branch->SetAddress(&iWMD2jesAbsoluteScaledn_);
  iWMD3jesAbsoluteScaledn_branch = tree->GetBranch("iWMD3jesAbsoluteScaledn");
  if (iWMD3jesAbsoluteScaledn_branch) iWMD3jesAbsoluteScaledn_branch->SetAddress(&iWMD3jesAbsoluteScaledn_);
  iWMD4jesAbsoluteScaledn_branch = tree->GetBranch("iWMD4jesAbsoluteScaledn");
  if (iWMD4jesAbsoluteScaledn_branch) iWMD4jesAbsoluteScaledn_branch->SetAddress(&iWMD4jesAbsoluteScaledn_);
  NJjesAbsoluteScaledn_branch = tree->GetBranch("NJjesAbsoluteScaledn");
  if (NJjesAbsoluteScaledn_branch) NJjesAbsoluteScaledn_branch->SetAddress(&NJjesAbsoluteScaledn_);
  NbLoosejesAbsoluteScaledn_branch = tree->GetBranch("NbLoosejesAbsoluteScaledn");
  if (NbLoosejesAbsoluteScaledn_branch) NbLoosejesAbsoluteScaledn_branch->SetAddress(&NbLoosejesAbsoluteScaledn_);
  NbMediumjesAbsoluteScaledn_branch = tree->GetBranch("NbMediumjesAbsoluteScaledn");
  if (NbMediumjesAbsoluteScaledn_branch) NbMediumjesAbsoluteScaledn_branch->SetAddress(&NbMediumjesAbsoluteScaledn_);
  NbTightjesAbsoluteScaledn_branch = tree->GetBranch("NbTightjesAbsoluteScaledn");
  if (NbTightjesAbsoluteScaledn_branch) NbTightjesAbsoluteScaledn_branch->SetAddress(&NbTightjesAbsoluteScaledn_);
  NoORNbLoosejesAbsoluteScaledn_branch = tree->GetBranch("NoORNbLoosejesAbsoluteScaledn");
  if (NoORNbLoosejesAbsoluteScaledn_branch) NoORNbLoosejesAbsoluteScaledn_branch->SetAddress(&NoORNbLoosejesAbsoluteScaledn_);
  NoORNbMediumjesAbsoluteScaledn_branch = tree->GetBranch("NoORNbMediumjesAbsoluteScaledn");
  if (NoORNbMediumjesAbsoluteScaledn_branch) NoORNbMediumjesAbsoluteScaledn_branch->SetAddress(&NoORNbMediumjesAbsoluteScaledn_);
  NoORNbTightjesAbsoluteScaledn_branch = tree->GetBranch("NoORNbTightjesAbsoluteScaledn");
  if (NoORNbTightjesAbsoluteScaledn_branch) NoORNbTightjesAbsoluteScaledn_branch->SetAddress(&NoORNbTightjesAbsoluteScaledn_);
  NQJGenjesAbsoluteScaledn_branch = tree->GetBranch("NQJGenjesAbsoluteScaledn");
  if (NQJGenjesAbsoluteScaledn_branch) NQJGenjesAbsoluteScaledn_branch->SetAddress(&NQJGenjesAbsoluteScaledn_);
  NBJGenjesAbsoluteScaledn_branch = tree->GetBranch("NBJGenjesAbsoluteScaledn");
  if (NBJGenjesAbsoluteScaledn_branch) NBJGenjesAbsoluteScaledn_branch->SetAddress(&NBJGenjesAbsoluteScaledn_);
  NLJGenjesAbsoluteScaledn_branch = tree->GetBranch("NLJGenjesAbsoluteScaledn");
  if (NLJGenjesAbsoluteScaledn_branch) NLJGenjesAbsoluteScaledn_branch->SetAddress(&NLJGenjesAbsoluteScaledn_);
  MVVXjesAbsoluteScaledn_branch = tree->GetBranch("MVVXjesAbsoluteScaledn");
  if (MVVXjesAbsoluteScaledn_branch) MVVXjesAbsoluteScaledn_branch->SetAddress(&MVVXjesAbsoluteScaledn_);
  PtVVXjesAbsoluteScaledn_branch = tree->GetBranch("PtVVXjesAbsoluteScaledn");
  if (PtVVXjesAbsoluteScaledn_branch) PtVVXjesAbsoluteScaledn_branch->SetAddress(&PtVVXjesAbsoluteScaledn_);
  HTjesAbsoluteScaledn_branch = tree->GetBranch("HTjesAbsoluteScaledn");
  if (HTjesAbsoluteScaledn_branch) HTjesAbsoluteScaledn_branch->SetAddress(&HTjesAbsoluteScaledn_);
  HTJjesAbsoluteScaledn_branch = tree->GetBranch("HTJjesAbsoluteScaledn");
  if (HTJjesAbsoluteScaledn_branch) HTJjesAbsoluteScaledn_branch->SetAddress(&HTJjesAbsoluteScaledn_);
  HTFJjesAbsoluteScaledn_branch = tree->GetBranch("HTFJjesAbsoluteScaledn");
  if (HTFJjesAbsoluteScaledn_branch) HTFJjesAbsoluteScaledn_branch->SetAddress(&HTFJjesAbsoluteScaledn_);
  SumPtFJjesAbsoluteScaledn_branch = tree->GetBranch("SumPtFJjesAbsoluteScaledn");
  if (SumPtFJjesAbsoluteScaledn_branch) SumPtFJjesAbsoluteScaledn_branch->SetAddress(&SumPtFJjesAbsoluteScaledn_);
  SumPtJjesAbsoluteScaledn_branch = tree->GetBranch("SumPtJjesAbsoluteScaledn");
  if (SumPtJjesAbsoluteScaledn_branch) SumPtJjesAbsoluteScaledn_branch->SetAddress(&SumPtJjesAbsoluteScaledn_);
  NFJjesAbsoluteMPFBiasup_branch = tree->GetBranch("NFJjesAbsoluteMPFBiasup");
  if (NFJjesAbsoluteMPFBiasup_branch) NFJjesAbsoluteMPFBiasup_branch->SetAddress(&NFJjesAbsoluteMPFBiasup_);
  VMD0jesAbsoluteMPFBiasup_branch = tree->GetBranch("VMD0jesAbsoluteMPFBiasup");
  if (VMD0jesAbsoluteMPFBiasup_branch) VMD0jesAbsoluteMPFBiasup_branch->SetAddress(&VMD0jesAbsoluteMPFBiasup_);
  VMD1jesAbsoluteMPFBiasup_branch = tree->GetBranch("VMD1jesAbsoluteMPFBiasup");
  if (VMD1jesAbsoluteMPFBiasup_branch) VMD1jesAbsoluteMPFBiasup_branch->SetAddress(&VMD1jesAbsoluteMPFBiasup_);
  VMD2jesAbsoluteMPFBiasup_branch = tree->GetBranch("VMD2jesAbsoluteMPFBiasup");
  if (VMD2jesAbsoluteMPFBiasup_branch) VMD2jesAbsoluteMPFBiasup_branch->SetAddress(&VMD2jesAbsoluteMPFBiasup_);
  VMD3jesAbsoluteMPFBiasup_branch = tree->GetBranch("VMD3jesAbsoluteMPFBiasup");
  if (VMD3jesAbsoluteMPFBiasup_branch) VMD3jesAbsoluteMPFBiasup_branch->SetAddress(&VMD3jesAbsoluteMPFBiasup_);
  VMD4jesAbsoluteMPFBiasup_branch = tree->GetBranch("VMD4jesAbsoluteMPFBiasup");
  if (VMD4jesAbsoluteMPFBiasup_branch) VMD4jesAbsoluteMPFBiasup_branch->SetAddress(&VMD4jesAbsoluteMPFBiasup_);
  WMD0jesAbsoluteMPFBiasup_branch = tree->GetBranch("WMD0jesAbsoluteMPFBiasup");
  if (WMD0jesAbsoluteMPFBiasup_branch) WMD0jesAbsoluteMPFBiasup_branch->SetAddress(&WMD0jesAbsoluteMPFBiasup_);
  WMD1jesAbsoluteMPFBiasup_branch = tree->GetBranch("WMD1jesAbsoluteMPFBiasup");
  if (WMD1jesAbsoluteMPFBiasup_branch) WMD1jesAbsoluteMPFBiasup_branch->SetAddress(&WMD1jesAbsoluteMPFBiasup_);
  WMD2jesAbsoluteMPFBiasup_branch = tree->GetBranch("WMD2jesAbsoluteMPFBiasup");
  if (WMD2jesAbsoluteMPFBiasup_branch) WMD2jesAbsoluteMPFBiasup_branch->SetAddress(&WMD2jesAbsoluteMPFBiasup_);
  WMD3jesAbsoluteMPFBiasup_branch = tree->GetBranch("WMD3jesAbsoluteMPFBiasup");
  if (WMD3jesAbsoluteMPFBiasup_branch) WMD3jesAbsoluteMPFBiasup_branch->SetAddress(&WMD3jesAbsoluteMPFBiasup_);
  WMD4jesAbsoluteMPFBiasup_branch = tree->GetBranch("WMD4jesAbsoluteMPFBiasup");
  if (WMD4jesAbsoluteMPFBiasup_branch) WMD4jesAbsoluteMPFBiasup_branch->SetAddress(&WMD4jesAbsoluteMPFBiasup_);
  NQGen0jesAbsoluteMPFBiasup_branch = tree->GetBranch("NQGen0jesAbsoluteMPFBiasup");
  if (NQGen0jesAbsoluteMPFBiasup_branch) NQGen0jesAbsoluteMPFBiasup_branch->SetAddress(&NQGen0jesAbsoluteMPFBiasup_);
  NQGen1jesAbsoluteMPFBiasup_branch = tree->GetBranch("NQGen1jesAbsoluteMPFBiasup");
  if (NQGen1jesAbsoluteMPFBiasup_branch) NQGen1jesAbsoluteMPFBiasup_branch->SetAddress(&NQGen1jesAbsoluteMPFBiasup_);
  NQGen2jesAbsoluteMPFBiasup_branch = tree->GetBranch("NQGen2jesAbsoluteMPFBiasup");
  if (NQGen2jesAbsoluteMPFBiasup_branch) NQGen2jesAbsoluteMPFBiasup_branch->SetAddress(&NQGen2jesAbsoluteMPFBiasup_);
  NQGen3jesAbsoluteMPFBiasup_branch = tree->GetBranch("NQGen3jesAbsoluteMPFBiasup");
  if (NQGen3jesAbsoluteMPFBiasup_branch) NQGen3jesAbsoluteMPFBiasup_branch->SetAddress(&NQGen3jesAbsoluteMPFBiasup_);
  NQGen4jesAbsoluteMPFBiasup_branch = tree->GetBranch("NQGen4jesAbsoluteMPFBiasup");
  if (NQGen4jesAbsoluteMPFBiasup_branch) NQGen4jesAbsoluteMPFBiasup_branch->SetAddress(&NQGen4jesAbsoluteMPFBiasup_);
  NBGen0jesAbsoluteMPFBiasup_branch = tree->GetBranch("NBGen0jesAbsoluteMPFBiasup");
  if (NBGen0jesAbsoluteMPFBiasup_branch) NBGen0jesAbsoluteMPFBiasup_branch->SetAddress(&NBGen0jesAbsoluteMPFBiasup_);
  NBGen1jesAbsoluteMPFBiasup_branch = tree->GetBranch("NBGen1jesAbsoluteMPFBiasup");
  if (NBGen1jesAbsoluteMPFBiasup_branch) NBGen1jesAbsoluteMPFBiasup_branch->SetAddress(&NBGen1jesAbsoluteMPFBiasup_);
  NBGen2jesAbsoluteMPFBiasup_branch = tree->GetBranch("NBGen2jesAbsoluteMPFBiasup");
  if (NBGen2jesAbsoluteMPFBiasup_branch) NBGen2jesAbsoluteMPFBiasup_branch->SetAddress(&NBGen2jesAbsoluteMPFBiasup_);
  NBGen3jesAbsoluteMPFBiasup_branch = tree->GetBranch("NBGen3jesAbsoluteMPFBiasup");
  if (NBGen3jesAbsoluteMPFBiasup_branch) NBGen3jesAbsoluteMPFBiasup_branch->SetAddress(&NBGen3jesAbsoluteMPFBiasup_);
  NBGen4jesAbsoluteMPFBiasup_branch = tree->GetBranch("NBGen4jesAbsoluteMPFBiasup");
  if (NBGen4jesAbsoluteMPFBiasup_branch) NBGen4jesAbsoluteMPFBiasup_branch->SetAddress(&NBGen4jesAbsoluteMPFBiasup_);
  NLGen0jesAbsoluteMPFBiasup_branch = tree->GetBranch("NLGen0jesAbsoluteMPFBiasup");
  if (NLGen0jesAbsoluteMPFBiasup_branch) NLGen0jesAbsoluteMPFBiasup_branch->SetAddress(&NLGen0jesAbsoluteMPFBiasup_);
  NLGen1jesAbsoluteMPFBiasup_branch = tree->GetBranch("NLGen1jesAbsoluteMPFBiasup");
  if (NLGen1jesAbsoluteMPFBiasup_branch) NLGen1jesAbsoluteMPFBiasup_branch->SetAddress(&NLGen1jesAbsoluteMPFBiasup_);
  NLGen2jesAbsoluteMPFBiasup_branch = tree->GetBranch("NLGen2jesAbsoluteMPFBiasup");
  if (NLGen2jesAbsoluteMPFBiasup_branch) NLGen2jesAbsoluteMPFBiasup_branch->SetAddress(&NLGen2jesAbsoluteMPFBiasup_);
  NLGen3jesAbsoluteMPFBiasup_branch = tree->GetBranch("NLGen3jesAbsoluteMPFBiasup");
  if (NLGen3jesAbsoluteMPFBiasup_branch) NLGen3jesAbsoluteMPFBiasup_branch->SetAddress(&NLGen3jesAbsoluteMPFBiasup_);
  NLGen4jesAbsoluteMPFBiasup_branch = tree->GetBranch("NLGen4jesAbsoluteMPFBiasup");
  if (NLGen4jesAbsoluteMPFBiasup_branch) NLGen4jesAbsoluteMPFBiasup_branch->SetAddress(&NLGen4jesAbsoluteMPFBiasup_);
  NVQGen0jesAbsoluteMPFBiasup_branch = tree->GetBranch("NVQGen0jesAbsoluteMPFBiasup");
  if (NVQGen0jesAbsoluteMPFBiasup_branch) NVQGen0jesAbsoluteMPFBiasup_branch->SetAddress(&NVQGen0jesAbsoluteMPFBiasup_);
  NVQGen1jesAbsoluteMPFBiasup_branch = tree->GetBranch("NVQGen1jesAbsoluteMPFBiasup");
  if (NVQGen1jesAbsoluteMPFBiasup_branch) NVQGen1jesAbsoluteMPFBiasup_branch->SetAddress(&NVQGen1jesAbsoluteMPFBiasup_);
  NVQGen2jesAbsoluteMPFBiasup_branch = tree->GetBranch("NVQGen2jesAbsoluteMPFBiasup");
  if (NVQGen2jesAbsoluteMPFBiasup_branch) NVQGen2jesAbsoluteMPFBiasup_branch->SetAddress(&NVQGen2jesAbsoluteMPFBiasup_);
  NVQGen3jesAbsoluteMPFBiasup_branch = tree->GetBranch("NVQGen3jesAbsoluteMPFBiasup");
  if (NVQGen3jesAbsoluteMPFBiasup_branch) NVQGen3jesAbsoluteMPFBiasup_branch->SetAddress(&NVQGen3jesAbsoluteMPFBiasup_);
  NVQGen4jesAbsoluteMPFBiasup_branch = tree->GetBranch("NVQGen4jesAbsoluteMPFBiasup");
  if (NVQGen4jesAbsoluteMPFBiasup_branch) NVQGen4jesAbsoluteMPFBiasup_branch->SetAddress(&NVQGen4jesAbsoluteMPFBiasup_);
  NiFJjesAbsoluteMPFBiasup_branch = tree->GetBranch("NiFJjesAbsoluteMPFBiasup");
  if (NiFJjesAbsoluteMPFBiasup_branch) NiFJjesAbsoluteMPFBiasup_branch->SetAddress(&NiFJjesAbsoluteMPFBiasup_);
  iVMD0jesAbsoluteMPFBiasup_branch = tree->GetBranch("iVMD0jesAbsoluteMPFBiasup");
  if (iVMD0jesAbsoluteMPFBiasup_branch) iVMD0jesAbsoluteMPFBiasup_branch->SetAddress(&iVMD0jesAbsoluteMPFBiasup_);
  iVMD1jesAbsoluteMPFBiasup_branch = tree->GetBranch("iVMD1jesAbsoluteMPFBiasup");
  if (iVMD1jesAbsoluteMPFBiasup_branch) iVMD1jesAbsoluteMPFBiasup_branch->SetAddress(&iVMD1jesAbsoluteMPFBiasup_);
  iVMD2jesAbsoluteMPFBiasup_branch = tree->GetBranch("iVMD2jesAbsoluteMPFBiasup");
  if (iVMD2jesAbsoluteMPFBiasup_branch) iVMD2jesAbsoluteMPFBiasup_branch->SetAddress(&iVMD2jesAbsoluteMPFBiasup_);
  iVMD3jesAbsoluteMPFBiasup_branch = tree->GetBranch("iVMD3jesAbsoluteMPFBiasup");
  if (iVMD3jesAbsoluteMPFBiasup_branch) iVMD3jesAbsoluteMPFBiasup_branch->SetAddress(&iVMD3jesAbsoluteMPFBiasup_);
  iVMD4jesAbsoluteMPFBiasup_branch = tree->GetBranch("iVMD4jesAbsoluteMPFBiasup");
  if (iVMD4jesAbsoluteMPFBiasup_branch) iVMD4jesAbsoluteMPFBiasup_branch->SetAddress(&iVMD4jesAbsoluteMPFBiasup_);
  iWMD0jesAbsoluteMPFBiasup_branch = tree->GetBranch("iWMD0jesAbsoluteMPFBiasup");
  if (iWMD0jesAbsoluteMPFBiasup_branch) iWMD0jesAbsoluteMPFBiasup_branch->SetAddress(&iWMD0jesAbsoluteMPFBiasup_);
  iWMD1jesAbsoluteMPFBiasup_branch = tree->GetBranch("iWMD1jesAbsoluteMPFBiasup");
  if (iWMD1jesAbsoluteMPFBiasup_branch) iWMD1jesAbsoluteMPFBiasup_branch->SetAddress(&iWMD1jesAbsoluteMPFBiasup_);
  iWMD2jesAbsoluteMPFBiasup_branch = tree->GetBranch("iWMD2jesAbsoluteMPFBiasup");
  if (iWMD2jesAbsoluteMPFBiasup_branch) iWMD2jesAbsoluteMPFBiasup_branch->SetAddress(&iWMD2jesAbsoluteMPFBiasup_);
  iWMD3jesAbsoluteMPFBiasup_branch = tree->GetBranch("iWMD3jesAbsoluteMPFBiasup");
  if (iWMD3jesAbsoluteMPFBiasup_branch) iWMD3jesAbsoluteMPFBiasup_branch->SetAddress(&iWMD3jesAbsoluteMPFBiasup_);
  iWMD4jesAbsoluteMPFBiasup_branch = tree->GetBranch("iWMD4jesAbsoluteMPFBiasup");
  if (iWMD4jesAbsoluteMPFBiasup_branch) iWMD4jesAbsoluteMPFBiasup_branch->SetAddress(&iWMD4jesAbsoluteMPFBiasup_);
  NJjesAbsoluteMPFBiasup_branch = tree->GetBranch("NJjesAbsoluteMPFBiasup");
  if (NJjesAbsoluteMPFBiasup_branch) NJjesAbsoluteMPFBiasup_branch->SetAddress(&NJjesAbsoluteMPFBiasup_);
  NbLoosejesAbsoluteMPFBiasup_branch = tree->GetBranch("NbLoosejesAbsoluteMPFBiasup");
  if (NbLoosejesAbsoluteMPFBiasup_branch) NbLoosejesAbsoluteMPFBiasup_branch->SetAddress(&NbLoosejesAbsoluteMPFBiasup_);
  NbMediumjesAbsoluteMPFBiasup_branch = tree->GetBranch("NbMediumjesAbsoluteMPFBiasup");
  if (NbMediumjesAbsoluteMPFBiasup_branch) NbMediumjesAbsoluteMPFBiasup_branch->SetAddress(&NbMediumjesAbsoluteMPFBiasup_);
  NbTightjesAbsoluteMPFBiasup_branch = tree->GetBranch("NbTightjesAbsoluteMPFBiasup");
  if (NbTightjesAbsoluteMPFBiasup_branch) NbTightjesAbsoluteMPFBiasup_branch->SetAddress(&NbTightjesAbsoluteMPFBiasup_);
  NoORNbLoosejesAbsoluteMPFBiasup_branch = tree->GetBranch("NoORNbLoosejesAbsoluteMPFBiasup");
  if (NoORNbLoosejesAbsoluteMPFBiasup_branch) NoORNbLoosejesAbsoluteMPFBiasup_branch->SetAddress(&NoORNbLoosejesAbsoluteMPFBiasup_);
  NoORNbMediumjesAbsoluteMPFBiasup_branch = tree->GetBranch("NoORNbMediumjesAbsoluteMPFBiasup");
  if (NoORNbMediumjesAbsoluteMPFBiasup_branch) NoORNbMediumjesAbsoluteMPFBiasup_branch->SetAddress(&NoORNbMediumjesAbsoluteMPFBiasup_);
  NoORNbTightjesAbsoluteMPFBiasup_branch = tree->GetBranch("NoORNbTightjesAbsoluteMPFBiasup");
  if (NoORNbTightjesAbsoluteMPFBiasup_branch) NoORNbTightjesAbsoluteMPFBiasup_branch->SetAddress(&NoORNbTightjesAbsoluteMPFBiasup_);
  NQJGenjesAbsoluteMPFBiasup_branch = tree->GetBranch("NQJGenjesAbsoluteMPFBiasup");
  if (NQJGenjesAbsoluteMPFBiasup_branch) NQJGenjesAbsoluteMPFBiasup_branch->SetAddress(&NQJGenjesAbsoluteMPFBiasup_);
  NBJGenjesAbsoluteMPFBiasup_branch = tree->GetBranch("NBJGenjesAbsoluteMPFBiasup");
  if (NBJGenjesAbsoluteMPFBiasup_branch) NBJGenjesAbsoluteMPFBiasup_branch->SetAddress(&NBJGenjesAbsoluteMPFBiasup_);
  NLJGenjesAbsoluteMPFBiasup_branch = tree->GetBranch("NLJGenjesAbsoluteMPFBiasup");
  if (NLJGenjesAbsoluteMPFBiasup_branch) NLJGenjesAbsoluteMPFBiasup_branch->SetAddress(&NLJGenjesAbsoluteMPFBiasup_);
  MVVXjesAbsoluteMPFBiasup_branch = tree->GetBranch("MVVXjesAbsoluteMPFBiasup");
  if (MVVXjesAbsoluteMPFBiasup_branch) MVVXjesAbsoluteMPFBiasup_branch->SetAddress(&MVVXjesAbsoluteMPFBiasup_);
  PtVVXjesAbsoluteMPFBiasup_branch = tree->GetBranch("PtVVXjesAbsoluteMPFBiasup");
  if (PtVVXjesAbsoluteMPFBiasup_branch) PtVVXjesAbsoluteMPFBiasup_branch->SetAddress(&PtVVXjesAbsoluteMPFBiasup_);
  HTjesAbsoluteMPFBiasup_branch = tree->GetBranch("HTjesAbsoluteMPFBiasup");
  if (HTjesAbsoluteMPFBiasup_branch) HTjesAbsoluteMPFBiasup_branch->SetAddress(&HTjesAbsoluteMPFBiasup_);
  HTJjesAbsoluteMPFBiasup_branch = tree->GetBranch("HTJjesAbsoluteMPFBiasup");
  if (HTJjesAbsoluteMPFBiasup_branch) HTJjesAbsoluteMPFBiasup_branch->SetAddress(&HTJjesAbsoluteMPFBiasup_);
  HTFJjesAbsoluteMPFBiasup_branch = tree->GetBranch("HTFJjesAbsoluteMPFBiasup");
  if (HTFJjesAbsoluteMPFBiasup_branch) HTFJjesAbsoluteMPFBiasup_branch->SetAddress(&HTFJjesAbsoluteMPFBiasup_);
  SumPtFJjesAbsoluteMPFBiasup_branch = tree->GetBranch("SumPtFJjesAbsoluteMPFBiasup");
  if (SumPtFJjesAbsoluteMPFBiasup_branch) SumPtFJjesAbsoluteMPFBiasup_branch->SetAddress(&SumPtFJjesAbsoluteMPFBiasup_);
  SumPtJjesAbsoluteMPFBiasup_branch = tree->GetBranch("SumPtJjesAbsoluteMPFBiasup");
  if (SumPtJjesAbsoluteMPFBiasup_branch) SumPtJjesAbsoluteMPFBiasup_branch->SetAddress(&SumPtJjesAbsoluteMPFBiasup_);
  NFJjesAbsoluteMPFBiasdn_branch = tree->GetBranch("NFJjesAbsoluteMPFBiasdn");
  if (NFJjesAbsoluteMPFBiasdn_branch) NFJjesAbsoluteMPFBiasdn_branch->SetAddress(&NFJjesAbsoluteMPFBiasdn_);
  VMD0jesAbsoluteMPFBiasdn_branch = tree->GetBranch("VMD0jesAbsoluteMPFBiasdn");
  if (VMD0jesAbsoluteMPFBiasdn_branch) VMD0jesAbsoluteMPFBiasdn_branch->SetAddress(&VMD0jesAbsoluteMPFBiasdn_);
  VMD1jesAbsoluteMPFBiasdn_branch = tree->GetBranch("VMD1jesAbsoluteMPFBiasdn");
  if (VMD1jesAbsoluteMPFBiasdn_branch) VMD1jesAbsoluteMPFBiasdn_branch->SetAddress(&VMD1jesAbsoluteMPFBiasdn_);
  VMD2jesAbsoluteMPFBiasdn_branch = tree->GetBranch("VMD2jesAbsoluteMPFBiasdn");
  if (VMD2jesAbsoluteMPFBiasdn_branch) VMD2jesAbsoluteMPFBiasdn_branch->SetAddress(&VMD2jesAbsoluteMPFBiasdn_);
  VMD3jesAbsoluteMPFBiasdn_branch = tree->GetBranch("VMD3jesAbsoluteMPFBiasdn");
  if (VMD3jesAbsoluteMPFBiasdn_branch) VMD3jesAbsoluteMPFBiasdn_branch->SetAddress(&VMD3jesAbsoluteMPFBiasdn_);
  VMD4jesAbsoluteMPFBiasdn_branch = tree->GetBranch("VMD4jesAbsoluteMPFBiasdn");
  if (VMD4jesAbsoluteMPFBiasdn_branch) VMD4jesAbsoluteMPFBiasdn_branch->SetAddress(&VMD4jesAbsoluteMPFBiasdn_);
  WMD0jesAbsoluteMPFBiasdn_branch = tree->GetBranch("WMD0jesAbsoluteMPFBiasdn");
  if (WMD0jesAbsoluteMPFBiasdn_branch) WMD0jesAbsoluteMPFBiasdn_branch->SetAddress(&WMD0jesAbsoluteMPFBiasdn_);
  WMD1jesAbsoluteMPFBiasdn_branch = tree->GetBranch("WMD1jesAbsoluteMPFBiasdn");
  if (WMD1jesAbsoluteMPFBiasdn_branch) WMD1jesAbsoluteMPFBiasdn_branch->SetAddress(&WMD1jesAbsoluteMPFBiasdn_);
  WMD2jesAbsoluteMPFBiasdn_branch = tree->GetBranch("WMD2jesAbsoluteMPFBiasdn");
  if (WMD2jesAbsoluteMPFBiasdn_branch) WMD2jesAbsoluteMPFBiasdn_branch->SetAddress(&WMD2jesAbsoluteMPFBiasdn_);
  WMD3jesAbsoluteMPFBiasdn_branch = tree->GetBranch("WMD3jesAbsoluteMPFBiasdn");
  if (WMD3jesAbsoluteMPFBiasdn_branch) WMD3jesAbsoluteMPFBiasdn_branch->SetAddress(&WMD3jesAbsoluteMPFBiasdn_);
  WMD4jesAbsoluteMPFBiasdn_branch = tree->GetBranch("WMD4jesAbsoluteMPFBiasdn");
  if (WMD4jesAbsoluteMPFBiasdn_branch) WMD4jesAbsoluteMPFBiasdn_branch->SetAddress(&WMD4jesAbsoluteMPFBiasdn_);
  NQGen0jesAbsoluteMPFBiasdn_branch = tree->GetBranch("NQGen0jesAbsoluteMPFBiasdn");
  if (NQGen0jesAbsoluteMPFBiasdn_branch) NQGen0jesAbsoluteMPFBiasdn_branch->SetAddress(&NQGen0jesAbsoluteMPFBiasdn_);
  NQGen1jesAbsoluteMPFBiasdn_branch = tree->GetBranch("NQGen1jesAbsoluteMPFBiasdn");
  if (NQGen1jesAbsoluteMPFBiasdn_branch) NQGen1jesAbsoluteMPFBiasdn_branch->SetAddress(&NQGen1jesAbsoluteMPFBiasdn_);
  NQGen2jesAbsoluteMPFBiasdn_branch = tree->GetBranch("NQGen2jesAbsoluteMPFBiasdn");
  if (NQGen2jesAbsoluteMPFBiasdn_branch) NQGen2jesAbsoluteMPFBiasdn_branch->SetAddress(&NQGen2jesAbsoluteMPFBiasdn_);
  NQGen3jesAbsoluteMPFBiasdn_branch = tree->GetBranch("NQGen3jesAbsoluteMPFBiasdn");
  if (NQGen3jesAbsoluteMPFBiasdn_branch) NQGen3jesAbsoluteMPFBiasdn_branch->SetAddress(&NQGen3jesAbsoluteMPFBiasdn_);
  NQGen4jesAbsoluteMPFBiasdn_branch = tree->GetBranch("NQGen4jesAbsoluteMPFBiasdn");
  if (NQGen4jesAbsoluteMPFBiasdn_branch) NQGen4jesAbsoluteMPFBiasdn_branch->SetAddress(&NQGen4jesAbsoluteMPFBiasdn_);
  NBGen0jesAbsoluteMPFBiasdn_branch = tree->GetBranch("NBGen0jesAbsoluteMPFBiasdn");
  if (NBGen0jesAbsoluteMPFBiasdn_branch) NBGen0jesAbsoluteMPFBiasdn_branch->SetAddress(&NBGen0jesAbsoluteMPFBiasdn_);
  NBGen1jesAbsoluteMPFBiasdn_branch = tree->GetBranch("NBGen1jesAbsoluteMPFBiasdn");
  if (NBGen1jesAbsoluteMPFBiasdn_branch) NBGen1jesAbsoluteMPFBiasdn_branch->SetAddress(&NBGen1jesAbsoluteMPFBiasdn_);
  NBGen2jesAbsoluteMPFBiasdn_branch = tree->GetBranch("NBGen2jesAbsoluteMPFBiasdn");
  if (NBGen2jesAbsoluteMPFBiasdn_branch) NBGen2jesAbsoluteMPFBiasdn_branch->SetAddress(&NBGen2jesAbsoluteMPFBiasdn_);
  NBGen3jesAbsoluteMPFBiasdn_branch = tree->GetBranch("NBGen3jesAbsoluteMPFBiasdn");
  if (NBGen3jesAbsoluteMPFBiasdn_branch) NBGen3jesAbsoluteMPFBiasdn_branch->SetAddress(&NBGen3jesAbsoluteMPFBiasdn_);
  NBGen4jesAbsoluteMPFBiasdn_branch = tree->GetBranch("NBGen4jesAbsoluteMPFBiasdn");
  if (NBGen4jesAbsoluteMPFBiasdn_branch) NBGen4jesAbsoluteMPFBiasdn_branch->SetAddress(&NBGen4jesAbsoluteMPFBiasdn_);
  NLGen0jesAbsoluteMPFBiasdn_branch = tree->GetBranch("NLGen0jesAbsoluteMPFBiasdn");
  if (NLGen0jesAbsoluteMPFBiasdn_branch) NLGen0jesAbsoluteMPFBiasdn_branch->SetAddress(&NLGen0jesAbsoluteMPFBiasdn_);
  NLGen1jesAbsoluteMPFBiasdn_branch = tree->GetBranch("NLGen1jesAbsoluteMPFBiasdn");
  if (NLGen1jesAbsoluteMPFBiasdn_branch) NLGen1jesAbsoluteMPFBiasdn_branch->SetAddress(&NLGen1jesAbsoluteMPFBiasdn_);
  NLGen2jesAbsoluteMPFBiasdn_branch = tree->GetBranch("NLGen2jesAbsoluteMPFBiasdn");
  if (NLGen2jesAbsoluteMPFBiasdn_branch) NLGen2jesAbsoluteMPFBiasdn_branch->SetAddress(&NLGen2jesAbsoluteMPFBiasdn_);
  NLGen3jesAbsoluteMPFBiasdn_branch = tree->GetBranch("NLGen3jesAbsoluteMPFBiasdn");
  if (NLGen3jesAbsoluteMPFBiasdn_branch) NLGen3jesAbsoluteMPFBiasdn_branch->SetAddress(&NLGen3jesAbsoluteMPFBiasdn_);
  NLGen4jesAbsoluteMPFBiasdn_branch = tree->GetBranch("NLGen4jesAbsoluteMPFBiasdn");
  if (NLGen4jesAbsoluteMPFBiasdn_branch) NLGen4jesAbsoluteMPFBiasdn_branch->SetAddress(&NLGen4jesAbsoluteMPFBiasdn_);
  NVQGen0jesAbsoluteMPFBiasdn_branch = tree->GetBranch("NVQGen0jesAbsoluteMPFBiasdn");
  if (NVQGen0jesAbsoluteMPFBiasdn_branch) NVQGen0jesAbsoluteMPFBiasdn_branch->SetAddress(&NVQGen0jesAbsoluteMPFBiasdn_);
  NVQGen1jesAbsoluteMPFBiasdn_branch = tree->GetBranch("NVQGen1jesAbsoluteMPFBiasdn");
  if (NVQGen1jesAbsoluteMPFBiasdn_branch) NVQGen1jesAbsoluteMPFBiasdn_branch->SetAddress(&NVQGen1jesAbsoluteMPFBiasdn_);
  NVQGen2jesAbsoluteMPFBiasdn_branch = tree->GetBranch("NVQGen2jesAbsoluteMPFBiasdn");
  if (NVQGen2jesAbsoluteMPFBiasdn_branch) NVQGen2jesAbsoluteMPFBiasdn_branch->SetAddress(&NVQGen2jesAbsoluteMPFBiasdn_);
  NVQGen3jesAbsoluteMPFBiasdn_branch = tree->GetBranch("NVQGen3jesAbsoluteMPFBiasdn");
  if (NVQGen3jesAbsoluteMPFBiasdn_branch) NVQGen3jesAbsoluteMPFBiasdn_branch->SetAddress(&NVQGen3jesAbsoluteMPFBiasdn_);
  NVQGen4jesAbsoluteMPFBiasdn_branch = tree->GetBranch("NVQGen4jesAbsoluteMPFBiasdn");
  if (NVQGen4jesAbsoluteMPFBiasdn_branch) NVQGen4jesAbsoluteMPFBiasdn_branch->SetAddress(&NVQGen4jesAbsoluteMPFBiasdn_);
  NiFJjesAbsoluteMPFBiasdn_branch = tree->GetBranch("NiFJjesAbsoluteMPFBiasdn");
  if (NiFJjesAbsoluteMPFBiasdn_branch) NiFJjesAbsoluteMPFBiasdn_branch->SetAddress(&NiFJjesAbsoluteMPFBiasdn_);
  iVMD0jesAbsoluteMPFBiasdn_branch = tree->GetBranch("iVMD0jesAbsoluteMPFBiasdn");
  if (iVMD0jesAbsoluteMPFBiasdn_branch) iVMD0jesAbsoluteMPFBiasdn_branch->SetAddress(&iVMD0jesAbsoluteMPFBiasdn_);
  iVMD1jesAbsoluteMPFBiasdn_branch = tree->GetBranch("iVMD1jesAbsoluteMPFBiasdn");
  if (iVMD1jesAbsoluteMPFBiasdn_branch) iVMD1jesAbsoluteMPFBiasdn_branch->SetAddress(&iVMD1jesAbsoluteMPFBiasdn_);
  iVMD2jesAbsoluteMPFBiasdn_branch = tree->GetBranch("iVMD2jesAbsoluteMPFBiasdn");
  if (iVMD2jesAbsoluteMPFBiasdn_branch) iVMD2jesAbsoluteMPFBiasdn_branch->SetAddress(&iVMD2jesAbsoluteMPFBiasdn_);
  iVMD3jesAbsoluteMPFBiasdn_branch = tree->GetBranch("iVMD3jesAbsoluteMPFBiasdn");
  if (iVMD3jesAbsoluteMPFBiasdn_branch) iVMD3jesAbsoluteMPFBiasdn_branch->SetAddress(&iVMD3jesAbsoluteMPFBiasdn_);
  iVMD4jesAbsoluteMPFBiasdn_branch = tree->GetBranch("iVMD4jesAbsoluteMPFBiasdn");
  if (iVMD4jesAbsoluteMPFBiasdn_branch) iVMD4jesAbsoluteMPFBiasdn_branch->SetAddress(&iVMD4jesAbsoluteMPFBiasdn_);
  iWMD0jesAbsoluteMPFBiasdn_branch = tree->GetBranch("iWMD0jesAbsoluteMPFBiasdn");
  if (iWMD0jesAbsoluteMPFBiasdn_branch) iWMD0jesAbsoluteMPFBiasdn_branch->SetAddress(&iWMD0jesAbsoluteMPFBiasdn_);
  iWMD1jesAbsoluteMPFBiasdn_branch = tree->GetBranch("iWMD1jesAbsoluteMPFBiasdn");
  if (iWMD1jesAbsoluteMPFBiasdn_branch) iWMD1jesAbsoluteMPFBiasdn_branch->SetAddress(&iWMD1jesAbsoluteMPFBiasdn_);
  iWMD2jesAbsoluteMPFBiasdn_branch = tree->GetBranch("iWMD2jesAbsoluteMPFBiasdn");
  if (iWMD2jesAbsoluteMPFBiasdn_branch) iWMD2jesAbsoluteMPFBiasdn_branch->SetAddress(&iWMD2jesAbsoluteMPFBiasdn_);
  iWMD3jesAbsoluteMPFBiasdn_branch = tree->GetBranch("iWMD3jesAbsoluteMPFBiasdn");
  if (iWMD3jesAbsoluteMPFBiasdn_branch) iWMD3jesAbsoluteMPFBiasdn_branch->SetAddress(&iWMD3jesAbsoluteMPFBiasdn_);
  iWMD4jesAbsoluteMPFBiasdn_branch = tree->GetBranch("iWMD4jesAbsoluteMPFBiasdn");
  if (iWMD4jesAbsoluteMPFBiasdn_branch) iWMD4jesAbsoluteMPFBiasdn_branch->SetAddress(&iWMD4jesAbsoluteMPFBiasdn_);
  NJjesAbsoluteMPFBiasdn_branch = tree->GetBranch("NJjesAbsoluteMPFBiasdn");
  if (NJjesAbsoluteMPFBiasdn_branch) NJjesAbsoluteMPFBiasdn_branch->SetAddress(&NJjesAbsoluteMPFBiasdn_);
  NbLoosejesAbsoluteMPFBiasdn_branch = tree->GetBranch("NbLoosejesAbsoluteMPFBiasdn");
  if (NbLoosejesAbsoluteMPFBiasdn_branch) NbLoosejesAbsoluteMPFBiasdn_branch->SetAddress(&NbLoosejesAbsoluteMPFBiasdn_);
  NbMediumjesAbsoluteMPFBiasdn_branch = tree->GetBranch("NbMediumjesAbsoluteMPFBiasdn");
  if (NbMediumjesAbsoluteMPFBiasdn_branch) NbMediumjesAbsoluteMPFBiasdn_branch->SetAddress(&NbMediumjesAbsoluteMPFBiasdn_);
  NbTightjesAbsoluteMPFBiasdn_branch = tree->GetBranch("NbTightjesAbsoluteMPFBiasdn");
  if (NbTightjesAbsoluteMPFBiasdn_branch) NbTightjesAbsoluteMPFBiasdn_branch->SetAddress(&NbTightjesAbsoluteMPFBiasdn_);
  NoORNbLoosejesAbsoluteMPFBiasdn_branch = tree->GetBranch("NoORNbLoosejesAbsoluteMPFBiasdn");
  if (NoORNbLoosejesAbsoluteMPFBiasdn_branch) NoORNbLoosejesAbsoluteMPFBiasdn_branch->SetAddress(&NoORNbLoosejesAbsoluteMPFBiasdn_);
  NoORNbMediumjesAbsoluteMPFBiasdn_branch = tree->GetBranch("NoORNbMediumjesAbsoluteMPFBiasdn");
  if (NoORNbMediumjesAbsoluteMPFBiasdn_branch) NoORNbMediumjesAbsoluteMPFBiasdn_branch->SetAddress(&NoORNbMediumjesAbsoluteMPFBiasdn_);
  NoORNbTightjesAbsoluteMPFBiasdn_branch = tree->GetBranch("NoORNbTightjesAbsoluteMPFBiasdn");
  if (NoORNbTightjesAbsoluteMPFBiasdn_branch) NoORNbTightjesAbsoluteMPFBiasdn_branch->SetAddress(&NoORNbTightjesAbsoluteMPFBiasdn_);
  NQJGenjesAbsoluteMPFBiasdn_branch = tree->GetBranch("NQJGenjesAbsoluteMPFBiasdn");
  if (NQJGenjesAbsoluteMPFBiasdn_branch) NQJGenjesAbsoluteMPFBiasdn_branch->SetAddress(&NQJGenjesAbsoluteMPFBiasdn_);
  NBJGenjesAbsoluteMPFBiasdn_branch = tree->GetBranch("NBJGenjesAbsoluteMPFBiasdn");
  if (NBJGenjesAbsoluteMPFBiasdn_branch) NBJGenjesAbsoluteMPFBiasdn_branch->SetAddress(&NBJGenjesAbsoluteMPFBiasdn_);
  NLJGenjesAbsoluteMPFBiasdn_branch = tree->GetBranch("NLJGenjesAbsoluteMPFBiasdn");
  if (NLJGenjesAbsoluteMPFBiasdn_branch) NLJGenjesAbsoluteMPFBiasdn_branch->SetAddress(&NLJGenjesAbsoluteMPFBiasdn_);
  MVVXjesAbsoluteMPFBiasdn_branch = tree->GetBranch("MVVXjesAbsoluteMPFBiasdn");
  if (MVVXjesAbsoluteMPFBiasdn_branch) MVVXjesAbsoluteMPFBiasdn_branch->SetAddress(&MVVXjesAbsoluteMPFBiasdn_);
  PtVVXjesAbsoluteMPFBiasdn_branch = tree->GetBranch("PtVVXjesAbsoluteMPFBiasdn");
  if (PtVVXjesAbsoluteMPFBiasdn_branch) PtVVXjesAbsoluteMPFBiasdn_branch->SetAddress(&PtVVXjesAbsoluteMPFBiasdn_);
  HTjesAbsoluteMPFBiasdn_branch = tree->GetBranch("HTjesAbsoluteMPFBiasdn");
  if (HTjesAbsoluteMPFBiasdn_branch) HTjesAbsoluteMPFBiasdn_branch->SetAddress(&HTjesAbsoluteMPFBiasdn_);
  HTJjesAbsoluteMPFBiasdn_branch = tree->GetBranch("HTJjesAbsoluteMPFBiasdn");
  if (HTJjesAbsoluteMPFBiasdn_branch) HTJjesAbsoluteMPFBiasdn_branch->SetAddress(&HTJjesAbsoluteMPFBiasdn_);
  HTFJjesAbsoluteMPFBiasdn_branch = tree->GetBranch("HTFJjesAbsoluteMPFBiasdn");
  if (HTFJjesAbsoluteMPFBiasdn_branch) HTFJjesAbsoluteMPFBiasdn_branch->SetAddress(&HTFJjesAbsoluteMPFBiasdn_);
  SumPtFJjesAbsoluteMPFBiasdn_branch = tree->GetBranch("SumPtFJjesAbsoluteMPFBiasdn");
  if (SumPtFJjesAbsoluteMPFBiasdn_branch) SumPtFJjesAbsoluteMPFBiasdn_branch->SetAddress(&SumPtFJjesAbsoluteMPFBiasdn_);
  SumPtJjesAbsoluteMPFBiasdn_branch = tree->GetBranch("SumPtJjesAbsoluteMPFBiasdn");
  if (SumPtJjesAbsoluteMPFBiasdn_branch) SumPtJjesAbsoluteMPFBiasdn_branch->SetAddress(&SumPtJjesAbsoluteMPFBiasdn_);
  NFJjesFragmentationup_branch = tree->GetBranch("NFJjesFragmentationup");
  if (NFJjesFragmentationup_branch) NFJjesFragmentationup_branch->SetAddress(&NFJjesFragmentationup_);
  VMD0jesFragmentationup_branch = tree->GetBranch("VMD0jesFragmentationup");
  if (VMD0jesFragmentationup_branch) VMD0jesFragmentationup_branch->SetAddress(&VMD0jesFragmentationup_);
  VMD1jesFragmentationup_branch = tree->GetBranch("VMD1jesFragmentationup");
  if (VMD1jesFragmentationup_branch) VMD1jesFragmentationup_branch->SetAddress(&VMD1jesFragmentationup_);
  VMD2jesFragmentationup_branch = tree->GetBranch("VMD2jesFragmentationup");
  if (VMD2jesFragmentationup_branch) VMD2jesFragmentationup_branch->SetAddress(&VMD2jesFragmentationup_);
  VMD3jesFragmentationup_branch = tree->GetBranch("VMD3jesFragmentationup");
  if (VMD3jesFragmentationup_branch) VMD3jesFragmentationup_branch->SetAddress(&VMD3jesFragmentationup_);
  VMD4jesFragmentationup_branch = tree->GetBranch("VMD4jesFragmentationup");
  if (VMD4jesFragmentationup_branch) VMD4jesFragmentationup_branch->SetAddress(&VMD4jesFragmentationup_);
  WMD0jesFragmentationup_branch = tree->GetBranch("WMD0jesFragmentationup");
  if (WMD0jesFragmentationup_branch) WMD0jesFragmentationup_branch->SetAddress(&WMD0jesFragmentationup_);
  WMD1jesFragmentationup_branch = tree->GetBranch("WMD1jesFragmentationup");
  if (WMD1jesFragmentationup_branch) WMD1jesFragmentationup_branch->SetAddress(&WMD1jesFragmentationup_);
  WMD2jesFragmentationup_branch = tree->GetBranch("WMD2jesFragmentationup");
  if (WMD2jesFragmentationup_branch) WMD2jesFragmentationup_branch->SetAddress(&WMD2jesFragmentationup_);
  WMD3jesFragmentationup_branch = tree->GetBranch("WMD3jesFragmentationup");
  if (WMD3jesFragmentationup_branch) WMD3jesFragmentationup_branch->SetAddress(&WMD3jesFragmentationup_);
  WMD4jesFragmentationup_branch = tree->GetBranch("WMD4jesFragmentationup");
  if (WMD4jesFragmentationup_branch) WMD4jesFragmentationup_branch->SetAddress(&WMD4jesFragmentationup_);
  NQGen0jesFragmentationup_branch = tree->GetBranch("NQGen0jesFragmentationup");
  if (NQGen0jesFragmentationup_branch) NQGen0jesFragmentationup_branch->SetAddress(&NQGen0jesFragmentationup_);
  NQGen1jesFragmentationup_branch = tree->GetBranch("NQGen1jesFragmentationup");
  if (NQGen1jesFragmentationup_branch) NQGen1jesFragmentationup_branch->SetAddress(&NQGen1jesFragmentationup_);
  NQGen2jesFragmentationup_branch = tree->GetBranch("NQGen2jesFragmentationup");
  if (NQGen2jesFragmentationup_branch) NQGen2jesFragmentationup_branch->SetAddress(&NQGen2jesFragmentationup_);
  NQGen3jesFragmentationup_branch = tree->GetBranch("NQGen3jesFragmentationup");
  if (NQGen3jesFragmentationup_branch) NQGen3jesFragmentationup_branch->SetAddress(&NQGen3jesFragmentationup_);
  NQGen4jesFragmentationup_branch = tree->GetBranch("NQGen4jesFragmentationup");
  if (NQGen4jesFragmentationup_branch) NQGen4jesFragmentationup_branch->SetAddress(&NQGen4jesFragmentationup_);
  NBGen0jesFragmentationup_branch = tree->GetBranch("NBGen0jesFragmentationup");
  if (NBGen0jesFragmentationup_branch) NBGen0jesFragmentationup_branch->SetAddress(&NBGen0jesFragmentationup_);
  NBGen1jesFragmentationup_branch = tree->GetBranch("NBGen1jesFragmentationup");
  if (NBGen1jesFragmentationup_branch) NBGen1jesFragmentationup_branch->SetAddress(&NBGen1jesFragmentationup_);
  NBGen2jesFragmentationup_branch = tree->GetBranch("NBGen2jesFragmentationup");
  if (NBGen2jesFragmentationup_branch) NBGen2jesFragmentationup_branch->SetAddress(&NBGen2jesFragmentationup_);
  NBGen3jesFragmentationup_branch = tree->GetBranch("NBGen3jesFragmentationup");
  if (NBGen3jesFragmentationup_branch) NBGen3jesFragmentationup_branch->SetAddress(&NBGen3jesFragmentationup_);
  NBGen4jesFragmentationup_branch = tree->GetBranch("NBGen4jesFragmentationup");
  if (NBGen4jesFragmentationup_branch) NBGen4jesFragmentationup_branch->SetAddress(&NBGen4jesFragmentationup_);
  NLGen0jesFragmentationup_branch = tree->GetBranch("NLGen0jesFragmentationup");
  if (NLGen0jesFragmentationup_branch) NLGen0jesFragmentationup_branch->SetAddress(&NLGen0jesFragmentationup_);
  NLGen1jesFragmentationup_branch = tree->GetBranch("NLGen1jesFragmentationup");
  if (NLGen1jesFragmentationup_branch) NLGen1jesFragmentationup_branch->SetAddress(&NLGen1jesFragmentationup_);
  NLGen2jesFragmentationup_branch = tree->GetBranch("NLGen2jesFragmentationup");
  if (NLGen2jesFragmentationup_branch) NLGen2jesFragmentationup_branch->SetAddress(&NLGen2jesFragmentationup_);
  NLGen3jesFragmentationup_branch = tree->GetBranch("NLGen3jesFragmentationup");
  if (NLGen3jesFragmentationup_branch) NLGen3jesFragmentationup_branch->SetAddress(&NLGen3jesFragmentationup_);
  NLGen4jesFragmentationup_branch = tree->GetBranch("NLGen4jesFragmentationup");
  if (NLGen4jesFragmentationup_branch) NLGen4jesFragmentationup_branch->SetAddress(&NLGen4jesFragmentationup_);
  NVQGen0jesFragmentationup_branch = tree->GetBranch("NVQGen0jesFragmentationup");
  if (NVQGen0jesFragmentationup_branch) NVQGen0jesFragmentationup_branch->SetAddress(&NVQGen0jesFragmentationup_);
  NVQGen1jesFragmentationup_branch = tree->GetBranch("NVQGen1jesFragmentationup");
  if (NVQGen1jesFragmentationup_branch) NVQGen1jesFragmentationup_branch->SetAddress(&NVQGen1jesFragmentationup_);
  NVQGen2jesFragmentationup_branch = tree->GetBranch("NVQGen2jesFragmentationup");
  if (NVQGen2jesFragmentationup_branch) NVQGen2jesFragmentationup_branch->SetAddress(&NVQGen2jesFragmentationup_);
  NVQGen3jesFragmentationup_branch = tree->GetBranch("NVQGen3jesFragmentationup");
  if (NVQGen3jesFragmentationup_branch) NVQGen3jesFragmentationup_branch->SetAddress(&NVQGen3jesFragmentationup_);
  NVQGen4jesFragmentationup_branch = tree->GetBranch("NVQGen4jesFragmentationup");
  if (NVQGen4jesFragmentationup_branch) NVQGen4jesFragmentationup_branch->SetAddress(&NVQGen4jesFragmentationup_);
  NiFJjesFragmentationup_branch = tree->GetBranch("NiFJjesFragmentationup");
  if (NiFJjesFragmentationup_branch) NiFJjesFragmentationup_branch->SetAddress(&NiFJjesFragmentationup_);
  iVMD0jesFragmentationup_branch = tree->GetBranch("iVMD0jesFragmentationup");
  if (iVMD0jesFragmentationup_branch) iVMD0jesFragmentationup_branch->SetAddress(&iVMD0jesFragmentationup_);
  iVMD1jesFragmentationup_branch = tree->GetBranch("iVMD1jesFragmentationup");
  if (iVMD1jesFragmentationup_branch) iVMD1jesFragmentationup_branch->SetAddress(&iVMD1jesFragmentationup_);
  iVMD2jesFragmentationup_branch = tree->GetBranch("iVMD2jesFragmentationup");
  if (iVMD2jesFragmentationup_branch) iVMD2jesFragmentationup_branch->SetAddress(&iVMD2jesFragmentationup_);
  iVMD3jesFragmentationup_branch = tree->GetBranch("iVMD3jesFragmentationup");
  if (iVMD3jesFragmentationup_branch) iVMD3jesFragmentationup_branch->SetAddress(&iVMD3jesFragmentationup_);
  iVMD4jesFragmentationup_branch = tree->GetBranch("iVMD4jesFragmentationup");
  if (iVMD4jesFragmentationup_branch) iVMD4jesFragmentationup_branch->SetAddress(&iVMD4jesFragmentationup_);
  iWMD0jesFragmentationup_branch = tree->GetBranch("iWMD0jesFragmentationup");
  if (iWMD0jesFragmentationup_branch) iWMD0jesFragmentationup_branch->SetAddress(&iWMD0jesFragmentationup_);
  iWMD1jesFragmentationup_branch = tree->GetBranch("iWMD1jesFragmentationup");
  if (iWMD1jesFragmentationup_branch) iWMD1jesFragmentationup_branch->SetAddress(&iWMD1jesFragmentationup_);
  iWMD2jesFragmentationup_branch = tree->GetBranch("iWMD2jesFragmentationup");
  if (iWMD2jesFragmentationup_branch) iWMD2jesFragmentationup_branch->SetAddress(&iWMD2jesFragmentationup_);
  iWMD3jesFragmentationup_branch = tree->GetBranch("iWMD3jesFragmentationup");
  if (iWMD3jesFragmentationup_branch) iWMD3jesFragmentationup_branch->SetAddress(&iWMD3jesFragmentationup_);
  iWMD4jesFragmentationup_branch = tree->GetBranch("iWMD4jesFragmentationup");
  if (iWMD4jesFragmentationup_branch) iWMD4jesFragmentationup_branch->SetAddress(&iWMD4jesFragmentationup_);
  NJjesFragmentationup_branch = tree->GetBranch("NJjesFragmentationup");
  if (NJjesFragmentationup_branch) NJjesFragmentationup_branch->SetAddress(&NJjesFragmentationup_);
  NbLoosejesFragmentationup_branch = tree->GetBranch("NbLoosejesFragmentationup");
  if (NbLoosejesFragmentationup_branch) NbLoosejesFragmentationup_branch->SetAddress(&NbLoosejesFragmentationup_);
  NbMediumjesFragmentationup_branch = tree->GetBranch("NbMediumjesFragmentationup");
  if (NbMediumjesFragmentationup_branch) NbMediumjesFragmentationup_branch->SetAddress(&NbMediumjesFragmentationup_);
  NbTightjesFragmentationup_branch = tree->GetBranch("NbTightjesFragmentationup");
  if (NbTightjesFragmentationup_branch) NbTightjesFragmentationup_branch->SetAddress(&NbTightjesFragmentationup_);
  NoORNbLoosejesFragmentationup_branch = tree->GetBranch("NoORNbLoosejesFragmentationup");
  if (NoORNbLoosejesFragmentationup_branch) NoORNbLoosejesFragmentationup_branch->SetAddress(&NoORNbLoosejesFragmentationup_);
  NoORNbMediumjesFragmentationup_branch = tree->GetBranch("NoORNbMediumjesFragmentationup");
  if (NoORNbMediumjesFragmentationup_branch) NoORNbMediumjesFragmentationup_branch->SetAddress(&NoORNbMediumjesFragmentationup_);
  NoORNbTightjesFragmentationup_branch = tree->GetBranch("NoORNbTightjesFragmentationup");
  if (NoORNbTightjesFragmentationup_branch) NoORNbTightjesFragmentationup_branch->SetAddress(&NoORNbTightjesFragmentationup_);
  NQJGenjesFragmentationup_branch = tree->GetBranch("NQJGenjesFragmentationup");
  if (NQJGenjesFragmentationup_branch) NQJGenjesFragmentationup_branch->SetAddress(&NQJGenjesFragmentationup_);
  NBJGenjesFragmentationup_branch = tree->GetBranch("NBJGenjesFragmentationup");
  if (NBJGenjesFragmentationup_branch) NBJGenjesFragmentationup_branch->SetAddress(&NBJGenjesFragmentationup_);
  NLJGenjesFragmentationup_branch = tree->GetBranch("NLJGenjesFragmentationup");
  if (NLJGenjesFragmentationup_branch) NLJGenjesFragmentationup_branch->SetAddress(&NLJGenjesFragmentationup_);
  MVVXjesFragmentationup_branch = tree->GetBranch("MVVXjesFragmentationup");
  if (MVVXjesFragmentationup_branch) MVVXjesFragmentationup_branch->SetAddress(&MVVXjesFragmentationup_);
  PtVVXjesFragmentationup_branch = tree->GetBranch("PtVVXjesFragmentationup");
  if (PtVVXjesFragmentationup_branch) PtVVXjesFragmentationup_branch->SetAddress(&PtVVXjesFragmentationup_);
  HTjesFragmentationup_branch = tree->GetBranch("HTjesFragmentationup");
  if (HTjesFragmentationup_branch) HTjesFragmentationup_branch->SetAddress(&HTjesFragmentationup_);
  HTJjesFragmentationup_branch = tree->GetBranch("HTJjesFragmentationup");
  if (HTJjesFragmentationup_branch) HTJjesFragmentationup_branch->SetAddress(&HTJjesFragmentationup_);
  HTFJjesFragmentationup_branch = tree->GetBranch("HTFJjesFragmentationup");
  if (HTFJjesFragmentationup_branch) HTFJjesFragmentationup_branch->SetAddress(&HTFJjesFragmentationup_);
  SumPtFJjesFragmentationup_branch = tree->GetBranch("SumPtFJjesFragmentationup");
  if (SumPtFJjesFragmentationup_branch) SumPtFJjesFragmentationup_branch->SetAddress(&SumPtFJjesFragmentationup_);
  SumPtJjesFragmentationup_branch = tree->GetBranch("SumPtJjesFragmentationup");
  if (SumPtJjesFragmentationup_branch) SumPtJjesFragmentationup_branch->SetAddress(&SumPtJjesFragmentationup_);
  NFJjesFragmentationdn_branch = tree->GetBranch("NFJjesFragmentationdn");
  if (NFJjesFragmentationdn_branch) NFJjesFragmentationdn_branch->SetAddress(&NFJjesFragmentationdn_);
  VMD0jesFragmentationdn_branch = tree->GetBranch("VMD0jesFragmentationdn");
  if (VMD0jesFragmentationdn_branch) VMD0jesFragmentationdn_branch->SetAddress(&VMD0jesFragmentationdn_);
  VMD1jesFragmentationdn_branch = tree->GetBranch("VMD1jesFragmentationdn");
  if (VMD1jesFragmentationdn_branch) VMD1jesFragmentationdn_branch->SetAddress(&VMD1jesFragmentationdn_);
  VMD2jesFragmentationdn_branch = tree->GetBranch("VMD2jesFragmentationdn");
  if (VMD2jesFragmentationdn_branch) VMD2jesFragmentationdn_branch->SetAddress(&VMD2jesFragmentationdn_);
  VMD3jesFragmentationdn_branch = tree->GetBranch("VMD3jesFragmentationdn");
  if (VMD3jesFragmentationdn_branch) VMD3jesFragmentationdn_branch->SetAddress(&VMD3jesFragmentationdn_);
  VMD4jesFragmentationdn_branch = tree->GetBranch("VMD4jesFragmentationdn");
  if (VMD4jesFragmentationdn_branch) VMD4jesFragmentationdn_branch->SetAddress(&VMD4jesFragmentationdn_);
  WMD0jesFragmentationdn_branch = tree->GetBranch("WMD0jesFragmentationdn");
  if (WMD0jesFragmentationdn_branch) WMD0jesFragmentationdn_branch->SetAddress(&WMD0jesFragmentationdn_);
  WMD1jesFragmentationdn_branch = tree->GetBranch("WMD1jesFragmentationdn");
  if (WMD1jesFragmentationdn_branch) WMD1jesFragmentationdn_branch->SetAddress(&WMD1jesFragmentationdn_);
  WMD2jesFragmentationdn_branch = tree->GetBranch("WMD2jesFragmentationdn");
  if (WMD2jesFragmentationdn_branch) WMD2jesFragmentationdn_branch->SetAddress(&WMD2jesFragmentationdn_);
  WMD3jesFragmentationdn_branch = tree->GetBranch("WMD3jesFragmentationdn");
  if (WMD3jesFragmentationdn_branch) WMD3jesFragmentationdn_branch->SetAddress(&WMD3jesFragmentationdn_);
  WMD4jesFragmentationdn_branch = tree->GetBranch("WMD4jesFragmentationdn");
  if (WMD4jesFragmentationdn_branch) WMD4jesFragmentationdn_branch->SetAddress(&WMD4jesFragmentationdn_);
  NQGen0jesFragmentationdn_branch = tree->GetBranch("NQGen0jesFragmentationdn");
  if (NQGen0jesFragmentationdn_branch) NQGen0jesFragmentationdn_branch->SetAddress(&NQGen0jesFragmentationdn_);
  NQGen1jesFragmentationdn_branch = tree->GetBranch("NQGen1jesFragmentationdn");
  if (NQGen1jesFragmentationdn_branch) NQGen1jesFragmentationdn_branch->SetAddress(&NQGen1jesFragmentationdn_);
  NQGen2jesFragmentationdn_branch = tree->GetBranch("NQGen2jesFragmentationdn");
  if (NQGen2jesFragmentationdn_branch) NQGen2jesFragmentationdn_branch->SetAddress(&NQGen2jesFragmentationdn_);
  NQGen3jesFragmentationdn_branch = tree->GetBranch("NQGen3jesFragmentationdn");
  if (NQGen3jesFragmentationdn_branch) NQGen3jesFragmentationdn_branch->SetAddress(&NQGen3jesFragmentationdn_);
  NQGen4jesFragmentationdn_branch = tree->GetBranch("NQGen4jesFragmentationdn");
  if (NQGen4jesFragmentationdn_branch) NQGen4jesFragmentationdn_branch->SetAddress(&NQGen4jesFragmentationdn_);
  NBGen0jesFragmentationdn_branch = tree->GetBranch("NBGen0jesFragmentationdn");
  if (NBGen0jesFragmentationdn_branch) NBGen0jesFragmentationdn_branch->SetAddress(&NBGen0jesFragmentationdn_);
  NBGen1jesFragmentationdn_branch = tree->GetBranch("NBGen1jesFragmentationdn");
  if (NBGen1jesFragmentationdn_branch) NBGen1jesFragmentationdn_branch->SetAddress(&NBGen1jesFragmentationdn_);
  NBGen2jesFragmentationdn_branch = tree->GetBranch("NBGen2jesFragmentationdn");
  if (NBGen2jesFragmentationdn_branch) NBGen2jesFragmentationdn_branch->SetAddress(&NBGen2jesFragmentationdn_);
  NBGen3jesFragmentationdn_branch = tree->GetBranch("NBGen3jesFragmentationdn");
  if (NBGen3jesFragmentationdn_branch) NBGen3jesFragmentationdn_branch->SetAddress(&NBGen3jesFragmentationdn_);
  NBGen4jesFragmentationdn_branch = tree->GetBranch("NBGen4jesFragmentationdn");
  if (NBGen4jesFragmentationdn_branch) NBGen4jesFragmentationdn_branch->SetAddress(&NBGen4jesFragmentationdn_);
  NLGen0jesFragmentationdn_branch = tree->GetBranch("NLGen0jesFragmentationdn");
  if (NLGen0jesFragmentationdn_branch) NLGen0jesFragmentationdn_branch->SetAddress(&NLGen0jesFragmentationdn_);
  NLGen1jesFragmentationdn_branch = tree->GetBranch("NLGen1jesFragmentationdn");
  if (NLGen1jesFragmentationdn_branch) NLGen1jesFragmentationdn_branch->SetAddress(&NLGen1jesFragmentationdn_);
  NLGen2jesFragmentationdn_branch = tree->GetBranch("NLGen2jesFragmentationdn");
  if (NLGen2jesFragmentationdn_branch) NLGen2jesFragmentationdn_branch->SetAddress(&NLGen2jesFragmentationdn_);
  NLGen3jesFragmentationdn_branch = tree->GetBranch("NLGen3jesFragmentationdn");
  if (NLGen3jesFragmentationdn_branch) NLGen3jesFragmentationdn_branch->SetAddress(&NLGen3jesFragmentationdn_);
  NLGen4jesFragmentationdn_branch = tree->GetBranch("NLGen4jesFragmentationdn");
  if (NLGen4jesFragmentationdn_branch) NLGen4jesFragmentationdn_branch->SetAddress(&NLGen4jesFragmentationdn_);
  NVQGen0jesFragmentationdn_branch = tree->GetBranch("NVQGen0jesFragmentationdn");
  if (NVQGen0jesFragmentationdn_branch) NVQGen0jesFragmentationdn_branch->SetAddress(&NVQGen0jesFragmentationdn_);
  NVQGen1jesFragmentationdn_branch = tree->GetBranch("NVQGen1jesFragmentationdn");
  if (NVQGen1jesFragmentationdn_branch) NVQGen1jesFragmentationdn_branch->SetAddress(&NVQGen1jesFragmentationdn_);
  NVQGen2jesFragmentationdn_branch = tree->GetBranch("NVQGen2jesFragmentationdn");
  if (NVQGen2jesFragmentationdn_branch) NVQGen2jesFragmentationdn_branch->SetAddress(&NVQGen2jesFragmentationdn_);
  NVQGen3jesFragmentationdn_branch = tree->GetBranch("NVQGen3jesFragmentationdn");
  if (NVQGen3jesFragmentationdn_branch) NVQGen3jesFragmentationdn_branch->SetAddress(&NVQGen3jesFragmentationdn_);
  NVQGen4jesFragmentationdn_branch = tree->GetBranch("NVQGen4jesFragmentationdn");
  if (NVQGen4jesFragmentationdn_branch) NVQGen4jesFragmentationdn_branch->SetAddress(&NVQGen4jesFragmentationdn_);
  NiFJjesFragmentationdn_branch = tree->GetBranch("NiFJjesFragmentationdn");
  if (NiFJjesFragmentationdn_branch) NiFJjesFragmentationdn_branch->SetAddress(&NiFJjesFragmentationdn_);
  iVMD0jesFragmentationdn_branch = tree->GetBranch("iVMD0jesFragmentationdn");
  if (iVMD0jesFragmentationdn_branch) iVMD0jesFragmentationdn_branch->SetAddress(&iVMD0jesFragmentationdn_);
  iVMD1jesFragmentationdn_branch = tree->GetBranch("iVMD1jesFragmentationdn");
  if (iVMD1jesFragmentationdn_branch) iVMD1jesFragmentationdn_branch->SetAddress(&iVMD1jesFragmentationdn_);
  iVMD2jesFragmentationdn_branch = tree->GetBranch("iVMD2jesFragmentationdn");
  if (iVMD2jesFragmentationdn_branch) iVMD2jesFragmentationdn_branch->SetAddress(&iVMD2jesFragmentationdn_);
  iVMD3jesFragmentationdn_branch = tree->GetBranch("iVMD3jesFragmentationdn");
  if (iVMD3jesFragmentationdn_branch) iVMD3jesFragmentationdn_branch->SetAddress(&iVMD3jesFragmentationdn_);
  iVMD4jesFragmentationdn_branch = tree->GetBranch("iVMD4jesFragmentationdn");
  if (iVMD4jesFragmentationdn_branch) iVMD4jesFragmentationdn_branch->SetAddress(&iVMD4jesFragmentationdn_);
  iWMD0jesFragmentationdn_branch = tree->GetBranch("iWMD0jesFragmentationdn");
  if (iWMD0jesFragmentationdn_branch) iWMD0jesFragmentationdn_branch->SetAddress(&iWMD0jesFragmentationdn_);
  iWMD1jesFragmentationdn_branch = tree->GetBranch("iWMD1jesFragmentationdn");
  if (iWMD1jesFragmentationdn_branch) iWMD1jesFragmentationdn_branch->SetAddress(&iWMD1jesFragmentationdn_);
  iWMD2jesFragmentationdn_branch = tree->GetBranch("iWMD2jesFragmentationdn");
  if (iWMD2jesFragmentationdn_branch) iWMD2jesFragmentationdn_branch->SetAddress(&iWMD2jesFragmentationdn_);
  iWMD3jesFragmentationdn_branch = tree->GetBranch("iWMD3jesFragmentationdn");
  if (iWMD3jesFragmentationdn_branch) iWMD3jesFragmentationdn_branch->SetAddress(&iWMD3jesFragmentationdn_);
  iWMD4jesFragmentationdn_branch = tree->GetBranch("iWMD4jesFragmentationdn");
  if (iWMD4jesFragmentationdn_branch) iWMD4jesFragmentationdn_branch->SetAddress(&iWMD4jesFragmentationdn_);
  NJjesFragmentationdn_branch = tree->GetBranch("NJjesFragmentationdn");
  if (NJjesFragmentationdn_branch) NJjesFragmentationdn_branch->SetAddress(&NJjesFragmentationdn_);
  NbLoosejesFragmentationdn_branch = tree->GetBranch("NbLoosejesFragmentationdn");
  if (NbLoosejesFragmentationdn_branch) NbLoosejesFragmentationdn_branch->SetAddress(&NbLoosejesFragmentationdn_);
  NbMediumjesFragmentationdn_branch = tree->GetBranch("NbMediumjesFragmentationdn");
  if (NbMediumjesFragmentationdn_branch) NbMediumjesFragmentationdn_branch->SetAddress(&NbMediumjesFragmentationdn_);
  NbTightjesFragmentationdn_branch = tree->GetBranch("NbTightjesFragmentationdn");
  if (NbTightjesFragmentationdn_branch) NbTightjesFragmentationdn_branch->SetAddress(&NbTightjesFragmentationdn_);
  NoORNbLoosejesFragmentationdn_branch = tree->GetBranch("NoORNbLoosejesFragmentationdn");
  if (NoORNbLoosejesFragmentationdn_branch) NoORNbLoosejesFragmentationdn_branch->SetAddress(&NoORNbLoosejesFragmentationdn_);
  NoORNbMediumjesFragmentationdn_branch = tree->GetBranch("NoORNbMediumjesFragmentationdn");
  if (NoORNbMediumjesFragmentationdn_branch) NoORNbMediumjesFragmentationdn_branch->SetAddress(&NoORNbMediumjesFragmentationdn_);
  NoORNbTightjesFragmentationdn_branch = tree->GetBranch("NoORNbTightjesFragmentationdn");
  if (NoORNbTightjesFragmentationdn_branch) NoORNbTightjesFragmentationdn_branch->SetAddress(&NoORNbTightjesFragmentationdn_);
  NQJGenjesFragmentationdn_branch = tree->GetBranch("NQJGenjesFragmentationdn");
  if (NQJGenjesFragmentationdn_branch) NQJGenjesFragmentationdn_branch->SetAddress(&NQJGenjesFragmentationdn_);
  NBJGenjesFragmentationdn_branch = tree->GetBranch("NBJGenjesFragmentationdn");
  if (NBJGenjesFragmentationdn_branch) NBJGenjesFragmentationdn_branch->SetAddress(&NBJGenjesFragmentationdn_);
  NLJGenjesFragmentationdn_branch = tree->GetBranch("NLJGenjesFragmentationdn");
  if (NLJGenjesFragmentationdn_branch) NLJGenjesFragmentationdn_branch->SetAddress(&NLJGenjesFragmentationdn_);
  MVVXjesFragmentationdn_branch = tree->GetBranch("MVVXjesFragmentationdn");
  if (MVVXjesFragmentationdn_branch) MVVXjesFragmentationdn_branch->SetAddress(&MVVXjesFragmentationdn_);
  PtVVXjesFragmentationdn_branch = tree->GetBranch("PtVVXjesFragmentationdn");
  if (PtVVXjesFragmentationdn_branch) PtVVXjesFragmentationdn_branch->SetAddress(&PtVVXjesFragmentationdn_);
  HTjesFragmentationdn_branch = tree->GetBranch("HTjesFragmentationdn");
  if (HTjesFragmentationdn_branch) HTjesFragmentationdn_branch->SetAddress(&HTjesFragmentationdn_);
  HTJjesFragmentationdn_branch = tree->GetBranch("HTJjesFragmentationdn");
  if (HTJjesFragmentationdn_branch) HTJjesFragmentationdn_branch->SetAddress(&HTJjesFragmentationdn_);
  HTFJjesFragmentationdn_branch = tree->GetBranch("HTFJjesFragmentationdn");
  if (HTFJjesFragmentationdn_branch) HTFJjesFragmentationdn_branch->SetAddress(&HTFJjesFragmentationdn_);
  SumPtFJjesFragmentationdn_branch = tree->GetBranch("SumPtFJjesFragmentationdn");
  if (SumPtFJjesFragmentationdn_branch) SumPtFJjesFragmentationdn_branch->SetAddress(&SumPtFJjesFragmentationdn_);
  SumPtJjesFragmentationdn_branch = tree->GetBranch("SumPtJjesFragmentationdn");
  if (SumPtJjesFragmentationdn_branch) SumPtJjesFragmentationdn_branch->SetAddress(&SumPtJjesFragmentationdn_);
  NFJjesSinglePionECALup_branch = tree->GetBranch("NFJjesSinglePionECALup");
  if (NFJjesSinglePionECALup_branch) NFJjesSinglePionECALup_branch->SetAddress(&NFJjesSinglePionECALup_);
  VMD0jesSinglePionECALup_branch = tree->GetBranch("VMD0jesSinglePionECALup");
  if (VMD0jesSinglePionECALup_branch) VMD0jesSinglePionECALup_branch->SetAddress(&VMD0jesSinglePionECALup_);
  VMD1jesSinglePionECALup_branch = tree->GetBranch("VMD1jesSinglePionECALup");
  if (VMD1jesSinglePionECALup_branch) VMD1jesSinglePionECALup_branch->SetAddress(&VMD1jesSinglePionECALup_);
  VMD2jesSinglePionECALup_branch = tree->GetBranch("VMD2jesSinglePionECALup");
  if (VMD2jesSinglePionECALup_branch) VMD2jesSinglePionECALup_branch->SetAddress(&VMD2jesSinglePionECALup_);
  VMD3jesSinglePionECALup_branch = tree->GetBranch("VMD3jesSinglePionECALup");
  if (VMD3jesSinglePionECALup_branch) VMD3jesSinglePionECALup_branch->SetAddress(&VMD3jesSinglePionECALup_);
  VMD4jesSinglePionECALup_branch = tree->GetBranch("VMD4jesSinglePionECALup");
  if (VMD4jesSinglePionECALup_branch) VMD4jesSinglePionECALup_branch->SetAddress(&VMD4jesSinglePionECALup_);
  WMD0jesSinglePionECALup_branch = tree->GetBranch("WMD0jesSinglePionECALup");
  if (WMD0jesSinglePionECALup_branch) WMD0jesSinglePionECALup_branch->SetAddress(&WMD0jesSinglePionECALup_);
  WMD1jesSinglePionECALup_branch = tree->GetBranch("WMD1jesSinglePionECALup");
  if (WMD1jesSinglePionECALup_branch) WMD1jesSinglePionECALup_branch->SetAddress(&WMD1jesSinglePionECALup_);
  WMD2jesSinglePionECALup_branch = tree->GetBranch("WMD2jesSinglePionECALup");
  if (WMD2jesSinglePionECALup_branch) WMD2jesSinglePionECALup_branch->SetAddress(&WMD2jesSinglePionECALup_);
  WMD3jesSinglePionECALup_branch = tree->GetBranch("WMD3jesSinglePionECALup");
  if (WMD3jesSinglePionECALup_branch) WMD3jesSinglePionECALup_branch->SetAddress(&WMD3jesSinglePionECALup_);
  WMD4jesSinglePionECALup_branch = tree->GetBranch("WMD4jesSinglePionECALup");
  if (WMD4jesSinglePionECALup_branch) WMD4jesSinglePionECALup_branch->SetAddress(&WMD4jesSinglePionECALup_);
  NQGen0jesSinglePionECALup_branch = tree->GetBranch("NQGen0jesSinglePionECALup");
  if (NQGen0jesSinglePionECALup_branch) NQGen0jesSinglePionECALup_branch->SetAddress(&NQGen0jesSinglePionECALup_);
  NQGen1jesSinglePionECALup_branch = tree->GetBranch("NQGen1jesSinglePionECALup");
  if (NQGen1jesSinglePionECALup_branch) NQGen1jesSinglePionECALup_branch->SetAddress(&NQGen1jesSinglePionECALup_);
  NQGen2jesSinglePionECALup_branch = tree->GetBranch("NQGen2jesSinglePionECALup");
  if (NQGen2jesSinglePionECALup_branch) NQGen2jesSinglePionECALup_branch->SetAddress(&NQGen2jesSinglePionECALup_);
  NQGen3jesSinglePionECALup_branch = tree->GetBranch("NQGen3jesSinglePionECALup");
  if (NQGen3jesSinglePionECALup_branch) NQGen3jesSinglePionECALup_branch->SetAddress(&NQGen3jesSinglePionECALup_);
  NQGen4jesSinglePionECALup_branch = tree->GetBranch("NQGen4jesSinglePionECALup");
  if (NQGen4jesSinglePionECALup_branch) NQGen4jesSinglePionECALup_branch->SetAddress(&NQGen4jesSinglePionECALup_);
  NBGen0jesSinglePionECALup_branch = tree->GetBranch("NBGen0jesSinglePionECALup");
  if (NBGen0jesSinglePionECALup_branch) NBGen0jesSinglePionECALup_branch->SetAddress(&NBGen0jesSinglePionECALup_);
  NBGen1jesSinglePionECALup_branch = tree->GetBranch("NBGen1jesSinglePionECALup");
  if (NBGen1jesSinglePionECALup_branch) NBGen1jesSinglePionECALup_branch->SetAddress(&NBGen1jesSinglePionECALup_);
  NBGen2jesSinglePionECALup_branch = tree->GetBranch("NBGen2jesSinglePionECALup");
  if (NBGen2jesSinglePionECALup_branch) NBGen2jesSinglePionECALup_branch->SetAddress(&NBGen2jesSinglePionECALup_);
  NBGen3jesSinglePionECALup_branch = tree->GetBranch("NBGen3jesSinglePionECALup");
  if (NBGen3jesSinglePionECALup_branch) NBGen3jesSinglePionECALup_branch->SetAddress(&NBGen3jesSinglePionECALup_);
  NBGen4jesSinglePionECALup_branch = tree->GetBranch("NBGen4jesSinglePionECALup");
  if (NBGen4jesSinglePionECALup_branch) NBGen4jesSinglePionECALup_branch->SetAddress(&NBGen4jesSinglePionECALup_);
  NLGen0jesSinglePionECALup_branch = tree->GetBranch("NLGen0jesSinglePionECALup");
  if (NLGen0jesSinglePionECALup_branch) NLGen0jesSinglePionECALup_branch->SetAddress(&NLGen0jesSinglePionECALup_);
  NLGen1jesSinglePionECALup_branch = tree->GetBranch("NLGen1jesSinglePionECALup");
  if (NLGen1jesSinglePionECALup_branch) NLGen1jesSinglePionECALup_branch->SetAddress(&NLGen1jesSinglePionECALup_);
  NLGen2jesSinglePionECALup_branch = tree->GetBranch("NLGen2jesSinglePionECALup");
  if (NLGen2jesSinglePionECALup_branch) NLGen2jesSinglePionECALup_branch->SetAddress(&NLGen2jesSinglePionECALup_);
  NLGen3jesSinglePionECALup_branch = tree->GetBranch("NLGen3jesSinglePionECALup");
  if (NLGen3jesSinglePionECALup_branch) NLGen3jesSinglePionECALup_branch->SetAddress(&NLGen3jesSinglePionECALup_);
  NLGen4jesSinglePionECALup_branch = tree->GetBranch("NLGen4jesSinglePionECALup");
  if (NLGen4jesSinglePionECALup_branch) NLGen4jesSinglePionECALup_branch->SetAddress(&NLGen4jesSinglePionECALup_);
  NVQGen0jesSinglePionECALup_branch = tree->GetBranch("NVQGen0jesSinglePionECALup");
  if (NVQGen0jesSinglePionECALup_branch) NVQGen0jesSinglePionECALup_branch->SetAddress(&NVQGen0jesSinglePionECALup_);
  NVQGen1jesSinglePionECALup_branch = tree->GetBranch("NVQGen1jesSinglePionECALup");
  if (NVQGen1jesSinglePionECALup_branch) NVQGen1jesSinglePionECALup_branch->SetAddress(&NVQGen1jesSinglePionECALup_);
  NVQGen2jesSinglePionECALup_branch = tree->GetBranch("NVQGen2jesSinglePionECALup");
  if (NVQGen2jesSinglePionECALup_branch) NVQGen2jesSinglePionECALup_branch->SetAddress(&NVQGen2jesSinglePionECALup_);
  NVQGen3jesSinglePionECALup_branch = tree->GetBranch("NVQGen3jesSinglePionECALup");
  if (NVQGen3jesSinglePionECALup_branch) NVQGen3jesSinglePionECALup_branch->SetAddress(&NVQGen3jesSinglePionECALup_);
  NVQGen4jesSinglePionECALup_branch = tree->GetBranch("NVQGen4jesSinglePionECALup");
  if (NVQGen4jesSinglePionECALup_branch) NVQGen4jesSinglePionECALup_branch->SetAddress(&NVQGen4jesSinglePionECALup_);
  NiFJjesSinglePionECALup_branch = tree->GetBranch("NiFJjesSinglePionECALup");
  if (NiFJjesSinglePionECALup_branch) NiFJjesSinglePionECALup_branch->SetAddress(&NiFJjesSinglePionECALup_);
  iVMD0jesSinglePionECALup_branch = tree->GetBranch("iVMD0jesSinglePionECALup");
  if (iVMD0jesSinglePionECALup_branch) iVMD0jesSinglePionECALup_branch->SetAddress(&iVMD0jesSinglePionECALup_);
  iVMD1jesSinglePionECALup_branch = tree->GetBranch("iVMD1jesSinglePionECALup");
  if (iVMD1jesSinglePionECALup_branch) iVMD1jesSinglePionECALup_branch->SetAddress(&iVMD1jesSinglePionECALup_);
  iVMD2jesSinglePionECALup_branch = tree->GetBranch("iVMD2jesSinglePionECALup");
  if (iVMD2jesSinglePionECALup_branch) iVMD2jesSinglePionECALup_branch->SetAddress(&iVMD2jesSinglePionECALup_);
  iVMD3jesSinglePionECALup_branch = tree->GetBranch("iVMD3jesSinglePionECALup");
  if (iVMD3jesSinglePionECALup_branch) iVMD3jesSinglePionECALup_branch->SetAddress(&iVMD3jesSinglePionECALup_);
  iVMD4jesSinglePionECALup_branch = tree->GetBranch("iVMD4jesSinglePionECALup");
  if (iVMD4jesSinglePionECALup_branch) iVMD4jesSinglePionECALup_branch->SetAddress(&iVMD4jesSinglePionECALup_);
  iWMD0jesSinglePionECALup_branch = tree->GetBranch("iWMD0jesSinglePionECALup");
  if (iWMD0jesSinglePionECALup_branch) iWMD0jesSinglePionECALup_branch->SetAddress(&iWMD0jesSinglePionECALup_);
  iWMD1jesSinglePionECALup_branch = tree->GetBranch("iWMD1jesSinglePionECALup");
  if (iWMD1jesSinglePionECALup_branch) iWMD1jesSinglePionECALup_branch->SetAddress(&iWMD1jesSinglePionECALup_);
  iWMD2jesSinglePionECALup_branch = tree->GetBranch("iWMD2jesSinglePionECALup");
  if (iWMD2jesSinglePionECALup_branch) iWMD2jesSinglePionECALup_branch->SetAddress(&iWMD2jesSinglePionECALup_);
  iWMD3jesSinglePionECALup_branch = tree->GetBranch("iWMD3jesSinglePionECALup");
  if (iWMD3jesSinglePionECALup_branch) iWMD3jesSinglePionECALup_branch->SetAddress(&iWMD3jesSinglePionECALup_);
  iWMD4jesSinglePionECALup_branch = tree->GetBranch("iWMD4jesSinglePionECALup");
  if (iWMD4jesSinglePionECALup_branch) iWMD4jesSinglePionECALup_branch->SetAddress(&iWMD4jesSinglePionECALup_);
  NJjesSinglePionECALup_branch = tree->GetBranch("NJjesSinglePionECALup");
  if (NJjesSinglePionECALup_branch) NJjesSinglePionECALup_branch->SetAddress(&NJjesSinglePionECALup_);
  NbLoosejesSinglePionECALup_branch = tree->GetBranch("NbLoosejesSinglePionECALup");
  if (NbLoosejesSinglePionECALup_branch) NbLoosejesSinglePionECALup_branch->SetAddress(&NbLoosejesSinglePionECALup_);
  NbMediumjesSinglePionECALup_branch = tree->GetBranch("NbMediumjesSinglePionECALup");
  if (NbMediumjesSinglePionECALup_branch) NbMediumjesSinglePionECALup_branch->SetAddress(&NbMediumjesSinglePionECALup_);
  NbTightjesSinglePionECALup_branch = tree->GetBranch("NbTightjesSinglePionECALup");
  if (NbTightjesSinglePionECALup_branch) NbTightjesSinglePionECALup_branch->SetAddress(&NbTightjesSinglePionECALup_);
  NoORNbLoosejesSinglePionECALup_branch = tree->GetBranch("NoORNbLoosejesSinglePionECALup");
  if (NoORNbLoosejesSinglePionECALup_branch) NoORNbLoosejesSinglePionECALup_branch->SetAddress(&NoORNbLoosejesSinglePionECALup_);
  NoORNbMediumjesSinglePionECALup_branch = tree->GetBranch("NoORNbMediumjesSinglePionECALup");
  if (NoORNbMediumjesSinglePionECALup_branch) NoORNbMediumjesSinglePionECALup_branch->SetAddress(&NoORNbMediumjesSinglePionECALup_);
  NoORNbTightjesSinglePionECALup_branch = tree->GetBranch("NoORNbTightjesSinglePionECALup");
  if (NoORNbTightjesSinglePionECALup_branch) NoORNbTightjesSinglePionECALup_branch->SetAddress(&NoORNbTightjesSinglePionECALup_);
  NQJGenjesSinglePionECALup_branch = tree->GetBranch("NQJGenjesSinglePionECALup");
  if (NQJGenjesSinglePionECALup_branch) NQJGenjesSinglePionECALup_branch->SetAddress(&NQJGenjesSinglePionECALup_);
  NBJGenjesSinglePionECALup_branch = tree->GetBranch("NBJGenjesSinglePionECALup");
  if (NBJGenjesSinglePionECALup_branch) NBJGenjesSinglePionECALup_branch->SetAddress(&NBJGenjesSinglePionECALup_);
  NLJGenjesSinglePionECALup_branch = tree->GetBranch("NLJGenjesSinglePionECALup");
  if (NLJGenjesSinglePionECALup_branch) NLJGenjesSinglePionECALup_branch->SetAddress(&NLJGenjesSinglePionECALup_);
  MVVXjesSinglePionECALup_branch = tree->GetBranch("MVVXjesSinglePionECALup");
  if (MVVXjesSinglePionECALup_branch) MVVXjesSinglePionECALup_branch->SetAddress(&MVVXjesSinglePionECALup_);
  PtVVXjesSinglePionECALup_branch = tree->GetBranch("PtVVXjesSinglePionECALup");
  if (PtVVXjesSinglePionECALup_branch) PtVVXjesSinglePionECALup_branch->SetAddress(&PtVVXjesSinglePionECALup_);
  HTjesSinglePionECALup_branch = tree->GetBranch("HTjesSinglePionECALup");
  if (HTjesSinglePionECALup_branch) HTjesSinglePionECALup_branch->SetAddress(&HTjesSinglePionECALup_);
  HTJjesSinglePionECALup_branch = tree->GetBranch("HTJjesSinglePionECALup");
  if (HTJjesSinglePionECALup_branch) HTJjesSinglePionECALup_branch->SetAddress(&HTJjesSinglePionECALup_);
  HTFJjesSinglePionECALup_branch = tree->GetBranch("HTFJjesSinglePionECALup");
  if (HTFJjesSinglePionECALup_branch) HTFJjesSinglePionECALup_branch->SetAddress(&HTFJjesSinglePionECALup_);
  SumPtFJjesSinglePionECALup_branch = tree->GetBranch("SumPtFJjesSinglePionECALup");
  if (SumPtFJjesSinglePionECALup_branch) SumPtFJjesSinglePionECALup_branch->SetAddress(&SumPtFJjesSinglePionECALup_);
  SumPtJjesSinglePionECALup_branch = tree->GetBranch("SumPtJjesSinglePionECALup");
  if (SumPtJjesSinglePionECALup_branch) SumPtJjesSinglePionECALup_branch->SetAddress(&SumPtJjesSinglePionECALup_);
  NFJjesSinglePionECALdn_branch = tree->GetBranch("NFJjesSinglePionECALdn");
  if (NFJjesSinglePionECALdn_branch) NFJjesSinglePionECALdn_branch->SetAddress(&NFJjesSinglePionECALdn_);
  VMD0jesSinglePionECALdn_branch = tree->GetBranch("VMD0jesSinglePionECALdn");
  if (VMD0jesSinglePionECALdn_branch) VMD0jesSinglePionECALdn_branch->SetAddress(&VMD0jesSinglePionECALdn_);
  VMD1jesSinglePionECALdn_branch = tree->GetBranch("VMD1jesSinglePionECALdn");
  if (VMD1jesSinglePionECALdn_branch) VMD1jesSinglePionECALdn_branch->SetAddress(&VMD1jesSinglePionECALdn_);
  VMD2jesSinglePionECALdn_branch = tree->GetBranch("VMD2jesSinglePionECALdn");
  if (VMD2jesSinglePionECALdn_branch) VMD2jesSinglePionECALdn_branch->SetAddress(&VMD2jesSinglePionECALdn_);
  VMD3jesSinglePionECALdn_branch = tree->GetBranch("VMD3jesSinglePionECALdn");
  if (VMD3jesSinglePionECALdn_branch) VMD3jesSinglePionECALdn_branch->SetAddress(&VMD3jesSinglePionECALdn_);
  VMD4jesSinglePionECALdn_branch = tree->GetBranch("VMD4jesSinglePionECALdn");
  if (VMD4jesSinglePionECALdn_branch) VMD4jesSinglePionECALdn_branch->SetAddress(&VMD4jesSinglePionECALdn_);
  WMD0jesSinglePionECALdn_branch = tree->GetBranch("WMD0jesSinglePionECALdn");
  if (WMD0jesSinglePionECALdn_branch) WMD0jesSinglePionECALdn_branch->SetAddress(&WMD0jesSinglePionECALdn_);
  WMD1jesSinglePionECALdn_branch = tree->GetBranch("WMD1jesSinglePionECALdn");
  if (WMD1jesSinglePionECALdn_branch) WMD1jesSinglePionECALdn_branch->SetAddress(&WMD1jesSinglePionECALdn_);
  WMD2jesSinglePionECALdn_branch = tree->GetBranch("WMD2jesSinglePionECALdn");
  if (WMD2jesSinglePionECALdn_branch) WMD2jesSinglePionECALdn_branch->SetAddress(&WMD2jesSinglePionECALdn_);
  WMD3jesSinglePionECALdn_branch = tree->GetBranch("WMD3jesSinglePionECALdn");
  if (WMD3jesSinglePionECALdn_branch) WMD3jesSinglePionECALdn_branch->SetAddress(&WMD3jesSinglePionECALdn_);
  WMD4jesSinglePionECALdn_branch = tree->GetBranch("WMD4jesSinglePionECALdn");
  if (WMD4jesSinglePionECALdn_branch) WMD4jesSinglePionECALdn_branch->SetAddress(&WMD4jesSinglePionECALdn_);
  NQGen0jesSinglePionECALdn_branch = tree->GetBranch("NQGen0jesSinglePionECALdn");
  if (NQGen0jesSinglePionECALdn_branch) NQGen0jesSinglePionECALdn_branch->SetAddress(&NQGen0jesSinglePionECALdn_);
  NQGen1jesSinglePionECALdn_branch = tree->GetBranch("NQGen1jesSinglePionECALdn");
  if (NQGen1jesSinglePionECALdn_branch) NQGen1jesSinglePionECALdn_branch->SetAddress(&NQGen1jesSinglePionECALdn_);
  NQGen2jesSinglePionECALdn_branch = tree->GetBranch("NQGen2jesSinglePionECALdn");
  if (NQGen2jesSinglePionECALdn_branch) NQGen2jesSinglePionECALdn_branch->SetAddress(&NQGen2jesSinglePionECALdn_);
  NQGen3jesSinglePionECALdn_branch = tree->GetBranch("NQGen3jesSinglePionECALdn");
  if (NQGen3jesSinglePionECALdn_branch) NQGen3jesSinglePionECALdn_branch->SetAddress(&NQGen3jesSinglePionECALdn_);
  NQGen4jesSinglePionECALdn_branch = tree->GetBranch("NQGen4jesSinglePionECALdn");
  if (NQGen4jesSinglePionECALdn_branch) NQGen4jesSinglePionECALdn_branch->SetAddress(&NQGen4jesSinglePionECALdn_);
  NBGen0jesSinglePionECALdn_branch = tree->GetBranch("NBGen0jesSinglePionECALdn");
  if (NBGen0jesSinglePionECALdn_branch) NBGen0jesSinglePionECALdn_branch->SetAddress(&NBGen0jesSinglePionECALdn_);
  NBGen1jesSinglePionECALdn_branch = tree->GetBranch("NBGen1jesSinglePionECALdn");
  if (NBGen1jesSinglePionECALdn_branch) NBGen1jesSinglePionECALdn_branch->SetAddress(&NBGen1jesSinglePionECALdn_);
  NBGen2jesSinglePionECALdn_branch = tree->GetBranch("NBGen2jesSinglePionECALdn");
  if (NBGen2jesSinglePionECALdn_branch) NBGen2jesSinglePionECALdn_branch->SetAddress(&NBGen2jesSinglePionECALdn_);
  NBGen3jesSinglePionECALdn_branch = tree->GetBranch("NBGen3jesSinglePionECALdn");
  if (NBGen3jesSinglePionECALdn_branch) NBGen3jesSinglePionECALdn_branch->SetAddress(&NBGen3jesSinglePionECALdn_);
  NBGen4jesSinglePionECALdn_branch = tree->GetBranch("NBGen4jesSinglePionECALdn");
  if (NBGen4jesSinglePionECALdn_branch) NBGen4jesSinglePionECALdn_branch->SetAddress(&NBGen4jesSinglePionECALdn_);
  NLGen0jesSinglePionECALdn_branch = tree->GetBranch("NLGen0jesSinglePionECALdn");
  if (NLGen0jesSinglePionECALdn_branch) NLGen0jesSinglePionECALdn_branch->SetAddress(&NLGen0jesSinglePionECALdn_);
  NLGen1jesSinglePionECALdn_branch = tree->GetBranch("NLGen1jesSinglePionECALdn");
  if (NLGen1jesSinglePionECALdn_branch) NLGen1jesSinglePionECALdn_branch->SetAddress(&NLGen1jesSinglePionECALdn_);
  NLGen2jesSinglePionECALdn_branch = tree->GetBranch("NLGen2jesSinglePionECALdn");
  if (NLGen2jesSinglePionECALdn_branch) NLGen2jesSinglePionECALdn_branch->SetAddress(&NLGen2jesSinglePionECALdn_);
  NLGen3jesSinglePionECALdn_branch = tree->GetBranch("NLGen3jesSinglePionECALdn");
  if (NLGen3jesSinglePionECALdn_branch) NLGen3jesSinglePionECALdn_branch->SetAddress(&NLGen3jesSinglePionECALdn_);
  NLGen4jesSinglePionECALdn_branch = tree->GetBranch("NLGen4jesSinglePionECALdn");
  if (NLGen4jesSinglePionECALdn_branch) NLGen4jesSinglePionECALdn_branch->SetAddress(&NLGen4jesSinglePionECALdn_);
  NVQGen0jesSinglePionECALdn_branch = tree->GetBranch("NVQGen0jesSinglePionECALdn");
  if (NVQGen0jesSinglePionECALdn_branch) NVQGen0jesSinglePionECALdn_branch->SetAddress(&NVQGen0jesSinglePionECALdn_);
  NVQGen1jesSinglePionECALdn_branch = tree->GetBranch("NVQGen1jesSinglePionECALdn");
  if (NVQGen1jesSinglePionECALdn_branch) NVQGen1jesSinglePionECALdn_branch->SetAddress(&NVQGen1jesSinglePionECALdn_);
  NVQGen2jesSinglePionECALdn_branch = tree->GetBranch("NVQGen2jesSinglePionECALdn");
  if (NVQGen2jesSinglePionECALdn_branch) NVQGen2jesSinglePionECALdn_branch->SetAddress(&NVQGen2jesSinglePionECALdn_);
  NVQGen3jesSinglePionECALdn_branch = tree->GetBranch("NVQGen3jesSinglePionECALdn");
  if (NVQGen3jesSinglePionECALdn_branch) NVQGen3jesSinglePionECALdn_branch->SetAddress(&NVQGen3jesSinglePionECALdn_);
  NVQGen4jesSinglePionECALdn_branch = tree->GetBranch("NVQGen4jesSinglePionECALdn");
  if (NVQGen4jesSinglePionECALdn_branch) NVQGen4jesSinglePionECALdn_branch->SetAddress(&NVQGen4jesSinglePionECALdn_);
  NiFJjesSinglePionECALdn_branch = tree->GetBranch("NiFJjesSinglePionECALdn");
  if (NiFJjesSinglePionECALdn_branch) NiFJjesSinglePionECALdn_branch->SetAddress(&NiFJjesSinglePionECALdn_);
  iVMD0jesSinglePionECALdn_branch = tree->GetBranch("iVMD0jesSinglePionECALdn");
  if (iVMD0jesSinglePionECALdn_branch) iVMD0jesSinglePionECALdn_branch->SetAddress(&iVMD0jesSinglePionECALdn_);
  iVMD1jesSinglePionECALdn_branch = tree->GetBranch("iVMD1jesSinglePionECALdn");
  if (iVMD1jesSinglePionECALdn_branch) iVMD1jesSinglePionECALdn_branch->SetAddress(&iVMD1jesSinglePionECALdn_);
  iVMD2jesSinglePionECALdn_branch = tree->GetBranch("iVMD2jesSinglePionECALdn");
  if (iVMD2jesSinglePionECALdn_branch) iVMD2jesSinglePionECALdn_branch->SetAddress(&iVMD2jesSinglePionECALdn_);
  iVMD3jesSinglePionECALdn_branch = tree->GetBranch("iVMD3jesSinglePionECALdn");
  if (iVMD3jesSinglePionECALdn_branch) iVMD3jesSinglePionECALdn_branch->SetAddress(&iVMD3jesSinglePionECALdn_);
  iVMD4jesSinglePionECALdn_branch = tree->GetBranch("iVMD4jesSinglePionECALdn");
  if (iVMD4jesSinglePionECALdn_branch) iVMD4jesSinglePionECALdn_branch->SetAddress(&iVMD4jesSinglePionECALdn_);
  iWMD0jesSinglePionECALdn_branch = tree->GetBranch("iWMD0jesSinglePionECALdn");
  if (iWMD0jesSinglePionECALdn_branch) iWMD0jesSinglePionECALdn_branch->SetAddress(&iWMD0jesSinglePionECALdn_);
  iWMD1jesSinglePionECALdn_branch = tree->GetBranch("iWMD1jesSinglePionECALdn");
  if (iWMD1jesSinglePionECALdn_branch) iWMD1jesSinglePionECALdn_branch->SetAddress(&iWMD1jesSinglePionECALdn_);
  iWMD2jesSinglePionECALdn_branch = tree->GetBranch("iWMD2jesSinglePionECALdn");
  if (iWMD2jesSinglePionECALdn_branch) iWMD2jesSinglePionECALdn_branch->SetAddress(&iWMD2jesSinglePionECALdn_);
  iWMD3jesSinglePionECALdn_branch = tree->GetBranch("iWMD3jesSinglePionECALdn");
  if (iWMD3jesSinglePionECALdn_branch) iWMD3jesSinglePionECALdn_branch->SetAddress(&iWMD3jesSinglePionECALdn_);
  iWMD4jesSinglePionECALdn_branch = tree->GetBranch("iWMD4jesSinglePionECALdn");
  if (iWMD4jesSinglePionECALdn_branch) iWMD4jesSinglePionECALdn_branch->SetAddress(&iWMD4jesSinglePionECALdn_);
  NJjesSinglePionECALdn_branch = tree->GetBranch("NJjesSinglePionECALdn");
  if (NJjesSinglePionECALdn_branch) NJjesSinglePionECALdn_branch->SetAddress(&NJjesSinglePionECALdn_);
  NbLoosejesSinglePionECALdn_branch = tree->GetBranch("NbLoosejesSinglePionECALdn");
  if (NbLoosejesSinglePionECALdn_branch) NbLoosejesSinglePionECALdn_branch->SetAddress(&NbLoosejesSinglePionECALdn_);
  NbMediumjesSinglePionECALdn_branch = tree->GetBranch("NbMediumjesSinglePionECALdn");
  if (NbMediumjesSinglePionECALdn_branch) NbMediumjesSinglePionECALdn_branch->SetAddress(&NbMediumjesSinglePionECALdn_);
  NbTightjesSinglePionECALdn_branch = tree->GetBranch("NbTightjesSinglePionECALdn");
  if (NbTightjesSinglePionECALdn_branch) NbTightjesSinglePionECALdn_branch->SetAddress(&NbTightjesSinglePionECALdn_);
  NoORNbLoosejesSinglePionECALdn_branch = tree->GetBranch("NoORNbLoosejesSinglePionECALdn");
  if (NoORNbLoosejesSinglePionECALdn_branch) NoORNbLoosejesSinglePionECALdn_branch->SetAddress(&NoORNbLoosejesSinglePionECALdn_);
  NoORNbMediumjesSinglePionECALdn_branch = tree->GetBranch("NoORNbMediumjesSinglePionECALdn");
  if (NoORNbMediumjesSinglePionECALdn_branch) NoORNbMediumjesSinglePionECALdn_branch->SetAddress(&NoORNbMediumjesSinglePionECALdn_);
  NoORNbTightjesSinglePionECALdn_branch = tree->GetBranch("NoORNbTightjesSinglePionECALdn");
  if (NoORNbTightjesSinglePionECALdn_branch) NoORNbTightjesSinglePionECALdn_branch->SetAddress(&NoORNbTightjesSinglePionECALdn_);
  NQJGenjesSinglePionECALdn_branch = tree->GetBranch("NQJGenjesSinglePionECALdn");
  if (NQJGenjesSinglePionECALdn_branch) NQJGenjesSinglePionECALdn_branch->SetAddress(&NQJGenjesSinglePionECALdn_);
  NBJGenjesSinglePionECALdn_branch = tree->GetBranch("NBJGenjesSinglePionECALdn");
  if (NBJGenjesSinglePionECALdn_branch) NBJGenjesSinglePionECALdn_branch->SetAddress(&NBJGenjesSinglePionECALdn_);
  NLJGenjesSinglePionECALdn_branch = tree->GetBranch("NLJGenjesSinglePionECALdn");
  if (NLJGenjesSinglePionECALdn_branch) NLJGenjesSinglePionECALdn_branch->SetAddress(&NLJGenjesSinglePionECALdn_);
  MVVXjesSinglePionECALdn_branch = tree->GetBranch("MVVXjesSinglePionECALdn");
  if (MVVXjesSinglePionECALdn_branch) MVVXjesSinglePionECALdn_branch->SetAddress(&MVVXjesSinglePionECALdn_);
  PtVVXjesSinglePionECALdn_branch = tree->GetBranch("PtVVXjesSinglePionECALdn");
  if (PtVVXjesSinglePionECALdn_branch) PtVVXjesSinglePionECALdn_branch->SetAddress(&PtVVXjesSinglePionECALdn_);
  HTjesSinglePionECALdn_branch = tree->GetBranch("HTjesSinglePionECALdn");
  if (HTjesSinglePionECALdn_branch) HTjesSinglePionECALdn_branch->SetAddress(&HTjesSinglePionECALdn_);
  HTJjesSinglePionECALdn_branch = tree->GetBranch("HTJjesSinglePionECALdn");
  if (HTJjesSinglePionECALdn_branch) HTJjesSinglePionECALdn_branch->SetAddress(&HTJjesSinglePionECALdn_);
  HTFJjesSinglePionECALdn_branch = tree->GetBranch("HTFJjesSinglePionECALdn");
  if (HTFJjesSinglePionECALdn_branch) HTFJjesSinglePionECALdn_branch->SetAddress(&HTFJjesSinglePionECALdn_);
  SumPtFJjesSinglePionECALdn_branch = tree->GetBranch("SumPtFJjesSinglePionECALdn");
  if (SumPtFJjesSinglePionECALdn_branch) SumPtFJjesSinglePionECALdn_branch->SetAddress(&SumPtFJjesSinglePionECALdn_);
  SumPtJjesSinglePionECALdn_branch = tree->GetBranch("SumPtJjesSinglePionECALdn");
  if (SumPtJjesSinglePionECALdn_branch) SumPtJjesSinglePionECALdn_branch->SetAddress(&SumPtJjesSinglePionECALdn_);
  NFJjesSinglePionHCALup_branch = tree->GetBranch("NFJjesSinglePionHCALup");
  if (NFJjesSinglePionHCALup_branch) NFJjesSinglePionHCALup_branch->SetAddress(&NFJjesSinglePionHCALup_);
  VMD0jesSinglePionHCALup_branch = tree->GetBranch("VMD0jesSinglePionHCALup");
  if (VMD0jesSinglePionHCALup_branch) VMD0jesSinglePionHCALup_branch->SetAddress(&VMD0jesSinglePionHCALup_);
  VMD1jesSinglePionHCALup_branch = tree->GetBranch("VMD1jesSinglePionHCALup");
  if (VMD1jesSinglePionHCALup_branch) VMD1jesSinglePionHCALup_branch->SetAddress(&VMD1jesSinglePionHCALup_);
  VMD2jesSinglePionHCALup_branch = tree->GetBranch("VMD2jesSinglePionHCALup");
  if (VMD2jesSinglePionHCALup_branch) VMD2jesSinglePionHCALup_branch->SetAddress(&VMD2jesSinglePionHCALup_);
  VMD3jesSinglePionHCALup_branch = tree->GetBranch("VMD3jesSinglePionHCALup");
  if (VMD3jesSinglePionHCALup_branch) VMD3jesSinglePionHCALup_branch->SetAddress(&VMD3jesSinglePionHCALup_);
  VMD4jesSinglePionHCALup_branch = tree->GetBranch("VMD4jesSinglePionHCALup");
  if (VMD4jesSinglePionHCALup_branch) VMD4jesSinglePionHCALup_branch->SetAddress(&VMD4jesSinglePionHCALup_);
  WMD0jesSinglePionHCALup_branch = tree->GetBranch("WMD0jesSinglePionHCALup");
  if (WMD0jesSinglePionHCALup_branch) WMD0jesSinglePionHCALup_branch->SetAddress(&WMD0jesSinglePionHCALup_);
  WMD1jesSinglePionHCALup_branch = tree->GetBranch("WMD1jesSinglePionHCALup");
  if (WMD1jesSinglePionHCALup_branch) WMD1jesSinglePionHCALup_branch->SetAddress(&WMD1jesSinglePionHCALup_);
  WMD2jesSinglePionHCALup_branch = tree->GetBranch("WMD2jesSinglePionHCALup");
  if (WMD2jesSinglePionHCALup_branch) WMD2jesSinglePionHCALup_branch->SetAddress(&WMD2jesSinglePionHCALup_);
  WMD3jesSinglePionHCALup_branch = tree->GetBranch("WMD3jesSinglePionHCALup");
  if (WMD3jesSinglePionHCALup_branch) WMD3jesSinglePionHCALup_branch->SetAddress(&WMD3jesSinglePionHCALup_);
  WMD4jesSinglePionHCALup_branch = tree->GetBranch("WMD4jesSinglePionHCALup");
  if (WMD4jesSinglePionHCALup_branch) WMD4jesSinglePionHCALup_branch->SetAddress(&WMD4jesSinglePionHCALup_);
  NQGen0jesSinglePionHCALup_branch = tree->GetBranch("NQGen0jesSinglePionHCALup");
  if (NQGen0jesSinglePionHCALup_branch) NQGen0jesSinglePionHCALup_branch->SetAddress(&NQGen0jesSinglePionHCALup_);
  NQGen1jesSinglePionHCALup_branch = tree->GetBranch("NQGen1jesSinglePionHCALup");
  if (NQGen1jesSinglePionHCALup_branch) NQGen1jesSinglePionHCALup_branch->SetAddress(&NQGen1jesSinglePionHCALup_);
  NQGen2jesSinglePionHCALup_branch = tree->GetBranch("NQGen2jesSinglePionHCALup");
  if (NQGen2jesSinglePionHCALup_branch) NQGen2jesSinglePionHCALup_branch->SetAddress(&NQGen2jesSinglePionHCALup_);
  NQGen3jesSinglePionHCALup_branch = tree->GetBranch("NQGen3jesSinglePionHCALup");
  if (NQGen3jesSinglePionHCALup_branch) NQGen3jesSinglePionHCALup_branch->SetAddress(&NQGen3jesSinglePionHCALup_);
  NQGen4jesSinglePionHCALup_branch = tree->GetBranch("NQGen4jesSinglePionHCALup");
  if (NQGen4jesSinglePionHCALup_branch) NQGen4jesSinglePionHCALup_branch->SetAddress(&NQGen4jesSinglePionHCALup_);
  NBGen0jesSinglePionHCALup_branch = tree->GetBranch("NBGen0jesSinglePionHCALup");
  if (NBGen0jesSinglePionHCALup_branch) NBGen0jesSinglePionHCALup_branch->SetAddress(&NBGen0jesSinglePionHCALup_);
  NBGen1jesSinglePionHCALup_branch = tree->GetBranch("NBGen1jesSinglePionHCALup");
  if (NBGen1jesSinglePionHCALup_branch) NBGen1jesSinglePionHCALup_branch->SetAddress(&NBGen1jesSinglePionHCALup_);
  NBGen2jesSinglePionHCALup_branch = tree->GetBranch("NBGen2jesSinglePionHCALup");
  if (NBGen2jesSinglePionHCALup_branch) NBGen2jesSinglePionHCALup_branch->SetAddress(&NBGen2jesSinglePionHCALup_);
  NBGen3jesSinglePionHCALup_branch = tree->GetBranch("NBGen3jesSinglePionHCALup");
  if (NBGen3jesSinglePionHCALup_branch) NBGen3jesSinglePionHCALup_branch->SetAddress(&NBGen3jesSinglePionHCALup_);
  NBGen4jesSinglePionHCALup_branch = tree->GetBranch("NBGen4jesSinglePionHCALup");
  if (NBGen4jesSinglePionHCALup_branch) NBGen4jesSinglePionHCALup_branch->SetAddress(&NBGen4jesSinglePionHCALup_);
  NLGen0jesSinglePionHCALup_branch = tree->GetBranch("NLGen0jesSinglePionHCALup");
  if (NLGen0jesSinglePionHCALup_branch) NLGen0jesSinglePionHCALup_branch->SetAddress(&NLGen0jesSinglePionHCALup_);
  NLGen1jesSinglePionHCALup_branch = tree->GetBranch("NLGen1jesSinglePionHCALup");
  if (NLGen1jesSinglePionHCALup_branch) NLGen1jesSinglePionHCALup_branch->SetAddress(&NLGen1jesSinglePionHCALup_);
  NLGen2jesSinglePionHCALup_branch = tree->GetBranch("NLGen2jesSinglePionHCALup");
  if (NLGen2jesSinglePionHCALup_branch) NLGen2jesSinglePionHCALup_branch->SetAddress(&NLGen2jesSinglePionHCALup_);
  NLGen3jesSinglePionHCALup_branch = tree->GetBranch("NLGen3jesSinglePionHCALup");
  if (NLGen3jesSinglePionHCALup_branch) NLGen3jesSinglePionHCALup_branch->SetAddress(&NLGen3jesSinglePionHCALup_);
  NLGen4jesSinglePionHCALup_branch = tree->GetBranch("NLGen4jesSinglePionHCALup");
  if (NLGen4jesSinglePionHCALup_branch) NLGen4jesSinglePionHCALup_branch->SetAddress(&NLGen4jesSinglePionHCALup_);
  NVQGen0jesSinglePionHCALup_branch = tree->GetBranch("NVQGen0jesSinglePionHCALup");
  if (NVQGen0jesSinglePionHCALup_branch) NVQGen0jesSinglePionHCALup_branch->SetAddress(&NVQGen0jesSinglePionHCALup_);
  NVQGen1jesSinglePionHCALup_branch = tree->GetBranch("NVQGen1jesSinglePionHCALup");
  if (NVQGen1jesSinglePionHCALup_branch) NVQGen1jesSinglePionHCALup_branch->SetAddress(&NVQGen1jesSinglePionHCALup_);
  NVQGen2jesSinglePionHCALup_branch = tree->GetBranch("NVQGen2jesSinglePionHCALup");
  if (NVQGen2jesSinglePionHCALup_branch) NVQGen2jesSinglePionHCALup_branch->SetAddress(&NVQGen2jesSinglePionHCALup_);
  NVQGen3jesSinglePionHCALup_branch = tree->GetBranch("NVQGen3jesSinglePionHCALup");
  if (NVQGen3jesSinglePionHCALup_branch) NVQGen3jesSinglePionHCALup_branch->SetAddress(&NVQGen3jesSinglePionHCALup_);
  NVQGen4jesSinglePionHCALup_branch = tree->GetBranch("NVQGen4jesSinglePionHCALup");
  if (NVQGen4jesSinglePionHCALup_branch) NVQGen4jesSinglePionHCALup_branch->SetAddress(&NVQGen4jesSinglePionHCALup_);
  NiFJjesSinglePionHCALup_branch = tree->GetBranch("NiFJjesSinglePionHCALup");
  if (NiFJjesSinglePionHCALup_branch) NiFJjesSinglePionHCALup_branch->SetAddress(&NiFJjesSinglePionHCALup_);
  iVMD0jesSinglePionHCALup_branch = tree->GetBranch("iVMD0jesSinglePionHCALup");
  if (iVMD0jesSinglePionHCALup_branch) iVMD0jesSinglePionHCALup_branch->SetAddress(&iVMD0jesSinglePionHCALup_);
  iVMD1jesSinglePionHCALup_branch = tree->GetBranch("iVMD1jesSinglePionHCALup");
  if (iVMD1jesSinglePionHCALup_branch) iVMD1jesSinglePionHCALup_branch->SetAddress(&iVMD1jesSinglePionHCALup_);
  iVMD2jesSinglePionHCALup_branch = tree->GetBranch("iVMD2jesSinglePionHCALup");
  if (iVMD2jesSinglePionHCALup_branch) iVMD2jesSinglePionHCALup_branch->SetAddress(&iVMD2jesSinglePionHCALup_);
  iVMD3jesSinglePionHCALup_branch = tree->GetBranch("iVMD3jesSinglePionHCALup");
  if (iVMD3jesSinglePionHCALup_branch) iVMD3jesSinglePionHCALup_branch->SetAddress(&iVMD3jesSinglePionHCALup_);
  iVMD4jesSinglePionHCALup_branch = tree->GetBranch("iVMD4jesSinglePionHCALup");
  if (iVMD4jesSinglePionHCALup_branch) iVMD4jesSinglePionHCALup_branch->SetAddress(&iVMD4jesSinglePionHCALup_);
  iWMD0jesSinglePionHCALup_branch = tree->GetBranch("iWMD0jesSinglePionHCALup");
  if (iWMD0jesSinglePionHCALup_branch) iWMD0jesSinglePionHCALup_branch->SetAddress(&iWMD0jesSinglePionHCALup_);
  iWMD1jesSinglePionHCALup_branch = tree->GetBranch("iWMD1jesSinglePionHCALup");
  if (iWMD1jesSinglePionHCALup_branch) iWMD1jesSinglePionHCALup_branch->SetAddress(&iWMD1jesSinglePionHCALup_);
  iWMD2jesSinglePionHCALup_branch = tree->GetBranch("iWMD2jesSinglePionHCALup");
  if (iWMD2jesSinglePionHCALup_branch) iWMD2jesSinglePionHCALup_branch->SetAddress(&iWMD2jesSinglePionHCALup_);
  iWMD3jesSinglePionHCALup_branch = tree->GetBranch("iWMD3jesSinglePionHCALup");
  if (iWMD3jesSinglePionHCALup_branch) iWMD3jesSinglePionHCALup_branch->SetAddress(&iWMD3jesSinglePionHCALup_);
  iWMD4jesSinglePionHCALup_branch = tree->GetBranch("iWMD4jesSinglePionHCALup");
  if (iWMD4jesSinglePionHCALup_branch) iWMD4jesSinglePionHCALup_branch->SetAddress(&iWMD4jesSinglePionHCALup_);
  NJjesSinglePionHCALup_branch = tree->GetBranch("NJjesSinglePionHCALup");
  if (NJjesSinglePionHCALup_branch) NJjesSinglePionHCALup_branch->SetAddress(&NJjesSinglePionHCALup_);
  NbLoosejesSinglePionHCALup_branch = tree->GetBranch("NbLoosejesSinglePionHCALup");
  if (NbLoosejesSinglePionHCALup_branch) NbLoosejesSinglePionHCALup_branch->SetAddress(&NbLoosejesSinglePionHCALup_);
  NbMediumjesSinglePionHCALup_branch = tree->GetBranch("NbMediumjesSinglePionHCALup");
  if (NbMediumjesSinglePionHCALup_branch) NbMediumjesSinglePionHCALup_branch->SetAddress(&NbMediumjesSinglePionHCALup_);
  NbTightjesSinglePionHCALup_branch = tree->GetBranch("NbTightjesSinglePionHCALup");
  if (NbTightjesSinglePionHCALup_branch) NbTightjesSinglePionHCALup_branch->SetAddress(&NbTightjesSinglePionHCALup_);
  NoORNbLoosejesSinglePionHCALup_branch = tree->GetBranch("NoORNbLoosejesSinglePionHCALup");
  if (NoORNbLoosejesSinglePionHCALup_branch) NoORNbLoosejesSinglePionHCALup_branch->SetAddress(&NoORNbLoosejesSinglePionHCALup_);
  NoORNbMediumjesSinglePionHCALup_branch = tree->GetBranch("NoORNbMediumjesSinglePionHCALup");
  if (NoORNbMediumjesSinglePionHCALup_branch) NoORNbMediumjesSinglePionHCALup_branch->SetAddress(&NoORNbMediumjesSinglePionHCALup_);
  NoORNbTightjesSinglePionHCALup_branch = tree->GetBranch("NoORNbTightjesSinglePionHCALup");
  if (NoORNbTightjesSinglePionHCALup_branch) NoORNbTightjesSinglePionHCALup_branch->SetAddress(&NoORNbTightjesSinglePionHCALup_);
  NQJGenjesSinglePionHCALup_branch = tree->GetBranch("NQJGenjesSinglePionHCALup");
  if (NQJGenjesSinglePionHCALup_branch) NQJGenjesSinglePionHCALup_branch->SetAddress(&NQJGenjesSinglePionHCALup_);
  NBJGenjesSinglePionHCALup_branch = tree->GetBranch("NBJGenjesSinglePionHCALup");
  if (NBJGenjesSinglePionHCALup_branch) NBJGenjesSinglePionHCALup_branch->SetAddress(&NBJGenjesSinglePionHCALup_);
  NLJGenjesSinglePionHCALup_branch = tree->GetBranch("NLJGenjesSinglePionHCALup");
  if (NLJGenjesSinglePionHCALup_branch) NLJGenjesSinglePionHCALup_branch->SetAddress(&NLJGenjesSinglePionHCALup_);
  MVVXjesSinglePionHCALup_branch = tree->GetBranch("MVVXjesSinglePionHCALup");
  if (MVVXjesSinglePionHCALup_branch) MVVXjesSinglePionHCALup_branch->SetAddress(&MVVXjesSinglePionHCALup_);
  PtVVXjesSinglePionHCALup_branch = tree->GetBranch("PtVVXjesSinglePionHCALup");
  if (PtVVXjesSinglePionHCALup_branch) PtVVXjesSinglePionHCALup_branch->SetAddress(&PtVVXjesSinglePionHCALup_);
  HTjesSinglePionHCALup_branch = tree->GetBranch("HTjesSinglePionHCALup");
  if (HTjesSinglePionHCALup_branch) HTjesSinglePionHCALup_branch->SetAddress(&HTjesSinglePionHCALup_);
  HTJjesSinglePionHCALup_branch = tree->GetBranch("HTJjesSinglePionHCALup");
  if (HTJjesSinglePionHCALup_branch) HTJjesSinglePionHCALup_branch->SetAddress(&HTJjesSinglePionHCALup_);
  HTFJjesSinglePionHCALup_branch = tree->GetBranch("HTFJjesSinglePionHCALup");
  if (HTFJjesSinglePionHCALup_branch) HTFJjesSinglePionHCALup_branch->SetAddress(&HTFJjesSinglePionHCALup_);
  SumPtFJjesSinglePionHCALup_branch = tree->GetBranch("SumPtFJjesSinglePionHCALup");
  if (SumPtFJjesSinglePionHCALup_branch) SumPtFJjesSinglePionHCALup_branch->SetAddress(&SumPtFJjesSinglePionHCALup_);
  SumPtJjesSinglePionHCALup_branch = tree->GetBranch("SumPtJjesSinglePionHCALup");
  if (SumPtJjesSinglePionHCALup_branch) SumPtJjesSinglePionHCALup_branch->SetAddress(&SumPtJjesSinglePionHCALup_);
  NFJjesSinglePionHCALdn_branch = tree->GetBranch("NFJjesSinglePionHCALdn");
  if (NFJjesSinglePionHCALdn_branch) NFJjesSinglePionHCALdn_branch->SetAddress(&NFJjesSinglePionHCALdn_);
  VMD0jesSinglePionHCALdn_branch = tree->GetBranch("VMD0jesSinglePionHCALdn");
  if (VMD0jesSinglePionHCALdn_branch) VMD0jesSinglePionHCALdn_branch->SetAddress(&VMD0jesSinglePionHCALdn_);
  VMD1jesSinglePionHCALdn_branch = tree->GetBranch("VMD1jesSinglePionHCALdn");
  if (VMD1jesSinglePionHCALdn_branch) VMD1jesSinglePionHCALdn_branch->SetAddress(&VMD1jesSinglePionHCALdn_);
  VMD2jesSinglePionHCALdn_branch = tree->GetBranch("VMD2jesSinglePionHCALdn");
  if (VMD2jesSinglePionHCALdn_branch) VMD2jesSinglePionHCALdn_branch->SetAddress(&VMD2jesSinglePionHCALdn_);
  VMD3jesSinglePionHCALdn_branch = tree->GetBranch("VMD3jesSinglePionHCALdn");
  if (VMD3jesSinglePionHCALdn_branch) VMD3jesSinglePionHCALdn_branch->SetAddress(&VMD3jesSinglePionHCALdn_);
  VMD4jesSinglePionHCALdn_branch = tree->GetBranch("VMD4jesSinglePionHCALdn");
  if (VMD4jesSinglePionHCALdn_branch) VMD4jesSinglePionHCALdn_branch->SetAddress(&VMD4jesSinglePionHCALdn_);
  WMD0jesSinglePionHCALdn_branch = tree->GetBranch("WMD0jesSinglePionHCALdn");
  if (WMD0jesSinglePionHCALdn_branch) WMD0jesSinglePionHCALdn_branch->SetAddress(&WMD0jesSinglePionHCALdn_);
  WMD1jesSinglePionHCALdn_branch = tree->GetBranch("WMD1jesSinglePionHCALdn");
  if (WMD1jesSinglePionHCALdn_branch) WMD1jesSinglePionHCALdn_branch->SetAddress(&WMD1jesSinglePionHCALdn_);
  WMD2jesSinglePionHCALdn_branch = tree->GetBranch("WMD2jesSinglePionHCALdn");
  if (WMD2jesSinglePionHCALdn_branch) WMD2jesSinglePionHCALdn_branch->SetAddress(&WMD2jesSinglePionHCALdn_);
  WMD3jesSinglePionHCALdn_branch = tree->GetBranch("WMD3jesSinglePionHCALdn");
  if (WMD3jesSinglePionHCALdn_branch) WMD3jesSinglePionHCALdn_branch->SetAddress(&WMD3jesSinglePionHCALdn_);
  WMD4jesSinglePionHCALdn_branch = tree->GetBranch("WMD4jesSinglePionHCALdn");
  if (WMD4jesSinglePionHCALdn_branch) WMD4jesSinglePionHCALdn_branch->SetAddress(&WMD4jesSinglePionHCALdn_);
  NQGen0jesSinglePionHCALdn_branch = tree->GetBranch("NQGen0jesSinglePionHCALdn");
  if (NQGen0jesSinglePionHCALdn_branch) NQGen0jesSinglePionHCALdn_branch->SetAddress(&NQGen0jesSinglePionHCALdn_);
  NQGen1jesSinglePionHCALdn_branch = tree->GetBranch("NQGen1jesSinglePionHCALdn");
  if (NQGen1jesSinglePionHCALdn_branch) NQGen1jesSinglePionHCALdn_branch->SetAddress(&NQGen1jesSinglePionHCALdn_);
  NQGen2jesSinglePionHCALdn_branch = tree->GetBranch("NQGen2jesSinglePionHCALdn");
  if (NQGen2jesSinglePionHCALdn_branch) NQGen2jesSinglePionHCALdn_branch->SetAddress(&NQGen2jesSinglePionHCALdn_);
  NQGen3jesSinglePionHCALdn_branch = tree->GetBranch("NQGen3jesSinglePionHCALdn");
  if (NQGen3jesSinglePionHCALdn_branch) NQGen3jesSinglePionHCALdn_branch->SetAddress(&NQGen3jesSinglePionHCALdn_);
  NQGen4jesSinglePionHCALdn_branch = tree->GetBranch("NQGen4jesSinglePionHCALdn");
  if (NQGen4jesSinglePionHCALdn_branch) NQGen4jesSinglePionHCALdn_branch->SetAddress(&NQGen4jesSinglePionHCALdn_);
  NBGen0jesSinglePionHCALdn_branch = tree->GetBranch("NBGen0jesSinglePionHCALdn");
  if (NBGen0jesSinglePionHCALdn_branch) NBGen0jesSinglePionHCALdn_branch->SetAddress(&NBGen0jesSinglePionHCALdn_);
  NBGen1jesSinglePionHCALdn_branch = tree->GetBranch("NBGen1jesSinglePionHCALdn");
  if (NBGen1jesSinglePionHCALdn_branch) NBGen1jesSinglePionHCALdn_branch->SetAddress(&NBGen1jesSinglePionHCALdn_);
  NBGen2jesSinglePionHCALdn_branch = tree->GetBranch("NBGen2jesSinglePionHCALdn");
  if (NBGen2jesSinglePionHCALdn_branch) NBGen2jesSinglePionHCALdn_branch->SetAddress(&NBGen2jesSinglePionHCALdn_);
  NBGen3jesSinglePionHCALdn_branch = tree->GetBranch("NBGen3jesSinglePionHCALdn");
  if (NBGen3jesSinglePionHCALdn_branch) NBGen3jesSinglePionHCALdn_branch->SetAddress(&NBGen3jesSinglePionHCALdn_);
  NBGen4jesSinglePionHCALdn_branch = tree->GetBranch("NBGen4jesSinglePionHCALdn");
  if (NBGen4jesSinglePionHCALdn_branch) NBGen4jesSinglePionHCALdn_branch->SetAddress(&NBGen4jesSinglePionHCALdn_);
  NLGen0jesSinglePionHCALdn_branch = tree->GetBranch("NLGen0jesSinglePionHCALdn");
  if (NLGen0jesSinglePionHCALdn_branch) NLGen0jesSinglePionHCALdn_branch->SetAddress(&NLGen0jesSinglePionHCALdn_);
  NLGen1jesSinglePionHCALdn_branch = tree->GetBranch("NLGen1jesSinglePionHCALdn");
  if (NLGen1jesSinglePionHCALdn_branch) NLGen1jesSinglePionHCALdn_branch->SetAddress(&NLGen1jesSinglePionHCALdn_);
  NLGen2jesSinglePionHCALdn_branch = tree->GetBranch("NLGen2jesSinglePionHCALdn");
  if (NLGen2jesSinglePionHCALdn_branch) NLGen2jesSinglePionHCALdn_branch->SetAddress(&NLGen2jesSinglePionHCALdn_);
  NLGen3jesSinglePionHCALdn_branch = tree->GetBranch("NLGen3jesSinglePionHCALdn");
  if (NLGen3jesSinglePionHCALdn_branch) NLGen3jesSinglePionHCALdn_branch->SetAddress(&NLGen3jesSinglePionHCALdn_);
  NLGen4jesSinglePionHCALdn_branch = tree->GetBranch("NLGen4jesSinglePionHCALdn");
  if (NLGen4jesSinglePionHCALdn_branch) NLGen4jesSinglePionHCALdn_branch->SetAddress(&NLGen4jesSinglePionHCALdn_);
  NVQGen0jesSinglePionHCALdn_branch = tree->GetBranch("NVQGen0jesSinglePionHCALdn");
  if (NVQGen0jesSinglePionHCALdn_branch) NVQGen0jesSinglePionHCALdn_branch->SetAddress(&NVQGen0jesSinglePionHCALdn_);
  NVQGen1jesSinglePionHCALdn_branch = tree->GetBranch("NVQGen1jesSinglePionHCALdn");
  if (NVQGen1jesSinglePionHCALdn_branch) NVQGen1jesSinglePionHCALdn_branch->SetAddress(&NVQGen1jesSinglePionHCALdn_);
  NVQGen2jesSinglePionHCALdn_branch = tree->GetBranch("NVQGen2jesSinglePionHCALdn");
  if (NVQGen2jesSinglePionHCALdn_branch) NVQGen2jesSinglePionHCALdn_branch->SetAddress(&NVQGen2jesSinglePionHCALdn_);
  NVQGen3jesSinglePionHCALdn_branch = tree->GetBranch("NVQGen3jesSinglePionHCALdn");
  if (NVQGen3jesSinglePionHCALdn_branch) NVQGen3jesSinglePionHCALdn_branch->SetAddress(&NVQGen3jesSinglePionHCALdn_);
  NVQGen4jesSinglePionHCALdn_branch = tree->GetBranch("NVQGen4jesSinglePionHCALdn");
  if (NVQGen4jesSinglePionHCALdn_branch) NVQGen4jesSinglePionHCALdn_branch->SetAddress(&NVQGen4jesSinglePionHCALdn_);
  NiFJjesSinglePionHCALdn_branch = tree->GetBranch("NiFJjesSinglePionHCALdn");
  if (NiFJjesSinglePionHCALdn_branch) NiFJjesSinglePionHCALdn_branch->SetAddress(&NiFJjesSinglePionHCALdn_);
  iVMD0jesSinglePionHCALdn_branch = tree->GetBranch("iVMD0jesSinglePionHCALdn");
  if (iVMD0jesSinglePionHCALdn_branch) iVMD0jesSinglePionHCALdn_branch->SetAddress(&iVMD0jesSinglePionHCALdn_);
  iVMD1jesSinglePionHCALdn_branch = tree->GetBranch("iVMD1jesSinglePionHCALdn");
  if (iVMD1jesSinglePionHCALdn_branch) iVMD1jesSinglePionHCALdn_branch->SetAddress(&iVMD1jesSinglePionHCALdn_);
  iVMD2jesSinglePionHCALdn_branch = tree->GetBranch("iVMD2jesSinglePionHCALdn");
  if (iVMD2jesSinglePionHCALdn_branch) iVMD2jesSinglePionHCALdn_branch->SetAddress(&iVMD2jesSinglePionHCALdn_);
  iVMD3jesSinglePionHCALdn_branch = tree->GetBranch("iVMD3jesSinglePionHCALdn");
  if (iVMD3jesSinglePionHCALdn_branch) iVMD3jesSinglePionHCALdn_branch->SetAddress(&iVMD3jesSinglePionHCALdn_);
  iVMD4jesSinglePionHCALdn_branch = tree->GetBranch("iVMD4jesSinglePionHCALdn");
  if (iVMD4jesSinglePionHCALdn_branch) iVMD4jesSinglePionHCALdn_branch->SetAddress(&iVMD4jesSinglePionHCALdn_);
  iWMD0jesSinglePionHCALdn_branch = tree->GetBranch("iWMD0jesSinglePionHCALdn");
  if (iWMD0jesSinglePionHCALdn_branch) iWMD0jesSinglePionHCALdn_branch->SetAddress(&iWMD0jesSinglePionHCALdn_);
  iWMD1jesSinglePionHCALdn_branch = tree->GetBranch("iWMD1jesSinglePionHCALdn");
  if (iWMD1jesSinglePionHCALdn_branch) iWMD1jesSinglePionHCALdn_branch->SetAddress(&iWMD1jesSinglePionHCALdn_);
  iWMD2jesSinglePionHCALdn_branch = tree->GetBranch("iWMD2jesSinglePionHCALdn");
  if (iWMD2jesSinglePionHCALdn_branch) iWMD2jesSinglePionHCALdn_branch->SetAddress(&iWMD2jesSinglePionHCALdn_);
  iWMD3jesSinglePionHCALdn_branch = tree->GetBranch("iWMD3jesSinglePionHCALdn");
  if (iWMD3jesSinglePionHCALdn_branch) iWMD3jesSinglePionHCALdn_branch->SetAddress(&iWMD3jesSinglePionHCALdn_);
  iWMD4jesSinglePionHCALdn_branch = tree->GetBranch("iWMD4jesSinglePionHCALdn");
  if (iWMD4jesSinglePionHCALdn_branch) iWMD4jesSinglePionHCALdn_branch->SetAddress(&iWMD4jesSinglePionHCALdn_);
  NJjesSinglePionHCALdn_branch = tree->GetBranch("NJjesSinglePionHCALdn");
  if (NJjesSinglePionHCALdn_branch) NJjesSinglePionHCALdn_branch->SetAddress(&NJjesSinglePionHCALdn_);
  NbLoosejesSinglePionHCALdn_branch = tree->GetBranch("NbLoosejesSinglePionHCALdn");
  if (NbLoosejesSinglePionHCALdn_branch) NbLoosejesSinglePionHCALdn_branch->SetAddress(&NbLoosejesSinglePionHCALdn_);
  NbMediumjesSinglePionHCALdn_branch = tree->GetBranch("NbMediumjesSinglePionHCALdn");
  if (NbMediumjesSinglePionHCALdn_branch) NbMediumjesSinglePionHCALdn_branch->SetAddress(&NbMediumjesSinglePionHCALdn_);
  NbTightjesSinglePionHCALdn_branch = tree->GetBranch("NbTightjesSinglePionHCALdn");
  if (NbTightjesSinglePionHCALdn_branch) NbTightjesSinglePionHCALdn_branch->SetAddress(&NbTightjesSinglePionHCALdn_);
  NoORNbLoosejesSinglePionHCALdn_branch = tree->GetBranch("NoORNbLoosejesSinglePionHCALdn");
  if (NoORNbLoosejesSinglePionHCALdn_branch) NoORNbLoosejesSinglePionHCALdn_branch->SetAddress(&NoORNbLoosejesSinglePionHCALdn_);
  NoORNbMediumjesSinglePionHCALdn_branch = tree->GetBranch("NoORNbMediumjesSinglePionHCALdn");
  if (NoORNbMediumjesSinglePionHCALdn_branch) NoORNbMediumjesSinglePionHCALdn_branch->SetAddress(&NoORNbMediumjesSinglePionHCALdn_);
  NoORNbTightjesSinglePionHCALdn_branch = tree->GetBranch("NoORNbTightjesSinglePionHCALdn");
  if (NoORNbTightjesSinglePionHCALdn_branch) NoORNbTightjesSinglePionHCALdn_branch->SetAddress(&NoORNbTightjesSinglePionHCALdn_);
  NQJGenjesSinglePionHCALdn_branch = tree->GetBranch("NQJGenjesSinglePionHCALdn");
  if (NQJGenjesSinglePionHCALdn_branch) NQJGenjesSinglePionHCALdn_branch->SetAddress(&NQJGenjesSinglePionHCALdn_);
  NBJGenjesSinglePionHCALdn_branch = tree->GetBranch("NBJGenjesSinglePionHCALdn");
  if (NBJGenjesSinglePionHCALdn_branch) NBJGenjesSinglePionHCALdn_branch->SetAddress(&NBJGenjesSinglePionHCALdn_);
  NLJGenjesSinglePionHCALdn_branch = tree->GetBranch("NLJGenjesSinglePionHCALdn");
  if (NLJGenjesSinglePionHCALdn_branch) NLJGenjesSinglePionHCALdn_branch->SetAddress(&NLJGenjesSinglePionHCALdn_);
  MVVXjesSinglePionHCALdn_branch = tree->GetBranch("MVVXjesSinglePionHCALdn");
  if (MVVXjesSinglePionHCALdn_branch) MVVXjesSinglePionHCALdn_branch->SetAddress(&MVVXjesSinglePionHCALdn_);
  PtVVXjesSinglePionHCALdn_branch = tree->GetBranch("PtVVXjesSinglePionHCALdn");
  if (PtVVXjesSinglePionHCALdn_branch) PtVVXjesSinglePionHCALdn_branch->SetAddress(&PtVVXjesSinglePionHCALdn_);
  HTjesSinglePionHCALdn_branch = tree->GetBranch("HTjesSinglePionHCALdn");
  if (HTjesSinglePionHCALdn_branch) HTjesSinglePionHCALdn_branch->SetAddress(&HTjesSinglePionHCALdn_);
  HTJjesSinglePionHCALdn_branch = tree->GetBranch("HTJjesSinglePionHCALdn");
  if (HTJjesSinglePionHCALdn_branch) HTJjesSinglePionHCALdn_branch->SetAddress(&HTJjesSinglePionHCALdn_);
  HTFJjesSinglePionHCALdn_branch = tree->GetBranch("HTFJjesSinglePionHCALdn");
  if (HTFJjesSinglePionHCALdn_branch) HTFJjesSinglePionHCALdn_branch->SetAddress(&HTFJjesSinglePionHCALdn_);
  SumPtFJjesSinglePionHCALdn_branch = tree->GetBranch("SumPtFJjesSinglePionHCALdn");
  if (SumPtFJjesSinglePionHCALdn_branch) SumPtFJjesSinglePionHCALdn_branch->SetAddress(&SumPtFJjesSinglePionHCALdn_);
  SumPtJjesSinglePionHCALdn_branch = tree->GetBranch("SumPtJjesSinglePionHCALdn");
  if (SumPtJjesSinglePionHCALdn_branch) SumPtJjesSinglePionHCALdn_branch->SetAddress(&SumPtJjesSinglePionHCALdn_);
  NFJjesFlavorQCDup_branch = tree->GetBranch("NFJjesFlavorQCDup");
  if (NFJjesFlavorQCDup_branch) NFJjesFlavorQCDup_branch->SetAddress(&NFJjesFlavorQCDup_);
  VMD0jesFlavorQCDup_branch = tree->GetBranch("VMD0jesFlavorQCDup");
  if (VMD0jesFlavorQCDup_branch) VMD0jesFlavorQCDup_branch->SetAddress(&VMD0jesFlavorQCDup_);
  VMD1jesFlavorQCDup_branch = tree->GetBranch("VMD1jesFlavorQCDup");
  if (VMD1jesFlavorQCDup_branch) VMD1jesFlavorQCDup_branch->SetAddress(&VMD1jesFlavorQCDup_);
  VMD2jesFlavorQCDup_branch = tree->GetBranch("VMD2jesFlavorQCDup");
  if (VMD2jesFlavorQCDup_branch) VMD2jesFlavorQCDup_branch->SetAddress(&VMD2jesFlavorQCDup_);
  VMD3jesFlavorQCDup_branch = tree->GetBranch("VMD3jesFlavorQCDup");
  if (VMD3jesFlavorQCDup_branch) VMD3jesFlavorQCDup_branch->SetAddress(&VMD3jesFlavorQCDup_);
  VMD4jesFlavorQCDup_branch = tree->GetBranch("VMD4jesFlavorQCDup");
  if (VMD4jesFlavorQCDup_branch) VMD4jesFlavorQCDup_branch->SetAddress(&VMD4jesFlavorQCDup_);
  WMD0jesFlavorQCDup_branch = tree->GetBranch("WMD0jesFlavorQCDup");
  if (WMD0jesFlavorQCDup_branch) WMD0jesFlavorQCDup_branch->SetAddress(&WMD0jesFlavorQCDup_);
  WMD1jesFlavorQCDup_branch = tree->GetBranch("WMD1jesFlavorQCDup");
  if (WMD1jesFlavorQCDup_branch) WMD1jesFlavorQCDup_branch->SetAddress(&WMD1jesFlavorQCDup_);
  WMD2jesFlavorQCDup_branch = tree->GetBranch("WMD2jesFlavorQCDup");
  if (WMD2jesFlavorQCDup_branch) WMD2jesFlavorQCDup_branch->SetAddress(&WMD2jesFlavorQCDup_);
  WMD3jesFlavorQCDup_branch = tree->GetBranch("WMD3jesFlavorQCDup");
  if (WMD3jesFlavorQCDup_branch) WMD3jesFlavorQCDup_branch->SetAddress(&WMD3jesFlavorQCDup_);
  WMD4jesFlavorQCDup_branch = tree->GetBranch("WMD4jesFlavorQCDup");
  if (WMD4jesFlavorQCDup_branch) WMD4jesFlavorQCDup_branch->SetAddress(&WMD4jesFlavorQCDup_);
  NQGen0jesFlavorQCDup_branch = tree->GetBranch("NQGen0jesFlavorQCDup");
  if (NQGen0jesFlavorQCDup_branch) NQGen0jesFlavorQCDup_branch->SetAddress(&NQGen0jesFlavorQCDup_);
  NQGen1jesFlavorQCDup_branch = tree->GetBranch("NQGen1jesFlavorQCDup");
  if (NQGen1jesFlavorQCDup_branch) NQGen1jesFlavorQCDup_branch->SetAddress(&NQGen1jesFlavorQCDup_);
  NQGen2jesFlavorQCDup_branch = tree->GetBranch("NQGen2jesFlavorQCDup");
  if (NQGen2jesFlavorQCDup_branch) NQGen2jesFlavorQCDup_branch->SetAddress(&NQGen2jesFlavorQCDup_);
  NQGen3jesFlavorQCDup_branch = tree->GetBranch("NQGen3jesFlavorQCDup");
  if (NQGen3jesFlavorQCDup_branch) NQGen3jesFlavorQCDup_branch->SetAddress(&NQGen3jesFlavorQCDup_);
  NQGen4jesFlavorQCDup_branch = tree->GetBranch("NQGen4jesFlavorQCDup");
  if (NQGen4jesFlavorQCDup_branch) NQGen4jesFlavorQCDup_branch->SetAddress(&NQGen4jesFlavorQCDup_);
  NBGen0jesFlavorQCDup_branch = tree->GetBranch("NBGen0jesFlavorQCDup");
  if (NBGen0jesFlavorQCDup_branch) NBGen0jesFlavorQCDup_branch->SetAddress(&NBGen0jesFlavorQCDup_);
  NBGen1jesFlavorQCDup_branch = tree->GetBranch("NBGen1jesFlavorQCDup");
  if (NBGen1jesFlavorQCDup_branch) NBGen1jesFlavorQCDup_branch->SetAddress(&NBGen1jesFlavorQCDup_);
  NBGen2jesFlavorQCDup_branch = tree->GetBranch("NBGen2jesFlavorQCDup");
  if (NBGen2jesFlavorQCDup_branch) NBGen2jesFlavorQCDup_branch->SetAddress(&NBGen2jesFlavorQCDup_);
  NBGen3jesFlavorQCDup_branch = tree->GetBranch("NBGen3jesFlavorQCDup");
  if (NBGen3jesFlavorQCDup_branch) NBGen3jesFlavorQCDup_branch->SetAddress(&NBGen3jesFlavorQCDup_);
  NBGen4jesFlavorQCDup_branch = tree->GetBranch("NBGen4jesFlavorQCDup");
  if (NBGen4jesFlavorQCDup_branch) NBGen4jesFlavorQCDup_branch->SetAddress(&NBGen4jesFlavorQCDup_);
  NLGen0jesFlavorQCDup_branch = tree->GetBranch("NLGen0jesFlavorQCDup");
  if (NLGen0jesFlavorQCDup_branch) NLGen0jesFlavorQCDup_branch->SetAddress(&NLGen0jesFlavorQCDup_);
  NLGen1jesFlavorQCDup_branch = tree->GetBranch("NLGen1jesFlavorQCDup");
  if (NLGen1jesFlavorQCDup_branch) NLGen1jesFlavorQCDup_branch->SetAddress(&NLGen1jesFlavorQCDup_);
  NLGen2jesFlavorQCDup_branch = tree->GetBranch("NLGen2jesFlavorQCDup");
  if (NLGen2jesFlavorQCDup_branch) NLGen2jesFlavorQCDup_branch->SetAddress(&NLGen2jesFlavorQCDup_);
  NLGen3jesFlavorQCDup_branch = tree->GetBranch("NLGen3jesFlavorQCDup");
  if (NLGen3jesFlavorQCDup_branch) NLGen3jesFlavorQCDup_branch->SetAddress(&NLGen3jesFlavorQCDup_);
  NLGen4jesFlavorQCDup_branch = tree->GetBranch("NLGen4jesFlavorQCDup");
  if (NLGen4jesFlavorQCDup_branch) NLGen4jesFlavorQCDup_branch->SetAddress(&NLGen4jesFlavorQCDup_);
  NVQGen0jesFlavorQCDup_branch = tree->GetBranch("NVQGen0jesFlavorQCDup");
  if (NVQGen0jesFlavorQCDup_branch) NVQGen0jesFlavorQCDup_branch->SetAddress(&NVQGen0jesFlavorQCDup_);
  NVQGen1jesFlavorQCDup_branch = tree->GetBranch("NVQGen1jesFlavorQCDup");
  if (NVQGen1jesFlavorQCDup_branch) NVQGen1jesFlavorQCDup_branch->SetAddress(&NVQGen1jesFlavorQCDup_);
  NVQGen2jesFlavorQCDup_branch = tree->GetBranch("NVQGen2jesFlavorQCDup");
  if (NVQGen2jesFlavorQCDup_branch) NVQGen2jesFlavorQCDup_branch->SetAddress(&NVQGen2jesFlavorQCDup_);
  NVQGen3jesFlavorQCDup_branch = tree->GetBranch("NVQGen3jesFlavorQCDup");
  if (NVQGen3jesFlavorQCDup_branch) NVQGen3jesFlavorQCDup_branch->SetAddress(&NVQGen3jesFlavorQCDup_);
  NVQGen4jesFlavorQCDup_branch = tree->GetBranch("NVQGen4jesFlavorQCDup");
  if (NVQGen4jesFlavorQCDup_branch) NVQGen4jesFlavorQCDup_branch->SetAddress(&NVQGen4jesFlavorQCDup_);
  NiFJjesFlavorQCDup_branch = tree->GetBranch("NiFJjesFlavorQCDup");
  if (NiFJjesFlavorQCDup_branch) NiFJjesFlavorQCDup_branch->SetAddress(&NiFJjesFlavorQCDup_);
  iVMD0jesFlavorQCDup_branch = tree->GetBranch("iVMD0jesFlavorQCDup");
  if (iVMD0jesFlavorQCDup_branch) iVMD0jesFlavorQCDup_branch->SetAddress(&iVMD0jesFlavorQCDup_);
  iVMD1jesFlavorQCDup_branch = tree->GetBranch("iVMD1jesFlavorQCDup");
  if (iVMD1jesFlavorQCDup_branch) iVMD1jesFlavorQCDup_branch->SetAddress(&iVMD1jesFlavorQCDup_);
  iVMD2jesFlavorQCDup_branch = tree->GetBranch("iVMD2jesFlavorQCDup");
  if (iVMD2jesFlavorQCDup_branch) iVMD2jesFlavorQCDup_branch->SetAddress(&iVMD2jesFlavorQCDup_);
  iVMD3jesFlavorQCDup_branch = tree->GetBranch("iVMD3jesFlavorQCDup");
  if (iVMD3jesFlavorQCDup_branch) iVMD3jesFlavorQCDup_branch->SetAddress(&iVMD3jesFlavorQCDup_);
  iVMD4jesFlavorQCDup_branch = tree->GetBranch("iVMD4jesFlavorQCDup");
  if (iVMD4jesFlavorQCDup_branch) iVMD4jesFlavorQCDup_branch->SetAddress(&iVMD4jesFlavorQCDup_);
  iWMD0jesFlavorQCDup_branch = tree->GetBranch("iWMD0jesFlavorQCDup");
  if (iWMD0jesFlavorQCDup_branch) iWMD0jesFlavorQCDup_branch->SetAddress(&iWMD0jesFlavorQCDup_);
  iWMD1jesFlavorQCDup_branch = tree->GetBranch("iWMD1jesFlavorQCDup");
  if (iWMD1jesFlavorQCDup_branch) iWMD1jesFlavorQCDup_branch->SetAddress(&iWMD1jesFlavorQCDup_);
  iWMD2jesFlavorQCDup_branch = tree->GetBranch("iWMD2jesFlavorQCDup");
  if (iWMD2jesFlavorQCDup_branch) iWMD2jesFlavorQCDup_branch->SetAddress(&iWMD2jesFlavorQCDup_);
  iWMD3jesFlavorQCDup_branch = tree->GetBranch("iWMD3jesFlavorQCDup");
  if (iWMD3jesFlavorQCDup_branch) iWMD3jesFlavorQCDup_branch->SetAddress(&iWMD3jesFlavorQCDup_);
  iWMD4jesFlavorQCDup_branch = tree->GetBranch("iWMD4jesFlavorQCDup");
  if (iWMD4jesFlavorQCDup_branch) iWMD4jesFlavorQCDup_branch->SetAddress(&iWMD4jesFlavorQCDup_);
  NJjesFlavorQCDup_branch = tree->GetBranch("NJjesFlavorQCDup");
  if (NJjesFlavorQCDup_branch) NJjesFlavorQCDup_branch->SetAddress(&NJjesFlavorQCDup_);
  NbLoosejesFlavorQCDup_branch = tree->GetBranch("NbLoosejesFlavorQCDup");
  if (NbLoosejesFlavorQCDup_branch) NbLoosejesFlavorQCDup_branch->SetAddress(&NbLoosejesFlavorQCDup_);
  NbMediumjesFlavorQCDup_branch = tree->GetBranch("NbMediumjesFlavorQCDup");
  if (NbMediumjesFlavorQCDup_branch) NbMediumjesFlavorQCDup_branch->SetAddress(&NbMediumjesFlavorQCDup_);
  NbTightjesFlavorQCDup_branch = tree->GetBranch("NbTightjesFlavorQCDup");
  if (NbTightjesFlavorQCDup_branch) NbTightjesFlavorQCDup_branch->SetAddress(&NbTightjesFlavorQCDup_);
  NoORNbLoosejesFlavorQCDup_branch = tree->GetBranch("NoORNbLoosejesFlavorQCDup");
  if (NoORNbLoosejesFlavorQCDup_branch) NoORNbLoosejesFlavorQCDup_branch->SetAddress(&NoORNbLoosejesFlavorQCDup_);
  NoORNbMediumjesFlavorQCDup_branch = tree->GetBranch("NoORNbMediumjesFlavorQCDup");
  if (NoORNbMediumjesFlavorQCDup_branch) NoORNbMediumjesFlavorQCDup_branch->SetAddress(&NoORNbMediumjesFlavorQCDup_);
  NoORNbTightjesFlavorQCDup_branch = tree->GetBranch("NoORNbTightjesFlavorQCDup");
  if (NoORNbTightjesFlavorQCDup_branch) NoORNbTightjesFlavorQCDup_branch->SetAddress(&NoORNbTightjesFlavorQCDup_);
  NQJGenjesFlavorQCDup_branch = tree->GetBranch("NQJGenjesFlavorQCDup");
  if (NQJGenjesFlavorQCDup_branch) NQJGenjesFlavorQCDup_branch->SetAddress(&NQJGenjesFlavorQCDup_);
  NBJGenjesFlavorQCDup_branch = tree->GetBranch("NBJGenjesFlavorQCDup");
  if (NBJGenjesFlavorQCDup_branch) NBJGenjesFlavorQCDup_branch->SetAddress(&NBJGenjesFlavorQCDup_);
  NLJGenjesFlavorQCDup_branch = tree->GetBranch("NLJGenjesFlavorQCDup");
  if (NLJGenjesFlavorQCDup_branch) NLJGenjesFlavorQCDup_branch->SetAddress(&NLJGenjesFlavorQCDup_);
  MVVXjesFlavorQCDup_branch = tree->GetBranch("MVVXjesFlavorQCDup");
  if (MVVXjesFlavorQCDup_branch) MVVXjesFlavorQCDup_branch->SetAddress(&MVVXjesFlavorQCDup_);
  PtVVXjesFlavorQCDup_branch = tree->GetBranch("PtVVXjesFlavorQCDup");
  if (PtVVXjesFlavorQCDup_branch) PtVVXjesFlavorQCDup_branch->SetAddress(&PtVVXjesFlavorQCDup_);
  HTjesFlavorQCDup_branch = tree->GetBranch("HTjesFlavorQCDup");
  if (HTjesFlavorQCDup_branch) HTjesFlavorQCDup_branch->SetAddress(&HTjesFlavorQCDup_);
  HTJjesFlavorQCDup_branch = tree->GetBranch("HTJjesFlavorQCDup");
  if (HTJjesFlavorQCDup_branch) HTJjesFlavorQCDup_branch->SetAddress(&HTJjesFlavorQCDup_);
  HTFJjesFlavorQCDup_branch = tree->GetBranch("HTFJjesFlavorQCDup");
  if (HTFJjesFlavorQCDup_branch) HTFJjesFlavorQCDup_branch->SetAddress(&HTFJjesFlavorQCDup_);
  SumPtFJjesFlavorQCDup_branch = tree->GetBranch("SumPtFJjesFlavorQCDup");
  if (SumPtFJjesFlavorQCDup_branch) SumPtFJjesFlavorQCDup_branch->SetAddress(&SumPtFJjesFlavorQCDup_);
  SumPtJjesFlavorQCDup_branch = tree->GetBranch("SumPtJjesFlavorQCDup");
  if (SumPtJjesFlavorQCDup_branch) SumPtJjesFlavorQCDup_branch->SetAddress(&SumPtJjesFlavorQCDup_);
  NFJjesFlavorQCDdn_branch = tree->GetBranch("NFJjesFlavorQCDdn");
  if (NFJjesFlavorQCDdn_branch) NFJjesFlavorQCDdn_branch->SetAddress(&NFJjesFlavorQCDdn_);
  VMD0jesFlavorQCDdn_branch = tree->GetBranch("VMD0jesFlavorQCDdn");
  if (VMD0jesFlavorQCDdn_branch) VMD0jesFlavorQCDdn_branch->SetAddress(&VMD0jesFlavorQCDdn_);
  VMD1jesFlavorQCDdn_branch = tree->GetBranch("VMD1jesFlavorQCDdn");
  if (VMD1jesFlavorQCDdn_branch) VMD1jesFlavorQCDdn_branch->SetAddress(&VMD1jesFlavorQCDdn_);
  VMD2jesFlavorQCDdn_branch = tree->GetBranch("VMD2jesFlavorQCDdn");
  if (VMD2jesFlavorQCDdn_branch) VMD2jesFlavorQCDdn_branch->SetAddress(&VMD2jesFlavorQCDdn_);
  VMD3jesFlavorQCDdn_branch = tree->GetBranch("VMD3jesFlavorQCDdn");
  if (VMD3jesFlavorQCDdn_branch) VMD3jesFlavorQCDdn_branch->SetAddress(&VMD3jesFlavorQCDdn_);
  VMD4jesFlavorQCDdn_branch = tree->GetBranch("VMD4jesFlavorQCDdn");
  if (VMD4jesFlavorQCDdn_branch) VMD4jesFlavorQCDdn_branch->SetAddress(&VMD4jesFlavorQCDdn_);
  WMD0jesFlavorQCDdn_branch = tree->GetBranch("WMD0jesFlavorQCDdn");
  if (WMD0jesFlavorQCDdn_branch) WMD0jesFlavorQCDdn_branch->SetAddress(&WMD0jesFlavorQCDdn_);
  WMD1jesFlavorQCDdn_branch = tree->GetBranch("WMD1jesFlavorQCDdn");
  if (WMD1jesFlavorQCDdn_branch) WMD1jesFlavorQCDdn_branch->SetAddress(&WMD1jesFlavorQCDdn_);
  WMD2jesFlavorQCDdn_branch = tree->GetBranch("WMD2jesFlavorQCDdn");
  if (WMD2jesFlavorQCDdn_branch) WMD2jesFlavorQCDdn_branch->SetAddress(&WMD2jesFlavorQCDdn_);
  WMD3jesFlavorQCDdn_branch = tree->GetBranch("WMD3jesFlavorQCDdn");
  if (WMD3jesFlavorQCDdn_branch) WMD3jesFlavorQCDdn_branch->SetAddress(&WMD3jesFlavorQCDdn_);
  WMD4jesFlavorQCDdn_branch = tree->GetBranch("WMD4jesFlavorQCDdn");
  if (WMD4jesFlavorQCDdn_branch) WMD4jesFlavorQCDdn_branch->SetAddress(&WMD4jesFlavorQCDdn_);
  NQGen0jesFlavorQCDdn_branch = tree->GetBranch("NQGen0jesFlavorQCDdn");
  if (NQGen0jesFlavorQCDdn_branch) NQGen0jesFlavorQCDdn_branch->SetAddress(&NQGen0jesFlavorQCDdn_);
  NQGen1jesFlavorQCDdn_branch = tree->GetBranch("NQGen1jesFlavorQCDdn");
  if (NQGen1jesFlavorQCDdn_branch) NQGen1jesFlavorQCDdn_branch->SetAddress(&NQGen1jesFlavorQCDdn_);
  NQGen2jesFlavorQCDdn_branch = tree->GetBranch("NQGen2jesFlavorQCDdn");
  if (NQGen2jesFlavorQCDdn_branch) NQGen2jesFlavorQCDdn_branch->SetAddress(&NQGen2jesFlavorQCDdn_);
  NQGen3jesFlavorQCDdn_branch = tree->GetBranch("NQGen3jesFlavorQCDdn");
  if (NQGen3jesFlavorQCDdn_branch) NQGen3jesFlavorQCDdn_branch->SetAddress(&NQGen3jesFlavorQCDdn_);
  NQGen4jesFlavorQCDdn_branch = tree->GetBranch("NQGen4jesFlavorQCDdn");
  if (NQGen4jesFlavorQCDdn_branch) NQGen4jesFlavorQCDdn_branch->SetAddress(&NQGen4jesFlavorQCDdn_);
  NBGen0jesFlavorQCDdn_branch = tree->GetBranch("NBGen0jesFlavorQCDdn");
  if (NBGen0jesFlavorQCDdn_branch) NBGen0jesFlavorQCDdn_branch->SetAddress(&NBGen0jesFlavorQCDdn_);
  NBGen1jesFlavorQCDdn_branch = tree->GetBranch("NBGen1jesFlavorQCDdn");
  if (NBGen1jesFlavorQCDdn_branch) NBGen1jesFlavorQCDdn_branch->SetAddress(&NBGen1jesFlavorQCDdn_);
  NBGen2jesFlavorQCDdn_branch = tree->GetBranch("NBGen2jesFlavorQCDdn");
  if (NBGen2jesFlavorQCDdn_branch) NBGen2jesFlavorQCDdn_branch->SetAddress(&NBGen2jesFlavorQCDdn_);
  NBGen3jesFlavorQCDdn_branch = tree->GetBranch("NBGen3jesFlavorQCDdn");
  if (NBGen3jesFlavorQCDdn_branch) NBGen3jesFlavorQCDdn_branch->SetAddress(&NBGen3jesFlavorQCDdn_);
  NBGen4jesFlavorQCDdn_branch = tree->GetBranch("NBGen4jesFlavorQCDdn");
  if (NBGen4jesFlavorQCDdn_branch) NBGen4jesFlavorQCDdn_branch->SetAddress(&NBGen4jesFlavorQCDdn_);
  NLGen0jesFlavorQCDdn_branch = tree->GetBranch("NLGen0jesFlavorQCDdn");
  if (NLGen0jesFlavorQCDdn_branch) NLGen0jesFlavorQCDdn_branch->SetAddress(&NLGen0jesFlavorQCDdn_);
  NLGen1jesFlavorQCDdn_branch = tree->GetBranch("NLGen1jesFlavorQCDdn");
  if (NLGen1jesFlavorQCDdn_branch) NLGen1jesFlavorQCDdn_branch->SetAddress(&NLGen1jesFlavorQCDdn_);
  NLGen2jesFlavorQCDdn_branch = tree->GetBranch("NLGen2jesFlavorQCDdn");
  if (NLGen2jesFlavorQCDdn_branch) NLGen2jesFlavorQCDdn_branch->SetAddress(&NLGen2jesFlavorQCDdn_);
  NLGen3jesFlavorQCDdn_branch = tree->GetBranch("NLGen3jesFlavorQCDdn");
  if (NLGen3jesFlavorQCDdn_branch) NLGen3jesFlavorQCDdn_branch->SetAddress(&NLGen3jesFlavorQCDdn_);
  NLGen4jesFlavorQCDdn_branch = tree->GetBranch("NLGen4jesFlavorQCDdn");
  if (NLGen4jesFlavorQCDdn_branch) NLGen4jesFlavorQCDdn_branch->SetAddress(&NLGen4jesFlavorQCDdn_);
  NVQGen0jesFlavorQCDdn_branch = tree->GetBranch("NVQGen0jesFlavorQCDdn");
  if (NVQGen0jesFlavorQCDdn_branch) NVQGen0jesFlavorQCDdn_branch->SetAddress(&NVQGen0jesFlavorQCDdn_);
  NVQGen1jesFlavorQCDdn_branch = tree->GetBranch("NVQGen1jesFlavorQCDdn");
  if (NVQGen1jesFlavorQCDdn_branch) NVQGen1jesFlavorQCDdn_branch->SetAddress(&NVQGen1jesFlavorQCDdn_);
  NVQGen2jesFlavorQCDdn_branch = tree->GetBranch("NVQGen2jesFlavorQCDdn");
  if (NVQGen2jesFlavorQCDdn_branch) NVQGen2jesFlavorQCDdn_branch->SetAddress(&NVQGen2jesFlavorQCDdn_);
  NVQGen3jesFlavorQCDdn_branch = tree->GetBranch("NVQGen3jesFlavorQCDdn");
  if (NVQGen3jesFlavorQCDdn_branch) NVQGen3jesFlavorQCDdn_branch->SetAddress(&NVQGen3jesFlavorQCDdn_);
  NVQGen4jesFlavorQCDdn_branch = tree->GetBranch("NVQGen4jesFlavorQCDdn");
  if (NVQGen4jesFlavorQCDdn_branch) NVQGen4jesFlavorQCDdn_branch->SetAddress(&NVQGen4jesFlavorQCDdn_);
  NiFJjesFlavorQCDdn_branch = tree->GetBranch("NiFJjesFlavorQCDdn");
  if (NiFJjesFlavorQCDdn_branch) NiFJjesFlavorQCDdn_branch->SetAddress(&NiFJjesFlavorQCDdn_);
  iVMD0jesFlavorQCDdn_branch = tree->GetBranch("iVMD0jesFlavorQCDdn");
  if (iVMD0jesFlavorQCDdn_branch) iVMD0jesFlavorQCDdn_branch->SetAddress(&iVMD0jesFlavorQCDdn_);
  iVMD1jesFlavorQCDdn_branch = tree->GetBranch("iVMD1jesFlavorQCDdn");
  if (iVMD1jesFlavorQCDdn_branch) iVMD1jesFlavorQCDdn_branch->SetAddress(&iVMD1jesFlavorQCDdn_);
  iVMD2jesFlavorQCDdn_branch = tree->GetBranch("iVMD2jesFlavorQCDdn");
  if (iVMD2jesFlavorQCDdn_branch) iVMD2jesFlavorQCDdn_branch->SetAddress(&iVMD2jesFlavorQCDdn_);
  iVMD3jesFlavorQCDdn_branch = tree->GetBranch("iVMD3jesFlavorQCDdn");
  if (iVMD3jesFlavorQCDdn_branch) iVMD3jesFlavorQCDdn_branch->SetAddress(&iVMD3jesFlavorQCDdn_);
  iVMD4jesFlavorQCDdn_branch = tree->GetBranch("iVMD4jesFlavorQCDdn");
  if (iVMD4jesFlavorQCDdn_branch) iVMD4jesFlavorQCDdn_branch->SetAddress(&iVMD4jesFlavorQCDdn_);
  iWMD0jesFlavorQCDdn_branch = tree->GetBranch("iWMD0jesFlavorQCDdn");
  if (iWMD0jesFlavorQCDdn_branch) iWMD0jesFlavorQCDdn_branch->SetAddress(&iWMD0jesFlavorQCDdn_);
  iWMD1jesFlavorQCDdn_branch = tree->GetBranch("iWMD1jesFlavorQCDdn");
  if (iWMD1jesFlavorQCDdn_branch) iWMD1jesFlavorQCDdn_branch->SetAddress(&iWMD1jesFlavorQCDdn_);
  iWMD2jesFlavorQCDdn_branch = tree->GetBranch("iWMD2jesFlavorQCDdn");
  if (iWMD2jesFlavorQCDdn_branch) iWMD2jesFlavorQCDdn_branch->SetAddress(&iWMD2jesFlavorQCDdn_);
  iWMD3jesFlavorQCDdn_branch = tree->GetBranch("iWMD3jesFlavorQCDdn");
  if (iWMD3jesFlavorQCDdn_branch) iWMD3jesFlavorQCDdn_branch->SetAddress(&iWMD3jesFlavorQCDdn_);
  iWMD4jesFlavorQCDdn_branch = tree->GetBranch("iWMD4jesFlavorQCDdn");
  if (iWMD4jesFlavorQCDdn_branch) iWMD4jesFlavorQCDdn_branch->SetAddress(&iWMD4jesFlavorQCDdn_);
  NJjesFlavorQCDdn_branch = tree->GetBranch("NJjesFlavorQCDdn");
  if (NJjesFlavorQCDdn_branch) NJjesFlavorQCDdn_branch->SetAddress(&NJjesFlavorQCDdn_);
  NbLoosejesFlavorQCDdn_branch = tree->GetBranch("NbLoosejesFlavorQCDdn");
  if (NbLoosejesFlavorQCDdn_branch) NbLoosejesFlavorQCDdn_branch->SetAddress(&NbLoosejesFlavorQCDdn_);
  NbMediumjesFlavorQCDdn_branch = tree->GetBranch("NbMediumjesFlavorQCDdn");
  if (NbMediumjesFlavorQCDdn_branch) NbMediumjesFlavorQCDdn_branch->SetAddress(&NbMediumjesFlavorQCDdn_);
  NbTightjesFlavorQCDdn_branch = tree->GetBranch("NbTightjesFlavorQCDdn");
  if (NbTightjesFlavorQCDdn_branch) NbTightjesFlavorQCDdn_branch->SetAddress(&NbTightjesFlavorQCDdn_);
  NoORNbLoosejesFlavorQCDdn_branch = tree->GetBranch("NoORNbLoosejesFlavorQCDdn");
  if (NoORNbLoosejesFlavorQCDdn_branch) NoORNbLoosejesFlavorQCDdn_branch->SetAddress(&NoORNbLoosejesFlavorQCDdn_);
  NoORNbMediumjesFlavorQCDdn_branch = tree->GetBranch("NoORNbMediumjesFlavorQCDdn");
  if (NoORNbMediumjesFlavorQCDdn_branch) NoORNbMediumjesFlavorQCDdn_branch->SetAddress(&NoORNbMediumjesFlavorQCDdn_);
  NoORNbTightjesFlavorQCDdn_branch = tree->GetBranch("NoORNbTightjesFlavorQCDdn");
  if (NoORNbTightjesFlavorQCDdn_branch) NoORNbTightjesFlavorQCDdn_branch->SetAddress(&NoORNbTightjesFlavorQCDdn_);
  NQJGenjesFlavorQCDdn_branch = tree->GetBranch("NQJGenjesFlavorQCDdn");
  if (NQJGenjesFlavorQCDdn_branch) NQJGenjesFlavorQCDdn_branch->SetAddress(&NQJGenjesFlavorQCDdn_);
  NBJGenjesFlavorQCDdn_branch = tree->GetBranch("NBJGenjesFlavorQCDdn");
  if (NBJGenjesFlavorQCDdn_branch) NBJGenjesFlavorQCDdn_branch->SetAddress(&NBJGenjesFlavorQCDdn_);
  NLJGenjesFlavorQCDdn_branch = tree->GetBranch("NLJGenjesFlavorQCDdn");
  if (NLJGenjesFlavorQCDdn_branch) NLJGenjesFlavorQCDdn_branch->SetAddress(&NLJGenjesFlavorQCDdn_);
  MVVXjesFlavorQCDdn_branch = tree->GetBranch("MVVXjesFlavorQCDdn");
  if (MVVXjesFlavorQCDdn_branch) MVVXjesFlavorQCDdn_branch->SetAddress(&MVVXjesFlavorQCDdn_);
  PtVVXjesFlavorQCDdn_branch = tree->GetBranch("PtVVXjesFlavorQCDdn");
  if (PtVVXjesFlavorQCDdn_branch) PtVVXjesFlavorQCDdn_branch->SetAddress(&PtVVXjesFlavorQCDdn_);
  HTjesFlavorQCDdn_branch = tree->GetBranch("HTjesFlavorQCDdn");
  if (HTjesFlavorQCDdn_branch) HTjesFlavorQCDdn_branch->SetAddress(&HTjesFlavorQCDdn_);
  HTJjesFlavorQCDdn_branch = tree->GetBranch("HTJjesFlavorQCDdn");
  if (HTJjesFlavorQCDdn_branch) HTJjesFlavorQCDdn_branch->SetAddress(&HTJjesFlavorQCDdn_);
  HTFJjesFlavorQCDdn_branch = tree->GetBranch("HTFJjesFlavorQCDdn");
  if (HTFJjesFlavorQCDdn_branch) HTFJjesFlavorQCDdn_branch->SetAddress(&HTFJjesFlavorQCDdn_);
  SumPtFJjesFlavorQCDdn_branch = tree->GetBranch("SumPtFJjesFlavorQCDdn");
  if (SumPtFJjesFlavorQCDdn_branch) SumPtFJjesFlavorQCDdn_branch->SetAddress(&SumPtFJjesFlavorQCDdn_);
  SumPtJjesFlavorQCDdn_branch = tree->GetBranch("SumPtJjesFlavorQCDdn");
  if (SumPtJjesFlavorQCDdn_branch) SumPtJjesFlavorQCDdn_branch->SetAddress(&SumPtJjesFlavorQCDdn_);
  NFJjesTimePtEtaup_branch = tree->GetBranch("NFJjesTimePtEtaup");
  if (NFJjesTimePtEtaup_branch) NFJjesTimePtEtaup_branch->SetAddress(&NFJjesTimePtEtaup_);
  VMD0jesTimePtEtaup_branch = tree->GetBranch("VMD0jesTimePtEtaup");
  if (VMD0jesTimePtEtaup_branch) VMD0jesTimePtEtaup_branch->SetAddress(&VMD0jesTimePtEtaup_);
  VMD1jesTimePtEtaup_branch = tree->GetBranch("VMD1jesTimePtEtaup");
  if (VMD1jesTimePtEtaup_branch) VMD1jesTimePtEtaup_branch->SetAddress(&VMD1jesTimePtEtaup_);
  VMD2jesTimePtEtaup_branch = tree->GetBranch("VMD2jesTimePtEtaup");
  if (VMD2jesTimePtEtaup_branch) VMD2jesTimePtEtaup_branch->SetAddress(&VMD2jesTimePtEtaup_);
  VMD3jesTimePtEtaup_branch = tree->GetBranch("VMD3jesTimePtEtaup");
  if (VMD3jesTimePtEtaup_branch) VMD3jesTimePtEtaup_branch->SetAddress(&VMD3jesTimePtEtaup_);
  VMD4jesTimePtEtaup_branch = tree->GetBranch("VMD4jesTimePtEtaup");
  if (VMD4jesTimePtEtaup_branch) VMD4jesTimePtEtaup_branch->SetAddress(&VMD4jesTimePtEtaup_);
  WMD0jesTimePtEtaup_branch = tree->GetBranch("WMD0jesTimePtEtaup");
  if (WMD0jesTimePtEtaup_branch) WMD0jesTimePtEtaup_branch->SetAddress(&WMD0jesTimePtEtaup_);
  WMD1jesTimePtEtaup_branch = tree->GetBranch("WMD1jesTimePtEtaup");
  if (WMD1jesTimePtEtaup_branch) WMD1jesTimePtEtaup_branch->SetAddress(&WMD1jesTimePtEtaup_);
  WMD2jesTimePtEtaup_branch = tree->GetBranch("WMD2jesTimePtEtaup");
  if (WMD2jesTimePtEtaup_branch) WMD2jesTimePtEtaup_branch->SetAddress(&WMD2jesTimePtEtaup_);
  WMD3jesTimePtEtaup_branch = tree->GetBranch("WMD3jesTimePtEtaup");
  if (WMD3jesTimePtEtaup_branch) WMD3jesTimePtEtaup_branch->SetAddress(&WMD3jesTimePtEtaup_);
  WMD4jesTimePtEtaup_branch = tree->GetBranch("WMD4jesTimePtEtaup");
  if (WMD4jesTimePtEtaup_branch) WMD4jesTimePtEtaup_branch->SetAddress(&WMD4jesTimePtEtaup_);
  NQGen0jesTimePtEtaup_branch = tree->GetBranch("NQGen0jesTimePtEtaup");
  if (NQGen0jesTimePtEtaup_branch) NQGen0jesTimePtEtaup_branch->SetAddress(&NQGen0jesTimePtEtaup_);
  NQGen1jesTimePtEtaup_branch = tree->GetBranch("NQGen1jesTimePtEtaup");
  if (NQGen1jesTimePtEtaup_branch) NQGen1jesTimePtEtaup_branch->SetAddress(&NQGen1jesTimePtEtaup_);
  NQGen2jesTimePtEtaup_branch = tree->GetBranch("NQGen2jesTimePtEtaup");
  if (NQGen2jesTimePtEtaup_branch) NQGen2jesTimePtEtaup_branch->SetAddress(&NQGen2jesTimePtEtaup_);
  NQGen3jesTimePtEtaup_branch = tree->GetBranch("NQGen3jesTimePtEtaup");
  if (NQGen3jesTimePtEtaup_branch) NQGen3jesTimePtEtaup_branch->SetAddress(&NQGen3jesTimePtEtaup_);
  NQGen4jesTimePtEtaup_branch = tree->GetBranch("NQGen4jesTimePtEtaup");
  if (NQGen4jesTimePtEtaup_branch) NQGen4jesTimePtEtaup_branch->SetAddress(&NQGen4jesTimePtEtaup_);
  NBGen0jesTimePtEtaup_branch = tree->GetBranch("NBGen0jesTimePtEtaup");
  if (NBGen0jesTimePtEtaup_branch) NBGen0jesTimePtEtaup_branch->SetAddress(&NBGen0jesTimePtEtaup_);
  NBGen1jesTimePtEtaup_branch = tree->GetBranch("NBGen1jesTimePtEtaup");
  if (NBGen1jesTimePtEtaup_branch) NBGen1jesTimePtEtaup_branch->SetAddress(&NBGen1jesTimePtEtaup_);
  NBGen2jesTimePtEtaup_branch = tree->GetBranch("NBGen2jesTimePtEtaup");
  if (NBGen2jesTimePtEtaup_branch) NBGen2jesTimePtEtaup_branch->SetAddress(&NBGen2jesTimePtEtaup_);
  NBGen3jesTimePtEtaup_branch = tree->GetBranch("NBGen3jesTimePtEtaup");
  if (NBGen3jesTimePtEtaup_branch) NBGen3jesTimePtEtaup_branch->SetAddress(&NBGen3jesTimePtEtaup_);
  NBGen4jesTimePtEtaup_branch = tree->GetBranch("NBGen4jesTimePtEtaup");
  if (NBGen4jesTimePtEtaup_branch) NBGen4jesTimePtEtaup_branch->SetAddress(&NBGen4jesTimePtEtaup_);
  NLGen0jesTimePtEtaup_branch = tree->GetBranch("NLGen0jesTimePtEtaup");
  if (NLGen0jesTimePtEtaup_branch) NLGen0jesTimePtEtaup_branch->SetAddress(&NLGen0jesTimePtEtaup_);
  NLGen1jesTimePtEtaup_branch = tree->GetBranch("NLGen1jesTimePtEtaup");
  if (NLGen1jesTimePtEtaup_branch) NLGen1jesTimePtEtaup_branch->SetAddress(&NLGen1jesTimePtEtaup_);
  NLGen2jesTimePtEtaup_branch = tree->GetBranch("NLGen2jesTimePtEtaup");
  if (NLGen2jesTimePtEtaup_branch) NLGen2jesTimePtEtaup_branch->SetAddress(&NLGen2jesTimePtEtaup_);
  NLGen3jesTimePtEtaup_branch = tree->GetBranch("NLGen3jesTimePtEtaup");
  if (NLGen3jesTimePtEtaup_branch) NLGen3jesTimePtEtaup_branch->SetAddress(&NLGen3jesTimePtEtaup_);
  NLGen4jesTimePtEtaup_branch = tree->GetBranch("NLGen4jesTimePtEtaup");
  if (NLGen4jesTimePtEtaup_branch) NLGen4jesTimePtEtaup_branch->SetAddress(&NLGen4jesTimePtEtaup_);
  NVQGen0jesTimePtEtaup_branch = tree->GetBranch("NVQGen0jesTimePtEtaup");
  if (NVQGen0jesTimePtEtaup_branch) NVQGen0jesTimePtEtaup_branch->SetAddress(&NVQGen0jesTimePtEtaup_);
  NVQGen1jesTimePtEtaup_branch = tree->GetBranch("NVQGen1jesTimePtEtaup");
  if (NVQGen1jesTimePtEtaup_branch) NVQGen1jesTimePtEtaup_branch->SetAddress(&NVQGen1jesTimePtEtaup_);
  NVQGen2jesTimePtEtaup_branch = tree->GetBranch("NVQGen2jesTimePtEtaup");
  if (NVQGen2jesTimePtEtaup_branch) NVQGen2jesTimePtEtaup_branch->SetAddress(&NVQGen2jesTimePtEtaup_);
  NVQGen3jesTimePtEtaup_branch = tree->GetBranch("NVQGen3jesTimePtEtaup");
  if (NVQGen3jesTimePtEtaup_branch) NVQGen3jesTimePtEtaup_branch->SetAddress(&NVQGen3jesTimePtEtaup_);
  NVQGen4jesTimePtEtaup_branch = tree->GetBranch("NVQGen4jesTimePtEtaup");
  if (NVQGen4jesTimePtEtaup_branch) NVQGen4jesTimePtEtaup_branch->SetAddress(&NVQGen4jesTimePtEtaup_);
  NiFJjesTimePtEtaup_branch = tree->GetBranch("NiFJjesTimePtEtaup");
  if (NiFJjesTimePtEtaup_branch) NiFJjesTimePtEtaup_branch->SetAddress(&NiFJjesTimePtEtaup_);
  iVMD0jesTimePtEtaup_branch = tree->GetBranch("iVMD0jesTimePtEtaup");
  if (iVMD0jesTimePtEtaup_branch) iVMD0jesTimePtEtaup_branch->SetAddress(&iVMD0jesTimePtEtaup_);
  iVMD1jesTimePtEtaup_branch = tree->GetBranch("iVMD1jesTimePtEtaup");
  if (iVMD1jesTimePtEtaup_branch) iVMD1jesTimePtEtaup_branch->SetAddress(&iVMD1jesTimePtEtaup_);
  iVMD2jesTimePtEtaup_branch = tree->GetBranch("iVMD2jesTimePtEtaup");
  if (iVMD2jesTimePtEtaup_branch) iVMD2jesTimePtEtaup_branch->SetAddress(&iVMD2jesTimePtEtaup_);
  iVMD3jesTimePtEtaup_branch = tree->GetBranch("iVMD3jesTimePtEtaup");
  if (iVMD3jesTimePtEtaup_branch) iVMD3jesTimePtEtaup_branch->SetAddress(&iVMD3jesTimePtEtaup_);
  iVMD4jesTimePtEtaup_branch = tree->GetBranch("iVMD4jesTimePtEtaup");
  if (iVMD4jesTimePtEtaup_branch) iVMD4jesTimePtEtaup_branch->SetAddress(&iVMD4jesTimePtEtaup_);
  iWMD0jesTimePtEtaup_branch = tree->GetBranch("iWMD0jesTimePtEtaup");
  if (iWMD0jesTimePtEtaup_branch) iWMD0jesTimePtEtaup_branch->SetAddress(&iWMD0jesTimePtEtaup_);
  iWMD1jesTimePtEtaup_branch = tree->GetBranch("iWMD1jesTimePtEtaup");
  if (iWMD1jesTimePtEtaup_branch) iWMD1jesTimePtEtaup_branch->SetAddress(&iWMD1jesTimePtEtaup_);
  iWMD2jesTimePtEtaup_branch = tree->GetBranch("iWMD2jesTimePtEtaup");
  if (iWMD2jesTimePtEtaup_branch) iWMD2jesTimePtEtaup_branch->SetAddress(&iWMD2jesTimePtEtaup_);
  iWMD3jesTimePtEtaup_branch = tree->GetBranch("iWMD3jesTimePtEtaup");
  if (iWMD3jesTimePtEtaup_branch) iWMD3jesTimePtEtaup_branch->SetAddress(&iWMD3jesTimePtEtaup_);
  iWMD4jesTimePtEtaup_branch = tree->GetBranch("iWMD4jesTimePtEtaup");
  if (iWMD4jesTimePtEtaup_branch) iWMD4jesTimePtEtaup_branch->SetAddress(&iWMD4jesTimePtEtaup_);
  NJjesTimePtEtaup_branch = tree->GetBranch("NJjesTimePtEtaup");
  if (NJjesTimePtEtaup_branch) NJjesTimePtEtaup_branch->SetAddress(&NJjesTimePtEtaup_);
  NbLoosejesTimePtEtaup_branch = tree->GetBranch("NbLoosejesTimePtEtaup");
  if (NbLoosejesTimePtEtaup_branch) NbLoosejesTimePtEtaup_branch->SetAddress(&NbLoosejesTimePtEtaup_);
  NbMediumjesTimePtEtaup_branch = tree->GetBranch("NbMediumjesTimePtEtaup");
  if (NbMediumjesTimePtEtaup_branch) NbMediumjesTimePtEtaup_branch->SetAddress(&NbMediumjesTimePtEtaup_);
  NbTightjesTimePtEtaup_branch = tree->GetBranch("NbTightjesTimePtEtaup");
  if (NbTightjesTimePtEtaup_branch) NbTightjesTimePtEtaup_branch->SetAddress(&NbTightjesTimePtEtaup_);
  NoORNbLoosejesTimePtEtaup_branch = tree->GetBranch("NoORNbLoosejesTimePtEtaup");
  if (NoORNbLoosejesTimePtEtaup_branch) NoORNbLoosejesTimePtEtaup_branch->SetAddress(&NoORNbLoosejesTimePtEtaup_);
  NoORNbMediumjesTimePtEtaup_branch = tree->GetBranch("NoORNbMediumjesTimePtEtaup");
  if (NoORNbMediumjesTimePtEtaup_branch) NoORNbMediumjesTimePtEtaup_branch->SetAddress(&NoORNbMediumjesTimePtEtaup_);
  NoORNbTightjesTimePtEtaup_branch = tree->GetBranch("NoORNbTightjesTimePtEtaup");
  if (NoORNbTightjesTimePtEtaup_branch) NoORNbTightjesTimePtEtaup_branch->SetAddress(&NoORNbTightjesTimePtEtaup_);
  NQJGenjesTimePtEtaup_branch = tree->GetBranch("NQJGenjesTimePtEtaup");
  if (NQJGenjesTimePtEtaup_branch) NQJGenjesTimePtEtaup_branch->SetAddress(&NQJGenjesTimePtEtaup_);
  NBJGenjesTimePtEtaup_branch = tree->GetBranch("NBJGenjesTimePtEtaup");
  if (NBJGenjesTimePtEtaup_branch) NBJGenjesTimePtEtaup_branch->SetAddress(&NBJGenjesTimePtEtaup_);
  NLJGenjesTimePtEtaup_branch = tree->GetBranch("NLJGenjesTimePtEtaup");
  if (NLJGenjesTimePtEtaup_branch) NLJGenjesTimePtEtaup_branch->SetAddress(&NLJGenjesTimePtEtaup_);
  MVVXjesTimePtEtaup_branch = tree->GetBranch("MVVXjesTimePtEtaup");
  if (MVVXjesTimePtEtaup_branch) MVVXjesTimePtEtaup_branch->SetAddress(&MVVXjesTimePtEtaup_);
  PtVVXjesTimePtEtaup_branch = tree->GetBranch("PtVVXjesTimePtEtaup");
  if (PtVVXjesTimePtEtaup_branch) PtVVXjesTimePtEtaup_branch->SetAddress(&PtVVXjesTimePtEtaup_);
  HTjesTimePtEtaup_branch = tree->GetBranch("HTjesTimePtEtaup");
  if (HTjesTimePtEtaup_branch) HTjesTimePtEtaup_branch->SetAddress(&HTjesTimePtEtaup_);
  HTJjesTimePtEtaup_branch = tree->GetBranch("HTJjesTimePtEtaup");
  if (HTJjesTimePtEtaup_branch) HTJjesTimePtEtaup_branch->SetAddress(&HTJjesTimePtEtaup_);
  HTFJjesTimePtEtaup_branch = tree->GetBranch("HTFJjesTimePtEtaup");
  if (HTFJjesTimePtEtaup_branch) HTFJjesTimePtEtaup_branch->SetAddress(&HTFJjesTimePtEtaup_);
  SumPtFJjesTimePtEtaup_branch = tree->GetBranch("SumPtFJjesTimePtEtaup");
  if (SumPtFJjesTimePtEtaup_branch) SumPtFJjesTimePtEtaup_branch->SetAddress(&SumPtFJjesTimePtEtaup_);
  SumPtJjesTimePtEtaup_branch = tree->GetBranch("SumPtJjesTimePtEtaup");
  if (SumPtJjesTimePtEtaup_branch) SumPtJjesTimePtEtaup_branch->SetAddress(&SumPtJjesTimePtEtaup_);
  NFJjesTimePtEtadn_branch = tree->GetBranch("NFJjesTimePtEtadn");
  if (NFJjesTimePtEtadn_branch) NFJjesTimePtEtadn_branch->SetAddress(&NFJjesTimePtEtadn_);
  VMD0jesTimePtEtadn_branch = tree->GetBranch("VMD0jesTimePtEtadn");
  if (VMD0jesTimePtEtadn_branch) VMD0jesTimePtEtadn_branch->SetAddress(&VMD0jesTimePtEtadn_);
  VMD1jesTimePtEtadn_branch = tree->GetBranch("VMD1jesTimePtEtadn");
  if (VMD1jesTimePtEtadn_branch) VMD1jesTimePtEtadn_branch->SetAddress(&VMD1jesTimePtEtadn_);
  VMD2jesTimePtEtadn_branch = tree->GetBranch("VMD2jesTimePtEtadn");
  if (VMD2jesTimePtEtadn_branch) VMD2jesTimePtEtadn_branch->SetAddress(&VMD2jesTimePtEtadn_);
  VMD3jesTimePtEtadn_branch = tree->GetBranch("VMD3jesTimePtEtadn");
  if (VMD3jesTimePtEtadn_branch) VMD3jesTimePtEtadn_branch->SetAddress(&VMD3jesTimePtEtadn_);
  VMD4jesTimePtEtadn_branch = tree->GetBranch("VMD4jesTimePtEtadn");
  if (VMD4jesTimePtEtadn_branch) VMD4jesTimePtEtadn_branch->SetAddress(&VMD4jesTimePtEtadn_);
  WMD0jesTimePtEtadn_branch = tree->GetBranch("WMD0jesTimePtEtadn");
  if (WMD0jesTimePtEtadn_branch) WMD0jesTimePtEtadn_branch->SetAddress(&WMD0jesTimePtEtadn_);
  WMD1jesTimePtEtadn_branch = tree->GetBranch("WMD1jesTimePtEtadn");
  if (WMD1jesTimePtEtadn_branch) WMD1jesTimePtEtadn_branch->SetAddress(&WMD1jesTimePtEtadn_);
  WMD2jesTimePtEtadn_branch = tree->GetBranch("WMD2jesTimePtEtadn");
  if (WMD2jesTimePtEtadn_branch) WMD2jesTimePtEtadn_branch->SetAddress(&WMD2jesTimePtEtadn_);
  WMD3jesTimePtEtadn_branch = tree->GetBranch("WMD3jesTimePtEtadn");
  if (WMD3jesTimePtEtadn_branch) WMD3jesTimePtEtadn_branch->SetAddress(&WMD3jesTimePtEtadn_);
  WMD4jesTimePtEtadn_branch = tree->GetBranch("WMD4jesTimePtEtadn");
  if (WMD4jesTimePtEtadn_branch) WMD4jesTimePtEtadn_branch->SetAddress(&WMD4jesTimePtEtadn_);
  NQGen0jesTimePtEtadn_branch = tree->GetBranch("NQGen0jesTimePtEtadn");
  if (NQGen0jesTimePtEtadn_branch) NQGen0jesTimePtEtadn_branch->SetAddress(&NQGen0jesTimePtEtadn_);
  NQGen1jesTimePtEtadn_branch = tree->GetBranch("NQGen1jesTimePtEtadn");
  if (NQGen1jesTimePtEtadn_branch) NQGen1jesTimePtEtadn_branch->SetAddress(&NQGen1jesTimePtEtadn_);
  NQGen2jesTimePtEtadn_branch = tree->GetBranch("NQGen2jesTimePtEtadn");
  if (NQGen2jesTimePtEtadn_branch) NQGen2jesTimePtEtadn_branch->SetAddress(&NQGen2jesTimePtEtadn_);
  NQGen3jesTimePtEtadn_branch = tree->GetBranch("NQGen3jesTimePtEtadn");
  if (NQGen3jesTimePtEtadn_branch) NQGen3jesTimePtEtadn_branch->SetAddress(&NQGen3jesTimePtEtadn_);
  NQGen4jesTimePtEtadn_branch = tree->GetBranch("NQGen4jesTimePtEtadn");
  if (NQGen4jesTimePtEtadn_branch) NQGen4jesTimePtEtadn_branch->SetAddress(&NQGen4jesTimePtEtadn_);
  NBGen0jesTimePtEtadn_branch = tree->GetBranch("NBGen0jesTimePtEtadn");
  if (NBGen0jesTimePtEtadn_branch) NBGen0jesTimePtEtadn_branch->SetAddress(&NBGen0jesTimePtEtadn_);
  NBGen1jesTimePtEtadn_branch = tree->GetBranch("NBGen1jesTimePtEtadn");
  if (NBGen1jesTimePtEtadn_branch) NBGen1jesTimePtEtadn_branch->SetAddress(&NBGen1jesTimePtEtadn_);
  NBGen2jesTimePtEtadn_branch = tree->GetBranch("NBGen2jesTimePtEtadn");
  if (NBGen2jesTimePtEtadn_branch) NBGen2jesTimePtEtadn_branch->SetAddress(&NBGen2jesTimePtEtadn_);
  NBGen3jesTimePtEtadn_branch = tree->GetBranch("NBGen3jesTimePtEtadn");
  if (NBGen3jesTimePtEtadn_branch) NBGen3jesTimePtEtadn_branch->SetAddress(&NBGen3jesTimePtEtadn_);
  NBGen4jesTimePtEtadn_branch = tree->GetBranch("NBGen4jesTimePtEtadn");
  if (NBGen4jesTimePtEtadn_branch) NBGen4jesTimePtEtadn_branch->SetAddress(&NBGen4jesTimePtEtadn_);
  NLGen0jesTimePtEtadn_branch = tree->GetBranch("NLGen0jesTimePtEtadn");
  if (NLGen0jesTimePtEtadn_branch) NLGen0jesTimePtEtadn_branch->SetAddress(&NLGen0jesTimePtEtadn_);
  NLGen1jesTimePtEtadn_branch = tree->GetBranch("NLGen1jesTimePtEtadn");
  if (NLGen1jesTimePtEtadn_branch) NLGen1jesTimePtEtadn_branch->SetAddress(&NLGen1jesTimePtEtadn_);
  NLGen2jesTimePtEtadn_branch = tree->GetBranch("NLGen2jesTimePtEtadn");
  if (NLGen2jesTimePtEtadn_branch) NLGen2jesTimePtEtadn_branch->SetAddress(&NLGen2jesTimePtEtadn_);
  NLGen3jesTimePtEtadn_branch = tree->GetBranch("NLGen3jesTimePtEtadn");
  if (NLGen3jesTimePtEtadn_branch) NLGen3jesTimePtEtadn_branch->SetAddress(&NLGen3jesTimePtEtadn_);
  NLGen4jesTimePtEtadn_branch = tree->GetBranch("NLGen4jesTimePtEtadn");
  if (NLGen4jesTimePtEtadn_branch) NLGen4jesTimePtEtadn_branch->SetAddress(&NLGen4jesTimePtEtadn_);
  NVQGen0jesTimePtEtadn_branch = tree->GetBranch("NVQGen0jesTimePtEtadn");
  if (NVQGen0jesTimePtEtadn_branch) NVQGen0jesTimePtEtadn_branch->SetAddress(&NVQGen0jesTimePtEtadn_);
  NVQGen1jesTimePtEtadn_branch = tree->GetBranch("NVQGen1jesTimePtEtadn");
  if (NVQGen1jesTimePtEtadn_branch) NVQGen1jesTimePtEtadn_branch->SetAddress(&NVQGen1jesTimePtEtadn_);
  NVQGen2jesTimePtEtadn_branch = tree->GetBranch("NVQGen2jesTimePtEtadn");
  if (NVQGen2jesTimePtEtadn_branch) NVQGen2jesTimePtEtadn_branch->SetAddress(&NVQGen2jesTimePtEtadn_);
  NVQGen3jesTimePtEtadn_branch = tree->GetBranch("NVQGen3jesTimePtEtadn");
  if (NVQGen3jesTimePtEtadn_branch) NVQGen3jesTimePtEtadn_branch->SetAddress(&NVQGen3jesTimePtEtadn_);
  NVQGen4jesTimePtEtadn_branch = tree->GetBranch("NVQGen4jesTimePtEtadn");
  if (NVQGen4jesTimePtEtadn_branch) NVQGen4jesTimePtEtadn_branch->SetAddress(&NVQGen4jesTimePtEtadn_);
  NiFJjesTimePtEtadn_branch = tree->GetBranch("NiFJjesTimePtEtadn");
  if (NiFJjesTimePtEtadn_branch) NiFJjesTimePtEtadn_branch->SetAddress(&NiFJjesTimePtEtadn_);
  iVMD0jesTimePtEtadn_branch = tree->GetBranch("iVMD0jesTimePtEtadn");
  if (iVMD0jesTimePtEtadn_branch) iVMD0jesTimePtEtadn_branch->SetAddress(&iVMD0jesTimePtEtadn_);
  iVMD1jesTimePtEtadn_branch = tree->GetBranch("iVMD1jesTimePtEtadn");
  if (iVMD1jesTimePtEtadn_branch) iVMD1jesTimePtEtadn_branch->SetAddress(&iVMD1jesTimePtEtadn_);
  iVMD2jesTimePtEtadn_branch = tree->GetBranch("iVMD2jesTimePtEtadn");
  if (iVMD2jesTimePtEtadn_branch) iVMD2jesTimePtEtadn_branch->SetAddress(&iVMD2jesTimePtEtadn_);
  iVMD3jesTimePtEtadn_branch = tree->GetBranch("iVMD3jesTimePtEtadn");
  if (iVMD3jesTimePtEtadn_branch) iVMD3jesTimePtEtadn_branch->SetAddress(&iVMD3jesTimePtEtadn_);
  iVMD4jesTimePtEtadn_branch = tree->GetBranch("iVMD4jesTimePtEtadn");
  if (iVMD4jesTimePtEtadn_branch) iVMD4jesTimePtEtadn_branch->SetAddress(&iVMD4jesTimePtEtadn_);
  iWMD0jesTimePtEtadn_branch = tree->GetBranch("iWMD0jesTimePtEtadn");
  if (iWMD0jesTimePtEtadn_branch) iWMD0jesTimePtEtadn_branch->SetAddress(&iWMD0jesTimePtEtadn_);
  iWMD1jesTimePtEtadn_branch = tree->GetBranch("iWMD1jesTimePtEtadn");
  if (iWMD1jesTimePtEtadn_branch) iWMD1jesTimePtEtadn_branch->SetAddress(&iWMD1jesTimePtEtadn_);
  iWMD2jesTimePtEtadn_branch = tree->GetBranch("iWMD2jesTimePtEtadn");
  if (iWMD2jesTimePtEtadn_branch) iWMD2jesTimePtEtadn_branch->SetAddress(&iWMD2jesTimePtEtadn_);
  iWMD3jesTimePtEtadn_branch = tree->GetBranch("iWMD3jesTimePtEtadn");
  if (iWMD3jesTimePtEtadn_branch) iWMD3jesTimePtEtadn_branch->SetAddress(&iWMD3jesTimePtEtadn_);
  iWMD4jesTimePtEtadn_branch = tree->GetBranch("iWMD4jesTimePtEtadn");
  if (iWMD4jesTimePtEtadn_branch) iWMD4jesTimePtEtadn_branch->SetAddress(&iWMD4jesTimePtEtadn_);
  NJjesTimePtEtadn_branch = tree->GetBranch("NJjesTimePtEtadn");
  if (NJjesTimePtEtadn_branch) NJjesTimePtEtadn_branch->SetAddress(&NJjesTimePtEtadn_);
  NbLoosejesTimePtEtadn_branch = tree->GetBranch("NbLoosejesTimePtEtadn");
  if (NbLoosejesTimePtEtadn_branch) NbLoosejesTimePtEtadn_branch->SetAddress(&NbLoosejesTimePtEtadn_);
  NbMediumjesTimePtEtadn_branch = tree->GetBranch("NbMediumjesTimePtEtadn");
  if (NbMediumjesTimePtEtadn_branch) NbMediumjesTimePtEtadn_branch->SetAddress(&NbMediumjesTimePtEtadn_);
  NbTightjesTimePtEtadn_branch = tree->GetBranch("NbTightjesTimePtEtadn");
  if (NbTightjesTimePtEtadn_branch) NbTightjesTimePtEtadn_branch->SetAddress(&NbTightjesTimePtEtadn_);
  NoORNbLoosejesTimePtEtadn_branch = tree->GetBranch("NoORNbLoosejesTimePtEtadn");
  if (NoORNbLoosejesTimePtEtadn_branch) NoORNbLoosejesTimePtEtadn_branch->SetAddress(&NoORNbLoosejesTimePtEtadn_);
  NoORNbMediumjesTimePtEtadn_branch = tree->GetBranch("NoORNbMediumjesTimePtEtadn");
  if (NoORNbMediumjesTimePtEtadn_branch) NoORNbMediumjesTimePtEtadn_branch->SetAddress(&NoORNbMediumjesTimePtEtadn_);
  NoORNbTightjesTimePtEtadn_branch = tree->GetBranch("NoORNbTightjesTimePtEtadn");
  if (NoORNbTightjesTimePtEtadn_branch) NoORNbTightjesTimePtEtadn_branch->SetAddress(&NoORNbTightjesTimePtEtadn_);
  NQJGenjesTimePtEtadn_branch = tree->GetBranch("NQJGenjesTimePtEtadn");
  if (NQJGenjesTimePtEtadn_branch) NQJGenjesTimePtEtadn_branch->SetAddress(&NQJGenjesTimePtEtadn_);
  NBJGenjesTimePtEtadn_branch = tree->GetBranch("NBJGenjesTimePtEtadn");
  if (NBJGenjesTimePtEtadn_branch) NBJGenjesTimePtEtadn_branch->SetAddress(&NBJGenjesTimePtEtadn_);
  NLJGenjesTimePtEtadn_branch = tree->GetBranch("NLJGenjesTimePtEtadn");
  if (NLJGenjesTimePtEtadn_branch) NLJGenjesTimePtEtadn_branch->SetAddress(&NLJGenjesTimePtEtadn_);
  MVVXjesTimePtEtadn_branch = tree->GetBranch("MVVXjesTimePtEtadn");
  if (MVVXjesTimePtEtadn_branch) MVVXjesTimePtEtadn_branch->SetAddress(&MVVXjesTimePtEtadn_);
  PtVVXjesTimePtEtadn_branch = tree->GetBranch("PtVVXjesTimePtEtadn");
  if (PtVVXjesTimePtEtadn_branch) PtVVXjesTimePtEtadn_branch->SetAddress(&PtVVXjesTimePtEtadn_);
  HTjesTimePtEtadn_branch = tree->GetBranch("HTjesTimePtEtadn");
  if (HTjesTimePtEtadn_branch) HTjesTimePtEtadn_branch->SetAddress(&HTjesTimePtEtadn_);
  HTJjesTimePtEtadn_branch = tree->GetBranch("HTJjesTimePtEtadn");
  if (HTJjesTimePtEtadn_branch) HTJjesTimePtEtadn_branch->SetAddress(&HTJjesTimePtEtadn_);
  HTFJjesTimePtEtadn_branch = tree->GetBranch("HTFJjesTimePtEtadn");
  if (HTFJjesTimePtEtadn_branch) HTFJjesTimePtEtadn_branch->SetAddress(&HTFJjesTimePtEtadn_);
  SumPtFJjesTimePtEtadn_branch = tree->GetBranch("SumPtFJjesTimePtEtadn");
  if (SumPtFJjesTimePtEtadn_branch) SumPtFJjesTimePtEtadn_branch->SetAddress(&SumPtFJjesTimePtEtadn_);
  SumPtJjesTimePtEtadn_branch = tree->GetBranch("SumPtJjesTimePtEtadn");
  if (SumPtJjesTimePtEtadn_branch) SumPtJjesTimePtEtadn_branch->SetAddress(&SumPtJjesTimePtEtadn_);
  NFJjesRelativeJEREC1up_branch = tree->GetBranch("NFJjesRelativeJEREC1up");
  if (NFJjesRelativeJEREC1up_branch) NFJjesRelativeJEREC1up_branch->SetAddress(&NFJjesRelativeJEREC1up_);
  VMD0jesRelativeJEREC1up_branch = tree->GetBranch("VMD0jesRelativeJEREC1up");
  if (VMD0jesRelativeJEREC1up_branch) VMD0jesRelativeJEREC1up_branch->SetAddress(&VMD0jesRelativeJEREC1up_);
  VMD1jesRelativeJEREC1up_branch = tree->GetBranch("VMD1jesRelativeJEREC1up");
  if (VMD1jesRelativeJEREC1up_branch) VMD1jesRelativeJEREC1up_branch->SetAddress(&VMD1jesRelativeJEREC1up_);
  VMD2jesRelativeJEREC1up_branch = tree->GetBranch("VMD2jesRelativeJEREC1up");
  if (VMD2jesRelativeJEREC1up_branch) VMD2jesRelativeJEREC1up_branch->SetAddress(&VMD2jesRelativeJEREC1up_);
  VMD3jesRelativeJEREC1up_branch = tree->GetBranch("VMD3jesRelativeJEREC1up");
  if (VMD3jesRelativeJEREC1up_branch) VMD3jesRelativeJEREC1up_branch->SetAddress(&VMD3jesRelativeJEREC1up_);
  VMD4jesRelativeJEREC1up_branch = tree->GetBranch("VMD4jesRelativeJEREC1up");
  if (VMD4jesRelativeJEREC1up_branch) VMD4jesRelativeJEREC1up_branch->SetAddress(&VMD4jesRelativeJEREC1up_);
  WMD0jesRelativeJEREC1up_branch = tree->GetBranch("WMD0jesRelativeJEREC1up");
  if (WMD0jesRelativeJEREC1up_branch) WMD0jesRelativeJEREC1up_branch->SetAddress(&WMD0jesRelativeJEREC1up_);
  WMD1jesRelativeJEREC1up_branch = tree->GetBranch("WMD1jesRelativeJEREC1up");
  if (WMD1jesRelativeJEREC1up_branch) WMD1jesRelativeJEREC1up_branch->SetAddress(&WMD1jesRelativeJEREC1up_);
  WMD2jesRelativeJEREC1up_branch = tree->GetBranch("WMD2jesRelativeJEREC1up");
  if (WMD2jesRelativeJEREC1up_branch) WMD2jesRelativeJEREC1up_branch->SetAddress(&WMD2jesRelativeJEREC1up_);
  WMD3jesRelativeJEREC1up_branch = tree->GetBranch("WMD3jesRelativeJEREC1up");
  if (WMD3jesRelativeJEREC1up_branch) WMD3jesRelativeJEREC1up_branch->SetAddress(&WMD3jesRelativeJEREC1up_);
  WMD4jesRelativeJEREC1up_branch = tree->GetBranch("WMD4jesRelativeJEREC1up");
  if (WMD4jesRelativeJEREC1up_branch) WMD4jesRelativeJEREC1up_branch->SetAddress(&WMD4jesRelativeJEREC1up_);
  NQGen0jesRelativeJEREC1up_branch = tree->GetBranch("NQGen0jesRelativeJEREC1up");
  if (NQGen0jesRelativeJEREC1up_branch) NQGen0jesRelativeJEREC1up_branch->SetAddress(&NQGen0jesRelativeJEREC1up_);
  NQGen1jesRelativeJEREC1up_branch = tree->GetBranch("NQGen1jesRelativeJEREC1up");
  if (NQGen1jesRelativeJEREC1up_branch) NQGen1jesRelativeJEREC1up_branch->SetAddress(&NQGen1jesRelativeJEREC1up_);
  NQGen2jesRelativeJEREC1up_branch = tree->GetBranch("NQGen2jesRelativeJEREC1up");
  if (NQGen2jesRelativeJEREC1up_branch) NQGen2jesRelativeJEREC1up_branch->SetAddress(&NQGen2jesRelativeJEREC1up_);
  NQGen3jesRelativeJEREC1up_branch = tree->GetBranch("NQGen3jesRelativeJEREC1up");
  if (NQGen3jesRelativeJEREC1up_branch) NQGen3jesRelativeJEREC1up_branch->SetAddress(&NQGen3jesRelativeJEREC1up_);
  NQGen4jesRelativeJEREC1up_branch = tree->GetBranch("NQGen4jesRelativeJEREC1up");
  if (NQGen4jesRelativeJEREC1up_branch) NQGen4jesRelativeJEREC1up_branch->SetAddress(&NQGen4jesRelativeJEREC1up_);
  NBGen0jesRelativeJEREC1up_branch = tree->GetBranch("NBGen0jesRelativeJEREC1up");
  if (NBGen0jesRelativeJEREC1up_branch) NBGen0jesRelativeJEREC1up_branch->SetAddress(&NBGen0jesRelativeJEREC1up_);
  NBGen1jesRelativeJEREC1up_branch = tree->GetBranch("NBGen1jesRelativeJEREC1up");
  if (NBGen1jesRelativeJEREC1up_branch) NBGen1jesRelativeJEREC1up_branch->SetAddress(&NBGen1jesRelativeJEREC1up_);
  NBGen2jesRelativeJEREC1up_branch = tree->GetBranch("NBGen2jesRelativeJEREC1up");
  if (NBGen2jesRelativeJEREC1up_branch) NBGen2jesRelativeJEREC1up_branch->SetAddress(&NBGen2jesRelativeJEREC1up_);
  NBGen3jesRelativeJEREC1up_branch = tree->GetBranch("NBGen3jesRelativeJEREC1up");
  if (NBGen3jesRelativeJEREC1up_branch) NBGen3jesRelativeJEREC1up_branch->SetAddress(&NBGen3jesRelativeJEREC1up_);
  NBGen4jesRelativeJEREC1up_branch = tree->GetBranch("NBGen4jesRelativeJEREC1up");
  if (NBGen4jesRelativeJEREC1up_branch) NBGen4jesRelativeJEREC1up_branch->SetAddress(&NBGen4jesRelativeJEREC1up_);
  NLGen0jesRelativeJEREC1up_branch = tree->GetBranch("NLGen0jesRelativeJEREC1up");
  if (NLGen0jesRelativeJEREC1up_branch) NLGen0jesRelativeJEREC1up_branch->SetAddress(&NLGen0jesRelativeJEREC1up_);
  NLGen1jesRelativeJEREC1up_branch = tree->GetBranch("NLGen1jesRelativeJEREC1up");
  if (NLGen1jesRelativeJEREC1up_branch) NLGen1jesRelativeJEREC1up_branch->SetAddress(&NLGen1jesRelativeJEREC1up_);
  NLGen2jesRelativeJEREC1up_branch = tree->GetBranch("NLGen2jesRelativeJEREC1up");
  if (NLGen2jesRelativeJEREC1up_branch) NLGen2jesRelativeJEREC1up_branch->SetAddress(&NLGen2jesRelativeJEREC1up_);
  NLGen3jesRelativeJEREC1up_branch = tree->GetBranch("NLGen3jesRelativeJEREC1up");
  if (NLGen3jesRelativeJEREC1up_branch) NLGen3jesRelativeJEREC1up_branch->SetAddress(&NLGen3jesRelativeJEREC1up_);
  NLGen4jesRelativeJEREC1up_branch = tree->GetBranch("NLGen4jesRelativeJEREC1up");
  if (NLGen4jesRelativeJEREC1up_branch) NLGen4jesRelativeJEREC1up_branch->SetAddress(&NLGen4jesRelativeJEREC1up_);
  NVQGen0jesRelativeJEREC1up_branch = tree->GetBranch("NVQGen0jesRelativeJEREC1up");
  if (NVQGen0jesRelativeJEREC1up_branch) NVQGen0jesRelativeJEREC1up_branch->SetAddress(&NVQGen0jesRelativeJEREC1up_);
  NVQGen1jesRelativeJEREC1up_branch = tree->GetBranch("NVQGen1jesRelativeJEREC1up");
  if (NVQGen1jesRelativeJEREC1up_branch) NVQGen1jesRelativeJEREC1up_branch->SetAddress(&NVQGen1jesRelativeJEREC1up_);
  NVQGen2jesRelativeJEREC1up_branch = tree->GetBranch("NVQGen2jesRelativeJEREC1up");
  if (NVQGen2jesRelativeJEREC1up_branch) NVQGen2jesRelativeJEREC1up_branch->SetAddress(&NVQGen2jesRelativeJEREC1up_);
  NVQGen3jesRelativeJEREC1up_branch = tree->GetBranch("NVQGen3jesRelativeJEREC1up");
  if (NVQGen3jesRelativeJEREC1up_branch) NVQGen3jesRelativeJEREC1up_branch->SetAddress(&NVQGen3jesRelativeJEREC1up_);
  NVQGen4jesRelativeJEREC1up_branch = tree->GetBranch("NVQGen4jesRelativeJEREC1up");
  if (NVQGen4jesRelativeJEREC1up_branch) NVQGen4jesRelativeJEREC1up_branch->SetAddress(&NVQGen4jesRelativeJEREC1up_);
  NiFJjesRelativeJEREC1up_branch = tree->GetBranch("NiFJjesRelativeJEREC1up");
  if (NiFJjesRelativeJEREC1up_branch) NiFJjesRelativeJEREC1up_branch->SetAddress(&NiFJjesRelativeJEREC1up_);
  iVMD0jesRelativeJEREC1up_branch = tree->GetBranch("iVMD0jesRelativeJEREC1up");
  if (iVMD0jesRelativeJEREC1up_branch) iVMD0jesRelativeJEREC1up_branch->SetAddress(&iVMD0jesRelativeJEREC1up_);
  iVMD1jesRelativeJEREC1up_branch = tree->GetBranch("iVMD1jesRelativeJEREC1up");
  if (iVMD1jesRelativeJEREC1up_branch) iVMD1jesRelativeJEREC1up_branch->SetAddress(&iVMD1jesRelativeJEREC1up_);
  iVMD2jesRelativeJEREC1up_branch = tree->GetBranch("iVMD2jesRelativeJEREC1up");
  if (iVMD2jesRelativeJEREC1up_branch) iVMD2jesRelativeJEREC1up_branch->SetAddress(&iVMD2jesRelativeJEREC1up_);
  iVMD3jesRelativeJEREC1up_branch = tree->GetBranch("iVMD3jesRelativeJEREC1up");
  if (iVMD3jesRelativeJEREC1up_branch) iVMD3jesRelativeJEREC1up_branch->SetAddress(&iVMD3jesRelativeJEREC1up_);
  iVMD4jesRelativeJEREC1up_branch = tree->GetBranch("iVMD4jesRelativeJEREC1up");
  if (iVMD4jesRelativeJEREC1up_branch) iVMD4jesRelativeJEREC1up_branch->SetAddress(&iVMD4jesRelativeJEREC1up_);
  iWMD0jesRelativeJEREC1up_branch = tree->GetBranch("iWMD0jesRelativeJEREC1up");
  if (iWMD0jesRelativeJEREC1up_branch) iWMD0jesRelativeJEREC1up_branch->SetAddress(&iWMD0jesRelativeJEREC1up_);
  iWMD1jesRelativeJEREC1up_branch = tree->GetBranch("iWMD1jesRelativeJEREC1up");
  if (iWMD1jesRelativeJEREC1up_branch) iWMD1jesRelativeJEREC1up_branch->SetAddress(&iWMD1jesRelativeJEREC1up_);
  iWMD2jesRelativeJEREC1up_branch = tree->GetBranch("iWMD2jesRelativeJEREC1up");
  if (iWMD2jesRelativeJEREC1up_branch) iWMD2jesRelativeJEREC1up_branch->SetAddress(&iWMD2jesRelativeJEREC1up_);
  iWMD3jesRelativeJEREC1up_branch = tree->GetBranch("iWMD3jesRelativeJEREC1up");
  if (iWMD3jesRelativeJEREC1up_branch) iWMD3jesRelativeJEREC1up_branch->SetAddress(&iWMD3jesRelativeJEREC1up_);
  iWMD4jesRelativeJEREC1up_branch = tree->GetBranch("iWMD4jesRelativeJEREC1up");
  if (iWMD4jesRelativeJEREC1up_branch) iWMD4jesRelativeJEREC1up_branch->SetAddress(&iWMD4jesRelativeJEREC1up_);
  NJjesRelativeJEREC1up_branch = tree->GetBranch("NJjesRelativeJEREC1up");
  if (NJjesRelativeJEREC1up_branch) NJjesRelativeJEREC1up_branch->SetAddress(&NJjesRelativeJEREC1up_);
  NbLoosejesRelativeJEREC1up_branch = tree->GetBranch("NbLoosejesRelativeJEREC1up");
  if (NbLoosejesRelativeJEREC1up_branch) NbLoosejesRelativeJEREC1up_branch->SetAddress(&NbLoosejesRelativeJEREC1up_);
  NbMediumjesRelativeJEREC1up_branch = tree->GetBranch("NbMediumjesRelativeJEREC1up");
  if (NbMediumjesRelativeJEREC1up_branch) NbMediumjesRelativeJEREC1up_branch->SetAddress(&NbMediumjesRelativeJEREC1up_);
  NbTightjesRelativeJEREC1up_branch = tree->GetBranch("NbTightjesRelativeJEREC1up");
  if (NbTightjesRelativeJEREC1up_branch) NbTightjesRelativeJEREC1up_branch->SetAddress(&NbTightjesRelativeJEREC1up_);
  NoORNbLoosejesRelativeJEREC1up_branch = tree->GetBranch("NoORNbLoosejesRelativeJEREC1up");
  if (NoORNbLoosejesRelativeJEREC1up_branch) NoORNbLoosejesRelativeJEREC1up_branch->SetAddress(&NoORNbLoosejesRelativeJEREC1up_);
  NoORNbMediumjesRelativeJEREC1up_branch = tree->GetBranch("NoORNbMediumjesRelativeJEREC1up");
  if (NoORNbMediumjesRelativeJEREC1up_branch) NoORNbMediumjesRelativeJEREC1up_branch->SetAddress(&NoORNbMediumjesRelativeJEREC1up_);
  NoORNbTightjesRelativeJEREC1up_branch = tree->GetBranch("NoORNbTightjesRelativeJEREC1up");
  if (NoORNbTightjesRelativeJEREC1up_branch) NoORNbTightjesRelativeJEREC1up_branch->SetAddress(&NoORNbTightjesRelativeJEREC1up_);
  NQJGenjesRelativeJEREC1up_branch = tree->GetBranch("NQJGenjesRelativeJEREC1up");
  if (NQJGenjesRelativeJEREC1up_branch) NQJGenjesRelativeJEREC1up_branch->SetAddress(&NQJGenjesRelativeJEREC1up_);
  NBJGenjesRelativeJEREC1up_branch = tree->GetBranch("NBJGenjesRelativeJEREC1up");
  if (NBJGenjesRelativeJEREC1up_branch) NBJGenjesRelativeJEREC1up_branch->SetAddress(&NBJGenjesRelativeJEREC1up_);
  NLJGenjesRelativeJEREC1up_branch = tree->GetBranch("NLJGenjesRelativeJEREC1up");
  if (NLJGenjesRelativeJEREC1up_branch) NLJGenjesRelativeJEREC1up_branch->SetAddress(&NLJGenjesRelativeJEREC1up_);
  MVVXjesRelativeJEREC1up_branch = tree->GetBranch("MVVXjesRelativeJEREC1up");
  if (MVVXjesRelativeJEREC1up_branch) MVVXjesRelativeJEREC1up_branch->SetAddress(&MVVXjesRelativeJEREC1up_);
  PtVVXjesRelativeJEREC1up_branch = tree->GetBranch("PtVVXjesRelativeJEREC1up");
  if (PtVVXjesRelativeJEREC1up_branch) PtVVXjesRelativeJEREC1up_branch->SetAddress(&PtVVXjesRelativeJEREC1up_);
  HTjesRelativeJEREC1up_branch = tree->GetBranch("HTjesRelativeJEREC1up");
  if (HTjesRelativeJEREC1up_branch) HTjesRelativeJEREC1up_branch->SetAddress(&HTjesRelativeJEREC1up_);
  HTJjesRelativeJEREC1up_branch = tree->GetBranch("HTJjesRelativeJEREC1up");
  if (HTJjesRelativeJEREC1up_branch) HTJjesRelativeJEREC1up_branch->SetAddress(&HTJjesRelativeJEREC1up_);
  HTFJjesRelativeJEREC1up_branch = tree->GetBranch("HTFJjesRelativeJEREC1up");
  if (HTFJjesRelativeJEREC1up_branch) HTFJjesRelativeJEREC1up_branch->SetAddress(&HTFJjesRelativeJEREC1up_);
  SumPtFJjesRelativeJEREC1up_branch = tree->GetBranch("SumPtFJjesRelativeJEREC1up");
  if (SumPtFJjesRelativeJEREC1up_branch) SumPtFJjesRelativeJEREC1up_branch->SetAddress(&SumPtFJjesRelativeJEREC1up_);
  SumPtJjesRelativeJEREC1up_branch = tree->GetBranch("SumPtJjesRelativeJEREC1up");
  if (SumPtJjesRelativeJEREC1up_branch) SumPtJjesRelativeJEREC1up_branch->SetAddress(&SumPtJjesRelativeJEREC1up_);
  NFJjesRelativeJEREC1dn_branch = tree->GetBranch("NFJjesRelativeJEREC1dn");
  if (NFJjesRelativeJEREC1dn_branch) NFJjesRelativeJEREC1dn_branch->SetAddress(&NFJjesRelativeJEREC1dn_);
  VMD0jesRelativeJEREC1dn_branch = tree->GetBranch("VMD0jesRelativeJEREC1dn");
  if (VMD0jesRelativeJEREC1dn_branch) VMD0jesRelativeJEREC1dn_branch->SetAddress(&VMD0jesRelativeJEREC1dn_);
  VMD1jesRelativeJEREC1dn_branch = tree->GetBranch("VMD1jesRelativeJEREC1dn");
  if (VMD1jesRelativeJEREC1dn_branch) VMD1jesRelativeJEREC1dn_branch->SetAddress(&VMD1jesRelativeJEREC1dn_);
  VMD2jesRelativeJEREC1dn_branch = tree->GetBranch("VMD2jesRelativeJEREC1dn");
  if (VMD2jesRelativeJEREC1dn_branch) VMD2jesRelativeJEREC1dn_branch->SetAddress(&VMD2jesRelativeJEREC1dn_);
  VMD3jesRelativeJEREC1dn_branch = tree->GetBranch("VMD3jesRelativeJEREC1dn");
  if (VMD3jesRelativeJEREC1dn_branch) VMD3jesRelativeJEREC1dn_branch->SetAddress(&VMD3jesRelativeJEREC1dn_);
  VMD4jesRelativeJEREC1dn_branch = tree->GetBranch("VMD4jesRelativeJEREC1dn");
  if (VMD4jesRelativeJEREC1dn_branch) VMD4jesRelativeJEREC1dn_branch->SetAddress(&VMD4jesRelativeJEREC1dn_);
  WMD0jesRelativeJEREC1dn_branch = tree->GetBranch("WMD0jesRelativeJEREC1dn");
  if (WMD0jesRelativeJEREC1dn_branch) WMD0jesRelativeJEREC1dn_branch->SetAddress(&WMD0jesRelativeJEREC1dn_);
  WMD1jesRelativeJEREC1dn_branch = tree->GetBranch("WMD1jesRelativeJEREC1dn");
  if (WMD1jesRelativeJEREC1dn_branch) WMD1jesRelativeJEREC1dn_branch->SetAddress(&WMD1jesRelativeJEREC1dn_);
  WMD2jesRelativeJEREC1dn_branch = tree->GetBranch("WMD2jesRelativeJEREC1dn");
  if (WMD2jesRelativeJEREC1dn_branch) WMD2jesRelativeJEREC1dn_branch->SetAddress(&WMD2jesRelativeJEREC1dn_);
  WMD3jesRelativeJEREC1dn_branch = tree->GetBranch("WMD3jesRelativeJEREC1dn");
  if (WMD3jesRelativeJEREC1dn_branch) WMD3jesRelativeJEREC1dn_branch->SetAddress(&WMD3jesRelativeJEREC1dn_);
  WMD4jesRelativeJEREC1dn_branch = tree->GetBranch("WMD4jesRelativeJEREC1dn");
  if (WMD4jesRelativeJEREC1dn_branch) WMD4jesRelativeJEREC1dn_branch->SetAddress(&WMD4jesRelativeJEREC1dn_);
  NQGen0jesRelativeJEREC1dn_branch = tree->GetBranch("NQGen0jesRelativeJEREC1dn");
  if (NQGen0jesRelativeJEREC1dn_branch) NQGen0jesRelativeJEREC1dn_branch->SetAddress(&NQGen0jesRelativeJEREC1dn_);
  NQGen1jesRelativeJEREC1dn_branch = tree->GetBranch("NQGen1jesRelativeJEREC1dn");
  if (NQGen1jesRelativeJEREC1dn_branch) NQGen1jesRelativeJEREC1dn_branch->SetAddress(&NQGen1jesRelativeJEREC1dn_);
  NQGen2jesRelativeJEREC1dn_branch = tree->GetBranch("NQGen2jesRelativeJEREC1dn");
  if (NQGen2jesRelativeJEREC1dn_branch) NQGen2jesRelativeJEREC1dn_branch->SetAddress(&NQGen2jesRelativeJEREC1dn_);
  NQGen3jesRelativeJEREC1dn_branch = tree->GetBranch("NQGen3jesRelativeJEREC1dn");
  if (NQGen3jesRelativeJEREC1dn_branch) NQGen3jesRelativeJEREC1dn_branch->SetAddress(&NQGen3jesRelativeJEREC1dn_);
  NQGen4jesRelativeJEREC1dn_branch = tree->GetBranch("NQGen4jesRelativeJEREC1dn");
  if (NQGen4jesRelativeJEREC1dn_branch) NQGen4jesRelativeJEREC1dn_branch->SetAddress(&NQGen4jesRelativeJEREC1dn_);
  NBGen0jesRelativeJEREC1dn_branch = tree->GetBranch("NBGen0jesRelativeJEREC1dn");
  if (NBGen0jesRelativeJEREC1dn_branch) NBGen0jesRelativeJEREC1dn_branch->SetAddress(&NBGen0jesRelativeJEREC1dn_);
  NBGen1jesRelativeJEREC1dn_branch = tree->GetBranch("NBGen1jesRelativeJEREC1dn");
  if (NBGen1jesRelativeJEREC1dn_branch) NBGen1jesRelativeJEREC1dn_branch->SetAddress(&NBGen1jesRelativeJEREC1dn_);
  NBGen2jesRelativeJEREC1dn_branch = tree->GetBranch("NBGen2jesRelativeJEREC1dn");
  if (NBGen2jesRelativeJEREC1dn_branch) NBGen2jesRelativeJEREC1dn_branch->SetAddress(&NBGen2jesRelativeJEREC1dn_);
  NBGen3jesRelativeJEREC1dn_branch = tree->GetBranch("NBGen3jesRelativeJEREC1dn");
  if (NBGen3jesRelativeJEREC1dn_branch) NBGen3jesRelativeJEREC1dn_branch->SetAddress(&NBGen3jesRelativeJEREC1dn_);
  NBGen4jesRelativeJEREC1dn_branch = tree->GetBranch("NBGen4jesRelativeJEREC1dn");
  if (NBGen4jesRelativeJEREC1dn_branch) NBGen4jesRelativeJEREC1dn_branch->SetAddress(&NBGen4jesRelativeJEREC1dn_);
  NLGen0jesRelativeJEREC1dn_branch = tree->GetBranch("NLGen0jesRelativeJEREC1dn");
  if (NLGen0jesRelativeJEREC1dn_branch) NLGen0jesRelativeJEREC1dn_branch->SetAddress(&NLGen0jesRelativeJEREC1dn_);
  NLGen1jesRelativeJEREC1dn_branch = tree->GetBranch("NLGen1jesRelativeJEREC1dn");
  if (NLGen1jesRelativeJEREC1dn_branch) NLGen1jesRelativeJEREC1dn_branch->SetAddress(&NLGen1jesRelativeJEREC1dn_);
  NLGen2jesRelativeJEREC1dn_branch = tree->GetBranch("NLGen2jesRelativeJEREC1dn");
  if (NLGen2jesRelativeJEREC1dn_branch) NLGen2jesRelativeJEREC1dn_branch->SetAddress(&NLGen2jesRelativeJEREC1dn_);
  NLGen3jesRelativeJEREC1dn_branch = tree->GetBranch("NLGen3jesRelativeJEREC1dn");
  if (NLGen3jesRelativeJEREC1dn_branch) NLGen3jesRelativeJEREC1dn_branch->SetAddress(&NLGen3jesRelativeJEREC1dn_);
  NLGen4jesRelativeJEREC1dn_branch = tree->GetBranch("NLGen4jesRelativeJEREC1dn");
  if (NLGen4jesRelativeJEREC1dn_branch) NLGen4jesRelativeJEREC1dn_branch->SetAddress(&NLGen4jesRelativeJEREC1dn_);
  NVQGen0jesRelativeJEREC1dn_branch = tree->GetBranch("NVQGen0jesRelativeJEREC1dn");
  if (NVQGen0jesRelativeJEREC1dn_branch) NVQGen0jesRelativeJEREC1dn_branch->SetAddress(&NVQGen0jesRelativeJEREC1dn_);
  NVQGen1jesRelativeJEREC1dn_branch = tree->GetBranch("NVQGen1jesRelativeJEREC1dn");
  if (NVQGen1jesRelativeJEREC1dn_branch) NVQGen1jesRelativeJEREC1dn_branch->SetAddress(&NVQGen1jesRelativeJEREC1dn_);
  NVQGen2jesRelativeJEREC1dn_branch = tree->GetBranch("NVQGen2jesRelativeJEREC1dn");
  if (NVQGen2jesRelativeJEREC1dn_branch) NVQGen2jesRelativeJEREC1dn_branch->SetAddress(&NVQGen2jesRelativeJEREC1dn_);
  NVQGen3jesRelativeJEREC1dn_branch = tree->GetBranch("NVQGen3jesRelativeJEREC1dn");
  if (NVQGen3jesRelativeJEREC1dn_branch) NVQGen3jesRelativeJEREC1dn_branch->SetAddress(&NVQGen3jesRelativeJEREC1dn_);
  NVQGen4jesRelativeJEREC1dn_branch = tree->GetBranch("NVQGen4jesRelativeJEREC1dn");
  if (NVQGen4jesRelativeJEREC1dn_branch) NVQGen4jesRelativeJEREC1dn_branch->SetAddress(&NVQGen4jesRelativeJEREC1dn_);
  NiFJjesRelativeJEREC1dn_branch = tree->GetBranch("NiFJjesRelativeJEREC1dn");
  if (NiFJjesRelativeJEREC1dn_branch) NiFJjesRelativeJEREC1dn_branch->SetAddress(&NiFJjesRelativeJEREC1dn_);
  iVMD0jesRelativeJEREC1dn_branch = tree->GetBranch("iVMD0jesRelativeJEREC1dn");
  if (iVMD0jesRelativeJEREC1dn_branch) iVMD0jesRelativeJEREC1dn_branch->SetAddress(&iVMD0jesRelativeJEREC1dn_);
  iVMD1jesRelativeJEREC1dn_branch = tree->GetBranch("iVMD1jesRelativeJEREC1dn");
  if (iVMD1jesRelativeJEREC1dn_branch) iVMD1jesRelativeJEREC1dn_branch->SetAddress(&iVMD1jesRelativeJEREC1dn_);
  iVMD2jesRelativeJEREC1dn_branch = tree->GetBranch("iVMD2jesRelativeJEREC1dn");
  if (iVMD2jesRelativeJEREC1dn_branch) iVMD2jesRelativeJEREC1dn_branch->SetAddress(&iVMD2jesRelativeJEREC1dn_);
  iVMD3jesRelativeJEREC1dn_branch = tree->GetBranch("iVMD3jesRelativeJEREC1dn");
  if (iVMD3jesRelativeJEREC1dn_branch) iVMD3jesRelativeJEREC1dn_branch->SetAddress(&iVMD3jesRelativeJEREC1dn_);
  iVMD4jesRelativeJEREC1dn_branch = tree->GetBranch("iVMD4jesRelativeJEREC1dn");
  if (iVMD4jesRelativeJEREC1dn_branch) iVMD4jesRelativeJEREC1dn_branch->SetAddress(&iVMD4jesRelativeJEREC1dn_);
  iWMD0jesRelativeJEREC1dn_branch = tree->GetBranch("iWMD0jesRelativeJEREC1dn");
  if (iWMD0jesRelativeJEREC1dn_branch) iWMD0jesRelativeJEREC1dn_branch->SetAddress(&iWMD0jesRelativeJEREC1dn_);
  iWMD1jesRelativeJEREC1dn_branch = tree->GetBranch("iWMD1jesRelativeJEREC1dn");
  if (iWMD1jesRelativeJEREC1dn_branch) iWMD1jesRelativeJEREC1dn_branch->SetAddress(&iWMD1jesRelativeJEREC1dn_);
  iWMD2jesRelativeJEREC1dn_branch = tree->GetBranch("iWMD2jesRelativeJEREC1dn");
  if (iWMD2jesRelativeJEREC1dn_branch) iWMD2jesRelativeJEREC1dn_branch->SetAddress(&iWMD2jesRelativeJEREC1dn_);
  iWMD3jesRelativeJEREC1dn_branch = tree->GetBranch("iWMD3jesRelativeJEREC1dn");
  if (iWMD3jesRelativeJEREC1dn_branch) iWMD3jesRelativeJEREC1dn_branch->SetAddress(&iWMD3jesRelativeJEREC1dn_);
  iWMD4jesRelativeJEREC1dn_branch = tree->GetBranch("iWMD4jesRelativeJEREC1dn");
  if (iWMD4jesRelativeJEREC1dn_branch) iWMD4jesRelativeJEREC1dn_branch->SetAddress(&iWMD4jesRelativeJEREC1dn_);
  NJjesRelativeJEREC1dn_branch = tree->GetBranch("NJjesRelativeJEREC1dn");
  if (NJjesRelativeJEREC1dn_branch) NJjesRelativeJEREC1dn_branch->SetAddress(&NJjesRelativeJEREC1dn_);
  NbLoosejesRelativeJEREC1dn_branch = tree->GetBranch("NbLoosejesRelativeJEREC1dn");
  if (NbLoosejesRelativeJEREC1dn_branch) NbLoosejesRelativeJEREC1dn_branch->SetAddress(&NbLoosejesRelativeJEREC1dn_);
  NbMediumjesRelativeJEREC1dn_branch = tree->GetBranch("NbMediumjesRelativeJEREC1dn");
  if (NbMediumjesRelativeJEREC1dn_branch) NbMediumjesRelativeJEREC1dn_branch->SetAddress(&NbMediumjesRelativeJEREC1dn_);
  NbTightjesRelativeJEREC1dn_branch = tree->GetBranch("NbTightjesRelativeJEREC1dn");
  if (NbTightjesRelativeJEREC1dn_branch) NbTightjesRelativeJEREC1dn_branch->SetAddress(&NbTightjesRelativeJEREC1dn_);
  NoORNbLoosejesRelativeJEREC1dn_branch = tree->GetBranch("NoORNbLoosejesRelativeJEREC1dn");
  if (NoORNbLoosejesRelativeJEREC1dn_branch) NoORNbLoosejesRelativeJEREC1dn_branch->SetAddress(&NoORNbLoosejesRelativeJEREC1dn_);
  NoORNbMediumjesRelativeJEREC1dn_branch = tree->GetBranch("NoORNbMediumjesRelativeJEREC1dn");
  if (NoORNbMediumjesRelativeJEREC1dn_branch) NoORNbMediumjesRelativeJEREC1dn_branch->SetAddress(&NoORNbMediumjesRelativeJEREC1dn_);
  NoORNbTightjesRelativeJEREC1dn_branch = tree->GetBranch("NoORNbTightjesRelativeJEREC1dn");
  if (NoORNbTightjesRelativeJEREC1dn_branch) NoORNbTightjesRelativeJEREC1dn_branch->SetAddress(&NoORNbTightjesRelativeJEREC1dn_);
  NQJGenjesRelativeJEREC1dn_branch = tree->GetBranch("NQJGenjesRelativeJEREC1dn");
  if (NQJGenjesRelativeJEREC1dn_branch) NQJGenjesRelativeJEREC1dn_branch->SetAddress(&NQJGenjesRelativeJEREC1dn_);
  NBJGenjesRelativeJEREC1dn_branch = tree->GetBranch("NBJGenjesRelativeJEREC1dn");
  if (NBJGenjesRelativeJEREC1dn_branch) NBJGenjesRelativeJEREC1dn_branch->SetAddress(&NBJGenjesRelativeJEREC1dn_);
  NLJGenjesRelativeJEREC1dn_branch = tree->GetBranch("NLJGenjesRelativeJEREC1dn");
  if (NLJGenjesRelativeJEREC1dn_branch) NLJGenjesRelativeJEREC1dn_branch->SetAddress(&NLJGenjesRelativeJEREC1dn_);
  MVVXjesRelativeJEREC1dn_branch = tree->GetBranch("MVVXjesRelativeJEREC1dn");
  if (MVVXjesRelativeJEREC1dn_branch) MVVXjesRelativeJEREC1dn_branch->SetAddress(&MVVXjesRelativeJEREC1dn_);
  PtVVXjesRelativeJEREC1dn_branch = tree->GetBranch("PtVVXjesRelativeJEREC1dn");
  if (PtVVXjesRelativeJEREC1dn_branch) PtVVXjesRelativeJEREC1dn_branch->SetAddress(&PtVVXjesRelativeJEREC1dn_);
  HTjesRelativeJEREC1dn_branch = tree->GetBranch("HTjesRelativeJEREC1dn");
  if (HTjesRelativeJEREC1dn_branch) HTjesRelativeJEREC1dn_branch->SetAddress(&HTjesRelativeJEREC1dn_);
  HTJjesRelativeJEREC1dn_branch = tree->GetBranch("HTJjesRelativeJEREC1dn");
  if (HTJjesRelativeJEREC1dn_branch) HTJjesRelativeJEREC1dn_branch->SetAddress(&HTJjesRelativeJEREC1dn_);
  HTFJjesRelativeJEREC1dn_branch = tree->GetBranch("HTFJjesRelativeJEREC1dn");
  if (HTFJjesRelativeJEREC1dn_branch) HTFJjesRelativeJEREC1dn_branch->SetAddress(&HTFJjesRelativeJEREC1dn_);
  SumPtFJjesRelativeJEREC1dn_branch = tree->GetBranch("SumPtFJjesRelativeJEREC1dn");
  if (SumPtFJjesRelativeJEREC1dn_branch) SumPtFJjesRelativeJEREC1dn_branch->SetAddress(&SumPtFJjesRelativeJEREC1dn_);
  SumPtJjesRelativeJEREC1dn_branch = tree->GetBranch("SumPtJjesRelativeJEREC1dn");
  if (SumPtJjesRelativeJEREC1dn_branch) SumPtJjesRelativeJEREC1dn_branch->SetAddress(&SumPtJjesRelativeJEREC1dn_);
  NFJjesRelativeJEREC2up_branch = tree->GetBranch("NFJjesRelativeJEREC2up");
  if (NFJjesRelativeJEREC2up_branch) NFJjesRelativeJEREC2up_branch->SetAddress(&NFJjesRelativeJEREC2up_);
  VMD0jesRelativeJEREC2up_branch = tree->GetBranch("VMD0jesRelativeJEREC2up");
  if (VMD0jesRelativeJEREC2up_branch) VMD0jesRelativeJEREC2up_branch->SetAddress(&VMD0jesRelativeJEREC2up_);
  VMD1jesRelativeJEREC2up_branch = tree->GetBranch("VMD1jesRelativeJEREC2up");
  if (VMD1jesRelativeJEREC2up_branch) VMD1jesRelativeJEREC2up_branch->SetAddress(&VMD1jesRelativeJEREC2up_);
  VMD2jesRelativeJEREC2up_branch = tree->GetBranch("VMD2jesRelativeJEREC2up");
  if (VMD2jesRelativeJEREC2up_branch) VMD2jesRelativeJEREC2up_branch->SetAddress(&VMD2jesRelativeJEREC2up_);
  VMD3jesRelativeJEREC2up_branch = tree->GetBranch("VMD3jesRelativeJEREC2up");
  if (VMD3jesRelativeJEREC2up_branch) VMD3jesRelativeJEREC2up_branch->SetAddress(&VMD3jesRelativeJEREC2up_);
  VMD4jesRelativeJEREC2up_branch = tree->GetBranch("VMD4jesRelativeJEREC2up");
  if (VMD4jesRelativeJEREC2up_branch) VMD4jesRelativeJEREC2up_branch->SetAddress(&VMD4jesRelativeJEREC2up_);
  WMD0jesRelativeJEREC2up_branch = tree->GetBranch("WMD0jesRelativeJEREC2up");
  if (WMD0jesRelativeJEREC2up_branch) WMD0jesRelativeJEREC2up_branch->SetAddress(&WMD0jesRelativeJEREC2up_);
  WMD1jesRelativeJEREC2up_branch = tree->GetBranch("WMD1jesRelativeJEREC2up");
  if (WMD1jesRelativeJEREC2up_branch) WMD1jesRelativeJEREC2up_branch->SetAddress(&WMD1jesRelativeJEREC2up_);
  WMD2jesRelativeJEREC2up_branch = tree->GetBranch("WMD2jesRelativeJEREC2up");
  if (WMD2jesRelativeJEREC2up_branch) WMD2jesRelativeJEREC2up_branch->SetAddress(&WMD2jesRelativeJEREC2up_);
  WMD3jesRelativeJEREC2up_branch = tree->GetBranch("WMD3jesRelativeJEREC2up");
  if (WMD3jesRelativeJEREC2up_branch) WMD3jesRelativeJEREC2up_branch->SetAddress(&WMD3jesRelativeJEREC2up_);
  WMD4jesRelativeJEREC2up_branch = tree->GetBranch("WMD4jesRelativeJEREC2up");
  if (WMD4jesRelativeJEREC2up_branch) WMD4jesRelativeJEREC2up_branch->SetAddress(&WMD4jesRelativeJEREC2up_);
  NQGen0jesRelativeJEREC2up_branch = tree->GetBranch("NQGen0jesRelativeJEREC2up");
  if (NQGen0jesRelativeJEREC2up_branch) NQGen0jesRelativeJEREC2up_branch->SetAddress(&NQGen0jesRelativeJEREC2up_);
  NQGen1jesRelativeJEREC2up_branch = tree->GetBranch("NQGen1jesRelativeJEREC2up");
  if (NQGen1jesRelativeJEREC2up_branch) NQGen1jesRelativeJEREC2up_branch->SetAddress(&NQGen1jesRelativeJEREC2up_);
  NQGen2jesRelativeJEREC2up_branch = tree->GetBranch("NQGen2jesRelativeJEREC2up");
  if (NQGen2jesRelativeJEREC2up_branch) NQGen2jesRelativeJEREC2up_branch->SetAddress(&NQGen2jesRelativeJEREC2up_);
  NQGen3jesRelativeJEREC2up_branch = tree->GetBranch("NQGen3jesRelativeJEREC2up");
  if (NQGen3jesRelativeJEREC2up_branch) NQGen3jesRelativeJEREC2up_branch->SetAddress(&NQGen3jesRelativeJEREC2up_);
  NQGen4jesRelativeJEREC2up_branch = tree->GetBranch("NQGen4jesRelativeJEREC2up");
  if (NQGen4jesRelativeJEREC2up_branch) NQGen4jesRelativeJEREC2up_branch->SetAddress(&NQGen4jesRelativeJEREC2up_);
  NBGen0jesRelativeJEREC2up_branch = tree->GetBranch("NBGen0jesRelativeJEREC2up");
  if (NBGen0jesRelativeJEREC2up_branch) NBGen0jesRelativeJEREC2up_branch->SetAddress(&NBGen0jesRelativeJEREC2up_);
  NBGen1jesRelativeJEREC2up_branch = tree->GetBranch("NBGen1jesRelativeJEREC2up");
  if (NBGen1jesRelativeJEREC2up_branch) NBGen1jesRelativeJEREC2up_branch->SetAddress(&NBGen1jesRelativeJEREC2up_);
  NBGen2jesRelativeJEREC2up_branch = tree->GetBranch("NBGen2jesRelativeJEREC2up");
  if (NBGen2jesRelativeJEREC2up_branch) NBGen2jesRelativeJEREC2up_branch->SetAddress(&NBGen2jesRelativeJEREC2up_);
  NBGen3jesRelativeJEREC2up_branch = tree->GetBranch("NBGen3jesRelativeJEREC2up");
  if (NBGen3jesRelativeJEREC2up_branch) NBGen3jesRelativeJEREC2up_branch->SetAddress(&NBGen3jesRelativeJEREC2up_);
  NBGen4jesRelativeJEREC2up_branch = tree->GetBranch("NBGen4jesRelativeJEREC2up");
  if (NBGen4jesRelativeJEREC2up_branch) NBGen4jesRelativeJEREC2up_branch->SetAddress(&NBGen4jesRelativeJEREC2up_);
  NLGen0jesRelativeJEREC2up_branch = tree->GetBranch("NLGen0jesRelativeJEREC2up");
  if (NLGen0jesRelativeJEREC2up_branch) NLGen0jesRelativeJEREC2up_branch->SetAddress(&NLGen0jesRelativeJEREC2up_);
  NLGen1jesRelativeJEREC2up_branch = tree->GetBranch("NLGen1jesRelativeJEREC2up");
  if (NLGen1jesRelativeJEREC2up_branch) NLGen1jesRelativeJEREC2up_branch->SetAddress(&NLGen1jesRelativeJEREC2up_);
  NLGen2jesRelativeJEREC2up_branch = tree->GetBranch("NLGen2jesRelativeJEREC2up");
  if (NLGen2jesRelativeJEREC2up_branch) NLGen2jesRelativeJEREC2up_branch->SetAddress(&NLGen2jesRelativeJEREC2up_);
  NLGen3jesRelativeJEREC2up_branch = tree->GetBranch("NLGen3jesRelativeJEREC2up");
  if (NLGen3jesRelativeJEREC2up_branch) NLGen3jesRelativeJEREC2up_branch->SetAddress(&NLGen3jesRelativeJEREC2up_);
  NLGen4jesRelativeJEREC2up_branch = tree->GetBranch("NLGen4jesRelativeJEREC2up");
  if (NLGen4jesRelativeJEREC2up_branch) NLGen4jesRelativeJEREC2up_branch->SetAddress(&NLGen4jesRelativeJEREC2up_);
  NVQGen0jesRelativeJEREC2up_branch = tree->GetBranch("NVQGen0jesRelativeJEREC2up");
  if (NVQGen0jesRelativeJEREC2up_branch) NVQGen0jesRelativeJEREC2up_branch->SetAddress(&NVQGen0jesRelativeJEREC2up_);
  NVQGen1jesRelativeJEREC2up_branch = tree->GetBranch("NVQGen1jesRelativeJEREC2up");
  if (NVQGen1jesRelativeJEREC2up_branch) NVQGen1jesRelativeJEREC2up_branch->SetAddress(&NVQGen1jesRelativeJEREC2up_);
  NVQGen2jesRelativeJEREC2up_branch = tree->GetBranch("NVQGen2jesRelativeJEREC2up");
  if (NVQGen2jesRelativeJEREC2up_branch) NVQGen2jesRelativeJEREC2up_branch->SetAddress(&NVQGen2jesRelativeJEREC2up_);
  NVQGen3jesRelativeJEREC2up_branch = tree->GetBranch("NVQGen3jesRelativeJEREC2up");
  if (NVQGen3jesRelativeJEREC2up_branch) NVQGen3jesRelativeJEREC2up_branch->SetAddress(&NVQGen3jesRelativeJEREC2up_);
  NVQGen4jesRelativeJEREC2up_branch = tree->GetBranch("NVQGen4jesRelativeJEREC2up");
  if (NVQGen4jesRelativeJEREC2up_branch) NVQGen4jesRelativeJEREC2up_branch->SetAddress(&NVQGen4jesRelativeJEREC2up_);
  NiFJjesRelativeJEREC2up_branch = tree->GetBranch("NiFJjesRelativeJEREC2up");
  if (NiFJjesRelativeJEREC2up_branch) NiFJjesRelativeJEREC2up_branch->SetAddress(&NiFJjesRelativeJEREC2up_);
  iVMD0jesRelativeJEREC2up_branch = tree->GetBranch("iVMD0jesRelativeJEREC2up");
  if (iVMD0jesRelativeJEREC2up_branch) iVMD0jesRelativeJEREC2up_branch->SetAddress(&iVMD0jesRelativeJEREC2up_);
  iVMD1jesRelativeJEREC2up_branch = tree->GetBranch("iVMD1jesRelativeJEREC2up");
  if (iVMD1jesRelativeJEREC2up_branch) iVMD1jesRelativeJEREC2up_branch->SetAddress(&iVMD1jesRelativeJEREC2up_);
  iVMD2jesRelativeJEREC2up_branch = tree->GetBranch("iVMD2jesRelativeJEREC2up");
  if (iVMD2jesRelativeJEREC2up_branch) iVMD2jesRelativeJEREC2up_branch->SetAddress(&iVMD2jesRelativeJEREC2up_);
  iVMD3jesRelativeJEREC2up_branch = tree->GetBranch("iVMD3jesRelativeJEREC2up");
  if (iVMD3jesRelativeJEREC2up_branch) iVMD3jesRelativeJEREC2up_branch->SetAddress(&iVMD3jesRelativeJEREC2up_);
  iVMD4jesRelativeJEREC2up_branch = tree->GetBranch("iVMD4jesRelativeJEREC2up");
  if (iVMD4jesRelativeJEREC2up_branch) iVMD4jesRelativeJEREC2up_branch->SetAddress(&iVMD4jesRelativeJEREC2up_);
  iWMD0jesRelativeJEREC2up_branch = tree->GetBranch("iWMD0jesRelativeJEREC2up");
  if (iWMD0jesRelativeJEREC2up_branch) iWMD0jesRelativeJEREC2up_branch->SetAddress(&iWMD0jesRelativeJEREC2up_);
  iWMD1jesRelativeJEREC2up_branch = tree->GetBranch("iWMD1jesRelativeJEREC2up");
  if (iWMD1jesRelativeJEREC2up_branch) iWMD1jesRelativeJEREC2up_branch->SetAddress(&iWMD1jesRelativeJEREC2up_);
  iWMD2jesRelativeJEREC2up_branch = tree->GetBranch("iWMD2jesRelativeJEREC2up");
  if (iWMD2jesRelativeJEREC2up_branch) iWMD2jesRelativeJEREC2up_branch->SetAddress(&iWMD2jesRelativeJEREC2up_);
  iWMD3jesRelativeJEREC2up_branch = tree->GetBranch("iWMD3jesRelativeJEREC2up");
  if (iWMD3jesRelativeJEREC2up_branch) iWMD3jesRelativeJEREC2up_branch->SetAddress(&iWMD3jesRelativeJEREC2up_);
  iWMD4jesRelativeJEREC2up_branch = tree->GetBranch("iWMD4jesRelativeJEREC2up");
  if (iWMD4jesRelativeJEREC2up_branch) iWMD4jesRelativeJEREC2up_branch->SetAddress(&iWMD4jesRelativeJEREC2up_);
  NJjesRelativeJEREC2up_branch = tree->GetBranch("NJjesRelativeJEREC2up");
  if (NJjesRelativeJEREC2up_branch) NJjesRelativeJEREC2up_branch->SetAddress(&NJjesRelativeJEREC2up_);
  NbLoosejesRelativeJEREC2up_branch = tree->GetBranch("NbLoosejesRelativeJEREC2up");
  if (NbLoosejesRelativeJEREC2up_branch) NbLoosejesRelativeJEREC2up_branch->SetAddress(&NbLoosejesRelativeJEREC2up_);
  NbMediumjesRelativeJEREC2up_branch = tree->GetBranch("NbMediumjesRelativeJEREC2up");
  if (NbMediumjesRelativeJEREC2up_branch) NbMediumjesRelativeJEREC2up_branch->SetAddress(&NbMediumjesRelativeJEREC2up_);
  NbTightjesRelativeJEREC2up_branch = tree->GetBranch("NbTightjesRelativeJEREC2up");
  if (NbTightjesRelativeJEREC2up_branch) NbTightjesRelativeJEREC2up_branch->SetAddress(&NbTightjesRelativeJEREC2up_);
  NoORNbLoosejesRelativeJEREC2up_branch = tree->GetBranch("NoORNbLoosejesRelativeJEREC2up");
  if (NoORNbLoosejesRelativeJEREC2up_branch) NoORNbLoosejesRelativeJEREC2up_branch->SetAddress(&NoORNbLoosejesRelativeJEREC2up_);
  NoORNbMediumjesRelativeJEREC2up_branch = tree->GetBranch("NoORNbMediumjesRelativeJEREC2up");
  if (NoORNbMediumjesRelativeJEREC2up_branch) NoORNbMediumjesRelativeJEREC2up_branch->SetAddress(&NoORNbMediumjesRelativeJEREC2up_);
  NoORNbTightjesRelativeJEREC2up_branch = tree->GetBranch("NoORNbTightjesRelativeJEREC2up");
  if (NoORNbTightjesRelativeJEREC2up_branch) NoORNbTightjesRelativeJEREC2up_branch->SetAddress(&NoORNbTightjesRelativeJEREC2up_);
  NQJGenjesRelativeJEREC2up_branch = tree->GetBranch("NQJGenjesRelativeJEREC2up");
  if (NQJGenjesRelativeJEREC2up_branch) NQJGenjesRelativeJEREC2up_branch->SetAddress(&NQJGenjesRelativeJEREC2up_);
  NBJGenjesRelativeJEREC2up_branch = tree->GetBranch("NBJGenjesRelativeJEREC2up");
  if (NBJGenjesRelativeJEREC2up_branch) NBJGenjesRelativeJEREC2up_branch->SetAddress(&NBJGenjesRelativeJEREC2up_);
  NLJGenjesRelativeJEREC2up_branch = tree->GetBranch("NLJGenjesRelativeJEREC2up");
  if (NLJGenjesRelativeJEREC2up_branch) NLJGenjesRelativeJEREC2up_branch->SetAddress(&NLJGenjesRelativeJEREC2up_);
  MVVXjesRelativeJEREC2up_branch = tree->GetBranch("MVVXjesRelativeJEREC2up");
  if (MVVXjesRelativeJEREC2up_branch) MVVXjesRelativeJEREC2up_branch->SetAddress(&MVVXjesRelativeJEREC2up_);
  PtVVXjesRelativeJEREC2up_branch = tree->GetBranch("PtVVXjesRelativeJEREC2up");
  if (PtVVXjesRelativeJEREC2up_branch) PtVVXjesRelativeJEREC2up_branch->SetAddress(&PtVVXjesRelativeJEREC2up_);
  HTjesRelativeJEREC2up_branch = tree->GetBranch("HTjesRelativeJEREC2up");
  if (HTjesRelativeJEREC2up_branch) HTjesRelativeJEREC2up_branch->SetAddress(&HTjesRelativeJEREC2up_);
  HTJjesRelativeJEREC2up_branch = tree->GetBranch("HTJjesRelativeJEREC2up");
  if (HTJjesRelativeJEREC2up_branch) HTJjesRelativeJEREC2up_branch->SetAddress(&HTJjesRelativeJEREC2up_);
  HTFJjesRelativeJEREC2up_branch = tree->GetBranch("HTFJjesRelativeJEREC2up");
  if (HTFJjesRelativeJEREC2up_branch) HTFJjesRelativeJEREC2up_branch->SetAddress(&HTFJjesRelativeJEREC2up_);
  SumPtFJjesRelativeJEREC2up_branch = tree->GetBranch("SumPtFJjesRelativeJEREC2up");
  if (SumPtFJjesRelativeJEREC2up_branch) SumPtFJjesRelativeJEREC2up_branch->SetAddress(&SumPtFJjesRelativeJEREC2up_);
  SumPtJjesRelativeJEREC2up_branch = tree->GetBranch("SumPtJjesRelativeJEREC2up");
  if (SumPtJjesRelativeJEREC2up_branch) SumPtJjesRelativeJEREC2up_branch->SetAddress(&SumPtJjesRelativeJEREC2up_);
  NFJjesRelativeJEREC2dn_branch = tree->GetBranch("NFJjesRelativeJEREC2dn");
  if (NFJjesRelativeJEREC2dn_branch) NFJjesRelativeJEREC2dn_branch->SetAddress(&NFJjesRelativeJEREC2dn_);
  VMD0jesRelativeJEREC2dn_branch = tree->GetBranch("VMD0jesRelativeJEREC2dn");
  if (VMD0jesRelativeJEREC2dn_branch) VMD0jesRelativeJEREC2dn_branch->SetAddress(&VMD0jesRelativeJEREC2dn_);
  VMD1jesRelativeJEREC2dn_branch = tree->GetBranch("VMD1jesRelativeJEREC2dn");
  if (VMD1jesRelativeJEREC2dn_branch) VMD1jesRelativeJEREC2dn_branch->SetAddress(&VMD1jesRelativeJEREC2dn_);
  VMD2jesRelativeJEREC2dn_branch = tree->GetBranch("VMD2jesRelativeJEREC2dn");
  if (VMD2jesRelativeJEREC2dn_branch) VMD2jesRelativeJEREC2dn_branch->SetAddress(&VMD2jesRelativeJEREC2dn_);
  VMD3jesRelativeJEREC2dn_branch = tree->GetBranch("VMD3jesRelativeJEREC2dn");
  if (VMD3jesRelativeJEREC2dn_branch) VMD3jesRelativeJEREC2dn_branch->SetAddress(&VMD3jesRelativeJEREC2dn_);
  VMD4jesRelativeJEREC2dn_branch = tree->GetBranch("VMD4jesRelativeJEREC2dn");
  if (VMD4jesRelativeJEREC2dn_branch) VMD4jesRelativeJEREC2dn_branch->SetAddress(&VMD4jesRelativeJEREC2dn_);
  WMD0jesRelativeJEREC2dn_branch = tree->GetBranch("WMD0jesRelativeJEREC2dn");
  if (WMD0jesRelativeJEREC2dn_branch) WMD0jesRelativeJEREC2dn_branch->SetAddress(&WMD0jesRelativeJEREC2dn_);
  WMD1jesRelativeJEREC2dn_branch = tree->GetBranch("WMD1jesRelativeJEREC2dn");
  if (WMD1jesRelativeJEREC2dn_branch) WMD1jesRelativeJEREC2dn_branch->SetAddress(&WMD1jesRelativeJEREC2dn_);
  WMD2jesRelativeJEREC2dn_branch = tree->GetBranch("WMD2jesRelativeJEREC2dn");
  if (WMD2jesRelativeJEREC2dn_branch) WMD2jesRelativeJEREC2dn_branch->SetAddress(&WMD2jesRelativeJEREC2dn_);
  WMD3jesRelativeJEREC2dn_branch = tree->GetBranch("WMD3jesRelativeJEREC2dn");
  if (WMD3jesRelativeJEREC2dn_branch) WMD3jesRelativeJEREC2dn_branch->SetAddress(&WMD3jesRelativeJEREC2dn_);
  WMD4jesRelativeJEREC2dn_branch = tree->GetBranch("WMD4jesRelativeJEREC2dn");
  if (WMD4jesRelativeJEREC2dn_branch) WMD4jesRelativeJEREC2dn_branch->SetAddress(&WMD4jesRelativeJEREC2dn_);
  NQGen0jesRelativeJEREC2dn_branch = tree->GetBranch("NQGen0jesRelativeJEREC2dn");
  if (NQGen0jesRelativeJEREC2dn_branch) NQGen0jesRelativeJEREC2dn_branch->SetAddress(&NQGen0jesRelativeJEREC2dn_);
  NQGen1jesRelativeJEREC2dn_branch = tree->GetBranch("NQGen1jesRelativeJEREC2dn");
  if (NQGen1jesRelativeJEREC2dn_branch) NQGen1jesRelativeJEREC2dn_branch->SetAddress(&NQGen1jesRelativeJEREC2dn_);
  NQGen2jesRelativeJEREC2dn_branch = tree->GetBranch("NQGen2jesRelativeJEREC2dn");
  if (NQGen2jesRelativeJEREC2dn_branch) NQGen2jesRelativeJEREC2dn_branch->SetAddress(&NQGen2jesRelativeJEREC2dn_);
  NQGen3jesRelativeJEREC2dn_branch = tree->GetBranch("NQGen3jesRelativeJEREC2dn");
  if (NQGen3jesRelativeJEREC2dn_branch) NQGen3jesRelativeJEREC2dn_branch->SetAddress(&NQGen3jesRelativeJEREC2dn_);
  NQGen4jesRelativeJEREC2dn_branch = tree->GetBranch("NQGen4jesRelativeJEREC2dn");
  if (NQGen4jesRelativeJEREC2dn_branch) NQGen4jesRelativeJEREC2dn_branch->SetAddress(&NQGen4jesRelativeJEREC2dn_);
  NBGen0jesRelativeJEREC2dn_branch = tree->GetBranch("NBGen0jesRelativeJEREC2dn");
  if (NBGen0jesRelativeJEREC2dn_branch) NBGen0jesRelativeJEREC2dn_branch->SetAddress(&NBGen0jesRelativeJEREC2dn_);
  NBGen1jesRelativeJEREC2dn_branch = tree->GetBranch("NBGen1jesRelativeJEREC2dn");
  if (NBGen1jesRelativeJEREC2dn_branch) NBGen1jesRelativeJEREC2dn_branch->SetAddress(&NBGen1jesRelativeJEREC2dn_);
  NBGen2jesRelativeJEREC2dn_branch = tree->GetBranch("NBGen2jesRelativeJEREC2dn");
  if (NBGen2jesRelativeJEREC2dn_branch) NBGen2jesRelativeJEREC2dn_branch->SetAddress(&NBGen2jesRelativeJEREC2dn_);
  NBGen3jesRelativeJEREC2dn_branch = tree->GetBranch("NBGen3jesRelativeJEREC2dn");
  if (NBGen3jesRelativeJEREC2dn_branch) NBGen3jesRelativeJEREC2dn_branch->SetAddress(&NBGen3jesRelativeJEREC2dn_);
  NBGen4jesRelativeJEREC2dn_branch = tree->GetBranch("NBGen4jesRelativeJEREC2dn");
  if (NBGen4jesRelativeJEREC2dn_branch) NBGen4jesRelativeJEREC2dn_branch->SetAddress(&NBGen4jesRelativeJEREC2dn_);
  NLGen0jesRelativeJEREC2dn_branch = tree->GetBranch("NLGen0jesRelativeJEREC2dn");
  if (NLGen0jesRelativeJEREC2dn_branch) NLGen0jesRelativeJEREC2dn_branch->SetAddress(&NLGen0jesRelativeJEREC2dn_);
  NLGen1jesRelativeJEREC2dn_branch = tree->GetBranch("NLGen1jesRelativeJEREC2dn");
  if (NLGen1jesRelativeJEREC2dn_branch) NLGen1jesRelativeJEREC2dn_branch->SetAddress(&NLGen1jesRelativeJEREC2dn_);
  NLGen2jesRelativeJEREC2dn_branch = tree->GetBranch("NLGen2jesRelativeJEREC2dn");
  if (NLGen2jesRelativeJEREC2dn_branch) NLGen2jesRelativeJEREC2dn_branch->SetAddress(&NLGen2jesRelativeJEREC2dn_);
  NLGen3jesRelativeJEREC2dn_branch = tree->GetBranch("NLGen3jesRelativeJEREC2dn");
  if (NLGen3jesRelativeJEREC2dn_branch) NLGen3jesRelativeJEREC2dn_branch->SetAddress(&NLGen3jesRelativeJEREC2dn_);
  NLGen4jesRelativeJEREC2dn_branch = tree->GetBranch("NLGen4jesRelativeJEREC2dn");
  if (NLGen4jesRelativeJEREC2dn_branch) NLGen4jesRelativeJEREC2dn_branch->SetAddress(&NLGen4jesRelativeJEREC2dn_);
  NVQGen0jesRelativeJEREC2dn_branch = tree->GetBranch("NVQGen0jesRelativeJEREC2dn");
  if (NVQGen0jesRelativeJEREC2dn_branch) NVQGen0jesRelativeJEREC2dn_branch->SetAddress(&NVQGen0jesRelativeJEREC2dn_);
  NVQGen1jesRelativeJEREC2dn_branch = tree->GetBranch("NVQGen1jesRelativeJEREC2dn");
  if (NVQGen1jesRelativeJEREC2dn_branch) NVQGen1jesRelativeJEREC2dn_branch->SetAddress(&NVQGen1jesRelativeJEREC2dn_);
  NVQGen2jesRelativeJEREC2dn_branch = tree->GetBranch("NVQGen2jesRelativeJEREC2dn");
  if (NVQGen2jesRelativeJEREC2dn_branch) NVQGen2jesRelativeJEREC2dn_branch->SetAddress(&NVQGen2jesRelativeJEREC2dn_);
  NVQGen3jesRelativeJEREC2dn_branch = tree->GetBranch("NVQGen3jesRelativeJEREC2dn");
  if (NVQGen3jesRelativeJEREC2dn_branch) NVQGen3jesRelativeJEREC2dn_branch->SetAddress(&NVQGen3jesRelativeJEREC2dn_);
  NVQGen4jesRelativeJEREC2dn_branch = tree->GetBranch("NVQGen4jesRelativeJEREC2dn");
  if (NVQGen4jesRelativeJEREC2dn_branch) NVQGen4jesRelativeJEREC2dn_branch->SetAddress(&NVQGen4jesRelativeJEREC2dn_);
  NiFJjesRelativeJEREC2dn_branch = tree->GetBranch("NiFJjesRelativeJEREC2dn");
  if (NiFJjesRelativeJEREC2dn_branch) NiFJjesRelativeJEREC2dn_branch->SetAddress(&NiFJjesRelativeJEREC2dn_);
  iVMD0jesRelativeJEREC2dn_branch = tree->GetBranch("iVMD0jesRelativeJEREC2dn");
  if (iVMD0jesRelativeJEREC2dn_branch) iVMD0jesRelativeJEREC2dn_branch->SetAddress(&iVMD0jesRelativeJEREC2dn_);
  iVMD1jesRelativeJEREC2dn_branch = tree->GetBranch("iVMD1jesRelativeJEREC2dn");
  if (iVMD1jesRelativeJEREC2dn_branch) iVMD1jesRelativeJEREC2dn_branch->SetAddress(&iVMD1jesRelativeJEREC2dn_);
  iVMD2jesRelativeJEREC2dn_branch = tree->GetBranch("iVMD2jesRelativeJEREC2dn");
  if (iVMD2jesRelativeJEREC2dn_branch) iVMD2jesRelativeJEREC2dn_branch->SetAddress(&iVMD2jesRelativeJEREC2dn_);
  iVMD3jesRelativeJEREC2dn_branch = tree->GetBranch("iVMD3jesRelativeJEREC2dn");
  if (iVMD3jesRelativeJEREC2dn_branch) iVMD3jesRelativeJEREC2dn_branch->SetAddress(&iVMD3jesRelativeJEREC2dn_);
  iVMD4jesRelativeJEREC2dn_branch = tree->GetBranch("iVMD4jesRelativeJEREC2dn");
  if (iVMD4jesRelativeJEREC2dn_branch) iVMD4jesRelativeJEREC2dn_branch->SetAddress(&iVMD4jesRelativeJEREC2dn_);
  iWMD0jesRelativeJEREC2dn_branch = tree->GetBranch("iWMD0jesRelativeJEREC2dn");
  if (iWMD0jesRelativeJEREC2dn_branch) iWMD0jesRelativeJEREC2dn_branch->SetAddress(&iWMD0jesRelativeJEREC2dn_);
  iWMD1jesRelativeJEREC2dn_branch = tree->GetBranch("iWMD1jesRelativeJEREC2dn");
  if (iWMD1jesRelativeJEREC2dn_branch) iWMD1jesRelativeJEREC2dn_branch->SetAddress(&iWMD1jesRelativeJEREC2dn_);
  iWMD2jesRelativeJEREC2dn_branch = tree->GetBranch("iWMD2jesRelativeJEREC2dn");
  if (iWMD2jesRelativeJEREC2dn_branch) iWMD2jesRelativeJEREC2dn_branch->SetAddress(&iWMD2jesRelativeJEREC2dn_);
  iWMD3jesRelativeJEREC2dn_branch = tree->GetBranch("iWMD3jesRelativeJEREC2dn");
  if (iWMD3jesRelativeJEREC2dn_branch) iWMD3jesRelativeJEREC2dn_branch->SetAddress(&iWMD3jesRelativeJEREC2dn_);
  iWMD4jesRelativeJEREC2dn_branch = tree->GetBranch("iWMD4jesRelativeJEREC2dn");
  if (iWMD4jesRelativeJEREC2dn_branch) iWMD4jesRelativeJEREC2dn_branch->SetAddress(&iWMD4jesRelativeJEREC2dn_);
  NJjesRelativeJEREC2dn_branch = tree->GetBranch("NJjesRelativeJEREC2dn");
  if (NJjesRelativeJEREC2dn_branch) NJjesRelativeJEREC2dn_branch->SetAddress(&NJjesRelativeJEREC2dn_);
  NbLoosejesRelativeJEREC2dn_branch = tree->GetBranch("NbLoosejesRelativeJEREC2dn");
  if (NbLoosejesRelativeJEREC2dn_branch) NbLoosejesRelativeJEREC2dn_branch->SetAddress(&NbLoosejesRelativeJEREC2dn_);
  NbMediumjesRelativeJEREC2dn_branch = tree->GetBranch("NbMediumjesRelativeJEREC2dn");
  if (NbMediumjesRelativeJEREC2dn_branch) NbMediumjesRelativeJEREC2dn_branch->SetAddress(&NbMediumjesRelativeJEREC2dn_);
  NbTightjesRelativeJEREC2dn_branch = tree->GetBranch("NbTightjesRelativeJEREC2dn");
  if (NbTightjesRelativeJEREC2dn_branch) NbTightjesRelativeJEREC2dn_branch->SetAddress(&NbTightjesRelativeJEREC2dn_);
  NoORNbLoosejesRelativeJEREC2dn_branch = tree->GetBranch("NoORNbLoosejesRelativeJEREC2dn");
  if (NoORNbLoosejesRelativeJEREC2dn_branch) NoORNbLoosejesRelativeJEREC2dn_branch->SetAddress(&NoORNbLoosejesRelativeJEREC2dn_);
  NoORNbMediumjesRelativeJEREC2dn_branch = tree->GetBranch("NoORNbMediumjesRelativeJEREC2dn");
  if (NoORNbMediumjesRelativeJEREC2dn_branch) NoORNbMediumjesRelativeJEREC2dn_branch->SetAddress(&NoORNbMediumjesRelativeJEREC2dn_);
  NoORNbTightjesRelativeJEREC2dn_branch = tree->GetBranch("NoORNbTightjesRelativeJEREC2dn");
  if (NoORNbTightjesRelativeJEREC2dn_branch) NoORNbTightjesRelativeJEREC2dn_branch->SetAddress(&NoORNbTightjesRelativeJEREC2dn_);
  NQJGenjesRelativeJEREC2dn_branch = tree->GetBranch("NQJGenjesRelativeJEREC2dn");
  if (NQJGenjesRelativeJEREC2dn_branch) NQJGenjesRelativeJEREC2dn_branch->SetAddress(&NQJGenjesRelativeJEREC2dn_);
  NBJGenjesRelativeJEREC2dn_branch = tree->GetBranch("NBJGenjesRelativeJEREC2dn");
  if (NBJGenjesRelativeJEREC2dn_branch) NBJGenjesRelativeJEREC2dn_branch->SetAddress(&NBJGenjesRelativeJEREC2dn_);
  NLJGenjesRelativeJEREC2dn_branch = tree->GetBranch("NLJGenjesRelativeJEREC2dn");
  if (NLJGenjesRelativeJEREC2dn_branch) NLJGenjesRelativeJEREC2dn_branch->SetAddress(&NLJGenjesRelativeJEREC2dn_);
  MVVXjesRelativeJEREC2dn_branch = tree->GetBranch("MVVXjesRelativeJEREC2dn");
  if (MVVXjesRelativeJEREC2dn_branch) MVVXjesRelativeJEREC2dn_branch->SetAddress(&MVVXjesRelativeJEREC2dn_);
  PtVVXjesRelativeJEREC2dn_branch = tree->GetBranch("PtVVXjesRelativeJEREC2dn");
  if (PtVVXjesRelativeJEREC2dn_branch) PtVVXjesRelativeJEREC2dn_branch->SetAddress(&PtVVXjesRelativeJEREC2dn_);
  HTjesRelativeJEREC2dn_branch = tree->GetBranch("HTjesRelativeJEREC2dn");
  if (HTjesRelativeJEREC2dn_branch) HTjesRelativeJEREC2dn_branch->SetAddress(&HTjesRelativeJEREC2dn_);
  HTJjesRelativeJEREC2dn_branch = tree->GetBranch("HTJjesRelativeJEREC2dn");
  if (HTJjesRelativeJEREC2dn_branch) HTJjesRelativeJEREC2dn_branch->SetAddress(&HTJjesRelativeJEREC2dn_);
  HTFJjesRelativeJEREC2dn_branch = tree->GetBranch("HTFJjesRelativeJEREC2dn");
  if (HTFJjesRelativeJEREC2dn_branch) HTFJjesRelativeJEREC2dn_branch->SetAddress(&HTFJjesRelativeJEREC2dn_);
  SumPtFJjesRelativeJEREC2dn_branch = tree->GetBranch("SumPtFJjesRelativeJEREC2dn");
  if (SumPtFJjesRelativeJEREC2dn_branch) SumPtFJjesRelativeJEREC2dn_branch->SetAddress(&SumPtFJjesRelativeJEREC2dn_);
  SumPtJjesRelativeJEREC2dn_branch = tree->GetBranch("SumPtJjesRelativeJEREC2dn");
  if (SumPtJjesRelativeJEREC2dn_branch) SumPtJjesRelativeJEREC2dn_branch->SetAddress(&SumPtJjesRelativeJEREC2dn_);
  NFJjesRelativeJERHFup_branch = tree->GetBranch("NFJjesRelativeJERHFup");
  if (NFJjesRelativeJERHFup_branch) NFJjesRelativeJERHFup_branch->SetAddress(&NFJjesRelativeJERHFup_);
  VMD0jesRelativeJERHFup_branch = tree->GetBranch("VMD0jesRelativeJERHFup");
  if (VMD0jesRelativeJERHFup_branch) VMD0jesRelativeJERHFup_branch->SetAddress(&VMD0jesRelativeJERHFup_);
  VMD1jesRelativeJERHFup_branch = tree->GetBranch("VMD1jesRelativeJERHFup");
  if (VMD1jesRelativeJERHFup_branch) VMD1jesRelativeJERHFup_branch->SetAddress(&VMD1jesRelativeJERHFup_);
  VMD2jesRelativeJERHFup_branch = tree->GetBranch("VMD2jesRelativeJERHFup");
  if (VMD2jesRelativeJERHFup_branch) VMD2jesRelativeJERHFup_branch->SetAddress(&VMD2jesRelativeJERHFup_);
  VMD3jesRelativeJERHFup_branch = tree->GetBranch("VMD3jesRelativeJERHFup");
  if (VMD3jesRelativeJERHFup_branch) VMD3jesRelativeJERHFup_branch->SetAddress(&VMD3jesRelativeJERHFup_);
  VMD4jesRelativeJERHFup_branch = tree->GetBranch("VMD4jesRelativeJERHFup");
  if (VMD4jesRelativeJERHFup_branch) VMD4jesRelativeJERHFup_branch->SetAddress(&VMD4jesRelativeJERHFup_);
  WMD0jesRelativeJERHFup_branch = tree->GetBranch("WMD0jesRelativeJERHFup");
  if (WMD0jesRelativeJERHFup_branch) WMD0jesRelativeJERHFup_branch->SetAddress(&WMD0jesRelativeJERHFup_);
  WMD1jesRelativeJERHFup_branch = tree->GetBranch("WMD1jesRelativeJERHFup");
  if (WMD1jesRelativeJERHFup_branch) WMD1jesRelativeJERHFup_branch->SetAddress(&WMD1jesRelativeJERHFup_);
  WMD2jesRelativeJERHFup_branch = tree->GetBranch("WMD2jesRelativeJERHFup");
  if (WMD2jesRelativeJERHFup_branch) WMD2jesRelativeJERHFup_branch->SetAddress(&WMD2jesRelativeJERHFup_);
  WMD3jesRelativeJERHFup_branch = tree->GetBranch("WMD3jesRelativeJERHFup");
  if (WMD3jesRelativeJERHFup_branch) WMD3jesRelativeJERHFup_branch->SetAddress(&WMD3jesRelativeJERHFup_);
  WMD4jesRelativeJERHFup_branch = tree->GetBranch("WMD4jesRelativeJERHFup");
  if (WMD4jesRelativeJERHFup_branch) WMD4jesRelativeJERHFup_branch->SetAddress(&WMD4jesRelativeJERHFup_);
  NQGen0jesRelativeJERHFup_branch = tree->GetBranch("NQGen0jesRelativeJERHFup");
  if (NQGen0jesRelativeJERHFup_branch) NQGen0jesRelativeJERHFup_branch->SetAddress(&NQGen0jesRelativeJERHFup_);
  NQGen1jesRelativeJERHFup_branch = tree->GetBranch("NQGen1jesRelativeJERHFup");
  if (NQGen1jesRelativeJERHFup_branch) NQGen1jesRelativeJERHFup_branch->SetAddress(&NQGen1jesRelativeJERHFup_);
  NQGen2jesRelativeJERHFup_branch = tree->GetBranch("NQGen2jesRelativeJERHFup");
  if (NQGen2jesRelativeJERHFup_branch) NQGen2jesRelativeJERHFup_branch->SetAddress(&NQGen2jesRelativeJERHFup_);
  NQGen3jesRelativeJERHFup_branch = tree->GetBranch("NQGen3jesRelativeJERHFup");
  if (NQGen3jesRelativeJERHFup_branch) NQGen3jesRelativeJERHFup_branch->SetAddress(&NQGen3jesRelativeJERHFup_);
  NQGen4jesRelativeJERHFup_branch = tree->GetBranch("NQGen4jesRelativeJERHFup");
  if (NQGen4jesRelativeJERHFup_branch) NQGen4jesRelativeJERHFup_branch->SetAddress(&NQGen4jesRelativeJERHFup_);
  NBGen0jesRelativeJERHFup_branch = tree->GetBranch("NBGen0jesRelativeJERHFup");
  if (NBGen0jesRelativeJERHFup_branch) NBGen0jesRelativeJERHFup_branch->SetAddress(&NBGen0jesRelativeJERHFup_);
  NBGen1jesRelativeJERHFup_branch = tree->GetBranch("NBGen1jesRelativeJERHFup");
  if (NBGen1jesRelativeJERHFup_branch) NBGen1jesRelativeJERHFup_branch->SetAddress(&NBGen1jesRelativeJERHFup_);
  NBGen2jesRelativeJERHFup_branch = tree->GetBranch("NBGen2jesRelativeJERHFup");
  if (NBGen2jesRelativeJERHFup_branch) NBGen2jesRelativeJERHFup_branch->SetAddress(&NBGen2jesRelativeJERHFup_);
  NBGen3jesRelativeJERHFup_branch = tree->GetBranch("NBGen3jesRelativeJERHFup");
  if (NBGen3jesRelativeJERHFup_branch) NBGen3jesRelativeJERHFup_branch->SetAddress(&NBGen3jesRelativeJERHFup_);
  NBGen4jesRelativeJERHFup_branch = tree->GetBranch("NBGen4jesRelativeJERHFup");
  if (NBGen4jesRelativeJERHFup_branch) NBGen4jesRelativeJERHFup_branch->SetAddress(&NBGen4jesRelativeJERHFup_);
  NLGen0jesRelativeJERHFup_branch = tree->GetBranch("NLGen0jesRelativeJERHFup");
  if (NLGen0jesRelativeJERHFup_branch) NLGen0jesRelativeJERHFup_branch->SetAddress(&NLGen0jesRelativeJERHFup_);
  NLGen1jesRelativeJERHFup_branch = tree->GetBranch("NLGen1jesRelativeJERHFup");
  if (NLGen1jesRelativeJERHFup_branch) NLGen1jesRelativeJERHFup_branch->SetAddress(&NLGen1jesRelativeJERHFup_);
  NLGen2jesRelativeJERHFup_branch = tree->GetBranch("NLGen2jesRelativeJERHFup");
  if (NLGen2jesRelativeJERHFup_branch) NLGen2jesRelativeJERHFup_branch->SetAddress(&NLGen2jesRelativeJERHFup_);
  NLGen3jesRelativeJERHFup_branch = tree->GetBranch("NLGen3jesRelativeJERHFup");
  if (NLGen3jesRelativeJERHFup_branch) NLGen3jesRelativeJERHFup_branch->SetAddress(&NLGen3jesRelativeJERHFup_);
  NLGen4jesRelativeJERHFup_branch = tree->GetBranch("NLGen4jesRelativeJERHFup");
  if (NLGen4jesRelativeJERHFup_branch) NLGen4jesRelativeJERHFup_branch->SetAddress(&NLGen4jesRelativeJERHFup_);
  NVQGen0jesRelativeJERHFup_branch = tree->GetBranch("NVQGen0jesRelativeJERHFup");
  if (NVQGen0jesRelativeJERHFup_branch) NVQGen0jesRelativeJERHFup_branch->SetAddress(&NVQGen0jesRelativeJERHFup_);
  NVQGen1jesRelativeJERHFup_branch = tree->GetBranch("NVQGen1jesRelativeJERHFup");
  if (NVQGen1jesRelativeJERHFup_branch) NVQGen1jesRelativeJERHFup_branch->SetAddress(&NVQGen1jesRelativeJERHFup_);
  NVQGen2jesRelativeJERHFup_branch = tree->GetBranch("NVQGen2jesRelativeJERHFup");
  if (NVQGen2jesRelativeJERHFup_branch) NVQGen2jesRelativeJERHFup_branch->SetAddress(&NVQGen2jesRelativeJERHFup_);
  NVQGen3jesRelativeJERHFup_branch = tree->GetBranch("NVQGen3jesRelativeJERHFup");
  if (NVQGen3jesRelativeJERHFup_branch) NVQGen3jesRelativeJERHFup_branch->SetAddress(&NVQGen3jesRelativeJERHFup_);
  NVQGen4jesRelativeJERHFup_branch = tree->GetBranch("NVQGen4jesRelativeJERHFup");
  if (NVQGen4jesRelativeJERHFup_branch) NVQGen4jesRelativeJERHFup_branch->SetAddress(&NVQGen4jesRelativeJERHFup_);
  NiFJjesRelativeJERHFup_branch = tree->GetBranch("NiFJjesRelativeJERHFup");
  if (NiFJjesRelativeJERHFup_branch) NiFJjesRelativeJERHFup_branch->SetAddress(&NiFJjesRelativeJERHFup_);
  iVMD0jesRelativeJERHFup_branch = tree->GetBranch("iVMD0jesRelativeJERHFup");
  if (iVMD0jesRelativeJERHFup_branch) iVMD0jesRelativeJERHFup_branch->SetAddress(&iVMD0jesRelativeJERHFup_);
  iVMD1jesRelativeJERHFup_branch = tree->GetBranch("iVMD1jesRelativeJERHFup");
  if (iVMD1jesRelativeJERHFup_branch) iVMD1jesRelativeJERHFup_branch->SetAddress(&iVMD1jesRelativeJERHFup_);
  iVMD2jesRelativeJERHFup_branch = tree->GetBranch("iVMD2jesRelativeJERHFup");
  if (iVMD2jesRelativeJERHFup_branch) iVMD2jesRelativeJERHFup_branch->SetAddress(&iVMD2jesRelativeJERHFup_);
  iVMD3jesRelativeJERHFup_branch = tree->GetBranch("iVMD3jesRelativeJERHFup");
  if (iVMD3jesRelativeJERHFup_branch) iVMD3jesRelativeJERHFup_branch->SetAddress(&iVMD3jesRelativeJERHFup_);
  iVMD4jesRelativeJERHFup_branch = tree->GetBranch("iVMD4jesRelativeJERHFup");
  if (iVMD4jesRelativeJERHFup_branch) iVMD4jesRelativeJERHFup_branch->SetAddress(&iVMD4jesRelativeJERHFup_);
  iWMD0jesRelativeJERHFup_branch = tree->GetBranch("iWMD0jesRelativeJERHFup");
  if (iWMD0jesRelativeJERHFup_branch) iWMD0jesRelativeJERHFup_branch->SetAddress(&iWMD0jesRelativeJERHFup_);
  iWMD1jesRelativeJERHFup_branch = tree->GetBranch("iWMD1jesRelativeJERHFup");
  if (iWMD1jesRelativeJERHFup_branch) iWMD1jesRelativeJERHFup_branch->SetAddress(&iWMD1jesRelativeJERHFup_);
  iWMD2jesRelativeJERHFup_branch = tree->GetBranch("iWMD2jesRelativeJERHFup");
  if (iWMD2jesRelativeJERHFup_branch) iWMD2jesRelativeJERHFup_branch->SetAddress(&iWMD2jesRelativeJERHFup_);
  iWMD3jesRelativeJERHFup_branch = tree->GetBranch("iWMD3jesRelativeJERHFup");
  if (iWMD3jesRelativeJERHFup_branch) iWMD3jesRelativeJERHFup_branch->SetAddress(&iWMD3jesRelativeJERHFup_);
  iWMD4jesRelativeJERHFup_branch = tree->GetBranch("iWMD4jesRelativeJERHFup");
  if (iWMD4jesRelativeJERHFup_branch) iWMD4jesRelativeJERHFup_branch->SetAddress(&iWMD4jesRelativeJERHFup_);
  NJjesRelativeJERHFup_branch = tree->GetBranch("NJjesRelativeJERHFup");
  if (NJjesRelativeJERHFup_branch) NJjesRelativeJERHFup_branch->SetAddress(&NJjesRelativeJERHFup_);
  NbLoosejesRelativeJERHFup_branch = tree->GetBranch("NbLoosejesRelativeJERHFup");
  if (NbLoosejesRelativeJERHFup_branch) NbLoosejesRelativeJERHFup_branch->SetAddress(&NbLoosejesRelativeJERHFup_);
  NbMediumjesRelativeJERHFup_branch = tree->GetBranch("NbMediumjesRelativeJERHFup");
  if (NbMediumjesRelativeJERHFup_branch) NbMediumjesRelativeJERHFup_branch->SetAddress(&NbMediumjesRelativeJERHFup_);
  NbTightjesRelativeJERHFup_branch = tree->GetBranch("NbTightjesRelativeJERHFup");
  if (NbTightjesRelativeJERHFup_branch) NbTightjesRelativeJERHFup_branch->SetAddress(&NbTightjesRelativeJERHFup_);
  NoORNbLoosejesRelativeJERHFup_branch = tree->GetBranch("NoORNbLoosejesRelativeJERHFup");
  if (NoORNbLoosejesRelativeJERHFup_branch) NoORNbLoosejesRelativeJERHFup_branch->SetAddress(&NoORNbLoosejesRelativeJERHFup_);
  NoORNbMediumjesRelativeJERHFup_branch = tree->GetBranch("NoORNbMediumjesRelativeJERHFup");
  if (NoORNbMediumjesRelativeJERHFup_branch) NoORNbMediumjesRelativeJERHFup_branch->SetAddress(&NoORNbMediumjesRelativeJERHFup_);
  NoORNbTightjesRelativeJERHFup_branch = tree->GetBranch("NoORNbTightjesRelativeJERHFup");
  if (NoORNbTightjesRelativeJERHFup_branch) NoORNbTightjesRelativeJERHFup_branch->SetAddress(&NoORNbTightjesRelativeJERHFup_);
  NQJGenjesRelativeJERHFup_branch = tree->GetBranch("NQJGenjesRelativeJERHFup");
  if (NQJGenjesRelativeJERHFup_branch) NQJGenjesRelativeJERHFup_branch->SetAddress(&NQJGenjesRelativeJERHFup_);
  NBJGenjesRelativeJERHFup_branch = tree->GetBranch("NBJGenjesRelativeJERHFup");
  if (NBJGenjesRelativeJERHFup_branch) NBJGenjesRelativeJERHFup_branch->SetAddress(&NBJGenjesRelativeJERHFup_);
  NLJGenjesRelativeJERHFup_branch = tree->GetBranch("NLJGenjesRelativeJERHFup");
  if (NLJGenjesRelativeJERHFup_branch) NLJGenjesRelativeJERHFup_branch->SetAddress(&NLJGenjesRelativeJERHFup_);
  MVVXjesRelativeJERHFup_branch = tree->GetBranch("MVVXjesRelativeJERHFup");
  if (MVVXjesRelativeJERHFup_branch) MVVXjesRelativeJERHFup_branch->SetAddress(&MVVXjesRelativeJERHFup_);
  PtVVXjesRelativeJERHFup_branch = tree->GetBranch("PtVVXjesRelativeJERHFup");
  if (PtVVXjesRelativeJERHFup_branch) PtVVXjesRelativeJERHFup_branch->SetAddress(&PtVVXjesRelativeJERHFup_);
  HTjesRelativeJERHFup_branch = tree->GetBranch("HTjesRelativeJERHFup");
  if (HTjesRelativeJERHFup_branch) HTjesRelativeJERHFup_branch->SetAddress(&HTjesRelativeJERHFup_);
  HTJjesRelativeJERHFup_branch = tree->GetBranch("HTJjesRelativeJERHFup");
  if (HTJjesRelativeJERHFup_branch) HTJjesRelativeJERHFup_branch->SetAddress(&HTJjesRelativeJERHFup_);
  HTFJjesRelativeJERHFup_branch = tree->GetBranch("HTFJjesRelativeJERHFup");
  if (HTFJjesRelativeJERHFup_branch) HTFJjesRelativeJERHFup_branch->SetAddress(&HTFJjesRelativeJERHFup_);
  SumPtFJjesRelativeJERHFup_branch = tree->GetBranch("SumPtFJjesRelativeJERHFup");
  if (SumPtFJjesRelativeJERHFup_branch) SumPtFJjesRelativeJERHFup_branch->SetAddress(&SumPtFJjesRelativeJERHFup_);
  SumPtJjesRelativeJERHFup_branch = tree->GetBranch("SumPtJjesRelativeJERHFup");
  if (SumPtJjesRelativeJERHFup_branch) SumPtJjesRelativeJERHFup_branch->SetAddress(&SumPtJjesRelativeJERHFup_);
  NFJjesRelativeJERHFdn_branch = tree->GetBranch("NFJjesRelativeJERHFdn");
  if (NFJjesRelativeJERHFdn_branch) NFJjesRelativeJERHFdn_branch->SetAddress(&NFJjesRelativeJERHFdn_);
  VMD0jesRelativeJERHFdn_branch = tree->GetBranch("VMD0jesRelativeJERHFdn");
  if (VMD0jesRelativeJERHFdn_branch) VMD0jesRelativeJERHFdn_branch->SetAddress(&VMD0jesRelativeJERHFdn_);
  VMD1jesRelativeJERHFdn_branch = tree->GetBranch("VMD1jesRelativeJERHFdn");
  if (VMD1jesRelativeJERHFdn_branch) VMD1jesRelativeJERHFdn_branch->SetAddress(&VMD1jesRelativeJERHFdn_);
  VMD2jesRelativeJERHFdn_branch = tree->GetBranch("VMD2jesRelativeJERHFdn");
  if (VMD2jesRelativeJERHFdn_branch) VMD2jesRelativeJERHFdn_branch->SetAddress(&VMD2jesRelativeJERHFdn_);
  VMD3jesRelativeJERHFdn_branch = tree->GetBranch("VMD3jesRelativeJERHFdn");
  if (VMD3jesRelativeJERHFdn_branch) VMD3jesRelativeJERHFdn_branch->SetAddress(&VMD3jesRelativeJERHFdn_);
  VMD4jesRelativeJERHFdn_branch = tree->GetBranch("VMD4jesRelativeJERHFdn");
  if (VMD4jesRelativeJERHFdn_branch) VMD4jesRelativeJERHFdn_branch->SetAddress(&VMD4jesRelativeJERHFdn_);
  WMD0jesRelativeJERHFdn_branch = tree->GetBranch("WMD0jesRelativeJERHFdn");
  if (WMD0jesRelativeJERHFdn_branch) WMD0jesRelativeJERHFdn_branch->SetAddress(&WMD0jesRelativeJERHFdn_);
  WMD1jesRelativeJERHFdn_branch = tree->GetBranch("WMD1jesRelativeJERHFdn");
  if (WMD1jesRelativeJERHFdn_branch) WMD1jesRelativeJERHFdn_branch->SetAddress(&WMD1jesRelativeJERHFdn_);
  WMD2jesRelativeJERHFdn_branch = tree->GetBranch("WMD2jesRelativeJERHFdn");
  if (WMD2jesRelativeJERHFdn_branch) WMD2jesRelativeJERHFdn_branch->SetAddress(&WMD2jesRelativeJERHFdn_);
  WMD3jesRelativeJERHFdn_branch = tree->GetBranch("WMD3jesRelativeJERHFdn");
  if (WMD3jesRelativeJERHFdn_branch) WMD3jesRelativeJERHFdn_branch->SetAddress(&WMD3jesRelativeJERHFdn_);
  WMD4jesRelativeJERHFdn_branch = tree->GetBranch("WMD4jesRelativeJERHFdn");
  if (WMD4jesRelativeJERHFdn_branch) WMD4jesRelativeJERHFdn_branch->SetAddress(&WMD4jesRelativeJERHFdn_);
  NQGen0jesRelativeJERHFdn_branch = tree->GetBranch("NQGen0jesRelativeJERHFdn");
  if (NQGen0jesRelativeJERHFdn_branch) NQGen0jesRelativeJERHFdn_branch->SetAddress(&NQGen0jesRelativeJERHFdn_);
  NQGen1jesRelativeJERHFdn_branch = tree->GetBranch("NQGen1jesRelativeJERHFdn");
  if (NQGen1jesRelativeJERHFdn_branch) NQGen1jesRelativeJERHFdn_branch->SetAddress(&NQGen1jesRelativeJERHFdn_);
  NQGen2jesRelativeJERHFdn_branch = tree->GetBranch("NQGen2jesRelativeJERHFdn");
  if (NQGen2jesRelativeJERHFdn_branch) NQGen2jesRelativeJERHFdn_branch->SetAddress(&NQGen2jesRelativeJERHFdn_);
  NQGen3jesRelativeJERHFdn_branch = tree->GetBranch("NQGen3jesRelativeJERHFdn");
  if (NQGen3jesRelativeJERHFdn_branch) NQGen3jesRelativeJERHFdn_branch->SetAddress(&NQGen3jesRelativeJERHFdn_);
  NQGen4jesRelativeJERHFdn_branch = tree->GetBranch("NQGen4jesRelativeJERHFdn");
  if (NQGen4jesRelativeJERHFdn_branch) NQGen4jesRelativeJERHFdn_branch->SetAddress(&NQGen4jesRelativeJERHFdn_);
  NBGen0jesRelativeJERHFdn_branch = tree->GetBranch("NBGen0jesRelativeJERHFdn");
  if (NBGen0jesRelativeJERHFdn_branch) NBGen0jesRelativeJERHFdn_branch->SetAddress(&NBGen0jesRelativeJERHFdn_);
  NBGen1jesRelativeJERHFdn_branch = tree->GetBranch("NBGen1jesRelativeJERHFdn");
  if (NBGen1jesRelativeJERHFdn_branch) NBGen1jesRelativeJERHFdn_branch->SetAddress(&NBGen1jesRelativeJERHFdn_);
  NBGen2jesRelativeJERHFdn_branch = tree->GetBranch("NBGen2jesRelativeJERHFdn");
  if (NBGen2jesRelativeJERHFdn_branch) NBGen2jesRelativeJERHFdn_branch->SetAddress(&NBGen2jesRelativeJERHFdn_);
  NBGen3jesRelativeJERHFdn_branch = tree->GetBranch("NBGen3jesRelativeJERHFdn");
  if (NBGen3jesRelativeJERHFdn_branch) NBGen3jesRelativeJERHFdn_branch->SetAddress(&NBGen3jesRelativeJERHFdn_);
  NBGen4jesRelativeJERHFdn_branch = tree->GetBranch("NBGen4jesRelativeJERHFdn");
  if (NBGen4jesRelativeJERHFdn_branch) NBGen4jesRelativeJERHFdn_branch->SetAddress(&NBGen4jesRelativeJERHFdn_);
  NLGen0jesRelativeJERHFdn_branch = tree->GetBranch("NLGen0jesRelativeJERHFdn");
  if (NLGen0jesRelativeJERHFdn_branch) NLGen0jesRelativeJERHFdn_branch->SetAddress(&NLGen0jesRelativeJERHFdn_);
  NLGen1jesRelativeJERHFdn_branch = tree->GetBranch("NLGen1jesRelativeJERHFdn");
  if (NLGen1jesRelativeJERHFdn_branch) NLGen1jesRelativeJERHFdn_branch->SetAddress(&NLGen1jesRelativeJERHFdn_);
  NLGen2jesRelativeJERHFdn_branch = tree->GetBranch("NLGen2jesRelativeJERHFdn");
  if (NLGen2jesRelativeJERHFdn_branch) NLGen2jesRelativeJERHFdn_branch->SetAddress(&NLGen2jesRelativeJERHFdn_);
  NLGen3jesRelativeJERHFdn_branch = tree->GetBranch("NLGen3jesRelativeJERHFdn");
  if (NLGen3jesRelativeJERHFdn_branch) NLGen3jesRelativeJERHFdn_branch->SetAddress(&NLGen3jesRelativeJERHFdn_);
  NLGen4jesRelativeJERHFdn_branch = tree->GetBranch("NLGen4jesRelativeJERHFdn");
  if (NLGen4jesRelativeJERHFdn_branch) NLGen4jesRelativeJERHFdn_branch->SetAddress(&NLGen4jesRelativeJERHFdn_);
  NVQGen0jesRelativeJERHFdn_branch = tree->GetBranch("NVQGen0jesRelativeJERHFdn");
  if (NVQGen0jesRelativeJERHFdn_branch) NVQGen0jesRelativeJERHFdn_branch->SetAddress(&NVQGen0jesRelativeJERHFdn_);
  NVQGen1jesRelativeJERHFdn_branch = tree->GetBranch("NVQGen1jesRelativeJERHFdn");
  if (NVQGen1jesRelativeJERHFdn_branch) NVQGen1jesRelativeJERHFdn_branch->SetAddress(&NVQGen1jesRelativeJERHFdn_);
  NVQGen2jesRelativeJERHFdn_branch = tree->GetBranch("NVQGen2jesRelativeJERHFdn");
  if (NVQGen2jesRelativeJERHFdn_branch) NVQGen2jesRelativeJERHFdn_branch->SetAddress(&NVQGen2jesRelativeJERHFdn_);
  NVQGen3jesRelativeJERHFdn_branch = tree->GetBranch("NVQGen3jesRelativeJERHFdn");
  if (NVQGen3jesRelativeJERHFdn_branch) NVQGen3jesRelativeJERHFdn_branch->SetAddress(&NVQGen3jesRelativeJERHFdn_);
  NVQGen4jesRelativeJERHFdn_branch = tree->GetBranch("NVQGen4jesRelativeJERHFdn");
  if (NVQGen4jesRelativeJERHFdn_branch) NVQGen4jesRelativeJERHFdn_branch->SetAddress(&NVQGen4jesRelativeJERHFdn_);
  NiFJjesRelativeJERHFdn_branch = tree->GetBranch("NiFJjesRelativeJERHFdn");
  if (NiFJjesRelativeJERHFdn_branch) NiFJjesRelativeJERHFdn_branch->SetAddress(&NiFJjesRelativeJERHFdn_);
  iVMD0jesRelativeJERHFdn_branch = tree->GetBranch("iVMD0jesRelativeJERHFdn");
  if (iVMD0jesRelativeJERHFdn_branch) iVMD0jesRelativeJERHFdn_branch->SetAddress(&iVMD0jesRelativeJERHFdn_);
  iVMD1jesRelativeJERHFdn_branch = tree->GetBranch("iVMD1jesRelativeJERHFdn");
  if (iVMD1jesRelativeJERHFdn_branch) iVMD1jesRelativeJERHFdn_branch->SetAddress(&iVMD1jesRelativeJERHFdn_);
  iVMD2jesRelativeJERHFdn_branch = tree->GetBranch("iVMD2jesRelativeJERHFdn");
  if (iVMD2jesRelativeJERHFdn_branch) iVMD2jesRelativeJERHFdn_branch->SetAddress(&iVMD2jesRelativeJERHFdn_);
  iVMD3jesRelativeJERHFdn_branch = tree->GetBranch("iVMD3jesRelativeJERHFdn");
  if (iVMD3jesRelativeJERHFdn_branch) iVMD3jesRelativeJERHFdn_branch->SetAddress(&iVMD3jesRelativeJERHFdn_);
  iVMD4jesRelativeJERHFdn_branch = tree->GetBranch("iVMD4jesRelativeJERHFdn");
  if (iVMD4jesRelativeJERHFdn_branch) iVMD4jesRelativeJERHFdn_branch->SetAddress(&iVMD4jesRelativeJERHFdn_);
  iWMD0jesRelativeJERHFdn_branch = tree->GetBranch("iWMD0jesRelativeJERHFdn");
  if (iWMD0jesRelativeJERHFdn_branch) iWMD0jesRelativeJERHFdn_branch->SetAddress(&iWMD0jesRelativeJERHFdn_);
  iWMD1jesRelativeJERHFdn_branch = tree->GetBranch("iWMD1jesRelativeJERHFdn");
  if (iWMD1jesRelativeJERHFdn_branch) iWMD1jesRelativeJERHFdn_branch->SetAddress(&iWMD1jesRelativeJERHFdn_);
  iWMD2jesRelativeJERHFdn_branch = tree->GetBranch("iWMD2jesRelativeJERHFdn");
  if (iWMD2jesRelativeJERHFdn_branch) iWMD2jesRelativeJERHFdn_branch->SetAddress(&iWMD2jesRelativeJERHFdn_);
  iWMD3jesRelativeJERHFdn_branch = tree->GetBranch("iWMD3jesRelativeJERHFdn");
  if (iWMD3jesRelativeJERHFdn_branch) iWMD3jesRelativeJERHFdn_branch->SetAddress(&iWMD3jesRelativeJERHFdn_);
  iWMD4jesRelativeJERHFdn_branch = tree->GetBranch("iWMD4jesRelativeJERHFdn");
  if (iWMD4jesRelativeJERHFdn_branch) iWMD4jesRelativeJERHFdn_branch->SetAddress(&iWMD4jesRelativeJERHFdn_);
  NJjesRelativeJERHFdn_branch = tree->GetBranch("NJjesRelativeJERHFdn");
  if (NJjesRelativeJERHFdn_branch) NJjesRelativeJERHFdn_branch->SetAddress(&NJjesRelativeJERHFdn_);
  NbLoosejesRelativeJERHFdn_branch = tree->GetBranch("NbLoosejesRelativeJERHFdn");
  if (NbLoosejesRelativeJERHFdn_branch) NbLoosejesRelativeJERHFdn_branch->SetAddress(&NbLoosejesRelativeJERHFdn_);
  NbMediumjesRelativeJERHFdn_branch = tree->GetBranch("NbMediumjesRelativeJERHFdn");
  if (NbMediumjesRelativeJERHFdn_branch) NbMediumjesRelativeJERHFdn_branch->SetAddress(&NbMediumjesRelativeJERHFdn_);
  NbTightjesRelativeJERHFdn_branch = tree->GetBranch("NbTightjesRelativeJERHFdn");
  if (NbTightjesRelativeJERHFdn_branch) NbTightjesRelativeJERHFdn_branch->SetAddress(&NbTightjesRelativeJERHFdn_);
  NoORNbLoosejesRelativeJERHFdn_branch = tree->GetBranch("NoORNbLoosejesRelativeJERHFdn");
  if (NoORNbLoosejesRelativeJERHFdn_branch) NoORNbLoosejesRelativeJERHFdn_branch->SetAddress(&NoORNbLoosejesRelativeJERHFdn_);
  NoORNbMediumjesRelativeJERHFdn_branch = tree->GetBranch("NoORNbMediumjesRelativeJERHFdn");
  if (NoORNbMediumjesRelativeJERHFdn_branch) NoORNbMediumjesRelativeJERHFdn_branch->SetAddress(&NoORNbMediumjesRelativeJERHFdn_);
  NoORNbTightjesRelativeJERHFdn_branch = tree->GetBranch("NoORNbTightjesRelativeJERHFdn");
  if (NoORNbTightjesRelativeJERHFdn_branch) NoORNbTightjesRelativeJERHFdn_branch->SetAddress(&NoORNbTightjesRelativeJERHFdn_);
  NQJGenjesRelativeJERHFdn_branch = tree->GetBranch("NQJGenjesRelativeJERHFdn");
  if (NQJGenjesRelativeJERHFdn_branch) NQJGenjesRelativeJERHFdn_branch->SetAddress(&NQJGenjesRelativeJERHFdn_);
  NBJGenjesRelativeJERHFdn_branch = tree->GetBranch("NBJGenjesRelativeJERHFdn");
  if (NBJGenjesRelativeJERHFdn_branch) NBJGenjesRelativeJERHFdn_branch->SetAddress(&NBJGenjesRelativeJERHFdn_);
  NLJGenjesRelativeJERHFdn_branch = tree->GetBranch("NLJGenjesRelativeJERHFdn");
  if (NLJGenjesRelativeJERHFdn_branch) NLJGenjesRelativeJERHFdn_branch->SetAddress(&NLJGenjesRelativeJERHFdn_);
  MVVXjesRelativeJERHFdn_branch = tree->GetBranch("MVVXjesRelativeJERHFdn");
  if (MVVXjesRelativeJERHFdn_branch) MVVXjesRelativeJERHFdn_branch->SetAddress(&MVVXjesRelativeJERHFdn_);
  PtVVXjesRelativeJERHFdn_branch = tree->GetBranch("PtVVXjesRelativeJERHFdn");
  if (PtVVXjesRelativeJERHFdn_branch) PtVVXjesRelativeJERHFdn_branch->SetAddress(&PtVVXjesRelativeJERHFdn_);
  HTjesRelativeJERHFdn_branch = tree->GetBranch("HTjesRelativeJERHFdn");
  if (HTjesRelativeJERHFdn_branch) HTjesRelativeJERHFdn_branch->SetAddress(&HTjesRelativeJERHFdn_);
  HTJjesRelativeJERHFdn_branch = tree->GetBranch("HTJjesRelativeJERHFdn");
  if (HTJjesRelativeJERHFdn_branch) HTJjesRelativeJERHFdn_branch->SetAddress(&HTJjesRelativeJERHFdn_);
  HTFJjesRelativeJERHFdn_branch = tree->GetBranch("HTFJjesRelativeJERHFdn");
  if (HTFJjesRelativeJERHFdn_branch) HTFJjesRelativeJERHFdn_branch->SetAddress(&HTFJjesRelativeJERHFdn_);
  SumPtFJjesRelativeJERHFdn_branch = tree->GetBranch("SumPtFJjesRelativeJERHFdn");
  if (SumPtFJjesRelativeJERHFdn_branch) SumPtFJjesRelativeJERHFdn_branch->SetAddress(&SumPtFJjesRelativeJERHFdn_);
  SumPtJjesRelativeJERHFdn_branch = tree->GetBranch("SumPtJjesRelativeJERHFdn");
  if (SumPtJjesRelativeJERHFdn_branch) SumPtJjesRelativeJERHFdn_branch->SetAddress(&SumPtJjesRelativeJERHFdn_);
  NFJjesRelativePtBBup_branch = tree->GetBranch("NFJjesRelativePtBBup");
  if (NFJjesRelativePtBBup_branch) NFJjesRelativePtBBup_branch->SetAddress(&NFJjesRelativePtBBup_);
  VMD0jesRelativePtBBup_branch = tree->GetBranch("VMD0jesRelativePtBBup");
  if (VMD0jesRelativePtBBup_branch) VMD0jesRelativePtBBup_branch->SetAddress(&VMD0jesRelativePtBBup_);
  VMD1jesRelativePtBBup_branch = tree->GetBranch("VMD1jesRelativePtBBup");
  if (VMD1jesRelativePtBBup_branch) VMD1jesRelativePtBBup_branch->SetAddress(&VMD1jesRelativePtBBup_);
  VMD2jesRelativePtBBup_branch = tree->GetBranch("VMD2jesRelativePtBBup");
  if (VMD2jesRelativePtBBup_branch) VMD2jesRelativePtBBup_branch->SetAddress(&VMD2jesRelativePtBBup_);
  VMD3jesRelativePtBBup_branch = tree->GetBranch("VMD3jesRelativePtBBup");
  if (VMD3jesRelativePtBBup_branch) VMD3jesRelativePtBBup_branch->SetAddress(&VMD3jesRelativePtBBup_);
  VMD4jesRelativePtBBup_branch = tree->GetBranch("VMD4jesRelativePtBBup");
  if (VMD4jesRelativePtBBup_branch) VMD4jesRelativePtBBup_branch->SetAddress(&VMD4jesRelativePtBBup_);
  WMD0jesRelativePtBBup_branch = tree->GetBranch("WMD0jesRelativePtBBup");
  if (WMD0jesRelativePtBBup_branch) WMD0jesRelativePtBBup_branch->SetAddress(&WMD0jesRelativePtBBup_);
  WMD1jesRelativePtBBup_branch = tree->GetBranch("WMD1jesRelativePtBBup");
  if (WMD1jesRelativePtBBup_branch) WMD1jesRelativePtBBup_branch->SetAddress(&WMD1jesRelativePtBBup_);
  WMD2jesRelativePtBBup_branch = tree->GetBranch("WMD2jesRelativePtBBup");
  if (WMD2jesRelativePtBBup_branch) WMD2jesRelativePtBBup_branch->SetAddress(&WMD2jesRelativePtBBup_);
  WMD3jesRelativePtBBup_branch = tree->GetBranch("WMD3jesRelativePtBBup");
  if (WMD3jesRelativePtBBup_branch) WMD3jesRelativePtBBup_branch->SetAddress(&WMD3jesRelativePtBBup_);
  WMD4jesRelativePtBBup_branch = tree->GetBranch("WMD4jesRelativePtBBup");
  if (WMD4jesRelativePtBBup_branch) WMD4jesRelativePtBBup_branch->SetAddress(&WMD4jesRelativePtBBup_);
  NQGen0jesRelativePtBBup_branch = tree->GetBranch("NQGen0jesRelativePtBBup");
  if (NQGen0jesRelativePtBBup_branch) NQGen0jesRelativePtBBup_branch->SetAddress(&NQGen0jesRelativePtBBup_);
  NQGen1jesRelativePtBBup_branch = tree->GetBranch("NQGen1jesRelativePtBBup");
  if (NQGen1jesRelativePtBBup_branch) NQGen1jesRelativePtBBup_branch->SetAddress(&NQGen1jesRelativePtBBup_);
  NQGen2jesRelativePtBBup_branch = tree->GetBranch("NQGen2jesRelativePtBBup");
  if (NQGen2jesRelativePtBBup_branch) NQGen2jesRelativePtBBup_branch->SetAddress(&NQGen2jesRelativePtBBup_);
  NQGen3jesRelativePtBBup_branch = tree->GetBranch("NQGen3jesRelativePtBBup");
  if (NQGen3jesRelativePtBBup_branch) NQGen3jesRelativePtBBup_branch->SetAddress(&NQGen3jesRelativePtBBup_);
  NQGen4jesRelativePtBBup_branch = tree->GetBranch("NQGen4jesRelativePtBBup");
  if (NQGen4jesRelativePtBBup_branch) NQGen4jesRelativePtBBup_branch->SetAddress(&NQGen4jesRelativePtBBup_);
  NBGen0jesRelativePtBBup_branch = tree->GetBranch("NBGen0jesRelativePtBBup");
  if (NBGen0jesRelativePtBBup_branch) NBGen0jesRelativePtBBup_branch->SetAddress(&NBGen0jesRelativePtBBup_);
  NBGen1jesRelativePtBBup_branch = tree->GetBranch("NBGen1jesRelativePtBBup");
  if (NBGen1jesRelativePtBBup_branch) NBGen1jesRelativePtBBup_branch->SetAddress(&NBGen1jesRelativePtBBup_);
  NBGen2jesRelativePtBBup_branch = tree->GetBranch("NBGen2jesRelativePtBBup");
  if (NBGen2jesRelativePtBBup_branch) NBGen2jesRelativePtBBup_branch->SetAddress(&NBGen2jesRelativePtBBup_);
  NBGen3jesRelativePtBBup_branch = tree->GetBranch("NBGen3jesRelativePtBBup");
  if (NBGen3jesRelativePtBBup_branch) NBGen3jesRelativePtBBup_branch->SetAddress(&NBGen3jesRelativePtBBup_);
  NBGen4jesRelativePtBBup_branch = tree->GetBranch("NBGen4jesRelativePtBBup");
  if (NBGen4jesRelativePtBBup_branch) NBGen4jesRelativePtBBup_branch->SetAddress(&NBGen4jesRelativePtBBup_);
  NLGen0jesRelativePtBBup_branch = tree->GetBranch("NLGen0jesRelativePtBBup");
  if (NLGen0jesRelativePtBBup_branch) NLGen0jesRelativePtBBup_branch->SetAddress(&NLGen0jesRelativePtBBup_);
  NLGen1jesRelativePtBBup_branch = tree->GetBranch("NLGen1jesRelativePtBBup");
  if (NLGen1jesRelativePtBBup_branch) NLGen1jesRelativePtBBup_branch->SetAddress(&NLGen1jesRelativePtBBup_);
  NLGen2jesRelativePtBBup_branch = tree->GetBranch("NLGen2jesRelativePtBBup");
  if (NLGen2jesRelativePtBBup_branch) NLGen2jesRelativePtBBup_branch->SetAddress(&NLGen2jesRelativePtBBup_);
  NLGen3jesRelativePtBBup_branch = tree->GetBranch("NLGen3jesRelativePtBBup");
  if (NLGen3jesRelativePtBBup_branch) NLGen3jesRelativePtBBup_branch->SetAddress(&NLGen3jesRelativePtBBup_);
  NLGen4jesRelativePtBBup_branch = tree->GetBranch("NLGen4jesRelativePtBBup");
  if (NLGen4jesRelativePtBBup_branch) NLGen4jesRelativePtBBup_branch->SetAddress(&NLGen4jesRelativePtBBup_);
  NVQGen0jesRelativePtBBup_branch = tree->GetBranch("NVQGen0jesRelativePtBBup");
  if (NVQGen0jesRelativePtBBup_branch) NVQGen0jesRelativePtBBup_branch->SetAddress(&NVQGen0jesRelativePtBBup_);
  NVQGen1jesRelativePtBBup_branch = tree->GetBranch("NVQGen1jesRelativePtBBup");
  if (NVQGen1jesRelativePtBBup_branch) NVQGen1jesRelativePtBBup_branch->SetAddress(&NVQGen1jesRelativePtBBup_);
  NVQGen2jesRelativePtBBup_branch = tree->GetBranch("NVQGen2jesRelativePtBBup");
  if (NVQGen2jesRelativePtBBup_branch) NVQGen2jesRelativePtBBup_branch->SetAddress(&NVQGen2jesRelativePtBBup_);
  NVQGen3jesRelativePtBBup_branch = tree->GetBranch("NVQGen3jesRelativePtBBup");
  if (NVQGen3jesRelativePtBBup_branch) NVQGen3jesRelativePtBBup_branch->SetAddress(&NVQGen3jesRelativePtBBup_);
  NVQGen4jesRelativePtBBup_branch = tree->GetBranch("NVQGen4jesRelativePtBBup");
  if (NVQGen4jesRelativePtBBup_branch) NVQGen4jesRelativePtBBup_branch->SetAddress(&NVQGen4jesRelativePtBBup_);
  NiFJjesRelativePtBBup_branch = tree->GetBranch("NiFJjesRelativePtBBup");
  if (NiFJjesRelativePtBBup_branch) NiFJjesRelativePtBBup_branch->SetAddress(&NiFJjesRelativePtBBup_);
  iVMD0jesRelativePtBBup_branch = tree->GetBranch("iVMD0jesRelativePtBBup");
  if (iVMD0jesRelativePtBBup_branch) iVMD0jesRelativePtBBup_branch->SetAddress(&iVMD0jesRelativePtBBup_);
  iVMD1jesRelativePtBBup_branch = tree->GetBranch("iVMD1jesRelativePtBBup");
  if (iVMD1jesRelativePtBBup_branch) iVMD1jesRelativePtBBup_branch->SetAddress(&iVMD1jesRelativePtBBup_);
  iVMD2jesRelativePtBBup_branch = tree->GetBranch("iVMD2jesRelativePtBBup");
  if (iVMD2jesRelativePtBBup_branch) iVMD2jesRelativePtBBup_branch->SetAddress(&iVMD2jesRelativePtBBup_);
  iVMD3jesRelativePtBBup_branch = tree->GetBranch("iVMD3jesRelativePtBBup");
  if (iVMD3jesRelativePtBBup_branch) iVMD3jesRelativePtBBup_branch->SetAddress(&iVMD3jesRelativePtBBup_);
  iVMD4jesRelativePtBBup_branch = tree->GetBranch("iVMD4jesRelativePtBBup");
  if (iVMD4jesRelativePtBBup_branch) iVMD4jesRelativePtBBup_branch->SetAddress(&iVMD4jesRelativePtBBup_);
  iWMD0jesRelativePtBBup_branch = tree->GetBranch("iWMD0jesRelativePtBBup");
  if (iWMD0jesRelativePtBBup_branch) iWMD0jesRelativePtBBup_branch->SetAddress(&iWMD0jesRelativePtBBup_);
  iWMD1jesRelativePtBBup_branch = tree->GetBranch("iWMD1jesRelativePtBBup");
  if (iWMD1jesRelativePtBBup_branch) iWMD1jesRelativePtBBup_branch->SetAddress(&iWMD1jesRelativePtBBup_);
  iWMD2jesRelativePtBBup_branch = tree->GetBranch("iWMD2jesRelativePtBBup");
  if (iWMD2jesRelativePtBBup_branch) iWMD2jesRelativePtBBup_branch->SetAddress(&iWMD2jesRelativePtBBup_);
  iWMD3jesRelativePtBBup_branch = tree->GetBranch("iWMD3jesRelativePtBBup");
  if (iWMD3jesRelativePtBBup_branch) iWMD3jesRelativePtBBup_branch->SetAddress(&iWMD3jesRelativePtBBup_);
  iWMD4jesRelativePtBBup_branch = tree->GetBranch("iWMD4jesRelativePtBBup");
  if (iWMD4jesRelativePtBBup_branch) iWMD4jesRelativePtBBup_branch->SetAddress(&iWMD4jesRelativePtBBup_);
  NJjesRelativePtBBup_branch = tree->GetBranch("NJjesRelativePtBBup");
  if (NJjesRelativePtBBup_branch) NJjesRelativePtBBup_branch->SetAddress(&NJjesRelativePtBBup_);
  NbLoosejesRelativePtBBup_branch = tree->GetBranch("NbLoosejesRelativePtBBup");
  if (NbLoosejesRelativePtBBup_branch) NbLoosejesRelativePtBBup_branch->SetAddress(&NbLoosejesRelativePtBBup_);
  NbMediumjesRelativePtBBup_branch = tree->GetBranch("NbMediumjesRelativePtBBup");
  if (NbMediumjesRelativePtBBup_branch) NbMediumjesRelativePtBBup_branch->SetAddress(&NbMediumjesRelativePtBBup_);
  NbTightjesRelativePtBBup_branch = tree->GetBranch("NbTightjesRelativePtBBup");
  if (NbTightjesRelativePtBBup_branch) NbTightjesRelativePtBBup_branch->SetAddress(&NbTightjesRelativePtBBup_);
  NoORNbLoosejesRelativePtBBup_branch = tree->GetBranch("NoORNbLoosejesRelativePtBBup");
  if (NoORNbLoosejesRelativePtBBup_branch) NoORNbLoosejesRelativePtBBup_branch->SetAddress(&NoORNbLoosejesRelativePtBBup_);
  NoORNbMediumjesRelativePtBBup_branch = tree->GetBranch("NoORNbMediumjesRelativePtBBup");
  if (NoORNbMediumjesRelativePtBBup_branch) NoORNbMediumjesRelativePtBBup_branch->SetAddress(&NoORNbMediumjesRelativePtBBup_);
  NoORNbTightjesRelativePtBBup_branch = tree->GetBranch("NoORNbTightjesRelativePtBBup");
  if (NoORNbTightjesRelativePtBBup_branch) NoORNbTightjesRelativePtBBup_branch->SetAddress(&NoORNbTightjesRelativePtBBup_);
  NQJGenjesRelativePtBBup_branch = tree->GetBranch("NQJGenjesRelativePtBBup");
  if (NQJGenjesRelativePtBBup_branch) NQJGenjesRelativePtBBup_branch->SetAddress(&NQJGenjesRelativePtBBup_);
  NBJGenjesRelativePtBBup_branch = tree->GetBranch("NBJGenjesRelativePtBBup");
  if (NBJGenjesRelativePtBBup_branch) NBJGenjesRelativePtBBup_branch->SetAddress(&NBJGenjesRelativePtBBup_);
  NLJGenjesRelativePtBBup_branch = tree->GetBranch("NLJGenjesRelativePtBBup");
  if (NLJGenjesRelativePtBBup_branch) NLJGenjesRelativePtBBup_branch->SetAddress(&NLJGenjesRelativePtBBup_);
  MVVXjesRelativePtBBup_branch = tree->GetBranch("MVVXjesRelativePtBBup");
  if (MVVXjesRelativePtBBup_branch) MVVXjesRelativePtBBup_branch->SetAddress(&MVVXjesRelativePtBBup_);
  PtVVXjesRelativePtBBup_branch = tree->GetBranch("PtVVXjesRelativePtBBup");
  if (PtVVXjesRelativePtBBup_branch) PtVVXjesRelativePtBBup_branch->SetAddress(&PtVVXjesRelativePtBBup_);
  HTjesRelativePtBBup_branch = tree->GetBranch("HTjesRelativePtBBup");
  if (HTjesRelativePtBBup_branch) HTjesRelativePtBBup_branch->SetAddress(&HTjesRelativePtBBup_);
  HTJjesRelativePtBBup_branch = tree->GetBranch("HTJjesRelativePtBBup");
  if (HTJjesRelativePtBBup_branch) HTJjesRelativePtBBup_branch->SetAddress(&HTJjesRelativePtBBup_);
  HTFJjesRelativePtBBup_branch = tree->GetBranch("HTFJjesRelativePtBBup");
  if (HTFJjesRelativePtBBup_branch) HTFJjesRelativePtBBup_branch->SetAddress(&HTFJjesRelativePtBBup_);
  SumPtFJjesRelativePtBBup_branch = tree->GetBranch("SumPtFJjesRelativePtBBup");
  if (SumPtFJjesRelativePtBBup_branch) SumPtFJjesRelativePtBBup_branch->SetAddress(&SumPtFJjesRelativePtBBup_);
  SumPtJjesRelativePtBBup_branch = tree->GetBranch("SumPtJjesRelativePtBBup");
  if (SumPtJjesRelativePtBBup_branch) SumPtJjesRelativePtBBup_branch->SetAddress(&SumPtJjesRelativePtBBup_);
  NFJjesRelativePtBBdn_branch = tree->GetBranch("NFJjesRelativePtBBdn");
  if (NFJjesRelativePtBBdn_branch) NFJjesRelativePtBBdn_branch->SetAddress(&NFJjesRelativePtBBdn_);
  VMD0jesRelativePtBBdn_branch = tree->GetBranch("VMD0jesRelativePtBBdn");
  if (VMD0jesRelativePtBBdn_branch) VMD0jesRelativePtBBdn_branch->SetAddress(&VMD0jesRelativePtBBdn_);
  VMD1jesRelativePtBBdn_branch = tree->GetBranch("VMD1jesRelativePtBBdn");
  if (VMD1jesRelativePtBBdn_branch) VMD1jesRelativePtBBdn_branch->SetAddress(&VMD1jesRelativePtBBdn_);
  VMD2jesRelativePtBBdn_branch = tree->GetBranch("VMD2jesRelativePtBBdn");
  if (VMD2jesRelativePtBBdn_branch) VMD2jesRelativePtBBdn_branch->SetAddress(&VMD2jesRelativePtBBdn_);
  VMD3jesRelativePtBBdn_branch = tree->GetBranch("VMD3jesRelativePtBBdn");
  if (VMD3jesRelativePtBBdn_branch) VMD3jesRelativePtBBdn_branch->SetAddress(&VMD3jesRelativePtBBdn_);
  VMD4jesRelativePtBBdn_branch = tree->GetBranch("VMD4jesRelativePtBBdn");
  if (VMD4jesRelativePtBBdn_branch) VMD4jesRelativePtBBdn_branch->SetAddress(&VMD4jesRelativePtBBdn_);
  WMD0jesRelativePtBBdn_branch = tree->GetBranch("WMD0jesRelativePtBBdn");
  if (WMD0jesRelativePtBBdn_branch) WMD0jesRelativePtBBdn_branch->SetAddress(&WMD0jesRelativePtBBdn_);
  WMD1jesRelativePtBBdn_branch = tree->GetBranch("WMD1jesRelativePtBBdn");
  if (WMD1jesRelativePtBBdn_branch) WMD1jesRelativePtBBdn_branch->SetAddress(&WMD1jesRelativePtBBdn_);
  WMD2jesRelativePtBBdn_branch = tree->GetBranch("WMD2jesRelativePtBBdn");
  if (WMD2jesRelativePtBBdn_branch) WMD2jesRelativePtBBdn_branch->SetAddress(&WMD2jesRelativePtBBdn_);
  WMD3jesRelativePtBBdn_branch = tree->GetBranch("WMD3jesRelativePtBBdn");
  if (WMD3jesRelativePtBBdn_branch) WMD3jesRelativePtBBdn_branch->SetAddress(&WMD3jesRelativePtBBdn_);
  WMD4jesRelativePtBBdn_branch = tree->GetBranch("WMD4jesRelativePtBBdn");
  if (WMD4jesRelativePtBBdn_branch) WMD4jesRelativePtBBdn_branch->SetAddress(&WMD4jesRelativePtBBdn_);
  NQGen0jesRelativePtBBdn_branch = tree->GetBranch("NQGen0jesRelativePtBBdn");
  if (NQGen0jesRelativePtBBdn_branch) NQGen0jesRelativePtBBdn_branch->SetAddress(&NQGen0jesRelativePtBBdn_);
  NQGen1jesRelativePtBBdn_branch = tree->GetBranch("NQGen1jesRelativePtBBdn");
  if (NQGen1jesRelativePtBBdn_branch) NQGen1jesRelativePtBBdn_branch->SetAddress(&NQGen1jesRelativePtBBdn_);
  NQGen2jesRelativePtBBdn_branch = tree->GetBranch("NQGen2jesRelativePtBBdn");
  if (NQGen2jesRelativePtBBdn_branch) NQGen2jesRelativePtBBdn_branch->SetAddress(&NQGen2jesRelativePtBBdn_);
  NQGen3jesRelativePtBBdn_branch = tree->GetBranch("NQGen3jesRelativePtBBdn");
  if (NQGen3jesRelativePtBBdn_branch) NQGen3jesRelativePtBBdn_branch->SetAddress(&NQGen3jesRelativePtBBdn_);
  NQGen4jesRelativePtBBdn_branch = tree->GetBranch("NQGen4jesRelativePtBBdn");
  if (NQGen4jesRelativePtBBdn_branch) NQGen4jesRelativePtBBdn_branch->SetAddress(&NQGen4jesRelativePtBBdn_);
  NBGen0jesRelativePtBBdn_branch = tree->GetBranch("NBGen0jesRelativePtBBdn");
  if (NBGen0jesRelativePtBBdn_branch) NBGen0jesRelativePtBBdn_branch->SetAddress(&NBGen0jesRelativePtBBdn_);
  NBGen1jesRelativePtBBdn_branch = tree->GetBranch("NBGen1jesRelativePtBBdn");
  if (NBGen1jesRelativePtBBdn_branch) NBGen1jesRelativePtBBdn_branch->SetAddress(&NBGen1jesRelativePtBBdn_);
  NBGen2jesRelativePtBBdn_branch = tree->GetBranch("NBGen2jesRelativePtBBdn");
  if (NBGen2jesRelativePtBBdn_branch) NBGen2jesRelativePtBBdn_branch->SetAddress(&NBGen2jesRelativePtBBdn_);
  NBGen3jesRelativePtBBdn_branch = tree->GetBranch("NBGen3jesRelativePtBBdn");
  if (NBGen3jesRelativePtBBdn_branch) NBGen3jesRelativePtBBdn_branch->SetAddress(&NBGen3jesRelativePtBBdn_);
  NBGen4jesRelativePtBBdn_branch = tree->GetBranch("NBGen4jesRelativePtBBdn");
  if (NBGen4jesRelativePtBBdn_branch) NBGen4jesRelativePtBBdn_branch->SetAddress(&NBGen4jesRelativePtBBdn_);
  NLGen0jesRelativePtBBdn_branch = tree->GetBranch("NLGen0jesRelativePtBBdn");
  if (NLGen0jesRelativePtBBdn_branch) NLGen0jesRelativePtBBdn_branch->SetAddress(&NLGen0jesRelativePtBBdn_);
  NLGen1jesRelativePtBBdn_branch = tree->GetBranch("NLGen1jesRelativePtBBdn");
  if (NLGen1jesRelativePtBBdn_branch) NLGen1jesRelativePtBBdn_branch->SetAddress(&NLGen1jesRelativePtBBdn_);
  NLGen2jesRelativePtBBdn_branch = tree->GetBranch("NLGen2jesRelativePtBBdn");
  if (NLGen2jesRelativePtBBdn_branch) NLGen2jesRelativePtBBdn_branch->SetAddress(&NLGen2jesRelativePtBBdn_);
  NLGen3jesRelativePtBBdn_branch = tree->GetBranch("NLGen3jesRelativePtBBdn");
  if (NLGen3jesRelativePtBBdn_branch) NLGen3jesRelativePtBBdn_branch->SetAddress(&NLGen3jesRelativePtBBdn_);
  NLGen4jesRelativePtBBdn_branch = tree->GetBranch("NLGen4jesRelativePtBBdn");
  if (NLGen4jesRelativePtBBdn_branch) NLGen4jesRelativePtBBdn_branch->SetAddress(&NLGen4jesRelativePtBBdn_);
  NVQGen0jesRelativePtBBdn_branch = tree->GetBranch("NVQGen0jesRelativePtBBdn");
  if (NVQGen0jesRelativePtBBdn_branch) NVQGen0jesRelativePtBBdn_branch->SetAddress(&NVQGen0jesRelativePtBBdn_);
  NVQGen1jesRelativePtBBdn_branch = tree->GetBranch("NVQGen1jesRelativePtBBdn");
  if (NVQGen1jesRelativePtBBdn_branch) NVQGen1jesRelativePtBBdn_branch->SetAddress(&NVQGen1jesRelativePtBBdn_);
  NVQGen2jesRelativePtBBdn_branch = tree->GetBranch("NVQGen2jesRelativePtBBdn");
  if (NVQGen2jesRelativePtBBdn_branch) NVQGen2jesRelativePtBBdn_branch->SetAddress(&NVQGen2jesRelativePtBBdn_);
  NVQGen3jesRelativePtBBdn_branch = tree->GetBranch("NVQGen3jesRelativePtBBdn");
  if (NVQGen3jesRelativePtBBdn_branch) NVQGen3jesRelativePtBBdn_branch->SetAddress(&NVQGen3jesRelativePtBBdn_);
  NVQGen4jesRelativePtBBdn_branch = tree->GetBranch("NVQGen4jesRelativePtBBdn");
  if (NVQGen4jesRelativePtBBdn_branch) NVQGen4jesRelativePtBBdn_branch->SetAddress(&NVQGen4jesRelativePtBBdn_);
  NiFJjesRelativePtBBdn_branch = tree->GetBranch("NiFJjesRelativePtBBdn");
  if (NiFJjesRelativePtBBdn_branch) NiFJjesRelativePtBBdn_branch->SetAddress(&NiFJjesRelativePtBBdn_);
  iVMD0jesRelativePtBBdn_branch = tree->GetBranch("iVMD0jesRelativePtBBdn");
  if (iVMD0jesRelativePtBBdn_branch) iVMD0jesRelativePtBBdn_branch->SetAddress(&iVMD0jesRelativePtBBdn_);
  iVMD1jesRelativePtBBdn_branch = tree->GetBranch("iVMD1jesRelativePtBBdn");
  if (iVMD1jesRelativePtBBdn_branch) iVMD1jesRelativePtBBdn_branch->SetAddress(&iVMD1jesRelativePtBBdn_);
  iVMD2jesRelativePtBBdn_branch = tree->GetBranch("iVMD2jesRelativePtBBdn");
  if (iVMD2jesRelativePtBBdn_branch) iVMD2jesRelativePtBBdn_branch->SetAddress(&iVMD2jesRelativePtBBdn_);
  iVMD3jesRelativePtBBdn_branch = tree->GetBranch("iVMD3jesRelativePtBBdn");
  if (iVMD3jesRelativePtBBdn_branch) iVMD3jesRelativePtBBdn_branch->SetAddress(&iVMD3jesRelativePtBBdn_);
  iVMD4jesRelativePtBBdn_branch = tree->GetBranch("iVMD4jesRelativePtBBdn");
  if (iVMD4jesRelativePtBBdn_branch) iVMD4jesRelativePtBBdn_branch->SetAddress(&iVMD4jesRelativePtBBdn_);
  iWMD0jesRelativePtBBdn_branch = tree->GetBranch("iWMD0jesRelativePtBBdn");
  if (iWMD0jesRelativePtBBdn_branch) iWMD0jesRelativePtBBdn_branch->SetAddress(&iWMD0jesRelativePtBBdn_);
  iWMD1jesRelativePtBBdn_branch = tree->GetBranch("iWMD1jesRelativePtBBdn");
  if (iWMD1jesRelativePtBBdn_branch) iWMD1jesRelativePtBBdn_branch->SetAddress(&iWMD1jesRelativePtBBdn_);
  iWMD2jesRelativePtBBdn_branch = tree->GetBranch("iWMD2jesRelativePtBBdn");
  if (iWMD2jesRelativePtBBdn_branch) iWMD2jesRelativePtBBdn_branch->SetAddress(&iWMD2jesRelativePtBBdn_);
  iWMD3jesRelativePtBBdn_branch = tree->GetBranch("iWMD3jesRelativePtBBdn");
  if (iWMD3jesRelativePtBBdn_branch) iWMD3jesRelativePtBBdn_branch->SetAddress(&iWMD3jesRelativePtBBdn_);
  iWMD4jesRelativePtBBdn_branch = tree->GetBranch("iWMD4jesRelativePtBBdn");
  if (iWMD4jesRelativePtBBdn_branch) iWMD4jesRelativePtBBdn_branch->SetAddress(&iWMD4jesRelativePtBBdn_);
  NJjesRelativePtBBdn_branch = tree->GetBranch("NJjesRelativePtBBdn");
  if (NJjesRelativePtBBdn_branch) NJjesRelativePtBBdn_branch->SetAddress(&NJjesRelativePtBBdn_);
  NbLoosejesRelativePtBBdn_branch = tree->GetBranch("NbLoosejesRelativePtBBdn");
  if (NbLoosejesRelativePtBBdn_branch) NbLoosejesRelativePtBBdn_branch->SetAddress(&NbLoosejesRelativePtBBdn_);
  NbMediumjesRelativePtBBdn_branch = tree->GetBranch("NbMediumjesRelativePtBBdn");
  if (NbMediumjesRelativePtBBdn_branch) NbMediumjesRelativePtBBdn_branch->SetAddress(&NbMediumjesRelativePtBBdn_);
  NbTightjesRelativePtBBdn_branch = tree->GetBranch("NbTightjesRelativePtBBdn");
  if (NbTightjesRelativePtBBdn_branch) NbTightjesRelativePtBBdn_branch->SetAddress(&NbTightjesRelativePtBBdn_);
  NoORNbLoosejesRelativePtBBdn_branch = tree->GetBranch("NoORNbLoosejesRelativePtBBdn");
  if (NoORNbLoosejesRelativePtBBdn_branch) NoORNbLoosejesRelativePtBBdn_branch->SetAddress(&NoORNbLoosejesRelativePtBBdn_);
  NoORNbMediumjesRelativePtBBdn_branch = tree->GetBranch("NoORNbMediumjesRelativePtBBdn");
  if (NoORNbMediumjesRelativePtBBdn_branch) NoORNbMediumjesRelativePtBBdn_branch->SetAddress(&NoORNbMediumjesRelativePtBBdn_);
  NoORNbTightjesRelativePtBBdn_branch = tree->GetBranch("NoORNbTightjesRelativePtBBdn");
  if (NoORNbTightjesRelativePtBBdn_branch) NoORNbTightjesRelativePtBBdn_branch->SetAddress(&NoORNbTightjesRelativePtBBdn_);
  NQJGenjesRelativePtBBdn_branch = tree->GetBranch("NQJGenjesRelativePtBBdn");
  if (NQJGenjesRelativePtBBdn_branch) NQJGenjesRelativePtBBdn_branch->SetAddress(&NQJGenjesRelativePtBBdn_);
  NBJGenjesRelativePtBBdn_branch = tree->GetBranch("NBJGenjesRelativePtBBdn");
  if (NBJGenjesRelativePtBBdn_branch) NBJGenjesRelativePtBBdn_branch->SetAddress(&NBJGenjesRelativePtBBdn_);
  NLJGenjesRelativePtBBdn_branch = tree->GetBranch("NLJGenjesRelativePtBBdn");
  if (NLJGenjesRelativePtBBdn_branch) NLJGenjesRelativePtBBdn_branch->SetAddress(&NLJGenjesRelativePtBBdn_);
  MVVXjesRelativePtBBdn_branch = tree->GetBranch("MVVXjesRelativePtBBdn");
  if (MVVXjesRelativePtBBdn_branch) MVVXjesRelativePtBBdn_branch->SetAddress(&MVVXjesRelativePtBBdn_);
  PtVVXjesRelativePtBBdn_branch = tree->GetBranch("PtVVXjesRelativePtBBdn");
  if (PtVVXjesRelativePtBBdn_branch) PtVVXjesRelativePtBBdn_branch->SetAddress(&PtVVXjesRelativePtBBdn_);
  HTjesRelativePtBBdn_branch = tree->GetBranch("HTjesRelativePtBBdn");
  if (HTjesRelativePtBBdn_branch) HTjesRelativePtBBdn_branch->SetAddress(&HTjesRelativePtBBdn_);
  HTJjesRelativePtBBdn_branch = tree->GetBranch("HTJjesRelativePtBBdn");
  if (HTJjesRelativePtBBdn_branch) HTJjesRelativePtBBdn_branch->SetAddress(&HTJjesRelativePtBBdn_);
  HTFJjesRelativePtBBdn_branch = tree->GetBranch("HTFJjesRelativePtBBdn");
  if (HTFJjesRelativePtBBdn_branch) HTFJjesRelativePtBBdn_branch->SetAddress(&HTFJjesRelativePtBBdn_);
  SumPtFJjesRelativePtBBdn_branch = tree->GetBranch("SumPtFJjesRelativePtBBdn");
  if (SumPtFJjesRelativePtBBdn_branch) SumPtFJjesRelativePtBBdn_branch->SetAddress(&SumPtFJjesRelativePtBBdn_);
  SumPtJjesRelativePtBBdn_branch = tree->GetBranch("SumPtJjesRelativePtBBdn");
  if (SumPtJjesRelativePtBBdn_branch) SumPtJjesRelativePtBBdn_branch->SetAddress(&SumPtJjesRelativePtBBdn_);
  NFJjesRelativePtEC1up_branch = tree->GetBranch("NFJjesRelativePtEC1up");
  if (NFJjesRelativePtEC1up_branch) NFJjesRelativePtEC1up_branch->SetAddress(&NFJjesRelativePtEC1up_);
  VMD0jesRelativePtEC1up_branch = tree->GetBranch("VMD0jesRelativePtEC1up");
  if (VMD0jesRelativePtEC1up_branch) VMD0jesRelativePtEC1up_branch->SetAddress(&VMD0jesRelativePtEC1up_);
  VMD1jesRelativePtEC1up_branch = tree->GetBranch("VMD1jesRelativePtEC1up");
  if (VMD1jesRelativePtEC1up_branch) VMD1jesRelativePtEC1up_branch->SetAddress(&VMD1jesRelativePtEC1up_);
  VMD2jesRelativePtEC1up_branch = tree->GetBranch("VMD2jesRelativePtEC1up");
  if (VMD2jesRelativePtEC1up_branch) VMD2jesRelativePtEC1up_branch->SetAddress(&VMD2jesRelativePtEC1up_);
  VMD3jesRelativePtEC1up_branch = tree->GetBranch("VMD3jesRelativePtEC1up");
  if (VMD3jesRelativePtEC1up_branch) VMD3jesRelativePtEC1up_branch->SetAddress(&VMD3jesRelativePtEC1up_);
  VMD4jesRelativePtEC1up_branch = tree->GetBranch("VMD4jesRelativePtEC1up");
  if (VMD4jesRelativePtEC1up_branch) VMD4jesRelativePtEC1up_branch->SetAddress(&VMD4jesRelativePtEC1up_);
  WMD0jesRelativePtEC1up_branch = tree->GetBranch("WMD0jesRelativePtEC1up");
  if (WMD0jesRelativePtEC1up_branch) WMD0jesRelativePtEC1up_branch->SetAddress(&WMD0jesRelativePtEC1up_);
  WMD1jesRelativePtEC1up_branch = tree->GetBranch("WMD1jesRelativePtEC1up");
  if (WMD1jesRelativePtEC1up_branch) WMD1jesRelativePtEC1up_branch->SetAddress(&WMD1jesRelativePtEC1up_);
  WMD2jesRelativePtEC1up_branch = tree->GetBranch("WMD2jesRelativePtEC1up");
  if (WMD2jesRelativePtEC1up_branch) WMD2jesRelativePtEC1up_branch->SetAddress(&WMD2jesRelativePtEC1up_);
  WMD3jesRelativePtEC1up_branch = tree->GetBranch("WMD3jesRelativePtEC1up");
  if (WMD3jesRelativePtEC1up_branch) WMD3jesRelativePtEC1up_branch->SetAddress(&WMD3jesRelativePtEC1up_);
  WMD4jesRelativePtEC1up_branch = tree->GetBranch("WMD4jesRelativePtEC1up");
  if (WMD4jesRelativePtEC1up_branch) WMD4jesRelativePtEC1up_branch->SetAddress(&WMD4jesRelativePtEC1up_);
  NQGen0jesRelativePtEC1up_branch = tree->GetBranch("NQGen0jesRelativePtEC1up");
  if (NQGen0jesRelativePtEC1up_branch) NQGen0jesRelativePtEC1up_branch->SetAddress(&NQGen0jesRelativePtEC1up_);
  NQGen1jesRelativePtEC1up_branch = tree->GetBranch("NQGen1jesRelativePtEC1up");
  if (NQGen1jesRelativePtEC1up_branch) NQGen1jesRelativePtEC1up_branch->SetAddress(&NQGen1jesRelativePtEC1up_);
  NQGen2jesRelativePtEC1up_branch = tree->GetBranch("NQGen2jesRelativePtEC1up");
  if (NQGen2jesRelativePtEC1up_branch) NQGen2jesRelativePtEC1up_branch->SetAddress(&NQGen2jesRelativePtEC1up_);
  NQGen3jesRelativePtEC1up_branch = tree->GetBranch("NQGen3jesRelativePtEC1up");
  if (NQGen3jesRelativePtEC1up_branch) NQGen3jesRelativePtEC1up_branch->SetAddress(&NQGen3jesRelativePtEC1up_);
  NQGen4jesRelativePtEC1up_branch = tree->GetBranch("NQGen4jesRelativePtEC1up");
  if (NQGen4jesRelativePtEC1up_branch) NQGen4jesRelativePtEC1up_branch->SetAddress(&NQGen4jesRelativePtEC1up_);
  NBGen0jesRelativePtEC1up_branch = tree->GetBranch("NBGen0jesRelativePtEC1up");
  if (NBGen0jesRelativePtEC1up_branch) NBGen0jesRelativePtEC1up_branch->SetAddress(&NBGen0jesRelativePtEC1up_);
  NBGen1jesRelativePtEC1up_branch = tree->GetBranch("NBGen1jesRelativePtEC1up");
  if (NBGen1jesRelativePtEC1up_branch) NBGen1jesRelativePtEC1up_branch->SetAddress(&NBGen1jesRelativePtEC1up_);
  NBGen2jesRelativePtEC1up_branch = tree->GetBranch("NBGen2jesRelativePtEC1up");
  if (NBGen2jesRelativePtEC1up_branch) NBGen2jesRelativePtEC1up_branch->SetAddress(&NBGen2jesRelativePtEC1up_);
  NBGen3jesRelativePtEC1up_branch = tree->GetBranch("NBGen3jesRelativePtEC1up");
  if (NBGen3jesRelativePtEC1up_branch) NBGen3jesRelativePtEC1up_branch->SetAddress(&NBGen3jesRelativePtEC1up_);
  NBGen4jesRelativePtEC1up_branch = tree->GetBranch("NBGen4jesRelativePtEC1up");
  if (NBGen4jesRelativePtEC1up_branch) NBGen4jesRelativePtEC1up_branch->SetAddress(&NBGen4jesRelativePtEC1up_);
  NLGen0jesRelativePtEC1up_branch = tree->GetBranch("NLGen0jesRelativePtEC1up");
  if (NLGen0jesRelativePtEC1up_branch) NLGen0jesRelativePtEC1up_branch->SetAddress(&NLGen0jesRelativePtEC1up_);
  NLGen1jesRelativePtEC1up_branch = tree->GetBranch("NLGen1jesRelativePtEC1up");
  if (NLGen1jesRelativePtEC1up_branch) NLGen1jesRelativePtEC1up_branch->SetAddress(&NLGen1jesRelativePtEC1up_);
  NLGen2jesRelativePtEC1up_branch = tree->GetBranch("NLGen2jesRelativePtEC1up");
  if (NLGen2jesRelativePtEC1up_branch) NLGen2jesRelativePtEC1up_branch->SetAddress(&NLGen2jesRelativePtEC1up_);
  NLGen3jesRelativePtEC1up_branch = tree->GetBranch("NLGen3jesRelativePtEC1up");
  if (NLGen3jesRelativePtEC1up_branch) NLGen3jesRelativePtEC1up_branch->SetAddress(&NLGen3jesRelativePtEC1up_);
  NLGen4jesRelativePtEC1up_branch = tree->GetBranch("NLGen4jesRelativePtEC1up");
  if (NLGen4jesRelativePtEC1up_branch) NLGen4jesRelativePtEC1up_branch->SetAddress(&NLGen4jesRelativePtEC1up_);
  NVQGen0jesRelativePtEC1up_branch = tree->GetBranch("NVQGen0jesRelativePtEC1up");
  if (NVQGen0jesRelativePtEC1up_branch) NVQGen0jesRelativePtEC1up_branch->SetAddress(&NVQGen0jesRelativePtEC1up_);
  NVQGen1jesRelativePtEC1up_branch = tree->GetBranch("NVQGen1jesRelativePtEC1up");
  if (NVQGen1jesRelativePtEC1up_branch) NVQGen1jesRelativePtEC1up_branch->SetAddress(&NVQGen1jesRelativePtEC1up_);
  NVQGen2jesRelativePtEC1up_branch = tree->GetBranch("NVQGen2jesRelativePtEC1up");
  if (NVQGen2jesRelativePtEC1up_branch) NVQGen2jesRelativePtEC1up_branch->SetAddress(&NVQGen2jesRelativePtEC1up_);
  NVQGen3jesRelativePtEC1up_branch = tree->GetBranch("NVQGen3jesRelativePtEC1up");
  if (NVQGen3jesRelativePtEC1up_branch) NVQGen3jesRelativePtEC1up_branch->SetAddress(&NVQGen3jesRelativePtEC1up_);
  NVQGen4jesRelativePtEC1up_branch = tree->GetBranch("NVQGen4jesRelativePtEC1up");
  if (NVQGen4jesRelativePtEC1up_branch) NVQGen4jesRelativePtEC1up_branch->SetAddress(&NVQGen4jesRelativePtEC1up_);
  NiFJjesRelativePtEC1up_branch = tree->GetBranch("NiFJjesRelativePtEC1up");
  if (NiFJjesRelativePtEC1up_branch) NiFJjesRelativePtEC1up_branch->SetAddress(&NiFJjesRelativePtEC1up_);
  iVMD0jesRelativePtEC1up_branch = tree->GetBranch("iVMD0jesRelativePtEC1up");
  if (iVMD0jesRelativePtEC1up_branch) iVMD0jesRelativePtEC1up_branch->SetAddress(&iVMD0jesRelativePtEC1up_);
  iVMD1jesRelativePtEC1up_branch = tree->GetBranch("iVMD1jesRelativePtEC1up");
  if (iVMD1jesRelativePtEC1up_branch) iVMD1jesRelativePtEC1up_branch->SetAddress(&iVMD1jesRelativePtEC1up_);
  iVMD2jesRelativePtEC1up_branch = tree->GetBranch("iVMD2jesRelativePtEC1up");
  if (iVMD2jesRelativePtEC1up_branch) iVMD2jesRelativePtEC1up_branch->SetAddress(&iVMD2jesRelativePtEC1up_);
  iVMD3jesRelativePtEC1up_branch = tree->GetBranch("iVMD3jesRelativePtEC1up");
  if (iVMD3jesRelativePtEC1up_branch) iVMD3jesRelativePtEC1up_branch->SetAddress(&iVMD3jesRelativePtEC1up_);
  iVMD4jesRelativePtEC1up_branch = tree->GetBranch("iVMD4jesRelativePtEC1up");
  if (iVMD4jesRelativePtEC1up_branch) iVMD4jesRelativePtEC1up_branch->SetAddress(&iVMD4jesRelativePtEC1up_);
  iWMD0jesRelativePtEC1up_branch = tree->GetBranch("iWMD0jesRelativePtEC1up");
  if (iWMD0jesRelativePtEC1up_branch) iWMD0jesRelativePtEC1up_branch->SetAddress(&iWMD0jesRelativePtEC1up_);
  iWMD1jesRelativePtEC1up_branch = tree->GetBranch("iWMD1jesRelativePtEC1up");
  if (iWMD1jesRelativePtEC1up_branch) iWMD1jesRelativePtEC1up_branch->SetAddress(&iWMD1jesRelativePtEC1up_);
  iWMD2jesRelativePtEC1up_branch = tree->GetBranch("iWMD2jesRelativePtEC1up");
  if (iWMD2jesRelativePtEC1up_branch) iWMD2jesRelativePtEC1up_branch->SetAddress(&iWMD2jesRelativePtEC1up_);
  iWMD3jesRelativePtEC1up_branch = tree->GetBranch("iWMD3jesRelativePtEC1up");
  if (iWMD3jesRelativePtEC1up_branch) iWMD3jesRelativePtEC1up_branch->SetAddress(&iWMD3jesRelativePtEC1up_);
  iWMD4jesRelativePtEC1up_branch = tree->GetBranch("iWMD4jesRelativePtEC1up");
  if (iWMD4jesRelativePtEC1up_branch) iWMD4jesRelativePtEC1up_branch->SetAddress(&iWMD4jesRelativePtEC1up_);
  NJjesRelativePtEC1up_branch = tree->GetBranch("NJjesRelativePtEC1up");
  if (NJjesRelativePtEC1up_branch) NJjesRelativePtEC1up_branch->SetAddress(&NJjesRelativePtEC1up_);
  NbLoosejesRelativePtEC1up_branch = tree->GetBranch("NbLoosejesRelativePtEC1up");
  if (NbLoosejesRelativePtEC1up_branch) NbLoosejesRelativePtEC1up_branch->SetAddress(&NbLoosejesRelativePtEC1up_);
  NbMediumjesRelativePtEC1up_branch = tree->GetBranch("NbMediumjesRelativePtEC1up");
  if (NbMediumjesRelativePtEC1up_branch) NbMediumjesRelativePtEC1up_branch->SetAddress(&NbMediumjesRelativePtEC1up_);
  NbTightjesRelativePtEC1up_branch = tree->GetBranch("NbTightjesRelativePtEC1up");
  if (NbTightjesRelativePtEC1up_branch) NbTightjesRelativePtEC1up_branch->SetAddress(&NbTightjesRelativePtEC1up_);
  NoORNbLoosejesRelativePtEC1up_branch = tree->GetBranch("NoORNbLoosejesRelativePtEC1up");
  if (NoORNbLoosejesRelativePtEC1up_branch) NoORNbLoosejesRelativePtEC1up_branch->SetAddress(&NoORNbLoosejesRelativePtEC1up_);
  NoORNbMediumjesRelativePtEC1up_branch = tree->GetBranch("NoORNbMediumjesRelativePtEC1up");
  if (NoORNbMediumjesRelativePtEC1up_branch) NoORNbMediumjesRelativePtEC1up_branch->SetAddress(&NoORNbMediumjesRelativePtEC1up_);
  NoORNbTightjesRelativePtEC1up_branch = tree->GetBranch("NoORNbTightjesRelativePtEC1up");
  if (NoORNbTightjesRelativePtEC1up_branch) NoORNbTightjesRelativePtEC1up_branch->SetAddress(&NoORNbTightjesRelativePtEC1up_);
  NQJGenjesRelativePtEC1up_branch = tree->GetBranch("NQJGenjesRelativePtEC1up");
  if (NQJGenjesRelativePtEC1up_branch) NQJGenjesRelativePtEC1up_branch->SetAddress(&NQJGenjesRelativePtEC1up_);
  NBJGenjesRelativePtEC1up_branch = tree->GetBranch("NBJGenjesRelativePtEC1up");
  if (NBJGenjesRelativePtEC1up_branch) NBJGenjesRelativePtEC1up_branch->SetAddress(&NBJGenjesRelativePtEC1up_);
  NLJGenjesRelativePtEC1up_branch = tree->GetBranch("NLJGenjesRelativePtEC1up");
  if (NLJGenjesRelativePtEC1up_branch) NLJGenjesRelativePtEC1up_branch->SetAddress(&NLJGenjesRelativePtEC1up_);
  MVVXjesRelativePtEC1up_branch = tree->GetBranch("MVVXjesRelativePtEC1up");
  if (MVVXjesRelativePtEC1up_branch) MVVXjesRelativePtEC1up_branch->SetAddress(&MVVXjesRelativePtEC1up_);
  PtVVXjesRelativePtEC1up_branch = tree->GetBranch("PtVVXjesRelativePtEC1up");
  if (PtVVXjesRelativePtEC1up_branch) PtVVXjesRelativePtEC1up_branch->SetAddress(&PtVVXjesRelativePtEC1up_);
  HTjesRelativePtEC1up_branch = tree->GetBranch("HTjesRelativePtEC1up");
  if (HTjesRelativePtEC1up_branch) HTjesRelativePtEC1up_branch->SetAddress(&HTjesRelativePtEC1up_);
  HTJjesRelativePtEC1up_branch = tree->GetBranch("HTJjesRelativePtEC1up");
  if (HTJjesRelativePtEC1up_branch) HTJjesRelativePtEC1up_branch->SetAddress(&HTJjesRelativePtEC1up_);
  HTFJjesRelativePtEC1up_branch = tree->GetBranch("HTFJjesRelativePtEC1up");
  if (HTFJjesRelativePtEC1up_branch) HTFJjesRelativePtEC1up_branch->SetAddress(&HTFJjesRelativePtEC1up_);
  SumPtFJjesRelativePtEC1up_branch = tree->GetBranch("SumPtFJjesRelativePtEC1up");
  if (SumPtFJjesRelativePtEC1up_branch) SumPtFJjesRelativePtEC1up_branch->SetAddress(&SumPtFJjesRelativePtEC1up_);
  SumPtJjesRelativePtEC1up_branch = tree->GetBranch("SumPtJjesRelativePtEC1up");
  if (SumPtJjesRelativePtEC1up_branch) SumPtJjesRelativePtEC1up_branch->SetAddress(&SumPtJjesRelativePtEC1up_);
  NFJjesRelativePtEC1dn_branch = tree->GetBranch("NFJjesRelativePtEC1dn");
  if (NFJjesRelativePtEC1dn_branch) NFJjesRelativePtEC1dn_branch->SetAddress(&NFJjesRelativePtEC1dn_);
  VMD0jesRelativePtEC1dn_branch = tree->GetBranch("VMD0jesRelativePtEC1dn");
  if (VMD0jesRelativePtEC1dn_branch) VMD0jesRelativePtEC1dn_branch->SetAddress(&VMD0jesRelativePtEC1dn_);
  VMD1jesRelativePtEC1dn_branch = tree->GetBranch("VMD1jesRelativePtEC1dn");
  if (VMD1jesRelativePtEC1dn_branch) VMD1jesRelativePtEC1dn_branch->SetAddress(&VMD1jesRelativePtEC1dn_);
  VMD2jesRelativePtEC1dn_branch = tree->GetBranch("VMD2jesRelativePtEC1dn");
  if (VMD2jesRelativePtEC1dn_branch) VMD2jesRelativePtEC1dn_branch->SetAddress(&VMD2jesRelativePtEC1dn_);
  VMD3jesRelativePtEC1dn_branch = tree->GetBranch("VMD3jesRelativePtEC1dn");
  if (VMD3jesRelativePtEC1dn_branch) VMD3jesRelativePtEC1dn_branch->SetAddress(&VMD3jesRelativePtEC1dn_);
  VMD4jesRelativePtEC1dn_branch = tree->GetBranch("VMD4jesRelativePtEC1dn");
  if (VMD4jesRelativePtEC1dn_branch) VMD4jesRelativePtEC1dn_branch->SetAddress(&VMD4jesRelativePtEC1dn_);
  WMD0jesRelativePtEC1dn_branch = tree->GetBranch("WMD0jesRelativePtEC1dn");
  if (WMD0jesRelativePtEC1dn_branch) WMD0jesRelativePtEC1dn_branch->SetAddress(&WMD0jesRelativePtEC1dn_);
  WMD1jesRelativePtEC1dn_branch = tree->GetBranch("WMD1jesRelativePtEC1dn");
  if (WMD1jesRelativePtEC1dn_branch) WMD1jesRelativePtEC1dn_branch->SetAddress(&WMD1jesRelativePtEC1dn_);
  WMD2jesRelativePtEC1dn_branch = tree->GetBranch("WMD2jesRelativePtEC1dn");
  if (WMD2jesRelativePtEC1dn_branch) WMD2jesRelativePtEC1dn_branch->SetAddress(&WMD2jesRelativePtEC1dn_);
  WMD3jesRelativePtEC1dn_branch = tree->GetBranch("WMD3jesRelativePtEC1dn");
  if (WMD3jesRelativePtEC1dn_branch) WMD3jesRelativePtEC1dn_branch->SetAddress(&WMD3jesRelativePtEC1dn_);
  WMD4jesRelativePtEC1dn_branch = tree->GetBranch("WMD4jesRelativePtEC1dn");
  if (WMD4jesRelativePtEC1dn_branch) WMD4jesRelativePtEC1dn_branch->SetAddress(&WMD4jesRelativePtEC1dn_);
  NQGen0jesRelativePtEC1dn_branch = tree->GetBranch("NQGen0jesRelativePtEC1dn");
  if (NQGen0jesRelativePtEC1dn_branch) NQGen0jesRelativePtEC1dn_branch->SetAddress(&NQGen0jesRelativePtEC1dn_);
  NQGen1jesRelativePtEC1dn_branch = tree->GetBranch("NQGen1jesRelativePtEC1dn");
  if (NQGen1jesRelativePtEC1dn_branch) NQGen1jesRelativePtEC1dn_branch->SetAddress(&NQGen1jesRelativePtEC1dn_);
  NQGen2jesRelativePtEC1dn_branch = tree->GetBranch("NQGen2jesRelativePtEC1dn");
  if (NQGen2jesRelativePtEC1dn_branch) NQGen2jesRelativePtEC1dn_branch->SetAddress(&NQGen2jesRelativePtEC1dn_);
  NQGen3jesRelativePtEC1dn_branch = tree->GetBranch("NQGen3jesRelativePtEC1dn");
  if (NQGen3jesRelativePtEC1dn_branch) NQGen3jesRelativePtEC1dn_branch->SetAddress(&NQGen3jesRelativePtEC1dn_);
  NQGen4jesRelativePtEC1dn_branch = tree->GetBranch("NQGen4jesRelativePtEC1dn");
  if (NQGen4jesRelativePtEC1dn_branch) NQGen4jesRelativePtEC1dn_branch->SetAddress(&NQGen4jesRelativePtEC1dn_);
  NBGen0jesRelativePtEC1dn_branch = tree->GetBranch("NBGen0jesRelativePtEC1dn");
  if (NBGen0jesRelativePtEC1dn_branch) NBGen0jesRelativePtEC1dn_branch->SetAddress(&NBGen0jesRelativePtEC1dn_);
  NBGen1jesRelativePtEC1dn_branch = tree->GetBranch("NBGen1jesRelativePtEC1dn");
  if (NBGen1jesRelativePtEC1dn_branch) NBGen1jesRelativePtEC1dn_branch->SetAddress(&NBGen1jesRelativePtEC1dn_);
  NBGen2jesRelativePtEC1dn_branch = tree->GetBranch("NBGen2jesRelativePtEC1dn");
  if (NBGen2jesRelativePtEC1dn_branch) NBGen2jesRelativePtEC1dn_branch->SetAddress(&NBGen2jesRelativePtEC1dn_);
  NBGen3jesRelativePtEC1dn_branch = tree->GetBranch("NBGen3jesRelativePtEC1dn");
  if (NBGen3jesRelativePtEC1dn_branch) NBGen3jesRelativePtEC1dn_branch->SetAddress(&NBGen3jesRelativePtEC1dn_);
  NBGen4jesRelativePtEC1dn_branch = tree->GetBranch("NBGen4jesRelativePtEC1dn");
  if (NBGen4jesRelativePtEC1dn_branch) NBGen4jesRelativePtEC1dn_branch->SetAddress(&NBGen4jesRelativePtEC1dn_);
  NLGen0jesRelativePtEC1dn_branch = tree->GetBranch("NLGen0jesRelativePtEC1dn");
  if (NLGen0jesRelativePtEC1dn_branch) NLGen0jesRelativePtEC1dn_branch->SetAddress(&NLGen0jesRelativePtEC1dn_);
  NLGen1jesRelativePtEC1dn_branch = tree->GetBranch("NLGen1jesRelativePtEC1dn");
  if (NLGen1jesRelativePtEC1dn_branch) NLGen1jesRelativePtEC1dn_branch->SetAddress(&NLGen1jesRelativePtEC1dn_);
  NLGen2jesRelativePtEC1dn_branch = tree->GetBranch("NLGen2jesRelativePtEC1dn");
  if (NLGen2jesRelativePtEC1dn_branch) NLGen2jesRelativePtEC1dn_branch->SetAddress(&NLGen2jesRelativePtEC1dn_);
  NLGen3jesRelativePtEC1dn_branch = tree->GetBranch("NLGen3jesRelativePtEC1dn");
  if (NLGen3jesRelativePtEC1dn_branch) NLGen3jesRelativePtEC1dn_branch->SetAddress(&NLGen3jesRelativePtEC1dn_);
  NLGen4jesRelativePtEC1dn_branch = tree->GetBranch("NLGen4jesRelativePtEC1dn");
  if (NLGen4jesRelativePtEC1dn_branch) NLGen4jesRelativePtEC1dn_branch->SetAddress(&NLGen4jesRelativePtEC1dn_);
  NVQGen0jesRelativePtEC1dn_branch = tree->GetBranch("NVQGen0jesRelativePtEC1dn");
  if (NVQGen0jesRelativePtEC1dn_branch) NVQGen0jesRelativePtEC1dn_branch->SetAddress(&NVQGen0jesRelativePtEC1dn_);
  NVQGen1jesRelativePtEC1dn_branch = tree->GetBranch("NVQGen1jesRelativePtEC1dn");
  if (NVQGen1jesRelativePtEC1dn_branch) NVQGen1jesRelativePtEC1dn_branch->SetAddress(&NVQGen1jesRelativePtEC1dn_);
  NVQGen2jesRelativePtEC1dn_branch = tree->GetBranch("NVQGen2jesRelativePtEC1dn");
  if (NVQGen2jesRelativePtEC1dn_branch) NVQGen2jesRelativePtEC1dn_branch->SetAddress(&NVQGen2jesRelativePtEC1dn_);
  NVQGen3jesRelativePtEC1dn_branch = tree->GetBranch("NVQGen3jesRelativePtEC1dn");
  if (NVQGen3jesRelativePtEC1dn_branch) NVQGen3jesRelativePtEC1dn_branch->SetAddress(&NVQGen3jesRelativePtEC1dn_);
  NVQGen4jesRelativePtEC1dn_branch = tree->GetBranch("NVQGen4jesRelativePtEC1dn");
  if (NVQGen4jesRelativePtEC1dn_branch) NVQGen4jesRelativePtEC1dn_branch->SetAddress(&NVQGen4jesRelativePtEC1dn_);
  NiFJjesRelativePtEC1dn_branch = tree->GetBranch("NiFJjesRelativePtEC1dn");
  if (NiFJjesRelativePtEC1dn_branch) NiFJjesRelativePtEC1dn_branch->SetAddress(&NiFJjesRelativePtEC1dn_);
  iVMD0jesRelativePtEC1dn_branch = tree->GetBranch("iVMD0jesRelativePtEC1dn");
  if (iVMD0jesRelativePtEC1dn_branch) iVMD0jesRelativePtEC1dn_branch->SetAddress(&iVMD0jesRelativePtEC1dn_);
  iVMD1jesRelativePtEC1dn_branch = tree->GetBranch("iVMD1jesRelativePtEC1dn");
  if (iVMD1jesRelativePtEC1dn_branch) iVMD1jesRelativePtEC1dn_branch->SetAddress(&iVMD1jesRelativePtEC1dn_);
  iVMD2jesRelativePtEC1dn_branch = tree->GetBranch("iVMD2jesRelativePtEC1dn");
  if (iVMD2jesRelativePtEC1dn_branch) iVMD2jesRelativePtEC1dn_branch->SetAddress(&iVMD2jesRelativePtEC1dn_);
  iVMD3jesRelativePtEC1dn_branch = tree->GetBranch("iVMD3jesRelativePtEC1dn");
  if (iVMD3jesRelativePtEC1dn_branch) iVMD3jesRelativePtEC1dn_branch->SetAddress(&iVMD3jesRelativePtEC1dn_);
  iVMD4jesRelativePtEC1dn_branch = tree->GetBranch("iVMD4jesRelativePtEC1dn");
  if (iVMD4jesRelativePtEC1dn_branch) iVMD4jesRelativePtEC1dn_branch->SetAddress(&iVMD4jesRelativePtEC1dn_);
  iWMD0jesRelativePtEC1dn_branch = tree->GetBranch("iWMD0jesRelativePtEC1dn");
  if (iWMD0jesRelativePtEC1dn_branch) iWMD0jesRelativePtEC1dn_branch->SetAddress(&iWMD0jesRelativePtEC1dn_);
  iWMD1jesRelativePtEC1dn_branch = tree->GetBranch("iWMD1jesRelativePtEC1dn");
  if (iWMD1jesRelativePtEC1dn_branch) iWMD1jesRelativePtEC1dn_branch->SetAddress(&iWMD1jesRelativePtEC1dn_);
  iWMD2jesRelativePtEC1dn_branch = tree->GetBranch("iWMD2jesRelativePtEC1dn");
  if (iWMD2jesRelativePtEC1dn_branch) iWMD2jesRelativePtEC1dn_branch->SetAddress(&iWMD2jesRelativePtEC1dn_);
  iWMD3jesRelativePtEC1dn_branch = tree->GetBranch("iWMD3jesRelativePtEC1dn");
  if (iWMD3jesRelativePtEC1dn_branch) iWMD3jesRelativePtEC1dn_branch->SetAddress(&iWMD3jesRelativePtEC1dn_);
  iWMD4jesRelativePtEC1dn_branch = tree->GetBranch("iWMD4jesRelativePtEC1dn");
  if (iWMD4jesRelativePtEC1dn_branch) iWMD4jesRelativePtEC1dn_branch->SetAddress(&iWMD4jesRelativePtEC1dn_);
  NJjesRelativePtEC1dn_branch = tree->GetBranch("NJjesRelativePtEC1dn");
  if (NJjesRelativePtEC1dn_branch) NJjesRelativePtEC1dn_branch->SetAddress(&NJjesRelativePtEC1dn_);
  NbLoosejesRelativePtEC1dn_branch = tree->GetBranch("NbLoosejesRelativePtEC1dn");
  if (NbLoosejesRelativePtEC1dn_branch) NbLoosejesRelativePtEC1dn_branch->SetAddress(&NbLoosejesRelativePtEC1dn_);
  NbMediumjesRelativePtEC1dn_branch = tree->GetBranch("NbMediumjesRelativePtEC1dn");
  if (NbMediumjesRelativePtEC1dn_branch) NbMediumjesRelativePtEC1dn_branch->SetAddress(&NbMediumjesRelativePtEC1dn_);
  NbTightjesRelativePtEC1dn_branch = tree->GetBranch("NbTightjesRelativePtEC1dn");
  if (NbTightjesRelativePtEC1dn_branch) NbTightjesRelativePtEC1dn_branch->SetAddress(&NbTightjesRelativePtEC1dn_);
  NoORNbLoosejesRelativePtEC1dn_branch = tree->GetBranch("NoORNbLoosejesRelativePtEC1dn");
  if (NoORNbLoosejesRelativePtEC1dn_branch) NoORNbLoosejesRelativePtEC1dn_branch->SetAddress(&NoORNbLoosejesRelativePtEC1dn_);
  NoORNbMediumjesRelativePtEC1dn_branch = tree->GetBranch("NoORNbMediumjesRelativePtEC1dn");
  if (NoORNbMediumjesRelativePtEC1dn_branch) NoORNbMediumjesRelativePtEC1dn_branch->SetAddress(&NoORNbMediumjesRelativePtEC1dn_);
  NoORNbTightjesRelativePtEC1dn_branch = tree->GetBranch("NoORNbTightjesRelativePtEC1dn");
  if (NoORNbTightjesRelativePtEC1dn_branch) NoORNbTightjesRelativePtEC1dn_branch->SetAddress(&NoORNbTightjesRelativePtEC1dn_);
  NQJGenjesRelativePtEC1dn_branch = tree->GetBranch("NQJGenjesRelativePtEC1dn");
  if (NQJGenjesRelativePtEC1dn_branch) NQJGenjesRelativePtEC1dn_branch->SetAddress(&NQJGenjesRelativePtEC1dn_);
  NBJGenjesRelativePtEC1dn_branch = tree->GetBranch("NBJGenjesRelativePtEC1dn");
  if (NBJGenjesRelativePtEC1dn_branch) NBJGenjesRelativePtEC1dn_branch->SetAddress(&NBJGenjesRelativePtEC1dn_);
  NLJGenjesRelativePtEC1dn_branch = tree->GetBranch("NLJGenjesRelativePtEC1dn");
  if (NLJGenjesRelativePtEC1dn_branch) NLJGenjesRelativePtEC1dn_branch->SetAddress(&NLJGenjesRelativePtEC1dn_);
  MVVXjesRelativePtEC1dn_branch = tree->GetBranch("MVVXjesRelativePtEC1dn");
  if (MVVXjesRelativePtEC1dn_branch) MVVXjesRelativePtEC1dn_branch->SetAddress(&MVVXjesRelativePtEC1dn_);
  PtVVXjesRelativePtEC1dn_branch = tree->GetBranch("PtVVXjesRelativePtEC1dn");
  if (PtVVXjesRelativePtEC1dn_branch) PtVVXjesRelativePtEC1dn_branch->SetAddress(&PtVVXjesRelativePtEC1dn_);
  HTjesRelativePtEC1dn_branch = tree->GetBranch("HTjesRelativePtEC1dn");
  if (HTjesRelativePtEC1dn_branch) HTjesRelativePtEC1dn_branch->SetAddress(&HTjesRelativePtEC1dn_);
  HTJjesRelativePtEC1dn_branch = tree->GetBranch("HTJjesRelativePtEC1dn");
  if (HTJjesRelativePtEC1dn_branch) HTJjesRelativePtEC1dn_branch->SetAddress(&HTJjesRelativePtEC1dn_);
  HTFJjesRelativePtEC1dn_branch = tree->GetBranch("HTFJjesRelativePtEC1dn");
  if (HTFJjesRelativePtEC1dn_branch) HTFJjesRelativePtEC1dn_branch->SetAddress(&HTFJjesRelativePtEC1dn_);
  SumPtFJjesRelativePtEC1dn_branch = tree->GetBranch("SumPtFJjesRelativePtEC1dn");
  if (SumPtFJjesRelativePtEC1dn_branch) SumPtFJjesRelativePtEC1dn_branch->SetAddress(&SumPtFJjesRelativePtEC1dn_);
  SumPtJjesRelativePtEC1dn_branch = tree->GetBranch("SumPtJjesRelativePtEC1dn");
  if (SumPtJjesRelativePtEC1dn_branch) SumPtJjesRelativePtEC1dn_branch->SetAddress(&SumPtJjesRelativePtEC1dn_);
  NFJjesRelativePtEC2up_branch = tree->GetBranch("NFJjesRelativePtEC2up");
  if (NFJjesRelativePtEC2up_branch) NFJjesRelativePtEC2up_branch->SetAddress(&NFJjesRelativePtEC2up_);
  VMD0jesRelativePtEC2up_branch = tree->GetBranch("VMD0jesRelativePtEC2up");
  if (VMD0jesRelativePtEC2up_branch) VMD0jesRelativePtEC2up_branch->SetAddress(&VMD0jesRelativePtEC2up_);
  VMD1jesRelativePtEC2up_branch = tree->GetBranch("VMD1jesRelativePtEC2up");
  if (VMD1jesRelativePtEC2up_branch) VMD1jesRelativePtEC2up_branch->SetAddress(&VMD1jesRelativePtEC2up_);
  VMD2jesRelativePtEC2up_branch = tree->GetBranch("VMD2jesRelativePtEC2up");
  if (VMD2jesRelativePtEC2up_branch) VMD2jesRelativePtEC2up_branch->SetAddress(&VMD2jesRelativePtEC2up_);
  VMD3jesRelativePtEC2up_branch = tree->GetBranch("VMD3jesRelativePtEC2up");
  if (VMD3jesRelativePtEC2up_branch) VMD3jesRelativePtEC2up_branch->SetAddress(&VMD3jesRelativePtEC2up_);
  VMD4jesRelativePtEC2up_branch = tree->GetBranch("VMD4jesRelativePtEC2up");
  if (VMD4jesRelativePtEC2up_branch) VMD4jesRelativePtEC2up_branch->SetAddress(&VMD4jesRelativePtEC2up_);
  WMD0jesRelativePtEC2up_branch = tree->GetBranch("WMD0jesRelativePtEC2up");
  if (WMD0jesRelativePtEC2up_branch) WMD0jesRelativePtEC2up_branch->SetAddress(&WMD0jesRelativePtEC2up_);
  WMD1jesRelativePtEC2up_branch = tree->GetBranch("WMD1jesRelativePtEC2up");
  if (WMD1jesRelativePtEC2up_branch) WMD1jesRelativePtEC2up_branch->SetAddress(&WMD1jesRelativePtEC2up_);
  WMD2jesRelativePtEC2up_branch = tree->GetBranch("WMD2jesRelativePtEC2up");
  if (WMD2jesRelativePtEC2up_branch) WMD2jesRelativePtEC2up_branch->SetAddress(&WMD2jesRelativePtEC2up_);
  WMD3jesRelativePtEC2up_branch = tree->GetBranch("WMD3jesRelativePtEC2up");
  if (WMD3jesRelativePtEC2up_branch) WMD3jesRelativePtEC2up_branch->SetAddress(&WMD3jesRelativePtEC2up_);
  WMD4jesRelativePtEC2up_branch = tree->GetBranch("WMD4jesRelativePtEC2up");
  if (WMD4jesRelativePtEC2up_branch) WMD4jesRelativePtEC2up_branch->SetAddress(&WMD4jesRelativePtEC2up_);
  NQGen0jesRelativePtEC2up_branch = tree->GetBranch("NQGen0jesRelativePtEC2up");
  if (NQGen0jesRelativePtEC2up_branch) NQGen0jesRelativePtEC2up_branch->SetAddress(&NQGen0jesRelativePtEC2up_);
  NQGen1jesRelativePtEC2up_branch = tree->GetBranch("NQGen1jesRelativePtEC2up");
  if (NQGen1jesRelativePtEC2up_branch) NQGen1jesRelativePtEC2up_branch->SetAddress(&NQGen1jesRelativePtEC2up_);
  NQGen2jesRelativePtEC2up_branch = tree->GetBranch("NQGen2jesRelativePtEC2up");
  if (NQGen2jesRelativePtEC2up_branch) NQGen2jesRelativePtEC2up_branch->SetAddress(&NQGen2jesRelativePtEC2up_);
  NQGen3jesRelativePtEC2up_branch = tree->GetBranch("NQGen3jesRelativePtEC2up");
  if (NQGen3jesRelativePtEC2up_branch) NQGen3jesRelativePtEC2up_branch->SetAddress(&NQGen3jesRelativePtEC2up_);
  NQGen4jesRelativePtEC2up_branch = tree->GetBranch("NQGen4jesRelativePtEC2up");
  if (NQGen4jesRelativePtEC2up_branch) NQGen4jesRelativePtEC2up_branch->SetAddress(&NQGen4jesRelativePtEC2up_);
  NBGen0jesRelativePtEC2up_branch = tree->GetBranch("NBGen0jesRelativePtEC2up");
  if (NBGen0jesRelativePtEC2up_branch) NBGen0jesRelativePtEC2up_branch->SetAddress(&NBGen0jesRelativePtEC2up_);
  NBGen1jesRelativePtEC2up_branch = tree->GetBranch("NBGen1jesRelativePtEC2up");
  if (NBGen1jesRelativePtEC2up_branch) NBGen1jesRelativePtEC2up_branch->SetAddress(&NBGen1jesRelativePtEC2up_);
  NBGen2jesRelativePtEC2up_branch = tree->GetBranch("NBGen2jesRelativePtEC2up");
  if (NBGen2jesRelativePtEC2up_branch) NBGen2jesRelativePtEC2up_branch->SetAddress(&NBGen2jesRelativePtEC2up_);
  NBGen3jesRelativePtEC2up_branch = tree->GetBranch("NBGen3jesRelativePtEC2up");
  if (NBGen3jesRelativePtEC2up_branch) NBGen3jesRelativePtEC2up_branch->SetAddress(&NBGen3jesRelativePtEC2up_);
  NBGen4jesRelativePtEC2up_branch = tree->GetBranch("NBGen4jesRelativePtEC2up");
  if (NBGen4jesRelativePtEC2up_branch) NBGen4jesRelativePtEC2up_branch->SetAddress(&NBGen4jesRelativePtEC2up_);
  NLGen0jesRelativePtEC2up_branch = tree->GetBranch("NLGen0jesRelativePtEC2up");
  if (NLGen0jesRelativePtEC2up_branch) NLGen0jesRelativePtEC2up_branch->SetAddress(&NLGen0jesRelativePtEC2up_);
  NLGen1jesRelativePtEC2up_branch = tree->GetBranch("NLGen1jesRelativePtEC2up");
  if (NLGen1jesRelativePtEC2up_branch) NLGen1jesRelativePtEC2up_branch->SetAddress(&NLGen1jesRelativePtEC2up_);
  NLGen2jesRelativePtEC2up_branch = tree->GetBranch("NLGen2jesRelativePtEC2up");
  if (NLGen2jesRelativePtEC2up_branch) NLGen2jesRelativePtEC2up_branch->SetAddress(&NLGen2jesRelativePtEC2up_);
  NLGen3jesRelativePtEC2up_branch = tree->GetBranch("NLGen3jesRelativePtEC2up");
  if (NLGen3jesRelativePtEC2up_branch) NLGen3jesRelativePtEC2up_branch->SetAddress(&NLGen3jesRelativePtEC2up_);
  NLGen4jesRelativePtEC2up_branch = tree->GetBranch("NLGen4jesRelativePtEC2up");
  if (NLGen4jesRelativePtEC2up_branch) NLGen4jesRelativePtEC2up_branch->SetAddress(&NLGen4jesRelativePtEC2up_);
  NVQGen0jesRelativePtEC2up_branch = tree->GetBranch("NVQGen0jesRelativePtEC2up");
  if (NVQGen0jesRelativePtEC2up_branch) NVQGen0jesRelativePtEC2up_branch->SetAddress(&NVQGen0jesRelativePtEC2up_);
  NVQGen1jesRelativePtEC2up_branch = tree->GetBranch("NVQGen1jesRelativePtEC2up");
  if (NVQGen1jesRelativePtEC2up_branch) NVQGen1jesRelativePtEC2up_branch->SetAddress(&NVQGen1jesRelativePtEC2up_);
  NVQGen2jesRelativePtEC2up_branch = tree->GetBranch("NVQGen2jesRelativePtEC2up");
  if (NVQGen2jesRelativePtEC2up_branch) NVQGen2jesRelativePtEC2up_branch->SetAddress(&NVQGen2jesRelativePtEC2up_);
  NVQGen3jesRelativePtEC2up_branch = tree->GetBranch("NVQGen3jesRelativePtEC2up");
  if (NVQGen3jesRelativePtEC2up_branch) NVQGen3jesRelativePtEC2up_branch->SetAddress(&NVQGen3jesRelativePtEC2up_);
  NVQGen4jesRelativePtEC2up_branch = tree->GetBranch("NVQGen4jesRelativePtEC2up");
  if (NVQGen4jesRelativePtEC2up_branch) NVQGen4jesRelativePtEC2up_branch->SetAddress(&NVQGen4jesRelativePtEC2up_);
  NiFJjesRelativePtEC2up_branch = tree->GetBranch("NiFJjesRelativePtEC2up");
  if (NiFJjesRelativePtEC2up_branch) NiFJjesRelativePtEC2up_branch->SetAddress(&NiFJjesRelativePtEC2up_);
  iVMD0jesRelativePtEC2up_branch = tree->GetBranch("iVMD0jesRelativePtEC2up");
  if (iVMD0jesRelativePtEC2up_branch) iVMD0jesRelativePtEC2up_branch->SetAddress(&iVMD0jesRelativePtEC2up_);
  iVMD1jesRelativePtEC2up_branch = tree->GetBranch("iVMD1jesRelativePtEC2up");
  if (iVMD1jesRelativePtEC2up_branch) iVMD1jesRelativePtEC2up_branch->SetAddress(&iVMD1jesRelativePtEC2up_);
  iVMD2jesRelativePtEC2up_branch = tree->GetBranch("iVMD2jesRelativePtEC2up");
  if (iVMD2jesRelativePtEC2up_branch) iVMD2jesRelativePtEC2up_branch->SetAddress(&iVMD2jesRelativePtEC2up_);
  iVMD3jesRelativePtEC2up_branch = tree->GetBranch("iVMD3jesRelativePtEC2up");
  if (iVMD3jesRelativePtEC2up_branch) iVMD3jesRelativePtEC2up_branch->SetAddress(&iVMD3jesRelativePtEC2up_);
  iVMD4jesRelativePtEC2up_branch = tree->GetBranch("iVMD4jesRelativePtEC2up");
  if (iVMD4jesRelativePtEC2up_branch) iVMD4jesRelativePtEC2up_branch->SetAddress(&iVMD4jesRelativePtEC2up_);
  iWMD0jesRelativePtEC2up_branch = tree->GetBranch("iWMD0jesRelativePtEC2up");
  if (iWMD0jesRelativePtEC2up_branch) iWMD0jesRelativePtEC2up_branch->SetAddress(&iWMD0jesRelativePtEC2up_);
  iWMD1jesRelativePtEC2up_branch = tree->GetBranch("iWMD1jesRelativePtEC2up");
  if (iWMD1jesRelativePtEC2up_branch) iWMD1jesRelativePtEC2up_branch->SetAddress(&iWMD1jesRelativePtEC2up_);
  iWMD2jesRelativePtEC2up_branch = tree->GetBranch("iWMD2jesRelativePtEC2up");
  if (iWMD2jesRelativePtEC2up_branch) iWMD2jesRelativePtEC2up_branch->SetAddress(&iWMD2jesRelativePtEC2up_);
  iWMD3jesRelativePtEC2up_branch = tree->GetBranch("iWMD3jesRelativePtEC2up");
  if (iWMD3jesRelativePtEC2up_branch) iWMD3jesRelativePtEC2up_branch->SetAddress(&iWMD3jesRelativePtEC2up_);
  iWMD4jesRelativePtEC2up_branch = tree->GetBranch("iWMD4jesRelativePtEC2up");
  if (iWMD4jesRelativePtEC2up_branch) iWMD4jesRelativePtEC2up_branch->SetAddress(&iWMD4jesRelativePtEC2up_);
  NJjesRelativePtEC2up_branch = tree->GetBranch("NJjesRelativePtEC2up");
  if (NJjesRelativePtEC2up_branch) NJjesRelativePtEC2up_branch->SetAddress(&NJjesRelativePtEC2up_);
  NbLoosejesRelativePtEC2up_branch = tree->GetBranch("NbLoosejesRelativePtEC2up");
  if (NbLoosejesRelativePtEC2up_branch) NbLoosejesRelativePtEC2up_branch->SetAddress(&NbLoosejesRelativePtEC2up_);
  NbMediumjesRelativePtEC2up_branch = tree->GetBranch("NbMediumjesRelativePtEC2up");
  if (NbMediumjesRelativePtEC2up_branch) NbMediumjesRelativePtEC2up_branch->SetAddress(&NbMediumjesRelativePtEC2up_);
  NbTightjesRelativePtEC2up_branch = tree->GetBranch("NbTightjesRelativePtEC2up");
  if (NbTightjesRelativePtEC2up_branch) NbTightjesRelativePtEC2up_branch->SetAddress(&NbTightjesRelativePtEC2up_);
  NoORNbLoosejesRelativePtEC2up_branch = tree->GetBranch("NoORNbLoosejesRelativePtEC2up");
  if (NoORNbLoosejesRelativePtEC2up_branch) NoORNbLoosejesRelativePtEC2up_branch->SetAddress(&NoORNbLoosejesRelativePtEC2up_);
  NoORNbMediumjesRelativePtEC2up_branch = tree->GetBranch("NoORNbMediumjesRelativePtEC2up");
  if (NoORNbMediumjesRelativePtEC2up_branch) NoORNbMediumjesRelativePtEC2up_branch->SetAddress(&NoORNbMediumjesRelativePtEC2up_);
  NoORNbTightjesRelativePtEC2up_branch = tree->GetBranch("NoORNbTightjesRelativePtEC2up");
  if (NoORNbTightjesRelativePtEC2up_branch) NoORNbTightjesRelativePtEC2up_branch->SetAddress(&NoORNbTightjesRelativePtEC2up_);
  NQJGenjesRelativePtEC2up_branch = tree->GetBranch("NQJGenjesRelativePtEC2up");
  if (NQJGenjesRelativePtEC2up_branch) NQJGenjesRelativePtEC2up_branch->SetAddress(&NQJGenjesRelativePtEC2up_);
  NBJGenjesRelativePtEC2up_branch = tree->GetBranch("NBJGenjesRelativePtEC2up");
  if (NBJGenjesRelativePtEC2up_branch) NBJGenjesRelativePtEC2up_branch->SetAddress(&NBJGenjesRelativePtEC2up_);
  NLJGenjesRelativePtEC2up_branch = tree->GetBranch("NLJGenjesRelativePtEC2up");
  if (NLJGenjesRelativePtEC2up_branch) NLJGenjesRelativePtEC2up_branch->SetAddress(&NLJGenjesRelativePtEC2up_);
  MVVXjesRelativePtEC2up_branch = tree->GetBranch("MVVXjesRelativePtEC2up");
  if (MVVXjesRelativePtEC2up_branch) MVVXjesRelativePtEC2up_branch->SetAddress(&MVVXjesRelativePtEC2up_);
  PtVVXjesRelativePtEC2up_branch = tree->GetBranch("PtVVXjesRelativePtEC2up");
  if (PtVVXjesRelativePtEC2up_branch) PtVVXjesRelativePtEC2up_branch->SetAddress(&PtVVXjesRelativePtEC2up_);
  HTjesRelativePtEC2up_branch = tree->GetBranch("HTjesRelativePtEC2up");
  if (HTjesRelativePtEC2up_branch) HTjesRelativePtEC2up_branch->SetAddress(&HTjesRelativePtEC2up_);
  HTJjesRelativePtEC2up_branch = tree->GetBranch("HTJjesRelativePtEC2up");
  if (HTJjesRelativePtEC2up_branch) HTJjesRelativePtEC2up_branch->SetAddress(&HTJjesRelativePtEC2up_);
  HTFJjesRelativePtEC2up_branch = tree->GetBranch("HTFJjesRelativePtEC2up");
  if (HTFJjesRelativePtEC2up_branch) HTFJjesRelativePtEC2up_branch->SetAddress(&HTFJjesRelativePtEC2up_);
  SumPtFJjesRelativePtEC2up_branch = tree->GetBranch("SumPtFJjesRelativePtEC2up");
  if (SumPtFJjesRelativePtEC2up_branch) SumPtFJjesRelativePtEC2up_branch->SetAddress(&SumPtFJjesRelativePtEC2up_);
  SumPtJjesRelativePtEC2up_branch = tree->GetBranch("SumPtJjesRelativePtEC2up");
  if (SumPtJjesRelativePtEC2up_branch) SumPtJjesRelativePtEC2up_branch->SetAddress(&SumPtJjesRelativePtEC2up_);
  NFJjesRelativePtEC2dn_branch = tree->GetBranch("NFJjesRelativePtEC2dn");
  if (NFJjesRelativePtEC2dn_branch) NFJjesRelativePtEC2dn_branch->SetAddress(&NFJjesRelativePtEC2dn_);
  VMD0jesRelativePtEC2dn_branch = tree->GetBranch("VMD0jesRelativePtEC2dn");
  if (VMD0jesRelativePtEC2dn_branch) VMD0jesRelativePtEC2dn_branch->SetAddress(&VMD0jesRelativePtEC2dn_);
  VMD1jesRelativePtEC2dn_branch = tree->GetBranch("VMD1jesRelativePtEC2dn");
  if (VMD1jesRelativePtEC2dn_branch) VMD1jesRelativePtEC2dn_branch->SetAddress(&VMD1jesRelativePtEC2dn_);
  VMD2jesRelativePtEC2dn_branch = tree->GetBranch("VMD2jesRelativePtEC2dn");
  if (VMD2jesRelativePtEC2dn_branch) VMD2jesRelativePtEC2dn_branch->SetAddress(&VMD2jesRelativePtEC2dn_);
  VMD3jesRelativePtEC2dn_branch = tree->GetBranch("VMD3jesRelativePtEC2dn");
  if (VMD3jesRelativePtEC2dn_branch) VMD3jesRelativePtEC2dn_branch->SetAddress(&VMD3jesRelativePtEC2dn_);
  VMD4jesRelativePtEC2dn_branch = tree->GetBranch("VMD4jesRelativePtEC2dn");
  if (VMD4jesRelativePtEC2dn_branch) VMD4jesRelativePtEC2dn_branch->SetAddress(&VMD4jesRelativePtEC2dn_);
  WMD0jesRelativePtEC2dn_branch = tree->GetBranch("WMD0jesRelativePtEC2dn");
  if (WMD0jesRelativePtEC2dn_branch) WMD0jesRelativePtEC2dn_branch->SetAddress(&WMD0jesRelativePtEC2dn_);
  WMD1jesRelativePtEC2dn_branch = tree->GetBranch("WMD1jesRelativePtEC2dn");
  if (WMD1jesRelativePtEC2dn_branch) WMD1jesRelativePtEC2dn_branch->SetAddress(&WMD1jesRelativePtEC2dn_);
  WMD2jesRelativePtEC2dn_branch = tree->GetBranch("WMD2jesRelativePtEC2dn");
  if (WMD2jesRelativePtEC2dn_branch) WMD2jesRelativePtEC2dn_branch->SetAddress(&WMD2jesRelativePtEC2dn_);
  WMD3jesRelativePtEC2dn_branch = tree->GetBranch("WMD3jesRelativePtEC2dn");
  if (WMD3jesRelativePtEC2dn_branch) WMD3jesRelativePtEC2dn_branch->SetAddress(&WMD3jesRelativePtEC2dn_);
  WMD4jesRelativePtEC2dn_branch = tree->GetBranch("WMD4jesRelativePtEC2dn");
  if (WMD4jesRelativePtEC2dn_branch) WMD4jesRelativePtEC2dn_branch->SetAddress(&WMD4jesRelativePtEC2dn_);
  NQGen0jesRelativePtEC2dn_branch = tree->GetBranch("NQGen0jesRelativePtEC2dn");
  if (NQGen0jesRelativePtEC2dn_branch) NQGen0jesRelativePtEC2dn_branch->SetAddress(&NQGen0jesRelativePtEC2dn_);
  NQGen1jesRelativePtEC2dn_branch = tree->GetBranch("NQGen1jesRelativePtEC2dn");
  if (NQGen1jesRelativePtEC2dn_branch) NQGen1jesRelativePtEC2dn_branch->SetAddress(&NQGen1jesRelativePtEC2dn_);
  NQGen2jesRelativePtEC2dn_branch = tree->GetBranch("NQGen2jesRelativePtEC2dn");
  if (NQGen2jesRelativePtEC2dn_branch) NQGen2jesRelativePtEC2dn_branch->SetAddress(&NQGen2jesRelativePtEC2dn_);
  NQGen3jesRelativePtEC2dn_branch = tree->GetBranch("NQGen3jesRelativePtEC2dn");
  if (NQGen3jesRelativePtEC2dn_branch) NQGen3jesRelativePtEC2dn_branch->SetAddress(&NQGen3jesRelativePtEC2dn_);
  NQGen4jesRelativePtEC2dn_branch = tree->GetBranch("NQGen4jesRelativePtEC2dn");
  if (NQGen4jesRelativePtEC2dn_branch) NQGen4jesRelativePtEC2dn_branch->SetAddress(&NQGen4jesRelativePtEC2dn_);
  NBGen0jesRelativePtEC2dn_branch = tree->GetBranch("NBGen0jesRelativePtEC2dn");
  if (NBGen0jesRelativePtEC2dn_branch) NBGen0jesRelativePtEC2dn_branch->SetAddress(&NBGen0jesRelativePtEC2dn_);
  NBGen1jesRelativePtEC2dn_branch = tree->GetBranch("NBGen1jesRelativePtEC2dn");
  if (NBGen1jesRelativePtEC2dn_branch) NBGen1jesRelativePtEC2dn_branch->SetAddress(&NBGen1jesRelativePtEC2dn_);
  NBGen2jesRelativePtEC2dn_branch = tree->GetBranch("NBGen2jesRelativePtEC2dn");
  if (NBGen2jesRelativePtEC2dn_branch) NBGen2jesRelativePtEC2dn_branch->SetAddress(&NBGen2jesRelativePtEC2dn_);
  NBGen3jesRelativePtEC2dn_branch = tree->GetBranch("NBGen3jesRelativePtEC2dn");
  if (NBGen3jesRelativePtEC2dn_branch) NBGen3jesRelativePtEC2dn_branch->SetAddress(&NBGen3jesRelativePtEC2dn_);
  NBGen4jesRelativePtEC2dn_branch = tree->GetBranch("NBGen4jesRelativePtEC2dn");
  if (NBGen4jesRelativePtEC2dn_branch) NBGen4jesRelativePtEC2dn_branch->SetAddress(&NBGen4jesRelativePtEC2dn_);
  NLGen0jesRelativePtEC2dn_branch = tree->GetBranch("NLGen0jesRelativePtEC2dn");
  if (NLGen0jesRelativePtEC2dn_branch) NLGen0jesRelativePtEC2dn_branch->SetAddress(&NLGen0jesRelativePtEC2dn_);
  NLGen1jesRelativePtEC2dn_branch = tree->GetBranch("NLGen1jesRelativePtEC2dn");
  if (NLGen1jesRelativePtEC2dn_branch) NLGen1jesRelativePtEC2dn_branch->SetAddress(&NLGen1jesRelativePtEC2dn_);
  NLGen2jesRelativePtEC2dn_branch = tree->GetBranch("NLGen2jesRelativePtEC2dn");
  if (NLGen2jesRelativePtEC2dn_branch) NLGen2jesRelativePtEC2dn_branch->SetAddress(&NLGen2jesRelativePtEC2dn_);
  NLGen3jesRelativePtEC2dn_branch = tree->GetBranch("NLGen3jesRelativePtEC2dn");
  if (NLGen3jesRelativePtEC2dn_branch) NLGen3jesRelativePtEC2dn_branch->SetAddress(&NLGen3jesRelativePtEC2dn_);
  NLGen4jesRelativePtEC2dn_branch = tree->GetBranch("NLGen4jesRelativePtEC2dn");
  if (NLGen4jesRelativePtEC2dn_branch) NLGen4jesRelativePtEC2dn_branch->SetAddress(&NLGen4jesRelativePtEC2dn_);
  NVQGen0jesRelativePtEC2dn_branch = tree->GetBranch("NVQGen0jesRelativePtEC2dn");
  if (NVQGen0jesRelativePtEC2dn_branch) NVQGen0jesRelativePtEC2dn_branch->SetAddress(&NVQGen0jesRelativePtEC2dn_);
  NVQGen1jesRelativePtEC2dn_branch = tree->GetBranch("NVQGen1jesRelativePtEC2dn");
  if (NVQGen1jesRelativePtEC2dn_branch) NVQGen1jesRelativePtEC2dn_branch->SetAddress(&NVQGen1jesRelativePtEC2dn_);
  NVQGen2jesRelativePtEC2dn_branch = tree->GetBranch("NVQGen2jesRelativePtEC2dn");
  if (NVQGen2jesRelativePtEC2dn_branch) NVQGen2jesRelativePtEC2dn_branch->SetAddress(&NVQGen2jesRelativePtEC2dn_);
  NVQGen3jesRelativePtEC2dn_branch = tree->GetBranch("NVQGen3jesRelativePtEC2dn");
  if (NVQGen3jesRelativePtEC2dn_branch) NVQGen3jesRelativePtEC2dn_branch->SetAddress(&NVQGen3jesRelativePtEC2dn_);
  NVQGen4jesRelativePtEC2dn_branch = tree->GetBranch("NVQGen4jesRelativePtEC2dn");
  if (NVQGen4jesRelativePtEC2dn_branch) NVQGen4jesRelativePtEC2dn_branch->SetAddress(&NVQGen4jesRelativePtEC2dn_);
  NiFJjesRelativePtEC2dn_branch = tree->GetBranch("NiFJjesRelativePtEC2dn");
  if (NiFJjesRelativePtEC2dn_branch) NiFJjesRelativePtEC2dn_branch->SetAddress(&NiFJjesRelativePtEC2dn_);
  iVMD0jesRelativePtEC2dn_branch = tree->GetBranch("iVMD0jesRelativePtEC2dn");
  if (iVMD0jesRelativePtEC2dn_branch) iVMD0jesRelativePtEC2dn_branch->SetAddress(&iVMD0jesRelativePtEC2dn_);
  iVMD1jesRelativePtEC2dn_branch = tree->GetBranch("iVMD1jesRelativePtEC2dn");
  if (iVMD1jesRelativePtEC2dn_branch) iVMD1jesRelativePtEC2dn_branch->SetAddress(&iVMD1jesRelativePtEC2dn_);
  iVMD2jesRelativePtEC2dn_branch = tree->GetBranch("iVMD2jesRelativePtEC2dn");
  if (iVMD2jesRelativePtEC2dn_branch) iVMD2jesRelativePtEC2dn_branch->SetAddress(&iVMD2jesRelativePtEC2dn_);
  iVMD3jesRelativePtEC2dn_branch = tree->GetBranch("iVMD3jesRelativePtEC2dn");
  if (iVMD3jesRelativePtEC2dn_branch) iVMD3jesRelativePtEC2dn_branch->SetAddress(&iVMD3jesRelativePtEC2dn_);
  iVMD4jesRelativePtEC2dn_branch = tree->GetBranch("iVMD4jesRelativePtEC2dn");
  if (iVMD4jesRelativePtEC2dn_branch) iVMD4jesRelativePtEC2dn_branch->SetAddress(&iVMD4jesRelativePtEC2dn_);
  iWMD0jesRelativePtEC2dn_branch = tree->GetBranch("iWMD0jesRelativePtEC2dn");
  if (iWMD0jesRelativePtEC2dn_branch) iWMD0jesRelativePtEC2dn_branch->SetAddress(&iWMD0jesRelativePtEC2dn_);
  iWMD1jesRelativePtEC2dn_branch = tree->GetBranch("iWMD1jesRelativePtEC2dn");
  if (iWMD1jesRelativePtEC2dn_branch) iWMD1jesRelativePtEC2dn_branch->SetAddress(&iWMD1jesRelativePtEC2dn_);
  iWMD2jesRelativePtEC2dn_branch = tree->GetBranch("iWMD2jesRelativePtEC2dn");
  if (iWMD2jesRelativePtEC2dn_branch) iWMD2jesRelativePtEC2dn_branch->SetAddress(&iWMD2jesRelativePtEC2dn_);
  iWMD3jesRelativePtEC2dn_branch = tree->GetBranch("iWMD3jesRelativePtEC2dn");
  if (iWMD3jesRelativePtEC2dn_branch) iWMD3jesRelativePtEC2dn_branch->SetAddress(&iWMD3jesRelativePtEC2dn_);
  iWMD4jesRelativePtEC2dn_branch = tree->GetBranch("iWMD4jesRelativePtEC2dn");
  if (iWMD4jesRelativePtEC2dn_branch) iWMD4jesRelativePtEC2dn_branch->SetAddress(&iWMD4jesRelativePtEC2dn_);
  NJjesRelativePtEC2dn_branch = tree->GetBranch("NJjesRelativePtEC2dn");
  if (NJjesRelativePtEC2dn_branch) NJjesRelativePtEC2dn_branch->SetAddress(&NJjesRelativePtEC2dn_);
  NbLoosejesRelativePtEC2dn_branch = tree->GetBranch("NbLoosejesRelativePtEC2dn");
  if (NbLoosejesRelativePtEC2dn_branch) NbLoosejesRelativePtEC2dn_branch->SetAddress(&NbLoosejesRelativePtEC2dn_);
  NbMediumjesRelativePtEC2dn_branch = tree->GetBranch("NbMediumjesRelativePtEC2dn");
  if (NbMediumjesRelativePtEC2dn_branch) NbMediumjesRelativePtEC2dn_branch->SetAddress(&NbMediumjesRelativePtEC2dn_);
  NbTightjesRelativePtEC2dn_branch = tree->GetBranch("NbTightjesRelativePtEC2dn");
  if (NbTightjesRelativePtEC2dn_branch) NbTightjesRelativePtEC2dn_branch->SetAddress(&NbTightjesRelativePtEC2dn_);
  NoORNbLoosejesRelativePtEC2dn_branch = tree->GetBranch("NoORNbLoosejesRelativePtEC2dn");
  if (NoORNbLoosejesRelativePtEC2dn_branch) NoORNbLoosejesRelativePtEC2dn_branch->SetAddress(&NoORNbLoosejesRelativePtEC2dn_);
  NoORNbMediumjesRelativePtEC2dn_branch = tree->GetBranch("NoORNbMediumjesRelativePtEC2dn");
  if (NoORNbMediumjesRelativePtEC2dn_branch) NoORNbMediumjesRelativePtEC2dn_branch->SetAddress(&NoORNbMediumjesRelativePtEC2dn_);
  NoORNbTightjesRelativePtEC2dn_branch = tree->GetBranch("NoORNbTightjesRelativePtEC2dn");
  if (NoORNbTightjesRelativePtEC2dn_branch) NoORNbTightjesRelativePtEC2dn_branch->SetAddress(&NoORNbTightjesRelativePtEC2dn_);
  NQJGenjesRelativePtEC2dn_branch = tree->GetBranch("NQJGenjesRelativePtEC2dn");
  if (NQJGenjesRelativePtEC2dn_branch) NQJGenjesRelativePtEC2dn_branch->SetAddress(&NQJGenjesRelativePtEC2dn_);
  NBJGenjesRelativePtEC2dn_branch = tree->GetBranch("NBJGenjesRelativePtEC2dn");
  if (NBJGenjesRelativePtEC2dn_branch) NBJGenjesRelativePtEC2dn_branch->SetAddress(&NBJGenjesRelativePtEC2dn_);
  NLJGenjesRelativePtEC2dn_branch = tree->GetBranch("NLJGenjesRelativePtEC2dn");
  if (NLJGenjesRelativePtEC2dn_branch) NLJGenjesRelativePtEC2dn_branch->SetAddress(&NLJGenjesRelativePtEC2dn_);
  MVVXjesRelativePtEC2dn_branch = tree->GetBranch("MVVXjesRelativePtEC2dn");
  if (MVVXjesRelativePtEC2dn_branch) MVVXjesRelativePtEC2dn_branch->SetAddress(&MVVXjesRelativePtEC2dn_);
  PtVVXjesRelativePtEC2dn_branch = tree->GetBranch("PtVVXjesRelativePtEC2dn");
  if (PtVVXjesRelativePtEC2dn_branch) PtVVXjesRelativePtEC2dn_branch->SetAddress(&PtVVXjesRelativePtEC2dn_);
  HTjesRelativePtEC2dn_branch = tree->GetBranch("HTjesRelativePtEC2dn");
  if (HTjesRelativePtEC2dn_branch) HTjesRelativePtEC2dn_branch->SetAddress(&HTjesRelativePtEC2dn_);
  HTJjesRelativePtEC2dn_branch = tree->GetBranch("HTJjesRelativePtEC2dn");
  if (HTJjesRelativePtEC2dn_branch) HTJjesRelativePtEC2dn_branch->SetAddress(&HTJjesRelativePtEC2dn_);
  HTFJjesRelativePtEC2dn_branch = tree->GetBranch("HTFJjesRelativePtEC2dn");
  if (HTFJjesRelativePtEC2dn_branch) HTFJjesRelativePtEC2dn_branch->SetAddress(&HTFJjesRelativePtEC2dn_);
  SumPtFJjesRelativePtEC2dn_branch = tree->GetBranch("SumPtFJjesRelativePtEC2dn");
  if (SumPtFJjesRelativePtEC2dn_branch) SumPtFJjesRelativePtEC2dn_branch->SetAddress(&SumPtFJjesRelativePtEC2dn_);
  SumPtJjesRelativePtEC2dn_branch = tree->GetBranch("SumPtJjesRelativePtEC2dn");
  if (SumPtJjesRelativePtEC2dn_branch) SumPtJjesRelativePtEC2dn_branch->SetAddress(&SumPtJjesRelativePtEC2dn_);
  NFJjesRelativePtHFup_branch = tree->GetBranch("NFJjesRelativePtHFup");
  if (NFJjesRelativePtHFup_branch) NFJjesRelativePtHFup_branch->SetAddress(&NFJjesRelativePtHFup_);
  VMD0jesRelativePtHFup_branch = tree->GetBranch("VMD0jesRelativePtHFup");
  if (VMD0jesRelativePtHFup_branch) VMD0jesRelativePtHFup_branch->SetAddress(&VMD0jesRelativePtHFup_);
  VMD1jesRelativePtHFup_branch = tree->GetBranch("VMD1jesRelativePtHFup");
  if (VMD1jesRelativePtHFup_branch) VMD1jesRelativePtHFup_branch->SetAddress(&VMD1jesRelativePtHFup_);
  VMD2jesRelativePtHFup_branch = tree->GetBranch("VMD2jesRelativePtHFup");
  if (VMD2jesRelativePtHFup_branch) VMD2jesRelativePtHFup_branch->SetAddress(&VMD2jesRelativePtHFup_);
  VMD3jesRelativePtHFup_branch = tree->GetBranch("VMD3jesRelativePtHFup");
  if (VMD3jesRelativePtHFup_branch) VMD3jesRelativePtHFup_branch->SetAddress(&VMD3jesRelativePtHFup_);
  VMD4jesRelativePtHFup_branch = tree->GetBranch("VMD4jesRelativePtHFup");
  if (VMD4jesRelativePtHFup_branch) VMD4jesRelativePtHFup_branch->SetAddress(&VMD4jesRelativePtHFup_);
  WMD0jesRelativePtHFup_branch = tree->GetBranch("WMD0jesRelativePtHFup");
  if (WMD0jesRelativePtHFup_branch) WMD0jesRelativePtHFup_branch->SetAddress(&WMD0jesRelativePtHFup_);
  WMD1jesRelativePtHFup_branch = tree->GetBranch("WMD1jesRelativePtHFup");
  if (WMD1jesRelativePtHFup_branch) WMD1jesRelativePtHFup_branch->SetAddress(&WMD1jesRelativePtHFup_);
  WMD2jesRelativePtHFup_branch = tree->GetBranch("WMD2jesRelativePtHFup");
  if (WMD2jesRelativePtHFup_branch) WMD2jesRelativePtHFup_branch->SetAddress(&WMD2jesRelativePtHFup_);
  WMD3jesRelativePtHFup_branch = tree->GetBranch("WMD3jesRelativePtHFup");
  if (WMD3jesRelativePtHFup_branch) WMD3jesRelativePtHFup_branch->SetAddress(&WMD3jesRelativePtHFup_);
  WMD4jesRelativePtHFup_branch = tree->GetBranch("WMD4jesRelativePtHFup");
  if (WMD4jesRelativePtHFup_branch) WMD4jesRelativePtHFup_branch->SetAddress(&WMD4jesRelativePtHFup_);
  NQGen0jesRelativePtHFup_branch = tree->GetBranch("NQGen0jesRelativePtHFup");
  if (NQGen0jesRelativePtHFup_branch) NQGen0jesRelativePtHFup_branch->SetAddress(&NQGen0jesRelativePtHFup_);
  NQGen1jesRelativePtHFup_branch = tree->GetBranch("NQGen1jesRelativePtHFup");
  if (NQGen1jesRelativePtHFup_branch) NQGen1jesRelativePtHFup_branch->SetAddress(&NQGen1jesRelativePtHFup_);
  NQGen2jesRelativePtHFup_branch = tree->GetBranch("NQGen2jesRelativePtHFup");
  if (NQGen2jesRelativePtHFup_branch) NQGen2jesRelativePtHFup_branch->SetAddress(&NQGen2jesRelativePtHFup_);
  NQGen3jesRelativePtHFup_branch = tree->GetBranch("NQGen3jesRelativePtHFup");
  if (NQGen3jesRelativePtHFup_branch) NQGen3jesRelativePtHFup_branch->SetAddress(&NQGen3jesRelativePtHFup_);
  NQGen4jesRelativePtHFup_branch = tree->GetBranch("NQGen4jesRelativePtHFup");
  if (NQGen4jesRelativePtHFup_branch) NQGen4jesRelativePtHFup_branch->SetAddress(&NQGen4jesRelativePtHFup_);
  NBGen0jesRelativePtHFup_branch = tree->GetBranch("NBGen0jesRelativePtHFup");
  if (NBGen0jesRelativePtHFup_branch) NBGen0jesRelativePtHFup_branch->SetAddress(&NBGen0jesRelativePtHFup_);
  NBGen1jesRelativePtHFup_branch = tree->GetBranch("NBGen1jesRelativePtHFup");
  if (NBGen1jesRelativePtHFup_branch) NBGen1jesRelativePtHFup_branch->SetAddress(&NBGen1jesRelativePtHFup_);
  NBGen2jesRelativePtHFup_branch = tree->GetBranch("NBGen2jesRelativePtHFup");
  if (NBGen2jesRelativePtHFup_branch) NBGen2jesRelativePtHFup_branch->SetAddress(&NBGen2jesRelativePtHFup_);
  NBGen3jesRelativePtHFup_branch = tree->GetBranch("NBGen3jesRelativePtHFup");
  if (NBGen3jesRelativePtHFup_branch) NBGen3jesRelativePtHFup_branch->SetAddress(&NBGen3jesRelativePtHFup_);
  NBGen4jesRelativePtHFup_branch = tree->GetBranch("NBGen4jesRelativePtHFup");
  if (NBGen4jesRelativePtHFup_branch) NBGen4jesRelativePtHFup_branch->SetAddress(&NBGen4jesRelativePtHFup_);
  NLGen0jesRelativePtHFup_branch = tree->GetBranch("NLGen0jesRelativePtHFup");
  if (NLGen0jesRelativePtHFup_branch) NLGen0jesRelativePtHFup_branch->SetAddress(&NLGen0jesRelativePtHFup_);
  NLGen1jesRelativePtHFup_branch = tree->GetBranch("NLGen1jesRelativePtHFup");
  if (NLGen1jesRelativePtHFup_branch) NLGen1jesRelativePtHFup_branch->SetAddress(&NLGen1jesRelativePtHFup_);
  NLGen2jesRelativePtHFup_branch = tree->GetBranch("NLGen2jesRelativePtHFup");
  if (NLGen2jesRelativePtHFup_branch) NLGen2jesRelativePtHFup_branch->SetAddress(&NLGen2jesRelativePtHFup_);
  NLGen3jesRelativePtHFup_branch = tree->GetBranch("NLGen3jesRelativePtHFup");
  if (NLGen3jesRelativePtHFup_branch) NLGen3jesRelativePtHFup_branch->SetAddress(&NLGen3jesRelativePtHFup_);
  NLGen4jesRelativePtHFup_branch = tree->GetBranch("NLGen4jesRelativePtHFup");
  if (NLGen4jesRelativePtHFup_branch) NLGen4jesRelativePtHFup_branch->SetAddress(&NLGen4jesRelativePtHFup_);
  NVQGen0jesRelativePtHFup_branch = tree->GetBranch("NVQGen0jesRelativePtHFup");
  if (NVQGen0jesRelativePtHFup_branch) NVQGen0jesRelativePtHFup_branch->SetAddress(&NVQGen0jesRelativePtHFup_);
  NVQGen1jesRelativePtHFup_branch = tree->GetBranch("NVQGen1jesRelativePtHFup");
  if (NVQGen1jesRelativePtHFup_branch) NVQGen1jesRelativePtHFup_branch->SetAddress(&NVQGen1jesRelativePtHFup_);
  NVQGen2jesRelativePtHFup_branch = tree->GetBranch("NVQGen2jesRelativePtHFup");
  if (NVQGen2jesRelativePtHFup_branch) NVQGen2jesRelativePtHFup_branch->SetAddress(&NVQGen2jesRelativePtHFup_);
  NVQGen3jesRelativePtHFup_branch = tree->GetBranch("NVQGen3jesRelativePtHFup");
  if (NVQGen3jesRelativePtHFup_branch) NVQGen3jesRelativePtHFup_branch->SetAddress(&NVQGen3jesRelativePtHFup_);
  NVQGen4jesRelativePtHFup_branch = tree->GetBranch("NVQGen4jesRelativePtHFup");
  if (NVQGen4jesRelativePtHFup_branch) NVQGen4jesRelativePtHFup_branch->SetAddress(&NVQGen4jesRelativePtHFup_);
  NiFJjesRelativePtHFup_branch = tree->GetBranch("NiFJjesRelativePtHFup");
  if (NiFJjesRelativePtHFup_branch) NiFJjesRelativePtHFup_branch->SetAddress(&NiFJjesRelativePtHFup_);
  iVMD0jesRelativePtHFup_branch = tree->GetBranch("iVMD0jesRelativePtHFup");
  if (iVMD0jesRelativePtHFup_branch) iVMD0jesRelativePtHFup_branch->SetAddress(&iVMD0jesRelativePtHFup_);
  iVMD1jesRelativePtHFup_branch = tree->GetBranch("iVMD1jesRelativePtHFup");
  if (iVMD1jesRelativePtHFup_branch) iVMD1jesRelativePtHFup_branch->SetAddress(&iVMD1jesRelativePtHFup_);
  iVMD2jesRelativePtHFup_branch = tree->GetBranch("iVMD2jesRelativePtHFup");
  if (iVMD2jesRelativePtHFup_branch) iVMD2jesRelativePtHFup_branch->SetAddress(&iVMD2jesRelativePtHFup_);
  iVMD3jesRelativePtHFup_branch = tree->GetBranch("iVMD3jesRelativePtHFup");
  if (iVMD3jesRelativePtHFup_branch) iVMD3jesRelativePtHFup_branch->SetAddress(&iVMD3jesRelativePtHFup_);
  iVMD4jesRelativePtHFup_branch = tree->GetBranch("iVMD4jesRelativePtHFup");
  if (iVMD4jesRelativePtHFup_branch) iVMD4jesRelativePtHFup_branch->SetAddress(&iVMD4jesRelativePtHFup_);
  iWMD0jesRelativePtHFup_branch = tree->GetBranch("iWMD0jesRelativePtHFup");
  if (iWMD0jesRelativePtHFup_branch) iWMD0jesRelativePtHFup_branch->SetAddress(&iWMD0jesRelativePtHFup_);
  iWMD1jesRelativePtHFup_branch = tree->GetBranch("iWMD1jesRelativePtHFup");
  if (iWMD1jesRelativePtHFup_branch) iWMD1jesRelativePtHFup_branch->SetAddress(&iWMD1jesRelativePtHFup_);
  iWMD2jesRelativePtHFup_branch = tree->GetBranch("iWMD2jesRelativePtHFup");
  if (iWMD2jesRelativePtHFup_branch) iWMD2jesRelativePtHFup_branch->SetAddress(&iWMD2jesRelativePtHFup_);
  iWMD3jesRelativePtHFup_branch = tree->GetBranch("iWMD3jesRelativePtHFup");
  if (iWMD3jesRelativePtHFup_branch) iWMD3jesRelativePtHFup_branch->SetAddress(&iWMD3jesRelativePtHFup_);
  iWMD4jesRelativePtHFup_branch = tree->GetBranch("iWMD4jesRelativePtHFup");
  if (iWMD4jesRelativePtHFup_branch) iWMD4jesRelativePtHFup_branch->SetAddress(&iWMD4jesRelativePtHFup_);
  NJjesRelativePtHFup_branch = tree->GetBranch("NJjesRelativePtHFup");
  if (NJjesRelativePtHFup_branch) NJjesRelativePtHFup_branch->SetAddress(&NJjesRelativePtHFup_);
  NbLoosejesRelativePtHFup_branch = tree->GetBranch("NbLoosejesRelativePtHFup");
  if (NbLoosejesRelativePtHFup_branch) NbLoosejesRelativePtHFup_branch->SetAddress(&NbLoosejesRelativePtHFup_);
  NbMediumjesRelativePtHFup_branch = tree->GetBranch("NbMediumjesRelativePtHFup");
  if (NbMediumjesRelativePtHFup_branch) NbMediumjesRelativePtHFup_branch->SetAddress(&NbMediumjesRelativePtHFup_);
  NbTightjesRelativePtHFup_branch = tree->GetBranch("NbTightjesRelativePtHFup");
  if (NbTightjesRelativePtHFup_branch) NbTightjesRelativePtHFup_branch->SetAddress(&NbTightjesRelativePtHFup_);
  NoORNbLoosejesRelativePtHFup_branch = tree->GetBranch("NoORNbLoosejesRelativePtHFup");
  if (NoORNbLoosejesRelativePtHFup_branch) NoORNbLoosejesRelativePtHFup_branch->SetAddress(&NoORNbLoosejesRelativePtHFup_);
  NoORNbMediumjesRelativePtHFup_branch = tree->GetBranch("NoORNbMediumjesRelativePtHFup");
  if (NoORNbMediumjesRelativePtHFup_branch) NoORNbMediumjesRelativePtHFup_branch->SetAddress(&NoORNbMediumjesRelativePtHFup_);
  NoORNbTightjesRelativePtHFup_branch = tree->GetBranch("NoORNbTightjesRelativePtHFup");
  if (NoORNbTightjesRelativePtHFup_branch) NoORNbTightjesRelativePtHFup_branch->SetAddress(&NoORNbTightjesRelativePtHFup_);
  NQJGenjesRelativePtHFup_branch = tree->GetBranch("NQJGenjesRelativePtHFup");
  if (NQJGenjesRelativePtHFup_branch) NQJGenjesRelativePtHFup_branch->SetAddress(&NQJGenjesRelativePtHFup_);
  NBJGenjesRelativePtHFup_branch = tree->GetBranch("NBJGenjesRelativePtHFup");
  if (NBJGenjesRelativePtHFup_branch) NBJGenjesRelativePtHFup_branch->SetAddress(&NBJGenjesRelativePtHFup_);
  NLJGenjesRelativePtHFup_branch = tree->GetBranch("NLJGenjesRelativePtHFup");
  if (NLJGenjesRelativePtHFup_branch) NLJGenjesRelativePtHFup_branch->SetAddress(&NLJGenjesRelativePtHFup_);
  MVVXjesRelativePtHFup_branch = tree->GetBranch("MVVXjesRelativePtHFup");
  if (MVVXjesRelativePtHFup_branch) MVVXjesRelativePtHFup_branch->SetAddress(&MVVXjesRelativePtHFup_);
  PtVVXjesRelativePtHFup_branch = tree->GetBranch("PtVVXjesRelativePtHFup");
  if (PtVVXjesRelativePtHFup_branch) PtVVXjesRelativePtHFup_branch->SetAddress(&PtVVXjesRelativePtHFup_);
  HTjesRelativePtHFup_branch = tree->GetBranch("HTjesRelativePtHFup");
  if (HTjesRelativePtHFup_branch) HTjesRelativePtHFup_branch->SetAddress(&HTjesRelativePtHFup_);
  HTJjesRelativePtHFup_branch = tree->GetBranch("HTJjesRelativePtHFup");
  if (HTJjesRelativePtHFup_branch) HTJjesRelativePtHFup_branch->SetAddress(&HTJjesRelativePtHFup_);
  HTFJjesRelativePtHFup_branch = tree->GetBranch("HTFJjesRelativePtHFup");
  if (HTFJjesRelativePtHFup_branch) HTFJjesRelativePtHFup_branch->SetAddress(&HTFJjesRelativePtHFup_);
  SumPtFJjesRelativePtHFup_branch = tree->GetBranch("SumPtFJjesRelativePtHFup");
  if (SumPtFJjesRelativePtHFup_branch) SumPtFJjesRelativePtHFup_branch->SetAddress(&SumPtFJjesRelativePtHFup_);
  SumPtJjesRelativePtHFup_branch = tree->GetBranch("SumPtJjesRelativePtHFup");
  if (SumPtJjesRelativePtHFup_branch) SumPtJjesRelativePtHFup_branch->SetAddress(&SumPtJjesRelativePtHFup_);
  NFJjesRelativePtHFdn_branch = tree->GetBranch("NFJjesRelativePtHFdn");
  if (NFJjesRelativePtHFdn_branch) NFJjesRelativePtHFdn_branch->SetAddress(&NFJjesRelativePtHFdn_);
  VMD0jesRelativePtHFdn_branch = tree->GetBranch("VMD0jesRelativePtHFdn");
  if (VMD0jesRelativePtHFdn_branch) VMD0jesRelativePtHFdn_branch->SetAddress(&VMD0jesRelativePtHFdn_);
  VMD1jesRelativePtHFdn_branch = tree->GetBranch("VMD1jesRelativePtHFdn");
  if (VMD1jesRelativePtHFdn_branch) VMD1jesRelativePtHFdn_branch->SetAddress(&VMD1jesRelativePtHFdn_);
  VMD2jesRelativePtHFdn_branch = tree->GetBranch("VMD2jesRelativePtHFdn");
  if (VMD2jesRelativePtHFdn_branch) VMD2jesRelativePtHFdn_branch->SetAddress(&VMD2jesRelativePtHFdn_);
  VMD3jesRelativePtHFdn_branch = tree->GetBranch("VMD3jesRelativePtHFdn");
  if (VMD3jesRelativePtHFdn_branch) VMD3jesRelativePtHFdn_branch->SetAddress(&VMD3jesRelativePtHFdn_);
  VMD4jesRelativePtHFdn_branch = tree->GetBranch("VMD4jesRelativePtHFdn");
  if (VMD4jesRelativePtHFdn_branch) VMD4jesRelativePtHFdn_branch->SetAddress(&VMD4jesRelativePtHFdn_);
  WMD0jesRelativePtHFdn_branch = tree->GetBranch("WMD0jesRelativePtHFdn");
  if (WMD0jesRelativePtHFdn_branch) WMD0jesRelativePtHFdn_branch->SetAddress(&WMD0jesRelativePtHFdn_);
  WMD1jesRelativePtHFdn_branch = tree->GetBranch("WMD1jesRelativePtHFdn");
  if (WMD1jesRelativePtHFdn_branch) WMD1jesRelativePtHFdn_branch->SetAddress(&WMD1jesRelativePtHFdn_);
  WMD2jesRelativePtHFdn_branch = tree->GetBranch("WMD2jesRelativePtHFdn");
  if (WMD2jesRelativePtHFdn_branch) WMD2jesRelativePtHFdn_branch->SetAddress(&WMD2jesRelativePtHFdn_);
  WMD3jesRelativePtHFdn_branch = tree->GetBranch("WMD3jesRelativePtHFdn");
  if (WMD3jesRelativePtHFdn_branch) WMD3jesRelativePtHFdn_branch->SetAddress(&WMD3jesRelativePtHFdn_);
  WMD4jesRelativePtHFdn_branch = tree->GetBranch("WMD4jesRelativePtHFdn");
  if (WMD4jesRelativePtHFdn_branch) WMD4jesRelativePtHFdn_branch->SetAddress(&WMD4jesRelativePtHFdn_);
  NQGen0jesRelativePtHFdn_branch = tree->GetBranch("NQGen0jesRelativePtHFdn");
  if (NQGen0jesRelativePtHFdn_branch) NQGen0jesRelativePtHFdn_branch->SetAddress(&NQGen0jesRelativePtHFdn_);
  NQGen1jesRelativePtHFdn_branch = tree->GetBranch("NQGen1jesRelativePtHFdn");
  if (NQGen1jesRelativePtHFdn_branch) NQGen1jesRelativePtHFdn_branch->SetAddress(&NQGen1jesRelativePtHFdn_);
  NQGen2jesRelativePtHFdn_branch = tree->GetBranch("NQGen2jesRelativePtHFdn");
  if (NQGen2jesRelativePtHFdn_branch) NQGen2jesRelativePtHFdn_branch->SetAddress(&NQGen2jesRelativePtHFdn_);
  NQGen3jesRelativePtHFdn_branch = tree->GetBranch("NQGen3jesRelativePtHFdn");
  if (NQGen3jesRelativePtHFdn_branch) NQGen3jesRelativePtHFdn_branch->SetAddress(&NQGen3jesRelativePtHFdn_);
  NQGen4jesRelativePtHFdn_branch = tree->GetBranch("NQGen4jesRelativePtHFdn");
  if (NQGen4jesRelativePtHFdn_branch) NQGen4jesRelativePtHFdn_branch->SetAddress(&NQGen4jesRelativePtHFdn_);
  NBGen0jesRelativePtHFdn_branch = tree->GetBranch("NBGen0jesRelativePtHFdn");
  if (NBGen0jesRelativePtHFdn_branch) NBGen0jesRelativePtHFdn_branch->SetAddress(&NBGen0jesRelativePtHFdn_);
  NBGen1jesRelativePtHFdn_branch = tree->GetBranch("NBGen1jesRelativePtHFdn");
  if (NBGen1jesRelativePtHFdn_branch) NBGen1jesRelativePtHFdn_branch->SetAddress(&NBGen1jesRelativePtHFdn_);
  NBGen2jesRelativePtHFdn_branch = tree->GetBranch("NBGen2jesRelativePtHFdn");
  if (NBGen2jesRelativePtHFdn_branch) NBGen2jesRelativePtHFdn_branch->SetAddress(&NBGen2jesRelativePtHFdn_);
  NBGen3jesRelativePtHFdn_branch = tree->GetBranch("NBGen3jesRelativePtHFdn");
  if (NBGen3jesRelativePtHFdn_branch) NBGen3jesRelativePtHFdn_branch->SetAddress(&NBGen3jesRelativePtHFdn_);
  NBGen4jesRelativePtHFdn_branch = tree->GetBranch("NBGen4jesRelativePtHFdn");
  if (NBGen4jesRelativePtHFdn_branch) NBGen4jesRelativePtHFdn_branch->SetAddress(&NBGen4jesRelativePtHFdn_);
  NLGen0jesRelativePtHFdn_branch = tree->GetBranch("NLGen0jesRelativePtHFdn");
  if (NLGen0jesRelativePtHFdn_branch) NLGen0jesRelativePtHFdn_branch->SetAddress(&NLGen0jesRelativePtHFdn_);
  NLGen1jesRelativePtHFdn_branch = tree->GetBranch("NLGen1jesRelativePtHFdn");
  if (NLGen1jesRelativePtHFdn_branch) NLGen1jesRelativePtHFdn_branch->SetAddress(&NLGen1jesRelativePtHFdn_);
  NLGen2jesRelativePtHFdn_branch = tree->GetBranch("NLGen2jesRelativePtHFdn");
  if (NLGen2jesRelativePtHFdn_branch) NLGen2jesRelativePtHFdn_branch->SetAddress(&NLGen2jesRelativePtHFdn_);
  NLGen3jesRelativePtHFdn_branch = tree->GetBranch("NLGen3jesRelativePtHFdn");
  if (NLGen3jesRelativePtHFdn_branch) NLGen3jesRelativePtHFdn_branch->SetAddress(&NLGen3jesRelativePtHFdn_);
  NLGen4jesRelativePtHFdn_branch = tree->GetBranch("NLGen4jesRelativePtHFdn");
  if (NLGen4jesRelativePtHFdn_branch) NLGen4jesRelativePtHFdn_branch->SetAddress(&NLGen4jesRelativePtHFdn_);
  NVQGen0jesRelativePtHFdn_branch = tree->GetBranch("NVQGen0jesRelativePtHFdn");
  if (NVQGen0jesRelativePtHFdn_branch) NVQGen0jesRelativePtHFdn_branch->SetAddress(&NVQGen0jesRelativePtHFdn_);
  NVQGen1jesRelativePtHFdn_branch = tree->GetBranch("NVQGen1jesRelativePtHFdn");
  if (NVQGen1jesRelativePtHFdn_branch) NVQGen1jesRelativePtHFdn_branch->SetAddress(&NVQGen1jesRelativePtHFdn_);
  NVQGen2jesRelativePtHFdn_branch = tree->GetBranch("NVQGen2jesRelativePtHFdn");
  if (NVQGen2jesRelativePtHFdn_branch) NVQGen2jesRelativePtHFdn_branch->SetAddress(&NVQGen2jesRelativePtHFdn_);
  NVQGen3jesRelativePtHFdn_branch = tree->GetBranch("NVQGen3jesRelativePtHFdn");
  if (NVQGen3jesRelativePtHFdn_branch) NVQGen3jesRelativePtHFdn_branch->SetAddress(&NVQGen3jesRelativePtHFdn_);
  NVQGen4jesRelativePtHFdn_branch = tree->GetBranch("NVQGen4jesRelativePtHFdn");
  if (NVQGen4jesRelativePtHFdn_branch) NVQGen4jesRelativePtHFdn_branch->SetAddress(&NVQGen4jesRelativePtHFdn_);
  NiFJjesRelativePtHFdn_branch = tree->GetBranch("NiFJjesRelativePtHFdn");
  if (NiFJjesRelativePtHFdn_branch) NiFJjesRelativePtHFdn_branch->SetAddress(&NiFJjesRelativePtHFdn_);
  iVMD0jesRelativePtHFdn_branch = tree->GetBranch("iVMD0jesRelativePtHFdn");
  if (iVMD0jesRelativePtHFdn_branch) iVMD0jesRelativePtHFdn_branch->SetAddress(&iVMD0jesRelativePtHFdn_);
  iVMD1jesRelativePtHFdn_branch = tree->GetBranch("iVMD1jesRelativePtHFdn");
  if (iVMD1jesRelativePtHFdn_branch) iVMD1jesRelativePtHFdn_branch->SetAddress(&iVMD1jesRelativePtHFdn_);
  iVMD2jesRelativePtHFdn_branch = tree->GetBranch("iVMD2jesRelativePtHFdn");
  if (iVMD2jesRelativePtHFdn_branch) iVMD2jesRelativePtHFdn_branch->SetAddress(&iVMD2jesRelativePtHFdn_);
  iVMD3jesRelativePtHFdn_branch = tree->GetBranch("iVMD3jesRelativePtHFdn");
  if (iVMD3jesRelativePtHFdn_branch) iVMD3jesRelativePtHFdn_branch->SetAddress(&iVMD3jesRelativePtHFdn_);
  iVMD4jesRelativePtHFdn_branch = tree->GetBranch("iVMD4jesRelativePtHFdn");
  if (iVMD4jesRelativePtHFdn_branch) iVMD4jesRelativePtHFdn_branch->SetAddress(&iVMD4jesRelativePtHFdn_);
  iWMD0jesRelativePtHFdn_branch = tree->GetBranch("iWMD0jesRelativePtHFdn");
  if (iWMD0jesRelativePtHFdn_branch) iWMD0jesRelativePtHFdn_branch->SetAddress(&iWMD0jesRelativePtHFdn_);
  iWMD1jesRelativePtHFdn_branch = tree->GetBranch("iWMD1jesRelativePtHFdn");
  if (iWMD1jesRelativePtHFdn_branch) iWMD1jesRelativePtHFdn_branch->SetAddress(&iWMD1jesRelativePtHFdn_);
  iWMD2jesRelativePtHFdn_branch = tree->GetBranch("iWMD2jesRelativePtHFdn");
  if (iWMD2jesRelativePtHFdn_branch) iWMD2jesRelativePtHFdn_branch->SetAddress(&iWMD2jesRelativePtHFdn_);
  iWMD3jesRelativePtHFdn_branch = tree->GetBranch("iWMD3jesRelativePtHFdn");
  if (iWMD3jesRelativePtHFdn_branch) iWMD3jesRelativePtHFdn_branch->SetAddress(&iWMD3jesRelativePtHFdn_);
  iWMD4jesRelativePtHFdn_branch = tree->GetBranch("iWMD4jesRelativePtHFdn");
  if (iWMD4jesRelativePtHFdn_branch) iWMD4jesRelativePtHFdn_branch->SetAddress(&iWMD4jesRelativePtHFdn_);
  NJjesRelativePtHFdn_branch = tree->GetBranch("NJjesRelativePtHFdn");
  if (NJjesRelativePtHFdn_branch) NJjesRelativePtHFdn_branch->SetAddress(&NJjesRelativePtHFdn_);
  NbLoosejesRelativePtHFdn_branch = tree->GetBranch("NbLoosejesRelativePtHFdn");
  if (NbLoosejesRelativePtHFdn_branch) NbLoosejesRelativePtHFdn_branch->SetAddress(&NbLoosejesRelativePtHFdn_);
  NbMediumjesRelativePtHFdn_branch = tree->GetBranch("NbMediumjesRelativePtHFdn");
  if (NbMediumjesRelativePtHFdn_branch) NbMediumjesRelativePtHFdn_branch->SetAddress(&NbMediumjesRelativePtHFdn_);
  NbTightjesRelativePtHFdn_branch = tree->GetBranch("NbTightjesRelativePtHFdn");
  if (NbTightjesRelativePtHFdn_branch) NbTightjesRelativePtHFdn_branch->SetAddress(&NbTightjesRelativePtHFdn_);
  NoORNbLoosejesRelativePtHFdn_branch = tree->GetBranch("NoORNbLoosejesRelativePtHFdn");
  if (NoORNbLoosejesRelativePtHFdn_branch) NoORNbLoosejesRelativePtHFdn_branch->SetAddress(&NoORNbLoosejesRelativePtHFdn_);
  NoORNbMediumjesRelativePtHFdn_branch = tree->GetBranch("NoORNbMediumjesRelativePtHFdn");
  if (NoORNbMediumjesRelativePtHFdn_branch) NoORNbMediumjesRelativePtHFdn_branch->SetAddress(&NoORNbMediumjesRelativePtHFdn_);
  NoORNbTightjesRelativePtHFdn_branch = tree->GetBranch("NoORNbTightjesRelativePtHFdn");
  if (NoORNbTightjesRelativePtHFdn_branch) NoORNbTightjesRelativePtHFdn_branch->SetAddress(&NoORNbTightjesRelativePtHFdn_);
  NQJGenjesRelativePtHFdn_branch = tree->GetBranch("NQJGenjesRelativePtHFdn");
  if (NQJGenjesRelativePtHFdn_branch) NQJGenjesRelativePtHFdn_branch->SetAddress(&NQJGenjesRelativePtHFdn_);
  NBJGenjesRelativePtHFdn_branch = tree->GetBranch("NBJGenjesRelativePtHFdn");
  if (NBJGenjesRelativePtHFdn_branch) NBJGenjesRelativePtHFdn_branch->SetAddress(&NBJGenjesRelativePtHFdn_);
  NLJGenjesRelativePtHFdn_branch = tree->GetBranch("NLJGenjesRelativePtHFdn");
  if (NLJGenjesRelativePtHFdn_branch) NLJGenjesRelativePtHFdn_branch->SetAddress(&NLJGenjesRelativePtHFdn_);
  MVVXjesRelativePtHFdn_branch = tree->GetBranch("MVVXjesRelativePtHFdn");
  if (MVVXjesRelativePtHFdn_branch) MVVXjesRelativePtHFdn_branch->SetAddress(&MVVXjesRelativePtHFdn_);
  PtVVXjesRelativePtHFdn_branch = tree->GetBranch("PtVVXjesRelativePtHFdn");
  if (PtVVXjesRelativePtHFdn_branch) PtVVXjesRelativePtHFdn_branch->SetAddress(&PtVVXjesRelativePtHFdn_);
  HTjesRelativePtHFdn_branch = tree->GetBranch("HTjesRelativePtHFdn");
  if (HTjesRelativePtHFdn_branch) HTjesRelativePtHFdn_branch->SetAddress(&HTjesRelativePtHFdn_);
  HTJjesRelativePtHFdn_branch = tree->GetBranch("HTJjesRelativePtHFdn");
  if (HTJjesRelativePtHFdn_branch) HTJjesRelativePtHFdn_branch->SetAddress(&HTJjesRelativePtHFdn_);
  HTFJjesRelativePtHFdn_branch = tree->GetBranch("HTFJjesRelativePtHFdn");
  if (HTFJjesRelativePtHFdn_branch) HTFJjesRelativePtHFdn_branch->SetAddress(&HTFJjesRelativePtHFdn_);
  SumPtFJjesRelativePtHFdn_branch = tree->GetBranch("SumPtFJjesRelativePtHFdn");
  if (SumPtFJjesRelativePtHFdn_branch) SumPtFJjesRelativePtHFdn_branch->SetAddress(&SumPtFJjesRelativePtHFdn_);
  SumPtJjesRelativePtHFdn_branch = tree->GetBranch("SumPtJjesRelativePtHFdn");
  if (SumPtJjesRelativePtHFdn_branch) SumPtJjesRelativePtHFdn_branch->SetAddress(&SumPtJjesRelativePtHFdn_);
  NFJjesRelativeBalup_branch = tree->GetBranch("NFJjesRelativeBalup");
  if (NFJjesRelativeBalup_branch) NFJjesRelativeBalup_branch->SetAddress(&NFJjesRelativeBalup_);
  VMD0jesRelativeBalup_branch = tree->GetBranch("VMD0jesRelativeBalup");
  if (VMD0jesRelativeBalup_branch) VMD0jesRelativeBalup_branch->SetAddress(&VMD0jesRelativeBalup_);
  VMD1jesRelativeBalup_branch = tree->GetBranch("VMD1jesRelativeBalup");
  if (VMD1jesRelativeBalup_branch) VMD1jesRelativeBalup_branch->SetAddress(&VMD1jesRelativeBalup_);
  VMD2jesRelativeBalup_branch = tree->GetBranch("VMD2jesRelativeBalup");
  if (VMD2jesRelativeBalup_branch) VMD2jesRelativeBalup_branch->SetAddress(&VMD2jesRelativeBalup_);
  VMD3jesRelativeBalup_branch = tree->GetBranch("VMD3jesRelativeBalup");
  if (VMD3jesRelativeBalup_branch) VMD3jesRelativeBalup_branch->SetAddress(&VMD3jesRelativeBalup_);
  VMD4jesRelativeBalup_branch = tree->GetBranch("VMD4jesRelativeBalup");
  if (VMD4jesRelativeBalup_branch) VMD4jesRelativeBalup_branch->SetAddress(&VMD4jesRelativeBalup_);
  WMD0jesRelativeBalup_branch = tree->GetBranch("WMD0jesRelativeBalup");
  if (WMD0jesRelativeBalup_branch) WMD0jesRelativeBalup_branch->SetAddress(&WMD0jesRelativeBalup_);
  WMD1jesRelativeBalup_branch = tree->GetBranch("WMD1jesRelativeBalup");
  if (WMD1jesRelativeBalup_branch) WMD1jesRelativeBalup_branch->SetAddress(&WMD1jesRelativeBalup_);
  WMD2jesRelativeBalup_branch = tree->GetBranch("WMD2jesRelativeBalup");
  if (WMD2jesRelativeBalup_branch) WMD2jesRelativeBalup_branch->SetAddress(&WMD2jesRelativeBalup_);
  WMD3jesRelativeBalup_branch = tree->GetBranch("WMD3jesRelativeBalup");
  if (WMD3jesRelativeBalup_branch) WMD3jesRelativeBalup_branch->SetAddress(&WMD3jesRelativeBalup_);
  WMD4jesRelativeBalup_branch = tree->GetBranch("WMD4jesRelativeBalup");
  if (WMD4jesRelativeBalup_branch) WMD4jesRelativeBalup_branch->SetAddress(&WMD4jesRelativeBalup_);
  NQGen0jesRelativeBalup_branch = tree->GetBranch("NQGen0jesRelativeBalup");
  if (NQGen0jesRelativeBalup_branch) NQGen0jesRelativeBalup_branch->SetAddress(&NQGen0jesRelativeBalup_);
  NQGen1jesRelativeBalup_branch = tree->GetBranch("NQGen1jesRelativeBalup");
  if (NQGen1jesRelativeBalup_branch) NQGen1jesRelativeBalup_branch->SetAddress(&NQGen1jesRelativeBalup_);
  NQGen2jesRelativeBalup_branch = tree->GetBranch("NQGen2jesRelativeBalup");
  if (NQGen2jesRelativeBalup_branch) NQGen2jesRelativeBalup_branch->SetAddress(&NQGen2jesRelativeBalup_);
  NQGen3jesRelativeBalup_branch = tree->GetBranch("NQGen3jesRelativeBalup");
  if (NQGen3jesRelativeBalup_branch) NQGen3jesRelativeBalup_branch->SetAddress(&NQGen3jesRelativeBalup_);
  NQGen4jesRelativeBalup_branch = tree->GetBranch("NQGen4jesRelativeBalup");
  if (NQGen4jesRelativeBalup_branch) NQGen4jesRelativeBalup_branch->SetAddress(&NQGen4jesRelativeBalup_);
  NBGen0jesRelativeBalup_branch = tree->GetBranch("NBGen0jesRelativeBalup");
  if (NBGen0jesRelativeBalup_branch) NBGen0jesRelativeBalup_branch->SetAddress(&NBGen0jesRelativeBalup_);
  NBGen1jesRelativeBalup_branch = tree->GetBranch("NBGen1jesRelativeBalup");
  if (NBGen1jesRelativeBalup_branch) NBGen1jesRelativeBalup_branch->SetAddress(&NBGen1jesRelativeBalup_);
  NBGen2jesRelativeBalup_branch = tree->GetBranch("NBGen2jesRelativeBalup");
  if (NBGen2jesRelativeBalup_branch) NBGen2jesRelativeBalup_branch->SetAddress(&NBGen2jesRelativeBalup_);
  NBGen3jesRelativeBalup_branch = tree->GetBranch("NBGen3jesRelativeBalup");
  if (NBGen3jesRelativeBalup_branch) NBGen3jesRelativeBalup_branch->SetAddress(&NBGen3jesRelativeBalup_);
  NBGen4jesRelativeBalup_branch = tree->GetBranch("NBGen4jesRelativeBalup");
  if (NBGen4jesRelativeBalup_branch) NBGen4jesRelativeBalup_branch->SetAddress(&NBGen4jesRelativeBalup_);
  NLGen0jesRelativeBalup_branch = tree->GetBranch("NLGen0jesRelativeBalup");
  if (NLGen0jesRelativeBalup_branch) NLGen0jesRelativeBalup_branch->SetAddress(&NLGen0jesRelativeBalup_);
  NLGen1jesRelativeBalup_branch = tree->GetBranch("NLGen1jesRelativeBalup");
  if (NLGen1jesRelativeBalup_branch) NLGen1jesRelativeBalup_branch->SetAddress(&NLGen1jesRelativeBalup_);
  NLGen2jesRelativeBalup_branch = tree->GetBranch("NLGen2jesRelativeBalup");
  if (NLGen2jesRelativeBalup_branch) NLGen2jesRelativeBalup_branch->SetAddress(&NLGen2jesRelativeBalup_);
  NLGen3jesRelativeBalup_branch = tree->GetBranch("NLGen3jesRelativeBalup");
  if (NLGen3jesRelativeBalup_branch) NLGen3jesRelativeBalup_branch->SetAddress(&NLGen3jesRelativeBalup_);
  NLGen4jesRelativeBalup_branch = tree->GetBranch("NLGen4jesRelativeBalup");
  if (NLGen4jesRelativeBalup_branch) NLGen4jesRelativeBalup_branch->SetAddress(&NLGen4jesRelativeBalup_);
  NVQGen0jesRelativeBalup_branch = tree->GetBranch("NVQGen0jesRelativeBalup");
  if (NVQGen0jesRelativeBalup_branch) NVQGen0jesRelativeBalup_branch->SetAddress(&NVQGen0jesRelativeBalup_);
  NVQGen1jesRelativeBalup_branch = tree->GetBranch("NVQGen1jesRelativeBalup");
  if (NVQGen1jesRelativeBalup_branch) NVQGen1jesRelativeBalup_branch->SetAddress(&NVQGen1jesRelativeBalup_);
  NVQGen2jesRelativeBalup_branch = tree->GetBranch("NVQGen2jesRelativeBalup");
  if (NVQGen2jesRelativeBalup_branch) NVQGen2jesRelativeBalup_branch->SetAddress(&NVQGen2jesRelativeBalup_);
  NVQGen3jesRelativeBalup_branch = tree->GetBranch("NVQGen3jesRelativeBalup");
  if (NVQGen3jesRelativeBalup_branch) NVQGen3jesRelativeBalup_branch->SetAddress(&NVQGen3jesRelativeBalup_);
  NVQGen4jesRelativeBalup_branch = tree->GetBranch("NVQGen4jesRelativeBalup");
  if (NVQGen4jesRelativeBalup_branch) NVQGen4jesRelativeBalup_branch->SetAddress(&NVQGen4jesRelativeBalup_);
  NiFJjesRelativeBalup_branch = tree->GetBranch("NiFJjesRelativeBalup");
  if (NiFJjesRelativeBalup_branch) NiFJjesRelativeBalup_branch->SetAddress(&NiFJjesRelativeBalup_);
  iVMD0jesRelativeBalup_branch = tree->GetBranch("iVMD0jesRelativeBalup");
  if (iVMD0jesRelativeBalup_branch) iVMD0jesRelativeBalup_branch->SetAddress(&iVMD0jesRelativeBalup_);
  iVMD1jesRelativeBalup_branch = tree->GetBranch("iVMD1jesRelativeBalup");
  if (iVMD1jesRelativeBalup_branch) iVMD1jesRelativeBalup_branch->SetAddress(&iVMD1jesRelativeBalup_);
  iVMD2jesRelativeBalup_branch = tree->GetBranch("iVMD2jesRelativeBalup");
  if (iVMD2jesRelativeBalup_branch) iVMD2jesRelativeBalup_branch->SetAddress(&iVMD2jesRelativeBalup_);
  iVMD3jesRelativeBalup_branch = tree->GetBranch("iVMD3jesRelativeBalup");
  if (iVMD3jesRelativeBalup_branch) iVMD3jesRelativeBalup_branch->SetAddress(&iVMD3jesRelativeBalup_);
  iVMD4jesRelativeBalup_branch = tree->GetBranch("iVMD4jesRelativeBalup");
  if (iVMD4jesRelativeBalup_branch) iVMD4jesRelativeBalup_branch->SetAddress(&iVMD4jesRelativeBalup_);
  iWMD0jesRelativeBalup_branch = tree->GetBranch("iWMD0jesRelativeBalup");
  if (iWMD0jesRelativeBalup_branch) iWMD0jesRelativeBalup_branch->SetAddress(&iWMD0jesRelativeBalup_);
  iWMD1jesRelativeBalup_branch = tree->GetBranch("iWMD1jesRelativeBalup");
  if (iWMD1jesRelativeBalup_branch) iWMD1jesRelativeBalup_branch->SetAddress(&iWMD1jesRelativeBalup_);
  iWMD2jesRelativeBalup_branch = tree->GetBranch("iWMD2jesRelativeBalup");
  if (iWMD2jesRelativeBalup_branch) iWMD2jesRelativeBalup_branch->SetAddress(&iWMD2jesRelativeBalup_);
  iWMD3jesRelativeBalup_branch = tree->GetBranch("iWMD3jesRelativeBalup");
  if (iWMD3jesRelativeBalup_branch) iWMD3jesRelativeBalup_branch->SetAddress(&iWMD3jesRelativeBalup_);
  iWMD4jesRelativeBalup_branch = tree->GetBranch("iWMD4jesRelativeBalup");
  if (iWMD4jesRelativeBalup_branch) iWMD4jesRelativeBalup_branch->SetAddress(&iWMD4jesRelativeBalup_);
  NJjesRelativeBalup_branch = tree->GetBranch("NJjesRelativeBalup");
  if (NJjesRelativeBalup_branch) NJjesRelativeBalup_branch->SetAddress(&NJjesRelativeBalup_);
  NbLoosejesRelativeBalup_branch = tree->GetBranch("NbLoosejesRelativeBalup");
  if (NbLoosejesRelativeBalup_branch) NbLoosejesRelativeBalup_branch->SetAddress(&NbLoosejesRelativeBalup_);
  NbMediumjesRelativeBalup_branch = tree->GetBranch("NbMediumjesRelativeBalup");
  if (NbMediumjesRelativeBalup_branch) NbMediumjesRelativeBalup_branch->SetAddress(&NbMediumjesRelativeBalup_);
  NbTightjesRelativeBalup_branch = tree->GetBranch("NbTightjesRelativeBalup");
  if (NbTightjesRelativeBalup_branch) NbTightjesRelativeBalup_branch->SetAddress(&NbTightjesRelativeBalup_);
  NoORNbLoosejesRelativeBalup_branch = tree->GetBranch("NoORNbLoosejesRelativeBalup");
  if (NoORNbLoosejesRelativeBalup_branch) NoORNbLoosejesRelativeBalup_branch->SetAddress(&NoORNbLoosejesRelativeBalup_);
  NoORNbMediumjesRelativeBalup_branch = tree->GetBranch("NoORNbMediumjesRelativeBalup");
  if (NoORNbMediumjesRelativeBalup_branch) NoORNbMediumjesRelativeBalup_branch->SetAddress(&NoORNbMediumjesRelativeBalup_);
  NoORNbTightjesRelativeBalup_branch = tree->GetBranch("NoORNbTightjesRelativeBalup");
  if (NoORNbTightjesRelativeBalup_branch) NoORNbTightjesRelativeBalup_branch->SetAddress(&NoORNbTightjesRelativeBalup_);
  NQJGenjesRelativeBalup_branch = tree->GetBranch("NQJGenjesRelativeBalup");
  if (NQJGenjesRelativeBalup_branch) NQJGenjesRelativeBalup_branch->SetAddress(&NQJGenjesRelativeBalup_);
  NBJGenjesRelativeBalup_branch = tree->GetBranch("NBJGenjesRelativeBalup");
  if (NBJGenjesRelativeBalup_branch) NBJGenjesRelativeBalup_branch->SetAddress(&NBJGenjesRelativeBalup_);
  NLJGenjesRelativeBalup_branch = tree->GetBranch("NLJGenjesRelativeBalup");
  if (NLJGenjesRelativeBalup_branch) NLJGenjesRelativeBalup_branch->SetAddress(&NLJGenjesRelativeBalup_);
  MVVXjesRelativeBalup_branch = tree->GetBranch("MVVXjesRelativeBalup");
  if (MVVXjesRelativeBalup_branch) MVVXjesRelativeBalup_branch->SetAddress(&MVVXjesRelativeBalup_);
  PtVVXjesRelativeBalup_branch = tree->GetBranch("PtVVXjesRelativeBalup");
  if (PtVVXjesRelativeBalup_branch) PtVVXjesRelativeBalup_branch->SetAddress(&PtVVXjesRelativeBalup_);
  HTjesRelativeBalup_branch = tree->GetBranch("HTjesRelativeBalup");
  if (HTjesRelativeBalup_branch) HTjesRelativeBalup_branch->SetAddress(&HTjesRelativeBalup_);
  HTJjesRelativeBalup_branch = tree->GetBranch("HTJjesRelativeBalup");
  if (HTJjesRelativeBalup_branch) HTJjesRelativeBalup_branch->SetAddress(&HTJjesRelativeBalup_);
  HTFJjesRelativeBalup_branch = tree->GetBranch("HTFJjesRelativeBalup");
  if (HTFJjesRelativeBalup_branch) HTFJjesRelativeBalup_branch->SetAddress(&HTFJjesRelativeBalup_);
  SumPtFJjesRelativeBalup_branch = tree->GetBranch("SumPtFJjesRelativeBalup");
  if (SumPtFJjesRelativeBalup_branch) SumPtFJjesRelativeBalup_branch->SetAddress(&SumPtFJjesRelativeBalup_);
  SumPtJjesRelativeBalup_branch = tree->GetBranch("SumPtJjesRelativeBalup");
  if (SumPtJjesRelativeBalup_branch) SumPtJjesRelativeBalup_branch->SetAddress(&SumPtJjesRelativeBalup_);
  NFJjesRelativeBaldn_branch = tree->GetBranch("NFJjesRelativeBaldn");
  if (NFJjesRelativeBaldn_branch) NFJjesRelativeBaldn_branch->SetAddress(&NFJjesRelativeBaldn_);
  VMD0jesRelativeBaldn_branch = tree->GetBranch("VMD0jesRelativeBaldn");
  if (VMD0jesRelativeBaldn_branch) VMD0jesRelativeBaldn_branch->SetAddress(&VMD0jesRelativeBaldn_);
  VMD1jesRelativeBaldn_branch = tree->GetBranch("VMD1jesRelativeBaldn");
  if (VMD1jesRelativeBaldn_branch) VMD1jesRelativeBaldn_branch->SetAddress(&VMD1jesRelativeBaldn_);
  VMD2jesRelativeBaldn_branch = tree->GetBranch("VMD2jesRelativeBaldn");
  if (VMD2jesRelativeBaldn_branch) VMD2jesRelativeBaldn_branch->SetAddress(&VMD2jesRelativeBaldn_);
  VMD3jesRelativeBaldn_branch = tree->GetBranch("VMD3jesRelativeBaldn");
  if (VMD3jesRelativeBaldn_branch) VMD3jesRelativeBaldn_branch->SetAddress(&VMD3jesRelativeBaldn_);
  VMD4jesRelativeBaldn_branch = tree->GetBranch("VMD4jesRelativeBaldn");
  if (VMD4jesRelativeBaldn_branch) VMD4jesRelativeBaldn_branch->SetAddress(&VMD4jesRelativeBaldn_);
  WMD0jesRelativeBaldn_branch = tree->GetBranch("WMD0jesRelativeBaldn");
  if (WMD0jesRelativeBaldn_branch) WMD0jesRelativeBaldn_branch->SetAddress(&WMD0jesRelativeBaldn_);
  WMD1jesRelativeBaldn_branch = tree->GetBranch("WMD1jesRelativeBaldn");
  if (WMD1jesRelativeBaldn_branch) WMD1jesRelativeBaldn_branch->SetAddress(&WMD1jesRelativeBaldn_);
  WMD2jesRelativeBaldn_branch = tree->GetBranch("WMD2jesRelativeBaldn");
  if (WMD2jesRelativeBaldn_branch) WMD2jesRelativeBaldn_branch->SetAddress(&WMD2jesRelativeBaldn_);
  WMD3jesRelativeBaldn_branch = tree->GetBranch("WMD3jesRelativeBaldn");
  if (WMD3jesRelativeBaldn_branch) WMD3jesRelativeBaldn_branch->SetAddress(&WMD3jesRelativeBaldn_);
  WMD4jesRelativeBaldn_branch = tree->GetBranch("WMD4jesRelativeBaldn");
  if (WMD4jesRelativeBaldn_branch) WMD4jesRelativeBaldn_branch->SetAddress(&WMD4jesRelativeBaldn_);
  NQGen0jesRelativeBaldn_branch = tree->GetBranch("NQGen0jesRelativeBaldn");
  if (NQGen0jesRelativeBaldn_branch) NQGen0jesRelativeBaldn_branch->SetAddress(&NQGen0jesRelativeBaldn_);
  NQGen1jesRelativeBaldn_branch = tree->GetBranch("NQGen1jesRelativeBaldn");
  if (NQGen1jesRelativeBaldn_branch) NQGen1jesRelativeBaldn_branch->SetAddress(&NQGen1jesRelativeBaldn_);
  NQGen2jesRelativeBaldn_branch = tree->GetBranch("NQGen2jesRelativeBaldn");
  if (NQGen2jesRelativeBaldn_branch) NQGen2jesRelativeBaldn_branch->SetAddress(&NQGen2jesRelativeBaldn_);
  NQGen3jesRelativeBaldn_branch = tree->GetBranch("NQGen3jesRelativeBaldn");
  if (NQGen3jesRelativeBaldn_branch) NQGen3jesRelativeBaldn_branch->SetAddress(&NQGen3jesRelativeBaldn_);
  NQGen4jesRelativeBaldn_branch = tree->GetBranch("NQGen4jesRelativeBaldn");
  if (NQGen4jesRelativeBaldn_branch) NQGen4jesRelativeBaldn_branch->SetAddress(&NQGen4jesRelativeBaldn_);
  NBGen0jesRelativeBaldn_branch = tree->GetBranch("NBGen0jesRelativeBaldn");
  if (NBGen0jesRelativeBaldn_branch) NBGen0jesRelativeBaldn_branch->SetAddress(&NBGen0jesRelativeBaldn_);
  NBGen1jesRelativeBaldn_branch = tree->GetBranch("NBGen1jesRelativeBaldn");
  if (NBGen1jesRelativeBaldn_branch) NBGen1jesRelativeBaldn_branch->SetAddress(&NBGen1jesRelativeBaldn_);
  NBGen2jesRelativeBaldn_branch = tree->GetBranch("NBGen2jesRelativeBaldn");
  if (NBGen2jesRelativeBaldn_branch) NBGen2jesRelativeBaldn_branch->SetAddress(&NBGen2jesRelativeBaldn_);
  NBGen3jesRelativeBaldn_branch = tree->GetBranch("NBGen3jesRelativeBaldn");
  if (NBGen3jesRelativeBaldn_branch) NBGen3jesRelativeBaldn_branch->SetAddress(&NBGen3jesRelativeBaldn_);
  NBGen4jesRelativeBaldn_branch = tree->GetBranch("NBGen4jesRelativeBaldn");
  if (NBGen4jesRelativeBaldn_branch) NBGen4jesRelativeBaldn_branch->SetAddress(&NBGen4jesRelativeBaldn_);
  NLGen0jesRelativeBaldn_branch = tree->GetBranch("NLGen0jesRelativeBaldn");
  if (NLGen0jesRelativeBaldn_branch) NLGen0jesRelativeBaldn_branch->SetAddress(&NLGen0jesRelativeBaldn_);
  NLGen1jesRelativeBaldn_branch = tree->GetBranch("NLGen1jesRelativeBaldn");
  if (NLGen1jesRelativeBaldn_branch) NLGen1jesRelativeBaldn_branch->SetAddress(&NLGen1jesRelativeBaldn_);
  NLGen2jesRelativeBaldn_branch = tree->GetBranch("NLGen2jesRelativeBaldn");
  if (NLGen2jesRelativeBaldn_branch) NLGen2jesRelativeBaldn_branch->SetAddress(&NLGen2jesRelativeBaldn_);
  NLGen3jesRelativeBaldn_branch = tree->GetBranch("NLGen3jesRelativeBaldn");
  if (NLGen3jesRelativeBaldn_branch) NLGen3jesRelativeBaldn_branch->SetAddress(&NLGen3jesRelativeBaldn_);
  NLGen4jesRelativeBaldn_branch = tree->GetBranch("NLGen4jesRelativeBaldn");
  if (NLGen4jesRelativeBaldn_branch) NLGen4jesRelativeBaldn_branch->SetAddress(&NLGen4jesRelativeBaldn_);
  NVQGen0jesRelativeBaldn_branch = tree->GetBranch("NVQGen0jesRelativeBaldn");
  if (NVQGen0jesRelativeBaldn_branch) NVQGen0jesRelativeBaldn_branch->SetAddress(&NVQGen0jesRelativeBaldn_);
  NVQGen1jesRelativeBaldn_branch = tree->GetBranch("NVQGen1jesRelativeBaldn");
  if (NVQGen1jesRelativeBaldn_branch) NVQGen1jesRelativeBaldn_branch->SetAddress(&NVQGen1jesRelativeBaldn_);
  NVQGen2jesRelativeBaldn_branch = tree->GetBranch("NVQGen2jesRelativeBaldn");
  if (NVQGen2jesRelativeBaldn_branch) NVQGen2jesRelativeBaldn_branch->SetAddress(&NVQGen2jesRelativeBaldn_);
  NVQGen3jesRelativeBaldn_branch = tree->GetBranch("NVQGen3jesRelativeBaldn");
  if (NVQGen3jesRelativeBaldn_branch) NVQGen3jesRelativeBaldn_branch->SetAddress(&NVQGen3jesRelativeBaldn_);
  NVQGen4jesRelativeBaldn_branch = tree->GetBranch("NVQGen4jesRelativeBaldn");
  if (NVQGen4jesRelativeBaldn_branch) NVQGen4jesRelativeBaldn_branch->SetAddress(&NVQGen4jesRelativeBaldn_);
  NiFJjesRelativeBaldn_branch = tree->GetBranch("NiFJjesRelativeBaldn");
  if (NiFJjesRelativeBaldn_branch) NiFJjesRelativeBaldn_branch->SetAddress(&NiFJjesRelativeBaldn_);
  iVMD0jesRelativeBaldn_branch = tree->GetBranch("iVMD0jesRelativeBaldn");
  if (iVMD0jesRelativeBaldn_branch) iVMD0jesRelativeBaldn_branch->SetAddress(&iVMD0jesRelativeBaldn_);
  iVMD1jesRelativeBaldn_branch = tree->GetBranch("iVMD1jesRelativeBaldn");
  if (iVMD1jesRelativeBaldn_branch) iVMD1jesRelativeBaldn_branch->SetAddress(&iVMD1jesRelativeBaldn_);
  iVMD2jesRelativeBaldn_branch = tree->GetBranch("iVMD2jesRelativeBaldn");
  if (iVMD2jesRelativeBaldn_branch) iVMD2jesRelativeBaldn_branch->SetAddress(&iVMD2jesRelativeBaldn_);
  iVMD3jesRelativeBaldn_branch = tree->GetBranch("iVMD3jesRelativeBaldn");
  if (iVMD3jesRelativeBaldn_branch) iVMD3jesRelativeBaldn_branch->SetAddress(&iVMD3jesRelativeBaldn_);
  iVMD4jesRelativeBaldn_branch = tree->GetBranch("iVMD4jesRelativeBaldn");
  if (iVMD4jesRelativeBaldn_branch) iVMD4jesRelativeBaldn_branch->SetAddress(&iVMD4jesRelativeBaldn_);
  iWMD0jesRelativeBaldn_branch = tree->GetBranch("iWMD0jesRelativeBaldn");
  if (iWMD0jesRelativeBaldn_branch) iWMD0jesRelativeBaldn_branch->SetAddress(&iWMD0jesRelativeBaldn_);
  iWMD1jesRelativeBaldn_branch = tree->GetBranch("iWMD1jesRelativeBaldn");
  if (iWMD1jesRelativeBaldn_branch) iWMD1jesRelativeBaldn_branch->SetAddress(&iWMD1jesRelativeBaldn_);
  iWMD2jesRelativeBaldn_branch = tree->GetBranch("iWMD2jesRelativeBaldn");
  if (iWMD2jesRelativeBaldn_branch) iWMD2jesRelativeBaldn_branch->SetAddress(&iWMD2jesRelativeBaldn_);
  iWMD3jesRelativeBaldn_branch = tree->GetBranch("iWMD3jesRelativeBaldn");
  if (iWMD3jesRelativeBaldn_branch) iWMD3jesRelativeBaldn_branch->SetAddress(&iWMD3jesRelativeBaldn_);
  iWMD4jesRelativeBaldn_branch = tree->GetBranch("iWMD4jesRelativeBaldn");
  if (iWMD4jesRelativeBaldn_branch) iWMD4jesRelativeBaldn_branch->SetAddress(&iWMD4jesRelativeBaldn_);
  NJjesRelativeBaldn_branch = tree->GetBranch("NJjesRelativeBaldn");
  if (NJjesRelativeBaldn_branch) NJjesRelativeBaldn_branch->SetAddress(&NJjesRelativeBaldn_);
  NbLoosejesRelativeBaldn_branch = tree->GetBranch("NbLoosejesRelativeBaldn");
  if (NbLoosejesRelativeBaldn_branch) NbLoosejesRelativeBaldn_branch->SetAddress(&NbLoosejesRelativeBaldn_);
  NbMediumjesRelativeBaldn_branch = tree->GetBranch("NbMediumjesRelativeBaldn");
  if (NbMediumjesRelativeBaldn_branch) NbMediumjesRelativeBaldn_branch->SetAddress(&NbMediumjesRelativeBaldn_);
  NbTightjesRelativeBaldn_branch = tree->GetBranch("NbTightjesRelativeBaldn");
  if (NbTightjesRelativeBaldn_branch) NbTightjesRelativeBaldn_branch->SetAddress(&NbTightjesRelativeBaldn_);
  NoORNbLoosejesRelativeBaldn_branch = tree->GetBranch("NoORNbLoosejesRelativeBaldn");
  if (NoORNbLoosejesRelativeBaldn_branch) NoORNbLoosejesRelativeBaldn_branch->SetAddress(&NoORNbLoosejesRelativeBaldn_);
  NoORNbMediumjesRelativeBaldn_branch = tree->GetBranch("NoORNbMediumjesRelativeBaldn");
  if (NoORNbMediumjesRelativeBaldn_branch) NoORNbMediumjesRelativeBaldn_branch->SetAddress(&NoORNbMediumjesRelativeBaldn_);
  NoORNbTightjesRelativeBaldn_branch = tree->GetBranch("NoORNbTightjesRelativeBaldn");
  if (NoORNbTightjesRelativeBaldn_branch) NoORNbTightjesRelativeBaldn_branch->SetAddress(&NoORNbTightjesRelativeBaldn_);
  NQJGenjesRelativeBaldn_branch = tree->GetBranch("NQJGenjesRelativeBaldn");
  if (NQJGenjesRelativeBaldn_branch) NQJGenjesRelativeBaldn_branch->SetAddress(&NQJGenjesRelativeBaldn_);
  NBJGenjesRelativeBaldn_branch = tree->GetBranch("NBJGenjesRelativeBaldn");
  if (NBJGenjesRelativeBaldn_branch) NBJGenjesRelativeBaldn_branch->SetAddress(&NBJGenjesRelativeBaldn_);
  NLJGenjesRelativeBaldn_branch = tree->GetBranch("NLJGenjesRelativeBaldn");
  if (NLJGenjesRelativeBaldn_branch) NLJGenjesRelativeBaldn_branch->SetAddress(&NLJGenjesRelativeBaldn_);
  MVVXjesRelativeBaldn_branch = tree->GetBranch("MVVXjesRelativeBaldn");
  if (MVVXjesRelativeBaldn_branch) MVVXjesRelativeBaldn_branch->SetAddress(&MVVXjesRelativeBaldn_);
  PtVVXjesRelativeBaldn_branch = tree->GetBranch("PtVVXjesRelativeBaldn");
  if (PtVVXjesRelativeBaldn_branch) PtVVXjesRelativeBaldn_branch->SetAddress(&PtVVXjesRelativeBaldn_);
  HTjesRelativeBaldn_branch = tree->GetBranch("HTjesRelativeBaldn");
  if (HTjesRelativeBaldn_branch) HTjesRelativeBaldn_branch->SetAddress(&HTjesRelativeBaldn_);
  HTJjesRelativeBaldn_branch = tree->GetBranch("HTJjesRelativeBaldn");
  if (HTJjesRelativeBaldn_branch) HTJjesRelativeBaldn_branch->SetAddress(&HTJjesRelativeBaldn_);
  HTFJjesRelativeBaldn_branch = tree->GetBranch("HTFJjesRelativeBaldn");
  if (HTFJjesRelativeBaldn_branch) HTFJjesRelativeBaldn_branch->SetAddress(&HTFJjesRelativeBaldn_);
  SumPtFJjesRelativeBaldn_branch = tree->GetBranch("SumPtFJjesRelativeBaldn");
  if (SumPtFJjesRelativeBaldn_branch) SumPtFJjesRelativeBaldn_branch->SetAddress(&SumPtFJjesRelativeBaldn_);
  SumPtJjesRelativeBaldn_branch = tree->GetBranch("SumPtJjesRelativeBaldn");
  if (SumPtJjesRelativeBaldn_branch) SumPtJjesRelativeBaldn_branch->SetAddress(&SumPtJjesRelativeBaldn_);
  NFJjesRelativeSampleup_branch = tree->GetBranch("NFJjesRelativeSampleup");
  if (NFJjesRelativeSampleup_branch) NFJjesRelativeSampleup_branch->SetAddress(&NFJjesRelativeSampleup_);
  VMD0jesRelativeSampleup_branch = tree->GetBranch("VMD0jesRelativeSampleup");
  if (VMD0jesRelativeSampleup_branch) VMD0jesRelativeSampleup_branch->SetAddress(&VMD0jesRelativeSampleup_);
  VMD1jesRelativeSampleup_branch = tree->GetBranch("VMD1jesRelativeSampleup");
  if (VMD1jesRelativeSampleup_branch) VMD1jesRelativeSampleup_branch->SetAddress(&VMD1jesRelativeSampleup_);
  VMD2jesRelativeSampleup_branch = tree->GetBranch("VMD2jesRelativeSampleup");
  if (VMD2jesRelativeSampleup_branch) VMD2jesRelativeSampleup_branch->SetAddress(&VMD2jesRelativeSampleup_);
  VMD3jesRelativeSampleup_branch = tree->GetBranch("VMD3jesRelativeSampleup");
  if (VMD3jesRelativeSampleup_branch) VMD3jesRelativeSampleup_branch->SetAddress(&VMD3jesRelativeSampleup_);
  VMD4jesRelativeSampleup_branch = tree->GetBranch("VMD4jesRelativeSampleup");
  if (VMD4jesRelativeSampleup_branch) VMD4jesRelativeSampleup_branch->SetAddress(&VMD4jesRelativeSampleup_);
  WMD0jesRelativeSampleup_branch = tree->GetBranch("WMD0jesRelativeSampleup");
  if (WMD0jesRelativeSampleup_branch) WMD0jesRelativeSampleup_branch->SetAddress(&WMD0jesRelativeSampleup_);
  WMD1jesRelativeSampleup_branch = tree->GetBranch("WMD1jesRelativeSampleup");
  if (WMD1jesRelativeSampleup_branch) WMD1jesRelativeSampleup_branch->SetAddress(&WMD1jesRelativeSampleup_);
  WMD2jesRelativeSampleup_branch = tree->GetBranch("WMD2jesRelativeSampleup");
  if (WMD2jesRelativeSampleup_branch) WMD2jesRelativeSampleup_branch->SetAddress(&WMD2jesRelativeSampleup_);
  WMD3jesRelativeSampleup_branch = tree->GetBranch("WMD3jesRelativeSampleup");
  if (WMD3jesRelativeSampleup_branch) WMD3jesRelativeSampleup_branch->SetAddress(&WMD3jesRelativeSampleup_);
  WMD4jesRelativeSampleup_branch = tree->GetBranch("WMD4jesRelativeSampleup");
  if (WMD4jesRelativeSampleup_branch) WMD4jesRelativeSampleup_branch->SetAddress(&WMD4jesRelativeSampleup_);
  NQGen0jesRelativeSampleup_branch = tree->GetBranch("NQGen0jesRelativeSampleup");
  if (NQGen0jesRelativeSampleup_branch) NQGen0jesRelativeSampleup_branch->SetAddress(&NQGen0jesRelativeSampleup_);
  NQGen1jesRelativeSampleup_branch = tree->GetBranch("NQGen1jesRelativeSampleup");
  if (NQGen1jesRelativeSampleup_branch) NQGen1jesRelativeSampleup_branch->SetAddress(&NQGen1jesRelativeSampleup_);
  NQGen2jesRelativeSampleup_branch = tree->GetBranch("NQGen2jesRelativeSampleup");
  if (NQGen2jesRelativeSampleup_branch) NQGen2jesRelativeSampleup_branch->SetAddress(&NQGen2jesRelativeSampleup_);
  NQGen3jesRelativeSampleup_branch = tree->GetBranch("NQGen3jesRelativeSampleup");
  if (NQGen3jesRelativeSampleup_branch) NQGen3jesRelativeSampleup_branch->SetAddress(&NQGen3jesRelativeSampleup_);
  NQGen4jesRelativeSampleup_branch = tree->GetBranch("NQGen4jesRelativeSampleup");
  if (NQGen4jesRelativeSampleup_branch) NQGen4jesRelativeSampleup_branch->SetAddress(&NQGen4jesRelativeSampleup_);
  NBGen0jesRelativeSampleup_branch = tree->GetBranch("NBGen0jesRelativeSampleup");
  if (NBGen0jesRelativeSampleup_branch) NBGen0jesRelativeSampleup_branch->SetAddress(&NBGen0jesRelativeSampleup_);
  NBGen1jesRelativeSampleup_branch = tree->GetBranch("NBGen1jesRelativeSampleup");
  if (NBGen1jesRelativeSampleup_branch) NBGen1jesRelativeSampleup_branch->SetAddress(&NBGen1jesRelativeSampleup_);
  NBGen2jesRelativeSampleup_branch = tree->GetBranch("NBGen2jesRelativeSampleup");
  if (NBGen2jesRelativeSampleup_branch) NBGen2jesRelativeSampleup_branch->SetAddress(&NBGen2jesRelativeSampleup_);
  NBGen3jesRelativeSampleup_branch = tree->GetBranch("NBGen3jesRelativeSampleup");
  if (NBGen3jesRelativeSampleup_branch) NBGen3jesRelativeSampleup_branch->SetAddress(&NBGen3jesRelativeSampleup_);
  NBGen4jesRelativeSampleup_branch = tree->GetBranch("NBGen4jesRelativeSampleup");
  if (NBGen4jesRelativeSampleup_branch) NBGen4jesRelativeSampleup_branch->SetAddress(&NBGen4jesRelativeSampleup_);
  NLGen0jesRelativeSampleup_branch = tree->GetBranch("NLGen0jesRelativeSampleup");
  if (NLGen0jesRelativeSampleup_branch) NLGen0jesRelativeSampleup_branch->SetAddress(&NLGen0jesRelativeSampleup_);
  NLGen1jesRelativeSampleup_branch = tree->GetBranch("NLGen1jesRelativeSampleup");
  if (NLGen1jesRelativeSampleup_branch) NLGen1jesRelativeSampleup_branch->SetAddress(&NLGen1jesRelativeSampleup_);
  NLGen2jesRelativeSampleup_branch = tree->GetBranch("NLGen2jesRelativeSampleup");
  if (NLGen2jesRelativeSampleup_branch) NLGen2jesRelativeSampleup_branch->SetAddress(&NLGen2jesRelativeSampleup_);
  NLGen3jesRelativeSampleup_branch = tree->GetBranch("NLGen3jesRelativeSampleup");
  if (NLGen3jesRelativeSampleup_branch) NLGen3jesRelativeSampleup_branch->SetAddress(&NLGen3jesRelativeSampleup_);
  NLGen4jesRelativeSampleup_branch = tree->GetBranch("NLGen4jesRelativeSampleup");
  if (NLGen4jesRelativeSampleup_branch) NLGen4jesRelativeSampleup_branch->SetAddress(&NLGen4jesRelativeSampleup_);
  NVQGen0jesRelativeSampleup_branch = tree->GetBranch("NVQGen0jesRelativeSampleup");
  if (NVQGen0jesRelativeSampleup_branch) NVQGen0jesRelativeSampleup_branch->SetAddress(&NVQGen0jesRelativeSampleup_);
  NVQGen1jesRelativeSampleup_branch = tree->GetBranch("NVQGen1jesRelativeSampleup");
  if (NVQGen1jesRelativeSampleup_branch) NVQGen1jesRelativeSampleup_branch->SetAddress(&NVQGen1jesRelativeSampleup_);
  NVQGen2jesRelativeSampleup_branch = tree->GetBranch("NVQGen2jesRelativeSampleup");
  if (NVQGen2jesRelativeSampleup_branch) NVQGen2jesRelativeSampleup_branch->SetAddress(&NVQGen2jesRelativeSampleup_);
  NVQGen3jesRelativeSampleup_branch = tree->GetBranch("NVQGen3jesRelativeSampleup");
  if (NVQGen3jesRelativeSampleup_branch) NVQGen3jesRelativeSampleup_branch->SetAddress(&NVQGen3jesRelativeSampleup_);
  NVQGen4jesRelativeSampleup_branch = tree->GetBranch("NVQGen4jesRelativeSampleup");
  if (NVQGen4jesRelativeSampleup_branch) NVQGen4jesRelativeSampleup_branch->SetAddress(&NVQGen4jesRelativeSampleup_);
  NiFJjesRelativeSampleup_branch = tree->GetBranch("NiFJjesRelativeSampleup");
  if (NiFJjesRelativeSampleup_branch) NiFJjesRelativeSampleup_branch->SetAddress(&NiFJjesRelativeSampleup_);
  iVMD0jesRelativeSampleup_branch = tree->GetBranch("iVMD0jesRelativeSampleup");
  if (iVMD0jesRelativeSampleup_branch) iVMD0jesRelativeSampleup_branch->SetAddress(&iVMD0jesRelativeSampleup_);
  iVMD1jesRelativeSampleup_branch = tree->GetBranch("iVMD1jesRelativeSampleup");
  if (iVMD1jesRelativeSampleup_branch) iVMD1jesRelativeSampleup_branch->SetAddress(&iVMD1jesRelativeSampleup_);
  iVMD2jesRelativeSampleup_branch = tree->GetBranch("iVMD2jesRelativeSampleup");
  if (iVMD2jesRelativeSampleup_branch) iVMD2jesRelativeSampleup_branch->SetAddress(&iVMD2jesRelativeSampleup_);
  iVMD3jesRelativeSampleup_branch = tree->GetBranch("iVMD3jesRelativeSampleup");
  if (iVMD3jesRelativeSampleup_branch) iVMD3jesRelativeSampleup_branch->SetAddress(&iVMD3jesRelativeSampleup_);
  iVMD4jesRelativeSampleup_branch = tree->GetBranch("iVMD4jesRelativeSampleup");
  if (iVMD4jesRelativeSampleup_branch) iVMD4jesRelativeSampleup_branch->SetAddress(&iVMD4jesRelativeSampleup_);
  iWMD0jesRelativeSampleup_branch = tree->GetBranch("iWMD0jesRelativeSampleup");
  if (iWMD0jesRelativeSampleup_branch) iWMD0jesRelativeSampleup_branch->SetAddress(&iWMD0jesRelativeSampleup_);
  iWMD1jesRelativeSampleup_branch = tree->GetBranch("iWMD1jesRelativeSampleup");
  if (iWMD1jesRelativeSampleup_branch) iWMD1jesRelativeSampleup_branch->SetAddress(&iWMD1jesRelativeSampleup_);
  iWMD2jesRelativeSampleup_branch = tree->GetBranch("iWMD2jesRelativeSampleup");
  if (iWMD2jesRelativeSampleup_branch) iWMD2jesRelativeSampleup_branch->SetAddress(&iWMD2jesRelativeSampleup_);
  iWMD3jesRelativeSampleup_branch = tree->GetBranch("iWMD3jesRelativeSampleup");
  if (iWMD3jesRelativeSampleup_branch) iWMD3jesRelativeSampleup_branch->SetAddress(&iWMD3jesRelativeSampleup_);
  iWMD4jesRelativeSampleup_branch = tree->GetBranch("iWMD4jesRelativeSampleup");
  if (iWMD4jesRelativeSampleup_branch) iWMD4jesRelativeSampleup_branch->SetAddress(&iWMD4jesRelativeSampleup_);
  NJjesRelativeSampleup_branch = tree->GetBranch("NJjesRelativeSampleup");
  if (NJjesRelativeSampleup_branch) NJjesRelativeSampleup_branch->SetAddress(&NJjesRelativeSampleup_);
  NbLoosejesRelativeSampleup_branch = tree->GetBranch("NbLoosejesRelativeSampleup");
  if (NbLoosejesRelativeSampleup_branch) NbLoosejesRelativeSampleup_branch->SetAddress(&NbLoosejesRelativeSampleup_);
  NbMediumjesRelativeSampleup_branch = tree->GetBranch("NbMediumjesRelativeSampleup");
  if (NbMediumjesRelativeSampleup_branch) NbMediumjesRelativeSampleup_branch->SetAddress(&NbMediumjesRelativeSampleup_);
  NbTightjesRelativeSampleup_branch = tree->GetBranch("NbTightjesRelativeSampleup");
  if (NbTightjesRelativeSampleup_branch) NbTightjesRelativeSampleup_branch->SetAddress(&NbTightjesRelativeSampleup_);
  NoORNbLoosejesRelativeSampleup_branch = tree->GetBranch("NoORNbLoosejesRelativeSampleup");
  if (NoORNbLoosejesRelativeSampleup_branch) NoORNbLoosejesRelativeSampleup_branch->SetAddress(&NoORNbLoosejesRelativeSampleup_);
  NoORNbMediumjesRelativeSampleup_branch = tree->GetBranch("NoORNbMediumjesRelativeSampleup");
  if (NoORNbMediumjesRelativeSampleup_branch) NoORNbMediumjesRelativeSampleup_branch->SetAddress(&NoORNbMediumjesRelativeSampleup_);
  NoORNbTightjesRelativeSampleup_branch = tree->GetBranch("NoORNbTightjesRelativeSampleup");
  if (NoORNbTightjesRelativeSampleup_branch) NoORNbTightjesRelativeSampleup_branch->SetAddress(&NoORNbTightjesRelativeSampleup_);
  NQJGenjesRelativeSampleup_branch = tree->GetBranch("NQJGenjesRelativeSampleup");
  if (NQJGenjesRelativeSampleup_branch) NQJGenjesRelativeSampleup_branch->SetAddress(&NQJGenjesRelativeSampleup_);
  NBJGenjesRelativeSampleup_branch = tree->GetBranch("NBJGenjesRelativeSampleup");
  if (NBJGenjesRelativeSampleup_branch) NBJGenjesRelativeSampleup_branch->SetAddress(&NBJGenjesRelativeSampleup_);
  NLJGenjesRelativeSampleup_branch = tree->GetBranch("NLJGenjesRelativeSampleup");
  if (NLJGenjesRelativeSampleup_branch) NLJGenjesRelativeSampleup_branch->SetAddress(&NLJGenjesRelativeSampleup_);
  MVVXjesRelativeSampleup_branch = tree->GetBranch("MVVXjesRelativeSampleup");
  if (MVVXjesRelativeSampleup_branch) MVVXjesRelativeSampleup_branch->SetAddress(&MVVXjesRelativeSampleup_);
  PtVVXjesRelativeSampleup_branch = tree->GetBranch("PtVVXjesRelativeSampleup");
  if (PtVVXjesRelativeSampleup_branch) PtVVXjesRelativeSampleup_branch->SetAddress(&PtVVXjesRelativeSampleup_);
  HTjesRelativeSampleup_branch = tree->GetBranch("HTjesRelativeSampleup");
  if (HTjesRelativeSampleup_branch) HTjesRelativeSampleup_branch->SetAddress(&HTjesRelativeSampleup_);
  HTJjesRelativeSampleup_branch = tree->GetBranch("HTJjesRelativeSampleup");
  if (HTJjesRelativeSampleup_branch) HTJjesRelativeSampleup_branch->SetAddress(&HTJjesRelativeSampleup_);
  HTFJjesRelativeSampleup_branch = tree->GetBranch("HTFJjesRelativeSampleup");
  if (HTFJjesRelativeSampleup_branch) HTFJjesRelativeSampleup_branch->SetAddress(&HTFJjesRelativeSampleup_);
  SumPtFJjesRelativeSampleup_branch = tree->GetBranch("SumPtFJjesRelativeSampleup");
  if (SumPtFJjesRelativeSampleup_branch) SumPtFJjesRelativeSampleup_branch->SetAddress(&SumPtFJjesRelativeSampleup_);
  SumPtJjesRelativeSampleup_branch = tree->GetBranch("SumPtJjesRelativeSampleup");
  if (SumPtJjesRelativeSampleup_branch) SumPtJjesRelativeSampleup_branch->SetAddress(&SumPtJjesRelativeSampleup_);
  NFJjesRelativeSampledn_branch = tree->GetBranch("NFJjesRelativeSampledn");
  if (NFJjesRelativeSampledn_branch) NFJjesRelativeSampledn_branch->SetAddress(&NFJjesRelativeSampledn_);
  VMD0jesRelativeSampledn_branch = tree->GetBranch("VMD0jesRelativeSampledn");
  if (VMD0jesRelativeSampledn_branch) VMD0jesRelativeSampledn_branch->SetAddress(&VMD0jesRelativeSampledn_);
  VMD1jesRelativeSampledn_branch = tree->GetBranch("VMD1jesRelativeSampledn");
  if (VMD1jesRelativeSampledn_branch) VMD1jesRelativeSampledn_branch->SetAddress(&VMD1jesRelativeSampledn_);
  VMD2jesRelativeSampledn_branch = tree->GetBranch("VMD2jesRelativeSampledn");
  if (VMD2jesRelativeSampledn_branch) VMD2jesRelativeSampledn_branch->SetAddress(&VMD2jesRelativeSampledn_);
  VMD3jesRelativeSampledn_branch = tree->GetBranch("VMD3jesRelativeSampledn");
  if (VMD3jesRelativeSampledn_branch) VMD3jesRelativeSampledn_branch->SetAddress(&VMD3jesRelativeSampledn_);
  VMD4jesRelativeSampledn_branch = tree->GetBranch("VMD4jesRelativeSampledn");
  if (VMD4jesRelativeSampledn_branch) VMD4jesRelativeSampledn_branch->SetAddress(&VMD4jesRelativeSampledn_);
  WMD0jesRelativeSampledn_branch = tree->GetBranch("WMD0jesRelativeSampledn");
  if (WMD0jesRelativeSampledn_branch) WMD0jesRelativeSampledn_branch->SetAddress(&WMD0jesRelativeSampledn_);
  WMD1jesRelativeSampledn_branch = tree->GetBranch("WMD1jesRelativeSampledn");
  if (WMD1jesRelativeSampledn_branch) WMD1jesRelativeSampledn_branch->SetAddress(&WMD1jesRelativeSampledn_);
  WMD2jesRelativeSampledn_branch = tree->GetBranch("WMD2jesRelativeSampledn");
  if (WMD2jesRelativeSampledn_branch) WMD2jesRelativeSampledn_branch->SetAddress(&WMD2jesRelativeSampledn_);
  WMD3jesRelativeSampledn_branch = tree->GetBranch("WMD3jesRelativeSampledn");
  if (WMD3jesRelativeSampledn_branch) WMD3jesRelativeSampledn_branch->SetAddress(&WMD3jesRelativeSampledn_);
  WMD4jesRelativeSampledn_branch = tree->GetBranch("WMD4jesRelativeSampledn");
  if (WMD4jesRelativeSampledn_branch) WMD4jesRelativeSampledn_branch->SetAddress(&WMD4jesRelativeSampledn_);
  NQGen0jesRelativeSampledn_branch = tree->GetBranch("NQGen0jesRelativeSampledn");
  if (NQGen0jesRelativeSampledn_branch) NQGen0jesRelativeSampledn_branch->SetAddress(&NQGen0jesRelativeSampledn_);
  NQGen1jesRelativeSampledn_branch = tree->GetBranch("NQGen1jesRelativeSampledn");
  if (NQGen1jesRelativeSampledn_branch) NQGen1jesRelativeSampledn_branch->SetAddress(&NQGen1jesRelativeSampledn_);
  NQGen2jesRelativeSampledn_branch = tree->GetBranch("NQGen2jesRelativeSampledn");
  if (NQGen2jesRelativeSampledn_branch) NQGen2jesRelativeSampledn_branch->SetAddress(&NQGen2jesRelativeSampledn_);
  NQGen3jesRelativeSampledn_branch = tree->GetBranch("NQGen3jesRelativeSampledn");
  if (NQGen3jesRelativeSampledn_branch) NQGen3jesRelativeSampledn_branch->SetAddress(&NQGen3jesRelativeSampledn_);
  NQGen4jesRelativeSampledn_branch = tree->GetBranch("NQGen4jesRelativeSampledn");
  if (NQGen4jesRelativeSampledn_branch) NQGen4jesRelativeSampledn_branch->SetAddress(&NQGen4jesRelativeSampledn_);
  NBGen0jesRelativeSampledn_branch = tree->GetBranch("NBGen0jesRelativeSampledn");
  if (NBGen0jesRelativeSampledn_branch) NBGen0jesRelativeSampledn_branch->SetAddress(&NBGen0jesRelativeSampledn_);
  NBGen1jesRelativeSampledn_branch = tree->GetBranch("NBGen1jesRelativeSampledn");
  if (NBGen1jesRelativeSampledn_branch) NBGen1jesRelativeSampledn_branch->SetAddress(&NBGen1jesRelativeSampledn_);
  NBGen2jesRelativeSampledn_branch = tree->GetBranch("NBGen2jesRelativeSampledn");
  if (NBGen2jesRelativeSampledn_branch) NBGen2jesRelativeSampledn_branch->SetAddress(&NBGen2jesRelativeSampledn_);
  NBGen3jesRelativeSampledn_branch = tree->GetBranch("NBGen3jesRelativeSampledn");
  if (NBGen3jesRelativeSampledn_branch) NBGen3jesRelativeSampledn_branch->SetAddress(&NBGen3jesRelativeSampledn_);
  NBGen4jesRelativeSampledn_branch = tree->GetBranch("NBGen4jesRelativeSampledn");
  if (NBGen4jesRelativeSampledn_branch) NBGen4jesRelativeSampledn_branch->SetAddress(&NBGen4jesRelativeSampledn_);
  NLGen0jesRelativeSampledn_branch = tree->GetBranch("NLGen0jesRelativeSampledn");
  if (NLGen0jesRelativeSampledn_branch) NLGen0jesRelativeSampledn_branch->SetAddress(&NLGen0jesRelativeSampledn_);
  NLGen1jesRelativeSampledn_branch = tree->GetBranch("NLGen1jesRelativeSampledn");
  if (NLGen1jesRelativeSampledn_branch) NLGen1jesRelativeSampledn_branch->SetAddress(&NLGen1jesRelativeSampledn_);
  NLGen2jesRelativeSampledn_branch = tree->GetBranch("NLGen2jesRelativeSampledn");
  if (NLGen2jesRelativeSampledn_branch) NLGen2jesRelativeSampledn_branch->SetAddress(&NLGen2jesRelativeSampledn_);
  NLGen3jesRelativeSampledn_branch = tree->GetBranch("NLGen3jesRelativeSampledn");
  if (NLGen3jesRelativeSampledn_branch) NLGen3jesRelativeSampledn_branch->SetAddress(&NLGen3jesRelativeSampledn_);
  NLGen4jesRelativeSampledn_branch = tree->GetBranch("NLGen4jesRelativeSampledn");
  if (NLGen4jesRelativeSampledn_branch) NLGen4jesRelativeSampledn_branch->SetAddress(&NLGen4jesRelativeSampledn_);
  NVQGen0jesRelativeSampledn_branch = tree->GetBranch("NVQGen0jesRelativeSampledn");
  if (NVQGen0jesRelativeSampledn_branch) NVQGen0jesRelativeSampledn_branch->SetAddress(&NVQGen0jesRelativeSampledn_);
  NVQGen1jesRelativeSampledn_branch = tree->GetBranch("NVQGen1jesRelativeSampledn");
  if (NVQGen1jesRelativeSampledn_branch) NVQGen1jesRelativeSampledn_branch->SetAddress(&NVQGen1jesRelativeSampledn_);
  NVQGen2jesRelativeSampledn_branch = tree->GetBranch("NVQGen2jesRelativeSampledn");
  if (NVQGen2jesRelativeSampledn_branch) NVQGen2jesRelativeSampledn_branch->SetAddress(&NVQGen2jesRelativeSampledn_);
  NVQGen3jesRelativeSampledn_branch = tree->GetBranch("NVQGen3jesRelativeSampledn");
  if (NVQGen3jesRelativeSampledn_branch) NVQGen3jesRelativeSampledn_branch->SetAddress(&NVQGen3jesRelativeSampledn_);
  NVQGen4jesRelativeSampledn_branch = tree->GetBranch("NVQGen4jesRelativeSampledn");
  if (NVQGen4jesRelativeSampledn_branch) NVQGen4jesRelativeSampledn_branch->SetAddress(&NVQGen4jesRelativeSampledn_);
  NiFJjesRelativeSampledn_branch = tree->GetBranch("NiFJjesRelativeSampledn");
  if (NiFJjesRelativeSampledn_branch) NiFJjesRelativeSampledn_branch->SetAddress(&NiFJjesRelativeSampledn_);
  iVMD0jesRelativeSampledn_branch = tree->GetBranch("iVMD0jesRelativeSampledn");
  if (iVMD0jesRelativeSampledn_branch) iVMD0jesRelativeSampledn_branch->SetAddress(&iVMD0jesRelativeSampledn_);
  iVMD1jesRelativeSampledn_branch = tree->GetBranch("iVMD1jesRelativeSampledn");
  if (iVMD1jesRelativeSampledn_branch) iVMD1jesRelativeSampledn_branch->SetAddress(&iVMD1jesRelativeSampledn_);
  iVMD2jesRelativeSampledn_branch = tree->GetBranch("iVMD2jesRelativeSampledn");
  if (iVMD2jesRelativeSampledn_branch) iVMD2jesRelativeSampledn_branch->SetAddress(&iVMD2jesRelativeSampledn_);
  iVMD3jesRelativeSampledn_branch = tree->GetBranch("iVMD3jesRelativeSampledn");
  if (iVMD3jesRelativeSampledn_branch) iVMD3jesRelativeSampledn_branch->SetAddress(&iVMD3jesRelativeSampledn_);
  iVMD4jesRelativeSampledn_branch = tree->GetBranch("iVMD4jesRelativeSampledn");
  if (iVMD4jesRelativeSampledn_branch) iVMD4jesRelativeSampledn_branch->SetAddress(&iVMD4jesRelativeSampledn_);
  iWMD0jesRelativeSampledn_branch = tree->GetBranch("iWMD0jesRelativeSampledn");
  if (iWMD0jesRelativeSampledn_branch) iWMD0jesRelativeSampledn_branch->SetAddress(&iWMD0jesRelativeSampledn_);
  iWMD1jesRelativeSampledn_branch = tree->GetBranch("iWMD1jesRelativeSampledn");
  if (iWMD1jesRelativeSampledn_branch) iWMD1jesRelativeSampledn_branch->SetAddress(&iWMD1jesRelativeSampledn_);
  iWMD2jesRelativeSampledn_branch = tree->GetBranch("iWMD2jesRelativeSampledn");
  if (iWMD2jesRelativeSampledn_branch) iWMD2jesRelativeSampledn_branch->SetAddress(&iWMD2jesRelativeSampledn_);
  iWMD3jesRelativeSampledn_branch = tree->GetBranch("iWMD3jesRelativeSampledn");
  if (iWMD3jesRelativeSampledn_branch) iWMD3jesRelativeSampledn_branch->SetAddress(&iWMD3jesRelativeSampledn_);
  iWMD4jesRelativeSampledn_branch = tree->GetBranch("iWMD4jesRelativeSampledn");
  if (iWMD4jesRelativeSampledn_branch) iWMD4jesRelativeSampledn_branch->SetAddress(&iWMD4jesRelativeSampledn_);
  NJjesRelativeSampledn_branch = tree->GetBranch("NJjesRelativeSampledn");
  if (NJjesRelativeSampledn_branch) NJjesRelativeSampledn_branch->SetAddress(&NJjesRelativeSampledn_);
  NbLoosejesRelativeSampledn_branch = tree->GetBranch("NbLoosejesRelativeSampledn");
  if (NbLoosejesRelativeSampledn_branch) NbLoosejesRelativeSampledn_branch->SetAddress(&NbLoosejesRelativeSampledn_);
  NbMediumjesRelativeSampledn_branch = tree->GetBranch("NbMediumjesRelativeSampledn");
  if (NbMediumjesRelativeSampledn_branch) NbMediumjesRelativeSampledn_branch->SetAddress(&NbMediumjesRelativeSampledn_);
  NbTightjesRelativeSampledn_branch = tree->GetBranch("NbTightjesRelativeSampledn");
  if (NbTightjesRelativeSampledn_branch) NbTightjesRelativeSampledn_branch->SetAddress(&NbTightjesRelativeSampledn_);
  NoORNbLoosejesRelativeSampledn_branch = tree->GetBranch("NoORNbLoosejesRelativeSampledn");
  if (NoORNbLoosejesRelativeSampledn_branch) NoORNbLoosejesRelativeSampledn_branch->SetAddress(&NoORNbLoosejesRelativeSampledn_);
  NoORNbMediumjesRelativeSampledn_branch = tree->GetBranch("NoORNbMediumjesRelativeSampledn");
  if (NoORNbMediumjesRelativeSampledn_branch) NoORNbMediumjesRelativeSampledn_branch->SetAddress(&NoORNbMediumjesRelativeSampledn_);
  NoORNbTightjesRelativeSampledn_branch = tree->GetBranch("NoORNbTightjesRelativeSampledn");
  if (NoORNbTightjesRelativeSampledn_branch) NoORNbTightjesRelativeSampledn_branch->SetAddress(&NoORNbTightjesRelativeSampledn_);
  NQJGenjesRelativeSampledn_branch = tree->GetBranch("NQJGenjesRelativeSampledn");
  if (NQJGenjesRelativeSampledn_branch) NQJGenjesRelativeSampledn_branch->SetAddress(&NQJGenjesRelativeSampledn_);
  NBJGenjesRelativeSampledn_branch = tree->GetBranch("NBJGenjesRelativeSampledn");
  if (NBJGenjesRelativeSampledn_branch) NBJGenjesRelativeSampledn_branch->SetAddress(&NBJGenjesRelativeSampledn_);
  NLJGenjesRelativeSampledn_branch = tree->GetBranch("NLJGenjesRelativeSampledn");
  if (NLJGenjesRelativeSampledn_branch) NLJGenjesRelativeSampledn_branch->SetAddress(&NLJGenjesRelativeSampledn_);
  MVVXjesRelativeSampledn_branch = tree->GetBranch("MVVXjesRelativeSampledn");
  if (MVVXjesRelativeSampledn_branch) MVVXjesRelativeSampledn_branch->SetAddress(&MVVXjesRelativeSampledn_);
  PtVVXjesRelativeSampledn_branch = tree->GetBranch("PtVVXjesRelativeSampledn");
  if (PtVVXjesRelativeSampledn_branch) PtVVXjesRelativeSampledn_branch->SetAddress(&PtVVXjesRelativeSampledn_);
  HTjesRelativeSampledn_branch = tree->GetBranch("HTjesRelativeSampledn");
  if (HTjesRelativeSampledn_branch) HTjesRelativeSampledn_branch->SetAddress(&HTjesRelativeSampledn_);
  HTJjesRelativeSampledn_branch = tree->GetBranch("HTJjesRelativeSampledn");
  if (HTJjesRelativeSampledn_branch) HTJjesRelativeSampledn_branch->SetAddress(&HTJjesRelativeSampledn_);
  HTFJjesRelativeSampledn_branch = tree->GetBranch("HTFJjesRelativeSampledn");
  if (HTFJjesRelativeSampledn_branch) HTFJjesRelativeSampledn_branch->SetAddress(&HTFJjesRelativeSampledn_);
  SumPtFJjesRelativeSampledn_branch = tree->GetBranch("SumPtFJjesRelativeSampledn");
  if (SumPtFJjesRelativeSampledn_branch) SumPtFJjesRelativeSampledn_branch->SetAddress(&SumPtFJjesRelativeSampledn_);
  SumPtJjesRelativeSampledn_branch = tree->GetBranch("SumPtJjesRelativeSampledn");
  if (SumPtJjesRelativeSampledn_branch) SumPtJjesRelativeSampledn_branch->SetAddress(&SumPtJjesRelativeSampledn_);
  NFJjesRelativeFSRup_branch = tree->GetBranch("NFJjesRelativeFSRup");
  if (NFJjesRelativeFSRup_branch) NFJjesRelativeFSRup_branch->SetAddress(&NFJjesRelativeFSRup_);
  VMD0jesRelativeFSRup_branch = tree->GetBranch("VMD0jesRelativeFSRup");
  if (VMD0jesRelativeFSRup_branch) VMD0jesRelativeFSRup_branch->SetAddress(&VMD0jesRelativeFSRup_);
  VMD1jesRelativeFSRup_branch = tree->GetBranch("VMD1jesRelativeFSRup");
  if (VMD1jesRelativeFSRup_branch) VMD1jesRelativeFSRup_branch->SetAddress(&VMD1jesRelativeFSRup_);
  VMD2jesRelativeFSRup_branch = tree->GetBranch("VMD2jesRelativeFSRup");
  if (VMD2jesRelativeFSRup_branch) VMD2jesRelativeFSRup_branch->SetAddress(&VMD2jesRelativeFSRup_);
  VMD3jesRelativeFSRup_branch = tree->GetBranch("VMD3jesRelativeFSRup");
  if (VMD3jesRelativeFSRup_branch) VMD3jesRelativeFSRup_branch->SetAddress(&VMD3jesRelativeFSRup_);
  VMD4jesRelativeFSRup_branch = tree->GetBranch("VMD4jesRelativeFSRup");
  if (VMD4jesRelativeFSRup_branch) VMD4jesRelativeFSRup_branch->SetAddress(&VMD4jesRelativeFSRup_);
  WMD0jesRelativeFSRup_branch = tree->GetBranch("WMD0jesRelativeFSRup");
  if (WMD0jesRelativeFSRup_branch) WMD0jesRelativeFSRup_branch->SetAddress(&WMD0jesRelativeFSRup_);
  WMD1jesRelativeFSRup_branch = tree->GetBranch("WMD1jesRelativeFSRup");
  if (WMD1jesRelativeFSRup_branch) WMD1jesRelativeFSRup_branch->SetAddress(&WMD1jesRelativeFSRup_);
  WMD2jesRelativeFSRup_branch = tree->GetBranch("WMD2jesRelativeFSRup");
  if (WMD2jesRelativeFSRup_branch) WMD2jesRelativeFSRup_branch->SetAddress(&WMD2jesRelativeFSRup_);
  WMD3jesRelativeFSRup_branch = tree->GetBranch("WMD3jesRelativeFSRup");
  if (WMD3jesRelativeFSRup_branch) WMD3jesRelativeFSRup_branch->SetAddress(&WMD3jesRelativeFSRup_);
  WMD4jesRelativeFSRup_branch = tree->GetBranch("WMD4jesRelativeFSRup");
  if (WMD4jesRelativeFSRup_branch) WMD4jesRelativeFSRup_branch->SetAddress(&WMD4jesRelativeFSRup_);
  NQGen0jesRelativeFSRup_branch = tree->GetBranch("NQGen0jesRelativeFSRup");
  if (NQGen0jesRelativeFSRup_branch) NQGen0jesRelativeFSRup_branch->SetAddress(&NQGen0jesRelativeFSRup_);
  NQGen1jesRelativeFSRup_branch = tree->GetBranch("NQGen1jesRelativeFSRup");
  if (NQGen1jesRelativeFSRup_branch) NQGen1jesRelativeFSRup_branch->SetAddress(&NQGen1jesRelativeFSRup_);
  NQGen2jesRelativeFSRup_branch = tree->GetBranch("NQGen2jesRelativeFSRup");
  if (NQGen2jesRelativeFSRup_branch) NQGen2jesRelativeFSRup_branch->SetAddress(&NQGen2jesRelativeFSRup_);
  NQGen3jesRelativeFSRup_branch = tree->GetBranch("NQGen3jesRelativeFSRup");
  if (NQGen3jesRelativeFSRup_branch) NQGen3jesRelativeFSRup_branch->SetAddress(&NQGen3jesRelativeFSRup_);
  NQGen4jesRelativeFSRup_branch = tree->GetBranch("NQGen4jesRelativeFSRup");
  if (NQGen4jesRelativeFSRup_branch) NQGen4jesRelativeFSRup_branch->SetAddress(&NQGen4jesRelativeFSRup_);
  NBGen0jesRelativeFSRup_branch = tree->GetBranch("NBGen0jesRelativeFSRup");
  if (NBGen0jesRelativeFSRup_branch) NBGen0jesRelativeFSRup_branch->SetAddress(&NBGen0jesRelativeFSRup_);
  NBGen1jesRelativeFSRup_branch = tree->GetBranch("NBGen1jesRelativeFSRup");
  if (NBGen1jesRelativeFSRup_branch) NBGen1jesRelativeFSRup_branch->SetAddress(&NBGen1jesRelativeFSRup_);
  NBGen2jesRelativeFSRup_branch = tree->GetBranch("NBGen2jesRelativeFSRup");
  if (NBGen2jesRelativeFSRup_branch) NBGen2jesRelativeFSRup_branch->SetAddress(&NBGen2jesRelativeFSRup_);
  NBGen3jesRelativeFSRup_branch = tree->GetBranch("NBGen3jesRelativeFSRup");
  if (NBGen3jesRelativeFSRup_branch) NBGen3jesRelativeFSRup_branch->SetAddress(&NBGen3jesRelativeFSRup_);
  NBGen4jesRelativeFSRup_branch = tree->GetBranch("NBGen4jesRelativeFSRup");
  if (NBGen4jesRelativeFSRup_branch) NBGen4jesRelativeFSRup_branch->SetAddress(&NBGen4jesRelativeFSRup_);
  NLGen0jesRelativeFSRup_branch = tree->GetBranch("NLGen0jesRelativeFSRup");
  if (NLGen0jesRelativeFSRup_branch) NLGen0jesRelativeFSRup_branch->SetAddress(&NLGen0jesRelativeFSRup_);
  NLGen1jesRelativeFSRup_branch = tree->GetBranch("NLGen1jesRelativeFSRup");
  if (NLGen1jesRelativeFSRup_branch) NLGen1jesRelativeFSRup_branch->SetAddress(&NLGen1jesRelativeFSRup_);
  NLGen2jesRelativeFSRup_branch = tree->GetBranch("NLGen2jesRelativeFSRup");
  if (NLGen2jesRelativeFSRup_branch) NLGen2jesRelativeFSRup_branch->SetAddress(&NLGen2jesRelativeFSRup_);
  NLGen3jesRelativeFSRup_branch = tree->GetBranch("NLGen3jesRelativeFSRup");
  if (NLGen3jesRelativeFSRup_branch) NLGen3jesRelativeFSRup_branch->SetAddress(&NLGen3jesRelativeFSRup_);
  NLGen4jesRelativeFSRup_branch = tree->GetBranch("NLGen4jesRelativeFSRup");
  if (NLGen4jesRelativeFSRup_branch) NLGen4jesRelativeFSRup_branch->SetAddress(&NLGen4jesRelativeFSRup_);
  NVQGen0jesRelativeFSRup_branch = tree->GetBranch("NVQGen0jesRelativeFSRup");
  if (NVQGen0jesRelativeFSRup_branch) NVQGen0jesRelativeFSRup_branch->SetAddress(&NVQGen0jesRelativeFSRup_);
  NVQGen1jesRelativeFSRup_branch = tree->GetBranch("NVQGen1jesRelativeFSRup");
  if (NVQGen1jesRelativeFSRup_branch) NVQGen1jesRelativeFSRup_branch->SetAddress(&NVQGen1jesRelativeFSRup_);
  NVQGen2jesRelativeFSRup_branch = tree->GetBranch("NVQGen2jesRelativeFSRup");
  if (NVQGen2jesRelativeFSRup_branch) NVQGen2jesRelativeFSRup_branch->SetAddress(&NVQGen2jesRelativeFSRup_);
  NVQGen3jesRelativeFSRup_branch = tree->GetBranch("NVQGen3jesRelativeFSRup");
  if (NVQGen3jesRelativeFSRup_branch) NVQGen3jesRelativeFSRup_branch->SetAddress(&NVQGen3jesRelativeFSRup_);
  NVQGen4jesRelativeFSRup_branch = tree->GetBranch("NVQGen4jesRelativeFSRup");
  if (NVQGen4jesRelativeFSRup_branch) NVQGen4jesRelativeFSRup_branch->SetAddress(&NVQGen4jesRelativeFSRup_);
  NiFJjesRelativeFSRup_branch = tree->GetBranch("NiFJjesRelativeFSRup");
  if (NiFJjesRelativeFSRup_branch) NiFJjesRelativeFSRup_branch->SetAddress(&NiFJjesRelativeFSRup_);
  iVMD0jesRelativeFSRup_branch = tree->GetBranch("iVMD0jesRelativeFSRup");
  if (iVMD0jesRelativeFSRup_branch) iVMD0jesRelativeFSRup_branch->SetAddress(&iVMD0jesRelativeFSRup_);
  iVMD1jesRelativeFSRup_branch = tree->GetBranch("iVMD1jesRelativeFSRup");
  if (iVMD1jesRelativeFSRup_branch) iVMD1jesRelativeFSRup_branch->SetAddress(&iVMD1jesRelativeFSRup_);
  iVMD2jesRelativeFSRup_branch = tree->GetBranch("iVMD2jesRelativeFSRup");
  if (iVMD2jesRelativeFSRup_branch) iVMD2jesRelativeFSRup_branch->SetAddress(&iVMD2jesRelativeFSRup_);
  iVMD3jesRelativeFSRup_branch = tree->GetBranch("iVMD3jesRelativeFSRup");
  if (iVMD3jesRelativeFSRup_branch) iVMD3jesRelativeFSRup_branch->SetAddress(&iVMD3jesRelativeFSRup_);
  iVMD4jesRelativeFSRup_branch = tree->GetBranch("iVMD4jesRelativeFSRup");
  if (iVMD4jesRelativeFSRup_branch) iVMD4jesRelativeFSRup_branch->SetAddress(&iVMD4jesRelativeFSRup_);
  iWMD0jesRelativeFSRup_branch = tree->GetBranch("iWMD0jesRelativeFSRup");
  if (iWMD0jesRelativeFSRup_branch) iWMD0jesRelativeFSRup_branch->SetAddress(&iWMD0jesRelativeFSRup_);
  iWMD1jesRelativeFSRup_branch = tree->GetBranch("iWMD1jesRelativeFSRup");
  if (iWMD1jesRelativeFSRup_branch) iWMD1jesRelativeFSRup_branch->SetAddress(&iWMD1jesRelativeFSRup_);
  iWMD2jesRelativeFSRup_branch = tree->GetBranch("iWMD2jesRelativeFSRup");
  if (iWMD2jesRelativeFSRup_branch) iWMD2jesRelativeFSRup_branch->SetAddress(&iWMD2jesRelativeFSRup_);
  iWMD3jesRelativeFSRup_branch = tree->GetBranch("iWMD3jesRelativeFSRup");
  if (iWMD3jesRelativeFSRup_branch) iWMD3jesRelativeFSRup_branch->SetAddress(&iWMD3jesRelativeFSRup_);
  iWMD4jesRelativeFSRup_branch = tree->GetBranch("iWMD4jesRelativeFSRup");
  if (iWMD4jesRelativeFSRup_branch) iWMD4jesRelativeFSRup_branch->SetAddress(&iWMD4jesRelativeFSRup_);
  NJjesRelativeFSRup_branch = tree->GetBranch("NJjesRelativeFSRup");
  if (NJjesRelativeFSRup_branch) NJjesRelativeFSRup_branch->SetAddress(&NJjesRelativeFSRup_);
  NbLoosejesRelativeFSRup_branch = tree->GetBranch("NbLoosejesRelativeFSRup");
  if (NbLoosejesRelativeFSRup_branch) NbLoosejesRelativeFSRup_branch->SetAddress(&NbLoosejesRelativeFSRup_);
  NbMediumjesRelativeFSRup_branch = tree->GetBranch("NbMediumjesRelativeFSRup");
  if (NbMediumjesRelativeFSRup_branch) NbMediumjesRelativeFSRup_branch->SetAddress(&NbMediumjesRelativeFSRup_);
  NbTightjesRelativeFSRup_branch = tree->GetBranch("NbTightjesRelativeFSRup");
  if (NbTightjesRelativeFSRup_branch) NbTightjesRelativeFSRup_branch->SetAddress(&NbTightjesRelativeFSRup_);
  NoORNbLoosejesRelativeFSRup_branch = tree->GetBranch("NoORNbLoosejesRelativeFSRup");
  if (NoORNbLoosejesRelativeFSRup_branch) NoORNbLoosejesRelativeFSRup_branch->SetAddress(&NoORNbLoosejesRelativeFSRup_);
  NoORNbMediumjesRelativeFSRup_branch = tree->GetBranch("NoORNbMediumjesRelativeFSRup");
  if (NoORNbMediumjesRelativeFSRup_branch) NoORNbMediumjesRelativeFSRup_branch->SetAddress(&NoORNbMediumjesRelativeFSRup_);
  NoORNbTightjesRelativeFSRup_branch = tree->GetBranch("NoORNbTightjesRelativeFSRup");
  if (NoORNbTightjesRelativeFSRup_branch) NoORNbTightjesRelativeFSRup_branch->SetAddress(&NoORNbTightjesRelativeFSRup_);
  NQJGenjesRelativeFSRup_branch = tree->GetBranch("NQJGenjesRelativeFSRup");
  if (NQJGenjesRelativeFSRup_branch) NQJGenjesRelativeFSRup_branch->SetAddress(&NQJGenjesRelativeFSRup_);
  NBJGenjesRelativeFSRup_branch = tree->GetBranch("NBJGenjesRelativeFSRup");
  if (NBJGenjesRelativeFSRup_branch) NBJGenjesRelativeFSRup_branch->SetAddress(&NBJGenjesRelativeFSRup_);
  NLJGenjesRelativeFSRup_branch = tree->GetBranch("NLJGenjesRelativeFSRup");
  if (NLJGenjesRelativeFSRup_branch) NLJGenjesRelativeFSRup_branch->SetAddress(&NLJGenjesRelativeFSRup_);
  MVVXjesRelativeFSRup_branch = tree->GetBranch("MVVXjesRelativeFSRup");
  if (MVVXjesRelativeFSRup_branch) MVVXjesRelativeFSRup_branch->SetAddress(&MVVXjesRelativeFSRup_);
  PtVVXjesRelativeFSRup_branch = tree->GetBranch("PtVVXjesRelativeFSRup");
  if (PtVVXjesRelativeFSRup_branch) PtVVXjesRelativeFSRup_branch->SetAddress(&PtVVXjesRelativeFSRup_);
  HTjesRelativeFSRup_branch = tree->GetBranch("HTjesRelativeFSRup");
  if (HTjesRelativeFSRup_branch) HTjesRelativeFSRup_branch->SetAddress(&HTjesRelativeFSRup_);
  HTJjesRelativeFSRup_branch = tree->GetBranch("HTJjesRelativeFSRup");
  if (HTJjesRelativeFSRup_branch) HTJjesRelativeFSRup_branch->SetAddress(&HTJjesRelativeFSRup_);
  HTFJjesRelativeFSRup_branch = tree->GetBranch("HTFJjesRelativeFSRup");
  if (HTFJjesRelativeFSRup_branch) HTFJjesRelativeFSRup_branch->SetAddress(&HTFJjesRelativeFSRup_);
  SumPtFJjesRelativeFSRup_branch = tree->GetBranch("SumPtFJjesRelativeFSRup");
  if (SumPtFJjesRelativeFSRup_branch) SumPtFJjesRelativeFSRup_branch->SetAddress(&SumPtFJjesRelativeFSRup_);
  SumPtJjesRelativeFSRup_branch = tree->GetBranch("SumPtJjesRelativeFSRup");
  if (SumPtJjesRelativeFSRup_branch) SumPtJjesRelativeFSRup_branch->SetAddress(&SumPtJjesRelativeFSRup_);
  NFJjesRelativeFSRdn_branch = tree->GetBranch("NFJjesRelativeFSRdn");
  if (NFJjesRelativeFSRdn_branch) NFJjesRelativeFSRdn_branch->SetAddress(&NFJjesRelativeFSRdn_);
  VMD0jesRelativeFSRdn_branch = tree->GetBranch("VMD0jesRelativeFSRdn");
  if (VMD0jesRelativeFSRdn_branch) VMD0jesRelativeFSRdn_branch->SetAddress(&VMD0jesRelativeFSRdn_);
  VMD1jesRelativeFSRdn_branch = tree->GetBranch("VMD1jesRelativeFSRdn");
  if (VMD1jesRelativeFSRdn_branch) VMD1jesRelativeFSRdn_branch->SetAddress(&VMD1jesRelativeFSRdn_);
  VMD2jesRelativeFSRdn_branch = tree->GetBranch("VMD2jesRelativeFSRdn");
  if (VMD2jesRelativeFSRdn_branch) VMD2jesRelativeFSRdn_branch->SetAddress(&VMD2jesRelativeFSRdn_);
  VMD3jesRelativeFSRdn_branch = tree->GetBranch("VMD3jesRelativeFSRdn");
  if (VMD3jesRelativeFSRdn_branch) VMD3jesRelativeFSRdn_branch->SetAddress(&VMD3jesRelativeFSRdn_);
  VMD4jesRelativeFSRdn_branch = tree->GetBranch("VMD4jesRelativeFSRdn");
  if (VMD4jesRelativeFSRdn_branch) VMD4jesRelativeFSRdn_branch->SetAddress(&VMD4jesRelativeFSRdn_);
  WMD0jesRelativeFSRdn_branch = tree->GetBranch("WMD0jesRelativeFSRdn");
  if (WMD0jesRelativeFSRdn_branch) WMD0jesRelativeFSRdn_branch->SetAddress(&WMD0jesRelativeFSRdn_);
  WMD1jesRelativeFSRdn_branch = tree->GetBranch("WMD1jesRelativeFSRdn");
  if (WMD1jesRelativeFSRdn_branch) WMD1jesRelativeFSRdn_branch->SetAddress(&WMD1jesRelativeFSRdn_);
  WMD2jesRelativeFSRdn_branch = tree->GetBranch("WMD2jesRelativeFSRdn");
  if (WMD2jesRelativeFSRdn_branch) WMD2jesRelativeFSRdn_branch->SetAddress(&WMD2jesRelativeFSRdn_);
  WMD3jesRelativeFSRdn_branch = tree->GetBranch("WMD3jesRelativeFSRdn");
  if (WMD3jesRelativeFSRdn_branch) WMD3jesRelativeFSRdn_branch->SetAddress(&WMD3jesRelativeFSRdn_);
  WMD4jesRelativeFSRdn_branch = tree->GetBranch("WMD4jesRelativeFSRdn");
  if (WMD4jesRelativeFSRdn_branch) WMD4jesRelativeFSRdn_branch->SetAddress(&WMD4jesRelativeFSRdn_);
  NQGen0jesRelativeFSRdn_branch = tree->GetBranch("NQGen0jesRelativeFSRdn");
  if (NQGen0jesRelativeFSRdn_branch) NQGen0jesRelativeFSRdn_branch->SetAddress(&NQGen0jesRelativeFSRdn_);
  NQGen1jesRelativeFSRdn_branch = tree->GetBranch("NQGen1jesRelativeFSRdn");
  if (NQGen1jesRelativeFSRdn_branch) NQGen1jesRelativeFSRdn_branch->SetAddress(&NQGen1jesRelativeFSRdn_);
  NQGen2jesRelativeFSRdn_branch = tree->GetBranch("NQGen2jesRelativeFSRdn");
  if (NQGen2jesRelativeFSRdn_branch) NQGen2jesRelativeFSRdn_branch->SetAddress(&NQGen2jesRelativeFSRdn_);
  NQGen3jesRelativeFSRdn_branch = tree->GetBranch("NQGen3jesRelativeFSRdn");
  if (NQGen3jesRelativeFSRdn_branch) NQGen3jesRelativeFSRdn_branch->SetAddress(&NQGen3jesRelativeFSRdn_);
  NQGen4jesRelativeFSRdn_branch = tree->GetBranch("NQGen4jesRelativeFSRdn");
  if (NQGen4jesRelativeFSRdn_branch) NQGen4jesRelativeFSRdn_branch->SetAddress(&NQGen4jesRelativeFSRdn_);
  NBGen0jesRelativeFSRdn_branch = tree->GetBranch("NBGen0jesRelativeFSRdn");
  if (NBGen0jesRelativeFSRdn_branch) NBGen0jesRelativeFSRdn_branch->SetAddress(&NBGen0jesRelativeFSRdn_);
  NBGen1jesRelativeFSRdn_branch = tree->GetBranch("NBGen1jesRelativeFSRdn");
  if (NBGen1jesRelativeFSRdn_branch) NBGen1jesRelativeFSRdn_branch->SetAddress(&NBGen1jesRelativeFSRdn_);
  NBGen2jesRelativeFSRdn_branch = tree->GetBranch("NBGen2jesRelativeFSRdn");
  if (NBGen2jesRelativeFSRdn_branch) NBGen2jesRelativeFSRdn_branch->SetAddress(&NBGen2jesRelativeFSRdn_);
  NBGen3jesRelativeFSRdn_branch = tree->GetBranch("NBGen3jesRelativeFSRdn");
  if (NBGen3jesRelativeFSRdn_branch) NBGen3jesRelativeFSRdn_branch->SetAddress(&NBGen3jesRelativeFSRdn_);
  NBGen4jesRelativeFSRdn_branch = tree->GetBranch("NBGen4jesRelativeFSRdn");
  if (NBGen4jesRelativeFSRdn_branch) NBGen4jesRelativeFSRdn_branch->SetAddress(&NBGen4jesRelativeFSRdn_);
  NLGen0jesRelativeFSRdn_branch = tree->GetBranch("NLGen0jesRelativeFSRdn");
  if (NLGen0jesRelativeFSRdn_branch) NLGen0jesRelativeFSRdn_branch->SetAddress(&NLGen0jesRelativeFSRdn_);
  NLGen1jesRelativeFSRdn_branch = tree->GetBranch("NLGen1jesRelativeFSRdn");
  if (NLGen1jesRelativeFSRdn_branch) NLGen1jesRelativeFSRdn_branch->SetAddress(&NLGen1jesRelativeFSRdn_);
  NLGen2jesRelativeFSRdn_branch = tree->GetBranch("NLGen2jesRelativeFSRdn");
  if (NLGen2jesRelativeFSRdn_branch) NLGen2jesRelativeFSRdn_branch->SetAddress(&NLGen2jesRelativeFSRdn_);
  NLGen3jesRelativeFSRdn_branch = tree->GetBranch("NLGen3jesRelativeFSRdn");
  if (NLGen3jesRelativeFSRdn_branch) NLGen3jesRelativeFSRdn_branch->SetAddress(&NLGen3jesRelativeFSRdn_);
  NLGen4jesRelativeFSRdn_branch = tree->GetBranch("NLGen4jesRelativeFSRdn");
  if (NLGen4jesRelativeFSRdn_branch) NLGen4jesRelativeFSRdn_branch->SetAddress(&NLGen4jesRelativeFSRdn_);
  NVQGen0jesRelativeFSRdn_branch = tree->GetBranch("NVQGen0jesRelativeFSRdn");
  if (NVQGen0jesRelativeFSRdn_branch) NVQGen0jesRelativeFSRdn_branch->SetAddress(&NVQGen0jesRelativeFSRdn_);
  NVQGen1jesRelativeFSRdn_branch = tree->GetBranch("NVQGen1jesRelativeFSRdn");
  if (NVQGen1jesRelativeFSRdn_branch) NVQGen1jesRelativeFSRdn_branch->SetAddress(&NVQGen1jesRelativeFSRdn_);
  NVQGen2jesRelativeFSRdn_branch = tree->GetBranch("NVQGen2jesRelativeFSRdn");
  if (NVQGen2jesRelativeFSRdn_branch) NVQGen2jesRelativeFSRdn_branch->SetAddress(&NVQGen2jesRelativeFSRdn_);
  NVQGen3jesRelativeFSRdn_branch = tree->GetBranch("NVQGen3jesRelativeFSRdn");
  if (NVQGen3jesRelativeFSRdn_branch) NVQGen3jesRelativeFSRdn_branch->SetAddress(&NVQGen3jesRelativeFSRdn_);
  NVQGen4jesRelativeFSRdn_branch = tree->GetBranch("NVQGen4jesRelativeFSRdn");
  if (NVQGen4jesRelativeFSRdn_branch) NVQGen4jesRelativeFSRdn_branch->SetAddress(&NVQGen4jesRelativeFSRdn_);
  NiFJjesRelativeFSRdn_branch = tree->GetBranch("NiFJjesRelativeFSRdn");
  if (NiFJjesRelativeFSRdn_branch) NiFJjesRelativeFSRdn_branch->SetAddress(&NiFJjesRelativeFSRdn_);
  iVMD0jesRelativeFSRdn_branch = tree->GetBranch("iVMD0jesRelativeFSRdn");
  if (iVMD0jesRelativeFSRdn_branch) iVMD0jesRelativeFSRdn_branch->SetAddress(&iVMD0jesRelativeFSRdn_);
  iVMD1jesRelativeFSRdn_branch = tree->GetBranch("iVMD1jesRelativeFSRdn");
  if (iVMD1jesRelativeFSRdn_branch) iVMD1jesRelativeFSRdn_branch->SetAddress(&iVMD1jesRelativeFSRdn_);
  iVMD2jesRelativeFSRdn_branch = tree->GetBranch("iVMD2jesRelativeFSRdn");
  if (iVMD2jesRelativeFSRdn_branch) iVMD2jesRelativeFSRdn_branch->SetAddress(&iVMD2jesRelativeFSRdn_);
  iVMD3jesRelativeFSRdn_branch = tree->GetBranch("iVMD3jesRelativeFSRdn");
  if (iVMD3jesRelativeFSRdn_branch) iVMD3jesRelativeFSRdn_branch->SetAddress(&iVMD3jesRelativeFSRdn_);
  iVMD4jesRelativeFSRdn_branch = tree->GetBranch("iVMD4jesRelativeFSRdn");
  if (iVMD4jesRelativeFSRdn_branch) iVMD4jesRelativeFSRdn_branch->SetAddress(&iVMD4jesRelativeFSRdn_);
  iWMD0jesRelativeFSRdn_branch = tree->GetBranch("iWMD0jesRelativeFSRdn");
  if (iWMD0jesRelativeFSRdn_branch) iWMD0jesRelativeFSRdn_branch->SetAddress(&iWMD0jesRelativeFSRdn_);
  iWMD1jesRelativeFSRdn_branch = tree->GetBranch("iWMD1jesRelativeFSRdn");
  if (iWMD1jesRelativeFSRdn_branch) iWMD1jesRelativeFSRdn_branch->SetAddress(&iWMD1jesRelativeFSRdn_);
  iWMD2jesRelativeFSRdn_branch = tree->GetBranch("iWMD2jesRelativeFSRdn");
  if (iWMD2jesRelativeFSRdn_branch) iWMD2jesRelativeFSRdn_branch->SetAddress(&iWMD2jesRelativeFSRdn_);
  iWMD3jesRelativeFSRdn_branch = tree->GetBranch("iWMD3jesRelativeFSRdn");
  if (iWMD3jesRelativeFSRdn_branch) iWMD3jesRelativeFSRdn_branch->SetAddress(&iWMD3jesRelativeFSRdn_);
  iWMD4jesRelativeFSRdn_branch = tree->GetBranch("iWMD4jesRelativeFSRdn");
  if (iWMD4jesRelativeFSRdn_branch) iWMD4jesRelativeFSRdn_branch->SetAddress(&iWMD4jesRelativeFSRdn_);
  NJjesRelativeFSRdn_branch = tree->GetBranch("NJjesRelativeFSRdn");
  if (NJjesRelativeFSRdn_branch) NJjesRelativeFSRdn_branch->SetAddress(&NJjesRelativeFSRdn_);
  NbLoosejesRelativeFSRdn_branch = tree->GetBranch("NbLoosejesRelativeFSRdn");
  if (NbLoosejesRelativeFSRdn_branch) NbLoosejesRelativeFSRdn_branch->SetAddress(&NbLoosejesRelativeFSRdn_);
  NbMediumjesRelativeFSRdn_branch = tree->GetBranch("NbMediumjesRelativeFSRdn");
  if (NbMediumjesRelativeFSRdn_branch) NbMediumjesRelativeFSRdn_branch->SetAddress(&NbMediumjesRelativeFSRdn_);
  NbTightjesRelativeFSRdn_branch = tree->GetBranch("NbTightjesRelativeFSRdn");
  if (NbTightjesRelativeFSRdn_branch) NbTightjesRelativeFSRdn_branch->SetAddress(&NbTightjesRelativeFSRdn_);
  NoORNbLoosejesRelativeFSRdn_branch = tree->GetBranch("NoORNbLoosejesRelativeFSRdn");
  if (NoORNbLoosejesRelativeFSRdn_branch) NoORNbLoosejesRelativeFSRdn_branch->SetAddress(&NoORNbLoosejesRelativeFSRdn_);
  NoORNbMediumjesRelativeFSRdn_branch = tree->GetBranch("NoORNbMediumjesRelativeFSRdn");
  if (NoORNbMediumjesRelativeFSRdn_branch) NoORNbMediumjesRelativeFSRdn_branch->SetAddress(&NoORNbMediumjesRelativeFSRdn_);
  NoORNbTightjesRelativeFSRdn_branch = tree->GetBranch("NoORNbTightjesRelativeFSRdn");
  if (NoORNbTightjesRelativeFSRdn_branch) NoORNbTightjesRelativeFSRdn_branch->SetAddress(&NoORNbTightjesRelativeFSRdn_);
  NQJGenjesRelativeFSRdn_branch = tree->GetBranch("NQJGenjesRelativeFSRdn");
  if (NQJGenjesRelativeFSRdn_branch) NQJGenjesRelativeFSRdn_branch->SetAddress(&NQJGenjesRelativeFSRdn_);
  NBJGenjesRelativeFSRdn_branch = tree->GetBranch("NBJGenjesRelativeFSRdn");
  if (NBJGenjesRelativeFSRdn_branch) NBJGenjesRelativeFSRdn_branch->SetAddress(&NBJGenjesRelativeFSRdn_);
  NLJGenjesRelativeFSRdn_branch = tree->GetBranch("NLJGenjesRelativeFSRdn");
  if (NLJGenjesRelativeFSRdn_branch) NLJGenjesRelativeFSRdn_branch->SetAddress(&NLJGenjesRelativeFSRdn_);
  MVVXjesRelativeFSRdn_branch = tree->GetBranch("MVVXjesRelativeFSRdn");
  if (MVVXjesRelativeFSRdn_branch) MVVXjesRelativeFSRdn_branch->SetAddress(&MVVXjesRelativeFSRdn_);
  PtVVXjesRelativeFSRdn_branch = tree->GetBranch("PtVVXjesRelativeFSRdn");
  if (PtVVXjesRelativeFSRdn_branch) PtVVXjesRelativeFSRdn_branch->SetAddress(&PtVVXjesRelativeFSRdn_);
  HTjesRelativeFSRdn_branch = tree->GetBranch("HTjesRelativeFSRdn");
  if (HTjesRelativeFSRdn_branch) HTjesRelativeFSRdn_branch->SetAddress(&HTjesRelativeFSRdn_);
  HTJjesRelativeFSRdn_branch = tree->GetBranch("HTJjesRelativeFSRdn");
  if (HTJjesRelativeFSRdn_branch) HTJjesRelativeFSRdn_branch->SetAddress(&HTJjesRelativeFSRdn_);
  HTFJjesRelativeFSRdn_branch = tree->GetBranch("HTFJjesRelativeFSRdn");
  if (HTFJjesRelativeFSRdn_branch) HTFJjesRelativeFSRdn_branch->SetAddress(&HTFJjesRelativeFSRdn_);
  SumPtFJjesRelativeFSRdn_branch = tree->GetBranch("SumPtFJjesRelativeFSRdn");
  if (SumPtFJjesRelativeFSRdn_branch) SumPtFJjesRelativeFSRdn_branch->SetAddress(&SumPtFJjesRelativeFSRdn_);
  SumPtJjesRelativeFSRdn_branch = tree->GetBranch("SumPtJjesRelativeFSRdn");
  if (SumPtJjesRelativeFSRdn_branch) SumPtJjesRelativeFSRdn_branch->SetAddress(&SumPtJjesRelativeFSRdn_);
  NFJjesRelativeStatFSRup_branch = tree->GetBranch("NFJjesRelativeStatFSRup");
  if (NFJjesRelativeStatFSRup_branch) NFJjesRelativeStatFSRup_branch->SetAddress(&NFJjesRelativeStatFSRup_);
  VMD0jesRelativeStatFSRup_branch = tree->GetBranch("VMD0jesRelativeStatFSRup");
  if (VMD0jesRelativeStatFSRup_branch) VMD0jesRelativeStatFSRup_branch->SetAddress(&VMD0jesRelativeStatFSRup_);
  VMD1jesRelativeStatFSRup_branch = tree->GetBranch("VMD1jesRelativeStatFSRup");
  if (VMD1jesRelativeStatFSRup_branch) VMD1jesRelativeStatFSRup_branch->SetAddress(&VMD1jesRelativeStatFSRup_);
  VMD2jesRelativeStatFSRup_branch = tree->GetBranch("VMD2jesRelativeStatFSRup");
  if (VMD2jesRelativeStatFSRup_branch) VMD2jesRelativeStatFSRup_branch->SetAddress(&VMD2jesRelativeStatFSRup_);
  VMD3jesRelativeStatFSRup_branch = tree->GetBranch("VMD3jesRelativeStatFSRup");
  if (VMD3jesRelativeStatFSRup_branch) VMD3jesRelativeStatFSRup_branch->SetAddress(&VMD3jesRelativeStatFSRup_);
  VMD4jesRelativeStatFSRup_branch = tree->GetBranch("VMD4jesRelativeStatFSRup");
  if (VMD4jesRelativeStatFSRup_branch) VMD4jesRelativeStatFSRup_branch->SetAddress(&VMD4jesRelativeStatFSRup_);
  WMD0jesRelativeStatFSRup_branch = tree->GetBranch("WMD0jesRelativeStatFSRup");
  if (WMD0jesRelativeStatFSRup_branch) WMD0jesRelativeStatFSRup_branch->SetAddress(&WMD0jesRelativeStatFSRup_);
  WMD1jesRelativeStatFSRup_branch = tree->GetBranch("WMD1jesRelativeStatFSRup");
  if (WMD1jesRelativeStatFSRup_branch) WMD1jesRelativeStatFSRup_branch->SetAddress(&WMD1jesRelativeStatFSRup_);
  WMD2jesRelativeStatFSRup_branch = tree->GetBranch("WMD2jesRelativeStatFSRup");
  if (WMD2jesRelativeStatFSRup_branch) WMD2jesRelativeStatFSRup_branch->SetAddress(&WMD2jesRelativeStatFSRup_);
  WMD3jesRelativeStatFSRup_branch = tree->GetBranch("WMD3jesRelativeStatFSRup");
  if (WMD3jesRelativeStatFSRup_branch) WMD3jesRelativeStatFSRup_branch->SetAddress(&WMD3jesRelativeStatFSRup_);
  WMD4jesRelativeStatFSRup_branch = tree->GetBranch("WMD4jesRelativeStatFSRup");
  if (WMD4jesRelativeStatFSRup_branch) WMD4jesRelativeStatFSRup_branch->SetAddress(&WMD4jesRelativeStatFSRup_);
  NQGen0jesRelativeStatFSRup_branch = tree->GetBranch("NQGen0jesRelativeStatFSRup");
  if (NQGen0jesRelativeStatFSRup_branch) NQGen0jesRelativeStatFSRup_branch->SetAddress(&NQGen0jesRelativeStatFSRup_);
  NQGen1jesRelativeStatFSRup_branch = tree->GetBranch("NQGen1jesRelativeStatFSRup");
  if (NQGen1jesRelativeStatFSRup_branch) NQGen1jesRelativeStatFSRup_branch->SetAddress(&NQGen1jesRelativeStatFSRup_);
  NQGen2jesRelativeStatFSRup_branch = tree->GetBranch("NQGen2jesRelativeStatFSRup");
  if (NQGen2jesRelativeStatFSRup_branch) NQGen2jesRelativeStatFSRup_branch->SetAddress(&NQGen2jesRelativeStatFSRup_);
  NQGen3jesRelativeStatFSRup_branch = tree->GetBranch("NQGen3jesRelativeStatFSRup");
  if (NQGen3jesRelativeStatFSRup_branch) NQGen3jesRelativeStatFSRup_branch->SetAddress(&NQGen3jesRelativeStatFSRup_);
  NQGen4jesRelativeStatFSRup_branch = tree->GetBranch("NQGen4jesRelativeStatFSRup");
  if (NQGen4jesRelativeStatFSRup_branch) NQGen4jesRelativeStatFSRup_branch->SetAddress(&NQGen4jesRelativeStatFSRup_);
  NBGen0jesRelativeStatFSRup_branch = tree->GetBranch("NBGen0jesRelativeStatFSRup");
  if (NBGen0jesRelativeStatFSRup_branch) NBGen0jesRelativeStatFSRup_branch->SetAddress(&NBGen0jesRelativeStatFSRup_);
  NBGen1jesRelativeStatFSRup_branch = tree->GetBranch("NBGen1jesRelativeStatFSRup");
  if (NBGen1jesRelativeStatFSRup_branch) NBGen1jesRelativeStatFSRup_branch->SetAddress(&NBGen1jesRelativeStatFSRup_);
  NBGen2jesRelativeStatFSRup_branch = tree->GetBranch("NBGen2jesRelativeStatFSRup");
  if (NBGen2jesRelativeStatFSRup_branch) NBGen2jesRelativeStatFSRup_branch->SetAddress(&NBGen2jesRelativeStatFSRup_);
  NBGen3jesRelativeStatFSRup_branch = tree->GetBranch("NBGen3jesRelativeStatFSRup");
  if (NBGen3jesRelativeStatFSRup_branch) NBGen3jesRelativeStatFSRup_branch->SetAddress(&NBGen3jesRelativeStatFSRup_);
  NBGen4jesRelativeStatFSRup_branch = tree->GetBranch("NBGen4jesRelativeStatFSRup");
  if (NBGen4jesRelativeStatFSRup_branch) NBGen4jesRelativeStatFSRup_branch->SetAddress(&NBGen4jesRelativeStatFSRup_);
  NLGen0jesRelativeStatFSRup_branch = tree->GetBranch("NLGen0jesRelativeStatFSRup");
  if (NLGen0jesRelativeStatFSRup_branch) NLGen0jesRelativeStatFSRup_branch->SetAddress(&NLGen0jesRelativeStatFSRup_);
  NLGen1jesRelativeStatFSRup_branch = tree->GetBranch("NLGen1jesRelativeStatFSRup");
  if (NLGen1jesRelativeStatFSRup_branch) NLGen1jesRelativeStatFSRup_branch->SetAddress(&NLGen1jesRelativeStatFSRup_);
  NLGen2jesRelativeStatFSRup_branch = tree->GetBranch("NLGen2jesRelativeStatFSRup");
  if (NLGen2jesRelativeStatFSRup_branch) NLGen2jesRelativeStatFSRup_branch->SetAddress(&NLGen2jesRelativeStatFSRup_);
  NLGen3jesRelativeStatFSRup_branch = tree->GetBranch("NLGen3jesRelativeStatFSRup");
  if (NLGen3jesRelativeStatFSRup_branch) NLGen3jesRelativeStatFSRup_branch->SetAddress(&NLGen3jesRelativeStatFSRup_);
  NLGen4jesRelativeStatFSRup_branch = tree->GetBranch("NLGen4jesRelativeStatFSRup");
  if (NLGen4jesRelativeStatFSRup_branch) NLGen4jesRelativeStatFSRup_branch->SetAddress(&NLGen4jesRelativeStatFSRup_);
  NVQGen0jesRelativeStatFSRup_branch = tree->GetBranch("NVQGen0jesRelativeStatFSRup");
  if (NVQGen0jesRelativeStatFSRup_branch) NVQGen0jesRelativeStatFSRup_branch->SetAddress(&NVQGen0jesRelativeStatFSRup_);
  NVQGen1jesRelativeStatFSRup_branch = tree->GetBranch("NVQGen1jesRelativeStatFSRup");
  if (NVQGen1jesRelativeStatFSRup_branch) NVQGen1jesRelativeStatFSRup_branch->SetAddress(&NVQGen1jesRelativeStatFSRup_);
  NVQGen2jesRelativeStatFSRup_branch = tree->GetBranch("NVQGen2jesRelativeStatFSRup");
  if (NVQGen2jesRelativeStatFSRup_branch) NVQGen2jesRelativeStatFSRup_branch->SetAddress(&NVQGen2jesRelativeStatFSRup_);
  NVQGen3jesRelativeStatFSRup_branch = tree->GetBranch("NVQGen3jesRelativeStatFSRup");
  if (NVQGen3jesRelativeStatFSRup_branch) NVQGen3jesRelativeStatFSRup_branch->SetAddress(&NVQGen3jesRelativeStatFSRup_);
  NVQGen4jesRelativeStatFSRup_branch = tree->GetBranch("NVQGen4jesRelativeStatFSRup");
  if (NVQGen4jesRelativeStatFSRup_branch) NVQGen4jesRelativeStatFSRup_branch->SetAddress(&NVQGen4jesRelativeStatFSRup_);
  NiFJjesRelativeStatFSRup_branch = tree->GetBranch("NiFJjesRelativeStatFSRup");
  if (NiFJjesRelativeStatFSRup_branch) NiFJjesRelativeStatFSRup_branch->SetAddress(&NiFJjesRelativeStatFSRup_);
  iVMD0jesRelativeStatFSRup_branch = tree->GetBranch("iVMD0jesRelativeStatFSRup");
  if (iVMD0jesRelativeStatFSRup_branch) iVMD0jesRelativeStatFSRup_branch->SetAddress(&iVMD0jesRelativeStatFSRup_);
  iVMD1jesRelativeStatFSRup_branch = tree->GetBranch("iVMD1jesRelativeStatFSRup");
  if (iVMD1jesRelativeStatFSRup_branch) iVMD1jesRelativeStatFSRup_branch->SetAddress(&iVMD1jesRelativeStatFSRup_);
  iVMD2jesRelativeStatFSRup_branch = tree->GetBranch("iVMD2jesRelativeStatFSRup");
  if (iVMD2jesRelativeStatFSRup_branch) iVMD2jesRelativeStatFSRup_branch->SetAddress(&iVMD2jesRelativeStatFSRup_);
  iVMD3jesRelativeStatFSRup_branch = tree->GetBranch("iVMD3jesRelativeStatFSRup");
  if (iVMD3jesRelativeStatFSRup_branch) iVMD3jesRelativeStatFSRup_branch->SetAddress(&iVMD3jesRelativeStatFSRup_);
  iVMD4jesRelativeStatFSRup_branch = tree->GetBranch("iVMD4jesRelativeStatFSRup");
  if (iVMD4jesRelativeStatFSRup_branch) iVMD4jesRelativeStatFSRup_branch->SetAddress(&iVMD4jesRelativeStatFSRup_);
  iWMD0jesRelativeStatFSRup_branch = tree->GetBranch("iWMD0jesRelativeStatFSRup");
  if (iWMD0jesRelativeStatFSRup_branch) iWMD0jesRelativeStatFSRup_branch->SetAddress(&iWMD0jesRelativeStatFSRup_);
  iWMD1jesRelativeStatFSRup_branch = tree->GetBranch("iWMD1jesRelativeStatFSRup");
  if (iWMD1jesRelativeStatFSRup_branch) iWMD1jesRelativeStatFSRup_branch->SetAddress(&iWMD1jesRelativeStatFSRup_);
  iWMD2jesRelativeStatFSRup_branch = tree->GetBranch("iWMD2jesRelativeStatFSRup");
  if (iWMD2jesRelativeStatFSRup_branch) iWMD2jesRelativeStatFSRup_branch->SetAddress(&iWMD2jesRelativeStatFSRup_);
  iWMD3jesRelativeStatFSRup_branch = tree->GetBranch("iWMD3jesRelativeStatFSRup");
  if (iWMD3jesRelativeStatFSRup_branch) iWMD3jesRelativeStatFSRup_branch->SetAddress(&iWMD3jesRelativeStatFSRup_);
  iWMD4jesRelativeStatFSRup_branch = tree->GetBranch("iWMD4jesRelativeStatFSRup");
  if (iWMD4jesRelativeStatFSRup_branch) iWMD4jesRelativeStatFSRup_branch->SetAddress(&iWMD4jesRelativeStatFSRup_);
  NJjesRelativeStatFSRup_branch = tree->GetBranch("NJjesRelativeStatFSRup");
  if (NJjesRelativeStatFSRup_branch) NJjesRelativeStatFSRup_branch->SetAddress(&NJjesRelativeStatFSRup_);
  NbLoosejesRelativeStatFSRup_branch = tree->GetBranch("NbLoosejesRelativeStatFSRup");
  if (NbLoosejesRelativeStatFSRup_branch) NbLoosejesRelativeStatFSRup_branch->SetAddress(&NbLoosejesRelativeStatFSRup_);
  NbMediumjesRelativeStatFSRup_branch = tree->GetBranch("NbMediumjesRelativeStatFSRup");
  if (NbMediumjesRelativeStatFSRup_branch) NbMediumjesRelativeStatFSRup_branch->SetAddress(&NbMediumjesRelativeStatFSRup_);
  NbTightjesRelativeStatFSRup_branch = tree->GetBranch("NbTightjesRelativeStatFSRup");
  if (NbTightjesRelativeStatFSRup_branch) NbTightjesRelativeStatFSRup_branch->SetAddress(&NbTightjesRelativeStatFSRup_);
  NoORNbLoosejesRelativeStatFSRup_branch = tree->GetBranch("NoORNbLoosejesRelativeStatFSRup");
  if (NoORNbLoosejesRelativeStatFSRup_branch) NoORNbLoosejesRelativeStatFSRup_branch->SetAddress(&NoORNbLoosejesRelativeStatFSRup_);
  NoORNbMediumjesRelativeStatFSRup_branch = tree->GetBranch("NoORNbMediumjesRelativeStatFSRup");
  if (NoORNbMediumjesRelativeStatFSRup_branch) NoORNbMediumjesRelativeStatFSRup_branch->SetAddress(&NoORNbMediumjesRelativeStatFSRup_);
  NoORNbTightjesRelativeStatFSRup_branch = tree->GetBranch("NoORNbTightjesRelativeStatFSRup");
  if (NoORNbTightjesRelativeStatFSRup_branch) NoORNbTightjesRelativeStatFSRup_branch->SetAddress(&NoORNbTightjesRelativeStatFSRup_);
  NQJGenjesRelativeStatFSRup_branch = tree->GetBranch("NQJGenjesRelativeStatFSRup");
  if (NQJGenjesRelativeStatFSRup_branch) NQJGenjesRelativeStatFSRup_branch->SetAddress(&NQJGenjesRelativeStatFSRup_);
  NBJGenjesRelativeStatFSRup_branch = tree->GetBranch("NBJGenjesRelativeStatFSRup");
  if (NBJGenjesRelativeStatFSRup_branch) NBJGenjesRelativeStatFSRup_branch->SetAddress(&NBJGenjesRelativeStatFSRup_);
  NLJGenjesRelativeStatFSRup_branch = tree->GetBranch("NLJGenjesRelativeStatFSRup");
  if (NLJGenjesRelativeStatFSRup_branch) NLJGenjesRelativeStatFSRup_branch->SetAddress(&NLJGenjesRelativeStatFSRup_);
  MVVXjesRelativeStatFSRup_branch = tree->GetBranch("MVVXjesRelativeStatFSRup");
  if (MVVXjesRelativeStatFSRup_branch) MVVXjesRelativeStatFSRup_branch->SetAddress(&MVVXjesRelativeStatFSRup_);
  PtVVXjesRelativeStatFSRup_branch = tree->GetBranch("PtVVXjesRelativeStatFSRup");
  if (PtVVXjesRelativeStatFSRup_branch) PtVVXjesRelativeStatFSRup_branch->SetAddress(&PtVVXjesRelativeStatFSRup_);
  HTjesRelativeStatFSRup_branch = tree->GetBranch("HTjesRelativeStatFSRup");
  if (HTjesRelativeStatFSRup_branch) HTjesRelativeStatFSRup_branch->SetAddress(&HTjesRelativeStatFSRup_);
  HTJjesRelativeStatFSRup_branch = tree->GetBranch("HTJjesRelativeStatFSRup");
  if (HTJjesRelativeStatFSRup_branch) HTJjesRelativeStatFSRup_branch->SetAddress(&HTJjesRelativeStatFSRup_);
  HTFJjesRelativeStatFSRup_branch = tree->GetBranch("HTFJjesRelativeStatFSRup");
  if (HTFJjesRelativeStatFSRup_branch) HTFJjesRelativeStatFSRup_branch->SetAddress(&HTFJjesRelativeStatFSRup_);
  SumPtFJjesRelativeStatFSRup_branch = tree->GetBranch("SumPtFJjesRelativeStatFSRup");
  if (SumPtFJjesRelativeStatFSRup_branch) SumPtFJjesRelativeStatFSRup_branch->SetAddress(&SumPtFJjesRelativeStatFSRup_);
  SumPtJjesRelativeStatFSRup_branch = tree->GetBranch("SumPtJjesRelativeStatFSRup");
  if (SumPtJjesRelativeStatFSRup_branch) SumPtJjesRelativeStatFSRup_branch->SetAddress(&SumPtJjesRelativeStatFSRup_);
  NFJjesRelativeStatFSRdn_branch = tree->GetBranch("NFJjesRelativeStatFSRdn");
  if (NFJjesRelativeStatFSRdn_branch) NFJjesRelativeStatFSRdn_branch->SetAddress(&NFJjesRelativeStatFSRdn_);
  VMD0jesRelativeStatFSRdn_branch = tree->GetBranch("VMD0jesRelativeStatFSRdn");
  if (VMD0jesRelativeStatFSRdn_branch) VMD0jesRelativeStatFSRdn_branch->SetAddress(&VMD0jesRelativeStatFSRdn_);
  VMD1jesRelativeStatFSRdn_branch = tree->GetBranch("VMD1jesRelativeStatFSRdn");
  if (VMD1jesRelativeStatFSRdn_branch) VMD1jesRelativeStatFSRdn_branch->SetAddress(&VMD1jesRelativeStatFSRdn_);
  VMD2jesRelativeStatFSRdn_branch = tree->GetBranch("VMD2jesRelativeStatFSRdn");
  if (VMD2jesRelativeStatFSRdn_branch) VMD2jesRelativeStatFSRdn_branch->SetAddress(&VMD2jesRelativeStatFSRdn_);
  VMD3jesRelativeStatFSRdn_branch = tree->GetBranch("VMD3jesRelativeStatFSRdn");
  if (VMD3jesRelativeStatFSRdn_branch) VMD3jesRelativeStatFSRdn_branch->SetAddress(&VMD3jesRelativeStatFSRdn_);
  VMD4jesRelativeStatFSRdn_branch = tree->GetBranch("VMD4jesRelativeStatFSRdn");
  if (VMD4jesRelativeStatFSRdn_branch) VMD4jesRelativeStatFSRdn_branch->SetAddress(&VMD4jesRelativeStatFSRdn_);
  WMD0jesRelativeStatFSRdn_branch = tree->GetBranch("WMD0jesRelativeStatFSRdn");
  if (WMD0jesRelativeStatFSRdn_branch) WMD0jesRelativeStatFSRdn_branch->SetAddress(&WMD0jesRelativeStatFSRdn_);
  WMD1jesRelativeStatFSRdn_branch = tree->GetBranch("WMD1jesRelativeStatFSRdn");
  if (WMD1jesRelativeStatFSRdn_branch) WMD1jesRelativeStatFSRdn_branch->SetAddress(&WMD1jesRelativeStatFSRdn_);
  WMD2jesRelativeStatFSRdn_branch = tree->GetBranch("WMD2jesRelativeStatFSRdn");
  if (WMD2jesRelativeStatFSRdn_branch) WMD2jesRelativeStatFSRdn_branch->SetAddress(&WMD2jesRelativeStatFSRdn_);
  WMD3jesRelativeStatFSRdn_branch = tree->GetBranch("WMD3jesRelativeStatFSRdn");
  if (WMD3jesRelativeStatFSRdn_branch) WMD3jesRelativeStatFSRdn_branch->SetAddress(&WMD3jesRelativeStatFSRdn_);
  WMD4jesRelativeStatFSRdn_branch = tree->GetBranch("WMD4jesRelativeStatFSRdn");
  if (WMD4jesRelativeStatFSRdn_branch) WMD4jesRelativeStatFSRdn_branch->SetAddress(&WMD4jesRelativeStatFSRdn_);
  NQGen0jesRelativeStatFSRdn_branch = tree->GetBranch("NQGen0jesRelativeStatFSRdn");
  if (NQGen0jesRelativeStatFSRdn_branch) NQGen0jesRelativeStatFSRdn_branch->SetAddress(&NQGen0jesRelativeStatFSRdn_);
  NQGen1jesRelativeStatFSRdn_branch = tree->GetBranch("NQGen1jesRelativeStatFSRdn");
  if (NQGen1jesRelativeStatFSRdn_branch) NQGen1jesRelativeStatFSRdn_branch->SetAddress(&NQGen1jesRelativeStatFSRdn_);
  NQGen2jesRelativeStatFSRdn_branch = tree->GetBranch("NQGen2jesRelativeStatFSRdn");
  if (NQGen2jesRelativeStatFSRdn_branch) NQGen2jesRelativeStatFSRdn_branch->SetAddress(&NQGen2jesRelativeStatFSRdn_);
  NQGen3jesRelativeStatFSRdn_branch = tree->GetBranch("NQGen3jesRelativeStatFSRdn");
  if (NQGen3jesRelativeStatFSRdn_branch) NQGen3jesRelativeStatFSRdn_branch->SetAddress(&NQGen3jesRelativeStatFSRdn_);
  NQGen4jesRelativeStatFSRdn_branch = tree->GetBranch("NQGen4jesRelativeStatFSRdn");
  if (NQGen4jesRelativeStatFSRdn_branch) NQGen4jesRelativeStatFSRdn_branch->SetAddress(&NQGen4jesRelativeStatFSRdn_);
  NBGen0jesRelativeStatFSRdn_branch = tree->GetBranch("NBGen0jesRelativeStatFSRdn");
  if (NBGen0jesRelativeStatFSRdn_branch) NBGen0jesRelativeStatFSRdn_branch->SetAddress(&NBGen0jesRelativeStatFSRdn_);
  NBGen1jesRelativeStatFSRdn_branch = tree->GetBranch("NBGen1jesRelativeStatFSRdn");
  if (NBGen1jesRelativeStatFSRdn_branch) NBGen1jesRelativeStatFSRdn_branch->SetAddress(&NBGen1jesRelativeStatFSRdn_);
  NBGen2jesRelativeStatFSRdn_branch = tree->GetBranch("NBGen2jesRelativeStatFSRdn");
  if (NBGen2jesRelativeStatFSRdn_branch) NBGen2jesRelativeStatFSRdn_branch->SetAddress(&NBGen2jesRelativeStatFSRdn_);
  NBGen3jesRelativeStatFSRdn_branch = tree->GetBranch("NBGen3jesRelativeStatFSRdn");
  if (NBGen3jesRelativeStatFSRdn_branch) NBGen3jesRelativeStatFSRdn_branch->SetAddress(&NBGen3jesRelativeStatFSRdn_);
  NBGen4jesRelativeStatFSRdn_branch = tree->GetBranch("NBGen4jesRelativeStatFSRdn");
  if (NBGen4jesRelativeStatFSRdn_branch) NBGen4jesRelativeStatFSRdn_branch->SetAddress(&NBGen4jesRelativeStatFSRdn_);
  NLGen0jesRelativeStatFSRdn_branch = tree->GetBranch("NLGen0jesRelativeStatFSRdn");
  if (NLGen0jesRelativeStatFSRdn_branch) NLGen0jesRelativeStatFSRdn_branch->SetAddress(&NLGen0jesRelativeStatFSRdn_);
  NLGen1jesRelativeStatFSRdn_branch = tree->GetBranch("NLGen1jesRelativeStatFSRdn");
  if (NLGen1jesRelativeStatFSRdn_branch) NLGen1jesRelativeStatFSRdn_branch->SetAddress(&NLGen1jesRelativeStatFSRdn_);
  NLGen2jesRelativeStatFSRdn_branch = tree->GetBranch("NLGen2jesRelativeStatFSRdn");
  if (NLGen2jesRelativeStatFSRdn_branch) NLGen2jesRelativeStatFSRdn_branch->SetAddress(&NLGen2jesRelativeStatFSRdn_);
  NLGen3jesRelativeStatFSRdn_branch = tree->GetBranch("NLGen3jesRelativeStatFSRdn");
  if (NLGen3jesRelativeStatFSRdn_branch) NLGen3jesRelativeStatFSRdn_branch->SetAddress(&NLGen3jesRelativeStatFSRdn_);
  NLGen4jesRelativeStatFSRdn_branch = tree->GetBranch("NLGen4jesRelativeStatFSRdn");
  if (NLGen4jesRelativeStatFSRdn_branch) NLGen4jesRelativeStatFSRdn_branch->SetAddress(&NLGen4jesRelativeStatFSRdn_);
  NVQGen0jesRelativeStatFSRdn_branch = tree->GetBranch("NVQGen0jesRelativeStatFSRdn");
  if (NVQGen0jesRelativeStatFSRdn_branch) NVQGen0jesRelativeStatFSRdn_branch->SetAddress(&NVQGen0jesRelativeStatFSRdn_);
  NVQGen1jesRelativeStatFSRdn_branch = tree->GetBranch("NVQGen1jesRelativeStatFSRdn");
  if (NVQGen1jesRelativeStatFSRdn_branch) NVQGen1jesRelativeStatFSRdn_branch->SetAddress(&NVQGen1jesRelativeStatFSRdn_);
  NVQGen2jesRelativeStatFSRdn_branch = tree->GetBranch("NVQGen2jesRelativeStatFSRdn");
  if (NVQGen2jesRelativeStatFSRdn_branch) NVQGen2jesRelativeStatFSRdn_branch->SetAddress(&NVQGen2jesRelativeStatFSRdn_);
  NVQGen3jesRelativeStatFSRdn_branch = tree->GetBranch("NVQGen3jesRelativeStatFSRdn");
  if (NVQGen3jesRelativeStatFSRdn_branch) NVQGen3jesRelativeStatFSRdn_branch->SetAddress(&NVQGen3jesRelativeStatFSRdn_);
  NVQGen4jesRelativeStatFSRdn_branch = tree->GetBranch("NVQGen4jesRelativeStatFSRdn");
  if (NVQGen4jesRelativeStatFSRdn_branch) NVQGen4jesRelativeStatFSRdn_branch->SetAddress(&NVQGen4jesRelativeStatFSRdn_);
  NiFJjesRelativeStatFSRdn_branch = tree->GetBranch("NiFJjesRelativeStatFSRdn");
  if (NiFJjesRelativeStatFSRdn_branch) NiFJjesRelativeStatFSRdn_branch->SetAddress(&NiFJjesRelativeStatFSRdn_);
  iVMD0jesRelativeStatFSRdn_branch = tree->GetBranch("iVMD0jesRelativeStatFSRdn");
  if (iVMD0jesRelativeStatFSRdn_branch) iVMD0jesRelativeStatFSRdn_branch->SetAddress(&iVMD0jesRelativeStatFSRdn_);
  iVMD1jesRelativeStatFSRdn_branch = tree->GetBranch("iVMD1jesRelativeStatFSRdn");
  if (iVMD1jesRelativeStatFSRdn_branch) iVMD1jesRelativeStatFSRdn_branch->SetAddress(&iVMD1jesRelativeStatFSRdn_);
  iVMD2jesRelativeStatFSRdn_branch = tree->GetBranch("iVMD2jesRelativeStatFSRdn");
  if (iVMD2jesRelativeStatFSRdn_branch) iVMD2jesRelativeStatFSRdn_branch->SetAddress(&iVMD2jesRelativeStatFSRdn_);
  iVMD3jesRelativeStatFSRdn_branch = tree->GetBranch("iVMD3jesRelativeStatFSRdn");
  if (iVMD3jesRelativeStatFSRdn_branch) iVMD3jesRelativeStatFSRdn_branch->SetAddress(&iVMD3jesRelativeStatFSRdn_);
  iVMD4jesRelativeStatFSRdn_branch = tree->GetBranch("iVMD4jesRelativeStatFSRdn");
  if (iVMD4jesRelativeStatFSRdn_branch) iVMD4jesRelativeStatFSRdn_branch->SetAddress(&iVMD4jesRelativeStatFSRdn_);
  iWMD0jesRelativeStatFSRdn_branch = tree->GetBranch("iWMD0jesRelativeStatFSRdn");
  if (iWMD0jesRelativeStatFSRdn_branch) iWMD0jesRelativeStatFSRdn_branch->SetAddress(&iWMD0jesRelativeStatFSRdn_);
  iWMD1jesRelativeStatFSRdn_branch = tree->GetBranch("iWMD1jesRelativeStatFSRdn");
  if (iWMD1jesRelativeStatFSRdn_branch) iWMD1jesRelativeStatFSRdn_branch->SetAddress(&iWMD1jesRelativeStatFSRdn_);
  iWMD2jesRelativeStatFSRdn_branch = tree->GetBranch("iWMD2jesRelativeStatFSRdn");
  if (iWMD2jesRelativeStatFSRdn_branch) iWMD2jesRelativeStatFSRdn_branch->SetAddress(&iWMD2jesRelativeStatFSRdn_);
  iWMD3jesRelativeStatFSRdn_branch = tree->GetBranch("iWMD3jesRelativeStatFSRdn");
  if (iWMD3jesRelativeStatFSRdn_branch) iWMD3jesRelativeStatFSRdn_branch->SetAddress(&iWMD3jesRelativeStatFSRdn_);
  iWMD4jesRelativeStatFSRdn_branch = tree->GetBranch("iWMD4jesRelativeStatFSRdn");
  if (iWMD4jesRelativeStatFSRdn_branch) iWMD4jesRelativeStatFSRdn_branch->SetAddress(&iWMD4jesRelativeStatFSRdn_);
  NJjesRelativeStatFSRdn_branch = tree->GetBranch("NJjesRelativeStatFSRdn");
  if (NJjesRelativeStatFSRdn_branch) NJjesRelativeStatFSRdn_branch->SetAddress(&NJjesRelativeStatFSRdn_);
  NbLoosejesRelativeStatFSRdn_branch = tree->GetBranch("NbLoosejesRelativeStatFSRdn");
  if (NbLoosejesRelativeStatFSRdn_branch) NbLoosejesRelativeStatFSRdn_branch->SetAddress(&NbLoosejesRelativeStatFSRdn_);
  NbMediumjesRelativeStatFSRdn_branch = tree->GetBranch("NbMediumjesRelativeStatFSRdn");
  if (NbMediumjesRelativeStatFSRdn_branch) NbMediumjesRelativeStatFSRdn_branch->SetAddress(&NbMediumjesRelativeStatFSRdn_);
  NbTightjesRelativeStatFSRdn_branch = tree->GetBranch("NbTightjesRelativeStatFSRdn");
  if (NbTightjesRelativeStatFSRdn_branch) NbTightjesRelativeStatFSRdn_branch->SetAddress(&NbTightjesRelativeStatFSRdn_);
  NoORNbLoosejesRelativeStatFSRdn_branch = tree->GetBranch("NoORNbLoosejesRelativeStatFSRdn");
  if (NoORNbLoosejesRelativeStatFSRdn_branch) NoORNbLoosejesRelativeStatFSRdn_branch->SetAddress(&NoORNbLoosejesRelativeStatFSRdn_);
  NoORNbMediumjesRelativeStatFSRdn_branch = tree->GetBranch("NoORNbMediumjesRelativeStatFSRdn");
  if (NoORNbMediumjesRelativeStatFSRdn_branch) NoORNbMediumjesRelativeStatFSRdn_branch->SetAddress(&NoORNbMediumjesRelativeStatFSRdn_);
  NoORNbTightjesRelativeStatFSRdn_branch = tree->GetBranch("NoORNbTightjesRelativeStatFSRdn");
  if (NoORNbTightjesRelativeStatFSRdn_branch) NoORNbTightjesRelativeStatFSRdn_branch->SetAddress(&NoORNbTightjesRelativeStatFSRdn_);
  NQJGenjesRelativeStatFSRdn_branch = tree->GetBranch("NQJGenjesRelativeStatFSRdn");
  if (NQJGenjesRelativeStatFSRdn_branch) NQJGenjesRelativeStatFSRdn_branch->SetAddress(&NQJGenjesRelativeStatFSRdn_);
  NBJGenjesRelativeStatFSRdn_branch = tree->GetBranch("NBJGenjesRelativeStatFSRdn");
  if (NBJGenjesRelativeStatFSRdn_branch) NBJGenjesRelativeStatFSRdn_branch->SetAddress(&NBJGenjesRelativeStatFSRdn_);
  NLJGenjesRelativeStatFSRdn_branch = tree->GetBranch("NLJGenjesRelativeStatFSRdn");
  if (NLJGenjesRelativeStatFSRdn_branch) NLJGenjesRelativeStatFSRdn_branch->SetAddress(&NLJGenjesRelativeStatFSRdn_);
  MVVXjesRelativeStatFSRdn_branch = tree->GetBranch("MVVXjesRelativeStatFSRdn");
  if (MVVXjesRelativeStatFSRdn_branch) MVVXjesRelativeStatFSRdn_branch->SetAddress(&MVVXjesRelativeStatFSRdn_);
  PtVVXjesRelativeStatFSRdn_branch = tree->GetBranch("PtVVXjesRelativeStatFSRdn");
  if (PtVVXjesRelativeStatFSRdn_branch) PtVVXjesRelativeStatFSRdn_branch->SetAddress(&PtVVXjesRelativeStatFSRdn_);
  HTjesRelativeStatFSRdn_branch = tree->GetBranch("HTjesRelativeStatFSRdn");
  if (HTjesRelativeStatFSRdn_branch) HTjesRelativeStatFSRdn_branch->SetAddress(&HTjesRelativeStatFSRdn_);
  HTJjesRelativeStatFSRdn_branch = tree->GetBranch("HTJjesRelativeStatFSRdn");
  if (HTJjesRelativeStatFSRdn_branch) HTJjesRelativeStatFSRdn_branch->SetAddress(&HTJjesRelativeStatFSRdn_);
  HTFJjesRelativeStatFSRdn_branch = tree->GetBranch("HTFJjesRelativeStatFSRdn");
  if (HTFJjesRelativeStatFSRdn_branch) HTFJjesRelativeStatFSRdn_branch->SetAddress(&HTFJjesRelativeStatFSRdn_);
  SumPtFJjesRelativeStatFSRdn_branch = tree->GetBranch("SumPtFJjesRelativeStatFSRdn");
  if (SumPtFJjesRelativeStatFSRdn_branch) SumPtFJjesRelativeStatFSRdn_branch->SetAddress(&SumPtFJjesRelativeStatFSRdn_);
  SumPtJjesRelativeStatFSRdn_branch = tree->GetBranch("SumPtJjesRelativeStatFSRdn");
  if (SumPtJjesRelativeStatFSRdn_branch) SumPtJjesRelativeStatFSRdn_branch->SetAddress(&SumPtJjesRelativeStatFSRdn_);
  NFJjesRelativeStatECup_branch = tree->GetBranch("NFJjesRelativeStatECup");
  if (NFJjesRelativeStatECup_branch) NFJjesRelativeStatECup_branch->SetAddress(&NFJjesRelativeStatECup_);
  VMD0jesRelativeStatECup_branch = tree->GetBranch("VMD0jesRelativeStatECup");
  if (VMD0jesRelativeStatECup_branch) VMD0jesRelativeStatECup_branch->SetAddress(&VMD0jesRelativeStatECup_);
  VMD1jesRelativeStatECup_branch = tree->GetBranch("VMD1jesRelativeStatECup");
  if (VMD1jesRelativeStatECup_branch) VMD1jesRelativeStatECup_branch->SetAddress(&VMD1jesRelativeStatECup_);
  VMD2jesRelativeStatECup_branch = tree->GetBranch("VMD2jesRelativeStatECup");
  if (VMD2jesRelativeStatECup_branch) VMD2jesRelativeStatECup_branch->SetAddress(&VMD2jesRelativeStatECup_);
  VMD3jesRelativeStatECup_branch = tree->GetBranch("VMD3jesRelativeStatECup");
  if (VMD3jesRelativeStatECup_branch) VMD3jesRelativeStatECup_branch->SetAddress(&VMD3jesRelativeStatECup_);
  VMD4jesRelativeStatECup_branch = tree->GetBranch("VMD4jesRelativeStatECup");
  if (VMD4jesRelativeStatECup_branch) VMD4jesRelativeStatECup_branch->SetAddress(&VMD4jesRelativeStatECup_);
  WMD0jesRelativeStatECup_branch = tree->GetBranch("WMD0jesRelativeStatECup");
  if (WMD0jesRelativeStatECup_branch) WMD0jesRelativeStatECup_branch->SetAddress(&WMD0jesRelativeStatECup_);
  WMD1jesRelativeStatECup_branch = tree->GetBranch("WMD1jesRelativeStatECup");
  if (WMD1jesRelativeStatECup_branch) WMD1jesRelativeStatECup_branch->SetAddress(&WMD1jesRelativeStatECup_);
  WMD2jesRelativeStatECup_branch = tree->GetBranch("WMD2jesRelativeStatECup");
  if (WMD2jesRelativeStatECup_branch) WMD2jesRelativeStatECup_branch->SetAddress(&WMD2jesRelativeStatECup_);
  WMD3jesRelativeStatECup_branch = tree->GetBranch("WMD3jesRelativeStatECup");
  if (WMD3jesRelativeStatECup_branch) WMD3jesRelativeStatECup_branch->SetAddress(&WMD3jesRelativeStatECup_);
  WMD4jesRelativeStatECup_branch = tree->GetBranch("WMD4jesRelativeStatECup");
  if (WMD4jesRelativeStatECup_branch) WMD4jesRelativeStatECup_branch->SetAddress(&WMD4jesRelativeStatECup_);
  NQGen0jesRelativeStatECup_branch = tree->GetBranch("NQGen0jesRelativeStatECup");
  if (NQGen0jesRelativeStatECup_branch) NQGen0jesRelativeStatECup_branch->SetAddress(&NQGen0jesRelativeStatECup_);
  NQGen1jesRelativeStatECup_branch = tree->GetBranch("NQGen1jesRelativeStatECup");
  if (NQGen1jesRelativeStatECup_branch) NQGen1jesRelativeStatECup_branch->SetAddress(&NQGen1jesRelativeStatECup_);
  NQGen2jesRelativeStatECup_branch = tree->GetBranch("NQGen2jesRelativeStatECup");
  if (NQGen2jesRelativeStatECup_branch) NQGen2jesRelativeStatECup_branch->SetAddress(&NQGen2jesRelativeStatECup_);
  NQGen3jesRelativeStatECup_branch = tree->GetBranch("NQGen3jesRelativeStatECup");
  if (NQGen3jesRelativeStatECup_branch) NQGen3jesRelativeStatECup_branch->SetAddress(&NQGen3jesRelativeStatECup_);
  NQGen4jesRelativeStatECup_branch = tree->GetBranch("NQGen4jesRelativeStatECup");
  if (NQGen4jesRelativeStatECup_branch) NQGen4jesRelativeStatECup_branch->SetAddress(&NQGen4jesRelativeStatECup_);
  NBGen0jesRelativeStatECup_branch = tree->GetBranch("NBGen0jesRelativeStatECup");
  if (NBGen0jesRelativeStatECup_branch) NBGen0jesRelativeStatECup_branch->SetAddress(&NBGen0jesRelativeStatECup_);
  NBGen1jesRelativeStatECup_branch = tree->GetBranch("NBGen1jesRelativeStatECup");
  if (NBGen1jesRelativeStatECup_branch) NBGen1jesRelativeStatECup_branch->SetAddress(&NBGen1jesRelativeStatECup_);
  NBGen2jesRelativeStatECup_branch = tree->GetBranch("NBGen2jesRelativeStatECup");
  if (NBGen2jesRelativeStatECup_branch) NBGen2jesRelativeStatECup_branch->SetAddress(&NBGen2jesRelativeStatECup_);
  NBGen3jesRelativeStatECup_branch = tree->GetBranch("NBGen3jesRelativeStatECup");
  if (NBGen3jesRelativeStatECup_branch) NBGen3jesRelativeStatECup_branch->SetAddress(&NBGen3jesRelativeStatECup_);
  NBGen4jesRelativeStatECup_branch = tree->GetBranch("NBGen4jesRelativeStatECup");
  if (NBGen4jesRelativeStatECup_branch) NBGen4jesRelativeStatECup_branch->SetAddress(&NBGen4jesRelativeStatECup_);
  NLGen0jesRelativeStatECup_branch = tree->GetBranch("NLGen0jesRelativeStatECup");
  if (NLGen0jesRelativeStatECup_branch) NLGen0jesRelativeStatECup_branch->SetAddress(&NLGen0jesRelativeStatECup_);
  NLGen1jesRelativeStatECup_branch = tree->GetBranch("NLGen1jesRelativeStatECup");
  if (NLGen1jesRelativeStatECup_branch) NLGen1jesRelativeStatECup_branch->SetAddress(&NLGen1jesRelativeStatECup_);
  NLGen2jesRelativeStatECup_branch = tree->GetBranch("NLGen2jesRelativeStatECup");
  if (NLGen2jesRelativeStatECup_branch) NLGen2jesRelativeStatECup_branch->SetAddress(&NLGen2jesRelativeStatECup_);
  NLGen3jesRelativeStatECup_branch = tree->GetBranch("NLGen3jesRelativeStatECup");
  if (NLGen3jesRelativeStatECup_branch) NLGen3jesRelativeStatECup_branch->SetAddress(&NLGen3jesRelativeStatECup_);
  NLGen4jesRelativeStatECup_branch = tree->GetBranch("NLGen4jesRelativeStatECup");
  if (NLGen4jesRelativeStatECup_branch) NLGen4jesRelativeStatECup_branch->SetAddress(&NLGen4jesRelativeStatECup_);
  NVQGen0jesRelativeStatECup_branch = tree->GetBranch("NVQGen0jesRelativeStatECup");
  if (NVQGen0jesRelativeStatECup_branch) NVQGen0jesRelativeStatECup_branch->SetAddress(&NVQGen0jesRelativeStatECup_);
  NVQGen1jesRelativeStatECup_branch = tree->GetBranch("NVQGen1jesRelativeStatECup");
  if (NVQGen1jesRelativeStatECup_branch) NVQGen1jesRelativeStatECup_branch->SetAddress(&NVQGen1jesRelativeStatECup_);
  NVQGen2jesRelativeStatECup_branch = tree->GetBranch("NVQGen2jesRelativeStatECup");
  if (NVQGen2jesRelativeStatECup_branch) NVQGen2jesRelativeStatECup_branch->SetAddress(&NVQGen2jesRelativeStatECup_);
  NVQGen3jesRelativeStatECup_branch = tree->GetBranch("NVQGen3jesRelativeStatECup");
  if (NVQGen3jesRelativeStatECup_branch) NVQGen3jesRelativeStatECup_branch->SetAddress(&NVQGen3jesRelativeStatECup_);
  NVQGen4jesRelativeStatECup_branch = tree->GetBranch("NVQGen4jesRelativeStatECup");
  if (NVQGen4jesRelativeStatECup_branch) NVQGen4jesRelativeStatECup_branch->SetAddress(&NVQGen4jesRelativeStatECup_);
  NiFJjesRelativeStatECup_branch = tree->GetBranch("NiFJjesRelativeStatECup");
  if (NiFJjesRelativeStatECup_branch) NiFJjesRelativeStatECup_branch->SetAddress(&NiFJjesRelativeStatECup_);
  iVMD0jesRelativeStatECup_branch = tree->GetBranch("iVMD0jesRelativeStatECup");
  if (iVMD0jesRelativeStatECup_branch) iVMD0jesRelativeStatECup_branch->SetAddress(&iVMD0jesRelativeStatECup_);
  iVMD1jesRelativeStatECup_branch = tree->GetBranch("iVMD1jesRelativeStatECup");
  if (iVMD1jesRelativeStatECup_branch) iVMD1jesRelativeStatECup_branch->SetAddress(&iVMD1jesRelativeStatECup_);
  iVMD2jesRelativeStatECup_branch = tree->GetBranch("iVMD2jesRelativeStatECup");
  if (iVMD2jesRelativeStatECup_branch) iVMD2jesRelativeStatECup_branch->SetAddress(&iVMD2jesRelativeStatECup_);
  iVMD3jesRelativeStatECup_branch = tree->GetBranch("iVMD3jesRelativeStatECup");
  if (iVMD3jesRelativeStatECup_branch) iVMD3jesRelativeStatECup_branch->SetAddress(&iVMD3jesRelativeStatECup_);
  iVMD4jesRelativeStatECup_branch = tree->GetBranch("iVMD4jesRelativeStatECup");
  if (iVMD4jesRelativeStatECup_branch) iVMD4jesRelativeStatECup_branch->SetAddress(&iVMD4jesRelativeStatECup_);
  iWMD0jesRelativeStatECup_branch = tree->GetBranch("iWMD0jesRelativeStatECup");
  if (iWMD0jesRelativeStatECup_branch) iWMD0jesRelativeStatECup_branch->SetAddress(&iWMD0jesRelativeStatECup_);
  iWMD1jesRelativeStatECup_branch = tree->GetBranch("iWMD1jesRelativeStatECup");
  if (iWMD1jesRelativeStatECup_branch) iWMD1jesRelativeStatECup_branch->SetAddress(&iWMD1jesRelativeStatECup_);
  iWMD2jesRelativeStatECup_branch = tree->GetBranch("iWMD2jesRelativeStatECup");
  if (iWMD2jesRelativeStatECup_branch) iWMD2jesRelativeStatECup_branch->SetAddress(&iWMD2jesRelativeStatECup_);
  iWMD3jesRelativeStatECup_branch = tree->GetBranch("iWMD3jesRelativeStatECup");
  if (iWMD3jesRelativeStatECup_branch) iWMD3jesRelativeStatECup_branch->SetAddress(&iWMD3jesRelativeStatECup_);
  iWMD4jesRelativeStatECup_branch = tree->GetBranch("iWMD4jesRelativeStatECup");
  if (iWMD4jesRelativeStatECup_branch) iWMD4jesRelativeStatECup_branch->SetAddress(&iWMD4jesRelativeStatECup_);
  NJjesRelativeStatECup_branch = tree->GetBranch("NJjesRelativeStatECup");
  if (NJjesRelativeStatECup_branch) NJjesRelativeStatECup_branch->SetAddress(&NJjesRelativeStatECup_);
  NbLoosejesRelativeStatECup_branch = tree->GetBranch("NbLoosejesRelativeStatECup");
  if (NbLoosejesRelativeStatECup_branch) NbLoosejesRelativeStatECup_branch->SetAddress(&NbLoosejesRelativeStatECup_);
  NbMediumjesRelativeStatECup_branch = tree->GetBranch("NbMediumjesRelativeStatECup");
  if (NbMediumjesRelativeStatECup_branch) NbMediumjesRelativeStatECup_branch->SetAddress(&NbMediumjesRelativeStatECup_);
  NbTightjesRelativeStatECup_branch = tree->GetBranch("NbTightjesRelativeStatECup");
  if (NbTightjesRelativeStatECup_branch) NbTightjesRelativeStatECup_branch->SetAddress(&NbTightjesRelativeStatECup_);
  NoORNbLoosejesRelativeStatECup_branch = tree->GetBranch("NoORNbLoosejesRelativeStatECup");
  if (NoORNbLoosejesRelativeStatECup_branch) NoORNbLoosejesRelativeStatECup_branch->SetAddress(&NoORNbLoosejesRelativeStatECup_);
  NoORNbMediumjesRelativeStatECup_branch = tree->GetBranch("NoORNbMediumjesRelativeStatECup");
  if (NoORNbMediumjesRelativeStatECup_branch) NoORNbMediumjesRelativeStatECup_branch->SetAddress(&NoORNbMediumjesRelativeStatECup_);
  NoORNbTightjesRelativeStatECup_branch = tree->GetBranch("NoORNbTightjesRelativeStatECup");
  if (NoORNbTightjesRelativeStatECup_branch) NoORNbTightjesRelativeStatECup_branch->SetAddress(&NoORNbTightjesRelativeStatECup_);
  NQJGenjesRelativeStatECup_branch = tree->GetBranch("NQJGenjesRelativeStatECup");
  if (NQJGenjesRelativeStatECup_branch) NQJGenjesRelativeStatECup_branch->SetAddress(&NQJGenjesRelativeStatECup_);
  NBJGenjesRelativeStatECup_branch = tree->GetBranch("NBJGenjesRelativeStatECup");
  if (NBJGenjesRelativeStatECup_branch) NBJGenjesRelativeStatECup_branch->SetAddress(&NBJGenjesRelativeStatECup_);
  NLJGenjesRelativeStatECup_branch = tree->GetBranch("NLJGenjesRelativeStatECup");
  if (NLJGenjesRelativeStatECup_branch) NLJGenjesRelativeStatECup_branch->SetAddress(&NLJGenjesRelativeStatECup_);
  MVVXjesRelativeStatECup_branch = tree->GetBranch("MVVXjesRelativeStatECup");
  if (MVVXjesRelativeStatECup_branch) MVVXjesRelativeStatECup_branch->SetAddress(&MVVXjesRelativeStatECup_);
  PtVVXjesRelativeStatECup_branch = tree->GetBranch("PtVVXjesRelativeStatECup");
  if (PtVVXjesRelativeStatECup_branch) PtVVXjesRelativeStatECup_branch->SetAddress(&PtVVXjesRelativeStatECup_);
  HTjesRelativeStatECup_branch = tree->GetBranch("HTjesRelativeStatECup");
  if (HTjesRelativeStatECup_branch) HTjesRelativeStatECup_branch->SetAddress(&HTjesRelativeStatECup_);
  HTJjesRelativeStatECup_branch = tree->GetBranch("HTJjesRelativeStatECup");
  if (HTJjesRelativeStatECup_branch) HTJjesRelativeStatECup_branch->SetAddress(&HTJjesRelativeStatECup_);
  HTFJjesRelativeStatECup_branch = tree->GetBranch("HTFJjesRelativeStatECup");
  if (HTFJjesRelativeStatECup_branch) HTFJjesRelativeStatECup_branch->SetAddress(&HTFJjesRelativeStatECup_);
  SumPtFJjesRelativeStatECup_branch = tree->GetBranch("SumPtFJjesRelativeStatECup");
  if (SumPtFJjesRelativeStatECup_branch) SumPtFJjesRelativeStatECup_branch->SetAddress(&SumPtFJjesRelativeStatECup_);
  SumPtJjesRelativeStatECup_branch = tree->GetBranch("SumPtJjesRelativeStatECup");
  if (SumPtJjesRelativeStatECup_branch) SumPtJjesRelativeStatECup_branch->SetAddress(&SumPtJjesRelativeStatECup_);
  NFJjesRelativeStatECdn_branch = tree->GetBranch("NFJjesRelativeStatECdn");
  if (NFJjesRelativeStatECdn_branch) NFJjesRelativeStatECdn_branch->SetAddress(&NFJjesRelativeStatECdn_);
  VMD0jesRelativeStatECdn_branch = tree->GetBranch("VMD0jesRelativeStatECdn");
  if (VMD0jesRelativeStatECdn_branch) VMD0jesRelativeStatECdn_branch->SetAddress(&VMD0jesRelativeStatECdn_);
  VMD1jesRelativeStatECdn_branch = tree->GetBranch("VMD1jesRelativeStatECdn");
  if (VMD1jesRelativeStatECdn_branch) VMD1jesRelativeStatECdn_branch->SetAddress(&VMD1jesRelativeStatECdn_);
  VMD2jesRelativeStatECdn_branch = tree->GetBranch("VMD2jesRelativeStatECdn");
  if (VMD2jesRelativeStatECdn_branch) VMD2jesRelativeStatECdn_branch->SetAddress(&VMD2jesRelativeStatECdn_);
  VMD3jesRelativeStatECdn_branch = tree->GetBranch("VMD3jesRelativeStatECdn");
  if (VMD3jesRelativeStatECdn_branch) VMD3jesRelativeStatECdn_branch->SetAddress(&VMD3jesRelativeStatECdn_);
  VMD4jesRelativeStatECdn_branch = tree->GetBranch("VMD4jesRelativeStatECdn");
  if (VMD4jesRelativeStatECdn_branch) VMD4jesRelativeStatECdn_branch->SetAddress(&VMD4jesRelativeStatECdn_);
  WMD0jesRelativeStatECdn_branch = tree->GetBranch("WMD0jesRelativeStatECdn");
  if (WMD0jesRelativeStatECdn_branch) WMD0jesRelativeStatECdn_branch->SetAddress(&WMD0jesRelativeStatECdn_);
  WMD1jesRelativeStatECdn_branch = tree->GetBranch("WMD1jesRelativeStatECdn");
  if (WMD1jesRelativeStatECdn_branch) WMD1jesRelativeStatECdn_branch->SetAddress(&WMD1jesRelativeStatECdn_);
  WMD2jesRelativeStatECdn_branch = tree->GetBranch("WMD2jesRelativeStatECdn");
  if (WMD2jesRelativeStatECdn_branch) WMD2jesRelativeStatECdn_branch->SetAddress(&WMD2jesRelativeStatECdn_);
  WMD3jesRelativeStatECdn_branch = tree->GetBranch("WMD3jesRelativeStatECdn");
  if (WMD3jesRelativeStatECdn_branch) WMD3jesRelativeStatECdn_branch->SetAddress(&WMD3jesRelativeStatECdn_);
  WMD4jesRelativeStatECdn_branch = tree->GetBranch("WMD4jesRelativeStatECdn");
  if (WMD4jesRelativeStatECdn_branch) WMD4jesRelativeStatECdn_branch->SetAddress(&WMD4jesRelativeStatECdn_);
  NQGen0jesRelativeStatECdn_branch = tree->GetBranch("NQGen0jesRelativeStatECdn");
  if (NQGen0jesRelativeStatECdn_branch) NQGen0jesRelativeStatECdn_branch->SetAddress(&NQGen0jesRelativeStatECdn_);
  NQGen1jesRelativeStatECdn_branch = tree->GetBranch("NQGen1jesRelativeStatECdn");
  if (NQGen1jesRelativeStatECdn_branch) NQGen1jesRelativeStatECdn_branch->SetAddress(&NQGen1jesRelativeStatECdn_);
  NQGen2jesRelativeStatECdn_branch = tree->GetBranch("NQGen2jesRelativeStatECdn");
  if (NQGen2jesRelativeStatECdn_branch) NQGen2jesRelativeStatECdn_branch->SetAddress(&NQGen2jesRelativeStatECdn_);
  NQGen3jesRelativeStatECdn_branch = tree->GetBranch("NQGen3jesRelativeStatECdn");
  if (NQGen3jesRelativeStatECdn_branch) NQGen3jesRelativeStatECdn_branch->SetAddress(&NQGen3jesRelativeStatECdn_);
  NQGen4jesRelativeStatECdn_branch = tree->GetBranch("NQGen4jesRelativeStatECdn");
  if (NQGen4jesRelativeStatECdn_branch) NQGen4jesRelativeStatECdn_branch->SetAddress(&NQGen4jesRelativeStatECdn_);
  NBGen0jesRelativeStatECdn_branch = tree->GetBranch("NBGen0jesRelativeStatECdn");
  if (NBGen0jesRelativeStatECdn_branch) NBGen0jesRelativeStatECdn_branch->SetAddress(&NBGen0jesRelativeStatECdn_);
  NBGen1jesRelativeStatECdn_branch = tree->GetBranch("NBGen1jesRelativeStatECdn");
  if (NBGen1jesRelativeStatECdn_branch) NBGen1jesRelativeStatECdn_branch->SetAddress(&NBGen1jesRelativeStatECdn_);
  NBGen2jesRelativeStatECdn_branch = tree->GetBranch("NBGen2jesRelativeStatECdn");
  if (NBGen2jesRelativeStatECdn_branch) NBGen2jesRelativeStatECdn_branch->SetAddress(&NBGen2jesRelativeStatECdn_);
  NBGen3jesRelativeStatECdn_branch = tree->GetBranch("NBGen3jesRelativeStatECdn");
  if (NBGen3jesRelativeStatECdn_branch) NBGen3jesRelativeStatECdn_branch->SetAddress(&NBGen3jesRelativeStatECdn_);
  NBGen4jesRelativeStatECdn_branch = tree->GetBranch("NBGen4jesRelativeStatECdn");
  if (NBGen4jesRelativeStatECdn_branch) NBGen4jesRelativeStatECdn_branch->SetAddress(&NBGen4jesRelativeStatECdn_);
  NLGen0jesRelativeStatECdn_branch = tree->GetBranch("NLGen0jesRelativeStatECdn");
  if (NLGen0jesRelativeStatECdn_branch) NLGen0jesRelativeStatECdn_branch->SetAddress(&NLGen0jesRelativeStatECdn_);
  NLGen1jesRelativeStatECdn_branch = tree->GetBranch("NLGen1jesRelativeStatECdn");
  if (NLGen1jesRelativeStatECdn_branch) NLGen1jesRelativeStatECdn_branch->SetAddress(&NLGen1jesRelativeStatECdn_);
  NLGen2jesRelativeStatECdn_branch = tree->GetBranch("NLGen2jesRelativeStatECdn");
  if (NLGen2jesRelativeStatECdn_branch) NLGen2jesRelativeStatECdn_branch->SetAddress(&NLGen2jesRelativeStatECdn_);
  NLGen3jesRelativeStatECdn_branch = tree->GetBranch("NLGen3jesRelativeStatECdn");
  if (NLGen3jesRelativeStatECdn_branch) NLGen3jesRelativeStatECdn_branch->SetAddress(&NLGen3jesRelativeStatECdn_);
  NLGen4jesRelativeStatECdn_branch = tree->GetBranch("NLGen4jesRelativeStatECdn");
  if (NLGen4jesRelativeStatECdn_branch) NLGen4jesRelativeStatECdn_branch->SetAddress(&NLGen4jesRelativeStatECdn_);
  NVQGen0jesRelativeStatECdn_branch = tree->GetBranch("NVQGen0jesRelativeStatECdn");
  if (NVQGen0jesRelativeStatECdn_branch) NVQGen0jesRelativeStatECdn_branch->SetAddress(&NVQGen0jesRelativeStatECdn_);
  NVQGen1jesRelativeStatECdn_branch = tree->GetBranch("NVQGen1jesRelativeStatECdn");
  if (NVQGen1jesRelativeStatECdn_branch) NVQGen1jesRelativeStatECdn_branch->SetAddress(&NVQGen1jesRelativeStatECdn_);
  NVQGen2jesRelativeStatECdn_branch = tree->GetBranch("NVQGen2jesRelativeStatECdn");
  if (NVQGen2jesRelativeStatECdn_branch) NVQGen2jesRelativeStatECdn_branch->SetAddress(&NVQGen2jesRelativeStatECdn_);
  NVQGen3jesRelativeStatECdn_branch = tree->GetBranch("NVQGen3jesRelativeStatECdn");
  if (NVQGen3jesRelativeStatECdn_branch) NVQGen3jesRelativeStatECdn_branch->SetAddress(&NVQGen3jesRelativeStatECdn_);
  NVQGen4jesRelativeStatECdn_branch = tree->GetBranch("NVQGen4jesRelativeStatECdn");
  if (NVQGen4jesRelativeStatECdn_branch) NVQGen4jesRelativeStatECdn_branch->SetAddress(&NVQGen4jesRelativeStatECdn_);
  NiFJjesRelativeStatECdn_branch = tree->GetBranch("NiFJjesRelativeStatECdn");
  if (NiFJjesRelativeStatECdn_branch) NiFJjesRelativeStatECdn_branch->SetAddress(&NiFJjesRelativeStatECdn_);
  iVMD0jesRelativeStatECdn_branch = tree->GetBranch("iVMD0jesRelativeStatECdn");
  if (iVMD0jesRelativeStatECdn_branch) iVMD0jesRelativeStatECdn_branch->SetAddress(&iVMD0jesRelativeStatECdn_);
  iVMD1jesRelativeStatECdn_branch = tree->GetBranch("iVMD1jesRelativeStatECdn");
  if (iVMD1jesRelativeStatECdn_branch) iVMD1jesRelativeStatECdn_branch->SetAddress(&iVMD1jesRelativeStatECdn_);
  iVMD2jesRelativeStatECdn_branch = tree->GetBranch("iVMD2jesRelativeStatECdn");
  if (iVMD2jesRelativeStatECdn_branch) iVMD2jesRelativeStatECdn_branch->SetAddress(&iVMD2jesRelativeStatECdn_);
  iVMD3jesRelativeStatECdn_branch = tree->GetBranch("iVMD3jesRelativeStatECdn");
  if (iVMD3jesRelativeStatECdn_branch) iVMD3jesRelativeStatECdn_branch->SetAddress(&iVMD3jesRelativeStatECdn_);
  iVMD4jesRelativeStatECdn_branch = tree->GetBranch("iVMD4jesRelativeStatECdn");
  if (iVMD4jesRelativeStatECdn_branch) iVMD4jesRelativeStatECdn_branch->SetAddress(&iVMD4jesRelativeStatECdn_);
  iWMD0jesRelativeStatECdn_branch = tree->GetBranch("iWMD0jesRelativeStatECdn");
  if (iWMD0jesRelativeStatECdn_branch) iWMD0jesRelativeStatECdn_branch->SetAddress(&iWMD0jesRelativeStatECdn_);
  iWMD1jesRelativeStatECdn_branch = tree->GetBranch("iWMD1jesRelativeStatECdn");
  if (iWMD1jesRelativeStatECdn_branch) iWMD1jesRelativeStatECdn_branch->SetAddress(&iWMD1jesRelativeStatECdn_);
  iWMD2jesRelativeStatECdn_branch = tree->GetBranch("iWMD2jesRelativeStatECdn");
  if (iWMD2jesRelativeStatECdn_branch) iWMD2jesRelativeStatECdn_branch->SetAddress(&iWMD2jesRelativeStatECdn_);
  iWMD3jesRelativeStatECdn_branch = tree->GetBranch("iWMD3jesRelativeStatECdn");
  if (iWMD3jesRelativeStatECdn_branch) iWMD3jesRelativeStatECdn_branch->SetAddress(&iWMD3jesRelativeStatECdn_);
  iWMD4jesRelativeStatECdn_branch = tree->GetBranch("iWMD4jesRelativeStatECdn");
  if (iWMD4jesRelativeStatECdn_branch) iWMD4jesRelativeStatECdn_branch->SetAddress(&iWMD4jesRelativeStatECdn_);
  NJjesRelativeStatECdn_branch = tree->GetBranch("NJjesRelativeStatECdn");
  if (NJjesRelativeStatECdn_branch) NJjesRelativeStatECdn_branch->SetAddress(&NJjesRelativeStatECdn_);
  NbLoosejesRelativeStatECdn_branch = tree->GetBranch("NbLoosejesRelativeStatECdn");
  if (NbLoosejesRelativeStatECdn_branch) NbLoosejesRelativeStatECdn_branch->SetAddress(&NbLoosejesRelativeStatECdn_);
  NbMediumjesRelativeStatECdn_branch = tree->GetBranch("NbMediumjesRelativeStatECdn");
  if (NbMediumjesRelativeStatECdn_branch) NbMediumjesRelativeStatECdn_branch->SetAddress(&NbMediumjesRelativeStatECdn_);
  NbTightjesRelativeStatECdn_branch = tree->GetBranch("NbTightjesRelativeStatECdn");
  if (NbTightjesRelativeStatECdn_branch) NbTightjesRelativeStatECdn_branch->SetAddress(&NbTightjesRelativeStatECdn_);
  NoORNbLoosejesRelativeStatECdn_branch = tree->GetBranch("NoORNbLoosejesRelativeStatECdn");
  if (NoORNbLoosejesRelativeStatECdn_branch) NoORNbLoosejesRelativeStatECdn_branch->SetAddress(&NoORNbLoosejesRelativeStatECdn_);
  NoORNbMediumjesRelativeStatECdn_branch = tree->GetBranch("NoORNbMediumjesRelativeStatECdn");
  if (NoORNbMediumjesRelativeStatECdn_branch) NoORNbMediumjesRelativeStatECdn_branch->SetAddress(&NoORNbMediumjesRelativeStatECdn_);
  NoORNbTightjesRelativeStatECdn_branch = tree->GetBranch("NoORNbTightjesRelativeStatECdn");
  if (NoORNbTightjesRelativeStatECdn_branch) NoORNbTightjesRelativeStatECdn_branch->SetAddress(&NoORNbTightjesRelativeStatECdn_);
  NQJGenjesRelativeStatECdn_branch = tree->GetBranch("NQJGenjesRelativeStatECdn");
  if (NQJGenjesRelativeStatECdn_branch) NQJGenjesRelativeStatECdn_branch->SetAddress(&NQJGenjesRelativeStatECdn_);
  NBJGenjesRelativeStatECdn_branch = tree->GetBranch("NBJGenjesRelativeStatECdn");
  if (NBJGenjesRelativeStatECdn_branch) NBJGenjesRelativeStatECdn_branch->SetAddress(&NBJGenjesRelativeStatECdn_);
  NLJGenjesRelativeStatECdn_branch = tree->GetBranch("NLJGenjesRelativeStatECdn");
  if (NLJGenjesRelativeStatECdn_branch) NLJGenjesRelativeStatECdn_branch->SetAddress(&NLJGenjesRelativeStatECdn_);
  MVVXjesRelativeStatECdn_branch = tree->GetBranch("MVVXjesRelativeStatECdn");
  if (MVVXjesRelativeStatECdn_branch) MVVXjesRelativeStatECdn_branch->SetAddress(&MVVXjesRelativeStatECdn_);
  PtVVXjesRelativeStatECdn_branch = tree->GetBranch("PtVVXjesRelativeStatECdn");
  if (PtVVXjesRelativeStatECdn_branch) PtVVXjesRelativeStatECdn_branch->SetAddress(&PtVVXjesRelativeStatECdn_);
  HTjesRelativeStatECdn_branch = tree->GetBranch("HTjesRelativeStatECdn");
  if (HTjesRelativeStatECdn_branch) HTjesRelativeStatECdn_branch->SetAddress(&HTjesRelativeStatECdn_);
  HTJjesRelativeStatECdn_branch = tree->GetBranch("HTJjesRelativeStatECdn");
  if (HTJjesRelativeStatECdn_branch) HTJjesRelativeStatECdn_branch->SetAddress(&HTJjesRelativeStatECdn_);
  HTFJjesRelativeStatECdn_branch = tree->GetBranch("HTFJjesRelativeStatECdn");
  if (HTFJjesRelativeStatECdn_branch) HTFJjesRelativeStatECdn_branch->SetAddress(&HTFJjesRelativeStatECdn_);
  SumPtFJjesRelativeStatECdn_branch = tree->GetBranch("SumPtFJjesRelativeStatECdn");
  if (SumPtFJjesRelativeStatECdn_branch) SumPtFJjesRelativeStatECdn_branch->SetAddress(&SumPtFJjesRelativeStatECdn_);
  SumPtJjesRelativeStatECdn_branch = tree->GetBranch("SumPtJjesRelativeStatECdn");
  if (SumPtJjesRelativeStatECdn_branch) SumPtJjesRelativeStatECdn_branch->SetAddress(&SumPtJjesRelativeStatECdn_);
  NFJjesRelativeStatHFup_branch = tree->GetBranch("NFJjesRelativeStatHFup");
  if (NFJjesRelativeStatHFup_branch) NFJjesRelativeStatHFup_branch->SetAddress(&NFJjesRelativeStatHFup_);
  VMD0jesRelativeStatHFup_branch = tree->GetBranch("VMD0jesRelativeStatHFup");
  if (VMD0jesRelativeStatHFup_branch) VMD0jesRelativeStatHFup_branch->SetAddress(&VMD0jesRelativeStatHFup_);
  VMD1jesRelativeStatHFup_branch = tree->GetBranch("VMD1jesRelativeStatHFup");
  if (VMD1jesRelativeStatHFup_branch) VMD1jesRelativeStatHFup_branch->SetAddress(&VMD1jesRelativeStatHFup_);
  VMD2jesRelativeStatHFup_branch = tree->GetBranch("VMD2jesRelativeStatHFup");
  if (VMD2jesRelativeStatHFup_branch) VMD2jesRelativeStatHFup_branch->SetAddress(&VMD2jesRelativeStatHFup_);
  VMD3jesRelativeStatHFup_branch = tree->GetBranch("VMD3jesRelativeStatHFup");
  if (VMD3jesRelativeStatHFup_branch) VMD3jesRelativeStatHFup_branch->SetAddress(&VMD3jesRelativeStatHFup_);
  VMD4jesRelativeStatHFup_branch = tree->GetBranch("VMD4jesRelativeStatHFup");
  if (VMD4jesRelativeStatHFup_branch) VMD4jesRelativeStatHFup_branch->SetAddress(&VMD4jesRelativeStatHFup_);
  WMD0jesRelativeStatHFup_branch = tree->GetBranch("WMD0jesRelativeStatHFup");
  if (WMD0jesRelativeStatHFup_branch) WMD0jesRelativeStatHFup_branch->SetAddress(&WMD0jesRelativeStatHFup_);
  WMD1jesRelativeStatHFup_branch = tree->GetBranch("WMD1jesRelativeStatHFup");
  if (WMD1jesRelativeStatHFup_branch) WMD1jesRelativeStatHFup_branch->SetAddress(&WMD1jesRelativeStatHFup_);
  WMD2jesRelativeStatHFup_branch = tree->GetBranch("WMD2jesRelativeStatHFup");
  if (WMD2jesRelativeStatHFup_branch) WMD2jesRelativeStatHFup_branch->SetAddress(&WMD2jesRelativeStatHFup_);
  WMD3jesRelativeStatHFup_branch = tree->GetBranch("WMD3jesRelativeStatHFup");
  if (WMD3jesRelativeStatHFup_branch) WMD3jesRelativeStatHFup_branch->SetAddress(&WMD3jesRelativeStatHFup_);
  WMD4jesRelativeStatHFup_branch = tree->GetBranch("WMD4jesRelativeStatHFup");
  if (WMD4jesRelativeStatHFup_branch) WMD4jesRelativeStatHFup_branch->SetAddress(&WMD4jesRelativeStatHFup_);
  NQGen0jesRelativeStatHFup_branch = tree->GetBranch("NQGen0jesRelativeStatHFup");
  if (NQGen0jesRelativeStatHFup_branch) NQGen0jesRelativeStatHFup_branch->SetAddress(&NQGen0jesRelativeStatHFup_);
  NQGen1jesRelativeStatHFup_branch = tree->GetBranch("NQGen1jesRelativeStatHFup");
  if (NQGen1jesRelativeStatHFup_branch) NQGen1jesRelativeStatHFup_branch->SetAddress(&NQGen1jesRelativeStatHFup_);
  NQGen2jesRelativeStatHFup_branch = tree->GetBranch("NQGen2jesRelativeStatHFup");
  if (NQGen2jesRelativeStatHFup_branch) NQGen2jesRelativeStatHFup_branch->SetAddress(&NQGen2jesRelativeStatHFup_);
  NQGen3jesRelativeStatHFup_branch = tree->GetBranch("NQGen3jesRelativeStatHFup");
  if (NQGen3jesRelativeStatHFup_branch) NQGen3jesRelativeStatHFup_branch->SetAddress(&NQGen3jesRelativeStatHFup_);
  NQGen4jesRelativeStatHFup_branch = tree->GetBranch("NQGen4jesRelativeStatHFup");
  if (NQGen4jesRelativeStatHFup_branch) NQGen4jesRelativeStatHFup_branch->SetAddress(&NQGen4jesRelativeStatHFup_);
  NBGen0jesRelativeStatHFup_branch = tree->GetBranch("NBGen0jesRelativeStatHFup");
  if (NBGen0jesRelativeStatHFup_branch) NBGen0jesRelativeStatHFup_branch->SetAddress(&NBGen0jesRelativeStatHFup_);
  NBGen1jesRelativeStatHFup_branch = tree->GetBranch("NBGen1jesRelativeStatHFup");
  if (NBGen1jesRelativeStatHFup_branch) NBGen1jesRelativeStatHFup_branch->SetAddress(&NBGen1jesRelativeStatHFup_);
  NBGen2jesRelativeStatHFup_branch = tree->GetBranch("NBGen2jesRelativeStatHFup");
  if (NBGen2jesRelativeStatHFup_branch) NBGen2jesRelativeStatHFup_branch->SetAddress(&NBGen2jesRelativeStatHFup_);
  NBGen3jesRelativeStatHFup_branch = tree->GetBranch("NBGen3jesRelativeStatHFup");
  if (NBGen3jesRelativeStatHFup_branch) NBGen3jesRelativeStatHFup_branch->SetAddress(&NBGen3jesRelativeStatHFup_);
  NBGen4jesRelativeStatHFup_branch = tree->GetBranch("NBGen4jesRelativeStatHFup");
  if (NBGen4jesRelativeStatHFup_branch) NBGen4jesRelativeStatHFup_branch->SetAddress(&NBGen4jesRelativeStatHFup_);
  NLGen0jesRelativeStatHFup_branch = tree->GetBranch("NLGen0jesRelativeStatHFup");
  if (NLGen0jesRelativeStatHFup_branch) NLGen0jesRelativeStatHFup_branch->SetAddress(&NLGen0jesRelativeStatHFup_);
  NLGen1jesRelativeStatHFup_branch = tree->GetBranch("NLGen1jesRelativeStatHFup");
  if (NLGen1jesRelativeStatHFup_branch) NLGen1jesRelativeStatHFup_branch->SetAddress(&NLGen1jesRelativeStatHFup_);
  NLGen2jesRelativeStatHFup_branch = tree->GetBranch("NLGen2jesRelativeStatHFup");
  if (NLGen2jesRelativeStatHFup_branch) NLGen2jesRelativeStatHFup_branch->SetAddress(&NLGen2jesRelativeStatHFup_);
  NLGen3jesRelativeStatHFup_branch = tree->GetBranch("NLGen3jesRelativeStatHFup");
  if (NLGen3jesRelativeStatHFup_branch) NLGen3jesRelativeStatHFup_branch->SetAddress(&NLGen3jesRelativeStatHFup_);
  NLGen4jesRelativeStatHFup_branch = tree->GetBranch("NLGen4jesRelativeStatHFup");
  if (NLGen4jesRelativeStatHFup_branch) NLGen4jesRelativeStatHFup_branch->SetAddress(&NLGen4jesRelativeStatHFup_);
  NVQGen0jesRelativeStatHFup_branch = tree->GetBranch("NVQGen0jesRelativeStatHFup");
  if (NVQGen0jesRelativeStatHFup_branch) NVQGen0jesRelativeStatHFup_branch->SetAddress(&NVQGen0jesRelativeStatHFup_);
  NVQGen1jesRelativeStatHFup_branch = tree->GetBranch("NVQGen1jesRelativeStatHFup");
  if (NVQGen1jesRelativeStatHFup_branch) NVQGen1jesRelativeStatHFup_branch->SetAddress(&NVQGen1jesRelativeStatHFup_);
  NVQGen2jesRelativeStatHFup_branch = tree->GetBranch("NVQGen2jesRelativeStatHFup");
  if (NVQGen2jesRelativeStatHFup_branch) NVQGen2jesRelativeStatHFup_branch->SetAddress(&NVQGen2jesRelativeStatHFup_);
  NVQGen3jesRelativeStatHFup_branch = tree->GetBranch("NVQGen3jesRelativeStatHFup");
  if (NVQGen3jesRelativeStatHFup_branch) NVQGen3jesRelativeStatHFup_branch->SetAddress(&NVQGen3jesRelativeStatHFup_);
  NVQGen4jesRelativeStatHFup_branch = tree->GetBranch("NVQGen4jesRelativeStatHFup");
  if (NVQGen4jesRelativeStatHFup_branch) NVQGen4jesRelativeStatHFup_branch->SetAddress(&NVQGen4jesRelativeStatHFup_);
  NiFJjesRelativeStatHFup_branch = tree->GetBranch("NiFJjesRelativeStatHFup");
  if (NiFJjesRelativeStatHFup_branch) NiFJjesRelativeStatHFup_branch->SetAddress(&NiFJjesRelativeStatHFup_);
  iVMD0jesRelativeStatHFup_branch = tree->GetBranch("iVMD0jesRelativeStatHFup");
  if (iVMD0jesRelativeStatHFup_branch) iVMD0jesRelativeStatHFup_branch->SetAddress(&iVMD0jesRelativeStatHFup_);
  iVMD1jesRelativeStatHFup_branch = tree->GetBranch("iVMD1jesRelativeStatHFup");
  if (iVMD1jesRelativeStatHFup_branch) iVMD1jesRelativeStatHFup_branch->SetAddress(&iVMD1jesRelativeStatHFup_);
  iVMD2jesRelativeStatHFup_branch = tree->GetBranch("iVMD2jesRelativeStatHFup");
  if (iVMD2jesRelativeStatHFup_branch) iVMD2jesRelativeStatHFup_branch->SetAddress(&iVMD2jesRelativeStatHFup_);
  iVMD3jesRelativeStatHFup_branch = tree->GetBranch("iVMD3jesRelativeStatHFup");
  if (iVMD3jesRelativeStatHFup_branch) iVMD3jesRelativeStatHFup_branch->SetAddress(&iVMD3jesRelativeStatHFup_);
  iVMD4jesRelativeStatHFup_branch = tree->GetBranch("iVMD4jesRelativeStatHFup");
  if (iVMD4jesRelativeStatHFup_branch) iVMD4jesRelativeStatHFup_branch->SetAddress(&iVMD4jesRelativeStatHFup_);
  iWMD0jesRelativeStatHFup_branch = tree->GetBranch("iWMD0jesRelativeStatHFup");
  if (iWMD0jesRelativeStatHFup_branch) iWMD0jesRelativeStatHFup_branch->SetAddress(&iWMD0jesRelativeStatHFup_);
  iWMD1jesRelativeStatHFup_branch = tree->GetBranch("iWMD1jesRelativeStatHFup");
  if (iWMD1jesRelativeStatHFup_branch) iWMD1jesRelativeStatHFup_branch->SetAddress(&iWMD1jesRelativeStatHFup_);
  iWMD2jesRelativeStatHFup_branch = tree->GetBranch("iWMD2jesRelativeStatHFup");
  if (iWMD2jesRelativeStatHFup_branch) iWMD2jesRelativeStatHFup_branch->SetAddress(&iWMD2jesRelativeStatHFup_);
  iWMD3jesRelativeStatHFup_branch = tree->GetBranch("iWMD3jesRelativeStatHFup");
  if (iWMD3jesRelativeStatHFup_branch) iWMD3jesRelativeStatHFup_branch->SetAddress(&iWMD3jesRelativeStatHFup_);
  iWMD4jesRelativeStatHFup_branch = tree->GetBranch("iWMD4jesRelativeStatHFup");
  if (iWMD4jesRelativeStatHFup_branch) iWMD4jesRelativeStatHFup_branch->SetAddress(&iWMD4jesRelativeStatHFup_);
  NJjesRelativeStatHFup_branch = tree->GetBranch("NJjesRelativeStatHFup");
  if (NJjesRelativeStatHFup_branch) NJjesRelativeStatHFup_branch->SetAddress(&NJjesRelativeStatHFup_);
  NbLoosejesRelativeStatHFup_branch = tree->GetBranch("NbLoosejesRelativeStatHFup");
  if (NbLoosejesRelativeStatHFup_branch) NbLoosejesRelativeStatHFup_branch->SetAddress(&NbLoosejesRelativeStatHFup_);
  NbMediumjesRelativeStatHFup_branch = tree->GetBranch("NbMediumjesRelativeStatHFup");
  if (NbMediumjesRelativeStatHFup_branch) NbMediumjesRelativeStatHFup_branch->SetAddress(&NbMediumjesRelativeStatHFup_);
  NbTightjesRelativeStatHFup_branch = tree->GetBranch("NbTightjesRelativeStatHFup");
  if (NbTightjesRelativeStatHFup_branch) NbTightjesRelativeStatHFup_branch->SetAddress(&NbTightjesRelativeStatHFup_);
  NoORNbLoosejesRelativeStatHFup_branch = tree->GetBranch("NoORNbLoosejesRelativeStatHFup");
  if (NoORNbLoosejesRelativeStatHFup_branch) NoORNbLoosejesRelativeStatHFup_branch->SetAddress(&NoORNbLoosejesRelativeStatHFup_);
  NoORNbMediumjesRelativeStatHFup_branch = tree->GetBranch("NoORNbMediumjesRelativeStatHFup");
  if (NoORNbMediumjesRelativeStatHFup_branch) NoORNbMediumjesRelativeStatHFup_branch->SetAddress(&NoORNbMediumjesRelativeStatHFup_);
  NoORNbTightjesRelativeStatHFup_branch = tree->GetBranch("NoORNbTightjesRelativeStatHFup");
  if (NoORNbTightjesRelativeStatHFup_branch) NoORNbTightjesRelativeStatHFup_branch->SetAddress(&NoORNbTightjesRelativeStatHFup_);
  NQJGenjesRelativeStatHFup_branch = tree->GetBranch("NQJGenjesRelativeStatHFup");
  if (NQJGenjesRelativeStatHFup_branch) NQJGenjesRelativeStatHFup_branch->SetAddress(&NQJGenjesRelativeStatHFup_);
  NBJGenjesRelativeStatHFup_branch = tree->GetBranch("NBJGenjesRelativeStatHFup");
  if (NBJGenjesRelativeStatHFup_branch) NBJGenjesRelativeStatHFup_branch->SetAddress(&NBJGenjesRelativeStatHFup_);
  NLJGenjesRelativeStatHFup_branch = tree->GetBranch("NLJGenjesRelativeStatHFup");
  if (NLJGenjesRelativeStatHFup_branch) NLJGenjesRelativeStatHFup_branch->SetAddress(&NLJGenjesRelativeStatHFup_);
  MVVXjesRelativeStatHFup_branch = tree->GetBranch("MVVXjesRelativeStatHFup");
  if (MVVXjesRelativeStatHFup_branch) MVVXjesRelativeStatHFup_branch->SetAddress(&MVVXjesRelativeStatHFup_);
  PtVVXjesRelativeStatHFup_branch = tree->GetBranch("PtVVXjesRelativeStatHFup");
  if (PtVVXjesRelativeStatHFup_branch) PtVVXjesRelativeStatHFup_branch->SetAddress(&PtVVXjesRelativeStatHFup_);
  HTjesRelativeStatHFup_branch = tree->GetBranch("HTjesRelativeStatHFup");
  if (HTjesRelativeStatHFup_branch) HTjesRelativeStatHFup_branch->SetAddress(&HTjesRelativeStatHFup_);
  HTJjesRelativeStatHFup_branch = tree->GetBranch("HTJjesRelativeStatHFup");
  if (HTJjesRelativeStatHFup_branch) HTJjesRelativeStatHFup_branch->SetAddress(&HTJjesRelativeStatHFup_);
  HTFJjesRelativeStatHFup_branch = tree->GetBranch("HTFJjesRelativeStatHFup");
  if (HTFJjesRelativeStatHFup_branch) HTFJjesRelativeStatHFup_branch->SetAddress(&HTFJjesRelativeStatHFup_);
  SumPtFJjesRelativeStatHFup_branch = tree->GetBranch("SumPtFJjesRelativeStatHFup");
  if (SumPtFJjesRelativeStatHFup_branch) SumPtFJjesRelativeStatHFup_branch->SetAddress(&SumPtFJjesRelativeStatHFup_);
  SumPtJjesRelativeStatHFup_branch = tree->GetBranch("SumPtJjesRelativeStatHFup");
  if (SumPtJjesRelativeStatHFup_branch) SumPtJjesRelativeStatHFup_branch->SetAddress(&SumPtJjesRelativeStatHFup_);
  NFJjesRelativeStatHFdn_branch = tree->GetBranch("NFJjesRelativeStatHFdn");
  if (NFJjesRelativeStatHFdn_branch) NFJjesRelativeStatHFdn_branch->SetAddress(&NFJjesRelativeStatHFdn_);
  VMD0jesRelativeStatHFdn_branch = tree->GetBranch("VMD0jesRelativeStatHFdn");
  if (VMD0jesRelativeStatHFdn_branch) VMD0jesRelativeStatHFdn_branch->SetAddress(&VMD0jesRelativeStatHFdn_);
  VMD1jesRelativeStatHFdn_branch = tree->GetBranch("VMD1jesRelativeStatHFdn");
  if (VMD1jesRelativeStatHFdn_branch) VMD1jesRelativeStatHFdn_branch->SetAddress(&VMD1jesRelativeStatHFdn_);
  VMD2jesRelativeStatHFdn_branch = tree->GetBranch("VMD2jesRelativeStatHFdn");
  if (VMD2jesRelativeStatHFdn_branch) VMD2jesRelativeStatHFdn_branch->SetAddress(&VMD2jesRelativeStatHFdn_);
  VMD3jesRelativeStatHFdn_branch = tree->GetBranch("VMD3jesRelativeStatHFdn");
  if (VMD3jesRelativeStatHFdn_branch) VMD3jesRelativeStatHFdn_branch->SetAddress(&VMD3jesRelativeStatHFdn_);
  VMD4jesRelativeStatHFdn_branch = tree->GetBranch("VMD4jesRelativeStatHFdn");
  if (VMD4jesRelativeStatHFdn_branch) VMD4jesRelativeStatHFdn_branch->SetAddress(&VMD4jesRelativeStatHFdn_);
  WMD0jesRelativeStatHFdn_branch = tree->GetBranch("WMD0jesRelativeStatHFdn");
  if (WMD0jesRelativeStatHFdn_branch) WMD0jesRelativeStatHFdn_branch->SetAddress(&WMD0jesRelativeStatHFdn_);
  WMD1jesRelativeStatHFdn_branch = tree->GetBranch("WMD1jesRelativeStatHFdn");
  if (WMD1jesRelativeStatHFdn_branch) WMD1jesRelativeStatHFdn_branch->SetAddress(&WMD1jesRelativeStatHFdn_);
  WMD2jesRelativeStatHFdn_branch = tree->GetBranch("WMD2jesRelativeStatHFdn");
  if (WMD2jesRelativeStatHFdn_branch) WMD2jesRelativeStatHFdn_branch->SetAddress(&WMD2jesRelativeStatHFdn_);
  WMD3jesRelativeStatHFdn_branch = tree->GetBranch("WMD3jesRelativeStatHFdn");
  if (WMD3jesRelativeStatHFdn_branch) WMD3jesRelativeStatHFdn_branch->SetAddress(&WMD3jesRelativeStatHFdn_);
  WMD4jesRelativeStatHFdn_branch = tree->GetBranch("WMD4jesRelativeStatHFdn");
  if (WMD4jesRelativeStatHFdn_branch) WMD4jesRelativeStatHFdn_branch->SetAddress(&WMD4jesRelativeStatHFdn_);
  NQGen0jesRelativeStatHFdn_branch = tree->GetBranch("NQGen0jesRelativeStatHFdn");
  if (NQGen0jesRelativeStatHFdn_branch) NQGen0jesRelativeStatHFdn_branch->SetAddress(&NQGen0jesRelativeStatHFdn_);
  NQGen1jesRelativeStatHFdn_branch = tree->GetBranch("NQGen1jesRelativeStatHFdn");
  if (NQGen1jesRelativeStatHFdn_branch) NQGen1jesRelativeStatHFdn_branch->SetAddress(&NQGen1jesRelativeStatHFdn_);
  NQGen2jesRelativeStatHFdn_branch = tree->GetBranch("NQGen2jesRelativeStatHFdn");
  if (NQGen2jesRelativeStatHFdn_branch) NQGen2jesRelativeStatHFdn_branch->SetAddress(&NQGen2jesRelativeStatHFdn_);
  NQGen3jesRelativeStatHFdn_branch = tree->GetBranch("NQGen3jesRelativeStatHFdn");
  if (NQGen3jesRelativeStatHFdn_branch) NQGen3jesRelativeStatHFdn_branch->SetAddress(&NQGen3jesRelativeStatHFdn_);
  NQGen4jesRelativeStatHFdn_branch = tree->GetBranch("NQGen4jesRelativeStatHFdn");
  if (NQGen4jesRelativeStatHFdn_branch) NQGen4jesRelativeStatHFdn_branch->SetAddress(&NQGen4jesRelativeStatHFdn_);
  NBGen0jesRelativeStatHFdn_branch = tree->GetBranch("NBGen0jesRelativeStatHFdn");
  if (NBGen0jesRelativeStatHFdn_branch) NBGen0jesRelativeStatHFdn_branch->SetAddress(&NBGen0jesRelativeStatHFdn_);
  NBGen1jesRelativeStatHFdn_branch = tree->GetBranch("NBGen1jesRelativeStatHFdn");
  if (NBGen1jesRelativeStatHFdn_branch) NBGen1jesRelativeStatHFdn_branch->SetAddress(&NBGen1jesRelativeStatHFdn_);
  NBGen2jesRelativeStatHFdn_branch = tree->GetBranch("NBGen2jesRelativeStatHFdn");
  if (NBGen2jesRelativeStatHFdn_branch) NBGen2jesRelativeStatHFdn_branch->SetAddress(&NBGen2jesRelativeStatHFdn_);
  NBGen3jesRelativeStatHFdn_branch = tree->GetBranch("NBGen3jesRelativeStatHFdn");
  if (NBGen3jesRelativeStatHFdn_branch) NBGen3jesRelativeStatHFdn_branch->SetAddress(&NBGen3jesRelativeStatHFdn_);
  NBGen4jesRelativeStatHFdn_branch = tree->GetBranch("NBGen4jesRelativeStatHFdn");
  if (NBGen4jesRelativeStatHFdn_branch) NBGen4jesRelativeStatHFdn_branch->SetAddress(&NBGen4jesRelativeStatHFdn_);
  NLGen0jesRelativeStatHFdn_branch = tree->GetBranch("NLGen0jesRelativeStatHFdn");
  if (NLGen0jesRelativeStatHFdn_branch) NLGen0jesRelativeStatHFdn_branch->SetAddress(&NLGen0jesRelativeStatHFdn_);
  NLGen1jesRelativeStatHFdn_branch = tree->GetBranch("NLGen1jesRelativeStatHFdn");
  if (NLGen1jesRelativeStatHFdn_branch) NLGen1jesRelativeStatHFdn_branch->SetAddress(&NLGen1jesRelativeStatHFdn_);
  NLGen2jesRelativeStatHFdn_branch = tree->GetBranch("NLGen2jesRelativeStatHFdn");
  if (NLGen2jesRelativeStatHFdn_branch) NLGen2jesRelativeStatHFdn_branch->SetAddress(&NLGen2jesRelativeStatHFdn_);
  NLGen3jesRelativeStatHFdn_branch = tree->GetBranch("NLGen3jesRelativeStatHFdn");
  if (NLGen3jesRelativeStatHFdn_branch) NLGen3jesRelativeStatHFdn_branch->SetAddress(&NLGen3jesRelativeStatHFdn_);
  NLGen4jesRelativeStatHFdn_branch = tree->GetBranch("NLGen4jesRelativeStatHFdn");
  if (NLGen4jesRelativeStatHFdn_branch) NLGen4jesRelativeStatHFdn_branch->SetAddress(&NLGen4jesRelativeStatHFdn_);
  NVQGen0jesRelativeStatHFdn_branch = tree->GetBranch("NVQGen0jesRelativeStatHFdn");
  if (NVQGen0jesRelativeStatHFdn_branch) NVQGen0jesRelativeStatHFdn_branch->SetAddress(&NVQGen0jesRelativeStatHFdn_);
  NVQGen1jesRelativeStatHFdn_branch = tree->GetBranch("NVQGen1jesRelativeStatHFdn");
  if (NVQGen1jesRelativeStatHFdn_branch) NVQGen1jesRelativeStatHFdn_branch->SetAddress(&NVQGen1jesRelativeStatHFdn_);
  NVQGen2jesRelativeStatHFdn_branch = tree->GetBranch("NVQGen2jesRelativeStatHFdn");
  if (NVQGen2jesRelativeStatHFdn_branch) NVQGen2jesRelativeStatHFdn_branch->SetAddress(&NVQGen2jesRelativeStatHFdn_);
  NVQGen3jesRelativeStatHFdn_branch = tree->GetBranch("NVQGen3jesRelativeStatHFdn");
  if (NVQGen3jesRelativeStatHFdn_branch) NVQGen3jesRelativeStatHFdn_branch->SetAddress(&NVQGen3jesRelativeStatHFdn_);
  NVQGen4jesRelativeStatHFdn_branch = tree->GetBranch("NVQGen4jesRelativeStatHFdn");
  if (NVQGen4jesRelativeStatHFdn_branch) NVQGen4jesRelativeStatHFdn_branch->SetAddress(&NVQGen4jesRelativeStatHFdn_);
  NiFJjesRelativeStatHFdn_branch = tree->GetBranch("NiFJjesRelativeStatHFdn");
  if (NiFJjesRelativeStatHFdn_branch) NiFJjesRelativeStatHFdn_branch->SetAddress(&NiFJjesRelativeStatHFdn_);
  iVMD0jesRelativeStatHFdn_branch = tree->GetBranch("iVMD0jesRelativeStatHFdn");
  if (iVMD0jesRelativeStatHFdn_branch) iVMD0jesRelativeStatHFdn_branch->SetAddress(&iVMD0jesRelativeStatHFdn_);
  iVMD1jesRelativeStatHFdn_branch = tree->GetBranch("iVMD1jesRelativeStatHFdn");
  if (iVMD1jesRelativeStatHFdn_branch) iVMD1jesRelativeStatHFdn_branch->SetAddress(&iVMD1jesRelativeStatHFdn_);
  iVMD2jesRelativeStatHFdn_branch = tree->GetBranch("iVMD2jesRelativeStatHFdn");
  if (iVMD2jesRelativeStatHFdn_branch) iVMD2jesRelativeStatHFdn_branch->SetAddress(&iVMD2jesRelativeStatHFdn_);
  iVMD3jesRelativeStatHFdn_branch = tree->GetBranch("iVMD3jesRelativeStatHFdn");
  if (iVMD3jesRelativeStatHFdn_branch) iVMD3jesRelativeStatHFdn_branch->SetAddress(&iVMD3jesRelativeStatHFdn_);
  iVMD4jesRelativeStatHFdn_branch = tree->GetBranch("iVMD4jesRelativeStatHFdn");
  if (iVMD4jesRelativeStatHFdn_branch) iVMD4jesRelativeStatHFdn_branch->SetAddress(&iVMD4jesRelativeStatHFdn_);
  iWMD0jesRelativeStatHFdn_branch = tree->GetBranch("iWMD0jesRelativeStatHFdn");
  if (iWMD0jesRelativeStatHFdn_branch) iWMD0jesRelativeStatHFdn_branch->SetAddress(&iWMD0jesRelativeStatHFdn_);
  iWMD1jesRelativeStatHFdn_branch = tree->GetBranch("iWMD1jesRelativeStatHFdn");
  if (iWMD1jesRelativeStatHFdn_branch) iWMD1jesRelativeStatHFdn_branch->SetAddress(&iWMD1jesRelativeStatHFdn_);
  iWMD2jesRelativeStatHFdn_branch = tree->GetBranch("iWMD2jesRelativeStatHFdn");
  if (iWMD2jesRelativeStatHFdn_branch) iWMD2jesRelativeStatHFdn_branch->SetAddress(&iWMD2jesRelativeStatHFdn_);
  iWMD3jesRelativeStatHFdn_branch = tree->GetBranch("iWMD3jesRelativeStatHFdn");
  if (iWMD3jesRelativeStatHFdn_branch) iWMD3jesRelativeStatHFdn_branch->SetAddress(&iWMD3jesRelativeStatHFdn_);
  iWMD4jesRelativeStatHFdn_branch = tree->GetBranch("iWMD4jesRelativeStatHFdn");
  if (iWMD4jesRelativeStatHFdn_branch) iWMD4jesRelativeStatHFdn_branch->SetAddress(&iWMD4jesRelativeStatHFdn_);
  NJjesRelativeStatHFdn_branch = tree->GetBranch("NJjesRelativeStatHFdn");
  if (NJjesRelativeStatHFdn_branch) NJjesRelativeStatHFdn_branch->SetAddress(&NJjesRelativeStatHFdn_);
  NbLoosejesRelativeStatHFdn_branch = tree->GetBranch("NbLoosejesRelativeStatHFdn");
  if (NbLoosejesRelativeStatHFdn_branch) NbLoosejesRelativeStatHFdn_branch->SetAddress(&NbLoosejesRelativeStatHFdn_);
  NbMediumjesRelativeStatHFdn_branch = tree->GetBranch("NbMediumjesRelativeStatHFdn");
  if (NbMediumjesRelativeStatHFdn_branch) NbMediumjesRelativeStatHFdn_branch->SetAddress(&NbMediumjesRelativeStatHFdn_);
  NbTightjesRelativeStatHFdn_branch = tree->GetBranch("NbTightjesRelativeStatHFdn");
  if (NbTightjesRelativeStatHFdn_branch) NbTightjesRelativeStatHFdn_branch->SetAddress(&NbTightjesRelativeStatHFdn_);
  NoORNbLoosejesRelativeStatHFdn_branch = tree->GetBranch("NoORNbLoosejesRelativeStatHFdn");
  if (NoORNbLoosejesRelativeStatHFdn_branch) NoORNbLoosejesRelativeStatHFdn_branch->SetAddress(&NoORNbLoosejesRelativeStatHFdn_);
  NoORNbMediumjesRelativeStatHFdn_branch = tree->GetBranch("NoORNbMediumjesRelativeStatHFdn");
  if (NoORNbMediumjesRelativeStatHFdn_branch) NoORNbMediumjesRelativeStatHFdn_branch->SetAddress(&NoORNbMediumjesRelativeStatHFdn_);
  NoORNbTightjesRelativeStatHFdn_branch = tree->GetBranch("NoORNbTightjesRelativeStatHFdn");
  if (NoORNbTightjesRelativeStatHFdn_branch) NoORNbTightjesRelativeStatHFdn_branch->SetAddress(&NoORNbTightjesRelativeStatHFdn_);
  NQJGenjesRelativeStatHFdn_branch = tree->GetBranch("NQJGenjesRelativeStatHFdn");
  if (NQJGenjesRelativeStatHFdn_branch) NQJGenjesRelativeStatHFdn_branch->SetAddress(&NQJGenjesRelativeStatHFdn_);
  NBJGenjesRelativeStatHFdn_branch = tree->GetBranch("NBJGenjesRelativeStatHFdn");
  if (NBJGenjesRelativeStatHFdn_branch) NBJGenjesRelativeStatHFdn_branch->SetAddress(&NBJGenjesRelativeStatHFdn_);
  NLJGenjesRelativeStatHFdn_branch = tree->GetBranch("NLJGenjesRelativeStatHFdn");
  if (NLJGenjesRelativeStatHFdn_branch) NLJGenjesRelativeStatHFdn_branch->SetAddress(&NLJGenjesRelativeStatHFdn_);
  MVVXjesRelativeStatHFdn_branch = tree->GetBranch("MVVXjesRelativeStatHFdn");
  if (MVVXjesRelativeStatHFdn_branch) MVVXjesRelativeStatHFdn_branch->SetAddress(&MVVXjesRelativeStatHFdn_);
  PtVVXjesRelativeStatHFdn_branch = tree->GetBranch("PtVVXjesRelativeStatHFdn");
  if (PtVVXjesRelativeStatHFdn_branch) PtVVXjesRelativeStatHFdn_branch->SetAddress(&PtVVXjesRelativeStatHFdn_);
  HTjesRelativeStatHFdn_branch = tree->GetBranch("HTjesRelativeStatHFdn");
  if (HTjesRelativeStatHFdn_branch) HTjesRelativeStatHFdn_branch->SetAddress(&HTjesRelativeStatHFdn_);
  HTJjesRelativeStatHFdn_branch = tree->GetBranch("HTJjesRelativeStatHFdn");
  if (HTJjesRelativeStatHFdn_branch) HTJjesRelativeStatHFdn_branch->SetAddress(&HTJjesRelativeStatHFdn_);
  HTFJjesRelativeStatHFdn_branch = tree->GetBranch("HTFJjesRelativeStatHFdn");
  if (HTFJjesRelativeStatHFdn_branch) HTFJjesRelativeStatHFdn_branch->SetAddress(&HTFJjesRelativeStatHFdn_);
  SumPtFJjesRelativeStatHFdn_branch = tree->GetBranch("SumPtFJjesRelativeStatHFdn");
  if (SumPtFJjesRelativeStatHFdn_branch) SumPtFJjesRelativeStatHFdn_branch->SetAddress(&SumPtFJjesRelativeStatHFdn_);
  SumPtJjesRelativeStatHFdn_branch = tree->GetBranch("SumPtJjesRelativeStatHFdn");
  if (SumPtJjesRelativeStatHFdn_branch) SumPtJjesRelativeStatHFdn_branch->SetAddress(&SumPtJjesRelativeStatHFdn_);
  NFJjesPileUpDataMCup_branch = tree->GetBranch("NFJjesPileUpDataMCup");
  if (NFJjesPileUpDataMCup_branch) NFJjesPileUpDataMCup_branch->SetAddress(&NFJjesPileUpDataMCup_);
  VMD0jesPileUpDataMCup_branch = tree->GetBranch("VMD0jesPileUpDataMCup");
  if (VMD0jesPileUpDataMCup_branch) VMD0jesPileUpDataMCup_branch->SetAddress(&VMD0jesPileUpDataMCup_);
  VMD1jesPileUpDataMCup_branch = tree->GetBranch("VMD1jesPileUpDataMCup");
  if (VMD1jesPileUpDataMCup_branch) VMD1jesPileUpDataMCup_branch->SetAddress(&VMD1jesPileUpDataMCup_);
  VMD2jesPileUpDataMCup_branch = tree->GetBranch("VMD2jesPileUpDataMCup");
  if (VMD2jesPileUpDataMCup_branch) VMD2jesPileUpDataMCup_branch->SetAddress(&VMD2jesPileUpDataMCup_);
  VMD3jesPileUpDataMCup_branch = tree->GetBranch("VMD3jesPileUpDataMCup");
  if (VMD3jesPileUpDataMCup_branch) VMD3jesPileUpDataMCup_branch->SetAddress(&VMD3jesPileUpDataMCup_);
  VMD4jesPileUpDataMCup_branch = tree->GetBranch("VMD4jesPileUpDataMCup");
  if (VMD4jesPileUpDataMCup_branch) VMD4jesPileUpDataMCup_branch->SetAddress(&VMD4jesPileUpDataMCup_);
  WMD0jesPileUpDataMCup_branch = tree->GetBranch("WMD0jesPileUpDataMCup");
  if (WMD0jesPileUpDataMCup_branch) WMD0jesPileUpDataMCup_branch->SetAddress(&WMD0jesPileUpDataMCup_);
  WMD1jesPileUpDataMCup_branch = tree->GetBranch("WMD1jesPileUpDataMCup");
  if (WMD1jesPileUpDataMCup_branch) WMD1jesPileUpDataMCup_branch->SetAddress(&WMD1jesPileUpDataMCup_);
  WMD2jesPileUpDataMCup_branch = tree->GetBranch("WMD2jesPileUpDataMCup");
  if (WMD2jesPileUpDataMCup_branch) WMD2jesPileUpDataMCup_branch->SetAddress(&WMD2jesPileUpDataMCup_);
  WMD3jesPileUpDataMCup_branch = tree->GetBranch("WMD3jesPileUpDataMCup");
  if (WMD3jesPileUpDataMCup_branch) WMD3jesPileUpDataMCup_branch->SetAddress(&WMD3jesPileUpDataMCup_);
  WMD4jesPileUpDataMCup_branch = tree->GetBranch("WMD4jesPileUpDataMCup");
  if (WMD4jesPileUpDataMCup_branch) WMD4jesPileUpDataMCup_branch->SetAddress(&WMD4jesPileUpDataMCup_);
  NQGen0jesPileUpDataMCup_branch = tree->GetBranch("NQGen0jesPileUpDataMCup");
  if (NQGen0jesPileUpDataMCup_branch) NQGen0jesPileUpDataMCup_branch->SetAddress(&NQGen0jesPileUpDataMCup_);
  NQGen1jesPileUpDataMCup_branch = tree->GetBranch("NQGen1jesPileUpDataMCup");
  if (NQGen1jesPileUpDataMCup_branch) NQGen1jesPileUpDataMCup_branch->SetAddress(&NQGen1jesPileUpDataMCup_);
  NQGen2jesPileUpDataMCup_branch = tree->GetBranch("NQGen2jesPileUpDataMCup");
  if (NQGen2jesPileUpDataMCup_branch) NQGen2jesPileUpDataMCup_branch->SetAddress(&NQGen2jesPileUpDataMCup_);
  NQGen3jesPileUpDataMCup_branch = tree->GetBranch("NQGen3jesPileUpDataMCup");
  if (NQGen3jesPileUpDataMCup_branch) NQGen3jesPileUpDataMCup_branch->SetAddress(&NQGen3jesPileUpDataMCup_);
  NQGen4jesPileUpDataMCup_branch = tree->GetBranch("NQGen4jesPileUpDataMCup");
  if (NQGen4jesPileUpDataMCup_branch) NQGen4jesPileUpDataMCup_branch->SetAddress(&NQGen4jesPileUpDataMCup_);
  NBGen0jesPileUpDataMCup_branch = tree->GetBranch("NBGen0jesPileUpDataMCup");
  if (NBGen0jesPileUpDataMCup_branch) NBGen0jesPileUpDataMCup_branch->SetAddress(&NBGen0jesPileUpDataMCup_);
  NBGen1jesPileUpDataMCup_branch = tree->GetBranch("NBGen1jesPileUpDataMCup");
  if (NBGen1jesPileUpDataMCup_branch) NBGen1jesPileUpDataMCup_branch->SetAddress(&NBGen1jesPileUpDataMCup_);
  NBGen2jesPileUpDataMCup_branch = tree->GetBranch("NBGen2jesPileUpDataMCup");
  if (NBGen2jesPileUpDataMCup_branch) NBGen2jesPileUpDataMCup_branch->SetAddress(&NBGen2jesPileUpDataMCup_);
  NBGen3jesPileUpDataMCup_branch = tree->GetBranch("NBGen3jesPileUpDataMCup");
  if (NBGen3jesPileUpDataMCup_branch) NBGen3jesPileUpDataMCup_branch->SetAddress(&NBGen3jesPileUpDataMCup_);
  NBGen4jesPileUpDataMCup_branch = tree->GetBranch("NBGen4jesPileUpDataMCup");
  if (NBGen4jesPileUpDataMCup_branch) NBGen4jesPileUpDataMCup_branch->SetAddress(&NBGen4jesPileUpDataMCup_);
  NLGen0jesPileUpDataMCup_branch = tree->GetBranch("NLGen0jesPileUpDataMCup");
  if (NLGen0jesPileUpDataMCup_branch) NLGen0jesPileUpDataMCup_branch->SetAddress(&NLGen0jesPileUpDataMCup_);
  NLGen1jesPileUpDataMCup_branch = tree->GetBranch("NLGen1jesPileUpDataMCup");
  if (NLGen1jesPileUpDataMCup_branch) NLGen1jesPileUpDataMCup_branch->SetAddress(&NLGen1jesPileUpDataMCup_);
  NLGen2jesPileUpDataMCup_branch = tree->GetBranch("NLGen2jesPileUpDataMCup");
  if (NLGen2jesPileUpDataMCup_branch) NLGen2jesPileUpDataMCup_branch->SetAddress(&NLGen2jesPileUpDataMCup_);
  NLGen3jesPileUpDataMCup_branch = tree->GetBranch("NLGen3jesPileUpDataMCup");
  if (NLGen3jesPileUpDataMCup_branch) NLGen3jesPileUpDataMCup_branch->SetAddress(&NLGen3jesPileUpDataMCup_);
  NLGen4jesPileUpDataMCup_branch = tree->GetBranch("NLGen4jesPileUpDataMCup");
  if (NLGen4jesPileUpDataMCup_branch) NLGen4jesPileUpDataMCup_branch->SetAddress(&NLGen4jesPileUpDataMCup_);
  NVQGen0jesPileUpDataMCup_branch = tree->GetBranch("NVQGen0jesPileUpDataMCup");
  if (NVQGen0jesPileUpDataMCup_branch) NVQGen0jesPileUpDataMCup_branch->SetAddress(&NVQGen0jesPileUpDataMCup_);
  NVQGen1jesPileUpDataMCup_branch = tree->GetBranch("NVQGen1jesPileUpDataMCup");
  if (NVQGen1jesPileUpDataMCup_branch) NVQGen1jesPileUpDataMCup_branch->SetAddress(&NVQGen1jesPileUpDataMCup_);
  NVQGen2jesPileUpDataMCup_branch = tree->GetBranch("NVQGen2jesPileUpDataMCup");
  if (NVQGen2jesPileUpDataMCup_branch) NVQGen2jesPileUpDataMCup_branch->SetAddress(&NVQGen2jesPileUpDataMCup_);
  NVQGen3jesPileUpDataMCup_branch = tree->GetBranch("NVQGen3jesPileUpDataMCup");
  if (NVQGen3jesPileUpDataMCup_branch) NVQGen3jesPileUpDataMCup_branch->SetAddress(&NVQGen3jesPileUpDataMCup_);
  NVQGen4jesPileUpDataMCup_branch = tree->GetBranch("NVQGen4jesPileUpDataMCup");
  if (NVQGen4jesPileUpDataMCup_branch) NVQGen4jesPileUpDataMCup_branch->SetAddress(&NVQGen4jesPileUpDataMCup_);
  NiFJjesPileUpDataMCup_branch = tree->GetBranch("NiFJjesPileUpDataMCup");
  if (NiFJjesPileUpDataMCup_branch) NiFJjesPileUpDataMCup_branch->SetAddress(&NiFJjesPileUpDataMCup_);
  iVMD0jesPileUpDataMCup_branch = tree->GetBranch("iVMD0jesPileUpDataMCup");
  if (iVMD0jesPileUpDataMCup_branch) iVMD0jesPileUpDataMCup_branch->SetAddress(&iVMD0jesPileUpDataMCup_);
  iVMD1jesPileUpDataMCup_branch = tree->GetBranch("iVMD1jesPileUpDataMCup");
  if (iVMD1jesPileUpDataMCup_branch) iVMD1jesPileUpDataMCup_branch->SetAddress(&iVMD1jesPileUpDataMCup_);
  iVMD2jesPileUpDataMCup_branch = tree->GetBranch("iVMD2jesPileUpDataMCup");
  if (iVMD2jesPileUpDataMCup_branch) iVMD2jesPileUpDataMCup_branch->SetAddress(&iVMD2jesPileUpDataMCup_);
  iVMD3jesPileUpDataMCup_branch = tree->GetBranch("iVMD3jesPileUpDataMCup");
  if (iVMD3jesPileUpDataMCup_branch) iVMD3jesPileUpDataMCup_branch->SetAddress(&iVMD3jesPileUpDataMCup_);
  iVMD4jesPileUpDataMCup_branch = tree->GetBranch("iVMD4jesPileUpDataMCup");
  if (iVMD4jesPileUpDataMCup_branch) iVMD4jesPileUpDataMCup_branch->SetAddress(&iVMD4jesPileUpDataMCup_);
  iWMD0jesPileUpDataMCup_branch = tree->GetBranch("iWMD0jesPileUpDataMCup");
  if (iWMD0jesPileUpDataMCup_branch) iWMD0jesPileUpDataMCup_branch->SetAddress(&iWMD0jesPileUpDataMCup_);
  iWMD1jesPileUpDataMCup_branch = tree->GetBranch("iWMD1jesPileUpDataMCup");
  if (iWMD1jesPileUpDataMCup_branch) iWMD1jesPileUpDataMCup_branch->SetAddress(&iWMD1jesPileUpDataMCup_);
  iWMD2jesPileUpDataMCup_branch = tree->GetBranch("iWMD2jesPileUpDataMCup");
  if (iWMD2jesPileUpDataMCup_branch) iWMD2jesPileUpDataMCup_branch->SetAddress(&iWMD2jesPileUpDataMCup_);
  iWMD3jesPileUpDataMCup_branch = tree->GetBranch("iWMD3jesPileUpDataMCup");
  if (iWMD3jesPileUpDataMCup_branch) iWMD3jesPileUpDataMCup_branch->SetAddress(&iWMD3jesPileUpDataMCup_);
  iWMD4jesPileUpDataMCup_branch = tree->GetBranch("iWMD4jesPileUpDataMCup");
  if (iWMD4jesPileUpDataMCup_branch) iWMD4jesPileUpDataMCup_branch->SetAddress(&iWMD4jesPileUpDataMCup_);
  NJjesPileUpDataMCup_branch = tree->GetBranch("NJjesPileUpDataMCup");
  if (NJjesPileUpDataMCup_branch) NJjesPileUpDataMCup_branch->SetAddress(&NJjesPileUpDataMCup_);
  NbLoosejesPileUpDataMCup_branch = tree->GetBranch("NbLoosejesPileUpDataMCup");
  if (NbLoosejesPileUpDataMCup_branch) NbLoosejesPileUpDataMCup_branch->SetAddress(&NbLoosejesPileUpDataMCup_);
  NbMediumjesPileUpDataMCup_branch = tree->GetBranch("NbMediumjesPileUpDataMCup");
  if (NbMediumjesPileUpDataMCup_branch) NbMediumjesPileUpDataMCup_branch->SetAddress(&NbMediumjesPileUpDataMCup_);
  NbTightjesPileUpDataMCup_branch = tree->GetBranch("NbTightjesPileUpDataMCup");
  if (NbTightjesPileUpDataMCup_branch) NbTightjesPileUpDataMCup_branch->SetAddress(&NbTightjesPileUpDataMCup_);
  NoORNbLoosejesPileUpDataMCup_branch = tree->GetBranch("NoORNbLoosejesPileUpDataMCup");
  if (NoORNbLoosejesPileUpDataMCup_branch) NoORNbLoosejesPileUpDataMCup_branch->SetAddress(&NoORNbLoosejesPileUpDataMCup_);
  NoORNbMediumjesPileUpDataMCup_branch = tree->GetBranch("NoORNbMediumjesPileUpDataMCup");
  if (NoORNbMediumjesPileUpDataMCup_branch) NoORNbMediumjesPileUpDataMCup_branch->SetAddress(&NoORNbMediumjesPileUpDataMCup_);
  NoORNbTightjesPileUpDataMCup_branch = tree->GetBranch("NoORNbTightjesPileUpDataMCup");
  if (NoORNbTightjesPileUpDataMCup_branch) NoORNbTightjesPileUpDataMCup_branch->SetAddress(&NoORNbTightjesPileUpDataMCup_);
  NQJGenjesPileUpDataMCup_branch = tree->GetBranch("NQJGenjesPileUpDataMCup");
  if (NQJGenjesPileUpDataMCup_branch) NQJGenjesPileUpDataMCup_branch->SetAddress(&NQJGenjesPileUpDataMCup_);
  NBJGenjesPileUpDataMCup_branch = tree->GetBranch("NBJGenjesPileUpDataMCup");
  if (NBJGenjesPileUpDataMCup_branch) NBJGenjesPileUpDataMCup_branch->SetAddress(&NBJGenjesPileUpDataMCup_);
  NLJGenjesPileUpDataMCup_branch = tree->GetBranch("NLJGenjesPileUpDataMCup");
  if (NLJGenjesPileUpDataMCup_branch) NLJGenjesPileUpDataMCup_branch->SetAddress(&NLJGenjesPileUpDataMCup_);
  MVVXjesPileUpDataMCup_branch = tree->GetBranch("MVVXjesPileUpDataMCup");
  if (MVVXjesPileUpDataMCup_branch) MVVXjesPileUpDataMCup_branch->SetAddress(&MVVXjesPileUpDataMCup_);
  PtVVXjesPileUpDataMCup_branch = tree->GetBranch("PtVVXjesPileUpDataMCup");
  if (PtVVXjesPileUpDataMCup_branch) PtVVXjesPileUpDataMCup_branch->SetAddress(&PtVVXjesPileUpDataMCup_);
  HTjesPileUpDataMCup_branch = tree->GetBranch("HTjesPileUpDataMCup");
  if (HTjesPileUpDataMCup_branch) HTjesPileUpDataMCup_branch->SetAddress(&HTjesPileUpDataMCup_);
  HTJjesPileUpDataMCup_branch = tree->GetBranch("HTJjesPileUpDataMCup");
  if (HTJjesPileUpDataMCup_branch) HTJjesPileUpDataMCup_branch->SetAddress(&HTJjesPileUpDataMCup_);
  HTFJjesPileUpDataMCup_branch = tree->GetBranch("HTFJjesPileUpDataMCup");
  if (HTFJjesPileUpDataMCup_branch) HTFJjesPileUpDataMCup_branch->SetAddress(&HTFJjesPileUpDataMCup_);
  SumPtFJjesPileUpDataMCup_branch = tree->GetBranch("SumPtFJjesPileUpDataMCup");
  if (SumPtFJjesPileUpDataMCup_branch) SumPtFJjesPileUpDataMCup_branch->SetAddress(&SumPtFJjesPileUpDataMCup_);
  SumPtJjesPileUpDataMCup_branch = tree->GetBranch("SumPtJjesPileUpDataMCup");
  if (SumPtJjesPileUpDataMCup_branch) SumPtJjesPileUpDataMCup_branch->SetAddress(&SumPtJjesPileUpDataMCup_);
  NFJjesPileUpDataMCdn_branch = tree->GetBranch("NFJjesPileUpDataMCdn");
  if (NFJjesPileUpDataMCdn_branch) NFJjesPileUpDataMCdn_branch->SetAddress(&NFJjesPileUpDataMCdn_);
  VMD0jesPileUpDataMCdn_branch = tree->GetBranch("VMD0jesPileUpDataMCdn");
  if (VMD0jesPileUpDataMCdn_branch) VMD0jesPileUpDataMCdn_branch->SetAddress(&VMD0jesPileUpDataMCdn_);
  VMD1jesPileUpDataMCdn_branch = tree->GetBranch("VMD1jesPileUpDataMCdn");
  if (VMD1jesPileUpDataMCdn_branch) VMD1jesPileUpDataMCdn_branch->SetAddress(&VMD1jesPileUpDataMCdn_);
  VMD2jesPileUpDataMCdn_branch = tree->GetBranch("VMD2jesPileUpDataMCdn");
  if (VMD2jesPileUpDataMCdn_branch) VMD2jesPileUpDataMCdn_branch->SetAddress(&VMD2jesPileUpDataMCdn_);
  VMD3jesPileUpDataMCdn_branch = tree->GetBranch("VMD3jesPileUpDataMCdn");
  if (VMD3jesPileUpDataMCdn_branch) VMD3jesPileUpDataMCdn_branch->SetAddress(&VMD3jesPileUpDataMCdn_);
  VMD4jesPileUpDataMCdn_branch = tree->GetBranch("VMD4jesPileUpDataMCdn");
  if (VMD4jesPileUpDataMCdn_branch) VMD4jesPileUpDataMCdn_branch->SetAddress(&VMD4jesPileUpDataMCdn_);
  WMD0jesPileUpDataMCdn_branch = tree->GetBranch("WMD0jesPileUpDataMCdn");
  if (WMD0jesPileUpDataMCdn_branch) WMD0jesPileUpDataMCdn_branch->SetAddress(&WMD0jesPileUpDataMCdn_);
  WMD1jesPileUpDataMCdn_branch = tree->GetBranch("WMD1jesPileUpDataMCdn");
  if (WMD1jesPileUpDataMCdn_branch) WMD1jesPileUpDataMCdn_branch->SetAddress(&WMD1jesPileUpDataMCdn_);
  WMD2jesPileUpDataMCdn_branch = tree->GetBranch("WMD2jesPileUpDataMCdn");
  if (WMD2jesPileUpDataMCdn_branch) WMD2jesPileUpDataMCdn_branch->SetAddress(&WMD2jesPileUpDataMCdn_);
  WMD3jesPileUpDataMCdn_branch = tree->GetBranch("WMD3jesPileUpDataMCdn");
  if (WMD3jesPileUpDataMCdn_branch) WMD3jesPileUpDataMCdn_branch->SetAddress(&WMD3jesPileUpDataMCdn_);
  WMD4jesPileUpDataMCdn_branch = tree->GetBranch("WMD4jesPileUpDataMCdn");
  if (WMD4jesPileUpDataMCdn_branch) WMD4jesPileUpDataMCdn_branch->SetAddress(&WMD4jesPileUpDataMCdn_);
  NQGen0jesPileUpDataMCdn_branch = tree->GetBranch("NQGen0jesPileUpDataMCdn");
  if (NQGen0jesPileUpDataMCdn_branch) NQGen0jesPileUpDataMCdn_branch->SetAddress(&NQGen0jesPileUpDataMCdn_);
  NQGen1jesPileUpDataMCdn_branch = tree->GetBranch("NQGen1jesPileUpDataMCdn");
  if (NQGen1jesPileUpDataMCdn_branch) NQGen1jesPileUpDataMCdn_branch->SetAddress(&NQGen1jesPileUpDataMCdn_);
  NQGen2jesPileUpDataMCdn_branch = tree->GetBranch("NQGen2jesPileUpDataMCdn");
  if (NQGen2jesPileUpDataMCdn_branch) NQGen2jesPileUpDataMCdn_branch->SetAddress(&NQGen2jesPileUpDataMCdn_);
  NQGen3jesPileUpDataMCdn_branch = tree->GetBranch("NQGen3jesPileUpDataMCdn");
  if (NQGen3jesPileUpDataMCdn_branch) NQGen3jesPileUpDataMCdn_branch->SetAddress(&NQGen3jesPileUpDataMCdn_);
  NQGen4jesPileUpDataMCdn_branch = tree->GetBranch("NQGen4jesPileUpDataMCdn");
  if (NQGen4jesPileUpDataMCdn_branch) NQGen4jesPileUpDataMCdn_branch->SetAddress(&NQGen4jesPileUpDataMCdn_);
  NBGen0jesPileUpDataMCdn_branch = tree->GetBranch("NBGen0jesPileUpDataMCdn");
  if (NBGen0jesPileUpDataMCdn_branch) NBGen0jesPileUpDataMCdn_branch->SetAddress(&NBGen0jesPileUpDataMCdn_);
  NBGen1jesPileUpDataMCdn_branch = tree->GetBranch("NBGen1jesPileUpDataMCdn");
  if (NBGen1jesPileUpDataMCdn_branch) NBGen1jesPileUpDataMCdn_branch->SetAddress(&NBGen1jesPileUpDataMCdn_);
  NBGen2jesPileUpDataMCdn_branch = tree->GetBranch("NBGen2jesPileUpDataMCdn");
  if (NBGen2jesPileUpDataMCdn_branch) NBGen2jesPileUpDataMCdn_branch->SetAddress(&NBGen2jesPileUpDataMCdn_);
  NBGen3jesPileUpDataMCdn_branch = tree->GetBranch("NBGen3jesPileUpDataMCdn");
  if (NBGen3jesPileUpDataMCdn_branch) NBGen3jesPileUpDataMCdn_branch->SetAddress(&NBGen3jesPileUpDataMCdn_);
  NBGen4jesPileUpDataMCdn_branch = tree->GetBranch("NBGen4jesPileUpDataMCdn");
  if (NBGen4jesPileUpDataMCdn_branch) NBGen4jesPileUpDataMCdn_branch->SetAddress(&NBGen4jesPileUpDataMCdn_);
  NLGen0jesPileUpDataMCdn_branch = tree->GetBranch("NLGen0jesPileUpDataMCdn");
  if (NLGen0jesPileUpDataMCdn_branch) NLGen0jesPileUpDataMCdn_branch->SetAddress(&NLGen0jesPileUpDataMCdn_);
  NLGen1jesPileUpDataMCdn_branch = tree->GetBranch("NLGen1jesPileUpDataMCdn");
  if (NLGen1jesPileUpDataMCdn_branch) NLGen1jesPileUpDataMCdn_branch->SetAddress(&NLGen1jesPileUpDataMCdn_);
  NLGen2jesPileUpDataMCdn_branch = tree->GetBranch("NLGen2jesPileUpDataMCdn");
  if (NLGen2jesPileUpDataMCdn_branch) NLGen2jesPileUpDataMCdn_branch->SetAddress(&NLGen2jesPileUpDataMCdn_);
  NLGen3jesPileUpDataMCdn_branch = tree->GetBranch("NLGen3jesPileUpDataMCdn");
  if (NLGen3jesPileUpDataMCdn_branch) NLGen3jesPileUpDataMCdn_branch->SetAddress(&NLGen3jesPileUpDataMCdn_);
  NLGen4jesPileUpDataMCdn_branch = tree->GetBranch("NLGen4jesPileUpDataMCdn");
  if (NLGen4jesPileUpDataMCdn_branch) NLGen4jesPileUpDataMCdn_branch->SetAddress(&NLGen4jesPileUpDataMCdn_);
  NVQGen0jesPileUpDataMCdn_branch = tree->GetBranch("NVQGen0jesPileUpDataMCdn");
  if (NVQGen0jesPileUpDataMCdn_branch) NVQGen0jesPileUpDataMCdn_branch->SetAddress(&NVQGen0jesPileUpDataMCdn_);
  NVQGen1jesPileUpDataMCdn_branch = tree->GetBranch("NVQGen1jesPileUpDataMCdn");
  if (NVQGen1jesPileUpDataMCdn_branch) NVQGen1jesPileUpDataMCdn_branch->SetAddress(&NVQGen1jesPileUpDataMCdn_);
  NVQGen2jesPileUpDataMCdn_branch = tree->GetBranch("NVQGen2jesPileUpDataMCdn");
  if (NVQGen2jesPileUpDataMCdn_branch) NVQGen2jesPileUpDataMCdn_branch->SetAddress(&NVQGen2jesPileUpDataMCdn_);
  NVQGen3jesPileUpDataMCdn_branch = tree->GetBranch("NVQGen3jesPileUpDataMCdn");
  if (NVQGen3jesPileUpDataMCdn_branch) NVQGen3jesPileUpDataMCdn_branch->SetAddress(&NVQGen3jesPileUpDataMCdn_);
  NVQGen4jesPileUpDataMCdn_branch = tree->GetBranch("NVQGen4jesPileUpDataMCdn");
  if (NVQGen4jesPileUpDataMCdn_branch) NVQGen4jesPileUpDataMCdn_branch->SetAddress(&NVQGen4jesPileUpDataMCdn_);
  NiFJjesPileUpDataMCdn_branch = tree->GetBranch("NiFJjesPileUpDataMCdn");
  if (NiFJjesPileUpDataMCdn_branch) NiFJjesPileUpDataMCdn_branch->SetAddress(&NiFJjesPileUpDataMCdn_);
  iVMD0jesPileUpDataMCdn_branch = tree->GetBranch("iVMD0jesPileUpDataMCdn");
  if (iVMD0jesPileUpDataMCdn_branch) iVMD0jesPileUpDataMCdn_branch->SetAddress(&iVMD0jesPileUpDataMCdn_);
  iVMD1jesPileUpDataMCdn_branch = tree->GetBranch("iVMD1jesPileUpDataMCdn");
  if (iVMD1jesPileUpDataMCdn_branch) iVMD1jesPileUpDataMCdn_branch->SetAddress(&iVMD1jesPileUpDataMCdn_);
  iVMD2jesPileUpDataMCdn_branch = tree->GetBranch("iVMD2jesPileUpDataMCdn");
  if (iVMD2jesPileUpDataMCdn_branch) iVMD2jesPileUpDataMCdn_branch->SetAddress(&iVMD2jesPileUpDataMCdn_);
  iVMD3jesPileUpDataMCdn_branch = tree->GetBranch("iVMD3jesPileUpDataMCdn");
  if (iVMD3jesPileUpDataMCdn_branch) iVMD3jesPileUpDataMCdn_branch->SetAddress(&iVMD3jesPileUpDataMCdn_);
  iVMD4jesPileUpDataMCdn_branch = tree->GetBranch("iVMD4jesPileUpDataMCdn");
  if (iVMD4jesPileUpDataMCdn_branch) iVMD4jesPileUpDataMCdn_branch->SetAddress(&iVMD4jesPileUpDataMCdn_);
  iWMD0jesPileUpDataMCdn_branch = tree->GetBranch("iWMD0jesPileUpDataMCdn");
  if (iWMD0jesPileUpDataMCdn_branch) iWMD0jesPileUpDataMCdn_branch->SetAddress(&iWMD0jesPileUpDataMCdn_);
  iWMD1jesPileUpDataMCdn_branch = tree->GetBranch("iWMD1jesPileUpDataMCdn");
  if (iWMD1jesPileUpDataMCdn_branch) iWMD1jesPileUpDataMCdn_branch->SetAddress(&iWMD1jesPileUpDataMCdn_);
  iWMD2jesPileUpDataMCdn_branch = tree->GetBranch("iWMD2jesPileUpDataMCdn");
  if (iWMD2jesPileUpDataMCdn_branch) iWMD2jesPileUpDataMCdn_branch->SetAddress(&iWMD2jesPileUpDataMCdn_);
  iWMD3jesPileUpDataMCdn_branch = tree->GetBranch("iWMD3jesPileUpDataMCdn");
  if (iWMD3jesPileUpDataMCdn_branch) iWMD3jesPileUpDataMCdn_branch->SetAddress(&iWMD3jesPileUpDataMCdn_);
  iWMD4jesPileUpDataMCdn_branch = tree->GetBranch("iWMD4jesPileUpDataMCdn");
  if (iWMD4jesPileUpDataMCdn_branch) iWMD4jesPileUpDataMCdn_branch->SetAddress(&iWMD4jesPileUpDataMCdn_);
  NJjesPileUpDataMCdn_branch = tree->GetBranch("NJjesPileUpDataMCdn");
  if (NJjesPileUpDataMCdn_branch) NJjesPileUpDataMCdn_branch->SetAddress(&NJjesPileUpDataMCdn_);
  NbLoosejesPileUpDataMCdn_branch = tree->GetBranch("NbLoosejesPileUpDataMCdn");
  if (NbLoosejesPileUpDataMCdn_branch) NbLoosejesPileUpDataMCdn_branch->SetAddress(&NbLoosejesPileUpDataMCdn_);
  NbMediumjesPileUpDataMCdn_branch = tree->GetBranch("NbMediumjesPileUpDataMCdn");
  if (NbMediumjesPileUpDataMCdn_branch) NbMediumjesPileUpDataMCdn_branch->SetAddress(&NbMediumjesPileUpDataMCdn_);
  NbTightjesPileUpDataMCdn_branch = tree->GetBranch("NbTightjesPileUpDataMCdn");
  if (NbTightjesPileUpDataMCdn_branch) NbTightjesPileUpDataMCdn_branch->SetAddress(&NbTightjesPileUpDataMCdn_);
  NoORNbLoosejesPileUpDataMCdn_branch = tree->GetBranch("NoORNbLoosejesPileUpDataMCdn");
  if (NoORNbLoosejesPileUpDataMCdn_branch) NoORNbLoosejesPileUpDataMCdn_branch->SetAddress(&NoORNbLoosejesPileUpDataMCdn_);
  NoORNbMediumjesPileUpDataMCdn_branch = tree->GetBranch("NoORNbMediumjesPileUpDataMCdn");
  if (NoORNbMediumjesPileUpDataMCdn_branch) NoORNbMediumjesPileUpDataMCdn_branch->SetAddress(&NoORNbMediumjesPileUpDataMCdn_);
  NoORNbTightjesPileUpDataMCdn_branch = tree->GetBranch("NoORNbTightjesPileUpDataMCdn");
  if (NoORNbTightjesPileUpDataMCdn_branch) NoORNbTightjesPileUpDataMCdn_branch->SetAddress(&NoORNbTightjesPileUpDataMCdn_);
  NQJGenjesPileUpDataMCdn_branch = tree->GetBranch("NQJGenjesPileUpDataMCdn");
  if (NQJGenjesPileUpDataMCdn_branch) NQJGenjesPileUpDataMCdn_branch->SetAddress(&NQJGenjesPileUpDataMCdn_);
  NBJGenjesPileUpDataMCdn_branch = tree->GetBranch("NBJGenjesPileUpDataMCdn");
  if (NBJGenjesPileUpDataMCdn_branch) NBJGenjesPileUpDataMCdn_branch->SetAddress(&NBJGenjesPileUpDataMCdn_);
  NLJGenjesPileUpDataMCdn_branch = tree->GetBranch("NLJGenjesPileUpDataMCdn");
  if (NLJGenjesPileUpDataMCdn_branch) NLJGenjesPileUpDataMCdn_branch->SetAddress(&NLJGenjesPileUpDataMCdn_);
  MVVXjesPileUpDataMCdn_branch = tree->GetBranch("MVVXjesPileUpDataMCdn");
  if (MVVXjesPileUpDataMCdn_branch) MVVXjesPileUpDataMCdn_branch->SetAddress(&MVVXjesPileUpDataMCdn_);
  PtVVXjesPileUpDataMCdn_branch = tree->GetBranch("PtVVXjesPileUpDataMCdn");
  if (PtVVXjesPileUpDataMCdn_branch) PtVVXjesPileUpDataMCdn_branch->SetAddress(&PtVVXjesPileUpDataMCdn_);
  HTjesPileUpDataMCdn_branch = tree->GetBranch("HTjesPileUpDataMCdn");
  if (HTjesPileUpDataMCdn_branch) HTjesPileUpDataMCdn_branch->SetAddress(&HTjesPileUpDataMCdn_);
  HTJjesPileUpDataMCdn_branch = tree->GetBranch("HTJjesPileUpDataMCdn");
  if (HTJjesPileUpDataMCdn_branch) HTJjesPileUpDataMCdn_branch->SetAddress(&HTJjesPileUpDataMCdn_);
  HTFJjesPileUpDataMCdn_branch = tree->GetBranch("HTFJjesPileUpDataMCdn");
  if (HTFJjesPileUpDataMCdn_branch) HTFJjesPileUpDataMCdn_branch->SetAddress(&HTFJjesPileUpDataMCdn_);
  SumPtFJjesPileUpDataMCdn_branch = tree->GetBranch("SumPtFJjesPileUpDataMCdn");
  if (SumPtFJjesPileUpDataMCdn_branch) SumPtFJjesPileUpDataMCdn_branch->SetAddress(&SumPtFJjesPileUpDataMCdn_);
  SumPtJjesPileUpDataMCdn_branch = tree->GetBranch("SumPtJjesPileUpDataMCdn");
  if (SumPtJjesPileUpDataMCdn_branch) SumPtJjesPileUpDataMCdn_branch->SetAddress(&SumPtJjesPileUpDataMCdn_);
  NFJjesPileUpPtRefup_branch = tree->GetBranch("NFJjesPileUpPtRefup");
  if (NFJjesPileUpPtRefup_branch) NFJjesPileUpPtRefup_branch->SetAddress(&NFJjesPileUpPtRefup_);
  VMD0jesPileUpPtRefup_branch = tree->GetBranch("VMD0jesPileUpPtRefup");
  if (VMD0jesPileUpPtRefup_branch) VMD0jesPileUpPtRefup_branch->SetAddress(&VMD0jesPileUpPtRefup_);
  VMD1jesPileUpPtRefup_branch = tree->GetBranch("VMD1jesPileUpPtRefup");
  if (VMD1jesPileUpPtRefup_branch) VMD1jesPileUpPtRefup_branch->SetAddress(&VMD1jesPileUpPtRefup_);
  VMD2jesPileUpPtRefup_branch = tree->GetBranch("VMD2jesPileUpPtRefup");
  if (VMD2jesPileUpPtRefup_branch) VMD2jesPileUpPtRefup_branch->SetAddress(&VMD2jesPileUpPtRefup_);
  VMD3jesPileUpPtRefup_branch = tree->GetBranch("VMD3jesPileUpPtRefup");
  if (VMD3jesPileUpPtRefup_branch) VMD3jesPileUpPtRefup_branch->SetAddress(&VMD3jesPileUpPtRefup_);
  VMD4jesPileUpPtRefup_branch = tree->GetBranch("VMD4jesPileUpPtRefup");
  if (VMD4jesPileUpPtRefup_branch) VMD4jesPileUpPtRefup_branch->SetAddress(&VMD4jesPileUpPtRefup_);
  WMD0jesPileUpPtRefup_branch = tree->GetBranch("WMD0jesPileUpPtRefup");
  if (WMD0jesPileUpPtRefup_branch) WMD0jesPileUpPtRefup_branch->SetAddress(&WMD0jesPileUpPtRefup_);
  WMD1jesPileUpPtRefup_branch = tree->GetBranch("WMD1jesPileUpPtRefup");
  if (WMD1jesPileUpPtRefup_branch) WMD1jesPileUpPtRefup_branch->SetAddress(&WMD1jesPileUpPtRefup_);
  WMD2jesPileUpPtRefup_branch = tree->GetBranch("WMD2jesPileUpPtRefup");
  if (WMD2jesPileUpPtRefup_branch) WMD2jesPileUpPtRefup_branch->SetAddress(&WMD2jesPileUpPtRefup_);
  WMD3jesPileUpPtRefup_branch = tree->GetBranch("WMD3jesPileUpPtRefup");
  if (WMD3jesPileUpPtRefup_branch) WMD3jesPileUpPtRefup_branch->SetAddress(&WMD3jesPileUpPtRefup_);
  WMD4jesPileUpPtRefup_branch = tree->GetBranch("WMD4jesPileUpPtRefup");
  if (WMD4jesPileUpPtRefup_branch) WMD4jesPileUpPtRefup_branch->SetAddress(&WMD4jesPileUpPtRefup_);
  NQGen0jesPileUpPtRefup_branch = tree->GetBranch("NQGen0jesPileUpPtRefup");
  if (NQGen0jesPileUpPtRefup_branch) NQGen0jesPileUpPtRefup_branch->SetAddress(&NQGen0jesPileUpPtRefup_);
  NQGen1jesPileUpPtRefup_branch = tree->GetBranch("NQGen1jesPileUpPtRefup");
  if (NQGen1jesPileUpPtRefup_branch) NQGen1jesPileUpPtRefup_branch->SetAddress(&NQGen1jesPileUpPtRefup_);
  NQGen2jesPileUpPtRefup_branch = tree->GetBranch("NQGen2jesPileUpPtRefup");
  if (NQGen2jesPileUpPtRefup_branch) NQGen2jesPileUpPtRefup_branch->SetAddress(&NQGen2jesPileUpPtRefup_);
  NQGen3jesPileUpPtRefup_branch = tree->GetBranch("NQGen3jesPileUpPtRefup");
  if (NQGen3jesPileUpPtRefup_branch) NQGen3jesPileUpPtRefup_branch->SetAddress(&NQGen3jesPileUpPtRefup_);
  NQGen4jesPileUpPtRefup_branch = tree->GetBranch("NQGen4jesPileUpPtRefup");
  if (NQGen4jesPileUpPtRefup_branch) NQGen4jesPileUpPtRefup_branch->SetAddress(&NQGen4jesPileUpPtRefup_);
  NBGen0jesPileUpPtRefup_branch = tree->GetBranch("NBGen0jesPileUpPtRefup");
  if (NBGen0jesPileUpPtRefup_branch) NBGen0jesPileUpPtRefup_branch->SetAddress(&NBGen0jesPileUpPtRefup_);
  NBGen1jesPileUpPtRefup_branch = tree->GetBranch("NBGen1jesPileUpPtRefup");
  if (NBGen1jesPileUpPtRefup_branch) NBGen1jesPileUpPtRefup_branch->SetAddress(&NBGen1jesPileUpPtRefup_);
  NBGen2jesPileUpPtRefup_branch = tree->GetBranch("NBGen2jesPileUpPtRefup");
  if (NBGen2jesPileUpPtRefup_branch) NBGen2jesPileUpPtRefup_branch->SetAddress(&NBGen2jesPileUpPtRefup_);
  NBGen3jesPileUpPtRefup_branch = tree->GetBranch("NBGen3jesPileUpPtRefup");
  if (NBGen3jesPileUpPtRefup_branch) NBGen3jesPileUpPtRefup_branch->SetAddress(&NBGen3jesPileUpPtRefup_);
  NBGen4jesPileUpPtRefup_branch = tree->GetBranch("NBGen4jesPileUpPtRefup");
  if (NBGen4jesPileUpPtRefup_branch) NBGen4jesPileUpPtRefup_branch->SetAddress(&NBGen4jesPileUpPtRefup_);
  NLGen0jesPileUpPtRefup_branch = tree->GetBranch("NLGen0jesPileUpPtRefup");
  if (NLGen0jesPileUpPtRefup_branch) NLGen0jesPileUpPtRefup_branch->SetAddress(&NLGen0jesPileUpPtRefup_);
  NLGen1jesPileUpPtRefup_branch = tree->GetBranch("NLGen1jesPileUpPtRefup");
  if (NLGen1jesPileUpPtRefup_branch) NLGen1jesPileUpPtRefup_branch->SetAddress(&NLGen1jesPileUpPtRefup_);
  NLGen2jesPileUpPtRefup_branch = tree->GetBranch("NLGen2jesPileUpPtRefup");
  if (NLGen2jesPileUpPtRefup_branch) NLGen2jesPileUpPtRefup_branch->SetAddress(&NLGen2jesPileUpPtRefup_);
  NLGen3jesPileUpPtRefup_branch = tree->GetBranch("NLGen3jesPileUpPtRefup");
  if (NLGen3jesPileUpPtRefup_branch) NLGen3jesPileUpPtRefup_branch->SetAddress(&NLGen3jesPileUpPtRefup_);
  NLGen4jesPileUpPtRefup_branch = tree->GetBranch("NLGen4jesPileUpPtRefup");
  if (NLGen4jesPileUpPtRefup_branch) NLGen4jesPileUpPtRefup_branch->SetAddress(&NLGen4jesPileUpPtRefup_);
  NVQGen0jesPileUpPtRefup_branch = tree->GetBranch("NVQGen0jesPileUpPtRefup");
  if (NVQGen0jesPileUpPtRefup_branch) NVQGen0jesPileUpPtRefup_branch->SetAddress(&NVQGen0jesPileUpPtRefup_);
  NVQGen1jesPileUpPtRefup_branch = tree->GetBranch("NVQGen1jesPileUpPtRefup");
  if (NVQGen1jesPileUpPtRefup_branch) NVQGen1jesPileUpPtRefup_branch->SetAddress(&NVQGen1jesPileUpPtRefup_);
  NVQGen2jesPileUpPtRefup_branch = tree->GetBranch("NVQGen2jesPileUpPtRefup");
  if (NVQGen2jesPileUpPtRefup_branch) NVQGen2jesPileUpPtRefup_branch->SetAddress(&NVQGen2jesPileUpPtRefup_);
  NVQGen3jesPileUpPtRefup_branch = tree->GetBranch("NVQGen3jesPileUpPtRefup");
  if (NVQGen3jesPileUpPtRefup_branch) NVQGen3jesPileUpPtRefup_branch->SetAddress(&NVQGen3jesPileUpPtRefup_);
  NVQGen4jesPileUpPtRefup_branch = tree->GetBranch("NVQGen4jesPileUpPtRefup");
  if (NVQGen4jesPileUpPtRefup_branch) NVQGen4jesPileUpPtRefup_branch->SetAddress(&NVQGen4jesPileUpPtRefup_);
  NiFJjesPileUpPtRefup_branch = tree->GetBranch("NiFJjesPileUpPtRefup");
  if (NiFJjesPileUpPtRefup_branch) NiFJjesPileUpPtRefup_branch->SetAddress(&NiFJjesPileUpPtRefup_);
  iVMD0jesPileUpPtRefup_branch = tree->GetBranch("iVMD0jesPileUpPtRefup");
  if (iVMD0jesPileUpPtRefup_branch) iVMD0jesPileUpPtRefup_branch->SetAddress(&iVMD0jesPileUpPtRefup_);
  iVMD1jesPileUpPtRefup_branch = tree->GetBranch("iVMD1jesPileUpPtRefup");
  if (iVMD1jesPileUpPtRefup_branch) iVMD1jesPileUpPtRefup_branch->SetAddress(&iVMD1jesPileUpPtRefup_);
  iVMD2jesPileUpPtRefup_branch = tree->GetBranch("iVMD2jesPileUpPtRefup");
  if (iVMD2jesPileUpPtRefup_branch) iVMD2jesPileUpPtRefup_branch->SetAddress(&iVMD2jesPileUpPtRefup_);
  iVMD3jesPileUpPtRefup_branch = tree->GetBranch("iVMD3jesPileUpPtRefup");
  if (iVMD3jesPileUpPtRefup_branch) iVMD3jesPileUpPtRefup_branch->SetAddress(&iVMD3jesPileUpPtRefup_);
  iVMD4jesPileUpPtRefup_branch = tree->GetBranch("iVMD4jesPileUpPtRefup");
  if (iVMD4jesPileUpPtRefup_branch) iVMD4jesPileUpPtRefup_branch->SetAddress(&iVMD4jesPileUpPtRefup_);
  iWMD0jesPileUpPtRefup_branch = tree->GetBranch("iWMD0jesPileUpPtRefup");
  if (iWMD0jesPileUpPtRefup_branch) iWMD0jesPileUpPtRefup_branch->SetAddress(&iWMD0jesPileUpPtRefup_);
  iWMD1jesPileUpPtRefup_branch = tree->GetBranch("iWMD1jesPileUpPtRefup");
  if (iWMD1jesPileUpPtRefup_branch) iWMD1jesPileUpPtRefup_branch->SetAddress(&iWMD1jesPileUpPtRefup_);
  iWMD2jesPileUpPtRefup_branch = tree->GetBranch("iWMD2jesPileUpPtRefup");
  if (iWMD2jesPileUpPtRefup_branch) iWMD2jesPileUpPtRefup_branch->SetAddress(&iWMD2jesPileUpPtRefup_);
  iWMD3jesPileUpPtRefup_branch = tree->GetBranch("iWMD3jesPileUpPtRefup");
  if (iWMD3jesPileUpPtRefup_branch) iWMD3jesPileUpPtRefup_branch->SetAddress(&iWMD3jesPileUpPtRefup_);
  iWMD4jesPileUpPtRefup_branch = tree->GetBranch("iWMD4jesPileUpPtRefup");
  if (iWMD4jesPileUpPtRefup_branch) iWMD4jesPileUpPtRefup_branch->SetAddress(&iWMD4jesPileUpPtRefup_);
  NJjesPileUpPtRefup_branch = tree->GetBranch("NJjesPileUpPtRefup");
  if (NJjesPileUpPtRefup_branch) NJjesPileUpPtRefup_branch->SetAddress(&NJjesPileUpPtRefup_);
  NbLoosejesPileUpPtRefup_branch = tree->GetBranch("NbLoosejesPileUpPtRefup");
  if (NbLoosejesPileUpPtRefup_branch) NbLoosejesPileUpPtRefup_branch->SetAddress(&NbLoosejesPileUpPtRefup_);
  NbMediumjesPileUpPtRefup_branch = tree->GetBranch("NbMediumjesPileUpPtRefup");
  if (NbMediumjesPileUpPtRefup_branch) NbMediumjesPileUpPtRefup_branch->SetAddress(&NbMediumjesPileUpPtRefup_);
  NbTightjesPileUpPtRefup_branch = tree->GetBranch("NbTightjesPileUpPtRefup");
  if (NbTightjesPileUpPtRefup_branch) NbTightjesPileUpPtRefup_branch->SetAddress(&NbTightjesPileUpPtRefup_);
  NoORNbLoosejesPileUpPtRefup_branch = tree->GetBranch("NoORNbLoosejesPileUpPtRefup");
  if (NoORNbLoosejesPileUpPtRefup_branch) NoORNbLoosejesPileUpPtRefup_branch->SetAddress(&NoORNbLoosejesPileUpPtRefup_);
  NoORNbMediumjesPileUpPtRefup_branch = tree->GetBranch("NoORNbMediumjesPileUpPtRefup");
  if (NoORNbMediumjesPileUpPtRefup_branch) NoORNbMediumjesPileUpPtRefup_branch->SetAddress(&NoORNbMediumjesPileUpPtRefup_);
  NoORNbTightjesPileUpPtRefup_branch = tree->GetBranch("NoORNbTightjesPileUpPtRefup");
  if (NoORNbTightjesPileUpPtRefup_branch) NoORNbTightjesPileUpPtRefup_branch->SetAddress(&NoORNbTightjesPileUpPtRefup_);
  NQJGenjesPileUpPtRefup_branch = tree->GetBranch("NQJGenjesPileUpPtRefup");
  if (NQJGenjesPileUpPtRefup_branch) NQJGenjesPileUpPtRefup_branch->SetAddress(&NQJGenjesPileUpPtRefup_);
  NBJGenjesPileUpPtRefup_branch = tree->GetBranch("NBJGenjesPileUpPtRefup");
  if (NBJGenjesPileUpPtRefup_branch) NBJGenjesPileUpPtRefup_branch->SetAddress(&NBJGenjesPileUpPtRefup_);
  NLJGenjesPileUpPtRefup_branch = tree->GetBranch("NLJGenjesPileUpPtRefup");
  if (NLJGenjesPileUpPtRefup_branch) NLJGenjesPileUpPtRefup_branch->SetAddress(&NLJGenjesPileUpPtRefup_);
  MVVXjesPileUpPtRefup_branch = tree->GetBranch("MVVXjesPileUpPtRefup");
  if (MVVXjesPileUpPtRefup_branch) MVVXjesPileUpPtRefup_branch->SetAddress(&MVVXjesPileUpPtRefup_);
  PtVVXjesPileUpPtRefup_branch = tree->GetBranch("PtVVXjesPileUpPtRefup");
  if (PtVVXjesPileUpPtRefup_branch) PtVVXjesPileUpPtRefup_branch->SetAddress(&PtVVXjesPileUpPtRefup_);
  HTjesPileUpPtRefup_branch = tree->GetBranch("HTjesPileUpPtRefup");
  if (HTjesPileUpPtRefup_branch) HTjesPileUpPtRefup_branch->SetAddress(&HTjesPileUpPtRefup_);
  HTJjesPileUpPtRefup_branch = tree->GetBranch("HTJjesPileUpPtRefup");
  if (HTJjesPileUpPtRefup_branch) HTJjesPileUpPtRefup_branch->SetAddress(&HTJjesPileUpPtRefup_);
  HTFJjesPileUpPtRefup_branch = tree->GetBranch("HTFJjesPileUpPtRefup");
  if (HTFJjesPileUpPtRefup_branch) HTFJjesPileUpPtRefup_branch->SetAddress(&HTFJjesPileUpPtRefup_);
  SumPtFJjesPileUpPtRefup_branch = tree->GetBranch("SumPtFJjesPileUpPtRefup");
  if (SumPtFJjesPileUpPtRefup_branch) SumPtFJjesPileUpPtRefup_branch->SetAddress(&SumPtFJjesPileUpPtRefup_);
  SumPtJjesPileUpPtRefup_branch = tree->GetBranch("SumPtJjesPileUpPtRefup");
  if (SumPtJjesPileUpPtRefup_branch) SumPtJjesPileUpPtRefup_branch->SetAddress(&SumPtJjesPileUpPtRefup_);
  NFJjesPileUpPtRefdn_branch = tree->GetBranch("NFJjesPileUpPtRefdn");
  if (NFJjesPileUpPtRefdn_branch) NFJjesPileUpPtRefdn_branch->SetAddress(&NFJjesPileUpPtRefdn_);
  VMD0jesPileUpPtRefdn_branch = tree->GetBranch("VMD0jesPileUpPtRefdn");
  if (VMD0jesPileUpPtRefdn_branch) VMD0jesPileUpPtRefdn_branch->SetAddress(&VMD0jesPileUpPtRefdn_);
  VMD1jesPileUpPtRefdn_branch = tree->GetBranch("VMD1jesPileUpPtRefdn");
  if (VMD1jesPileUpPtRefdn_branch) VMD1jesPileUpPtRefdn_branch->SetAddress(&VMD1jesPileUpPtRefdn_);
  VMD2jesPileUpPtRefdn_branch = tree->GetBranch("VMD2jesPileUpPtRefdn");
  if (VMD2jesPileUpPtRefdn_branch) VMD2jesPileUpPtRefdn_branch->SetAddress(&VMD2jesPileUpPtRefdn_);
  VMD3jesPileUpPtRefdn_branch = tree->GetBranch("VMD3jesPileUpPtRefdn");
  if (VMD3jesPileUpPtRefdn_branch) VMD3jesPileUpPtRefdn_branch->SetAddress(&VMD3jesPileUpPtRefdn_);
  VMD4jesPileUpPtRefdn_branch = tree->GetBranch("VMD4jesPileUpPtRefdn");
  if (VMD4jesPileUpPtRefdn_branch) VMD4jesPileUpPtRefdn_branch->SetAddress(&VMD4jesPileUpPtRefdn_);
  WMD0jesPileUpPtRefdn_branch = tree->GetBranch("WMD0jesPileUpPtRefdn");
  if (WMD0jesPileUpPtRefdn_branch) WMD0jesPileUpPtRefdn_branch->SetAddress(&WMD0jesPileUpPtRefdn_);
  WMD1jesPileUpPtRefdn_branch = tree->GetBranch("WMD1jesPileUpPtRefdn");
  if (WMD1jesPileUpPtRefdn_branch) WMD1jesPileUpPtRefdn_branch->SetAddress(&WMD1jesPileUpPtRefdn_);
  WMD2jesPileUpPtRefdn_branch = tree->GetBranch("WMD2jesPileUpPtRefdn");
  if (WMD2jesPileUpPtRefdn_branch) WMD2jesPileUpPtRefdn_branch->SetAddress(&WMD2jesPileUpPtRefdn_);
  WMD3jesPileUpPtRefdn_branch = tree->GetBranch("WMD3jesPileUpPtRefdn");
  if (WMD3jesPileUpPtRefdn_branch) WMD3jesPileUpPtRefdn_branch->SetAddress(&WMD3jesPileUpPtRefdn_);
  WMD4jesPileUpPtRefdn_branch = tree->GetBranch("WMD4jesPileUpPtRefdn");
  if (WMD4jesPileUpPtRefdn_branch) WMD4jesPileUpPtRefdn_branch->SetAddress(&WMD4jesPileUpPtRefdn_);
  NQGen0jesPileUpPtRefdn_branch = tree->GetBranch("NQGen0jesPileUpPtRefdn");
  if (NQGen0jesPileUpPtRefdn_branch) NQGen0jesPileUpPtRefdn_branch->SetAddress(&NQGen0jesPileUpPtRefdn_);
  NQGen1jesPileUpPtRefdn_branch = tree->GetBranch("NQGen1jesPileUpPtRefdn");
  if (NQGen1jesPileUpPtRefdn_branch) NQGen1jesPileUpPtRefdn_branch->SetAddress(&NQGen1jesPileUpPtRefdn_);
  NQGen2jesPileUpPtRefdn_branch = tree->GetBranch("NQGen2jesPileUpPtRefdn");
  if (NQGen2jesPileUpPtRefdn_branch) NQGen2jesPileUpPtRefdn_branch->SetAddress(&NQGen2jesPileUpPtRefdn_);
  NQGen3jesPileUpPtRefdn_branch = tree->GetBranch("NQGen3jesPileUpPtRefdn");
  if (NQGen3jesPileUpPtRefdn_branch) NQGen3jesPileUpPtRefdn_branch->SetAddress(&NQGen3jesPileUpPtRefdn_);
  NQGen4jesPileUpPtRefdn_branch = tree->GetBranch("NQGen4jesPileUpPtRefdn");
  if (NQGen4jesPileUpPtRefdn_branch) NQGen4jesPileUpPtRefdn_branch->SetAddress(&NQGen4jesPileUpPtRefdn_);
  NBGen0jesPileUpPtRefdn_branch = tree->GetBranch("NBGen0jesPileUpPtRefdn");
  if (NBGen0jesPileUpPtRefdn_branch) NBGen0jesPileUpPtRefdn_branch->SetAddress(&NBGen0jesPileUpPtRefdn_);
  NBGen1jesPileUpPtRefdn_branch = tree->GetBranch("NBGen1jesPileUpPtRefdn");
  if (NBGen1jesPileUpPtRefdn_branch) NBGen1jesPileUpPtRefdn_branch->SetAddress(&NBGen1jesPileUpPtRefdn_);
  NBGen2jesPileUpPtRefdn_branch = tree->GetBranch("NBGen2jesPileUpPtRefdn");
  if (NBGen2jesPileUpPtRefdn_branch) NBGen2jesPileUpPtRefdn_branch->SetAddress(&NBGen2jesPileUpPtRefdn_);
  NBGen3jesPileUpPtRefdn_branch = tree->GetBranch("NBGen3jesPileUpPtRefdn");
  if (NBGen3jesPileUpPtRefdn_branch) NBGen3jesPileUpPtRefdn_branch->SetAddress(&NBGen3jesPileUpPtRefdn_);
  NBGen4jesPileUpPtRefdn_branch = tree->GetBranch("NBGen4jesPileUpPtRefdn");
  if (NBGen4jesPileUpPtRefdn_branch) NBGen4jesPileUpPtRefdn_branch->SetAddress(&NBGen4jesPileUpPtRefdn_);
  NLGen0jesPileUpPtRefdn_branch = tree->GetBranch("NLGen0jesPileUpPtRefdn");
  if (NLGen0jesPileUpPtRefdn_branch) NLGen0jesPileUpPtRefdn_branch->SetAddress(&NLGen0jesPileUpPtRefdn_);
  NLGen1jesPileUpPtRefdn_branch = tree->GetBranch("NLGen1jesPileUpPtRefdn");
  if (NLGen1jesPileUpPtRefdn_branch) NLGen1jesPileUpPtRefdn_branch->SetAddress(&NLGen1jesPileUpPtRefdn_);
  NLGen2jesPileUpPtRefdn_branch = tree->GetBranch("NLGen2jesPileUpPtRefdn");
  if (NLGen2jesPileUpPtRefdn_branch) NLGen2jesPileUpPtRefdn_branch->SetAddress(&NLGen2jesPileUpPtRefdn_);
  NLGen3jesPileUpPtRefdn_branch = tree->GetBranch("NLGen3jesPileUpPtRefdn");
  if (NLGen3jesPileUpPtRefdn_branch) NLGen3jesPileUpPtRefdn_branch->SetAddress(&NLGen3jesPileUpPtRefdn_);
  NLGen4jesPileUpPtRefdn_branch = tree->GetBranch("NLGen4jesPileUpPtRefdn");
  if (NLGen4jesPileUpPtRefdn_branch) NLGen4jesPileUpPtRefdn_branch->SetAddress(&NLGen4jesPileUpPtRefdn_);
  NVQGen0jesPileUpPtRefdn_branch = tree->GetBranch("NVQGen0jesPileUpPtRefdn");
  if (NVQGen0jesPileUpPtRefdn_branch) NVQGen0jesPileUpPtRefdn_branch->SetAddress(&NVQGen0jesPileUpPtRefdn_);
  NVQGen1jesPileUpPtRefdn_branch = tree->GetBranch("NVQGen1jesPileUpPtRefdn");
  if (NVQGen1jesPileUpPtRefdn_branch) NVQGen1jesPileUpPtRefdn_branch->SetAddress(&NVQGen1jesPileUpPtRefdn_);
  NVQGen2jesPileUpPtRefdn_branch = tree->GetBranch("NVQGen2jesPileUpPtRefdn");
  if (NVQGen2jesPileUpPtRefdn_branch) NVQGen2jesPileUpPtRefdn_branch->SetAddress(&NVQGen2jesPileUpPtRefdn_);
  NVQGen3jesPileUpPtRefdn_branch = tree->GetBranch("NVQGen3jesPileUpPtRefdn");
  if (NVQGen3jesPileUpPtRefdn_branch) NVQGen3jesPileUpPtRefdn_branch->SetAddress(&NVQGen3jesPileUpPtRefdn_);
  NVQGen4jesPileUpPtRefdn_branch = tree->GetBranch("NVQGen4jesPileUpPtRefdn");
  if (NVQGen4jesPileUpPtRefdn_branch) NVQGen4jesPileUpPtRefdn_branch->SetAddress(&NVQGen4jesPileUpPtRefdn_);
  NiFJjesPileUpPtRefdn_branch = tree->GetBranch("NiFJjesPileUpPtRefdn");
  if (NiFJjesPileUpPtRefdn_branch) NiFJjesPileUpPtRefdn_branch->SetAddress(&NiFJjesPileUpPtRefdn_);
  iVMD0jesPileUpPtRefdn_branch = tree->GetBranch("iVMD0jesPileUpPtRefdn");
  if (iVMD0jesPileUpPtRefdn_branch) iVMD0jesPileUpPtRefdn_branch->SetAddress(&iVMD0jesPileUpPtRefdn_);
  iVMD1jesPileUpPtRefdn_branch = tree->GetBranch("iVMD1jesPileUpPtRefdn");
  if (iVMD1jesPileUpPtRefdn_branch) iVMD1jesPileUpPtRefdn_branch->SetAddress(&iVMD1jesPileUpPtRefdn_);
  iVMD2jesPileUpPtRefdn_branch = tree->GetBranch("iVMD2jesPileUpPtRefdn");
  if (iVMD2jesPileUpPtRefdn_branch) iVMD2jesPileUpPtRefdn_branch->SetAddress(&iVMD2jesPileUpPtRefdn_);
  iVMD3jesPileUpPtRefdn_branch = tree->GetBranch("iVMD3jesPileUpPtRefdn");
  if (iVMD3jesPileUpPtRefdn_branch) iVMD3jesPileUpPtRefdn_branch->SetAddress(&iVMD3jesPileUpPtRefdn_);
  iVMD4jesPileUpPtRefdn_branch = tree->GetBranch("iVMD4jesPileUpPtRefdn");
  if (iVMD4jesPileUpPtRefdn_branch) iVMD4jesPileUpPtRefdn_branch->SetAddress(&iVMD4jesPileUpPtRefdn_);
  iWMD0jesPileUpPtRefdn_branch = tree->GetBranch("iWMD0jesPileUpPtRefdn");
  if (iWMD0jesPileUpPtRefdn_branch) iWMD0jesPileUpPtRefdn_branch->SetAddress(&iWMD0jesPileUpPtRefdn_);
  iWMD1jesPileUpPtRefdn_branch = tree->GetBranch("iWMD1jesPileUpPtRefdn");
  if (iWMD1jesPileUpPtRefdn_branch) iWMD1jesPileUpPtRefdn_branch->SetAddress(&iWMD1jesPileUpPtRefdn_);
  iWMD2jesPileUpPtRefdn_branch = tree->GetBranch("iWMD2jesPileUpPtRefdn");
  if (iWMD2jesPileUpPtRefdn_branch) iWMD2jesPileUpPtRefdn_branch->SetAddress(&iWMD2jesPileUpPtRefdn_);
  iWMD3jesPileUpPtRefdn_branch = tree->GetBranch("iWMD3jesPileUpPtRefdn");
  if (iWMD3jesPileUpPtRefdn_branch) iWMD3jesPileUpPtRefdn_branch->SetAddress(&iWMD3jesPileUpPtRefdn_);
  iWMD4jesPileUpPtRefdn_branch = tree->GetBranch("iWMD4jesPileUpPtRefdn");
  if (iWMD4jesPileUpPtRefdn_branch) iWMD4jesPileUpPtRefdn_branch->SetAddress(&iWMD4jesPileUpPtRefdn_);
  NJjesPileUpPtRefdn_branch = tree->GetBranch("NJjesPileUpPtRefdn");
  if (NJjesPileUpPtRefdn_branch) NJjesPileUpPtRefdn_branch->SetAddress(&NJjesPileUpPtRefdn_);
  NbLoosejesPileUpPtRefdn_branch = tree->GetBranch("NbLoosejesPileUpPtRefdn");
  if (NbLoosejesPileUpPtRefdn_branch) NbLoosejesPileUpPtRefdn_branch->SetAddress(&NbLoosejesPileUpPtRefdn_);
  NbMediumjesPileUpPtRefdn_branch = tree->GetBranch("NbMediumjesPileUpPtRefdn");
  if (NbMediumjesPileUpPtRefdn_branch) NbMediumjesPileUpPtRefdn_branch->SetAddress(&NbMediumjesPileUpPtRefdn_);
  NbTightjesPileUpPtRefdn_branch = tree->GetBranch("NbTightjesPileUpPtRefdn");
  if (NbTightjesPileUpPtRefdn_branch) NbTightjesPileUpPtRefdn_branch->SetAddress(&NbTightjesPileUpPtRefdn_);
  NoORNbLoosejesPileUpPtRefdn_branch = tree->GetBranch("NoORNbLoosejesPileUpPtRefdn");
  if (NoORNbLoosejesPileUpPtRefdn_branch) NoORNbLoosejesPileUpPtRefdn_branch->SetAddress(&NoORNbLoosejesPileUpPtRefdn_);
  NoORNbMediumjesPileUpPtRefdn_branch = tree->GetBranch("NoORNbMediumjesPileUpPtRefdn");
  if (NoORNbMediumjesPileUpPtRefdn_branch) NoORNbMediumjesPileUpPtRefdn_branch->SetAddress(&NoORNbMediumjesPileUpPtRefdn_);
  NoORNbTightjesPileUpPtRefdn_branch = tree->GetBranch("NoORNbTightjesPileUpPtRefdn");
  if (NoORNbTightjesPileUpPtRefdn_branch) NoORNbTightjesPileUpPtRefdn_branch->SetAddress(&NoORNbTightjesPileUpPtRefdn_);
  NQJGenjesPileUpPtRefdn_branch = tree->GetBranch("NQJGenjesPileUpPtRefdn");
  if (NQJGenjesPileUpPtRefdn_branch) NQJGenjesPileUpPtRefdn_branch->SetAddress(&NQJGenjesPileUpPtRefdn_);
  NBJGenjesPileUpPtRefdn_branch = tree->GetBranch("NBJGenjesPileUpPtRefdn");
  if (NBJGenjesPileUpPtRefdn_branch) NBJGenjesPileUpPtRefdn_branch->SetAddress(&NBJGenjesPileUpPtRefdn_);
  NLJGenjesPileUpPtRefdn_branch = tree->GetBranch("NLJGenjesPileUpPtRefdn");
  if (NLJGenjesPileUpPtRefdn_branch) NLJGenjesPileUpPtRefdn_branch->SetAddress(&NLJGenjesPileUpPtRefdn_);
  MVVXjesPileUpPtRefdn_branch = tree->GetBranch("MVVXjesPileUpPtRefdn");
  if (MVVXjesPileUpPtRefdn_branch) MVVXjesPileUpPtRefdn_branch->SetAddress(&MVVXjesPileUpPtRefdn_);
  PtVVXjesPileUpPtRefdn_branch = tree->GetBranch("PtVVXjesPileUpPtRefdn");
  if (PtVVXjesPileUpPtRefdn_branch) PtVVXjesPileUpPtRefdn_branch->SetAddress(&PtVVXjesPileUpPtRefdn_);
  HTjesPileUpPtRefdn_branch = tree->GetBranch("HTjesPileUpPtRefdn");
  if (HTjesPileUpPtRefdn_branch) HTjesPileUpPtRefdn_branch->SetAddress(&HTjesPileUpPtRefdn_);
  HTJjesPileUpPtRefdn_branch = tree->GetBranch("HTJjesPileUpPtRefdn");
  if (HTJjesPileUpPtRefdn_branch) HTJjesPileUpPtRefdn_branch->SetAddress(&HTJjesPileUpPtRefdn_);
  HTFJjesPileUpPtRefdn_branch = tree->GetBranch("HTFJjesPileUpPtRefdn");
  if (HTFJjesPileUpPtRefdn_branch) HTFJjesPileUpPtRefdn_branch->SetAddress(&HTFJjesPileUpPtRefdn_);
  SumPtFJjesPileUpPtRefdn_branch = tree->GetBranch("SumPtFJjesPileUpPtRefdn");
  if (SumPtFJjesPileUpPtRefdn_branch) SumPtFJjesPileUpPtRefdn_branch->SetAddress(&SumPtFJjesPileUpPtRefdn_);
  SumPtJjesPileUpPtRefdn_branch = tree->GetBranch("SumPtJjesPileUpPtRefdn");
  if (SumPtJjesPileUpPtRefdn_branch) SumPtJjesPileUpPtRefdn_branch->SetAddress(&SumPtJjesPileUpPtRefdn_);
  NFJjesPileUpPtBBup_branch = tree->GetBranch("NFJjesPileUpPtBBup");
  if (NFJjesPileUpPtBBup_branch) NFJjesPileUpPtBBup_branch->SetAddress(&NFJjesPileUpPtBBup_);
  VMD0jesPileUpPtBBup_branch = tree->GetBranch("VMD0jesPileUpPtBBup");
  if (VMD0jesPileUpPtBBup_branch) VMD0jesPileUpPtBBup_branch->SetAddress(&VMD0jesPileUpPtBBup_);
  VMD1jesPileUpPtBBup_branch = tree->GetBranch("VMD1jesPileUpPtBBup");
  if (VMD1jesPileUpPtBBup_branch) VMD1jesPileUpPtBBup_branch->SetAddress(&VMD1jesPileUpPtBBup_);
  VMD2jesPileUpPtBBup_branch = tree->GetBranch("VMD2jesPileUpPtBBup");
  if (VMD2jesPileUpPtBBup_branch) VMD2jesPileUpPtBBup_branch->SetAddress(&VMD2jesPileUpPtBBup_);
  VMD3jesPileUpPtBBup_branch = tree->GetBranch("VMD3jesPileUpPtBBup");
  if (VMD3jesPileUpPtBBup_branch) VMD3jesPileUpPtBBup_branch->SetAddress(&VMD3jesPileUpPtBBup_);
  VMD4jesPileUpPtBBup_branch = tree->GetBranch("VMD4jesPileUpPtBBup");
  if (VMD4jesPileUpPtBBup_branch) VMD4jesPileUpPtBBup_branch->SetAddress(&VMD4jesPileUpPtBBup_);
  WMD0jesPileUpPtBBup_branch = tree->GetBranch("WMD0jesPileUpPtBBup");
  if (WMD0jesPileUpPtBBup_branch) WMD0jesPileUpPtBBup_branch->SetAddress(&WMD0jesPileUpPtBBup_);
  WMD1jesPileUpPtBBup_branch = tree->GetBranch("WMD1jesPileUpPtBBup");
  if (WMD1jesPileUpPtBBup_branch) WMD1jesPileUpPtBBup_branch->SetAddress(&WMD1jesPileUpPtBBup_);
  WMD2jesPileUpPtBBup_branch = tree->GetBranch("WMD2jesPileUpPtBBup");
  if (WMD2jesPileUpPtBBup_branch) WMD2jesPileUpPtBBup_branch->SetAddress(&WMD2jesPileUpPtBBup_);
  WMD3jesPileUpPtBBup_branch = tree->GetBranch("WMD3jesPileUpPtBBup");
  if (WMD3jesPileUpPtBBup_branch) WMD3jesPileUpPtBBup_branch->SetAddress(&WMD3jesPileUpPtBBup_);
  WMD4jesPileUpPtBBup_branch = tree->GetBranch("WMD4jesPileUpPtBBup");
  if (WMD4jesPileUpPtBBup_branch) WMD4jesPileUpPtBBup_branch->SetAddress(&WMD4jesPileUpPtBBup_);
  NQGen0jesPileUpPtBBup_branch = tree->GetBranch("NQGen0jesPileUpPtBBup");
  if (NQGen0jesPileUpPtBBup_branch) NQGen0jesPileUpPtBBup_branch->SetAddress(&NQGen0jesPileUpPtBBup_);
  NQGen1jesPileUpPtBBup_branch = tree->GetBranch("NQGen1jesPileUpPtBBup");
  if (NQGen1jesPileUpPtBBup_branch) NQGen1jesPileUpPtBBup_branch->SetAddress(&NQGen1jesPileUpPtBBup_);
  NQGen2jesPileUpPtBBup_branch = tree->GetBranch("NQGen2jesPileUpPtBBup");
  if (NQGen2jesPileUpPtBBup_branch) NQGen2jesPileUpPtBBup_branch->SetAddress(&NQGen2jesPileUpPtBBup_);
  NQGen3jesPileUpPtBBup_branch = tree->GetBranch("NQGen3jesPileUpPtBBup");
  if (NQGen3jesPileUpPtBBup_branch) NQGen3jesPileUpPtBBup_branch->SetAddress(&NQGen3jesPileUpPtBBup_);
  NQGen4jesPileUpPtBBup_branch = tree->GetBranch("NQGen4jesPileUpPtBBup");
  if (NQGen4jesPileUpPtBBup_branch) NQGen4jesPileUpPtBBup_branch->SetAddress(&NQGen4jesPileUpPtBBup_);
  NBGen0jesPileUpPtBBup_branch = tree->GetBranch("NBGen0jesPileUpPtBBup");
  if (NBGen0jesPileUpPtBBup_branch) NBGen0jesPileUpPtBBup_branch->SetAddress(&NBGen0jesPileUpPtBBup_);
  NBGen1jesPileUpPtBBup_branch = tree->GetBranch("NBGen1jesPileUpPtBBup");
  if (NBGen1jesPileUpPtBBup_branch) NBGen1jesPileUpPtBBup_branch->SetAddress(&NBGen1jesPileUpPtBBup_);
  NBGen2jesPileUpPtBBup_branch = tree->GetBranch("NBGen2jesPileUpPtBBup");
  if (NBGen2jesPileUpPtBBup_branch) NBGen2jesPileUpPtBBup_branch->SetAddress(&NBGen2jesPileUpPtBBup_);
  NBGen3jesPileUpPtBBup_branch = tree->GetBranch("NBGen3jesPileUpPtBBup");
  if (NBGen3jesPileUpPtBBup_branch) NBGen3jesPileUpPtBBup_branch->SetAddress(&NBGen3jesPileUpPtBBup_);
  NBGen4jesPileUpPtBBup_branch = tree->GetBranch("NBGen4jesPileUpPtBBup");
  if (NBGen4jesPileUpPtBBup_branch) NBGen4jesPileUpPtBBup_branch->SetAddress(&NBGen4jesPileUpPtBBup_);
  NLGen0jesPileUpPtBBup_branch = tree->GetBranch("NLGen0jesPileUpPtBBup");
  if (NLGen0jesPileUpPtBBup_branch) NLGen0jesPileUpPtBBup_branch->SetAddress(&NLGen0jesPileUpPtBBup_);
  NLGen1jesPileUpPtBBup_branch = tree->GetBranch("NLGen1jesPileUpPtBBup");
  if (NLGen1jesPileUpPtBBup_branch) NLGen1jesPileUpPtBBup_branch->SetAddress(&NLGen1jesPileUpPtBBup_);
  NLGen2jesPileUpPtBBup_branch = tree->GetBranch("NLGen2jesPileUpPtBBup");
  if (NLGen2jesPileUpPtBBup_branch) NLGen2jesPileUpPtBBup_branch->SetAddress(&NLGen2jesPileUpPtBBup_);
  NLGen3jesPileUpPtBBup_branch = tree->GetBranch("NLGen3jesPileUpPtBBup");
  if (NLGen3jesPileUpPtBBup_branch) NLGen3jesPileUpPtBBup_branch->SetAddress(&NLGen3jesPileUpPtBBup_);
  NLGen4jesPileUpPtBBup_branch = tree->GetBranch("NLGen4jesPileUpPtBBup");
  if (NLGen4jesPileUpPtBBup_branch) NLGen4jesPileUpPtBBup_branch->SetAddress(&NLGen4jesPileUpPtBBup_);
  NVQGen0jesPileUpPtBBup_branch = tree->GetBranch("NVQGen0jesPileUpPtBBup");
  if (NVQGen0jesPileUpPtBBup_branch) NVQGen0jesPileUpPtBBup_branch->SetAddress(&NVQGen0jesPileUpPtBBup_);
  NVQGen1jesPileUpPtBBup_branch = tree->GetBranch("NVQGen1jesPileUpPtBBup");
  if (NVQGen1jesPileUpPtBBup_branch) NVQGen1jesPileUpPtBBup_branch->SetAddress(&NVQGen1jesPileUpPtBBup_);
  NVQGen2jesPileUpPtBBup_branch = tree->GetBranch("NVQGen2jesPileUpPtBBup");
  if (NVQGen2jesPileUpPtBBup_branch) NVQGen2jesPileUpPtBBup_branch->SetAddress(&NVQGen2jesPileUpPtBBup_);
  NVQGen3jesPileUpPtBBup_branch = tree->GetBranch("NVQGen3jesPileUpPtBBup");
  if (NVQGen3jesPileUpPtBBup_branch) NVQGen3jesPileUpPtBBup_branch->SetAddress(&NVQGen3jesPileUpPtBBup_);
  NVQGen4jesPileUpPtBBup_branch = tree->GetBranch("NVQGen4jesPileUpPtBBup");
  if (NVQGen4jesPileUpPtBBup_branch) NVQGen4jesPileUpPtBBup_branch->SetAddress(&NVQGen4jesPileUpPtBBup_);
  NiFJjesPileUpPtBBup_branch = tree->GetBranch("NiFJjesPileUpPtBBup");
  if (NiFJjesPileUpPtBBup_branch) NiFJjesPileUpPtBBup_branch->SetAddress(&NiFJjesPileUpPtBBup_);
  iVMD0jesPileUpPtBBup_branch = tree->GetBranch("iVMD0jesPileUpPtBBup");
  if (iVMD0jesPileUpPtBBup_branch) iVMD0jesPileUpPtBBup_branch->SetAddress(&iVMD0jesPileUpPtBBup_);
  iVMD1jesPileUpPtBBup_branch = tree->GetBranch("iVMD1jesPileUpPtBBup");
  if (iVMD1jesPileUpPtBBup_branch) iVMD1jesPileUpPtBBup_branch->SetAddress(&iVMD1jesPileUpPtBBup_);
  iVMD2jesPileUpPtBBup_branch = tree->GetBranch("iVMD2jesPileUpPtBBup");
  if (iVMD2jesPileUpPtBBup_branch) iVMD2jesPileUpPtBBup_branch->SetAddress(&iVMD2jesPileUpPtBBup_);
  iVMD3jesPileUpPtBBup_branch = tree->GetBranch("iVMD3jesPileUpPtBBup");
  if (iVMD3jesPileUpPtBBup_branch) iVMD3jesPileUpPtBBup_branch->SetAddress(&iVMD3jesPileUpPtBBup_);
  iVMD4jesPileUpPtBBup_branch = tree->GetBranch("iVMD4jesPileUpPtBBup");
  if (iVMD4jesPileUpPtBBup_branch) iVMD4jesPileUpPtBBup_branch->SetAddress(&iVMD4jesPileUpPtBBup_);
  iWMD0jesPileUpPtBBup_branch = tree->GetBranch("iWMD0jesPileUpPtBBup");
  if (iWMD0jesPileUpPtBBup_branch) iWMD0jesPileUpPtBBup_branch->SetAddress(&iWMD0jesPileUpPtBBup_);
  iWMD1jesPileUpPtBBup_branch = tree->GetBranch("iWMD1jesPileUpPtBBup");
  if (iWMD1jesPileUpPtBBup_branch) iWMD1jesPileUpPtBBup_branch->SetAddress(&iWMD1jesPileUpPtBBup_);
  iWMD2jesPileUpPtBBup_branch = tree->GetBranch("iWMD2jesPileUpPtBBup");
  if (iWMD2jesPileUpPtBBup_branch) iWMD2jesPileUpPtBBup_branch->SetAddress(&iWMD2jesPileUpPtBBup_);
  iWMD3jesPileUpPtBBup_branch = tree->GetBranch("iWMD3jesPileUpPtBBup");
  if (iWMD3jesPileUpPtBBup_branch) iWMD3jesPileUpPtBBup_branch->SetAddress(&iWMD3jesPileUpPtBBup_);
  iWMD4jesPileUpPtBBup_branch = tree->GetBranch("iWMD4jesPileUpPtBBup");
  if (iWMD4jesPileUpPtBBup_branch) iWMD4jesPileUpPtBBup_branch->SetAddress(&iWMD4jesPileUpPtBBup_);
  NJjesPileUpPtBBup_branch = tree->GetBranch("NJjesPileUpPtBBup");
  if (NJjesPileUpPtBBup_branch) NJjesPileUpPtBBup_branch->SetAddress(&NJjesPileUpPtBBup_);
  NbLoosejesPileUpPtBBup_branch = tree->GetBranch("NbLoosejesPileUpPtBBup");
  if (NbLoosejesPileUpPtBBup_branch) NbLoosejesPileUpPtBBup_branch->SetAddress(&NbLoosejesPileUpPtBBup_);
  NbMediumjesPileUpPtBBup_branch = tree->GetBranch("NbMediumjesPileUpPtBBup");
  if (NbMediumjesPileUpPtBBup_branch) NbMediumjesPileUpPtBBup_branch->SetAddress(&NbMediumjesPileUpPtBBup_);
  NbTightjesPileUpPtBBup_branch = tree->GetBranch("NbTightjesPileUpPtBBup");
  if (NbTightjesPileUpPtBBup_branch) NbTightjesPileUpPtBBup_branch->SetAddress(&NbTightjesPileUpPtBBup_);
  NoORNbLoosejesPileUpPtBBup_branch = tree->GetBranch("NoORNbLoosejesPileUpPtBBup");
  if (NoORNbLoosejesPileUpPtBBup_branch) NoORNbLoosejesPileUpPtBBup_branch->SetAddress(&NoORNbLoosejesPileUpPtBBup_);
  NoORNbMediumjesPileUpPtBBup_branch = tree->GetBranch("NoORNbMediumjesPileUpPtBBup");
  if (NoORNbMediumjesPileUpPtBBup_branch) NoORNbMediumjesPileUpPtBBup_branch->SetAddress(&NoORNbMediumjesPileUpPtBBup_);
  NoORNbTightjesPileUpPtBBup_branch = tree->GetBranch("NoORNbTightjesPileUpPtBBup");
  if (NoORNbTightjesPileUpPtBBup_branch) NoORNbTightjesPileUpPtBBup_branch->SetAddress(&NoORNbTightjesPileUpPtBBup_);
  NQJGenjesPileUpPtBBup_branch = tree->GetBranch("NQJGenjesPileUpPtBBup");
  if (NQJGenjesPileUpPtBBup_branch) NQJGenjesPileUpPtBBup_branch->SetAddress(&NQJGenjesPileUpPtBBup_);
  NBJGenjesPileUpPtBBup_branch = tree->GetBranch("NBJGenjesPileUpPtBBup");
  if (NBJGenjesPileUpPtBBup_branch) NBJGenjesPileUpPtBBup_branch->SetAddress(&NBJGenjesPileUpPtBBup_);
  NLJGenjesPileUpPtBBup_branch = tree->GetBranch("NLJGenjesPileUpPtBBup");
  if (NLJGenjesPileUpPtBBup_branch) NLJGenjesPileUpPtBBup_branch->SetAddress(&NLJGenjesPileUpPtBBup_);
  MVVXjesPileUpPtBBup_branch = tree->GetBranch("MVVXjesPileUpPtBBup");
  if (MVVXjesPileUpPtBBup_branch) MVVXjesPileUpPtBBup_branch->SetAddress(&MVVXjesPileUpPtBBup_);
  PtVVXjesPileUpPtBBup_branch = tree->GetBranch("PtVVXjesPileUpPtBBup");
  if (PtVVXjesPileUpPtBBup_branch) PtVVXjesPileUpPtBBup_branch->SetAddress(&PtVVXjesPileUpPtBBup_);
  HTjesPileUpPtBBup_branch = tree->GetBranch("HTjesPileUpPtBBup");
  if (HTjesPileUpPtBBup_branch) HTjesPileUpPtBBup_branch->SetAddress(&HTjesPileUpPtBBup_);
  HTJjesPileUpPtBBup_branch = tree->GetBranch("HTJjesPileUpPtBBup");
  if (HTJjesPileUpPtBBup_branch) HTJjesPileUpPtBBup_branch->SetAddress(&HTJjesPileUpPtBBup_);
  HTFJjesPileUpPtBBup_branch = tree->GetBranch("HTFJjesPileUpPtBBup");
  if (HTFJjesPileUpPtBBup_branch) HTFJjesPileUpPtBBup_branch->SetAddress(&HTFJjesPileUpPtBBup_);
  SumPtFJjesPileUpPtBBup_branch = tree->GetBranch("SumPtFJjesPileUpPtBBup");
  if (SumPtFJjesPileUpPtBBup_branch) SumPtFJjesPileUpPtBBup_branch->SetAddress(&SumPtFJjesPileUpPtBBup_);
  SumPtJjesPileUpPtBBup_branch = tree->GetBranch("SumPtJjesPileUpPtBBup");
  if (SumPtJjesPileUpPtBBup_branch) SumPtJjesPileUpPtBBup_branch->SetAddress(&SumPtJjesPileUpPtBBup_);
  NFJjesPileUpPtBBdn_branch = tree->GetBranch("NFJjesPileUpPtBBdn");
  if (NFJjesPileUpPtBBdn_branch) NFJjesPileUpPtBBdn_branch->SetAddress(&NFJjesPileUpPtBBdn_);
  VMD0jesPileUpPtBBdn_branch = tree->GetBranch("VMD0jesPileUpPtBBdn");
  if (VMD0jesPileUpPtBBdn_branch) VMD0jesPileUpPtBBdn_branch->SetAddress(&VMD0jesPileUpPtBBdn_);
  VMD1jesPileUpPtBBdn_branch = tree->GetBranch("VMD1jesPileUpPtBBdn");
  if (VMD1jesPileUpPtBBdn_branch) VMD1jesPileUpPtBBdn_branch->SetAddress(&VMD1jesPileUpPtBBdn_);
  VMD2jesPileUpPtBBdn_branch = tree->GetBranch("VMD2jesPileUpPtBBdn");
  if (VMD2jesPileUpPtBBdn_branch) VMD2jesPileUpPtBBdn_branch->SetAddress(&VMD2jesPileUpPtBBdn_);
  VMD3jesPileUpPtBBdn_branch = tree->GetBranch("VMD3jesPileUpPtBBdn");
  if (VMD3jesPileUpPtBBdn_branch) VMD3jesPileUpPtBBdn_branch->SetAddress(&VMD3jesPileUpPtBBdn_);
  VMD4jesPileUpPtBBdn_branch = tree->GetBranch("VMD4jesPileUpPtBBdn");
  if (VMD4jesPileUpPtBBdn_branch) VMD4jesPileUpPtBBdn_branch->SetAddress(&VMD4jesPileUpPtBBdn_);
  WMD0jesPileUpPtBBdn_branch = tree->GetBranch("WMD0jesPileUpPtBBdn");
  if (WMD0jesPileUpPtBBdn_branch) WMD0jesPileUpPtBBdn_branch->SetAddress(&WMD0jesPileUpPtBBdn_);
  WMD1jesPileUpPtBBdn_branch = tree->GetBranch("WMD1jesPileUpPtBBdn");
  if (WMD1jesPileUpPtBBdn_branch) WMD1jesPileUpPtBBdn_branch->SetAddress(&WMD1jesPileUpPtBBdn_);
  WMD2jesPileUpPtBBdn_branch = tree->GetBranch("WMD2jesPileUpPtBBdn");
  if (WMD2jesPileUpPtBBdn_branch) WMD2jesPileUpPtBBdn_branch->SetAddress(&WMD2jesPileUpPtBBdn_);
  WMD3jesPileUpPtBBdn_branch = tree->GetBranch("WMD3jesPileUpPtBBdn");
  if (WMD3jesPileUpPtBBdn_branch) WMD3jesPileUpPtBBdn_branch->SetAddress(&WMD3jesPileUpPtBBdn_);
  WMD4jesPileUpPtBBdn_branch = tree->GetBranch("WMD4jesPileUpPtBBdn");
  if (WMD4jesPileUpPtBBdn_branch) WMD4jesPileUpPtBBdn_branch->SetAddress(&WMD4jesPileUpPtBBdn_);
  NQGen0jesPileUpPtBBdn_branch = tree->GetBranch("NQGen0jesPileUpPtBBdn");
  if (NQGen0jesPileUpPtBBdn_branch) NQGen0jesPileUpPtBBdn_branch->SetAddress(&NQGen0jesPileUpPtBBdn_);
  NQGen1jesPileUpPtBBdn_branch = tree->GetBranch("NQGen1jesPileUpPtBBdn");
  if (NQGen1jesPileUpPtBBdn_branch) NQGen1jesPileUpPtBBdn_branch->SetAddress(&NQGen1jesPileUpPtBBdn_);
  NQGen2jesPileUpPtBBdn_branch = tree->GetBranch("NQGen2jesPileUpPtBBdn");
  if (NQGen2jesPileUpPtBBdn_branch) NQGen2jesPileUpPtBBdn_branch->SetAddress(&NQGen2jesPileUpPtBBdn_);
  NQGen3jesPileUpPtBBdn_branch = tree->GetBranch("NQGen3jesPileUpPtBBdn");
  if (NQGen3jesPileUpPtBBdn_branch) NQGen3jesPileUpPtBBdn_branch->SetAddress(&NQGen3jesPileUpPtBBdn_);
  NQGen4jesPileUpPtBBdn_branch = tree->GetBranch("NQGen4jesPileUpPtBBdn");
  if (NQGen4jesPileUpPtBBdn_branch) NQGen4jesPileUpPtBBdn_branch->SetAddress(&NQGen4jesPileUpPtBBdn_);
  NBGen0jesPileUpPtBBdn_branch = tree->GetBranch("NBGen0jesPileUpPtBBdn");
  if (NBGen0jesPileUpPtBBdn_branch) NBGen0jesPileUpPtBBdn_branch->SetAddress(&NBGen0jesPileUpPtBBdn_);
  NBGen1jesPileUpPtBBdn_branch = tree->GetBranch("NBGen1jesPileUpPtBBdn");
  if (NBGen1jesPileUpPtBBdn_branch) NBGen1jesPileUpPtBBdn_branch->SetAddress(&NBGen1jesPileUpPtBBdn_);
  NBGen2jesPileUpPtBBdn_branch = tree->GetBranch("NBGen2jesPileUpPtBBdn");
  if (NBGen2jesPileUpPtBBdn_branch) NBGen2jesPileUpPtBBdn_branch->SetAddress(&NBGen2jesPileUpPtBBdn_);
  NBGen3jesPileUpPtBBdn_branch = tree->GetBranch("NBGen3jesPileUpPtBBdn");
  if (NBGen3jesPileUpPtBBdn_branch) NBGen3jesPileUpPtBBdn_branch->SetAddress(&NBGen3jesPileUpPtBBdn_);
  NBGen4jesPileUpPtBBdn_branch = tree->GetBranch("NBGen4jesPileUpPtBBdn");
  if (NBGen4jesPileUpPtBBdn_branch) NBGen4jesPileUpPtBBdn_branch->SetAddress(&NBGen4jesPileUpPtBBdn_);
  NLGen0jesPileUpPtBBdn_branch = tree->GetBranch("NLGen0jesPileUpPtBBdn");
  if (NLGen0jesPileUpPtBBdn_branch) NLGen0jesPileUpPtBBdn_branch->SetAddress(&NLGen0jesPileUpPtBBdn_);
  NLGen1jesPileUpPtBBdn_branch = tree->GetBranch("NLGen1jesPileUpPtBBdn");
  if (NLGen1jesPileUpPtBBdn_branch) NLGen1jesPileUpPtBBdn_branch->SetAddress(&NLGen1jesPileUpPtBBdn_);
  NLGen2jesPileUpPtBBdn_branch = tree->GetBranch("NLGen2jesPileUpPtBBdn");
  if (NLGen2jesPileUpPtBBdn_branch) NLGen2jesPileUpPtBBdn_branch->SetAddress(&NLGen2jesPileUpPtBBdn_);
  NLGen3jesPileUpPtBBdn_branch = tree->GetBranch("NLGen3jesPileUpPtBBdn");
  if (NLGen3jesPileUpPtBBdn_branch) NLGen3jesPileUpPtBBdn_branch->SetAddress(&NLGen3jesPileUpPtBBdn_);
  NLGen4jesPileUpPtBBdn_branch = tree->GetBranch("NLGen4jesPileUpPtBBdn");
  if (NLGen4jesPileUpPtBBdn_branch) NLGen4jesPileUpPtBBdn_branch->SetAddress(&NLGen4jesPileUpPtBBdn_);
  NVQGen0jesPileUpPtBBdn_branch = tree->GetBranch("NVQGen0jesPileUpPtBBdn");
  if (NVQGen0jesPileUpPtBBdn_branch) NVQGen0jesPileUpPtBBdn_branch->SetAddress(&NVQGen0jesPileUpPtBBdn_);
  NVQGen1jesPileUpPtBBdn_branch = tree->GetBranch("NVQGen1jesPileUpPtBBdn");
  if (NVQGen1jesPileUpPtBBdn_branch) NVQGen1jesPileUpPtBBdn_branch->SetAddress(&NVQGen1jesPileUpPtBBdn_);
  NVQGen2jesPileUpPtBBdn_branch = tree->GetBranch("NVQGen2jesPileUpPtBBdn");
  if (NVQGen2jesPileUpPtBBdn_branch) NVQGen2jesPileUpPtBBdn_branch->SetAddress(&NVQGen2jesPileUpPtBBdn_);
  NVQGen3jesPileUpPtBBdn_branch = tree->GetBranch("NVQGen3jesPileUpPtBBdn");
  if (NVQGen3jesPileUpPtBBdn_branch) NVQGen3jesPileUpPtBBdn_branch->SetAddress(&NVQGen3jesPileUpPtBBdn_);
  NVQGen4jesPileUpPtBBdn_branch = tree->GetBranch("NVQGen4jesPileUpPtBBdn");
  if (NVQGen4jesPileUpPtBBdn_branch) NVQGen4jesPileUpPtBBdn_branch->SetAddress(&NVQGen4jesPileUpPtBBdn_);
  NiFJjesPileUpPtBBdn_branch = tree->GetBranch("NiFJjesPileUpPtBBdn");
  if (NiFJjesPileUpPtBBdn_branch) NiFJjesPileUpPtBBdn_branch->SetAddress(&NiFJjesPileUpPtBBdn_);
  iVMD0jesPileUpPtBBdn_branch = tree->GetBranch("iVMD0jesPileUpPtBBdn");
  if (iVMD0jesPileUpPtBBdn_branch) iVMD0jesPileUpPtBBdn_branch->SetAddress(&iVMD0jesPileUpPtBBdn_);
  iVMD1jesPileUpPtBBdn_branch = tree->GetBranch("iVMD1jesPileUpPtBBdn");
  if (iVMD1jesPileUpPtBBdn_branch) iVMD1jesPileUpPtBBdn_branch->SetAddress(&iVMD1jesPileUpPtBBdn_);
  iVMD2jesPileUpPtBBdn_branch = tree->GetBranch("iVMD2jesPileUpPtBBdn");
  if (iVMD2jesPileUpPtBBdn_branch) iVMD2jesPileUpPtBBdn_branch->SetAddress(&iVMD2jesPileUpPtBBdn_);
  iVMD3jesPileUpPtBBdn_branch = tree->GetBranch("iVMD3jesPileUpPtBBdn");
  if (iVMD3jesPileUpPtBBdn_branch) iVMD3jesPileUpPtBBdn_branch->SetAddress(&iVMD3jesPileUpPtBBdn_);
  iVMD4jesPileUpPtBBdn_branch = tree->GetBranch("iVMD4jesPileUpPtBBdn");
  if (iVMD4jesPileUpPtBBdn_branch) iVMD4jesPileUpPtBBdn_branch->SetAddress(&iVMD4jesPileUpPtBBdn_);
  iWMD0jesPileUpPtBBdn_branch = tree->GetBranch("iWMD0jesPileUpPtBBdn");
  if (iWMD0jesPileUpPtBBdn_branch) iWMD0jesPileUpPtBBdn_branch->SetAddress(&iWMD0jesPileUpPtBBdn_);
  iWMD1jesPileUpPtBBdn_branch = tree->GetBranch("iWMD1jesPileUpPtBBdn");
  if (iWMD1jesPileUpPtBBdn_branch) iWMD1jesPileUpPtBBdn_branch->SetAddress(&iWMD1jesPileUpPtBBdn_);
  iWMD2jesPileUpPtBBdn_branch = tree->GetBranch("iWMD2jesPileUpPtBBdn");
  if (iWMD2jesPileUpPtBBdn_branch) iWMD2jesPileUpPtBBdn_branch->SetAddress(&iWMD2jesPileUpPtBBdn_);
  iWMD3jesPileUpPtBBdn_branch = tree->GetBranch("iWMD3jesPileUpPtBBdn");
  if (iWMD3jesPileUpPtBBdn_branch) iWMD3jesPileUpPtBBdn_branch->SetAddress(&iWMD3jesPileUpPtBBdn_);
  iWMD4jesPileUpPtBBdn_branch = tree->GetBranch("iWMD4jesPileUpPtBBdn");
  if (iWMD4jesPileUpPtBBdn_branch) iWMD4jesPileUpPtBBdn_branch->SetAddress(&iWMD4jesPileUpPtBBdn_);
  NJjesPileUpPtBBdn_branch = tree->GetBranch("NJjesPileUpPtBBdn");
  if (NJjesPileUpPtBBdn_branch) NJjesPileUpPtBBdn_branch->SetAddress(&NJjesPileUpPtBBdn_);
  NbLoosejesPileUpPtBBdn_branch = tree->GetBranch("NbLoosejesPileUpPtBBdn");
  if (NbLoosejesPileUpPtBBdn_branch) NbLoosejesPileUpPtBBdn_branch->SetAddress(&NbLoosejesPileUpPtBBdn_);
  NbMediumjesPileUpPtBBdn_branch = tree->GetBranch("NbMediumjesPileUpPtBBdn");
  if (NbMediumjesPileUpPtBBdn_branch) NbMediumjesPileUpPtBBdn_branch->SetAddress(&NbMediumjesPileUpPtBBdn_);
  NbTightjesPileUpPtBBdn_branch = tree->GetBranch("NbTightjesPileUpPtBBdn");
  if (NbTightjesPileUpPtBBdn_branch) NbTightjesPileUpPtBBdn_branch->SetAddress(&NbTightjesPileUpPtBBdn_);
  NoORNbLoosejesPileUpPtBBdn_branch = tree->GetBranch("NoORNbLoosejesPileUpPtBBdn");
  if (NoORNbLoosejesPileUpPtBBdn_branch) NoORNbLoosejesPileUpPtBBdn_branch->SetAddress(&NoORNbLoosejesPileUpPtBBdn_);
  NoORNbMediumjesPileUpPtBBdn_branch = tree->GetBranch("NoORNbMediumjesPileUpPtBBdn");
  if (NoORNbMediumjesPileUpPtBBdn_branch) NoORNbMediumjesPileUpPtBBdn_branch->SetAddress(&NoORNbMediumjesPileUpPtBBdn_);
  NoORNbTightjesPileUpPtBBdn_branch = tree->GetBranch("NoORNbTightjesPileUpPtBBdn");
  if (NoORNbTightjesPileUpPtBBdn_branch) NoORNbTightjesPileUpPtBBdn_branch->SetAddress(&NoORNbTightjesPileUpPtBBdn_);
  NQJGenjesPileUpPtBBdn_branch = tree->GetBranch("NQJGenjesPileUpPtBBdn");
  if (NQJGenjesPileUpPtBBdn_branch) NQJGenjesPileUpPtBBdn_branch->SetAddress(&NQJGenjesPileUpPtBBdn_);
  NBJGenjesPileUpPtBBdn_branch = tree->GetBranch("NBJGenjesPileUpPtBBdn");
  if (NBJGenjesPileUpPtBBdn_branch) NBJGenjesPileUpPtBBdn_branch->SetAddress(&NBJGenjesPileUpPtBBdn_);
  NLJGenjesPileUpPtBBdn_branch = tree->GetBranch("NLJGenjesPileUpPtBBdn");
  if (NLJGenjesPileUpPtBBdn_branch) NLJGenjesPileUpPtBBdn_branch->SetAddress(&NLJGenjesPileUpPtBBdn_);
  MVVXjesPileUpPtBBdn_branch = tree->GetBranch("MVVXjesPileUpPtBBdn");
  if (MVVXjesPileUpPtBBdn_branch) MVVXjesPileUpPtBBdn_branch->SetAddress(&MVVXjesPileUpPtBBdn_);
  PtVVXjesPileUpPtBBdn_branch = tree->GetBranch("PtVVXjesPileUpPtBBdn");
  if (PtVVXjesPileUpPtBBdn_branch) PtVVXjesPileUpPtBBdn_branch->SetAddress(&PtVVXjesPileUpPtBBdn_);
  HTjesPileUpPtBBdn_branch = tree->GetBranch("HTjesPileUpPtBBdn");
  if (HTjesPileUpPtBBdn_branch) HTjesPileUpPtBBdn_branch->SetAddress(&HTjesPileUpPtBBdn_);
  HTJjesPileUpPtBBdn_branch = tree->GetBranch("HTJjesPileUpPtBBdn");
  if (HTJjesPileUpPtBBdn_branch) HTJjesPileUpPtBBdn_branch->SetAddress(&HTJjesPileUpPtBBdn_);
  HTFJjesPileUpPtBBdn_branch = tree->GetBranch("HTFJjesPileUpPtBBdn");
  if (HTFJjesPileUpPtBBdn_branch) HTFJjesPileUpPtBBdn_branch->SetAddress(&HTFJjesPileUpPtBBdn_);
  SumPtFJjesPileUpPtBBdn_branch = tree->GetBranch("SumPtFJjesPileUpPtBBdn");
  if (SumPtFJjesPileUpPtBBdn_branch) SumPtFJjesPileUpPtBBdn_branch->SetAddress(&SumPtFJjesPileUpPtBBdn_);
  SumPtJjesPileUpPtBBdn_branch = tree->GetBranch("SumPtJjesPileUpPtBBdn");
  if (SumPtJjesPileUpPtBBdn_branch) SumPtJjesPileUpPtBBdn_branch->SetAddress(&SumPtJjesPileUpPtBBdn_);
  NFJjesPileUpPtEC1up_branch = tree->GetBranch("NFJjesPileUpPtEC1up");
  if (NFJjesPileUpPtEC1up_branch) NFJjesPileUpPtEC1up_branch->SetAddress(&NFJjesPileUpPtEC1up_);
  VMD0jesPileUpPtEC1up_branch = tree->GetBranch("VMD0jesPileUpPtEC1up");
  if (VMD0jesPileUpPtEC1up_branch) VMD0jesPileUpPtEC1up_branch->SetAddress(&VMD0jesPileUpPtEC1up_);
  VMD1jesPileUpPtEC1up_branch = tree->GetBranch("VMD1jesPileUpPtEC1up");
  if (VMD1jesPileUpPtEC1up_branch) VMD1jesPileUpPtEC1up_branch->SetAddress(&VMD1jesPileUpPtEC1up_);
  VMD2jesPileUpPtEC1up_branch = tree->GetBranch("VMD2jesPileUpPtEC1up");
  if (VMD2jesPileUpPtEC1up_branch) VMD2jesPileUpPtEC1up_branch->SetAddress(&VMD2jesPileUpPtEC1up_);
  VMD3jesPileUpPtEC1up_branch = tree->GetBranch("VMD3jesPileUpPtEC1up");
  if (VMD3jesPileUpPtEC1up_branch) VMD3jesPileUpPtEC1up_branch->SetAddress(&VMD3jesPileUpPtEC1up_);
  VMD4jesPileUpPtEC1up_branch = tree->GetBranch("VMD4jesPileUpPtEC1up");
  if (VMD4jesPileUpPtEC1up_branch) VMD4jesPileUpPtEC1up_branch->SetAddress(&VMD4jesPileUpPtEC1up_);
  WMD0jesPileUpPtEC1up_branch = tree->GetBranch("WMD0jesPileUpPtEC1up");
  if (WMD0jesPileUpPtEC1up_branch) WMD0jesPileUpPtEC1up_branch->SetAddress(&WMD0jesPileUpPtEC1up_);
  WMD1jesPileUpPtEC1up_branch = tree->GetBranch("WMD1jesPileUpPtEC1up");
  if (WMD1jesPileUpPtEC1up_branch) WMD1jesPileUpPtEC1up_branch->SetAddress(&WMD1jesPileUpPtEC1up_);
  WMD2jesPileUpPtEC1up_branch = tree->GetBranch("WMD2jesPileUpPtEC1up");
  if (WMD2jesPileUpPtEC1up_branch) WMD2jesPileUpPtEC1up_branch->SetAddress(&WMD2jesPileUpPtEC1up_);
  WMD3jesPileUpPtEC1up_branch = tree->GetBranch("WMD3jesPileUpPtEC1up");
  if (WMD3jesPileUpPtEC1up_branch) WMD3jesPileUpPtEC1up_branch->SetAddress(&WMD3jesPileUpPtEC1up_);
  WMD4jesPileUpPtEC1up_branch = tree->GetBranch("WMD4jesPileUpPtEC1up");
  if (WMD4jesPileUpPtEC1up_branch) WMD4jesPileUpPtEC1up_branch->SetAddress(&WMD4jesPileUpPtEC1up_);
  NQGen0jesPileUpPtEC1up_branch = tree->GetBranch("NQGen0jesPileUpPtEC1up");
  if (NQGen0jesPileUpPtEC1up_branch) NQGen0jesPileUpPtEC1up_branch->SetAddress(&NQGen0jesPileUpPtEC1up_);
  NQGen1jesPileUpPtEC1up_branch = tree->GetBranch("NQGen1jesPileUpPtEC1up");
  if (NQGen1jesPileUpPtEC1up_branch) NQGen1jesPileUpPtEC1up_branch->SetAddress(&NQGen1jesPileUpPtEC1up_);
  NQGen2jesPileUpPtEC1up_branch = tree->GetBranch("NQGen2jesPileUpPtEC1up");
  if (NQGen2jesPileUpPtEC1up_branch) NQGen2jesPileUpPtEC1up_branch->SetAddress(&NQGen2jesPileUpPtEC1up_);
  NQGen3jesPileUpPtEC1up_branch = tree->GetBranch("NQGen3jesPileUpPtEC1up");
  if (NQGen3jesPileUpPtEC1up_branch) NQGen3jesPileUpPtEC1up_branch->SetAddress(&NQGen3jesPileUpPtEC1up_);
  NQGen4jesPileUpPtEC1up_branch = tree->GetBranch("NQGen4jesPileUpPtEC1up");
  if (NQGen4jesPileUpPtEC1up_branch) NQGen4jesPileUpPtEC1up_branch->SetAddress(&NQGen4jesPileUpPtEC1up_);
  NBGen0jesPileUpPtEC1up_branch = tree->GetBranch("NBGen0jesPileUpPtEC1up");
  if (NBGen0jesPileUpPtEC1up_branch) NBGen0jesPileUpPtEC1up_branch->SetAddress(&NBGen0jesPileUpPtEC1up_);
  NBGen1jesPileUpPtEC1up_branch = tree->GetBranch("NBGen1jesPileUpPtEC1up");
  if (NBGen1jesPileUpPtEC1up_branch) NBGen1jesPileUpPtEC1up_branch->SetAddress(&NBGen1jesPileUpPtEC1up_);
  NBGen2jesPileUpPtEC1up_branch = tree->GetBranch("NBGen2jesPileUpPtEC1up");
  if (NBGen2jesPileUpPtEC1up_branch) NBGen2jesPileUpPtEC1up_branch->SetAddress(&NBGen2jesPileUpPtEC1up_);
  NBGen3jesPileUpPtEC1up_branch = tree->GetBranch("NBGen3jesPileUpPtEC1up");
  if (NBGen3jesPileUpPtEC1up_branch) NBGen3jesPileUpPtEC1up_branch->SetAddress(&NBGen3jesPileUpPtEC1up_);
  NBGen4jesPileUpPtEC1up_branch = tree->GetBranch("NBGen4jesPileUpPtEC1up");
  if (NBGen4jesPileUpPtEC1up_branch) NBGen4jesPileUpPtEC1up_branch->SetAddress(&NBGen4jesPileUpPtEC1up_);
  NLGen0jesPileUpPtEC1up_branch = tree->GetBranch("NLGen0jesPileUpPtEC1up");
  if (NLGen0jesPileUpPtEC1up_branch) NLGen0jesPileUpPtEC1up_branch->SetAddress(&NLGen0jesPileUpPtEC1up_);
  NLGen1jesPileUpPtEC1up_branch = tree->GetBranch("NLGen1jesPileUpPtEC1up");
  if (NLGen1jesPileUpPtEC1up_branch) NLGen1jesPileUpPtEC1up_branch->SetAddress(&NLGen1jesPileUpPtEC1up_);
  NLGen2jesPileUpPtEC1up_branch = tree->GetBranch("NLGen2jesPileUpPtEC1up");
  if (NLGen2jesPileUpPtEC1up_branch) NLGen2jesPileUpPtEC1up_branch->SetAddress(&NLGen2jesPileUpPtEC1up_);
  NLGen3jesPileUpPtEC1up_branch = tree->GetBranch("NLGen3jesPileUpPtEC1up");
  if (NLGen3jesPileUpPtEC1up_branch) NLGen3jesPileUpPtEC1up_branch->SetAddress(&NLGen3jesPileUpPtEC1up_);
  NLGen4jesPileUpPtEC1up_branch = tree->GetBranch("NLGen4jesPileUpPtEC1up");
  if (NLGen4jesPileUpPtEC1up_branch) NLGen4jesPileUpPtEC1up_branch->SetAddress(&NLGen4jesPileUpPtEC1up_);
  NVQGen0jesPileUpPtEC1up_branch = tree->GetBranch("NVQGen0jesPileUpPtEC1up");
  if (NVQGen0jesPileUpPtEC1up_branch) NVQGen0jesPileUpPtEC1up_branch->SetAddress(&NVQGen0jesPileUpPtEC1up_);
  NVQGen1jesPileUpPtEC1up_branch = tree->GetBranch("NVQGen1jesPileUpPtEC1up");
  if (NVQGen1jesPileUpPtEC1up_branch) NVQGen1jesPileUpPtEC1up_branch->SetAddress(&NVQGen1jesPileUpPtEC1up_);
  NVQGen2jesPileUpPtEC1up_branch = tree->GetBranch("NVQGen2jesPileUpPtEC1up");
  if (NVQGen2jesPileUpPtEC1up_branch) NVQGen2jesPileUpPtEC1up_branch->SetAddress(&NVQGen2jesPileUpPtEC1up_);
  NVQGen3jesPileUpPtEC1up_branch = tree->GetBranch("NVQGen3jesPileUpPtEC1up");
  if (NVQGen3jesPileUpPtEC1up_branch) NVQGen3jesPileUpPtEC1up_branch->SetAddress(&NVQGen3jesPileUpPtEC1up_);
  NVQGen4jesPileUpPtEC1up_branch = tree->GetBranch("NVQGen4jesPileUpPtEC1up");
  if (NVQGen4jesPileUpPtEC1up_branch) NVQGen4jesPileUpPtEC1up_branch->SetAddress(&NVQGen4jesPileUpPtEC1up_);
  NiFJjesPileUpPtEC1up_branch = tree->GetBranch("NiFJjesPileUpPtEC1up");
  if (NiFJjesPileUpPtEC1up_branch) NiFJjesPileUpPtEC1up_branch->SetAddress(&NiFJjesPileUpPtEC1up_);
  iVMD0jesPileUpPtEC1up_branch = tree->GetBranch("iVMD0jesPileUpPtEC1up");
  if (iVMD0jesPileUpPtEC1up_branch) iVMD0jesPileUpPtEC1up_branch->SetAddress(&iVMD0jesPileUpPtEC1up_);
  iVMD1jesPileUpPtEC1up_branch = tree->GetBranch("iVMD1jesPileUpPtEC1up");
  if (iVMD1jesPileUpPtEC1up_branch) iVMD1jesPileUpPtEC1up_branch->SetAddress(&iVMD1jesPileUpPtEC1up_);
  iVMD2jesPileUpPtEC1up_branch = tree->GetBranch("iVMD2jesPileUpPtEC1up");
  if (iVMD2jesPileUpPtEC1up_branch) iVMD2jesPileUpPtEC1up_branch->SetAddress(&iVMD2jesPileUpPtEC1up_);
  iVMD3jesPileUpPtEC1up_branch = tree->GetBranch("iVMD3jesPileUpPtEC1up");
  if (iVMD3jesPileUpPtEC1up_branch) iVMD3jesPileUpPtEC1up_branch->SetAddress(&iVMD3jesPileUpPtEC1up_);
  iVMD4jesPileUpPtEC1up_branch = tree->GetBranch("iVMD4jesPileUpPtEC1up");
  if (iVMD4jesPileUpPtEC1up_branch) iVMD4jesPileUpPtEC1up_branch->SetAddress(&iVMD4jesPileUpPtEC1up_);
  iWMD0jesPileUpPtEC1up_branch = tree->GetBranch("iWMD0jesPileUpPtEC1up");
  if (iWMD0jesPileUpPtEC1up_branch) iWMD0jesPileUpPtEC1up_branch->SetAddress(&iWMD0jesPileUpPtEC1up_);
  iWMD1jesPileUpPtEC1up_branch = tree->GetBranch("iWMD1jesPileUpPtEC1up");
  if (iWMD1jesPileUpPtEC1up_branch) iWMD1jesPileUpPtEC1up_branch->SetAddress(&iWMD1jesPileUpPtEC1up_);
  iWMD2jesPileUpPtEC1up_branch = tree->GetBranch("iWMD2jesPileUpPtEC1up");
  if (iWMD2jesPileUpPtEC1up_branch) iWMD2jesPileUpPtEC1up_branch->SetAddress(&iWMD2jesPileUpPtEC1up_);
  iWMD3jesPileUpPtEC1up_branch = tree->GetBranch("iWMD3jesPileUpPtEC1up");
  if (iWMD3jesPileUpPtEC1up_branch) iWMD3jesPileUpPtEC1up_branch->SetAddress(&iWMD3jesPileUpPtEC1up_);
  iWMD4jesPileUpPtEC1up_branch = tree->GetBranch("iWMD4jesPileUpPtEC1up");
  if (iWMD4jesPileUpPtEC1up_branch) iWMD4jesPileUpPtEC1up_branch->SetAddress(&iWMD4jesPileUpPtEC1up_);
  NJjesPileUpPtEC1up_branch = tree->GetBranch("NJjesPileUpPtEC1up");
  if (NJjesPileUpPtEC1up_branch) NJjesPileUpPtEC1up_branch->SetAddress(&NJjesPileUpPtEC1up_);
  NbLoosejesPileUpPtEC1up_branch = tree->GetBranch("NbLoosejesPileUpPtEC1up");
  if (NbLoosejesPileUpPtEC1up_branch) NbLoosejesPileUpPtEC1up_branch->SetAddress(&NbLoosejesPileUpPtEC1up_);
  NbMediumjesPileUpPtEC1up_branch = tree->GetBranch("NbMediumjesPileUpPtEC1up");
  if (NbMediumjesPileUpPtEC1up_branch) NbMediumjesPileUpPtEC1up_branch->SetAddress(&NbMediumjesPileUpPtEC1up_);
  NbTightjesPileUpPtEC1up_branch = tree->GetBranch("NbTightjesPileUpPtEC1up");
  if (NbTightjesPileUpPtEC1up_branch) NbTightjesPileUpPtEC1up_branch->SetAddress(&NbTightjesPileUpPtEC1up_);
  NoORNbLoosejesPileUpPtEC1up_branch = tree->GetBranch("NoORNbLoosejesPileUpPtEC1up");
  if (NoORNbLoosejesPileUpPtEC1up_branch) NoORNbLoosejesPileUpPtEC1up_branch->SetAddress(&NoORNbLoosejesPileUpPtEC1up_);
  NoORNbMediumjesPileUpPtEC1up_branch = tree->GetBranch("NoORNbMediumjesPileUpPtEC1up");
  if (NoORNbMediumjesPileUpPtEC1up_branch) NoORNbMediumjesPileUpPtEC1up_branch->SetAddress(&NoORNbMediumjesPileUpPtEC1up_);
  NoORNbTightjesPileUpPtEC1up_branch = tree->GetBranch("NoORNbTightjesPileUpPtEC1up");
  if (NoORNbTightjesPileUpPtEC1up_branch) NoORNbTightjesPileUpPtEC1up_branch->SetAddress(&NoORNbTightjesPileUpPtEC1up_);
  NQJGenjesPileUpPtEC1up_branch = tree->GetBranch("NQJGenjesPileUpPtEC1up");
  if (NQJGenjesPileUpPtEC1up_branch) NQJGenjesPileUpPtEC1up_branch->SetAddress(&NQJGenjesPileUpPtEC1up_);
  NBJGenjesPileUpPtEC1up_branch = tree->GetBranch("NBJGenjesPileUpPtEC1up");
  if (NBJGenjesPileUpPtEC1up_branch) NBJGenjesPileUpPtEC1up_branch->SetAddress(&NBJGenjesPileUpPtEC1up_);
  NLJGenjesPileUpPtEC1up_branch = tree->GetBranch("NLJGenjesPileUpPtEC1up");
  if (NLJGenjesPileUpPtEC1up_branch) NLJGenjesPileUpPtEC1up_branch->SetAddress(&NLJGenjesPileUpPtEC1up_);
  MVVXjesPileUpPtEC1up_branch = tree->GetBranch("MVVXjesPileUpPtEC1up");
  if (MVVXjesPileUpPtEC1up_branch) MVVXjesPileUpPtEC1up_branch->SetAddress(&MVVXjesPileUpPtEC1up_);
  PtVVXjesPileUpPtEC1up_branch = tree->GetBranch("PtVVXjesPileUpPtEC1up");
  if (PtVVXjesPileUpPtEC1up_branch) PtVVXjesPileUpPtEC1up_branch->SetAddress(&PtVVXjesPileUpPtEC1up_);
  HTjesPileUpPtEC1up_branch = tree->GetBranch("HTjesPileUpPtEC1up");
  if (HTjesPileUpPtEC1up_branch) HTjesPileUpPtEC1up_branch->SetAddress(&HTjesPileUpPtEC1up_);
  HTJjesPileUpPtEC1up_branch = tree->GetBranch("HTJjesPileUpPtEC1up");
  if (HTJjesPileUpPtEC1up_branch) HTJjesPileUpPtEC1up_branch->SetAddress(&HTJjesPileUpPtEC1up_);
  HTFJjesPileUpPtEC1up_branch = tree->GetBranch("HTFJjesPileUpPtEC1up");
  if (HTFJjesPileUpPtEC1up_branch) HTFJjesPileUpPtEC1up_branch->SetAddress(&HTFJjesPileUpPtEC1up_);
  SumPtFJjesPileUpPtEC1up_branch = tree->GetBranch("SumPtFJjesPileUpPtEC1up");
  if (SumPtFJjesPileUpPtEC1up_branch) SumPtFJjesPileUpPtEC1up_branch->SetAddress(&SumPtFJjesPileUpPtEC1up_);
  SumPtJjesPileUpPtEC1up_branch = tree->GetBranch("SumPtJjesPileUpPtEC1up");
  if (SumPtJjesPileUpPtEC1up_branch) SumPtJjesPileUpPtEC1up_branch->SetAddress(&SumPtJjesPileUpPtEC1up_);
  NFJjesPileUpPtEC1dn_branch = tree->GetBranch("NFJjesPileUpPtEC1dn");
  if (NFJjesPileUpPtEC1dn_branch) NFJjesPileUpPtEC1dn_branch->SetAddress(&NFJjesPileUpPtEC1dn_);
  VMD0jesPileUpPtEC1dn_branch = tree->GetBranch("VMD0jesPileUpPtEC1dn");
  if (VMD0jesPileUpPtEC1dn_branch) VMD0jesPileUpPtEC1dn_branch->SetAddress(&VMD0jesPileUpPtEC1dn_);
  VMD1jesPileUpPtEC1dn_branch = tree->GetBranch("VMD1jesPileUpPtEC1dn");
  if (VMD1jesPileUpPtEC1dn_branch) VMD1jesPileUpPtEC1dn_branch->SetAddress(&VMD1jesPileUpPtEC1dn_);
  VMD2jesPileUpPtEC1dn_branch = tree->GetBranch("VMD2jesPileUpPtEC1dn");
  if (VMD2jesPileUpPtEC1dn_branch) VMD2jesPileUpPtEC1dn_branch->SetAddress(&VMD2jesPileUpPtEC1dn_);
  VMD3jesPileUpPtEC1dn_branch = tree->GetBranch("VMD3jesPileUpPtEC1dn");
  if (VMD3jesPileUpPtEC1dn_branch) VMD3jesPileUpPtEC1dn_branch->SetAddress(&VMD3jesPileUpPtEC1dn_);
  VMD4jesPileUpPtEC1dn_branch = tree->GetBranch("VMD4jesPileUpPtEC1dn");
  if (VMD4jesPileUpPtEC1dn_branch) VMD4jesPileUpPtEC1dn_branch->SetAddress(&VMD4jesPileUpPtEC1dn_);
  WMD0jesPileUpPtEC1dn_branch = tree->GetBranch("WMD0jesPileUpPtEC1dn");
  if (WMD0jesPileUpPtEC1dn_branch) WMD0jesPileUpPtEC1dn_branch->SetAddress(&WMD0jesPileUpPtEC1dn_);
  WMD1jesPileUpPtEC1dn_branch = tree->GetBranch("WMD1jesPileUpPtEC1dn");
  if (WMD1jesPileUpPtEC1dn_branch) WMD1jesPileUpPtEC1dn_branch->SetAddress(&WMD1jesPileUpPtEC1dn_);
  WMD2jesPileUpPtEC1dn_branch = tree->GetBranch("WMD2jesPileUpPtEC1dn");
  if (WMD2jesPileUpPtEC1dn_branch) WMD2jesPileUpPtEC1dn_branch->SetAddress(&WMD2jesPileUpPtEC1dn_);
  WMD3jesPileUpPtEC1dn_branch = tree->GetBranch("WMD3jesPileUpPtEC1dn");
  if (WMD3jesPileUpPtEC1dn_branch) WMD3jesPileUpPtEC1dn_branch->SetAddress(&WMD3jesPileUpPtEC1dn_);
  WMD4jesPileUpPtEC1dn_branch = tree->GetBranch("WMD4jesPileUpPtEC1dn");
  if (WMD4jesPileUpPtEC1dn_branch) WMD4jesPileUpPtEC1dn_branch->SetAddress(&WMD4jesPileUpPtEC1dn_);
  NQGen0jesPileUpPtEC1dn_branch = tree->GetBranch("NQGen0jesPileUpPtEC1dn");
  if (NQGen0jesPileUpPtEC1dn_branch) NQGen0jesPileUpPtEC1dn_branch->SetAddress(&NQGen0jesPileUpPtEC1dn_);
  NQGen1jesPileUpPtEC1dn_branch = tree->GetBranch("NQGen1jesPileUpPtEC1dn");
  if (NQGen1jesPileUpPtEC1dn_branch) NQGen1jesPileUpPtEC1dn_branch->SetAddress(&NQGen1jesPileUpPtEC1dn_);
  NQGen2jesPileUpPtEC1dn_branch = tree->GetBranch("NQGen2jesPileUpPtEC1dn");
  if (NQGen2jesPileUpPtEC1dn_branch) NQGen2jesPileUpPtEC1dn_branch->SetAddress(&NQGen2jesPileUpPtEC1dn_);
  NQGen3jesPileUpPtEC1dn_branch = tree->GetBranch("NQGen3jesPileUpPtEC1dn");
  if (NQGen3jesPileUpPtEC1dn_branch) NQGen3jesPileUpPtEC1dn_branch->SetAddress(&NQGen3jesPileUpPtEC1dn_);
  NQGen4jesPileUpPtEC1dn_branch = tree->GetBranch("NQGen4jesPileUpPtEC1dn");
  if (NQGen4jesPileUpPtEC1dn_branch) NQGen4jesPileUpPtEC1dn_branch->SetAddress(&NQGen4jesPileUpPtEC1dn_);
  NBGen0jesPileUpPtEC1dn_branch = tree->GetBranch("NBGen0jesPileUpPtEC1dn");
  if (NBGen0jesPileUpPtEC1dn_branch) NBGen0jesPileUpPtEC1dn_branch->SetAddress(&NBGen0jesPileUpPtEC1dn_);
  NBGen1jesPileUpPtEC1dn_branch = tree->GetBranch("NBGen1jesPileUpPtEC1dn");
  if (NBGen1jesPileUpPtEC1dn_branch) NBGen1jesPileUpPtEC1dn_branch->SetAddress(&NBGen1jesPileUpPtEC1dn_);
  NBGen2jesPileUpPtEC1dn_branch = tree->GetBranch("NBGen2jesPileUpPtEC1dn");
  if (NBGen2jesPileUpPtEC1dn_branch) NBGen2jesPileUpPtEC1dn_branch->SetAddress(&NBGen2jesPileUpPtEC1dn_);
  NBGen3jesPileUpPtEC1dn_branch = tree->GetBranch("NBGen3jesPileUpPtEC1dn");
  if (NBGen3jesPileUpPtEC1dn_branch) NBGen3jesPileUpPtEC1dn_branch->SetAddress(&NBGen3jesPileUpPtEC1dn_);
  NBGen4jesPileUpPtEC1dn_branch = tree->GetBranch("NBGen4jesPileUpPtEC1dn");
  if (NBGen4jesPileUpPtEC1dn_branch) NBGen4jesPileUpPtEC1dn_branch->SetAddress(&NBGen4jesPileUpPtEC1dn_);
  NLGen0jesPileUpPtEC1dn_branch = tree->GetBranch("NLGen0jesPileUpPtEC1dn");
  if (NLGen0jesPileUpPtEC1dn_branch) NLGen0jesPileUpPtEC1dn_branch->SetAddress(&NLGen0jesPileUpPtEC1dn_);
  NLGen1jesPileUpPtEC1dn_branch = tree->GetBranch("NLGen1jesPileUpPtEC1dn");
  if (NLGen1jesPileUpPtEC1dn_branch) NLGen1jesPileUpPtEC1dn_branch->SetAddress(&NLGen1jesPileUpPtEC1dn_);
  NLGen2jesPileUpPtEC1dn_branch = tree->GetBranch("NLGen2jesPileUpPtEC1dn");
  if (NLGen2jesPileUpPtEC1dn_branch) NLGen2jesPileUpPtEC1dn_branch->SetAddress(&NLGen2jesPileUpPtEC1dn_);
  NLGen3jesPileUpPtEC1dn_branch = tree->GetBranch("NLGen3jesPileUpPtEC1dn");
  if (NLGen3jesPileUpPtEC1dn_branch) NLGen3jesPileUpPtEC1dn_branch->SetAddress(&NLGen3jesPileUpPtEC1dn_);
  NLGen4jesPileUpPtEC1dn_branch = tree->GetBranch("NLGen4jesPileUpPtEC1dn");
  if (NLGen4jesPileUpPtEC1dn_branch) NLGen4jesPileUpPtEC1dn_branch->SetAddress(&NLGen4jesPileUpPtEC1dn_);
  NVQGen0jesPileUpPtEC1dn_branch = tree->GetBranch("NVQGen0jesPileUpPtEC1dn");
  if (NVQGen0jesPileUpPtEC1dn_branch) NVQGen0jesPileUpPtEC1dn_branch->SetAddress(&NVQGen0jesPileUpPtEC1dn_);
  NVQGen1jesPileUpPtEC1dn_branch = tree->GetBranch("NVQGen1jesPileUpPtEC1dn");
  if (NVQGen1jesPileUpPtEC1dn_branch) NVQGen1jesPileUpPtEC1dn_branch->SetAddress(&NVQGen1jesPileUpPtEC1dn_);
  NVQGen2jesPileUpPtEC1dn_branch = tree->GetBranch("NVQGen2jesPileUpPtEC1dn");
  if (NVQGen2jesPileUpPtEC1dn_branch) NVQGen2jesPileUpPtEC1dn_branch->SetAddress(&NVQGen2jesPileUpPtEC1dn_);
  NVQGen3jesPileUpPtEC1dn_branch = tree->GetBranch("NVQGen3jesPileUpPtEC1dn");
  if (NVQGen3jesPileUpPtEC1dn_branch) NVQGen3jesPileUpPtEC1dn_branch->SetAddress(&NVQGen3jesPileUpPtEC1dn_);
  NVQGen4jesPileUpPtEC1dn_branch = tree->GetBranch("NVQGen4jesPileUpPtEC1dn");
  if (NVQGen4jesPileUpPtEC1dn_branch) NVQGen4jesPileUpPtEC1dn_branch->SetAddress(&NVQGen4jesPileUpPtEC1dn_);
  NiFJjesPileUpPtEC1dn_branch = tree->GetBranch("NiFJjesPileUpPtEC1dn");
  if (NiFJjesPileUpPtEC1dn_branch) NiFJjesPileUpPtEC1dn_branch->SetAddress(&NiFJjesPileUpPtEC1dn_);
  iVMD0jesPileUpPtEC1dn_branch = tree->GetBranch("iVMD0jesPileUpPtEC1dn");
  if (iVMD0jesPileUpPtEC1dn_branch) iVMD0jesPileUpPtEC1dn_branch->SetAddress(&iVMD0jesPileUpPtEC1dn_);
  iVMD1jesPileUpPtEC1dn_branch = tree->GetBranch("iVMD1jesPileUpPtEC1dn");
  if (iVMD1jesPileUpPtEC1dn_branch) iVMD1jesPileUpPtEC1dn_branch->SetAddress(&iVMD1jesPileUpPtEC1dn_);
  iVMD2jesPileUpPtEC1dn_branch = tree->GetBranch("iVMD2jesPileUpPtEC1dn");
  if (iVMD2jesPileUpPtEC1dn_branch) iVMD2jesPileUpPtEC1dn_branch->SetAddress(&iVMD2jesPileUpPtEC1dn_);
  iVMD3jesPileUpPtEC1dn_branch = tree->GetBranch("iVMD3jesPileUpPtEC1dn");
  if (iVMD3jesPileUpPtEC1dn_branch) iVMD3jesPileUpPtEC1dn_branch->SetAddress(&iVMD3jesPileUpPtEC1dn_);
  iVMD4jesPileUpPtEC1dn_branch = tree->GetBranch("iVMD4jesPileUpPtEC1dn");
  if (iVMD4jesPileUpPtEC1dn_branch) iVMD4jesPileUpPtEC1dn_branch->SetAddress(&iVMD4jesPileUpPtEC1dn_);
  iWMD0jesPileUpPtEC1dn_branch = tree->GetBranch("iWMD0jesPileUpPtEC1dn");
  if (iWMD0jesPileUpPtEC1dn_branch) iWMD0jesPileUpPtEC1dn_branch->SetAddress(&iWMD0jesPileUpPtEC1dn_);
  iWMD1jesPileUpPtEC1dn_branch = tree->GetBranch("iWMD1jesPileUpPtEC1dn");
  if (iWMD1jesPileUpPtEC1dn_branch) iWMD1jesPileUpPtEC1dn_branch->SetAddress(&iWMD1jesPileUpPtEC1dn_);
  iWMD2jesPileUpPtEC1dn_branch = tree->GetBranch("iWMD2jesPileUpPtEC1dn");
  if (iWMD2jesPileUpPtEC1dn_branch) iWMD2jesPileUpPtEC1dn_branch->SetAddress(&iWMD2jesPileUpPtEC1dn_);
  iWMD3jesPileUpPtEC1dn_branch = tree->GetBranch("iWMD3jesPileUpPtEC1dn");
  if (iWMD3jesPileUpPtEC1dn_branch) iWMD3jesPileUpPtEC1dn_branch->SetAddress(&iWMD3jesPileUpPtEC1dn_);
  iWMD4jesPileUpPtEC1dn_branch = tree->GetBranch("iWMD4jesPileUpPtEC1dn");
  if (iWMD4jesPileUpPtEC1dn_branch) iWMD4jesPileUpPtEC1dn_branch->SetAddress(&iWMD4jesPileUpPtEC1dn_);
  NJjesPileUpPtEC1dn_branch = tree->GetBranch("NJjesPileUpPtEC1dn");
  if (NJjesPileUpPtEC1dn_branch) NJjesPileUpPtEC1dn_branch->SetAddress(&NJjesPileUpPtEC1dn_);
  NbLoosejesPileUpPtEC1dn_branch = tree->GetBranch("NbLoosejesPileUpPtEC1dn");
  if (NbLoosejesPileUpPtEC1dn_branch) NbLoosejesPileUpPtEC1dn_branch->SetAddress(&NbLoosejesPileUpPtEC1dn_);
  NbMediumjesPileUpPtEC1dn_branch = tree->GetBranch("NbMediumjesPileUpPtEC1dn");
  if (NbMediumjesPileUpPtEC1dn_branch) NbMediumjesPileUpPtEC1dn_branch->SetAddress(&NbMediumjesPileUpPtEC1dn_);
  NbTightjesPileUpPtEC1dn_branch = tree->GetBranch("NbTightjesPileUpPtEC1dn");
  if (NbTightjesPileUpPtEC1dn_branch) NbTightjesPileUpPtEC1dn_branch->SetAddress(&NbTightjesPileUpPtEC1dn_);
  NoORNbLoosejesPileUpPtEC1dn_branch = tree->GetBranch("NoORNbLoosejesPileUpPtEC1dn");
  if (NoORNbLoosejesPileUpPtEC1dn_branch) NoORNbLoosejesPileUpPtEC1dn_branch->SetAddress(&NoORNbLoosejesPileUpPtEC1dn_);
  NoORNbMediumjesPileUpPtEC1dn_branch = tree->GetBranch("NoORNbMediumjesPileUpPtEC1dn");
  if (NoORNbMediumjesPileUpPtEC1dn_branch) NoORNbMediumjesPileUpPtEC1dn_branch->SetAddress(&NoORNbMediumjesPileUpPtEC1dn_);
  NoORNbTightjesPileUpPtEC1dn_branch = tree->GetBranch("NoORNbTightjesPileUpPtEC1dn");
  if (NoORNbTightjesPileUpPtEC1dn_branch) NoORNbTightjesPileUpPtEC1dn_branch->SetAddress(&NoORNbTightjesPileUpPtEC1dn_);
  NQJGenjesPileUpPtEC1dn_branch = tree->GetBranch("NQJGenjesPileUpPtEC1dn");
  if (NQJGenjesPileUpPtEC1dn_branch) NQJGenjesPileUpPtEC1dn_branch->SetAddress(&NQJGenjesPileUpPtEC1dn_);
  NBJGenjesPileUpPtEC1dn_branch = tree->GetBranch("NBJGenjesPileUpPtEC1dn");
  if (NBJGenjesPileUpPtEC1dn_branch) NBJGenjesPileUpPtEC1dn_branch->SetAddress(&NBJGenjesPileUpPtEC1dn_);
  NLJGenjesPileUpPtEC1dn_branch = tree->GetBranch("NLJGenjesPileUpPtEC1dn");
  if (NLJGenjesPileUpPtEC1dn_branch) NLJGenjesPileUpPtEC1dn_branch->SetAddress(&NLJGenjesPileUpPtEC1dn_);
  MVVXjesPileUpPtEC1dn_branch = tree->GetBranch("MVVXjesPileUpPtEC1dn");
  if (MVVXjesPileUpPtEC1dn_branch) MVVXjesPileUpPtEC1dn_branch->SetAddress(&MVVXjesPileUpPtEC1dn_);
  PtVVXjesPileUpPtEC1dn_branch = tree->GetBranch("PtVVXjesPileUpPtEC1dn");
  if (PtVVXjesPileUpPtEC1dn_branch) PtVVXjesPileUpPtEC1dn_branch->SetAddress(&PtVVXjesPileUpPtEC1dn_);
  HTjesPileUpPtEC1dn_branch = tree->GetBranch("HTjesPileUpPtEC1dn");
  if (HTjesPileUpPtEC1dn_branch) HTjesPileUpPtEC1dn_branch->SetAddress(&HTjesPileUpPtEC1dn_);
  HTJjesPileUpPtEC1dn_branch = tree->GetBranch("HTJjesPileUpPtEC1dn");
  if (HTJjesPileUpPtEC1dn_branch) HTJjesPileUpPtEC1dn_branch->SetAddress(&HTJjesPileUpPtEC1dn_);
  HTFJjesPileUpPtEC1dn_branch = tree->GetBranch("HTFJjesPileUpPtEC1dn");
  if (HTFJjesPileUpPtEC1dn_branch) HTFJjesPileUpPtEC1dn_branch->SetAddress(&HTFJjesPileUpPtEC1dn_);
  SumPtFJjesPileUpPtEC1dn_branch = tree->GetBranch("SumPtFJjesPileUpPtEC1dn");
  if (SumPtFJjesPileUpPtEC1dn_branch) SumPtFJjesPileUpPtEC1dn_branch->SetAddress(&SumPtFJjesPileUpPtEC1dn_);
  SumPtJjesPileUpPtEC1dn_branch = tree->GetBranch("SumPtJjesPileUpPtEC1dn");
  if (SumPtJjesPileUpPtEC1dn_branch) SumPtJjesPileUpPtEC1dn_branch->SetAddress(&SumPtJjesPileUpPtEC1dn_);
  NFJjesPileUpPtEC2up_branch = tree->GetBranch("NFJjesPileUpPtEC2up");
  if (NFJjesPileUpPtEC2up_branch) NFJjesPileUpPtEC2up_branch->SetAddress(&NFJjesPileUpPtEC2up_);
  VMD0jesPileUpPtEC2up_branch = tree->GetBranch("VMD0jesPileUpPtEC2up");
  if (VMD0jesPileUpPtEC2up_branch) VMD0jesPileUpPtEC2up_branch->SetAddress(&VMD0jesPileUpPtEC2up_);
  VMD1jesPileUpPtEC2up_branch = tree->GetBranch("VMD1jesPileUpPtEC2up");
  if (VMD1jesPileUpPtEC2up_branch) VMD1jesPileUpPtEC2up_branch->SetAddress(&VMD1jesPileUpPtEC2up_);
  VMD2jesPileUpPtEC2up_branch = tree->GetBranch("VMD2jesPileUpPtEC2up");
  if (VMD2jesPileUpPtEC2up_branch) VMD2jesPileUpPtEC2up_branch->SetAddress(&VMD2jesPileUpPtEC2up_);
  VMD3jesPileUpPtEC2up_branch = tree->GetBranch("VMD3jesPileUpPtEC2up");
  if (VMD3jesPileUpPtEC2up_branch) VMD3jesPileUpPtEC2up_branch->SetAddress(&VMD3jesPileUpPtEC2up_);
  VMD4jesPileUpPtEC2up_branch = tree->GetBranch("VMD4jesPileUpPtEC2up");
  if (VMD4jesPileUpPtEC2up_branch) VMD4jesPileUpPtEC2up_branch->SetAddress(&VMD4jesPileUpPtEC2up_);
  WMD0jesPileUpPtEC2up_branch = tree->GetBranch("WMD0jesPileUpPtEC2up");
  if (WMD0jesPileUpPtEC2up_branch) WMD0jesPileUpPtEC2up_branch->SetAddress(&WMD0jesPileUpPtEC2up_);
  WMD1jesPileUpPtEC2up_branch = tree->GetBranch("WMD1jesPileUpPtEC2up");
  if (WMD1jesPileUpPtEC2up_branch) WMD1jesPileUpPtEC2up_branch->SetAddress(&WMD1jesPileUpPtEC2up_);
  WMD2jesPileUpPtEC2up_branch = tree->GetBranch("WMD2jesPileUpPtEC2up");
  if (WMD2jesPileUpPtEC2up_branch) WMD2jesPileUpPtEC2up_branch->SetAddress(&WMD2jesPileUpPtEC2up_);
  WMD3jesPileUpPtEC2up_branch = tree->GetBranch("WMD3jesPileUpPtEC2up");
  if (WMD3jesPileUpPtEC2up_branch) WMD3jesPileUpPtEC2up_branch->SetAddress(&WMD3jesPileUpPtEC2up_);
  WMD4jesPileUpPtEC2up_branch = tree->GetBranch("WMD4jesPileUpPtEC2up");
  if (WMD4jesPileUpPtEC2up_branch) WMD4jesPileUpPtEC2up_branch->SetAddress(&WMD4jesPileUpPtEC2up_);
  NQGen0jesPileUpPtEC2up_branch = tree->GetBranch("NQGen0jesPileUpPtEC2up");
  if (NQGen0jesPileUpPtEC2up_branch) NQGen0jesPileUpPtEC2up_branch->SetAddress(&NQGen0jesPileUpPtEC2up_);
  NQGen1jesPileUpPtEC2up_branch = tree->GetBranch("NQGen1jesPileUpPtEC2up");
  if (NQGen1jesPileUpPtEC2up_branch) NQGen1jesPileUpPtEC2up_branch->SetAddress(&NQGen1jesPileUpPtEC2up_);
  NQGen2jesPileUpPtEC2up_branch = tree->GetBranch("NQGen2jesPileUpPtEC2up");
  if (NQGen2jesPileUpPtEC2up_branch) NQGen2jesPileUpPtEC2up_branch->SetAddress(&NQGen2jesPileUpPtEC2up_);
  NQGen3jesPileUpPtEC2up_branch = tree->GetBranch("NQGen3jesPileUpPtEC2up");
  if (NQGen3jesPileUpPtEC2up_branch) NQGen3jesPileUpPtEC2up_branch->SetAddress(&NQGen3jesPileUpPtEC2up_);
  NQGen4jesPileUpPtEC2up_branch = tree->GetBranch("NQGen4jesPileUpPtEC2up");
  if (NQGen4jesPileUpPtEC2up_branch) NQGen4jesPileUpPtEC2up_branch->SetAddress(&NQGen4jesPileUpPtEC2up_);
  NBGen0jesPileUpPtEC2up_branch = tree->GetBranch("NBGen0jesPileUpPtEC2up");
  if (NBGen0jesPileUpPtEC2up_branch) NBGen0jesPileUpPtEC2up_branch->SetAddress(&NBGen0jesPileUpPtEC2up_);
  NBGen1jesPileUpPtEC2up_branch = tree->GetBranch("NBGen1jesPileUpPtEC2up");
  if (NBGen1jesPileUpPtEC2up_branch) NBGen1jesPileUpPtEC2up_branch->SetAddress(&NBGen1jesPileUpPtEC2up_);
  NBGen2jesPileUpPtEC2up_branch = tree->GetBranch("NBGen2jesPileUpPtEC2up");
  if (NBGen2jesPileUpPtEC2up_branch) NBGen2jesPileUpPtEC2up_branch->SetAddress(&NBGen2jesPileUpPtEC2up_);
  NBGen3jesPileUpPtEC2up_branch = tree->GetBranch("NBGen3jesPileUpPtEC2up");
  if (NBGen3jesPileUpPtEC2up_branch) NBGen3jesPileUpPtEC2up_branch->SetAddress(&NBGen3jesPileUpPtEC2up_);
  NBGen4jesPileUpPtEC2up_branch = tree->GetBranch("NBGen4jesPileUpPtEC2up");
  if (NBGen4jesPileUpPtEC2up_branch) NBGen4jesPileUpPtEC2up_branch->SetAddress(&NBGen4jesPileUpPtEC2up_);
  NLGen0jesPileUpPtEC2up_branch = tree->GetBranch("NLGen0jesPileUpPtEC2up");
  if (NLGen0jesPileUpPtEC2up_branch) NLGen0jesPileUpPtEC2up_branch->SetAddress(&NLGen0jesPileUpPtEC2up_);
  NLGen1jesPileUpPtEC2up_branch = tree->GetBranch("NLGen1jesPileUpPtEC2up");
  if (NLGen1jesPileUpPtEC2up_branch) NLGen1jesPileUpPtEC2up_branch->SetAddress(&NLGen1jesPileUpPtEC2up_);
  NLGen2jesPileUpPtEC2up_branch = tree->GetBranch("NLGen2jesPileUpPtEC2up");
  if (NLGen2jesPileUpPtEC2up_branch) NLGen2jesPileUpPtEC2up_branch->SetAddress(&NLGen2jesPileUpPtEC2up_);
  NLGen3jesPileUpPtEC2up_branch = tree->GetBranch("NLGen3jesPileUpPtEC2up");
  if (NLGen3jesPileUpPtEC2up_branch) NLGen3jesPileUpPtEC2up_branch->SetAddress(&NLGen3jesPileUpPtEC2up_);
  NLGen4jesPileUpPtEC2up_branch = tree->GetBranch("NLGen4jesPileUpPtEC2up");
  if (NLGen4jesPileUpPtEC2up_branch) NLGen4jesPileUpPtEC2up_branch->SetAddress(&NLGen4jesPileUpPtEC2up_);
  NVQGen0jesPileUpPtEC2up_branch = tree->GetBranch("NVQGen0jesPileUpPtEC2up");
  if (NVQGen0jesPileUpPtEC2up_branch) NVQGen0jesPileUpPtEC2up_branch->SetAddress(&NVQGen0jesPileUpPtEC2up_);
  NVQGen1jesPileUpPtEC2up_branch = tree->GetBranch("NVQGen1jesPileUpPtEC2up");
  if (NVQGen1jesPileUpPtEC2up_branch) NVQGen1jesPileUpPtEC2up_branch->SetAddress(&NVQGen1jesPileUpPtEC2up_);
  NVQGen2jesPileUpPtEC2up_branch = tree->GetBranch("NVQGen2jesPileUpPtEC2up");
  if (NVQGen2jesPileUpPtEC2up_branch) NVQGen2jesPileUpPtEC2up_branch->SetAddress(&NVQGen2jesPileUpPtEC2up_);
  NVQGen3jesPileUpPtEC2up_branch = tree->GetBranch("NVQGen3jesPileUpPtEC2up");
  if (NVQGen3jesPileUpPtEC2up_branch) NVQGen3jesPileUpPtEC2up_branch->SetAddress(&NVQGen3jesPileUpPtEC2up_);
  NVQGen4jesPileUpPtEC2up_branch = tree->GetBranch("NVQGen4jesPileUpPtEC2up");
  if (NVQGen4jesPileUpPtEC2up_branch) NVQGen4jesPileUpPtEC2up_branch->SetAddress(&NVQGen4jesPileUpPtEC2up_);
  NiFJjesPileUpPtEC2up_branch = tree->GetBranch("NiFJjesPileUpPtEC2up");
  if (NiFJjesPileUpPtEC2up_branch) NiFJjesPileUpPtEC2up_branch->SetAddress(&NiFJjesPileUpPtEC2up_);
  iVMD0jesPileUpPtEC2up_branch = tree->GetBranch("iVMD0jesPileUpPtEC2up");
  if (iVMD0jesPileUpPtEC2up_branch) iVMD0jesPileUpPtEC2up_branch->SetAddress(&iVMD0jesPileUpPtEC2up_);
  iVMD1jesPileUpPtEC2up_branch = tree->GetBranch("iVMD1jesPileUpPtEC2up");
  if (iVMD1jesPileUpPtEC2up_branch) iVMD1jesPileUpPtEC2up_branch->SetAddress(&iVMD1jesPileUpPtEC2up_);
  iVMD2jesPileUpPtEC2up_branch = tree->GetBranch("iVMD2jesPileUpPtEC2up");
  if (iVMD2jesPileUpPtEC2up_branch) iVMD2jesPileUpPtEC2up_branch->SetAddress(&iVMD2jesPileUpPtEC2up_);
  iVMD3jesPileUpPtEC2up_branch = tree->GetBranch("iVMD3jesPileUpPtEC2up");
  if (iVMD3jesPileUpPtEC2up_branch) iVMD3jesPileUpPtEC2up_branch->SetAddress(&iVMD3jesPileUpPtEC2up_);
  iVMD4jesPileUpPtEC2up_branch = tree->GetBranch("iVMD4jesPileUpPtEC2up");
  if (iVMD4jesPileUpPtEC2up_branch) iVMD4jesPileUpPtEC2up_branch->SetAddress(&iVMD4jesPileUpPtEC2up_);
  iWMD0jesPileUpPtEC2up_branch = tree->GetBranch("iWMD0jesPileUpPtEC2up");
  if (iWMD0jesPileUpPtEC2up_branch) iWMD0jesPileUpPtEC2up_branch->SetAddress(&iWMD0jesPileUpPtEC2up_);
  iWMD1jesPileUpPtEC2up_branch = tree->GetBranch("iWMD1jesPileUpPtEC2up");
  if (iWMD1jesPileUpPtEC2up_branch) iWMD1jesPileUpPtEC2up_branch->SetAddress(&iWMD1jesPileUpPtEC2up_);
  iWMD2jesPileUpPtEC2up_branch = tree->GetBranch("iWMD2jesPileUpPtEC2up");
  if (iWMD2jesPileUpPtEC2up_branch) iWMD2jesPileUpPtEC2up_branch->SetAddress(&iWMD2jesPileUpPtEC2up_);
  iWMD3jesPileUpPtEC2up_branch = tree->GetBranch("iWMD3jesPileUpPtEC2up");
  if (iWMD3jesPileUpPtEC2up_branch) iWMD3jesPileUpPtEC2up_branch->SetAddress(&iWMD3jesPileUpPtEC2up_);
  iWMD4jesPileUpPtEC2up_branch = tree->GetBranch("iWMD4jesPileUpPtEC2up");
  if (iWMD4jesPileUpPtEC2up_branch) iWMD4jesPileUpPtEC2up_branch->SetAddress(&iWMD4jesPileUpPtEC2up_);
  NJjesPileUpPtEC2up_branch = tree->GetBranch("NJjesPileUpPtEC2up");
  if (NJjesPileUpPtEC2up_branch) NJjesPileUpPtEC2up_branch->SetAddress(&NJjesPileUpPtEC2up_);
  NbLoosejesPileUpPtEC2up_branch = tree->GetBranch("NbLoosejesPileUpPtEC2up");
  if (NbLoosejesPileUpPtEC2up_branch) NbLoosejesPileUpPtEC2up_branch->SetAddress(&NbLoosejesPileUpPtEC2up_);
  NbMediumjesPileUpPtEC2up_branch = tree->GetBranch("NbMediumjesPileUpPtEC2up");
  if (NbMediumjesPileUpPtEC2up_branch) NbMediumjesPileUpPtEC2up_branch->SetAddress(&NbMediumjesPileUpPtEC2up_);
  NbTightjesPileUpPtEC2up_branch = tree->GetBranch("NbTightjesPileUpPtEC2up");
  if (NbTightjesPileUpPtEC2up_branch) NbTightjesPileUpPtEC2up_branch->SetAddress(&NbTightjesPileUpPtEC2up_);
  NoORNbLoosejesPileUpPtEC2up_branch = tree->GetBranch("NoORNbLoosejesPileUpPtEC2up");
  if (NoORNbLoosejesPileUpPtEC2up_branch) NoORNbLoosejesPileUpPtEC2up_branch->SetAddress(&NoORNbLoosejesPileUpPtEC2up_);
  NoORNbMediumjesPileUpPtEC2up_branch = tree->GetBranch("NoORNbMediumjesPileUpPtEC2up");
  if (NoORNbMediumjesPileUpPtEC2up_branch) NoORNbMediumjesPileUpPtEC2up_branch->SetAddress(&NoORNbMediumjesPileUpPtEC2up_);
  NoORNbTightjesPileUpPtEC2up_branch = tree->GetBranch("NoORNbTightjesPileUpPtEC2up");
  if (NoORNbTightjesPileUpPtEC2up_branch) NoORNbTightjesPileUpPtEC2up_branch->SetAddress(&NoORNbTightjesPileUpPtEC2up_);
  NQJGenjesPileUpPtEC2up_branch = tree->GetBranch("NQJGenjesPileUpPtEC2up");
  if (NQJGenjesPileUpPtEC2up_branch) NQJGenjesPileUpPtEC2up_branch->SetAddress(&NQJGenjesPileUpPtEC2up_);
  NBJGenjesPileUpPtEC2up_branch = tree->GetBranch("NBJGenjesPileUpPtEC2up");
  if (NBJGenjesPileUpPtEC2up_branch) NBJGenjesPileUpPtEC2up_branch->SetAddress(&NBJGenjesPileUpPtEC2up_);
  NLJGenjesPileUpPtEC2up_branch = tree->GetBranch("NLJGenjesPileUpPtEC2up");
  if (NLJGenjesPileUpPtEC2up_branch) NLJGenjesPileUpPtEC2up_branch->SetAddress(&NLJGenjesPileUpPtEC2up_);
  MVVXjesPileUpPtEC2up_branch = tree->GetBranch("MVVXjesPileUpPtEC2up");
  if (MVVXjesPileUpPtEC2up_branch) MVVXjesPileUpPtEC2up_branch->SetAddress(&MVVXjesPileUpPtEC2up_);
  PtVVXjesPileUpPtEC2up_branch = tree->GetBranch("PtVVXjesPileUpPtEC2up");
  if (PtVVXjesPileUpPtEC2up_branch) PtVVXjesPileUpPtEC2up_branch->SetAddress(&PtVVXjesPileUpPtEC2up_);
  HTjesPileUpPtEC2up_branch = tree->GetBranch("HTjesPileUpPtEC2up");
  if (HTjesPileUpPtEC2up_branch) HTjesPileUpPtEC2up_branch->SetAddress(&HTjesPileUpPtEC2up_);
  HTJjesPileUpPtEC2up_branch = tree->GetBranch("HTJjesPileUpPtEC2up");
  if (HTJjesPileUpPtEC2up_branch) HTJjesPileUpPtEC2up_branch->SetAddress(&HTJjesPileUpPtEC2up_);
  HTFJjesPileUpPtEC2up_branch = tree->GetBranch("HTFJjesPileUpPtEC2up");
  if (HTFJjesPileUpPtEC2up_branch) HTFJjesPileUpPtEC2up_branch->SetAddress(&HTFJjesPileUpPtEC2up_);
  SumPtFJjesPileUpPtEC2up_branch = tree->GetBranch("SumPtFJjesPileUpPtEC2up");
  if (SumPtFJjesPileUpPtEC2up_branch) SumPtFJjesPileUpPtEC2up_branch->SetAddress(&SumPtFJjesPileUpPtEC2up_);
  SumPtJjesPileUpPtEC2up_branch = tree->GetBranch("SumPtJjesPileUpPtEC2up");
  if (SumPtJjesPileUpPtEC2up_branch) SumPtJjesPileUpPtEC2up_branch->SetAddress(&SumPtJjesPileUpPtEC2up_);
  NFJjesPileUpPtEC2dn_branch = tree->GetBranch("NFJjesPileUpPtEC2dn");
  if (NFJjesPileUpPtEC2dn_branch) NFJjesPileUpPtEC2dn_branch->SetAddress(&NFJjesPileUpPtEC2dn_);
  VMD0jesPileUpPtEC2dn_branch = tree->GetBranch("VMD0jesPileUpPtEC2dn");
  if (VMD0jesPileUpPtEC2dn_branch) VMD0jesPileUpPtEC2dn_branch->SetAddress(&VMD0jesPileUpPtEC2dn_);
  VMD1jesPileUpPtEC2dn_branch = tree->GetBranch("VMD1jesPileUpPtEC2dn");
  if (VMD1jesPileUpPtEC2dn_branch) VMD1jesPileUpPtEC2dn_branch->SetAddress(&VMD1jesPileUpPtEC2dn_);
  VMD2jesPileUpPtEC2dn_branch = tree->GetBranch("VMD2jesPileUpPtEC2dn");
  if (VMD2jesPileUpPtEC2dn_branch) VMD2jesPileUpPtEC2dn_branch->SetAddress(&VMD2jesPileUpPtEC2dn_);
  VMD3jesPileUpPtEC2dn_branch = tree->GetBranch("VMD3jesPileUpPtEC2dn");
  if (VMD3jesPileUpPtEC2dn_branch) VMD3jesPileUpPtEC2dn_branch->SetAddress(&VMD3jesPileUpPtEC2dn_);
  VMD4jesPileUpPtEC2dn_branch = tree->GetBranch("VMD4jesPileUpPtEC2dn");
  if (VMD4jesPileUpPtEC2dn_branch) VMD4jesPileUpPtEC2dn_branch->SetAddress(&VMD4jesPileUpPtEC2dn_);
  WMD0jesPileUpPtEC2dn_branch = tree->GetBranch("WMD0jesPileUpPtEC2dn");
  if (WMD0jesPileUpPtEC2dn_branch) WMD0jesPileUpPtEC2dn_branch->SetAddress(&WMD0jesPileUpPtEC2dn_);
  WMD1jesPileUpPtEC2dn_branch = tree->GetBranch("WMD1jesPileUpPtEC2dn");
  if (WMD1jesPileUpPtEC2dn_branch) WMD1jesPileUpPtEC2dn_branch->SetAddress(&WMD1jesPileUpPtEC2dn_);
  WMD2jesPileUpPtEC2dn_branch = tree->GetBranch("WMD2jesPileUpPtEC2dn");
  if (WMD2jesPileUpPtEC2dn_branch) WMD2jesPileUpPtEC2dn_branch->SetAddress(&WMD2jesPileUpPtEC2dn_);
  WMD3jesPileUpPtEC2dn_branch = tree->GetBranch("WMD3jesPileUpPtEC2dn");
  if (WMD3jesPileUpPtEC2dn_branch) WMD3jesPileUpPtEC2dn_branch->SetAddress(&WMD3jesPileUpPtEC2dn_);
  WMD4jesPileUpPtEC2dn_branch = tree->GetBranch("WMD4jesPileUpPtEC2dn");
  if (WMD4jesPileUpPtEC2dn_branch) WMD4jesPileUpPtEC2dn_branch->SetAddress(&WMD4jesPileUpPtEC2dn_);
  NQGen0jesPileUpPtEC2dn_branch = tree->GetBranch("NQGen0jesPileUpPtEC2dn");
  if (NQGen0jesPileUpPtEC2dn_branch) NQGen0jesPileUpPtEC2dn_branch->SetAddress(&NQGen0jesPileUpPtEC2dn_);
  NQGen1jesPileUpPtEC2dn_branch = tree->GetBranch("NQGen1jesPileUpPtEC2dn");
  if (NQGen1jesPileUpPtEC2dn_branch) NQGen1jesPileUpPtEC2dn_branch->SetAddress(&NQGen1jesPileUpPtEC2dn_);
  NQGen2jesPileUpPtEC2dn_branch = tree->GetBranch("NQGen2jesPileUpPtEC2dn");
  if (NQGen2jesPileUpPtEC2dn_branch) NQGen2jesPileUpPtEC2dn_branch->SetAddress(&NQGen2jesPileUpPtEC2dn_);
  NQGen3jesPileUpPtEC2dn_branch = tree->GetBranch("NQGen3jesPileUpPtEC2dn");
  if (NQGen3jesPileUpPtEC2dn_branch) NQGen3jesPileUpPtEC2dn_branch->SetAddress(&NQGen3jesPileUpPtEC2dn_);
  NQGen4jesPileUpPtEC2dn_branch = tree->GetBranch("NQGen4jesPileUpPtEC2dn");
  if (NQGen4jesPileUpPtEC2dn_branch) NQGen4jesPileUpPtEC2dn_branch->SetAddress(&NQGen4jesPileUpPtEC2dn_);
  NBGen0jesPileUpPtEC2dn_branch = tree->GetBranch("NBGen0jesPileUpPtEC2dn");
  if (NBGen0jesPileUpPtEC2dn_branch) NBGen0jesPileUpPtEC2dn_branch->SetAddress(&NBGen0jesPileUpPtEC2dn_);
  NBGen1jesPileUpPtEC2dn_branch = tree->GetBranch("NBGen1jesPileUpPtEC2dn");
  if (NBGen1jesPileUpPtEC2dn_branch) NBGen1jesPileUpPtEC2dn_branch->SetAddress(&NBGen1jesPileUpPtEC2dn_);
  NBGen2jesPileUpPtEC2dn_branch = tree->GetBranch("NBGen2jesPileUpPtEC2dn");
  if (NBGen2jesPileUpPtEC2dn_branch) NBGen2jesPileUpPtEC2dn_branch->SetAddress(&NBGen2jesPileUpPtEC2dn_);
  NBGen3jesPileUpPtEC2dn_branch = tree->GetBranch("NBGen3jesPileUpPtEC2dn");
  if (NBGen3jesPileUpPtEC2dn_branch) NBGen3jesPileUpPtEC2dn_branch->SetAddress(&NBGen3jesPileUpPtEC2dn_);
  NBGen4jesPileUpPtEC2dn_branch = tree->GetBranch("NBGen4jesPileUpPtEC2dn");
  if (NBGen4jesPileUpPtEC2dn_branch) NBGen4jesPileUpPtEC2dn_branch->SetAddress(&NBGen4jesPileUpPtEC2dn_);
  NLGen0jesPileUpPtEC2dn_branch = tree->GetBranch("NLGen0jesPileUpPtEC2dn");
  if (NLGen0jesPileUpPtEC2dn_branch) NLGen0jesPileUpPtEC2dn_branch->SetAddress(&NLGen0jesPileUpPtEC2dn_);
  NLGen1jesPileUpPtEC2dn_branch = tree->GetBranch("NLGen1jesPileUpPtEC2dn");
  if (NLGen1jesPileUpPtEC2dn_branch) NLGen1jesPileUpPtEC2dn_branch->SetAddress(&NLGen1jesPileUpPtEC2dn_);
  NLGen2jesPileUpPtEC2dn_branch = tree->GetBranch("NLGen2jesPileUpPtEC2dn");
  if (NLGen2jesPileUpPtEC2dn_branch) NLGen2jesPileUpPtEC2dn_branch->SetAddress(&NLGen2jesPileUpPtEC2dn_);
  NLGen3jesPileUpPtEC2dn_branch = tree->GetBranch("NLGen3jesPileUpPtEC2dn");
  if (NLGen3jesPileUpPtEC2dn_branch) NLGen3jesPileUpPtEC2dn_branch->SetAddress(&NLGen3jesPileUpPtEC2dn_);
  NLGen4jesPileUpPtEC2dn_branch = tree->GetBranch("NLGen4jesPileUpPtEC2dn");
  if (NLGen4jesPileUpPtEC2dn_branch) NLGen4jesPileUpPtEC2dn_branch->SetAddress(&NLGen4jesPileUpPtEC2dn_);
  NVQGen0jesPileUpPtEC2dn_branch = tree->GetBranch("NVQGen0jesPileUpPtEC2dn");
  if (NVQGen0jesPileUpPtEC2dn_branch) NVQGen0jesPileUpPtEC2dn_branch->SetAddress(&NVQGen0jesPileUpPtEC2dn_);
  NVQGen1jesPileUpPtEC2dn_branch = tree->GetBranch("NVQGen1jesPileUpPtEC2dn");
  if (NVQGen1jesPileUpPtEC2dn_branch) NVQGen1jesPileUpPtEC2dn_branch->SetAddress(&NVQGen1jesPileUpPtEC2dn_);
  NVQGen2jesPileUpPtEC2dn_branch = tree->GetBranch("NVQGen2jesPileUpPtEC2dn");
  if (NVQGen2jesPileUpPtEC2dn_branch) NVQGen2jesPileUpPtEC2dn_branch->SetAddress(&NVQGen2jesPileUpPtEC2dn_);
  NVQGen3jesPileUpPtEC2dn_branch = tree->GetBranch("NVQGen3jesPileUpPtEC2dn");
  if (NVQGen3jesPileUpPtEC2dn_branch) NVQGen3jesPileUpPtEC2dn_branch->SetAddress(&NVQGen3jesPileUpPtEC2dn_);
  NVQGen4jesPileUpPtEC2dn_branch = tree->GetBranch("NVQGen4jesPileUpPtEC2dn");
  if (NVQGen4jesPileUpPtEC2dn_branch) NVQGen4jesPileUpPtEC2dn_branch->SetAddress(&NVQGen4jesPileUpPtEC2dn_);
  NiFJjesPileUpPtEC2dn_branch = tree->GetBranch("NiFJjesPileUpPtEC2dn");
  if (NiFJjesPileUpPtEC2dn_branch) NiFJjesPileUpPtEC2dn_branch->SetAddress(&NiFJjesPileUpPtEC2dn_);
  iVMD0jesPileUpPtEC2dn_branch = tree->GetBranch("iVMD0jesPileUpPtEC2dn");
  if (iVMD0jesPileUpPtEC2dn_branch) iVMD0jesPileUpPtEC2dn_branch->SetAddress(&iVMD0jesPileUpPtEC2dn_);
  iVMD1jesPileUpPtEC2dn_branch = tree->GetBranch("iVMD1jesPileUpPtEC2dn");
  if (iVMD1jesPileUpPtEC2dn_branch) iVMD1jesPileUpPtEC2dn_branch->SetAddress(&iVMD1jesPileUpPtEC2dn_);
  iVMD2jesPileUpPtEC2dn_branch = tree->GetBranch("iVMD2jesPileUpPtEC2dn");
  if (iVMD2jesPileUpPtEC2dn_branch) iVMD2jesPileUpPtEC2dn_branch->SetAddress(&iVMD2jesPileUpPtEC2dn_);
  iVMD3jesPileUpPtEC2dn_branch = tree->GetBranch("iVMD3jesPileUpPtEC2dn");
  if (iVMD3jesPileUpPtEC2dn_branch) iVMD3jesPileUpPtEC2dn_branch->SetAddress(&iVMD3jesPileUpPtEC2dn_);
  iVMD4jesPileUpPtEC2dn_branch = tree->GetBranch("iVMD4jesPileUpPtEC2dn");
  if (iVMD4jesPileUpPtEC2dn_branch) iVMD4jesPileUpPtEC2dn_branch->SetAddress(&iVMD4jesPileUpPtEC2dn_);
  iWMD0jesPileUpPtEC2dn_branch = tree->GetBranch("iWMD0jesPileUpPtEC2dn");
  if (iWMD0jesPileUpPtEC2dn_branch) iWMD0jesPileUpPtEC2dn_branch->SetAddress(&iWMD0jesPileUpPtEC2dn_);
  iWMD1jesPileUpPtEC2dn_branch = tree->GetBranch("iWMD1jesPileUpPtEC2dn");
  if (iWMD1jesPileUpPtEC2dn_branch) iWMD1jesPileUpPtEC2dn_branch->SetAddress(&iWMD1jesPileUpPtEC2dn_);
  iWMD2jesPileUpPtEC2dn_branch = tree->GetBranch("iWMD2jesPileUpPtEC2dn");
  if (iWMD2jesPileUpPtEC2dn_branch) iWMD2jesPileUpPtEC2dn_branch->SetAddress(&iWMD2jesPileUpPtEC2dn_);
  iWMD3jesPileUpPtEC2dn_branch = tree->GetBranch("iWMD3jesPileUpPtEC2dn");
  if (iWMD3jesPileUpPtEC2dn_branch) iWMD3jesPileUpPtEC2dn_branch->SetAddress(&iWMD3jesPileUpPtEC2dn_);
  iWMD4jesPileUpPtEC2dn_branch = tree->GetBranch("iWMD4jesPileUpPtEC2dn");
  if (iWMD4jesPileUpPtEC2dn_branch) iWMD4jesPileUpPtEC2dn_branch->SetAddress(&iWMD4jesPileUpPtEC2dn_);
  NJjesPileUpPtEC2dn_branch = tree->GetBranch("NJjesPileUpPtEC2dn");
  if (NJjesPileUpPtEC2dn_branch) NJjesPileUpPtEC2dn_branch->SetAddress(&NJjesPileUpPtEC2dn_);
  NbLoosejesPileUpPtEC2dn_branch = tree->GetBranch("NbLoosejesPileUpPtEC2dn");
  if (NbLoosejesPileUpPtEC2dn_branch) NbLoosejesPileUpPtEC2dn_branch->SetAddress(&NbLoosejesPileUpPtEC2dn_);
  NbMediumjesPileUpPtEC2dn_branch = tree->GetBranch("NbMediumjesPileUpPtEC2dn");
  if (NbMediumjesPileUpPtEC2dn_branch) NbMediumjesPileUpPtEC2dn_branch->SetAddress(&NbMediumjesPileUpPtEC2dn_);
  NbTightjesPileUpPtEC2dn_branch = tree->GetBranch("NbTightjesPileUpPtEC2dn");
  if (NbTightjesPileUpPtEC2dn_branch) NbTightjesPileUpPtEC2dn_branch->SetAddress(&NbTightjesPileUpPtEC2dn_);
  NoORNbLoosejesPileUpPtEC2dn_branch = tree->GetBranch("NoORNbLoosejesPileUpPtEC2dn");
  if (NoORNbLoosejesPileUpPtEC2dn_branch) NoORNbLoosejesPileUpPtEC2dn_branch->SetAddress(&NoORNbLoosejesPileUpPtEC2dn_);
  NoORNbMediumjesPileUpPtEC2dn_branch = tree->GetBranch("NoORNbMediumjesPileUpPtEC2dn");
  if (NoORNbMediumjesPileUpPtEC2dn_branch) NoORNbMediumjesPileUpPtEC2dn_branch->SetAddress(&NoORNbMediumjesPileUpPtEC2dn_);
  NoORNbTightjesPileUpPtEC2dn_branch = tree->GetBranch("NoORNbTightjesPileUpPtEC2dn");
  if (NoORNbTightjesPileUpPtEC2dn_branch) NoORNbTightjesPileUpPtEC2dn_branch->SetAddress(&NoORNbTightjesPileUpPtEC2dn_);
  NQJGenjesPileUpPtEC2dn_branch = tree->GetBranch("NQJGenjesPileUpPtEC2dn");
  if (NQJGenjesPileUpPtEC2dn_branch) NQJGenjesPileUpPtEC2dn_branch->SetAddress(&NQJGenjesPileUpPtEC2dn_);
  NBJGenjesPileUpPtEC2dn_branch = tree->GetBranch("NBJGenjesPileUpPtEC2dn");
  if (NBJGenjesPileUpPtEC2dn_branch) NBJGenjesPileUpPtEC2dn_branch->SetAddress(&NBJGenjesPileUpPtEC2dn_);
  NLJGenjesPileUpPtEC2dn_branch = tree->GetBranch("NLJGenjesPileUpPtEC2dn");
  if (NLJGenjesPileUpPtEC2dn_branch) NLJGenjesPileUpPtEC2dn_branch->SetAddress(&NLJGenjesPileUpPtEC2dn_);
  MVVXjesPileUpPtEC2dn_branch = tree->GetBranch("MVVXjesPileUpPtEC2dn");
  if (MVVXjesPileUpPtEC2dn_branch) MVVXjesPileUpPtEC2dn_branch->SetAddress(&MVVXjesPileUpPtEC2dn_);
  PtVVXjesPileUpPtEC2dn_branch = tree->GetBranch("PtVVXjesPileUpPtEC2dn");
  if (PtVVXjesPileUpPtEC2dn_branch) PtVVXjesPileUpPtEC2dn_branch->SetAddress(&PtVVXjesPileUpPtEC2dn_);
  HTjesPileUpPtEC2dn_branch = tree->GetBranch("HTjesPileUpPtEC2dn");
  if (HTjesPileUpPtEC2dn_branch) HTjesPileUpPtEC2dn_branch->SetAddress(&HTjesPileUpPtEC2dn_);
  HTJjesPileUpPtEC2dn_branch = tree->GetBranch("HTJjesPileUpPtEC2dn");
  if (HTJjesPileUpPtEC2dn_branch) HTJjesPileUpPtEC2dn_branch->SetAddress(&HTJjesPileUpPtEC2dn_);
  HTFJjesPileUpPtEC2dn_branch = tree->GetBranch("HTFJjesPileUpPtEC2dn");
  if (HTFJjesPileUpPtEC2dn_branch) HTFJjesPileUpPtEC2dn_branch->SetAddress(&HTFJjesPileUpPtEC2dn_);
  SumPtFJjesPileUpPtEC2dn_branch = tree->GetBranch("SumPtFJjesPileUpPtEC2dn");
  if (SumPtFJjesPileUpPtEC2dn_branch) SumPtFJjesPileUpPtEC2dn_branch->SetAddress(&SumPtFJjesPileUpPtEC2dn_);
  SumPtJjesPileUpPtEC2dn_branch = tree->GetBranch("SumPtJjesPileUpPtEC2dn");
  if (SumPtJjesPileUpPtEC2dn_branch) SumPtJjesPileUpPtEC2dn_branch->SetAddress(&SumPtJjesPileUpPtEC2dn_);
  NFJjesPileUpPtHFup_branch = tree->GetBranch("NFJjesPileUpPtHFup");
  if (NFJjesPileUpPtHFup_branch) NFJjesPileUpPtHFup_branch->SetAddress(&NFJjesPileUpPtHFup_);
  VMD0jesPileUpPtHFup_branch = tree->GetBranch("VMD0jesPileUpPtHFup");
  if (VMD0jesPileUpPtHFup_branch) VMD0jesPileUpPtHFup_branch->SetAddress(&VMD0jesPileUpPtHFup_);
  VMD1jesPileUpPtHFup_branch = tree->GetBranch("VMD1jesPileUpPtHFup");
  if (VMD1jesPileUpPtHFup_branch) VMD1jesPileUpPtHFup_branch->SetAddress(&VMD1jesPileUpPtHFup_);
  VMD2jesPileUpPtHFup_branch = tree->GetBranch("VMD2jesPileUpPtHFup");
  if (VMD2jesPileUpPtHFup_branch) VMD2jesPileUpPtHFup_branch->SetAddress(&VMD2jesPileUpPtHFup_);
  VMD3jesPileUpPtHFup_branch = tree->GetBranch("VMD3jesPileUpPtHFup");
  if (VMD3jesPileUpPtHFup_branch) VMD3jesPileUpPtHFup_branch->SetAddress(&VMD3jesPileUpPtHFup_);
  VMD4jesPileUpPtHFup_branch = tree->GetBranch("VMD4jesPileUpPtHFup");
  if (VMD4jesPileUpPtHFup_branch) VMD4jesPileUpPtHFup_branch->SetAddress(&VMD4jesPileUpPtHFup_);
  WMD0jesPileUpPtHFup_branch = tree->GetBranch("WMD0jesPileUpPtHFup");
  if (WMD0jesPileUpPtHFup_branch) WMD0jesPileUpPtHFup_branch->SetAddress(&WMD0jesPileUpPtHFup_);
  WMD1jesPileUpPtHFup_branch = tree->GetBranch("WMD1jesPileUpPtHFup");
  if (WMD1jesPileUpPtHFup_branch) WMD1jesPileUpPtHFup_branch->SetAddress(&WMD1jesPileUpPtHFup_);
  WMD2jesPileUpPtHFup_branch = tree->GetBranch("WMD2jesPileUpPtHFup");
  if (WMD2jesPileUpPtHFup_branch) WMD2jesPileUpPtHFup_branch->SetAddress(&WMD2jesPileUpPtHFup_);
  WMD3jesPileUpPtHFup_branch = tree->GetBranch("WMD3jesPileUpPtHFup");
  if (WMD3jesPileUpPtHFup_branch) WMD3jesPileUpPtHFup_branch->SetAddress(&WMD3jesPileUpPtHFup_);
  WMD4jesPileUpPtHFup_branch = tree->GetBranch("WMD4jesPileUpPtHFup");
  if (WMD4jesPileUpPtHFup_branch) WMD4jesPileUpPtHFup_branch->SetAddress(&WMD4jesPileUpPtHFup_);
  NQGen0jesPileUpPtHFup_branch = tree->GetBranch("NQGen0jesPileUpPtHFup");
  if (NQGen0jesPileUpPtHFup_branch) NQGen0jesPileUpPtHFup_branch->SetAddress(&NQGen0jesPileUpPtHFup_);
  NQGen1jesPileUpPtHFup_branch = tree->GetBranch("NQGen1jesPileUpPtHFup");
  if (NQGen1jesPileUpPtHFup_branch) NQGen1jesPileUpPtHFup_branch->SetAddress(&NQGen1jesPileUpPtHFup_);
  NQGen2jesPileUpPtHFup_branch = tree->GetBranch("NQGen2jesPileUpPtHFup");
  if (NQGen2jesPileUpPtHFup_branch) NQGen2jesPileUpPtHFup_branch->SetAddress(&NQGen2jesPileUpPtHFup_);
  NQGen3jesPileUpPtHFup_branch = tree->GetBranch("NQGen3jesPileUpPtHFup");
  if (NQGen3jesPileUpPtHFup_branch) NQGen3jesPileUpPtHFup_branch->SetAddress(&NQGen3jesPileUpPtHFup_);
  NQGen4jesPileUpPtHFup_branch = tree->GetBranch("NQGen4jesPileUpPtHFup");
  if (NQGen4jesPileUpPtHFup_branch) NQGen4jesPileUpPtHFup_branch->SetAddress(&NQGen4jesPileUpPtHFup_);
  NBGen0jesPileUpPtHFup_branch = tree->GetBranch("NBGen0jesPileUpPtHFup");
  if (NBGen0jesPileUpPtHFup_branch) NBGen0jesPileUpPtHFup_branch->SetAddress(&NBGen0jesPileUpPtHFup_);
  NBGen1jesPileUpPtHFup_branch = tree->GetBranch("NBGen1jesPileUpPtHFup");
  if (NBGen1jesPileUpPtHFup_branch) NBGen1jesPileUpPtHFup_branch->SetAddress(&NBGen1jesPileUpPtHFup_);
  NBGen2jesPileUpPtHFup_branch = tree->GetBranch("NBGen2jesPileUpPtHFup");
  if (NBGen2jesPileUpPtHFup_branch) NBGen2jesPileUpPtHFup_branch->SetAddress(&NBGen2jesPileUpPtHFup_);
  NBGen3jesPileUpPtHFup_branch = tree->GetBranch("NBGen3jesPileUpPtHFup");
  if (NBGen3jesPileUpPtHFup_branch) NBGen3jesPileUpPtHFup_branch->SetAddress(&NBGen3jesPileUpPtHFup_);
  NBGen4jesPileUpPtHFup_branch = tree->GetBranch("NBGen4jesPileUpPtHFup");
  if (NBGen4jesPileUpPtHFup_branch) NBGen4jesPileUpPtHFup_branch->SetAddress(&NBGen4jesPileUpPtHFup_);
  NLGen0jesPileUpPtHFup_branch = tree->GetBranch("NLGen0jesPileUpPtHFup");
  if (NLGen0jesPileUpPtHFup_branch) NLGen0jesPileUpPtHFup_branch->SetAddress(&NLGen0jesPileUpPtHFup_);
  NLGen1jesPileUpPtHFup_branch = tree->GetBranch("NLGen1jesPileUpPtHFup");
  if (NLGen1jesPileUpPtHFup_branch) NLGen1jesPileUpPtHFup_branch->SetAddress(&NLGen1jesPileUpPtHFup_);
  NLGen2jesPileUpPtHFup_branch = tree->GetBranch("NLGen2jesPileUpPtHFup");
  if (NLGen2jesPileUpPtHFup_branch) NLGen2jesPileUpPtHFup_branch->SetAddress(&NLGen2jesPileUpPtHFup_);
  NLGen3jesPileUpPtHFup_branch = tree->GetBranch("NLGen3jesPileUpPtHFup");
  if (NLGen3jesPileUpPtHFup_branch) NLGen3jesPileUpPtHFup_branch->SetAddress(&NLGen3jesPileUpPtHFup_);
  NLGen4jesPileUpPtHFup_branch = tree->GetBranch("NLGen4jesPileUpPtHFup");
  if (NLGen4jesPileUpPtHFup_branch) NLGen4jesPileUpPtHFup_branch->SetAddress(&NLGen4jesPileUpPtHFup_);
  NVQGen0jesPileUpPtHFup_branch = tree->GetBranch("NVQGen0jesPileUpPtHFup");
  if (NVQGen0jesPileUpPtHFup_branch) NVQGen0jesPileUpPtHFup_branch->SetAddress(&NVQGen0jesPileUpPtHFup_);
  NVQGen1jesPileUpPtHFup_branch = tree->GetBranch("NVQGen1jesPileUpPtHFup");
  if (NVQGen1jesPileUpPtHFup_branch) NVQGen1jesPileUpPtHFup_branch->SetAddress(&NVQGen1jesPileUpPtHFup_);
  NVQGen2jesPileUpPtHFup_branch = tree->GetBranch("NVQGen2jesPileUpPtHFup");
  if (NVQGen2jesPileUpPtHFup_branch) NVQGen2jesPileUpPtHFup_branch->SetAddress(&NVQGen2jesPileUpPtHFup_);
  NVQGen3jesPileUpPtHFup_branch = tree->GetBranch("NVQGen3jesPileUpPtHFup");
  if (NVQGen3jesPileUpPtHFup_branch) NVQGen3jesPileUpPtHFup_branch->SetAddress(&NVQGen3jesPileUpPtHFup_);
  NVQGen4jesPileUpPtHFup_branch = tree->GetBranch("NVQGen4jesPileUpPtHFup");
  if (NVQGen4jesPileUpPtHFup_branch) NVQGen4jesPileUpPtHFup_branch->SetAddress(&NVQGen4jesPileUpPtHFup_);
  NiFJjesPileUpPtHFup_branch = tree->GetBranch("NiFJjesPileUpPtHFup");
  if (NiFJjesPileUpPtHFup_branch) NiFJjesPileUpPtHFup_branch->SetAddress(&NiFJjesPileUpPtHFup_);
  iVMD0jesPileUpPtHFup_branch = tree->GetBranch("iVMD0jesPileUpPtHFup");
  if (iVMD0jesPileUpPtHFup_branch) iVMD0jesPileUpPtHFup_branch->SetAddress(&iVMD0jesPileUpPtHFup_);
  iVMD1jesPileUpPtHFup_branch = tree->GetBranch("iVMD1jesPileUpPtHFup");
  if (iVMD1jesPileUpPtHFup_branch) iVMD1jesPileUpPtHFup_branch->SetAddress(&iVMD1jesPileUpPtHFup_);
  iVMD2jesPileUpPtHFup_branch = tree->GetBranch("iVMD2jesPileUpPtHFup");
  if (iVMD2jesPileUpPtHFup_branch) iVMD2jesPileUpPtHFup_branch->SetAddress(&iVMD2jesPileUpPtHFup_);
  iVMD3jesPileUpPtHFup_branch = tree->GetBranch("iVMD3jesPileUpPtHFup");
  if (iVMD3jesPileUpPtHFup_branch) iVMD3jesPileUpPtHFup_branch->SetAddress(&iVMD3jesPileUpPtHFup_);
  iVMD4jesPileUpPtHFup_branch = tree->GetBranch("iVMD4jesPileUpPtHFup");
  if (iVMD4jesPileUpPtHFup_branch) iVMD4jesPileUpPtHFup_branch->SetAddress(&iVMD4jesPileUpPtHFup_);
  iWMD0jesPileUpPtHFup_branch = tree->GetBranch("iWMD0jesPileUpPtHFup");
  if (iWMD0jesPileUpPtHFup_branch) iWMD0jesPileUpPtHFup_branch->SetAddress(&iWMD0jesPileUpPtHFup_);
  iWMD1jesPileUpPtHFup_branch = tree->GetBranch("iWMD1jesPileUpPtHFup");
  if (iWMD1jesPileUpPtHFup_branch) iWMD1jesPileUpPtHFup_branch->SetAddress(&iWMD1jesPileUpPtHFup_);
  iWMD2jesPileUpPtHFup_branch = tree->GetBranch("iWMD2jesPileUpPtHFup");
  if (iWMD2jesPileUpPtHFup_branch) iWMD2jesPileUpPtHFup_branch->SetAddress(&iWMD2jesPileUpPtHFup_);
  iWMD3jesPileUpPtHFup_branch = tree->GetBranch("iWMD3jesPileUpPtHFup");
  if (iWMD3jesPileUpPtHFup_branch) iWMD3jesPileUpPtHFup_branch->SetAddress(&iWMD3jesPileUpPtHFup_);
  iWMD4jesPileUpPtHFup_branch = tree->GetBranch("iWMD4jesPileUpPtHFup");
  if (iWMD4jesPileUpPtHFup_branch) iWMD4jesPileUpPtHFup_branch->SetAddress(&iWMD4jesPileUpPtHFup_);
  NJjesPileUpPtHFup_branch = tree->GetBranch("NJjesPileUpPtHFup");
  if (NJjesPileUpPtHFup_branch) NJjesPileUpPtHFup_branch->SetAddress(&NJjesPileUpPtHFup_);
  NbLoosejesPileUpPtHFup_branch = tree->GetBranch("NbLoosejesPileUpPtHFup");
  if (NbLoosejesPileUpPtHFup_branch) NbLoosejesPileUpPtHFup_branch->SetAddress(&NbLoosejesPileUpPtHFup_);
  NbMediumjesPileUpPtHFup_branch = tree->GetBranch("NbMediumjesPileUpPtHFup");
  if (NbMediumjesPileUpPtHFup_branch) NbMediumjesPileUpPtHFup_branch->SetAddress(&NbMediumjesPileUpPtHFup_);
  NbTightjesPileUpPtHFup_branch = tree->GetBranch("NbTightjesPileUpPtHFup");
  if (NbTightjesPileUpPtHFup_branch) NbTightjesPileUpPtHFup_branch->SetAddress(&NbTightjesPileUpPtHFup_);
  NoORNbLoosejesPileUpPtHFup_branch = tree->GetBranch("NoORNbLoosejesPileUpPtHFup");
  if (NoORNbLoosejesPileUpPtHFup_branch) NoORNbLoosejesPileUpPtHFup_branch->SetAddress(&NoORNbLoosejesPileUpPtHFup_);
  NoORNbMediumjesPileUpPtHFup_branch = tree->GetBranch("NoORNbMediumjesPileUpPtHFup");
  if (NoORNbMediumjesPileUpPtHFup_branch) NoORNbMediumjesPileUpPtHFup_branch->SetAddress(&NoORNbMediumjesPileUpPtHFup_);
  NoORNbTightjesPileUpPtHFup_branch = tree->GetBranch("NoORNbTightjesPileUpPtHFup");
  if (NoORNbTightjesPileUpPtHFup_branch) NoORNbTightjesPileUpPtHFup_branch->SetAddress(&NoORNbTightjesPileUpPtHFup_);
  NQJGenjesPileUpPtHFup_branch = tree->GetBranch("NQJGenjesPileUpPtHFup");
  if (NQJGenjesPileUpPtHFup_branch) NQJGenjesPileUpPtHFup_branch->SetAddress(&NQJGenjesPileUpPtHFup_);
  NBJGenjesPileUpPtHFup_branch = tree->GetBranch("NBJGenjesPileUpPtHFup");
  if (NBJGenjesPileUpPtHFup_branch) NBJGenjesPileUpPtHFup_branch->SetAddress(&NBJGenjesPileUpPtHFup_);
  NLJGenjesPileUpPtHFup_branch = tree->GetBranch("NLJGenjesPileUpPtHFup");
  if (NLJGenjesPileUpPtHFup_branch) NLJGenjesPileUpPtHFup_branch->SetAddress(&NLJGenjesPileUpPtHFup_);
  MVVXjesPileUpPtHFup_branch = tree->GetBranch("MVVXjesPileUpPtHFup");
  if (MVVXjesPileUpPtHFup_branch) MVVXjesPileUpPtHFup_branch->SetAddress(&MVVXjesPileUpPtHFup_);
  PtVVXjesPileUpPtHFup_branch = tree->GetBranch("PtVVXjesPileUpPtHFup");
  if (PtVVXjesPileUpPtHFup_branch) PtVVXjesPileUpPtHFup_branch->SetAddress(&PtVVXjesPileUpPtHFup_);
  HTjesPileUpPtHFup_branch = tree->GetBranch("HTjesPileUpPtHFup");
  if (HTjesPileUpPtHFup_branch) HTjesPileUpPtHFup_branch->SetAddress(&HTjesPileUpPtHFup_);
  HTJjesPileUpPtHFup_branch = tree->GetBranch("HTJjesPileUpPtHFup");
  if (HTJjesPileUpPtHFup_branch) HTJjesPileUpPtHFup_branch->SetAddress(&HTJjesPileUpPtHFup_);
  HTFJjesPileUpPtHFup_branch = tree->GetBranch("HTFJjesPileUpPtHFup");
  if (HTFJjesPileUpPtHFup_branch) HTFJjesPileUpPtHFup_branch->SetAddress(&HTFJjesPileUpPtHFup_);
  SumPtFJjesPileUpPtHFup_branch = tree->GetBranch("SumPtFJjesPileUpPtHFup");
  if (SumPtFJjesPileUpPtHFup_branch) SumPtFJjesPileUpPtHFup_branch->SetAddress(&SumPtFJjesPileUpPtHFup_);
  SumPtJjesPileUpPtHFup_branch = tree->GetBranch("SumPtJjesPileUpPtHFup");
  if (SumPtJjesPileUpPtHFup_branch) SumPtJjesPileUpPtHFup_branch->SetAddress(&SumPtJjesPileUpPtHFup_);
  NFJjesPileUpPtHFdn_branch = tree->GetBranch("NFJjesPileUpPtHFdn");
  if (NFJjesPileUpPtHFdn_branch) NFJjesPileUpPtHFdn_branch->SetAddress(&NFJjesPileUpPtHFdn_);
  VMD0jesPileUpPtHFdn_branch = tree->GetBranch("VMD0jesPileUpPtHFdn");
  if (VMD0jesPileUpPtHFdn_branch) VMD0jesPileUpPtHFdn_branch->SetAddress(&VMD0jesPileUpPtHFdn_);
  VMD1jesPileUpPtHFdn_branch = tree->GetBranch("VMD1jesPileUpPtHFdn");
  if (VMD1jesPileUpPtHFdn_branch) VMD1jesPileUpPtHFdn_branch->SetAddress(&VMD1jesPileUpPtHFdn_);
  VMD2jesPileUpPtHFdn_branch = tree->GetBranch("VMD2jesPileUpPtHFdn");
  if (VMD2jesPileUpPtHFdn_branch) VMD2jesPileUpPtHFdn_branch->SetAddress(&VMD2jesPileUpPtHFdn_);
  VMD3jesPileUpPtHFdn_branch = tree->GetBranch("VMD3jesPileUpPtHFdn");
  if (VMD3jesPileUpPtHFdn_branch) VMD3jesPileUpPtHFdn_branch->SetAddress(&VMD3jesPileUpPtHFdn_);
  VMD4jesPileUpPtHFdn_branch = tree->GetBranch("VMD4jesPileUpPtHFdn");
  if (VMD4jesPileUpPtHFdn_branch) VMD4jesPileUpPtHFdn_branch->SetAddress(&VMD4jesPileUpPtHFdn_);
  WMD0jesPileUpPtHFdn_branch = tree->GetBranch("WMD0jesPileUpPtHFdn");
  if (WMD0jesPileUpPtHFdn_branch) WMD0jesPileUpPtHFdn_branch->SetAddress(&WMD0jesPileUpPtHFdn_);
  WMD1jesPileUpPtHFdn_branch = tree->GetBranch("WMD1jesPileUpPtHFdn");
  if (WMD1jesPileUpPtHFdn_branch) WMD1jesPileUpPtHFdn_branch->SetAddress(&WMD1jesPileUpPtHFdn_);
  WMD2jesPileUpPtHFdn_branch = tree->GetBranch("WMD2jesPileUpPtHFdn");
  if (WMD2jesPileUpPtHFdn_branch) WMD2jesPileUpPtHFdn_branch->SetAddress(&WMD2jesPileUpPtHFdn_);
  WMD3jesPileUpPtHFdn_branch = tree->GetBranch("WMD3jesPileUpPtHFdn");
  if (WMD3jesPileUpPtHFdn_branch) WMD3jesPileUpPtHFdn_branch->SetAddress(&WMD3jesPileUpPtHFdn_);
  WMD4jesPileUpPtHFdn_branch = tree->GetBranch("WMD4jesPileUpPtHFdn");
  if (WMD4jesPileUpPtHFdn_branch) WMD4jesPileUpPtHFdn_branch->SetAddress(&WMD4jesPileUpPtHFdn_);
  NQGen0jesPileUpPtHFdn_branch = tree->GetBranch("NQGen0jesPileUpPtHFdn");
  if (NQGen0jesPileUpPtHFdn_branch) NQGen0jesPileUpPtHFdn_branch->SetAddress(&NQGen0jesPileUpPtHFdn_);
  NQGen1jesPileUpPtHFdn_branch = tree->GetBranch("NQGen1jesPileUpPtHFdn");
  if (NQGen1jesPileUpPtHFdn_branch) NQGen1jesPileUpPtHFdn_branch->SetAddress(&NQGen1jesPileUpPtHFdn_);
  NQGen2jesPileUpPtHFdn_branch = tree->GetBranch("NQGen2jesPileUpPtHFdn");
  if (NQGen2jesPileUpPtHFdn_branch) NQGen2jesPileUpPtHFdn_branch->SetAddress(&NQGen2jesPileUpPtHFdn_);
  NQGen3jesPileUpPtHFdn_branch = tree->GetBranch("NQGen3jesPileUpPtHFdn");
  if (NQGen3jesPileUpPtHFdn_branch) NQGen3jesPileUpPtHFdn_branch->SetAddress(&NQGen3jesPileUpPtHFdn_);
  NQGen4jesPileUpPtHFdn_branch = tree->GetBranch("NQGen4jesPileUpPtHFdn");
  if (NQGen4jesPileUpPtHFdn_branch) NQGen4jesPileUpPtHFdn_branch->SetAddress(&NQGen4jesPileUpPtHFdn_);
  NBGen0jesPileUpPtHFdn_branch = tree->GetBranch("NBGen0jesPileUpPtHFdn");
  if (NBGen0jesPileUpPtHFdn_branch) NBGen0jesPileUpPtHFdn_branch->SetAddress(&NBGen0jesPileUpPtHFdn_);
  NBGen1jesPileUpPtHFdn_branch = tree->GetBranch("NBGen1jesPileUpPtHFdn");
  if (NBGen1jesPileUpPtHFdn_branch) NBGen1jesPileUpPtHFdn_branch->SetAddress(&NBGen1jesPileUpPtHFdn_);
  NBGen2jesPileUpPtHFdn_branch = tree->GetBranch("NBGen2jesPileUpPtHFdn");
  if (NBGen2jesPileUpPtHFdn_branch) NBGen2jesPileUpPtHFdn_branch->SetAddress(&NBGen2jesPileUpPtHFdn_);
  NBGen3jesPileUpPtHFdn_branch = tree->GetBranch("NBGen3jesPileUpPtHFdn");
  if (NBGen3jesPileUpPtHFdn_branch) NBGen3jesPileUpPtHFdn_branch->SetAddress(&NBGen3jesPileUpPtHFdn_);
  NBGen4jesPileUpPtHFdn_branch = tree->GetBranch("NBGen4jesPileUpPtHFdn");
  if (NBGen4jesPileUpPtHFdn_branch) NBGen4jesPileUpPtHFdn_branch->SetAddress(&NBGen4jesPileUpPtHFdn_);
  NLGen0jesPileUpPtHFdn_branch = tree->GetBranch("NLGen0jesPileUpPtHFdn");
  if (NLGen0jesPileUpPtHFdn_branch) NLGen0jesPileUpPtHFdn_branch->SetAddress(&NLGen0jesPileUpPtHFdn_);
  NLGen1jesPileUpPtHFdn_branch = tree->GetBranch("NLGen1jesPileUpPtHFdn");
  if (NLGen1jesPileUpPtHFdn_branch) NLGen1jesPileUpPtHFdn_branch->SetAddress(&NLGen1jesPileUpPtHFdn_);
  NLGen2jesPileUpPtHFdn_branch = tree->GetBranch("NLGen2jesPileUpPtHFdn");
  if (NLGen2jesPileUpPtHFdn_branch) NLGen2jesPileUpPtHFdn_branch->SetAddress(&NLGen2jesPileUpPtHFdn_);
  NLGen3jesPileUpPtHFdn_branch = tree->GetBranch("NLGen3jesPileUpPtHFdn");
  if (NLGen3jesPileUpPtHFdn_branch) NLGen3jesPileUpPtHFdn_branch->SetAddress(&NLGen3jesPileUpPtHFdn_);
  NLGen4jesPileUpPtHFdn_branch = tree->GetBranch("NLGen4jesPileUpPtHFdn");
  if (NLGen4jesPileUpPtHFdn_branch) NLGen4jesPileUpPtHFdn_branch->SetAddress(&NLGen4jesPileUpPtHFdn_);
  NVQGen0jesPileUpPtHFdn_branch = tree->GetBranch("NVQGen0jesPileUpPtHFdn");
  if (NVQGen0jesPileUpPtHFdn_branch) NVQGen0jesPileUpPtHFdn_branch->SetAddress(&NVQGen0jesPileUpPtHFdn_);
  NVQGen1jesPileUpPtHFdn_branch = tree->GetBranch("NVQGen1jesPileUpPtHFdn");
  if (NVQGen1jesPileUpPtHFdn_branch) NVQGen1jesPileUpPtHFdn_branch->SetAddress(&NVQGen1jesPileUpPtHFdn_);
  NVQGen2jesPileUpPtHFdn_branch = tree->GetBranch("NVQGen2jesPileUpPtHFdn");
  if (NVQGen2jesPileUpPtHFdn_branch) NVQGen2jesPileUpPtHFdn_branch->SetAddress(&NVQGen2jesPileUpPtHFdn_);
  NVQGen3jesPileUpPtHFdn_branch = tree->GetBranch("NVQGen3jesPileUpPtHFdn");
  if (NVQGen3jesPileUpPtHFdn_branch) NVQGen3jesPileUpPtHFdn_branch->SetAddress(&NVQGen3jesPileUpPtHFdn_);
  NVQGen4jesPileUpPtHFdn_branch = tree->GetBranch("NVQGen4jesPileUpPtHFdn");
  if (NVQGen4jesPileUpPtHFdn_branch) NVQGen4jesPileUpPtHFdn_branch->SetAddress(&NVQGen4jesPileUpPtHFdn_);
  NiFJjesPileUpPtHFdn_branch = tree->GetBranch("NiFJjesPileUpPtHFdn");
  if (NiFJjesPileUpPtHFdn_branch) NiFJjesPileUpPtHFdn_branch->SetAddress(&NiFJjesPileUpPtHFdn_);
  iVMD0jesPileUpPtHFdn_branch = tree->GetBranch("iVMD0jesPileUpPtHFdn");
  if (iVMD0jesPileUpPtHFdn_branch) iVMD0jesPileUpPtHFdn_branch->SetAddress(&iVMD0jesPileUpPtHFdn_);
  iVMD1jesPileUpPtHFdn_branch = tree->GetBranch("iVMD1jesPileUpPtHFdn");
  if (iVMD1jesPileUpPtHFdn_branch) iVMD1jesPileUpPtHFdn_branch->SetAddress(&iVMD1jesPileUpPtHFdn_);
  iVMD2jesPileUpPtHFdn_branch = tree->GetBranch("iVMD2jesPileUpPtHFdn");
  if (iVMD2jesPileUpPtHFdn_branch) iVMD2jesPileUpPtHFdn_branch->SetAddress(&iVMD2jesPileUpPtHFdn_);
  iVMD3jesPileUpPtHFdn_branch = tree->GetBranch("iVMD3jesPileUpPtHFdn");
  if (iVMD3jesPileUpPtHFdn_branch) iVMD3jesPileUpPtHFdn_branch->SetAddress(&iVMD3jesPileUpPtHFdn_);
  iVMD4jesPileUpPtHFdn_branch = tree->GetBranch("iVMD4jesPileUpPtHFdn");
  if (iVMD4jesPileUpPtHFdn_branch) iVMD4jesPileUpPtHFdn_branch->SetAddress(&iVMD4jesPileUpPtHFdn_);
  iWMD0jesPileUpPtHFdn_branch = tree->GetBranch("iWMD0jesPileUpPtHFdn");
  if (iWMD0jesPileUpPtHFdn_branch) iWMD0jesPileUpPtHFdn_branch->SetAddress(&iWMD0jesPileUpPtHFdn_);
  iWMD1jesPileUpPtHFdn_branch = tree->GetBranch("iWMD1jesPileUpPtHFdn");
  if (iWMD1jesPileUpPtHFdn_branch) iWMD1jesPileUpPtHFdn_branch->SetAddress(&iWMD1jesPileUpPtHFdn_);
  iWMD2jesPileUpPtHFdn_branch = tree->GetBranch("iWMD2jesPileUpPtHFdn");
  if (iWMD2jesPileUpPtHFdn_branch) iWMD2jesPileUpPtHFdn_branch->SetAddress(&iWMD2jesPileUpPtHFdn_);
  iWMD3jesPileUpPtHFdn_branch = tree->GetBranch("iWMD3jesPileUpPtHFdn");
  if (iWMD3jesPileUpPtHFdn_branch) iWMD3jesPileUpPtHFdn_branch->SetAddress(&iWMD3jesPileUpPtHFdn_);
  iWMD4jesPileUpPtHFdn_branch = tree->GetBranch("iWMD4jesPileUpPtHFdn");
  if (iWMD4jesPileUpPtHFdn_branch) iWMD4jesPileUpPtHFdn_branch->SetAddress(&iWMD4jesPileUpPtHFdn_);
  NJjesPileUpPtHFdn_branch = tree->GetBranch("NJjesPileUpPtHFdn");
  if (NJjesPileUpPtHFdn_branch) NJjesPileUpPtHFdn_branch->SetAddress(&NJjesPileUpPtHFdn_);
  NbLoosejesPileUpPtHFdn_branch = tree->GetBranch("NbLoosejesPileUpPtHFdn");
  if (NbLoosejesPileUpPtHFdn_branch) NbLoosejesPileUpPtHFdn_branch->SetAddress(&NbLoosejesPileUpPtHFdn_);
  NbMediumjesPileUpPtHFdn_branch = tree->GetBranch("NbMediumjesPileUpPtHFdn");
  if (NbMediumjesPileUpPtHFdn_branch) NbMediumjesPileUpPtHFdn_branch->SetAddress(&NbMediumjesPileUpPtHFdn_);
  NbTightjesPileUpPtHFdn_branch = tree->GetBranch("NbTightjesPileUpPtHFdn");
  if (NbTightjesPileUpPtHFdn_branch) NbTightjesPileUpPtHFdn_branch->SetAddress(&NbTightjesPileUpPtHFdn_);
  NoORNbLoosejesPileUpPtHFdn_branch = tree->GetBranch("NoORNbLoosejesPileUpPtHFdn");
  if (NoORNbLoosejesPileUpPtHFdn_branch) NoORNbLoosejesPileUpPtHFdn_branch->SetAddress(&NoORNbLoosejesPileUpPtHFdn_);
  NoORNbMediumjesPileUpPtHFdn_branch = tree->GetBranch("NoORNbMediumjesPileUpPtHFdn");
  if (NoORNbMediumjesPileUpPtHFdn_branch) NoORNbMediumjesPileUpPtHFdn_branch->SetAddress(&NoORNbMediumjesPileUpPtHFdn_);
  NoORNbTightjesPileUpPtHFdn_branch = tree->GetBranch("NoORNbTightjesPileUpPtHFdn");
  if (NoORNbTightjesPileUpPtHFdn_branch) NoORNbTightjesPileUpPtHFdn_branch->SetAddress(&NoORNbTightjesPileUpPtHFdn_);
  NQJGenjesPileUpPtHFdn_branch = tree->GetBranch("NQJGenjesPileUpPtHFdn");
  if (NQJGenjesPileUpPtHFdn_branch) NQJGenjesPileUpPtHFdn_branch->SetAddress(&NQJGenjesPileUpPtHFdn_);
  NBJGenjesPileUpPtHFdn_branch = tree->GetBranch("NBJGenjesPileUpPtHFdn");
  if (NBJGenjesPileUpPtHFdn_branch) NBJGenjesPileUpPtHFdn_branch->SetAddress(&NBJGenjesPileUpPtHFdn_);
  NLJGenjesPileUpPtHFdn_branch = tree->GetBranch("NLJGenjesPileUpPtHFdn");
  if (NLJGenjesPileUpPtHFdn_branch) NLJGenjesPileUpPtHFdn_branch->SetAddress(&NLJGenjesPileUpPtHFdn_);
  MVVXjesPileUpPtHFdn_branch = tree->GetBranch("MVVXjesPileUpPtHFdn");
  if (MVVXjesPileUpPtHFdn_branch) MVVXjesPileUpPtHFdn_branch->SetAddress(&MVVXjesPileUpPtHFdn_);
  PtVVXjesPileUpPtHFdn_branch = tree->GetBranch("PtVVXjesPileUpPtHFdn");
  if (PtVVXjesPileUpPtHFdn_branch) PtVVXjesPileUpPtHFdn_branch->SetAddress(&PtVVXjesPileUpPtHFdn_);
  HTjesPileUpPtHFdn_branch = tree->GetBranch("HTjesPileUpPtHFdn");
  if (HTjesPileUpPtHFdn_branch) HTjesPileUpPtHFdn_branch->SetAddress(&HTjesPileUpPtHFdn_);
  HTJjesPileUpPtHFdn_branch = tree->GetBranch("HTJjesPileUpPtHFdn");
  if (HTJjesPileUpPtHFdn_branch) HTJjesPileUpPtHFdn_branch->SetAddress(&HTJjesPileUpPtHFdn_);
  HTFJjesPileUpPtHFdn_branch = tree->GetBranch("HTFJjesPileUpPtHFdn");
  if (HTFJjesPileUpPtHFdn_branch) HTFJjesPileUpPtHFdn_branch->SetAddress(&HTFJjesPileUpPtHFdn_);
  SumPtFJjesPileUpPtHFdn_branch = tree->GetBranch("SumPtFJjesPileUpPtHFdn");
  if (SumPtFJjesPileUpPtHFdn_branch) SumPtFJjesPileUpPtHFdn_branch->SetAddress(&SumPtFJjesPileUpPtHFdn_);
  SumPtJjesPileUpPtHFdn_branch = tree->GetBranch("SumPtJjesPileUpPtHFdn");
  if (SumPtJjesPileUpPtHFdn_branch) SumPtJjesPileUpPtHFdn_branch->SetAddress(&SumPtJjesPileUpPtHFdn_);
  isHad0_branch = tree->GetBranch("isHad0");
  if (isHad0_branch) isHad0_branch->SetAddress(&isHad0_);
  isHad1_branch = tree->GetBranch("isHad1");
  if (isHad1_branch) isHad1_branch->SetAddress(&isHad1_);
  isHad2_branch = tree->GetBranch("isHad2");
  if (isHad2_branch) isHad2_branch->SetAddress(&isHad2_);

  tree->SetMakeClass(0);
}

void VVV0Tree::GetEntry(unsigned int idx) {
  // this only marks branches as not loaded, saving a lot of time
  index = idx;
  isData_isLoaded = false;
  run_isLoaded = false;
  lumi_isLoaded = false;
  evt_isLoaded = false;
  year_isLoaded = false;
  genWeight_isLoaded = false;
  wgt_isLoaded = false;
  LHEReweightingWeight_isLoaded = false;
  prefireWgt_isLoaded = false;
  prefireWgtUp_isLoaded = false;
  prefireWgtDn_isLoaded = false;
  puWgt_isLoaded = false;
  puWgtUp_isLoaded = false;
  puWgtDn_isLoaded = false;
  pu_nPU_isLoaded = false;
  pu_nTrueInt_isLoaded = false;
  trigWgt_isLoaded = false;
  trigWgtUp_isLoaded = false;
  trigWgtDn_isLoaded = false;
  PDF_isLoaded = false;
  QCDScale_isLoaded = false;
  trigger_isLoaded = false;
  is0Lep_isLoaded = false;
  is1Lep_isLoaded = false;
  Lep_isLoaded = false;
  LepFlav_isLoaded = false;
  Js_isLoaded = false;
  NFJ_isLoaded = false;
  FJ0_isLoaded = false;
  FJ1_isLoaded = false;
  FJ2_isLoaded = false;
  FJ3_isLoaded = false;
  FJ4_isLoaded = false;
  VMD0_isLoaded = false;
  VMD1_isLoaded = false;
  VMD2_isLoaded = false;
  VMD3_isLoaded = false;
  VMD4_isLoaded = false;
  WMD0_isLoaded = false;
  WMD1_isLoaded = false;
  WMD2_isLoaded = false;
  WMD3_isLoaded = false;
  WMD4_isLoaded = false;
  NQGen0_isLoaded = false;
  NQGen1_isLoaded = false;
  NQGen2_isLoaded = false;
  NQGen3_isLoaded = false;
  NQGen4_isLoaded = false;
  NBGen0_isLoaded = false;
  NBGen1_isLoaded = false;
  NBGen2_isLoaded = false;
  NBGen3_isLoaded = false;
  NBGen4_isLoaded = false;
  NLGen0_isLoaded = false;
  NLGen1_isLoaded = false;
  NLGen2_isLoaded = false;
  NLGen3_isLoaded = false;
  NLGen4_isLoaded = false;
  NVQGen0_isLoaded = false;
  NVQGen1_isLoaded = false;
  NVQGen2_isLoaded = false;
  NVQGen3_isLoaded = false;
  NVQGen4_isLoaded = false;
  NiFJ_isLoaded = false;
  iFJ0_isLoaded = false;
  iFJ1_isLoaded = false;
  iFJ2_isLoaded = false;
  iFJ3_isLoaded = false;
  iFJ4_isLoaded = false;
  iVMD0_isLoaded = false;
  iVMD1_isLoaded = false;
  iVMD2_isLoaded = false;
  iVMD3_isLoaded = false;
  iVMD4_isLoaded = false;
  iWMD0_isLoaded = false;
  iWMD1_isLoaded = false;
  iWMD2_isLoaded = false;
  iWMD3_isLoaded = false;
  iWMD4_isLoaded = false;
  MET_isLoaded = false;
  Nu_isLoaded = false;
  NJ_isLoaded = false;
  NbLoose_isLoaded = false;
  NbMedium_isLoaded = false;
  NbTight_isLoaded = false;
  NoORNbLoose_isLoaded = false;
  NoORNbMedium_isLoaded = false;
  NoORNbTight_isLoaded = false;
  J0_isLoaded = false;
  J1_isLoaded = false;
  J2_isLoaded = false;
  J3_isLoaded = false;
  J4_isLoaded = false;
  J5_isLoaded = false;
  J6_isLoaded = false;
  J7_isLoaded = false;
  NQJGen_isLoaded = false;
  NBJGen_isLoaded = false;
  NLJGen_isLoaded = false;
  MVVX_isLoaded = false;
  PtVVX_isLoaded = false;
  HT_isLoaded = false;
  HTJ_isLoaded = false;
  HTFJ_isLoaded = false;
  SumPtFJ_isLoaded = false;
  SumPtJ_isLoaded = false;
  JsJESUp_isLoaded = false;
  NFJJESUp_isLoaded = false;
  FJ0JESUp_isLoaded = false;
  FJ1JESUp_isLoaded = false;
  FJ2JESUp_isLoaded = false;
  FJ3JESUp_isLoaded = false;
  FJ4JESUp_isLoaded = false;
  VMD0JESUp_isLoaded = false;
  VMD1JESUp_isLoaded = false;
  VMD2JESUp_isLoaded = false;
  VMD3JESUp_isLoaded = false;
  VMD4JESUp_isLoaded = false;
  WMD0JESUp_isLoaded = false;
  WMD1JESUp_isLoaded = false;
  WMD2JESUp_isLoaded = false;
  WMD3JESUp_isLoaded = false;
  WMD4JESUp_isLoaded = false;
  NQGen0JESUp_isLoaded = false;
  NQGen1JESUp_isLoaded = false;
  NQGen2JESUp_isLoaded = false;
  NQGen3JESUp_isLoaded = false;
  NQGen4JESUp_isLoaded = false;
  NBGen0JESUp_isLoaded = false;
  NBGen1JESUp_isLoaded = false;
  NBGen2JESUp_isLoaded = false;
  NBGen3JESUp_isLoaded = false;
  NBGen4JESUp_isLoaded = false;
  NLGen0JESUp_isLoaded = false;
  NLGen1JESUp_isLoaded = false;
  NLGen2JESUp_isLoaded = false;
  NLGen3JESUp_isLoaded = false;
  NLGen4JESUp_isLoaded = false;
  NVQGen0JESUp_isLoaded = false;
  NVQGen1JESUp_isLoaded = false;
  NVQGen2JESUp_isLoaded = false;
  NVQGen3JESUp_isLoaded = false;
  NVQGen4JESUp_isLoaded = false;
  NiFJJESUp_isLoaded = false;
  iFJ0JESUp_isLoaded = false;
  iFJ1JESUp_isLoaded = false;
  iFJ2JESUp_isLoaded = false;
  iFJ3JESUp_isLoaded = false;
  iFJ4JESUp_isLoaded = false;
  iVMD0JESUp_isLoaded = false;
  iVMD1JESUp_isLoaded = false;
  iVMD2JESUp_isLoaded = false;
  iVMD3JESUp_isLoaded = false;
  iVMD4JESUp_isLoaded = false;
  iWMD0JESUp_isLoaded = false;
  iWMD1JESUp_isLoaded = false;
  iWMD2JESUp_isLoaded = false;
  iWMD3JESUp_isLoaded = false;
  iWMD4JESUp_isLoaded = false;
  METJESUp_isLoaded = false;
  NuJESUp_isLoaded = false;
  NJJESUp_isLoaded = false;
  NbLooseJESUp_isLoaded = false;
  NbMediumJESUp_isLoaded = false;
  NbTightJESUp_isLoaded = false;
  NoORNbLooseJESUp_isLoaded = false;
  NoORNbMediumJESUp_isLoaded = false;
  NoORNbTightJESUp_isLoaded = false;
  J0JESUp_isLoaded = false;
  J1JESUp_isLoaded = false;
  J2JESUp_isLoaded = false;
  J3JESUp_isLoaded = false;
  J4JESUp_isLoaded = false;
  J5JESUp_isLoaded = false;
  J6JESUp_isLoaded = false;
  J7JESUp_isLoaded = false;
  NQJGenJESUp_isLoaded = false;
  NBJGenJESUp_isLoaded = false;
  NLJGenJESUp_isLoaded = false;
  MVVXJESUp_isLoaded = false;
  PtVVXJESUp_isLoaded = false;
  HTJESUp_isLoaded = false;
  HTJJESUp_isLoaded = false;
  HTFJJESUp_isLoaded = false;
  SumPtFJJESUp_isLoaded = false;
  SumPtJJESUp_isLoaded = false;
  JsJESDn_isLoaded = false;
  NFJJESDn_isLoaded = false;
  FJ0JESDn_isLoaded = false;
  FJ1JESDn_isLoaded = false;
  FJ2JESDn_isLoaded = false;
  FJ3JESDn_isLoaded = false;
  FJ4JESDn_isLoaded = false;
  VMD0JESDn_isLoaded = false;
  VMD1JESDn_isLoaded = false;
  VMD2JESDn_isLoaded = false;
  VMD3JESDn_isLoaded = false;
  VMD4JESDn_isLoaded = false;
  WMD0JESDn_isLoaded = false;
  WMD1JESDn_isLoaded = false;
  WMD2JESDn_isLoaded = false;
  WMD3JESDn_isLoaded = false;
  WMD4JESDn_isLoaded = false;
  NQGen0JESDn_isLoaded = false;
  NQGen1JESDn_isLoaded = false;
  NQGen2JESDn_isLoaded = false;
  NQGen3JESDn_isLoaded = false;
  NQGen4JESDn_isLoaded = false;
  NBGen0JESDn_isLoaded = false;
  NBGen1JESDn_isLoaded = false;
  NBGen2JESDn_isLoaded = false;
  NBGen3JESDn_isLoaded = false;
  NBGen4JESDn_isLoaded = false;
  NLGen0JESDn_isLoaded = false;
  NLGen1JESDn_isLoaded = false;
  NLGen2JESDn_isLoaded = false;
  NLGen3JESDn_isLoaded = false;
  NLGen4JESDn_isLoaded = false;
  NVQGen0JESDn_isLoaded = false;
  NVQGen1JESDn_isLoaded = false;
  NVQGen2JESDn_isLoaded = false;
  NVQGen3JESDn_isLoaded = false;
  NVQGen4JESDn_isLoaded = false;
  NiFJJESDn_isLoaded = false;
  iFJ0JESDn_isLoaded = false;
  iFJ1JESDn_isLoaded = false;
  iFJ2JESDn_isLoaded = false;
  iFJ3JESDn_isLoaded = false;
  iFJ4JESDn_isLoaded = false;
  iVMD0JESDn_isLoaded = false;
  iVMD1JESDn_isLoaded = false;
  iVMD2JESDn_isLoaded = false;
  iVMD3JESDn_isLoaded = false;
  iVMD4JESDn_isLoaded = false;
  iWMD0JESDn_isLoaded = false;
  iWMD1JESDn_isLoaded = false;
  iWMD2JESDn_isLoaded = false;
  iWMD3JESDn_isLoaded = false;
  iWMD4JESDn_isLoaded = false;
  METJESDn_isLoaded = false;
  NuJESDn_isLoaded = false;
  NJJESDn_isLoaded = false;
  NbLooseJESDn_isLoaded = false;
  NbMediumJESDn_isLoaded = false;
  NbTightJESDn_isLoaded = false;
  NoORNbLooseJESDn_isLoaded = false;
  NoORNbMediumJESDn_isLoaded = false;
  NoORNbTightJESDn_isLoaded = false;
  J0JESDn_isLoaded = false;
  J1JESDn_isLoaded = false;
  J2JESDn_isLoaded = false;
  J3JESDn_isLoaded = false;
  J4JESDn_isLoaded = false;
  J5JESDn_isLoaded = false;
  J6JESDn_isLoaded = false;
  J7JESDn_isLoaded = false;
  NQJGenJESDn_isLoaded = false;
  NBJGenJESDn_isLoaded = false;
  NLJGenJESDn_isLoaded = false;
  MVVXJESDn_isLoaded = false;
  PtVVXJESDn_isLoaded = false;
  HTJESDn_isLoaded = false;
  HTJJESDn_isLoaded = false;
  HTFJJESDn_isLoaded = false;
  SumPtFJJESDn_isLoaded = false;
  SumPtJJESDn_isLoaded = false;
  JsJERUp_isLoaded = false;
  NFJJERUp_isLoaded = false;
  FJ0JERUp_isLoaded = false;
  FJ1JERUp_isLoaded = false;
  FJ2JERUp_isLoaded = false;
  FJ3JERUp_isLoaded = false;
  FJ4JERUp_isLoaded = false;
  VMD0JERUp_isLoaded = false;
  VMD1JERUp_isLoaded = false;
  VMD2JERUp_isLoaded = false;
  VMD3JERUp_isLoaded = false;
  VMD4JERUp_isLoaded = false;
  WMD0JERUp_isLoaded = false;
  WMD1JERUp_isLoaded = false;
  WMD2JERUp_isLoaded = false;
  WMD3JERUp_isLoaded = false;
  WMD4JERUp_isLoaded = false;
  NQGen0JERUp_isLoaded = false;
  NQGen1JERUp_isLoaded = false;
  NQGen2JERUp_isLoaded = false;
  NQGen3JERUp_isLoaded = false;
  NQGen4JERUp_isLoaded = false;
  NBGen0JERUp_isLoaded = false;
  NBGen1JERUp_isLoaded = false;
  NBGen2JERUp_isLoaded = false;
  NBGen3JERUp_isLoaded = false;
  NBGen4JERUp_isLoaded = false;
  NLGen0JERUp_isLoaded = false;
  NLGen1JERUp_isLoaded = false;
  NLGen2JERUp_isLoaded = false;
  NLGen3JERUp_isLoaded = false;
  NLGen4JERUp_isLoaded = false;
  NVQGen0JERUp_isLoaded = false;
  NVQGen1JERUp_isLoaded = false;
  NVQGen2JERUp_isLoaded = false;
  NVQGen3JERUp_isLoaded = false;
  NVQGen4JERUp_isLoaded = false;
  NiFJJERUp_isLoaded = false;
  iFJ0JERUp_isLoaded = false;
  iFJ1JERUp_isLoaded = false;
  iFJ2JERUp_isLoaded = false;
  iFJ3JERUp_isLoaded = false;
  iFJ4JERUp_isLoaded = false;
  iVMD0JERUp_isLoaded = false;
  iVMD1JERUp_isLoaded = false;
  iVMD2JERUp_isLoaded = false;
  iVMD3JERUp_isLoaded = false;
  iVMD4JERUp_isLoaded = false;
  iWMD0JERUp_isLoaded = false;
  iWMD1JERUp_isLoaded = false;
  iWMD2JERUp_isLoaded = false;
  iWMD3JERUp_isLoaded = false;
  iWMD4JERUp_isLoaded = false;
  METJERUp_isLoaded = false;
  NuJERUp_isLoaded = false;
  NJJERUp_isLoaded = false;
  NbLooseJERUp_isLoaded = false;
  NbMediumJERUp_isLoaded = false;
  NbTightJERUp_isLoaded = false;
  NoORNbLooseJERUp_isLoaded = false;
  NoORNbMediumJERUp_isLoaded = false;
  NoORNbTightJERUp_isLoaded = false;
  J0JERUp_isLoaded = false;
  J1JERUp_isLoaded = false;
  J2JERUp_isLoaded = false;
  J3JERUp_isLoaded = false;
  J4JERUp_isLoaded = false;
  J5JERUp_isLoaded = false;
  J6JERUp_isLoaded = false;
  J7JERUp_isLoaded = false;
  NQJGenJERUp_isLoaded = false;
  NBJGenJERUp_isLoaded = false;
  NLJGenJERUp_isLoaded = false;
  MVVXJERUp_isLoaded = false;
  PtVVXJERUp_isLoaded = false;
  HTJERUp_isLoaded = false;
  HTJJERUp_isLoaded = false;
  HTFJJERUp_isLoaded = false;
  SumPtFJJERUp_isLoaded = false;
  SumPtJJERUp_isLoaded = false;
  JsJERDn_isLoaded = false;
  NFJJERDn_isLoaded = false;
  FJ0JERDn_isLoaded = false;
  FJ1JERDn_isLoaded = false;
  FJ2JERDn_isLoaded = false;
  FJ3JERDn_isLoaded = false;
  FJ4JERDn_isLoaded = false;
  VMD0JERDn_isLoaded = false;
  VMD1JERDn_isLoaded = false;
  VMD2JERDn_isLoaded = false;
  VMD3JERDn_isLoaded = false;
  VMD4JERDn_isLoaded = false;
  WMD0JERDn_isLoaded = false;
  WMD1JERDn_isLoaded = false;
  WMD2JERDn_isLoaded = false;
  WMD3JERDn_isLoaded = false;
  WMD4JERDn_isLoaded = false;
  NQGen0JERDn_isLoaded = false;
  NQGen1JERDn_isLoaded = false;
  NQGen2JERDn_isLoaded = false;
  NQGen3JERDn_isLoaded = false;
  NQGen4JERDn_isLoaded = false;
  NBGen0JERDn_isLoaded = false;
  NBGen1JERDn_isLoaded = false;
  NBGen2JERDn_isLoaded = false;
  NBGen3JERDn_isLoaded = false;
  NBGen4JERDn_isLoaded = false;
  NLGen0JERDn_isLoaded = false;
  NLGen1JERDn_isLoaded = false;
  NLGen2JERDn_isLoaded = false;
  NLGen3JERDn_isLoaded = false;
  NLGen4JERDn_isLoaded = false;
  NVQGen0JERDn_isLoaded = false;
  NVQGen1JERDn_isLoaded = false;
  NVQGen2JERDn_isLoaded = false;
  NVQGen3JERDn_isLoaded = false;
  NVQGen4JERDn_isLoaded = false;
  NiFJJERDn_isLoaded = false;
  iFJ0JERDn_isLoaded = false;
  iFJ1JERDn_isLoaded = false;
  iFJ2JERDn_isLoaded = false;
  iFJ3JERDn_isLoaded = false;
  iFJ4JERDn_isLoaded = false;
  iVMD0JERDn_isLoaded = false;
  iVMD1JERDn_isLoaded = false;
  iVMD2JERDn_isLoaded = false;
  iVMD3JERDn_isLoaded = false;
  iVMD4JERDn_isLoaded = false;
  iWMD0JERDn_isLoaded = false;
  iWMD1JERDn_isLoaded = false;
  iWMD2JERDn_isLoaded = false;
  iWMD3JERDn_isLoaded = false;
  iWMD4JERDn_isLoaded = false;
  METJERDn_isLoaded = false;
  NuJERDn_isLoaded = false;
  NJJERDn_isLoaded = false;
  NbLooseJERDn_isLoaded = false;
  NbMediumJERDn_isLoaded = false;
  NbTightJERDn_isLoaded = false;
  NoORNbLooseJERDn_isLoaded = false;
  NoORNbMediumJERDn_isLoaded = false;
  NoORNbTightJERDn_isLoaded = false;
  J0JERDn_isLoaded = false;
  J1JERDn_isLoaded = false;
  J2JERDn_isLoaded = false;
  J3JERDn_isLoaded = false;
  J4JERDn_isLoaded = false;
  J5JERDn_isLoaded = false;
  J6JERDn_isLoaded = false;
  J7JERDn_isLoaded = false;
  NQJGenJERDn_isLoaded = false;
  NBJGenJERDn_isLoaded = false;
  NLJGenJERDn_isLoaded = false;
  MVVXJERDn_isLoaded = false;
  PtVVXJERDn_isLoaded = false;
  HTJERDn_isLoaded = false;
  HTJJERDn_isLoaded = false;
  HTFJJERDn_isLoaded = false;
  SumPtFJJERDn_isLoaded = false;
  SumPtJJERDn_isLoaded = false;
  JsJMSUp_isLoaded = false;
  NFJJMSUp_isLoaded = false;
  FJ0JMSUp_isLoaded = false;
  FJ1JMSUp_isLoaded = false;
  FJ2JMSUp_isLoaded = false;
  FJ3JMSUp_isLoaded = false;
  FJ4JMSUp_isLoaded = false;
  VMD0JMSUp_isLoaded = false;
  VMD1JMSUp_isLoaded = false;
  VMD2JMSUp_isLoaded = false;
  VMD3JMSUp_isLoaded = false;
  VMD4JMSUp_isLoaded = false;
  WMD0JMSUp_isLoaded = false;
  WMD1JMSUp_isLoaded = false;
  WMD2JMSUp_isLoaded = false;
  WMD3JMSUp_isLoaded = false;
  WMD4JMSUp_isLoaded = false;
  NQGen0JMSUp_isLoaded = false;
  NQGen1JMSUp_isLoaded = false;
  NQGen2JMSUp_isLoaded = false;
  NQGen3JMSUp_isLoaded = false;
  NQGen4JMSUp_isLoaded = false;
  NBGen0JMSUp_isLoaded = false;
  NBGen1JMSUp_isLoaded = false;
  NBGen2JMSUp_isLoaded = false;
  NBGen3JMSUp_isLoaded = false;
  NBGen4JMSUp_isLoaded = false;
  NLGen0JMSUp_isLoaded = false;
  NLGen1JMSUp_isLoaded = false;
  NLGen2JMSUp_isLoaded = false;
  NLGen3JMSUp_isLoaded = false;
  NLGen4JMSUp_isLoaded = false;
  NVQGen0JMSUp_isLoaded = false;
  NVQGen1JMSUp_isLoaded = false;
  NVQGen2JMSUp_isLoaded = false;
  NVQGen3JMSUp_isLoaded = false;
  NVQGen4JMSUp_isLoaded = false;
  NiFJJMSUp_isLoaded = false;
  iFJ0JMSUp_isLoaded = false;
  iFJ1JMSUp_isLoaded = false;
  iFJ2JMSUp_isLoaded = false;
  iFJ3JMSUp_isLoaded = false;
  iFJ4JMSUp_isLoaded = false;
  iVMD0JMSUp_isLoaded = false;
  iVMD1JMSUp_isLoaded = false;
  iVMD2JMSUp_isLoaded = false;
  iVMD3JMSUp_isLoaded = false;
  iVMD4JMSUp_isLoaded = false;
  iWMD0JMSUp_isLoaded = false;
  iWMD1JMSUp_isLoaded = false;
  iWMD2JMSUp_isLoaded = false;
  iWMD3JMSUp_isLoaded = false;
  iWMD4JMSUp_isLoaded = false;
  METJMSUp_isLoaded = false;
  NuJMSUp_isLoaded = false;
  NJJMSUp_isLoaded = false;
  NbLooseJMSUp_isLoaded = false;
  NbMediumJMSUp_isLoaded = false;
  NbTightJMSUp_isLoaded = false;
  NoORNbLooseJMSUp_isLoaded = false;
  NoORNbMediumJMSUp_isLoaded = false;
  NoORNbTightJMSUp_isLoaded = false;
  J0JMSUp_isLoaded = false;
  J1JMSUp_isLoaded = false;
  J2JMSUp_isLoaded = false;
  J3JMSUp_isLoaded = false;
  J4JMSUp_isLoaded = false;
  J5JMSUp_isLoaded = false;
  J6JMSUp_isLoaded = false;
  J7JMSUp_isLoaded = false;
  NQJGenJMSUp_isLoaded = false;
  NBJGenJMSUp_isLoaded = false;
  NLJGenJMSUp_isLoaded = false;
  MVVXJMSUp_isLoaded = false;
  PtVVXJMSUp_isLoaded = false;
  HTJMSUp_isLoaded = false;
  HTJJMSUp_isLoaded = false;
  HTFJJMSUp_isLoaded = false;
  SumPtFJJMSUp_isLoaded = false;
  SumPtJJMSUp_isLoaded = false;
  JsJMSDn_isLoaded = false;
  NFJJMSDn_isLoaded = false;
  FJ0JMSDn_isLoaded = false;
  FJ1JMSDn_isLoaded = false;
  FJ2JMSDn_isLoaded = false;
  FJ3JMSDn_isLoaded = false;
  FJ4JMSDn_isLoaded = false;
  VMD0JMSDn_isLoaded = false;
  VMD1JMSDn_isLoaded = false;
  VMD2JMSDn_isLoaded = false;
  VMD3JMSDn_isLoaded = false;
  VMD4JMSDn_isLoaded = false;
  WMD0JMSDn_isLoaded = false;
  WMD1JMSDn_isLoaded = false;
  WMD2JMSDn_isLoaded = false;
  WMD3JMSDn_isLoaded = false;
  WMD4JMSDn_isLoaded = false;
  NQGen0JMSDn_isLoaded = false;
  NQGen1JMSDn_isLoaded = false;
  NQGen2JMSDn_isLoaded = false;
  NQGen3JMSDn_isLoaded = false;
  NQGen4JMSDn_isLoaded = false;
  NBGen0JMSDn_isLoaded = false;
  NBGen1JMSDn_isLoaded = false;
  NBGen2JMSDn_isLoaded = false;
  NBGen3JMSDn_isLoaded = false;
  NBGen4JMSDn_isLoaded = false;
  NLGen0JMSDn_isLoaded = false;
  NLGen1JMSDn_isLoaded = false;
  NLGen2JMSDn_isLoaded = false;
  NLGen3JMSDn_isLoaded = false;
  NLGen4JMSDn_isLoaded = false;
  NVQGen0JMSDn_isLoaded = false;
  NVQGen1JMSDn_isLoaded = false;
  NVQGen2JMSDn_isLoaded = false;
  NVQGen3JMSDn_isLoaded = false;
  NVQGen4JMSDn_isLoaded = false;
  NiFJJMSDn_isLoaded = false;
  iFJ0JMSDn_isLoaded = false;
  iFJ1JMSDn_isLoaded = false;
  iFJ2JMSDn_isLoaded = false;
  iFJ3JMSDn_isLoaded = false;
  iFJ4JMSDn_isLoaded = false;
  iVMD0JMSDn_isLoaded = false;
  iVMD1JMSDn_isLoaded = false;
  iVMD2JMSDn_isLoaded = false;
  iVMD3JMSDn_isLoaded = false;
  iVMD4JMSDn_isLoaded = false;
  iWMD0JMSDn_isLoaded = false;
  iWMD1JMSDn_isLoaded = false;
  iWMD2JMSDn_isLoaded = false;
  iWMD3JMSDn_isLoaded = false;
  iWMD4JMSDn_isLoaded = false;
  METJMSDn_isLoaded = false;
  NuJMSDn_isLoaded = false;
  NJJMSDn_isLoaded = false;
  NbLooseJMSDn_isLoaded = false;
  NbMediumJMSDn_isLoaded = false;
  NbTightJMSDn_isLoaded = false;
  NoORNbLooseJMSDn_isLoaded = false;
  NoORNbMediumJMSDn_isLoaded = false;
  NoORNbTightJMSDn_isLoaded = false;
  J0JMSDn_isLoaded = false;
  J1JMSDn_isLoaded = false;
  J2JMSDn_isLoaded = false;
  J3JMSDn_isLoaded = false;
  J4JMSDn_isLoaded = false;
  J5JMSDn_isLoaded = false;
  J6JMSDn_isLoaded = false;
  J7JMSDn_isLoaded = false;
  NQJGenJMSDn_isLoaded = false;
  NBJGenJMSDn_isLoaded = false;
  NLJGenJMSDn_isLoaded = false;
  MVVXJMSDn_isLoaded = false;
  PtVVXJMSDn_isLoaded = false;
  HTJMSDn_isLoaded = false;
  HTJJMSDn_isLoaded = false;
  HTFJJMSDn_isLoaded = false;
  SumPtFJJMSDn_isLoaded = false;
  SumPtJJMSDn_isLoaded = false;
  JsJMRUp_isLoaded = false;
  NFJJMRUp_isLoaded = false;
  FJ0JMRUp_isLoaded = false;
  FJ1JMRUp_isLoaded = false;
  FJ2JMRUp_isLoaded = false;
  FJ3JMRUp_isLoaded = false;
  FJ4JMRUp_isLoaded = false;
  VMD0JMRUp_isLoaded = false;
  VMD1JMRUp_isLoaded = false;
  VMD2JMRUp_isLoaded = false;
  VMD3JMRUp_isLoaded = false;
  VMD4JMRUp_isLoaded = false;
  WMD0JMRUp_isLoaded = false;
  WMD1JMRUp_isLoaded = false;
  WMD2JMRUp_isLoaded = false;
  WMD3JMRUp_isLoaded = false;
  WMD4JMRUp_isLoaded = false;
  NQGen0JMRUp_isLoaded = false;
  NQGen1JMRUp_isLoaded = false;
  NQGen2JMRUp_isLoaded = false;
  NQGen3JMRUp_isLoaded = false;
  NQGen4JMRUp_isLoaded = false;
  NBGen0JMRUp_isLoaded = false;
  NBGen1JMRUp_isLoaded = false;
  NBGen2JMRUp_isLoaded = false;
  NBGen3JMRUp_isLoaded = false;
  NBGen4JMRUp_isLoaded = false;
  NLGen0JMRUp_isLoaded = false;
  NLGen1JMRUp_isLoaded = false;
  NLGen2JMRUp_isLoaded = false;
  NLGen3JMRUp_isLoaded = false;
  NLGen4JMRUp_isLoaded = false;
  NVQGen0JMRUp_isLoaded = false;
  NVQGen1JMRUp_isLoaded = false;
  NVQGen2JMRUp_isLoaded = false;
  NVQGen3JMRUp_isLoaded = false;
  NVQGen4JMRUp_isLoaded = false;
  NiFJJMRUp_isLoaded = false;
  iFJ0JMRUp_isLoaded = false;
  iFJ1JMRUp_isLoaded = false;
  iFJ2JMRUp_isLoaded = false;
  iFJ3JMRUp_isLoaded = false;
  iFJ4JMRUp_isLoaded = false;
  iVMD0JMRUp_isLoaded = false;
  iVMD1JMRUp_isLoaded = false;
  iVMD2JMRUp_isLoaded = false;
  iVMD3JMRUp_isLoaded = false;
  iVMD4JMRUp_isLoaded = false;
  iWMD0JMRUp_isLoaded = false;
  iWMD1JMRUp_isLoaded = false;
  iWMD2JMRUp_isLoaded = false;
  iWMD3JMRUp_isLoaded = false;
  iWMD4JMRUp_isLoaded = false;
  METJMRUp_isLoaded = false;
  NuJMRUp_isLoaded = false;
  NJJMRUp_isLoaded = false;
  NbLooseJMRUp_isLoaded = false;
  NbMediumJMRUp_isLoaded = false;
  NbTightJMRUp_isLoaded = false;
  NoORNbLooseJMRUp_isLoaded = false;
  NoORNbMediumJMRUp_isLoaded = false;
  NoORNbTightJMRUp_isLoaded = false;
  J0JMRUp_isLoaded = false;
  J1JMRUp_isLoaded = false;
  J2JMRUp_isLoaded = false;
  J3JMRUp_isLoaded = false;
  J4JMRUp_isLoaded = false;
  J5JMRUp_isLoaded = false;
  J6JMRUp_isLoaded = false;
  J7JMRUp_isLoaded = false;
  NQJGenJMRUp_isLoaded = false;
  NBJGenJMRUp_isLoaded = false;
  NLJGenJMRUp_isLoaded = false;
  MVVXJMRUp_isLoaded = false;
  PtVVXJMRUp_isLoaded = false;
  HTJMRUp_isLoaded = false;
  HTJJMRUp_isLoaded = false;
  HTFJJMRUp_isLoaded = false;
  SumPtFJJMRUp_isLoaded = false;
  SumPtJJMRUp_isLoaded = false;
  JsJMRDn_isLoaded = false;
  NFJJMRDn_isLoaded = false;
  FJ0JMRDn_isLoaded = false;
  FJ1JMRDn_isLoaded = false;
  FJ2JMRDn_isLoaded = false;
  FJ3JMRDn_isLoaded = false;
  FJ4JMRDn_isLoaded = false;
  VMD0JMRDn_isLoaded = false;
  VMD1JMRDn_isLoaded = false;
  VMD2JMRDn_isLoaded = false;
  VMD3JMRDn_isLoaded = false;
  VMD4JMRDn_isLoaded = false;
  WMD0JMRDn_isLoaded = false;
  WMD1JMRDn_isLoaded = false;
  WMD2JMRDn_isLoaded = false;
  WMD3JMRDn_isLoaded = false;
  WMD4JMRDn_isLoaded = false;
  NQGen0JMRDn_isLoaded = false;
  NQGen1JMRDn_isLoaded = false;
  NQGen2JMRDn_isLoaded = false;
  NQGen3JMRDn_isLoaded = false;
  NQGen4JMRDn_isLoaded = false;
  NBGen0JMRDn_isLoaded = false;
  NBGen1JMRDn_isLoaded = false;
  NBGen2JMRDn_isLoaded = false;
  NBGen3JMRDn_isLoaded = false;
  NBGen4JMRDn_isLoaded = false;
  NLGen0JMRDn_isLoaded = false;
  NLGen1JMRDn_isLoaded = false;
  NLGen2JMRDn_isLoaded = false;
  NLGen3JMRDn_isLoaded = false;
  NLGen4JMRDn_isLoaded = false;
  NVQGen0JMRDn_isLoaded = false;
  NVQGen1JMRDn_isLoaded = false;
  NVQGen2JMRDn_isLoaded = false;
  NVQGen3JMRDn_isLoaded = false;
  NVQGen4JMRDn_isLoaded = false;
  NiFJJMRDn_isLoaded = false;
  iFJ0JMRDn_isLoaded = false;
  iFJ1JMRDn_isLoaded = false;
  iFJ2JMRDn_isLoaded = false;
  iFJ3JMRDn_isLoaded = false;
  iFJ4JMRDn_isLoaded = false;
  iVMD0JMRDn_isLoaded = false;
  iVMD1JMRDn_isLoaded = false;
  iVMD2JMRDn_isLoaded = false;
  iVMD3JMRDn_isLoaded = false;
  iVMD4JMRDn_isLoaded = false;
  iWMD0JMRDn_isLoaded = false;
  iWMD1JMRDn_isLoaded = false;
  iWMD2JMRDn_isLoaded = false;
  iWMD3JMRDn_isLoaded = false;
  iWMD4JMRDn_isLoaded = false;
  METJMRDn_isLoaded = false;
  NuJMRDn_isLoaded = false;
  NJJMRDn_isLoaded = false;
  NbLooseJMRDn_isLoaded = false;
  NbMediumJMRDn_isLoaded = false;
  NbTightJMRDn_isLoaded = false;
  NoORNbLooseJMRDn_isLoaded = false;
  NoORNbMediumJMRDn_isLoaded = false;
  NoORNbTightJMRDn_isLoaded = false;
  J0JMRDn_isLoaded = false;
  J1JMRDn_isLoaded = false;
  J2JMRDn_isLoaded = false;
  J3JMRDn_isLoaded = false;
  J4JMRDn_isLoaded = false;
  J5JMRDn_isLoaded = false;
  J6JMRDn_isLoaded = false;
  J7JMRDn_isLoaded = false;
  NQJGenJMRDn_isLoaded = false;
  NBJGenJMRDn_isLoaded = false;
  NLJGenJMRDn_isLoaded = false;
  MVVXJMRDn_isLoaded = false;
  PtVVXJMRDn_isLoaded = false;
  HTJMRDn_isLoaded = false;
  HTJJMRDn_isLoaded = false;
  HTFJJMRDn_isLoaded = false;
  SumPtFJJMRDn_isLoaded = false;
  SumPtJJMRDn_isLoaded = false;
  JsjesAbsoluteStatup_isLoaded = false;
  NFJjesAbsoluteStatup_isLoaded = false;
  FJ0jesAbsoluteStatup_isLoaded = false;
  FJ1jesAbsoluteStatup_isLoaded = false;
  FJ2jesAbsoluteStatup_isLoaded = false;
  FJ3jesAbsoluteStatup_isLoaded = false;
  FJ4jesAbsoluteStatup_isLoaded = false;
  VMD0jesAbsoluteStatup_isLoaded = false;
  VMD1jesAbsoluteStatup_isLoaded = false;
  VMD2jesAbsoluteStatup_isLoaded = false;
  VMD3jesAbsoluteStatup_isLoaded = false;
  VMD4jesAbsoluteStatup_isLoaded = false;
  WMD0jesAbsoluteStatup_isLoaded = false;
  WMD1jesAbsoluteStatup_isLoaded = false;
  WMD2jesAbsoluteStatup_isLoaded = false;
  WMD3jesAbsoluteStatup_isLoaded = false;
  WMD4jesAbsoluteStatup_isLoaded = false;
  NQGen0jesAbsoluteStatup_isLoaded = false;
  NQGen1jesAbsoluteStatup_isLoaded = false;
  NQGen2jesAbsoluteStatup_isLoaded = false;
  NQGen3jesAbsoluteStatup_isLoaded = false;
  NQGen4jesAbsoluteStatup_isLoaded = false;
  NBGen0jesAbsoluteStatup_isLoaded = false;
  NBGen1jesAbsoluteStatup_isLoaded = false;
  NBGen2jesAbsoluteStatup_isLoaded = false;
  NBGen3jesAbsoluteStatup_isLoaded = false;
  NBGen4jesAbsoluteStatup_isLoaded = false;
  NLGen0jesAbsoluteStatup_isLoaded = false;
  NLGen1jesAbsoluteStatup_isLoaded = false;
  NLGen2jesAbsoluteStatup_isLoaded = false;
  NLGen3jesAbsoluteStatup_isLoaded = false;
  NLGen4jesAbsoluteStatup_isLoaded = false;
  NVQGen0jesAbsoluteStatup_isLoaded = false;
  NVQGen1jesAbsoluteStatup_isLoaded = false;
  NVQGen2jesAbsoluteStatup_isLoaded = false;
  NVQGen3jesAbsoluteStatup_isLoaded = false;
  NVQGen4jesAbsoluteStatup_isLoaded = false;
  NiFJjesAbsoluteStatup_isLoaded = false;
  iFJ0jesAbsoluteStatup_isLoaded = false;
  iFJ1jesAbsoluteStatup_isLoaded = false;
  iFJ2jesAbsoluteStatup_isLoaded = false;
  iFJ3jesAbsoluteStatup_isLoaded = false;
  iFJ4jesAbsoluteStatup_isLoaded = false;
  iVMD0jesAbsoluteStatup_isLoaded = false;
  iVMD1jesAbsoluteStatup_isLoaded = false;
  iVMD2jesAbsoluteStatup_isLoaded = false;
  iVMD3jesAbsoluteStatup_isLoaded = false;
  iVMD4jesAbsoluteStatup_isLoaded = false;
  iWMD0jesAbsoluteStatup_isLoaded = false;
  iWMD1jesAbsoluteStatup_isLoaded = false;
  iWMD2jesAbsoluteStatup_isLoaded = false;
  iWMD3jesAbsoluteStatup_isLoaded = false;
  iWMD4jesAbsoluteStatup_isLoaded = false;
  METjesAbsoluteStatup_isLoaded = false;
  NujesAbsoluteStatup_isLoaded = false;
  NJjesAbsoluteStatup_isLoaded = false;
  NbLoosejesAbsoluteStatup_isLoaded = false;
  NbMediumjesAbsoluteStatup_isLoaded = false;
  NbTightjesAbsoluteStatup_isLoaded = false;
  NoORNbLoosejesAbsoluteStatup_isLoaded = false;
  NoORNbMediumjesAbsoluteStatup_isLoaded = false;
  NoORNbTightjesAbsoluteStatup_isLoaded = false;
  J0jesAbsoluteStatup_isLoaded = false;
  J1jesAbsoluteStatup_isLoaded = false;
  J2jesAbsoluteStatup_isLoaded = false;
  J3jesAbsoluteStatup_isLoaded = false;
  J4jesAbsoluteStatup_isLoaded = false;
  J5jesAbsoluteStatup_isLoaded = false;
  J6jesAbsoluteStatup_isLoaded = false;
  J7jesAbsoluteStatup_isLoaded = false;
  NQJGenjesAbsoluteStatup_isLoaded = false;
  NBJGenjesAbsoluteStatup_isLoaded = false;
  NLJGenjesAbsoluteStatup_isLoaded = false;
  MVVXjesAbsoluteStatup_isLoaded = false;
  PtVVXjesAbsoluteStatup_isLoaded = false;
  HTjesAbsoluteStatup_isLoaded = false;
  HTJjesAbsoluteStatup_isLoaded = false;
  HTFJjesAbsoluteStatup_isLoaded = false;
  SumPtFJjesAbsoluteStatup_isLoaded = false;
  SumPtJjesAbsoluteStatup_isLoaded = false;
  JsjesAbsoluteStatdn_isLoaded = false;
  NFJjesAbsoluteStatdn_isLoaded = false;
  FJ0jesAbsoluteStatdn_isLoaded = false;
  FJ1jesAbsoluteStatdn_isLoaded = false;
  FJ2jesAbsoluteStatdn_isLoaded = false;
  FJ3jesAbsoluteStatdn_isLoaded = false;
  FJ4jesAbsoluteStatdn_isLoaded = false;
  VMD0jesAbsoluteStatdn_isLoaded = false;
  VMD1jesAbsoluteStatdn_isLoaded = false;
  VMD2jesAbsoluteStatdn_isLoaded = false;
  VMD3jesAbsoluteStatdn_isLoaded = false;
  VMD4jesAbsoluteStatdn_isLoaded = false;
  WMD0jesAbsoluteStatdn_isLoaded = false;
  WMD1jesAbsoluteStatdn_isLoaded = false;
  WMD2jesAbsoluteStatdn_isLoaded = false;
  WMD3jesAbsoluteStatdn_isLoaded = false;
  WMD4jesAbsoluteStatdn_isLoaded = false;
  NQGen0jesAbsoluteStatdn_isLoaded = false;
  NQGen1jesAbsoluteStatdn_isLoaded = false;
  NQGen2jesAbsoluteStatdn_isLoaded = false;
  NQGen3jesAbsoluteStatdn_isLoaded = false;
  NQGen4jesAbsoluteStatdn_isLoaded = false;
  NBGen0jesAbsoluteStatdn_isLoaded = false;
  NBGen1jesAbsoluteStatdn_isLoaded = false;
  NBGen2jesAbsoluteStatdn_isLoaded = false;
  NBGen3jesAbsoluteStatdn_isLoaded = false;
  NBGen4jesAbsoluteStatdn_isLoaded = false;
  NLGen0jesAbsoluteStatdn_isLoaded = false;
  NLGen1jesAbsoluteStatdn_isLoaded = false;
  NLGen2jesAbsoluteStatdn_isLoaded = false;
  NLGen3jesAbsoluteStatdn_isLoaded = false;
  NLGen4jesAbsoluteStatdn_isLoaded = false;
  NVQGen0jesAbsoluteStatdn_isLoaded = false;
  NVQGen1jesAbsoluteStatdn_isLoaded = false;
  NVQGen2jesAbsoluteStatdn_isLoaded = false;
  NVQGen3jesAbsoluteStatdn_isLoaded = false;
  NVQGen4jesAbsoluteStatdn_isLoaded = false;
  NiFJjesAbsoluteStatdn_isLoaded = false;
  iFJ0jesAbsoluteStatdn_isLoaded = false;
  iFJ1jesAbsoluteStatdn_isLoaded = false;
  iFJ2jesAbsoluteStatdn_isLoaded = false;
  iFJ3jesAbsoluteStatdn_isLoaded = false;
  iFJ4jesAbsoluteStatdn_isLoaded = false;
  iVMD0jesAbsoluteStatdn_isLoaded = false;
  iVMD1jesAbsoluteStatdn_isLoaded = false;
  iVMD2jesAbsoluteStatdn_isLoaded = false;
  iVMD3jesAbsoluteStatdn_isLoaded = false;
  iVMD4jesAbsoluteStatdn_isLoaded = false;
  iWMD0jesAbsoluteStatdn_isLoaded = false;
  iWMD1jesAbsoluteStatdn_isLoaded = false;
  iWMD2jesAbsoluteStatdn_isLoaded = false;
  iWMD3jesAbsoluteStatdn_isLoaded = false;
  iWMD4jesAbsoluteStatdn_isLoaded = false;
  METjesAbsoluteStatdn_isLoaded = false;
  NujesAbsoluteStatdn_isLoaded = false;
  NJjesAbsoluteStatdn_isLoaded = false;
  NbLoosejesAbsoluteStatdn_isLoaded = false;
  NbMediumjesAbsoluteStatdn_isLoaded = false;
  NbTightjesAbsoluteStatdn_isLoaded = false;
  NoORNbLoosejesAbsoluteStatdn_isLoaded = false;
  NoORNbMediumjesAbsoluteStatdn_isLoaded = false;
  NoORNbTightjesAbsoluteStatdn_isLoaded = false;
  J0jesAbsoluteStatdn_isLoaded = false;
  J1jesAbsoluteStatdn_isLoaded = false;
  J2jesAbsoluteStatdn_isLoaded = false;
  J3jesAbsoluteStatdn_isLoaded = false;
  J4jesAbsoluteStatdn_isLoaded = false;
  J5jesAbsoluteStatdn_isLoaded = false;
  J6jesAbsoluteStatdn_isLoaded = false;
  J7jesAbsoluteStatdn_isLoaded = false;
  NQJGenjesAbsoluteStatdn_isLoaded = false;
  NBJGenjesAbsoluteStatdn_isLoaded = false;
  NLJGenjesAbsoluteStatdn_isLoaded = false;
  MVVXjesAbsoluteStatdn_isLoaded = false;
  PtVVXjesAbsoluteStatdn_isLoaded = false;
  HTjesAbsoluteStatdn_isLoaded = false;
  HTJjesAbsoluteStatdn_isLoaded = false;
  HTFJjesAbsoluteStatdn_isLoaded = false;
  SumPtFJjesAbsoluteStatdn_isLoaded = false;
  SumPtJjesAbsoluteStatdn_isLoaded = false;
  JsjesAbsoluteScaleup_isLoaded = false;
  NFJjesAbsoluteScaleup_isLoaded = false;
  FJ0jesAbsoluteScaleup_isLoaded = false;
  FJ1jesAbsoluteScaleup_isLoaded = false;
  FJ2jesAbsoluteScaleup_isLoaded = false;
  FJ3jesAbsoluteScaleup_isLoaded = false;
  FJ4jesAbsoluteScaleup_isLoaded = false;
  VMD0jesAbsoluteScaleup_isLoaded = false;
  VMD1jesAbsoluteScaleup_isLoaded = false;
  VMD2jesAbsoluteScaleup_isLoaded = false;
  VMD3jesAbsoluteScaleup_isLoaded = false;
  VMD4jesAbsoluteScaleup_isLoaded = false;
  WMD0jesAbsoluteScaleup_isLoaded = false;
  WMD1jesAbsoluteScaleup_isLoaded = false;
  WMD2jesAbsoluteScaleup_isLoaded = false;
  WMD3jesAbsoluteScaleup_isLoaded = false;
  WMD4jesAbsoluteScaleup_isLoaded = false;
  NQGen0jesAbsoluteScaleup_isLoaded = false;
  NQGen1jesAbsoluteScaleup_isLoaded = false;
  NQGen2jesAbsoluteScaleup_isLoaded = false;
  NQGen3jesAbsoluteScaleup_isLoaded = false;
  NQGen4jesAbsoluteScaleup_isLoaded = false;
  NBGen0jesAbsoluteScaleup_isLoaded = false;
  NBGen1jesAbsoluteScaleup_isLoaded = false;
  NBGen2jesAbsoluteScaleup_isLoaded = false;
  NBGen3jesAbsoluteScaleup_isLoaded = false;
  NBGen4jesAbsoluteScaleup_isLoaded = false;
  NLGen0jesAbsoluteScaleup_isLoaded = false;
  NLGen1jesAbsoluteScaleup_isLoaded = false;
  NLGen2jesAbsoluteScaleup_isLoaded = false;
  NLGen3jesAbsoluteScaleup_isLoaded = false;
  NLGen4jesAbsoluteScaleup_isLoaded = false;
  NVQGen0jesAbsoluteScaleup_isLoaded = false;
  NVQGen1jesAbsoluteScaleup_isLoaded = false;
  NVQGen2jesAbsoluteScaleup_isLoaded = false;
  NVQGen3jesAbsoluteScaleup_isLoaded = false;
  NVQGen4jesAbsoluteScaleup_isLoaded = false;
  NiFJjesAbsoluteScaleup_isLoaded = false;
  iFJ0jesAbsoluteScaleup_isLoaded = false;
  iFJ1jesAbsoluteScaleup_isLoaded = false;
  iFJ2jesAbsoluteScaleup_isLoaded = false;
  iFJ3jesAbsoluteScaleup_isLoaded = false;
  iFJ4jesAbsoluteScaleup_isLoaded = false;
  iVMD0jesAbsoluteScaleup_isLoaded = false;
  iVMD1jesAbsoluteScaleup_isLoaded = false;
  iVMD2jesAbsoluteScaleup_isLoaded = false;
  iVMD3jesAbsoluteScaleup_isLoaded = false;
  iVMD4jesAbsoluteScaleup_isLoaded = false;
  iWMD0jesAbsoluteScaleup_isLoaded = false;
  iWMD1jesAbsoluteScaleup_isLoaded = false;
  iWMD2jesAbsoluteScaleup_isLoaded = false;
  iWMD3jesAbsoluteScaleup_isLoaded = false;
  iWMD4jesAbsoluteScaleup_isLoaded = false;
  METjesAbsoluteScaleup_isLoaded = false;
  NujesAbsoluteScaleup_isLoaded = false;
  NJjesAbsoluteScaleup_isLoaded = false;
  NbLoosejesAbsoluteScaleup_isLoaded = false;
  NbMediumjesAbsoluteScaleup_isLoaded = false;
  NbTightjesAbsoluteScaleup_isLoaded = false;
  NoORNbLoosejesAbsoluteScaleup_isLoaded = false;
  NoORNbMediumjesAbsoluteScaleup_isLoaded = false;
  NoORNbTightjesAbsoluteScaleup_isLoaded = false;
  J0jesAbsoluteScaleup_isLoaded = false;
  J1jesAbsoluteScaleup_isLoaded = false;
  J2jesAbsoluteScaleup_isLoaded = false;
  J3jesAbsoluteScaleup_isLoaded = false;
  J4jesAbsoluteScaleup_isLoaded = false;
  J5jesAbsoluteScaleup_isLoaded = false;
  J6jesAbsoluteScaleup_isLoaded = false;
  J7jesAbsoluteScaleup_isLoaded = false;
  NQJGenjesAbsoluteScaleup_isLoaded = false;
  NBJGenjesAbsoluteScaleup_isLoaded = false;
  NLJGenjesAbsoluteScaleup_isLoaded = false;
  MVVXjesAbsoluteScaleup_isLoaded = false;
  PtVVXjesAbsoluteScaleup_isLoaded = false;
  HTjesAbsoluteScaleup_isLoaded = false;
  HTJjesAbsoluteScaleup_isLoaded = false;
  HTFJjesAbsoluteScaleup_isLoaded = false;
  SumPtFJjesAbsoluteScaleup_isLoaded = false;
  SumPtJjesAbsoluteScaleup_isLoaded = false;
  JsjesAbsoluteScaledn_isLoaded = false;
  NFJjesAbsoluteScaledn_isLoaded = false;
  FJ0jesAbsoluteScaledn_isLoaded = false;
  FJ1jesAbsoluteScaledn_isLoaded = false;
  FJ2jesAbsoluteScaledn_isLoaded = false;
  FJ3jesAbsoluteScaledn_isLoaded = false;
  FJ4jesAbsoluteScaledn_isLoaded = false;
  VMD0jesAbsoluteScaledn_isLoaded = false;
  VMD1jesAbsoluteScaledn_isLoaded = false;
  VMD2jesAbsoluteScaledn_isLoaded = false;
  VMD3jesAbsoluteScaledn_isLoaded = false;
  VMD4jesAbsoluteScaledn_isLoaded = false;
  WMD0jesAbsoluteScaledn_isLoaded = false;
  WMD1jesAbsoluteScaledn_isLoaded = false;
  WMD2jesAbsoluteScaledn_isLoaded = false;
  WMD3jesAbsoluteScaledn_isLoaded = false;
  WMD4jesAbsoluteScaledn_isLoaded = false;
  NQGen0jesAbsoluteScaledn_isLoaded = false;
  NQGen1jesAbsoluteScaledn_isLoaded = false;
  NQGen2jesAbsoluteScaledn_isLoaded = false;
  NQGen3jesAbsoluteScaledn_isLoaded = false;
  NQGen4jesAbsoluteScaledn_isLoaded = false;
  NBGen0jesAbsoluteScaledn_isLoaded = false;
  NBGen1jesAbsoluteScaledn_isLoaded = false;
  NBGen2jesAbsoluteScaledn_isLoaded = false;
  NBGen3jesAbsoluteScaledn_isLoaded = false;
  NBGen4jesAbsoluteScaledn_isLoaded = false;
  NLGen0jesAbsoluteScaledn_isLoaded = false;
  NLGen1jesAbsoluteScaledn_isLoaded = false;
  NLGen2jesAbsoluteScaledn_isLoaded = false;
  NLGen3jesAbsoluteScaledn_isLoaded = false;
  NLGen4jesAbsoluteScaledn_isLoaded = false;
  NVQGen0jesAbsoluteScaledn_isLoaded = false;
  NVQGen1jesAbsoluteScaledn_isLoaded = false;
  NVQGen2jesAbsoluteScaledn_isLoaded = false;
  NVQGen3jesAbsoluteScaledn_isLoaded = false;
  NVQGen4jesAbsoluteScaledn_isLoaded = false;
  NiFJjesAbsoluteScaledn_isLoaded = false;
  iFJ0jesAbsoluteScaledn_isLoaded = false;
  iFJ1jesAbsoluteScaledn_isLoaded = false;
  iFJ2jesAbsoluteScaledn_isLoaded = false;
  iFJ3jesAbsoluteScaledn_isLoaded = false;
  iFJ4jesAbsoluteScaledn_isLoaded = false;
  iVMD0jesAbsoluteScaledn_isLoaded = false;
  iVMD1jesAbsoluteScaledn_isLoaded = false;
  iVMD2jesAbsoluteScaledn_isLoaded = false;
  iVMD3jesAbsoluteScaledn_isLoaded = false;
  iVMD4jesAbsoluteScaledn_isLoaded = false;
  iWMD0jesAbsoluteScaledn_isLoaded = false;
  iWMD1jesAbsoluteScaledn_isLoaded = false;
  iWMD2jesAbsoluteScaledn_isLoaded = false;
  iWMD3jesAbsoluteScaledn_isLoaded = false;
  iWMD4jesAbsoluteScaledn_isLoaded = false;
  METjesAbsoluteScaledn_isLoaded = false;
  NujesAbsoluteScaledn_isLoaded = false;
  NJjesAbsoluteScaledn_isLoaded = false;
  NbLoosejesAbsoluteScaledn_isLoaded = false;
  NbMediumjesAbsoluteScaledn_isLoaded = false;
  NbTightjesAbsoluteScaledn_isLoaded = false;
  NoORNbLoosejesAbsoluteScaledn_isLoaded = false;
  NoORNbMediumjesAbsoluteScaledn_isLoaded = false;
  NoORNbTightjesAbsoluteScaledn_isLoaded = false;
  J0jesAbsoluteScaledn_isLoaded = false;
  J1jesAbsoluteScaledn_isLoaded = false;
  J2jesAbsoluteScaledn_isLoaded = false;
  J3jesAbsoluteScaledn_isLoaded = false;
  J4jesAbsoluteScaledn_isLoaded = false;
  J5jesAbsoluteScaledn_isLoaded = false;
  J6jesAbsoluteScaledn_isLoaded = false;
  J7jesAbsoluteScaledn_isLoaded = false;
  NQJGenjesAbsoluteScaledn_isLoaded = false;
  NBJGenjesAbsoluteScaledn_isLoaded = false;
  NLJGenjesAbsoluteScaledn_isLoaded = false;
  MVVXjesAbsoluteScaledn_isLoaded = false;
  PtVVXjesAbsoluteScaledn_isLoaded = false;
  HTjesAbsoluteScaledn_isLoaded = false;
  HTJjesAbsoluteScaledn_isLoaded = false;
  HTFJjesAbsoluteScaledn_isLoaded = false;
  SumPtFJjesAbsoluteScaledn_isLoaded = false;
  SumPtJjesAbsoluteScaledn_isLoaded = false;
  JsjesAbsoluteMPFBiasup_isLoaded = false;
  NFJjesAbsoluteMPFBiasup_isLoaded = false;
  FJ0jesAbsoluteMPFBiasup_isLoaded = false;
  FJ1jesAbsoluteMPFBiasup_isLoaded = false;
  FJ2jesAbsoluteMPFBiasup_isLoaded = false;
  FJ3jesAbsoluteMPFBiasup_isLoaded = false;
  FJ4jesAbsoluteMPFBiasup_isLoaded = false;
  VMD0jesAbsoluteMPFBiasup_isLoaded = false;
  VMD1jesAbsoluteMPFBiasup_isLoaded = false;
  VMD2jesAbsoluteMPFBiasup_isLoaded = false;
  VMD3jesAbsoluteMPFBiasup_isLoaded = false;
  VMD4jesAbsoluteMPFBiasup_isLoaded = false;
  WMD0jesAbsoluteMPFBiasup_isLoaded = false;
  WMD1jesAbsoluteMPFBiasup_isLoaded = false;
  WMD2jesAbsoluteMPFBiasup_isLoaded = false;
  WMD3jesAbsoluteMPFBiasup_isLoaded = false;
  WMD4jesAbsoluteMPFBiasup_isLoaded = false;
  NQGen0jesAbsoluteMPFBiasup_isLoaded = false;
  NQGen1jesAbsoluteMPFBiasup_isLoaded = false;
  NQGen2jesAbsoluteMPFBiasup_isLoaded = false;
  NQGen3jesAbsoluteMPFBiasup_isLoaded = false;
  NQGen4jesAbsoluteMPFBiasup_isLoaded = false;
  NBGen0jesAbsoluteMPFBiasup_isLoaded = false;
  NBGen1jesAbsoluteMPFBiasup_isLoaded = false;
  NBGen2jesAbsoluteMPFBiasup_isLoaded = false;
  NBGen3jesAbsoluteMPFBiasup_isLoaded = false;
  NBGen4jesAbsoluteMPFBiasup_isLoaded = false;
  NLGen0jesAbsoluteMPFBiasup_isLoaded = false;
  NLGen1jesAbsoluteMPFBiasup_isLoaded = false;
  NLGen2jesAbsoluteMPFBiasup_isLoaded = false;
  NLGen3jesAbsoluteMPFBiasup_isLoaded = false;
  NLGen4jesAbsoluteMPFBiasup_isLoaded = false;
  NVQGen0jesAbsoluteMPFBiasup_isLoaded = false;
  NVQGen1jesAbsoluteMPFBiasup_isLoaded = false;
  NVQGen2jesAbsoluteMPFBiasup_isLoaded = false;
  NVQGen3jesAbsoluteMPFBiasup_isLoaded = false;
  NVQGen4jesAbsoluteMPFBiasup_isLoaded = false;
  NiFJjesAbsoluteMPFBiasup_isLoaded = false;
  iFJ0jesAbsoluteMPFBiasup_isLoaded = false;
  iFJ1jesAbsoluteMPFBiasup_isLoaded = false;
  iFJ2jesAbsoluteMPFBiasup_isLoaded = false;
  iFJ3jesAbsoluteMPFBiasup_isLoaded = false;
  iFJ4jesAbsoluteMPFBiasup_isLoaded = false;
  iVMD0jesAbsoluteMPFBiasup_isLoaded = false;
  iVMD1jesAbsoluteMPFBiasup_isLoaded = false;
  iVMD2jesAbsoluteMPFBiasup_isLoaded = false;
  iVMD3jesAbsoluteMPFBiasup_isLoaded = false;
  iVMD4jesAbsoluteMPFBiasup_isLoaded = false;
  iWMD0jesAbsoluteMPFBiasup_isLoaded = false;
  iWMD1jesAbsoluteMPFBiasup_isLoaded = false;
  iWMD2jesAbsoluteMPFBiasup_isLoaded = false;
  iWMD3jesAbsoluteMPFBiasup_isLoaded = false;
  iWMD4jesAbsoluteMPFBiasup_isLoaded = false;
  METjesAbsoluteMPFBiasup_isLoaded = false;
  NujesAbsoluteMPFBiasup_isLoaded = false;
  NJjesAbsoluteMPFBiasup_isLoaded = false;
  NbLoosejesAbsoluteMPFBiasup_isLoaded = false;
  NbMediumjesAbsoluteMPFBiasup_isLoaded = false;
  NbTightjesAbsoluteMPFBiasup_isLoaded = false;
  NoORNbLoosejesAbsoluteMPFBiasup_isLoaded = false;
  NoORNbMediumjesAbsoluteMPFBiasup_isLoaded = false;
  NoORNbTightjesAbsoluteMPFBiasup_isLoaded = false;
  J0jesAbsoluteMPFBiasup_isLoaded = false;
  J1jesAbsoluteMPFBiasup_isLoaded = false;
  J2jesAbsoluteMPFBiasup_isLoaded = false;
  J3jesAbsoluteMPFBiasup_isLoaded = false;
  J4jesAbsoluteMPFBiasup_isLoaded = false;
  J5jesAbsoluteMPFBiasup_isLoaded = false;
  J6jesAbsoluteMPFBiasup_isLoaded = false;
  J7jesAbsoluteMPFBiasup_isLoaded = false;
  NQJGenjesAbsoluteMPFBiasup_isLoaded = false;
  NBJGenjesAbsoluteMPFBiasup_isLoaded = false;
  NLJGenjesAbsoluteMPFBiasup_isLoaded = false;
  MVVXjesAbsoluteMPFBiasup_isLoaded = false;
  PtVVXjesAbsoluteMPFBiasup_isLoaded = false;
  HTjesAbsoluteMPFBiasup_isLoaded = false;
  HTJjesAbsoluteMPFBiasup_isLoaded = false;
  HTFJjesAbsoluteMPFBiasup_isLoaded = false;
  SumPtFJjesAbsoluteMPFBiasup_isLoaded = false;
  SumPtJjesAbsoluteMPFBiasup_isLoaded = false;
  JsjesAbsoluteMPFBiasdn_isLoaded = false;
  NFJjesAbsoluteMPFBiasdn_isLoaded = false;
  FJ0jesAbsoluteMPFBiasdn_isLoaded = false;
  FJ1jesAbsoluteMPFBiasdn_isLoaded = false;
  FJ2jesAbsoluteMPFBiasdn_isLoaded = false;
  FJ3jesAbsoluteMPFBiasdn_isLoaded = false;
  FJ4jesAbsoluteMPFBiasdn_isLoaded = false;
  VMD0jesAbsoluteMPFBiasdn_isLoaded = false;
  VMD1jesAbsoluteMPFBiasdn_isLoaded = false;
  VMD2jesAbsoluteMPFBiasdn_isLoaded = false;
  VMD3jesAbsoluteMPFBiasdn_isLoaded = false;
  VMD4jesAbsoluteMPFBiasdn_isLoaded = false;
  WMD0jesAbsoluteMPFBiasdn_isLoaded = false;
  WMD1jesAbsoluteMPFBiasdn_isLoaded = false;
  WMD2jesAbsoluteMPFBiasdn_isLoaded = false;
  WMD3jesAbsoluteMPFBiasdn_isLoaded = false;
  WMD4jesAbsoluteMPFBiasdn_isLoaded = false;
  NQGen0jesAbsoluteMPFBiasdn_isLoaded = false;
  NQGen1jesAbsoluteMPFBiasdn_isLoaded = false;
  NQGen2jesAbsoluteMPFBiasdn_isLoaded = false;
  NQGen3jesAbsoluteMPFBiasdn_isLoaded = false;
  NQGen4jesAbsoluteMPFBiasdn_isLoaded = false;
  NBGen0jesAbsoluteMPFBiasdn_isLoaded = false;
  NBGen1jesAbsoluteMPFBiasdn_isLoaded = false;
  NBGen2jesAbsoluteMPFBiasdn_isLoaded = false;
  NBGen3jesAbsoluteMPFBiasdn_isLoaded = false;
  NBGen4jesAbsoluteMPFBiasdn_isLoaded = false;
  NLGen0jesAbsoluteMPFBiasdn_isLoaded = false;
  NLGen1jesAbsoluteMPFBiasdn_isLoaded = false;
  NLGen2jesAbsoluteMPFBiasdn_isLoaded = false;
  NLGen3jesAbsoluteMPFBiasdn_isLoaded = false;
  NLGen4jesAbsoluteMPFBiasdn_isLoaded = false;
  NVQGen0jesAbsoluteMPFBiasdn_isLoaded = false;
  NVQGen1jesAbsoluteMPFBiasdn_isLoaded = false;
  NVQGen2jesAbsoluteMPFBiasdn_isLoaded = false;
  NVQGen3jesAbsoluteMPFBiasdn_isLoaded = false;
  NVQGen4jesAbsoluteMPFBiasdn_isLoaded = false;
  NiFJjesAbsoluteMPFBiasdn_isLoaded = false;
  iFJ0jesAbsoluteMPFBiasdn_isLoaded = false;
  iFJ1jesAbsoluteMPFBiasdn_isLoaded = false;
  iFJ2jesAbsoluteMPFBiasdn_isLoaded = false;
  iFJ3jesAbsoluteMPFBiasdn_isLoaded = false;
  iFJ4jesAbsoluteMPFBiasdn_isLoaded = false;
  iVMD0jesAbsoluteMPFBiasdn_isLoaded = false;
  iVMD1jesAbsoluteMPFBiasdn_isLoaded = false;
  iVMD2jesAbsoluteMPFBiasdn_isLoaded = false;
  iVMD3jesAbsoluteMPFBiasdn_isLoaded = false;
  iVMD4jesAbsoluteMPFBiasdn_isLoaded = false;
  iWMD0jesAbsoluteMPFBiasdn_isLoaded = false;
  iWMD1jesAbsoluteMPFBiasdn_isLoaded = false;
  iWMD2jesAbsoluteMPFBiasdn_isLoaded = false;
  iWMD3jesAbsoluteMPFBiasdn_isLoaded = false;
  iWMD4jesAbsoluteMPFBiasdn_isLoaded = false;
  METjesAbsoluteMPFBiasdn_isLoaded = false;
  NujesAbsoluteMPFBiasdn_isLoaded = false;
  NJjesAbsoluteMPFBiasdn_isLoaded = false;
  NbLoosejesAbsoluteMPFBiasdn_isLoaded = false;
  NbMediumjesAbsoluteMPFBiasdn_isLoaded = false;
  NbTightjesAbsoluteMPFBiasdn_isLoaded = false;
  NoORNbLoosejesAbsoluteMPFBiasdn_isLoaded = false;
  NoORNbMediumjesAbsoluteMPFBiasdn_isLoaded = false;
  NoORNbTightjesAbsoluteMPFBiasdn_isLoaded = false;
  J0jesAbsoluteMPFBiasdn_isLoaded = false;
  J1jesAbsoluteMPFBiasdn_isLoaded = false;
  J2jesAbsoluteMPFBiasdn_isLoaded = false;
  J3jesAbsoluteMPFBiasdn_isLoaded = false;
  J4jesAbsoluteMPFBiasdn_isLoaded = false;
  J5jesAbsoluteMPFBiasdn_isLoaded = false;
  J6jesAbsoluteMPFBiasdn_isLoaded = false;
  J7jesAbsoluteMPFBiasdn_isLoaded = false;
  NQJGenjesAbsoluteMPFBiasdn_isLoaded = false;
  NBJGenjesAbsoluteMPFBiasdn_isLoaded = false;
  NLJGenjesAbsoluteMPFBiasdn_isLoaded = false;
  MVVXjesAbsoluteMPFBiasdn_isLoaded = false;
  PtVVXjesAbsoluteMPFBiasdn_isLoaded = false;
  HTjesAbsoluteMPFBiasdn_isLoaded = false;
  HTJjesAbsoluteMPFBiasdn_isLoaded = false;
  HTFJjesAbsoluteMPFBiasdn_isLoaded = false;
  SumPtFJjesAbsoluteMPFBiasdn_isLoaded = false;
  SumPtJjesAbsoluteMPFBiasdn_isLoaded = false;
  JsjesFragmentationup_isLoaded = false;
  NFJjesFragmentationup_isLoaded = false;
  FJ0jesFragmentationup_isLoaded = false;
  FJ1jesFragmentationup_isLoaded = false;
  FJ2jesFragmentationup_isLoaded = false;
  FJ3jesFragmentationup_isLoaded = false;
  FJ4jesFragmentationup_isLoaded = false;
  VMD0jesFragmentationup_isLoaded = false;
  VMD1jesFragmentationup_isLoaded = false;
  VMD2jesFragmentationup_isLoaded = false;
  VMD3jesFragmentationup_isLoaded = false;
  VMD4jesFragmentationup_isLoaded = false;
  WMD0jesFragmentationup_isLoaded = false;
  WMD1jesFragmentationup_isLoaded = false;
  WMD2jesFragmentationup_isLoaded = false;
  WMD3jesFragmentationup_isLoaded = false;
  WMD4jesFragmentationup_isLoaded = false;
  NQGen0jesFragmentationup_isLoaded = false;
  NQGen1jesFragmentationup_isLoaded = false;
  NQGen2jesFragmentationup_isLoaded = false;
  NQGen3jesFragmentationup_isLoaded = false;
  NQGen4jesFragmentationup_isLoaded = false;
  NBGen0jesFragmentationup_isLoaded = false;
  NBGen1jesFragmentationup_isLoaded = false;
  NBGen2jesFragmentationup_isLoaded = false;
  NBGen3jesFragmentationup_isLoaded = false;
  NBGen4jesFragmentationup_isLoaded = false;
  NLGen0jesFragmentationup_isLoaded = false;
  NLGen1jesFragmentationup_isLoaded = false;
  NLGen2jesFragmentationup_isLoaded = false;
  NLGen3jesFragmentationup_isLoaded = false;
  NLGen4jesFragmentationup_isLoaded = false;
  NVQGen0jesFragmentationup_isLoaded = false;
  NVQGen1jesFragmentationup_isLoaded = false;
  NVQGen2jesFragmentationup_isLoaded = false;
  NVQGen3jesFragmentationup_isLoaded = false;
  NVQGen4jesFragmentationup_isLoaded = false;
  NiFJjesFragmentationup_isLoaded = false;
  iFJ0jesFragmentationup_isLoaded = false;
  iFJ1jesFragmentationup_isLoaded = false;
  iFJ2jesFragmentationup_isLoaded = false;
  iFJ3jesFragmentationup_isLoaded = false;
  iFJ4jesFragmentationup_isLoaded = false;
  iVMD0jesFragmentationup_isLoaded = false;
  iVMD1jesFragmentationup_isLoaded = false;
  iVMD2jesFragmentationup_isLoaded = false;
  iVMD3jesFragmentationup_isLoaded = false;
  iVMD4jesFragmentationup_isLoaded = false;
  iWMD0jesFragmentationup_isLoaded = false;
  iWMD1jesFragmentationup_isLoaded = false;
  iWMD2jesFragmentationup_isLoaded = false;
  iWMD3jesFragmentationup_isLoaded = false;
  iWMD4jesFragmentationup_isLoaded = false;
  METjesFragmentationup_isLoaded = false;
  NujesFragmentationup_isLoaded = false;
  NJjesFragmentationup_isLoaded = false;
  NbLoosejesFragmentationup_isLoaded = false;
  NbMediumjesFragmentationup_isLoaded = false;
  NbTightjesFragmentationup_isLoaded = false;
  NoORNbLoosejesFragmentationup_isLoaded = false;
  NoORNbMediumjesFragmentationup_isLoaded = false;
  NoORNbTightjesFragmentationup_isLoaded = false;
  J0jesFragmentationup_isLoaded = false;
  J1jesFragmentationup_isLoaded = false;
  J2jesFragmentationup_isLoaded = false;
  J3jesFragmentationup_isLoaded = false;
  J4jesFragmentationup_isLoaded = false;
  J5jesFragmentationup_isLoaded = false;
  J6jesFragmentationup_isLoaded = false;
  J7jesFragmentationup_isLoaded = false;
  NQJGenjesFragmentationup_isLoaded = false;
  NBJGenjesFragmentationup_isLoaded = false;
  NLJGenjesFragmentationup_isLoaded = false;
  MVVXjesFragmentationup_isLoaded = false;
  PtVVXjesFragmentationup_isLoaded = false;
  HTjesFragmentationup_isLoaded = false;
  HTJjesFragmentationup_isLoaded = false;
  HTFJjesFragmentationup_isLoaded = false;
  SumPtFJjesFragmentationup_isLoaded = false;
  SumPtJjesFragmentationup_isLoaded = false;
  JsjesFragmentationdn_isLoaded = false;
  NFJjesFragmentationdn_isLoaded = false;
  FJ0jesFragmentationdn_isLoaded = false;
  FJ1jesFragmentationdn_isLoaded = false;
  FJ2jesFragmentationdn_isLoaded = false;
  FJ3jesFragmentationdn_isLoaded = false;
  FJ4jesFragmentationdn_isLoaded = false;
  VMD0jesFragmentationdn_isLoaded = false;
  VMD1jesFragmentationdn_isLoaded = false;
  VMD2jesFragmentationdn_isLoaded = false;
  VMD3jesFragmentationdn_isLoaded = false;
  VMD4jesFragmentationdn_isLoaded = false;
  WMD0jesFragmentationdn_isLoaded = false;
  WMD1jesFragmentationdn_isLoaded = false;
  WMD2jesFragmentationdn_isLoaded = false;
  WMD3jesFragmentationdn_isLoaded = false;
  WMD4jesFragmentationdn_isLoaded = false;
  NQGen0jesFragmentationdn_isLoaded = false;
  NQGen1jesFragmentationdn_isLoaded = false;
  NQGen2jesFragmentationdn_isLoaded = false;
  NQGen3jesFragmentationdn_isLoaded = false;
  NQGen4jesFragmentationdn_isLoaded = false;
  NBGen0jesFragmentationdn_isLoaded = false;
  NBGen1jesFragmentationdn_isLoaded = false;
  NBGen2jesFragmentationdn_isLoaded = false;
  NBGen3jesFragmentationdn_isLoaded = false;
  NBGen4jesFragmentationdn_isLoaded = false;
  NLGen0jesFragmentationdn_isLoaded = false;
  NLGen1jesFragmentationdn_isLoaded = false;
  NLGen2jesFragmentationdn_isLoaded = false;
  NLGen3jesFragmentationdn_isLoaded = false;
  NLGen4jesFragmentationdn_isLoaded = false;
  NVQGen0jesFragmentationdn_isLoaded = false;
  NVQGen1jesFragmentationdn_isLoaded = false;
  NVQGen2jesFragmentationdn_isLoaded = false;
  NVQGen3jesFragmentationdn_isLoaded = false;
  NVQGen4jesFragmentationdn_isLoaded = false;
  NiFJjesFragmentationdn_isLoaded = false;
  iFJ0jesFragmentationdn_isLoaded = false;
  iFJ1jesFragmentationdn_isLoaded = false;
  iFJ2jesFragmentationdn_isLoaded = false;
  iFJ3jesFragmentationdn_isLoaded = false;
  iFJ4jesFragmentationdn_isLoaded = false;
  iVMD0jesFragmentationdn_isLoaded = false;
  iVMD1jesFragmentationdn_isLoaded = false;
  iVMD2jesFragmentationdn_isLoaded = false;
  iVMD3jesFragmentationdn_isLoaded = false;
  iVMD4jesFragmentationdn_isLoaded = false;
  iWMD0jesFragmentationdn_isLoaded = false;
  iWMD1jesFragmentationdn_isLoaded = false;
  iWMD2jesFragmentationdn_isLoaded = false;
  iWMD3jesFragmentationdn_isLoaded = false;
  iWMD4jesFragmentationdn_isLoaded = false;
  METjesFragmentationdn_isLoaded = false;
  NujesFragmentationdn_isLoaded = false;
  NJjesFragmentationdn_isLoaded = false;
  NbLoosejesFragmentationdn_isLoaded = false;
  NbMediumjesFragmentationdn_isLoaded = false;
  NbTightjesFragmentationdn_isLoaded = false;
  NoORNbLoosejesFragmentationdn_isLoaded = false;
  NoORNbMediumjesFragmentationdn_isLoaded = false;
  NoORNbTightjesFragmentationdn_isLoaded = false;
  J0jesFragmentationdn_isLoaded = false;
  J1jesFragmentationdn_isLoaded = false;
  J2jesFragmentationdn_isLoaded = false;
  J3jesFragmentationdn_isLoaded = false;
  J4jesFragmentationdn_isLoaded = false;
  J5jesFragmentationdn_isLoaded = false;
  J6jesFragmentationdn_isLoaded = false;
  J7jesFragmentationdn_isLoaded = false;
  NQJGenjesFragmentationdn_isLoaded = false;
  NBJGenjesFragmentationdn_isLoaded = false;
  NLJGenjesFragmentationdn_isLoaded = false;
  MVVXjesFragmentationdn_isLoaded = false;
  PtVVXjesFragmentationdn_isLoaded = false;
  HTjesFragmentationdn_isLoaded = false;
  HTJjesFragmentationdn_isLoaded = false;
  HTFJjesFragmentationdn_isLoaded = false;
  SumPtFJjesFragmentationdn_isLoaded = false;
  SumPtJjesFragmentationdn_isLoaded = false;
  JsjesSinglePionECALup_isLoaded = false;
  NFJjesSinglePionECALup_isLoaded = false;
  FJ0jesSinglePionECALup_isLoaded = false;
  FJ1jesSinglePionECALup_isLoaded = false;
  FJ2jesSinglePionECALup_isLoaded = false;
  FJ3jesSinglePionECALup_isLoaded = false;
  FJ4jesSinglePionECALup_isLoaded = false;
  VMD0jesSinglePionECALup_isLoaded = false;
  VMD1jesSinglePionECALup_isLoaded = false;
  VMD2jesSinglePionECALup_isLoaded = false;
  VMD3jesSinglePionECALup_isLoaded = false;
  VMD4jesSinglePionECALup_isLoaded = false;
  WMD0jesSinglePionECALup_isLoaded = false;
  WMD1jesSinglePionECALup_isLoaded = false;
  WMD2jesSinglePionECALup_isLoaded = false;
  WMD3jesSinglePionECALup_isLoaded = false;
  WMD4jesSinglePionECALup_isLoaded = false;
  NQGen0jesSinglePionECALup_isLoaded = false;
  NQGen1jesSinglePionECALup_isLoaded = false;
  NQGen2jesSinglePionECALup_isLoaded = false;
  NQGen3jesSinglePionECALup_isLoaded = false;
  NQGen4jesSinglePionECALup_isLoaded = false;
  NBGen0jesSinglePionECALup_isLoaded = false;
  NBGen1jesSinglePionECALup_isLoaded = false;
  NBGen2jesSinglePionECALup_isLoaded = false;
  NBGen3jesSinglePionECALup_isLoaded = false;
  NBGen4jesSinglePionECALup_isLoaded = false;
  NLGen0jesSinglePionECALup_isLoaded = false;
  NLGen1jesSinglePionECALup_isLoaded = false;
  NLGen2jesSinglePionECALup_isLoaded = false;
  NLGen3jesSinglePionECALup_isLoaded = false;
  NLGen4jesSinglePionECALup_isLoaded = false;
  NVQGen0jesSinglePionECALup_isLoaded = false;
  NVQGen1jesSinglePionECALup_isLoaded = false;
  NVQGen2jesSinglePionECALup_isLoaded = false;
  NVQGen3jesSinglePionECALup_isLoaded = false;
  NVQGen4jesSinglePionECALup_isLoaded = false;
  NiFJjesSinglePionECALup_isLoaded = false;
  iFJ0jesSinglePionECALup_isLoaded = false;
  iFJ1jesSinglePionECALup_isLoaded = false;
  iFJ2jesSinglePionECALup_isLoaded = false;
  iFJ3jesSinglePionECALup_isLoaded = false;
  iFJ4jesSinglePionECALup_isLoaded = false;
  iVMD0jesSinglePionECALup_isLoaded = false;
  iVMD1jesSinglePionECALup_isLoaded = false;
  iVMD2jesSinglePionECALup_isLoaded = false;
  iVMD3jesSinglePionECALup_isLoaded = false;
  iVMD4jesSinglePionECALup_isLoaded = false;
  iWMD0jesSinglePionECALup_isLoaded = false;
  iWMD1jesSinglePionECALup_isLoaded = false;
  iWMD2jesSinglePionECALup_isLoaded = false;
  iWMD3jesSinglePionECALup_isLoaded = false;
  iWMD4jesSinglePionECALup_isLoaded = false;
  METjesSinglePionECALup_isLoaded = false;
  NujesSinglePionECALup_isLoaded = false;
  NJjesSinglePionECALup_isLoaded = false;
  NbLoosejesSinglePionECALup_isLoaded = false;
  NbMediumjesSinglePionECALup_isLoaded = false;
  NbTightjesSinglePionECALup_isLoaded = false;
  NoORNbLoosejesSinglePionECALup_isLoaded = false;
  NoORNbMediumjesSinglePionECALup_isLoaded = false;
  NoORNbTightjesSinglePionECALup_isLoaded = false;
  J0jesSinglePionECALup_isLoaded = false;
  J1jesSinglePionECALup_isLoaded = false;
  J2jesSinglePionECALup_isLoaded = false;
  J3jesSinglePionECALup_isLoaded = false;
  J4jesSinglePionECALup_isLoaded = false;
  J5jesSinglePionECALup_isLoaded = false;
  J6jesSinglePionECALup_isLoaded = false;
  J7jesSinglePionECALup_isLoaded = false;
  NQJGenjesSinglePionECALup_isLoaded = false;
  NBJGenjesSinglePionECALup_isLoaded = false;
  NLJGenjesSinglePionECALup_isLoaded = false;
  MVVXjesSinglePionECALup_isLoaded = false;
  PtVVXjesSinglePionECALup_isLoaded = false;
  HTjesSinglePionECALup_isLoaded = false;
  HTJjesSinglePionECALup_isLoaded = false;
  HTFJjesSinglePionECALup_isLoaded = false;
  SumPtFJjesSinglePionECALup_isLoaded = false;
  SumPtJjesSinglePionECALup_isLoaded = false;
  JsjesSinglePionECALdn_isLoaded = false;
  NFJjesSinglePionECALdn_isLoaded = false;
  FJ0jesSinglePionECALdn_isLoaded = false;
  FJ1jesSinglePionECALdn_isLoaded = false;
  FJ2jesSinglePionECALdn_isLoaded = false;
  FJ3jesSinglePionECALdn_isLoaded = false;
  FJ4jesSinglePionECALdn_isLoaded = false;
  VMD0jesSinglePionECALdn_isLoaded = false;
  VMD1jesSinglePionECALdn_isLoaded = false;
  VMD2jesSinglePionECALdn_isLoaded = false;
  VMD3jesSinglePionECALdn_isLoaded = false;
  VMD4jesSinglePionECALdn_isLoaded = false;
  WMD0jesSinglePionECALdn_isLoaded = false;
  WMD1jesSinglePionECALdn_isLoaded = false;
  WMD2jesSinglePionECALdn_isLoaded = false;
  WMD3jesSinglePionECALdn_isLoaded = false;
  WMD4jesSinglePionECALdn_isLoaded = false;
  NQGen0jesSinglePionECALdn_isLoaded = false;
  NQGen1jesSinglePionECALdn_isLoaded = false;
  NQGen2jesSinglePionECALdn_isLoaded = false;
  NQGen3jesSinglePionECALdn_isLoaded = false;
  NQGen4jesSinglePionECALdn_isLoaded = false;
  NBGen0jesSinglePionECALdn_isLoaded = false;
  NBGen1jesSinglePionECALdn_isLoaded = false;
  NBGen2jesSinglePionECALdn_isLoaded = false;
  NBGen3jesSinglePionECALdn_isLoaded = false;
  NBGen4jesSinglePionECALdn_isLoaded = false;
  NLGen0jesSinglePionECALdn_isLoaded = false;
  NLGen1jesSinglePionECALdn_isLoaded = false;
  NLGen2jesSinglePionECALdn_isLoaded = false;
  NLGen3jesSinglePionECALdn_isLoaded = false;
  NLGen4jesSinglePionECALdn_isLoaded = false;
  NVQGen0jesSinglePionECALdn_isLoaded = false;
  NVQGen1jesSinglePionECALdn_isLoaded = false;
  NVQGen2jesSinglePionECALdn_isLoaded = false;
  NVQGen3jesSinglePionECALdn_isLoaded = false;
  NVQGen4jesSinglePionECALdn_isLoaded = false;
  NiFJjesSinglePionECALdn_isLoaded = false;
  iFJ0jesSinglePionECALdn_isLoaded = false;
  iFJ1jesSinglePionECALdn_isLoaded = false;
  iFJ2jesSinglePionECALdn_isLoaded = false;
  iFJ3jesSinglePionECALdn_isLoaded = false;
  iFJ4jesSinglePionECALdn_isLoaded = false;
  iVMD0jesSinglePionECALdn_isLoaded = false;
  iVMD1jesSinglePionECALdn_isLoaded = false;
  iVMD2jesSinglePionECALdn_isLoaded = false;
  iVMD3jesSinglePionECALdn_isLoaded = false;
  iVMD4jesSinglePionECALdn_isLoaded = false;
  iWMD0jesSinglePionECALdn_isLoaded = false;
  iWMD1jesSinglePionECALdn_isLoaded = false;
  iWMD2jesSinglePionECALdn_isLoaded = false;
  iWMD3jesSinglePionECALdn_isLoaded = false;
  iWMD4jesSinglePionECALdn_isLoaded = false;
  METjesSinglePionECALdn_isLoaded = false;
  NujesSinglePionECALdn_isLoaded = false;
  NJjesSinglePionECALdn_isLoaded = false;
  NbLoosejesSinglePionECALdn_isLoaded = false;
  NbMediumjesSinglePionECALdn_isLoaded = false;
  NbTightjesSinglePionECALdn_isLoaded = false;
  NoORNbLoosejesSinglePionECALdn_isLoaded = false;
  NoORNbMediumjesSinglePionECALdn_isLoaded = false;
  NoORNbTightjesSinglePionECALdn_isLoaded = false;
  J0jesSinglePionECALdn_isLoaded = false;
  J1jesSinglePionECALdn_isLoaded = false;
  J2jesSinglePionECALdn_isLoaded = false;
  J3jesSinglePionECALdn_isLoaded = false;
  J4jesSinglePionECALdn_isLoaded = false;
  J5jesSinglePionECALdn_isLoaded = false;
  J6jesSinglePionECALdn_isLoaded = false;
  J7jesSinglePionECALdn_isLoaded = false;
  NQJGenjesSinglePionECALdn_isLoaded = false;
  NBJGenjesSinglePionECALdn_isLoaded = false;
  NLJGenjesSinglePionECALdn_isLoaded = false;
  MVVXjesSinglePionECALdn_isLoaded = false;
  PtVVXjesSinglePionECALdn_isLoaded = false;
  HTjesSinglePionECALdn_isLoaded = false;
  HTJjesSinglePionECALdn_isLoaded = false;
  HTFJjesSinglePionECALdn_isLoaded = false;
  SumPtFJjesSinglePionECALdn_isLoaded = false;
  SumPtJjesSinglePionECALdn_isLoaded = false;
  JsjesSinglePionHCALup_isLoaded = false;
  NFJjesSinglePionHCALup_isLoaded = false;
  FJ0jesSinglePionHCALup_isLoaded = false;
  FJ1jesSinglePionHCALup_isLoaded = false;
  FJ2jesSinglePionHCALup_isLoaded = false;
  FJ3jesSinglePionHCALup_isLoaded = false;
  FJ4jesSinglePionHCALup_isLoaded = false;
  VMD0jesSinglePionHCALup_isLoaded = false;
  VMD1jesSinglePionHCALup_isLoaded = false;
  VMD2jesSinglePionHCALup_isLoaded = false;
  VMD3jesSinglePionHCALup_isLoaded = false;
  VMD4jesSinglePionHCALup_isLoaded = false;
  WMD0jesSinglePionHCALup_isLoaded = false;
  WMD1jesSinglePionHCALup_isLoaded = false;
  WMD2jesSinglePionHCALup_isLoaded = false;
  WMD3jesSinglePionHCALup_isLoaded = false;
  WMD4jesSinglePionHCALup_isLoaded = false;
  NQGen0jesSinglePionHCALup_isLoaded = false;
  NQGen1jesSinglePionHCALup_isLoaded = false;
  NQGen2jesSinglePionHCALup_isLoaded = false;
  NQGen3jesSinglePionHCALup_isLoaded = false;
  NQGen4jesSinglePionHCALup_isLoaded = false;
  NBGen0jesSinglePionHCALup_isLoaded = false;
  NBGen1jesSinglePionHCALup_isLoaded = false;
  NBGen2jesSinglePionHCALup_isLoaded = false;
  NBGen3jesSinglePionHCALup_isLoaded = false;
  NBGen4jesSinglePionHCALup_isLoaded = false;
  NLGen0jesSinglePionHCALup_isLoaded = false;
  NLGen1jesSinglePionHCALup_isLoaded = false;
  NLGen2jesSinglePionHCALup_isLoaded = false;
  NLGen3jesSinglePionHCALup_isLoaded = false;
  NLGen4jesSinglePionHCALup_isLoaded = false;
  NVQGen0jesSinglePionHCALup_isLoaded = false;
  NVQGen1jesSinglePionHCALup_isLoaded = false;
  NVQGen2jesSinglePionHCALup_isLoaded = false;
  NVQGen3jesSinglePionHCALup_isLoaded = false;
  NVQGen4jesSinglePionHCALup_isLoaded = false;
  NiFJjesSinglePionHCALup_isLoaded = false;
  iFJ0jesSinglePionHCALup_isLoaded = false;
  iFJ1jesSinglePionHCALup_isLoaded = false;
  iFJ2jesSinglePionHCALup_isLoaded = false;
  iFJ3jesSinglePionHCALup_isLoaded = false;
  iFJ4jesSinglePionHCALup_isLoaded = false;
  iVMD0jesSinglePionHCALup_isLoaded = false;
  iVMD1jesSinglePionHCALup_isLoaded = false;
  iVMD2jesSinglePionHCALup_isLoaded = false;
  iVMD3jesSinglePionHCALup_isLoaded = false;
  iVMD4jesSinglePionHCALup_isLoaded = false;
  iWMD0jesSinglePionHCALup_isLoaded = false;
  iWMD1jesSinglePionHCALup_isLoaded = false;
  iWMD2jesSinglePionHCALup_isLoaded = false;
  iWMD3jesSinglePionHCALup_isLoaded = false;
  iWMD4jesSinglePionHCALup_isLoaded = false;
  METjesSinglePionHCALup_isLoaded = false;
  NujesSinglePionHCALup_isLoaded = false;
  NJjesSinglePionHCALup_isLoaded = false;
  NbLoosejesSinglePionHCALup_isLoaded = false;
  NbMediumjesSinglePionHCALup_isLoaded = false;
  NbTightjesSinglePionHCALup_isLoaded = false;
  NoORNbLoosejesSinglePionHCALup_isLoaded = false;
  NoORNbMediumjesSinglePionHCALup_isLoaded = false;
  NoORNbTightjesSinglePionHCALup_isLoaded = false;
  J0jesSinglePionHCALup_isLoaded = false;
  J1jesSinglePionHCALup_isLoaded = false;
  J2jesSinglePionHCALup_isLoaded = false;
  J3jesSinglePionHCALup_isLoaded = false;
  J4jesSinglePionHCALup_isLoaded = false;
  J5jesSinglePionHCALup_isLoaded = false;
  J6jesSinglePionHCALup_isLoaded = false;
  J7jesSinglePionHCALup_isLoaded = false;
  NQJGenjesSinglePionHCALup_isLoaded = false;
  NBJGenjesSinglePionHCALup_isLoaded = false;
  NLJGenjesSinglePionHCALup_isLoaded = false;
  MVVXjesSinglePionHCALup_isLoaded = false;
  PtVVXjesSinglePionHCALup_isLoaded = false;
  HTjesSinglePionHCALup_isLoaded = false;
  HTJjesSinglePionHCALup_isLoaded = false;
  HTFJjesSinglePionHCALup_isLoaded = false;
  SumPtFJjesSinglePionHCALup_isLoaded = false;
  SumPtJjesSinglePionHCALup_isLoaded = false;
  JsjesSinglePionHCALdn_isLoaded = false;
  NFJjesSinglePionHCALdn_isLoaded = false;
  FJ0jesSinglePionHCALdn_isLoaded = false;
  FJ1jesSinglePionHCALdn_isLoaded = false;
  FJ2jesSinglePionHCALdn_isLoaded = false;
  FJ3jesSinglePionHCALdn_isLoaded = false;
  FJ4jesSinglePionHCALdn_isLoaded = false;
  VMD0jesSinglePionHCALdn_isLoaded = false;
  VMD1jesSinglePionHCALdn_isLoaded = false;
  VMD2jesSinglePionHCALdn_isLoaded = false;
  VMD3jesSinglePionHCALdn_isLoaded = false;
  VMD4jesSinglePionHCALdn_isLoaded = false;
  WMD0jesSinglePionHCALdn_isLoaded = false;
  WMD1jesSinglePionHCALdn_isLoaded = false;
  WMD2jesSinglePionHCALdn_isLoaded = false;
  WMD3jesSinglePionHCALdn_isLoaded = false;
  WMD4jesSinglePionHCALdn_isLoaded = false;
  NQGen0jesSinglePionHCALdn_isLoaded = false;
  NQGen1jesSinglePionHCALdn_isLoaded = false;
  NQGen2jesSinglePionHCALdn_isLoaded = false;
  NQGen3jesSinglePionHCALdn_isLoaded = false;
  NQGen4jesSinglePionHCALdn_isLoaded = false;
  NBGen0jesSinglePionHCALdn_isLoaded = false;
  NBGen1jesSinglePionHCALdn_isLoaded = false;
  NBGen2jesSinglePionHCALdn_isLoaded = false;
  NBGen3jesSinglePionHCALdn_isLoaded = false;
  NBGen4jesSinglePionHCALdn_isLoaded = false;
  NLGen0jesSinglePionHCALdn_isLoaded = false;
  NLGen1jesSinglePionHCALdn_isLoaded = false;
  NLGen2jesSinglePionHCALdn_isLoaded = false;
  NLGen3jesSinglePionHCALdn_isLoaded = false;
  NLGen4jesSinglePionHCALdn_isLoaded = false;
  NVQGen0jesSinglePionHCALdn_isLoaded = false;
  NVQGen1jesSinglePionHCALdn_isLoaded = false;
  NVQGen2jesSinglePionHCALdn_isLoaded = false;
  NVQGen3jesSinglePionHCALdn_isLoaded = false;
  NVQGen4jesSinglePionHCALdn_isLoaded = false;
  NiFJjesSinglePionHCALdn_isLoaded = false;
  iFJ0jesSinglePionHCALdn_isLoaded = false;
  iFJ1jesSinglePionHCALdn_isLoaded = false;
  iFJ2jesSinglePionHCALdn_isLoaded = false;
  iFJ3jesSinglePionHCALdn_isLoaded = false;
  iFJ4jesSinglePionHCALdn_isLoaded = false;
  iVMD0jesSinglePionHCALdn_isLoaded = false;
  iVMD1jesSinglePionHCALdn_isLoaded = false;
  iVMD2jesSinglePionHCALdn_isLoaded = false;
  iVMD3jesSinglePionHCALdn_isLoaded = false;
  iVMD4jesSinglePionHCALdn_isLoaded = false;
  iWMD0jesSinglePionHCALdn_isLoaded = false;
  iWMD1jesSinglePionHCALdn_isLoaded = false;
  iWMD2jesSinglePionHCALdn_isLoaded = false;
  iWMD3jesSinglePionHCALdn_isLoaded = false;
  iWMD4jesSinglePionHCALdn_isLoaded = false;
  METjesSinglePionHCALdn_isLoaded = false;
  NujesSinglePionHCALdn_isLoaded = false;
  NJjesSinglePionHCALdn_isLoaded = false;
  NbLoosejesSinglePionHCALdn_isLoaded = false;
  NbMediumjesSinglePionHCALdn_isLoaded = false;
  NbTightjesSinglePionHCALdn_isLoaded = false;
  NoORNbLoosejesSinglePionHCALdn_isLoaded = false;
  NoORNbMediumjesSinglePionHCALdn_isLoaded = false;
  NoORNbTightjesSinglePionHCALdn_isLoaded = false;
  J0jesSinglePionHCALdn_isLoaded = false;
  J1jesSinglePionHCALdn_isLoaded = false;
  J2jesSinglePionHCALdn_isLoaded = false;
  J3jesSinglePionHCALdn_isLoaded = false;
  J4jesSinglePionHCALdn_isLoaded = false;
  J5jesSinglePionHCALdn_isLoaded = false;
  J6jesSinglePionHCALdn_isLoaded = false;
  J7jesSinglePionHCALdn_isLoaded = false;
  NQJGenjesSinglePionHCALdn_isLoaded = false;
  NBJGenjesSinglePionHCALdn_isLoaded = false;
  NLJGenjesSinglePionHCALdn_isLoaded = false;
  MVVXjesSinglePionHCALdn_isLoaded = false;
  PtVVXjesSinglePionHCALdn_isLoaded = false;
  HTjesSinglePionHCALdn_isLoaded = false;
  HTJjesSinglePionHCALdn_isLoaded = false;
  HTFJjesSinglePionHCALdn_isLoaded = false;
  SumPtFJjesSinglePionHCALdn_isLoaded = false;
  SumPtJjesSinglePionHCALdn_isLoaded = false;
  JsjesFlavorQCDup_isLoaded = false;
  NFJjesFlavorQCDup_isLoaded = false;
  FJ0jesFlavorQCDup_isLoaded = false;
  FJ1jesFlavorQCDup_isLoaded = false;
  FJ2jesFlavorQCDup_isLoaded = false;
  FJ3jesFlavorQCDup_isLoaded = false;
  FJ4jesFlavorQCDup_isLoaded = false;
  VMD0jesFlavorQCDup_isLoaded = false;
  VMD1jesFlavorQCDup_isLoaded = false;
  VMD2jesFlavorQCDup_isLoaded = false;
  VMD3jesFlavorQCDup_isLoaded = false;
  VMD4jesFlavorQCDup_isLoaded = false;
  WMD0jesFlavorQCDup_isLoaded = false;
  WMD1jesFlavorQCDup_isLoaded = false;
  WMD2jesFlavorQCDup_isLoaded = false;
  WMD3jesFlavorQCDup_isLoaded = false;
  WMD4jesFlavorQCDup_isLoaded = false;
  NQGen0jesFlavorQCDup_isLoaded = false;
  NQGen1jesFlavorQCDup_isLoaded = false;
  NQGen2jesFlavorQCDup_isLoaded = false;
  NQGen3jesFlavorQCDup_isLoaded = false;
  NQGen4jesFlavorQCDup_isLoaded = false;
  NBGen0jesFlavorQCDup_isLoaded = false;
  NBGen1jesFlavorQCDup_isLoaded = false;
  NBGen2jesFlavorQCDup_isLoaded = false;
  NBGen3jesFlavorQCDup_isLoaded = false;
  NBGen4jesFlavorQCDup_isLoaded = false;
  NLGen0jesFlavorQCDup_isLoaded = false;
  NLGen1jesFlavorQCDup_isLoaded = false;
  NLGen2jesFlavorQCDup_isLoaded = false;
  NLGen3jesFlavorQCDup_isLoaded = false;
  NLGen4jesFlavorQCDup_isLoaded = false;
  NVQGen0jesFlavorQCDup_isLoaded = false;
  NVQGen1jesFlavorQCDup_isLoaded = false;
  NVQGen2jesFlavorQCDup_isLoaded = false;
  NVQGen3jesFlavorQCDup_isLoaded = false;
  NVQGen4jesFlavorQCDup_isLoaded = false;
  NiFJjesFlavorQCDup_isLoaded = false;
  iFJ0jesFlavorQCDup_isLoaded = false;
  iFJ1jesFlavorQCDup_isLoaded = false;
  iFJ2jesFlavorQCDup_isLoaded = false;
  iFJ3jesFlavorQCDup_isLoaded = false;
  iFJ4jesFlavorQCDup_isLoaded = false;
  iVMD0jesFlavorQCDup_isLoaded = false;
  iVMD1jesFlavorQCDup_isLoaded = false;
  iVMD2jesFlavorQCDup_isLoaded = false;
  iVMD3jesFlavorQCDup_isLoaded = false;
  iVMD4jesFlavorQCDup_isLoaded = false;
  iWMD0jesFlavorQCDup_isLoaded = false;
  iWMD1jesFlavorQCDup_isLoaded = false;
  iWMD2jesFlavorQCDup_isLoaded = false;
  iWMD3jesFlavorQCDup_isLoaded = false;
  iWMD4jesFlavorQCDup_isLoaded = false;
  METjesFlavorQCDup_isLoaded = false;
  NujesFlavorQCDup_isLoaded = false;
  NJjesFlavorQCDup_isLoaded = false;
  NbLoosejesFlavorQCDup_isLoaded = false;
  NbMediumjesFlavorQCDup_isLoaded = false;
  NbTightjesFlavorQCDup_isLoaded = false;
  NoORNbLoosejesFlavorQCDup_isLoaded = false;
  NoORNbMediumjesFlavorQCDup_isLoaded = false;
  NoORNbTightjesFlavorQCDup_isLoaded = false;
  J0jesFlavorQCDup_isLoaded = false;
  J1jesFlavorQCDup_isLoaded = false;
  J2jesFlavorQCDup_isLoaded = false;
  J3jesFlavorQCDup_isLoaded = false;
  J4jesFlavorQCDup_isLoaded = false;
  J5jesFlavorQCDup_isLoaded = false;
  J6jesFlavorQCDup_isLoaded = false;
  J7jesFlavorQCDup_isLoaded = false;
  NQJGenjesFlavorQCDup_isLoaded = false;
  NBJGenjesFlavorQCDup_isLoaded = false;
  NLJGenjesFlavorQCDup_isLoaded = false;
  MVVXjesFlavorQCDup_isLoaded = false;
  PtVVXjesFlavorQCDup_isLoaded = false;
  HTjesFlavorQCDup_isLoaded = false;
  HTJjesFlavorQCDup_isLoaded = false;
  HTFJjesFlavorQCDup_isLoaded = false;
  SumPtFJjesFlavorQCDup_isLoaded = false;
  SumPtJjesFlavorQCDup_isLoaded = false;
  JsjesFlavorQCDdn_isLoaded = false;
  NFJjesFlavorQCDdn_isLoaded = false;
  FJ0jesFlavorQCDdn_isLoaded = false;
  FJ1jesFlavorQCDdn_isLoaded = false;
  FJ2jesFlavorQCDdn_isLoaded = false;
  FJ3jesFlavorQCDdn_isLoaded = false;
  FJ4jesFlavorQCDdn_isLoaded = false;
  VMD0jesFlavorQCDdn_isLoaded = false;
  VMD1jesFlavorQCDdn_isLoaded = false;
  VMD2jesFlavorQCDdn_isLoaded = false;
  VMD3jesFlavorQCDdn_isLoaded = false;
  VMD4jesFlavorQCDdn_isLoaded = false;
  WMD0jesFlavorQCDdn_isLoaded = false;
  WMD1jesFlavorQCDdn_isLoaded = false;
  WMD2jesFlavorQCDdn_isLoaded = false;
  WMD3jesFlavorQCDdn_isLoaded = false;
  WMD4jesFlavorQCDdn_isLoaded = false;
  NQGen0jesFlavorQCDdn_isLoaded = false;
  NQGen1jesFlavorQCDdn_isLoaded = false;
  NQGen2jesFlavorQCDdn_isLoaded = false;
  NQGen3jesFlavorQCDdn_isLoaded = false;
  NQGen4jesFlavorQCDdn_isLoaded = false;
  NBGen0jesFlavorQCDdn_isLoaded = false;
  NBGen1jesFlavorQCDdn_isLoaded = false;
  NBGen2jesFlavorQCDdn_isLoaded = false;
  NBGen3jesFlavorQCDdn_isLoaded = false;
  NBGen4jesFlavorQCDdn_isLoaded = false;
  NLGen0jesFlavorQCDdn_isLoaded = false;
  NLGen1jesFlavorQCDdn_isLoaded = false;
  NLGen2jesFlavorQCDdn_isLoaded = false;
  NLGen3jesFlavorQCDdn_isLoaded = false;
  NLGen4jesFlavorQCDdn_isLoaded = false;
  NVQGen0jesFlavorQCDdn_isLoaded = false;
  NVQGen1jesFlavorQCDdn_isLoaded = false;
  NVQGen2jesFlavorQCDdn_isLoaded = false;
  NVQGen3jesFlavorQCDdn_isLoaded = false;
  NVQGen4jesFlavorQCDdn_isLoaded = false;
  NiFJjesFlavorQCDdn_isLoaded = false;
  iFJ0jesFlavorQCDdn_isLoaded = false;
  iFJ1jesFlavorQCDdn_isLoaded = false;
  iFJ2jesFlavorQCDdn_isLoaded = false;
  iFJ3jesFlavorQCDdn_isLoaded = false;
  iFJ4jesFlavorQCDdn_isLoaded = false;
  iVMD0jesFlavorQCDdn_isLoaded = false;
  iVMD1jesFlavorQCDdn_isLoaded = false;
  iVMD2jesFlavorQCDdn_isLoaded = false;
  iVMD3jesFlavorQCDdn_isLoaded = false;
  iVMD4jesFlavorQCDdn_isLoaded = false;
  iWMD0jesFlavorQCDdn_isLoaded = false;
  iWMD1jesFlavorQCDdn_isLoaded = false;
  iWMD2jesFlavorQCDdn_isLoaded = false;
  iWMD3jesFlavorQCDdn_isLoaded = false;
  iWMD4jesFlavorQCDdn_isLoaded = false;
  METjesFlavorQCDdn_isLoaded = false;
  NujesFlavorQCDdn_isLoaded = false;
  NJjesFlavorQCDdn_isLoaded = false;
  NbLoosejesFlavorQCDdn_isLoaded = false;
  NbMediumjesFlavorQCDdn_isLoaded = false;
  NbTightjesFlavorQCDdn_isLoaded = false;
  NoORNbLoosejesFlavorQCDdn_isLoaded = false;
  NoORNbMediumjesFlavorQCDdn_isLoaded = false;
  NoORNbTightjesFlavorQCDdn_isLoaded = false;
  J0jesFlavorQCDdn_isLoaded = false;
  J1jesFlavorQCDdn_isLoaded = false;
  J2jesFlavorQCDdn_isLoaded = false;
  J3jesFlavorQCDdn_isLoaded = false;
  J4jesFlavorQCDdn_isLoaded = false;
  J5jesFlavorQCDdn_isLoaded = false;
  J6jesFlavorQCDdn_isLoaded = false;
  J7jesFlavorQCDdn_isLoaded = false;
  NQJGenjesFlavorQCDdn_isLoaded = false;
  NBJGenjesFlavorQCDdn_isLoaded = false;
  NLJGenjesFlavorQCDdn_isLoaded = false;
  MVVXjesFlavorQCDdn_isLoaded = false;
  PtVVXjesFlavorQCDdn_isLoaded = false;
  HTjesFlavorQCDdn_isLoaded = false;
  HTJjesFlavorQCDdn_isLoaded = false;
  HTFJjesFlavorQCDdn_isLoaded = false;
  SumPtFJjesFlavorQCDdn_isLoaded = false;
  SumPtJjesFlavorQCDdn_isLoaded = false;
  JsjesTimePtEtaup_isLoaded = false;
  NFJjesTimePtEtaup_isLoaded = false;
  FJ0jesTimePtEtaup_isLoaded = false;
  FJ1jesTimePtEtaup_isLoaded = false;
  FJ2jesTimePtEtaup_isLoaded = false;
  FJ3jesTimePtEtaup_isLoaded = false;
  FJ4jesTimePtEtaup_isLoaded = false;
  VMD0jesTimePtEtaup_isLoaded = false;
  VMD1jesTimePtEtaup_isLoaded = false;
  VMD2jesTimePtEtaup_isLoaded = false;
  VMD3jesTimePtEtaup_isLoaded = false;
  VMD4jesTimePtEtaup_isLoaded = false;
  WMD0jesTimePtEtaup_isLoaded = false;
  WMD1jesTimePtEtaup_isLoaded = false;
  WMD2jesTimePtEtaup_isLoaded = false;
  WMD3jesTimePtEtaup_isLoaded = false;
  WMD4jesTimePtEtaup_isLoaded = false;
  NQGen0jesTimePtEtaup_isLoaded = false;
  NQGen1jesTimePtEtaup_isLoaded = false;
  NQGen2jesTimePtEtaup_isLoaded = false;
  NQGen3jesTimePtEtaup_isLoaded = false;
  NQGen4jesTimePtEtaup_isLoaded = false;
  NBGen0jesTimePtEtaup_isLoaded = false;
  NBGen1jesTimePtEtaup_isLoaded = false;
  NBGen2jesTimePtEtaup_isLoaded = false;
  NBGen3jesTimePtEtaup_isLoaded = false;
  NBGen4jesTimePtEtaup_isLoaded = false;
  NLGen0jesTimePtEtaup_isLoaded = false;
  NLGen1jesTimePtEtaup_isLoaded = false;
  NLGen2jesTimePtEtaup_isLoaded = false;
  NLGen3jesTimePtEtaup_isLoaded = false;
  NLGen4jesTimePtEtaup_isLoaded = false;
  NVQGen0jesTimePtEtaup_isLoaded = false;
  NVQGen1jesTimePtEtaup_isLoaded = false;
  NVQGen2jesTimePtEtaup_isLoaded = false;
  NVQGen3jesTimePtEtaup_isLoaded = false;
  NVQGen4jesTimePtEtaup_isLoaded = false;
  NiFJjesTimePtEtaup_isLoaded = false;
  iFJ0jesTimePtEtaup_isLoaded = false;
  iFJ1jesTimePtEtaup_isLoaded = false;
  iFJ2jesTimePtEtaup_isLoaded = false;
  iFJ3jesTimePtEtaup_isLoaded = false;
  iFJ4jesTimePtEtaup_isLoaded = false;
  iVMD0jesTimePtEtaup_isLoaded = false;
  iVMD1jesTimePtEtaup_isLoaded = false;
  iVMD2jesTimePtEtaup_isLoaded = false;
  iVMD3jesTimePtEtaup_isLoaded = false;
  iVMD4jesTimePtEtaup_isLoaded = false;
  iWMD0jesTimePtEtaup_isLoaded = false;
  iWMD1jesTimePtEtaup_isLoaded = false;
  iWMD2jesTimePtEtaup_isLoaded = false;
  iWMD3jesTimePtEtaup_isLoaded = false;
  iWMD4jesTimePtEtaup_isLoaded = false;
  METjesTimePtEtaup_isLoaded = false;
  NujesTimePtEtaup_isLoaded = false;
  NJjesTimePtEtaup_isLoaded = false;
  NbLoosejesTimePtEtaup_isLoaded = false;
  NbMediumjesTimePtEtaup_isLoaded = false;
  NbTightjesTimePtEtaup_isLoaded = false;
  NoORNbLoosejesTimePtEtaup_isLoaded = false;
  NoORNbMediumjesTimePtEtaup_isLoaded = false;
  NoORNbTightjesTimePtEtaup_isLoaded = false;
  J0jesTimePtEtaup_isLoaded = false;
  J1jesTimePtEtaup_isLoaded = false;
  J2jesTimePtEtaup_isLoaded = false;
  J3jesTimePtEtaup_isLoaded = false;
  J4jesTimePtEtaup_isLoaded = false;
  J5jesTimePtEtaup_isLoaded = false;
  J6jesTimePtEtaup_isLoaded = false;
  J7jesTimePtEtaup_isLoaded = false;
  NQJGenjesTimePtEtaup_isLoaded = false;
  NBJGenjesTimePtEtaup_isLoaded = false;
  NLJGenjesTimePtEtaup_isLoaded = false;
  MVVXjesTimePtEtaup_isLoaded = false;
  PtVVXjesTimePtEtaup_isLoaded = false;
  HTjesTimePtEtaup_isLoaded = false;
  HTJjesTimePtEtaup_isLoaded = false;
  HTFJjesTimePtEtaup_isLoaded = false;
  SumPtFJjesTimePtEtaup_isLoaded = false;
  SumPtJjesTimePtEtaup_isLoaded = false;
  JsjesTimePtEtadn_isLoaded = false;
  NFJjesTimePtEtadn_isLoaded = false;
  FJ0jesTimePtEtadn_isLoaded = false;
  FJ1jesTimePtEtadn_isLoaded = false;
  FJ2jesTimePtEtadn_isLoaded = false;
  FJ3jesTimePtEtadn_isLoaded = false;
  FJ4jesTimePtEtadn_isLoaded = false;
  VMD0jesTimePtEtadn_isLoaded = false;
  VMD1jesTimePtEtadn_isLoaded = false;
  VMD2jesTimePtEtadn_isLoaded = false;
  VMD3jesTimePtEtadn_isLoaded = false;
  VMD4jesTimePtEtadn_isLoaded = false;
  WMD0jesTimePtEtadn_isLoaded = false;
  WMD1jesTimePtEtadn_isLoaded = false;
  WMD2jesTimePtEtadn_isLoaded = false;
  WMD3jesTimePtEtadn_isLoaded = false;
  WMD4jesTimePtEtadn_isLoaded = false;
  NQGen0jesTimePtEtadn_isLoaded = false;
  NQGen1jesTimePtEtadn_isLoaded = false;
  NQGen2jesTimePtEtadn_isLoaded = false;
  NQGen3jesTimePtEtadn_isLoaded = false;
  NQGen4jesTimePtEtadn_isLoaded = false;
  NBGen0jesTimePtEtadn_isLoaded = false;
  NBGen1jesTimePtEtadn_isLoaded = false;
  NBGen2jesTimePtEtadn_isLoaded = false;
  NBGen3jesTimePtEtadn_isLoaded = false;
  NBGen4jesTimePtEtadn_isLoaded = false;
  NLGen0jesTimePtEtadn_isLoaded = false;
  NLGen1jesTimePtEtadn_isLoaded = false;
  NLGen2jesTimePtEtadn_isLoaded = false;
  NLGen3jesTimePtEtadn_isLoaded = false;
  NLGen4jesTimePtEtadn_isLoaded = false;
  NVQGen0jesTimePtEtadn_isLoaded = false;
  NVQGen1jesTimePtEtadn_isLoaded = false;
  NVQGen2jesTimePtEtadn_isLoaded = false;
  NVQGen3jesTimePtEtadn_isLoaded = false;
  NVQGen4jesTimePtEtadn_isLoaded = false;
  NiFJjesTimePtEtadn_isLoaded = false;
  iFJ0jesTimePtEtadn_isLoaded = false;
  iFJ1jesTimePtEtadn_isLoaded = false;
  iFJ2jesTimePtEtadn_isLoaded = false;
  iFJ3jesTimePtEtadn_isLoaded = false;
  iFJ4jesTimePtEtadn_isLoaded = false;
  iVMD0jesTimePtEtadn_isLoaded = false;
  iVMD1jesTimePtEtadn_isLoaded = false;
  iVMD2jesTimePtEtadn_isLoaded = false;
  iVMD3jesTimePtEtadn_isLoaded = false;
  iVMD4jesTimePtEtadn_isLoaded = false;
  iWMD0jesTimePtEtadn_isLoaded = false;
  iWMD1jesTimePtEtadn_isLoaded = false;
  iWMD2jesTimePtEtadn_isLoaded = false;
  iWMD3jesTimePtEtadn_isLoaded = false;
  iWMD4jesTimePtEtadn_isLoaded = false;
  METjesTimePtEtadn_isLoaded = false;
  NujesTimePtEtadn_isLoaded = false;
  NJjesTimePtEtadn_isLoaded = false;
  NbLoosejesTimePtEtadn_isLoaded = false;
  NbMediumjesTimePtEtadn_isLoaded = false;
  NbTightjesTimePtEtadn_isLoaded = false;
  NoORNbLoosejesTimePtEtadn_isLoaded = false;
  NoORNbMediumjesTimePtEtadn_isLoaded = false;
  NoORNbTightjesTimePtEtadn_isLoaded = false;
  J0jesTimePtEtadn_isLoaded = false;
  J1jesTimePtEtadn_isLoaded = false;
  J2jesTimePtEtadn_isLoaded = false;
  J3jesTimePtEtadn_isLoaded = false;
  J4jesTimePtEtadn_isLoaded = false;
  J5jesTimePtEtadn_isLoaded = false;
  J6jesTimePtEtadn_isLoaded = false;
  J7jesTimePtEtadn_isLoaded = false;
  NQJGenjesTimePtEtadn_isLoaded = false;
  NBJGenjesTimePtEtadn_isLoaded = false;
  NLJGenjesTimePtEtadn_isLoaded = false;
  MVVXjesTimePtEtadn_isLoaded = false;
  PtVVXjesTimePtEtadn_isLoaded = false;
  HTjesTimePtEtadn_isLoaded = false;
  HTJjesTimePtEtadn_isLoaded = false;
  HTFJjesTimePtEtadn_isLoaded = false;
  SumPtFJjesTimePtEtadn_isLoaded = false;
  SumPtJjesTimePtEtadn_isLoaded = false;
  JsjesRelativeJEREC1up_isLoaded = false;
  NFJjesRelativeJEREC1up_isLoaded = false;
  FJ0jesRelativeJEREC1up_isLoaded = false;
  FJ1jesRelativeJEREC1up_isLoaded = false;
  FJ2jesRelativeJEREC1up_isLoaded = false;
  FJ3jesRelativeJEREC1up_isLoaded = false;
  FJ4jesRelativeJEREC1up_isLoaded = false;
  VMD0jesRelativeJEREC1up_isLoaded = false;
  VMD1jesRelativeJEREC1up_isLoaded = false;
  VMD2jesRelativeJEREC1up_isLoaded = false;
  VMD3jesRelativeJEREC1up_isLoaded = false;
  VMD4jesRelativeJEREC1up_isLoaded = false;
  WMD0jesRelativeJEREC1up_isLoaded = false;
  WMD1jesRelativeJEREC1up_isLoaded = false;
  WMD2jesRelativeJEREC1up_isLoaded = false;
  WMD3jesRelativeJEREC1up_isLoaded = false;
  WMD4jesRelativeJEREC1up_isLoaded = false;
  NQGen0jesRelativeJEREC1up_isLoaded = false;
  NQGen1jesRelativeJEREC1up_isLoaded = false;
  NQGen2jesRelativeJEREC1up_isLoaded = false;
  NQGen3jesRelativeJEREC1up_isLoaded = false;
  NQGen4jesRelativeJEREC1up_isLoaded = false;
  NBGen0jesRelativeJEREC1up_isLoaded = false;
  NBGen1jesRelativeJEREC1up_isLoaded = false;
  NBGen2jesRelativeJEREC1up_isLoaded = false;
  NBGen3jesRelativeJEREC1up_isLoaded = false;
  NBGen4jesRelativeJEREC1up_isLoaded = false;
  NLGen0jesRelativeJEREC1up_isLoaded = false;
  NLGen1jesRelativeJEREC1up_isLoaded = false;
  NLGen2jesRelativeJEREC1up_isLoaded = false;
  NLGen3jesRelativeJEREC1up_isLoaded = false;
  NLGen4jesRelativeJEREC1up_isLoaded = false;
  NVQGen0jesRelativeJEREC1up_isLoaded = false;
  NVQGen1jesRelativeJEREC1up_isLoaded = false;
  NVQGen2jesRelativeJEREC1up_isLoaded = false;
  NVQGen3jesRelativeJEREC1up_isLoaded = false;
  NVQGen4jesRelativeJEREC1up_isLoaded = false;
  NiFJjesRelativeJEREC1up_isLoaded = false;
  iFJ0jesRelativeJEREC1up_isLoaded = false;
  iFJ1jesRelativeJEREC1up_isLoaded = false;
  iFJ2jesRelativeJEREC1up_isLoaded = false;
  iFJ3jesRelativeJEREC1up_isLoaded = false;
  iFJ4jesRelativeJEREC1up_isLoaded = false;
  iVMD0jesRelativeJEREC1up_isLoaded = false;
  iVMD1jesRelativeJEREC1up_isLoaded = false;
  iVMD2jesRelativeJEREC1up_isLoaded = false;
  iVMD3jesRelativeJEREC1up_isLoaded = false;
  iVMD4jesRelativeJEREC1up_isLoaded = false;
  iWMD0jesRelativeJEREC1up_isLoaded = false;
  iWMD1jesRelativeJEREC1up_isLoaded = false;
  iWMD2jesRelativeJEREC1up_isLoaded = false;
  iWMD3jesRelativeJEREC1up_isLoaded = false;
  iWMD4jesRelativeJEREC1up_isLoaded = false;
  METjesRelativeJEREC1up_isLoaded = false;
  NujesRelativeJEREC1up_isLoaded = false;
  NJjesRelativeJEREC1up_isLoaded = false;
  NbLoosejesRelativeJEREC1up_isLoaded = false;
  NbMediumjesRelativeJEREC1up_isLoaded = false;
  NbTightjesRelativeJEREC1up_isLoaded = false;
  NoORNbLoosejesRelativeJEREC1up_isLoaded = false;
  NoORNbMediumjesRelativeJEREC1up_isLoaded = false;
  NoORNbTightjesRelativeJEREC1up_isLoaded = false;
  J0jesRelativeJEREC1up_isLoaded = false;
  J1jesRelativeJEREC1up_isLoaded = false;
  J2jesRelativeJEREC1up_isLoaded = false;
  J3jesRelativeJEREC1up_isLoaded = false;
  J4jesRelativeJEREC1up_isLoaded = false;
  J5jesRelativeJEREC1up_isLoaded = false;
  J6jesRelativeJEREC1up_isLoaded = false;
  J7jesRelativeJEREC1up_isLoaded = false;
  NQJGenjesRelativeJEREC1up_isLoaded = false;
  NBJGenjesRelativeJEREC1up_isLoaded = false;
  NLJGenjesRelativeJEREC1up_isLoaded = false;
  MVVXjesRelativeJEREC1up_isLoaded = false;
  PtVVXjesRelativeJEREC1up_isLoaded = false;
  HTjesRelativeJEREC1up_isLoaded = false;
  HTJjesRelativeJEREC1up_isLoaded = false;
  HTFJjesRelativeJEREC1up_isLoaded = false;
  SumPtFJjesRelativeJEREC1up_isLoaded = false;
  SumPtJjesRelativeJEREC1up_isLoaded = false;
  JsjesRelativeJEREC1dn_isLoaded = false;
  NFJjesRelativeJEREC1dn_isLoaded = false;
  FJ0jesRelativeJEREC1dn_isLoaded = false;
  FJ1jesRelativeJEREC1dn_isLoaded = false;
  FJ2jesRelativeJEREC1dn_isLoaded = false;
  FJ3jesRelativeJEREC1dn_isLoaded = false;
  FJ4jesRelativeJEREC1dn_isLoaded = false;
  VMD0jesRelativeJEREC1dn_isLoaded = false;
  VMD1jesRelativeJEREC1dn_isLoaded = false;
  VMD2jesRelativeJEREC1dn_isLoaded = false;
  VMD3jesRelativeJEREC1dn_isLoaded = false;
  VMD4jesRelativeJEREC1dn_isLoaded = false;
  WMD0jesRelativeJEREC1dn_isLoaded = false;
  WMD1jesRelativeJEREC1dn_isLoaded = false;
  WMD2jesRelativeJEREC1dn_isLoaded = false;
  WMD3jesRelativeJEREC1dn_isLoaded = false;
  WMD4jesRelativeJEREC1dn_isLoaded = false;
  NQGen0jesRelativeJEREC1dn_isLoaded = false;
  NQGen1jesRelativeJEREC1dn_isLoaded = false;
  NQGen2jesRelativeJEREC1dn_isLoaded = false;
  NQGen3jesRelativeJEREC1dn_isLoaded = false;
  NQGen4jesRelativeJEREC1dn_isLoaded = false;
  NBGen0jesRelativeJEREC1dn_isLoaded = false;
  NBGen1jesRelativeJEREC1dn_isLoaded = false;
  NBGen2jesRelativeJEREC1dn_isLoaded = false;
  NBGen3jesRelativeJEREC1dn_isLoaded = false;
  NBGen4jesRelativeJEREC1dn_isLoaded = false;
  NLGen0jesRelativeJEREC1dn_isLoaded = false;
  NLGen1jesRelativeJEREC1dn_isLoaded = false;
  NLGen2jesRelativeJEREC1dn_isLoaded = false;
  NLGen3jesRelativeJEREC1dn_isLoaded = false;
  NLGen4jesRelativeJEREC1dn_isLoaded = false;
  NVQGen0jesRelativeJEREC1dn_isLoaded = false;
  NVQGen1jesRelativeJEREC1dn_isLoaded = false;
  NVQGen2jesRelativeJEREC1dn_isLoaded = false;
  NVQGen3jesRelativeJEREC1dn_isLoaded = false;
  NVQGen4jesRelativeJEREC1dn_isLoaded = false;
  NiFJjesRelativeJEREC1dn_isLoaded = false;
  iFJ0jesRelativeJEREC1dn_isLoaded = false;
  iFJ1jesRelativeJEREC1dn_isLoaded = false;
  iFJ2jesRelativeJEREC1dn_isLoaded = false;
  iFJ3jesRelativeJEREC1dn_isLoaded = false;
  iFJ4jesRelativeJEREC1dn_isLoaded = false;
  iVMD0jesRelativeJEREC1dn_isLoaded = false;
  iVMD1jesRelativeJEREC1dn_isLoaded = false;
  iVMD2jesRelativeJEREC1dn_isLoaded = false;
  iVMD3jesRelativeJEREC1dn_isLoaded = false;
  iVMD4jesRelativeJEREC1dn_isLoaded = false;
  iWMD0jesRelativeJEREC1dn_isLoaded = false;
  iWMD1jesRelativeJEREC1dn_isLoaded = false;
  iWMD2jesRelativeJEREC1dn_isLoaded = false;
  iWMD3jesRelativeJEREC1dn_isLoaded = false;
  iWMD4jesRelativeJEREC1dn_isLoaded = false;
  METjesRelativeJEREC1dn_isLoaded = false;
  NujesRelativeJEREC1dn_isLoaded = false;
  NJjesRelativeJEREC1dn_isLoaded = false;
  NbLoosejesRelativeJEREC1dn_isLoaded = false;
  NbMediumjesRelativeJEREC1dn_isLoaded = false;
  NbTightjesRelativeJEREC1dn_isLoaded = false;
  NoORNbLoosejesRelativeJEREC1dn_isLoaded = false;
  NoORNbMediumjesRelativeJEREC1dn_isLoaded = false;
  NoORNbTightjesRelativeJEREC1dn_isLoaded = false;
  J0jesRelativeJEREC1dn_isLoaded = false;
  J1jesRelativeJEREC1dn_isLoaded = false;
  J2jesRelativeJEREC1dn_isLoaded = false;
  J3jesRelativeJEREC1dn_isLoaded = false;
  J4jesRelativeJEREC1dn_isLoaded = false;
  J5jesRelativeJEREC1dn_isLoaded = false;
  J6jesRelativeJEREC1dn_isLoaded = false;
  J7jesRelativeJEREC1dn_isLoaded = false;
  NQJGenjesRelativeJEREC1dn_isLoaded = false;
  NBJGenjesRelativeJEREC1dn_isLoaded = false;
  NLJGenjesRelativeJEREC1dn_isLoaded = false;
  MVVXjesRelativeJEREC1dn_isLoaded = false;
  PtVVXjesRelativeJEREC1dn_isLoaded = false;
  HTjesRelativeJEREC1dn_isLoaded = false;
  HTJjesRelativeJEREC1dn_isLoaded = false;
  HTFJjesRelativeJEREC1dn_isLoaded = false;
  SumPtFJjesRelativeJEREC1dn_isLoaded = false;
  SumPtJjesRelativeJEREC1dn_isLoaded = false;
  JsjesRelativeJEREC2up_isLoaded = false;
  NFJjesRelativeJEREC2up_isLoaded = false;
  FJ0jesRelativeJEREC2up_isLoaded = false;
  FJ1jesRelativeJEREC2up_isLoaded = false;
  FJ2jesRelativeJEREC2up_isLoaded = false;
  FJ3jesRelativeJEREC2up_isLoaded = false;
  FJ4jesRelativeJEREC2up_isLoaded = false;
  VMD0jesRelativeJEREC2up_isLoaded = false;
  VMD1jesRelativeJEREC2up_isLoaded = false;
  VMD2jesRelativeJEREC2up_isLoaded = false;
  VMD3jesRelativeJEREC2up_isLoaded = false;
  VMD4jesRelativeJEREC2up_isLoaded = false;
  WMD0jesRelativeJEREC2up_isLoaded = false;
  WMD1jesRelativeJEREC2up_isLoaded = false;
  WMD2jesRelativeJEREC2up_isLoaded = false;
  WMD3jesRelativeJEREC2up_isLoaded = false;
  WMD4jesRelativeJEREC2up_isLoaded = false;
  NQGen0jesRelativeJEREC2up_isLoaded = false;
  NQGen1jesRelativeJEREC2up_isLoaded = false;
  NQGen2jesRelativeJEREC2up_isLoaded = false;
  NQGen3jesRelativeJEREC2up_isLoaded = false;
  NQGen4jesRelativeJEREC2up_isLoaded = false;
  NBGen0jesRelativeJEREC2up_isLoaded = false;
  NBGen1jesRelativeJEREC2up_isLoaded = false;
  NBGen2jesRelativeJEREC2up_isLoaded = false;
  NBGen3jesRelativeJEREC2up_isLoaded = false;
  NBGen4jesRelativeJEREC2up_isLoaded = false;
  NLGen0jesRelativeJEREC2up_isLoaded = false;
  NLGen1jesRelativeJEREC2up_isLoaded = false;
  NLGen2jesRelativeJEREC2up_isLoaded = false;
  NLGen3jesRelativeJEREC2up_isLoaded = false;
  NLGen4jesRelativeJEREC2up_isLoaded = false;
  NVQGen0jesRelativeJEREC2up_isLoaded = false;
  NVQGen1jesRelativeJEREC2up_isLoaded = false;
  NVQGen2jesRelativeJEREC2up_isLoaded = false;
  NVQGen3jesRelativeJEREC2up_isLoaded = false;
  NVQGen4jesRelativeJEREC2up_isLoaded = false;
  NiFJjesRelativeJEREC2up_isLoaded = false;
  iFJ0jesRelativeJEREC2up_isLoaded = false;
  iFJ1jesRelativeJEREC2up_isLoaded = false;
  iFJ2jesRelativeJEREC2up_isLoaded = false;
  iFJ3jesRelativeJEREC2up_isLoaded = false;
  iFJ4jesRelativeJEREC2up_isLoaded = false;
  iVMD0jesRelativeJEREC2up_isLoaded = false;
  iVMD1jesRelativeJEREC2up_isLoaded = false;
  iVMD2jesRelativeJEREC2up_isLoaded = false;
  iVMD3jesRelativeJEREC2up_isLoaded = false;
  iVMD4jesRelativeJEREC2up_isLoaded = false;
  iWMD0jesRelativeJEREC2up_isLoaded = false;
  iWMD1jesRelativeJEREC2up_isLoaded = false;
  iWMD2jesRelativeJEREC2up_isLoaded = false;
  iWMD3jesRelativeJEREC2up_isLoaded = false;
  iWMD4jesRelativeJEREC2up_isLoaded = false;
  METjesRelativeJEREC2up_isLoaded = false;
  NujesRelativeJEREC2up_isLoaded = false;
  NJjesRelativeJEREC2up_isLoaded = false;
  NbLoosejesRelativeJEREC2up_isLoaded = false;
  NbMediumjesRelativeJEREC2up_isLoaded = false;
  NbTightjesRelativeJEREC2up_isLoaded = false;
  NoORNbLoosejesRelativeJEREC2up_isLoaded = false;
  NoORNbMediumjesRelativeJEREC2up_isLoaded = false;
  NoORNbTightjesRelativeJEREC2up_isLoaded = false;
  J0jesRelativeJEREC2up_isLoaded = false;
  J1jesRelativeJEREC2up_isLoaded = false;
  J2jesRelativeJEREC2up_isLoaded = false;
  J3jesRelativeJEREC2up_isLoaded = false;
  J4jesRelativeJEREC2up_isLoaded = false;
  J5jesRelativeJEREC2up_isLoaded = false;
  J6jesRelativeJEREC2up_isLoaded = false;
  J7jesRelativeJEREC2up_isLoaded = false;
  NQJGenjesRelativeJEREC2up_isLoaded = false;
  NBJGenjesRelativeJEREC2up_isLoaded = false;
  NLJGenjesRelativeJEREC2up_isLoaded = false;
  MVVXjesRelativeJEREC2up_isLoaded = false;
  PtVVXjesRelativeJEREC2up_isLoaded = false;
  HTjesRelativeJEREC2up_isLoaded = false;
  HTJjesRelativeJEREC2up_isLoaded = false;
  HTFJjesRelativeJEREC2up_isLoaded = false;
  SumPtFJjesRelativeJEREC2up_isLoaded = false;
  SumPtJjesRelativeJEREC2up_isLoaded = false;
  JsjesRelativeJEREC2dn_isLoaded = false;
  NFJjesRelativeJEREC2dn_isLoaded = false;
  FJ0jesRelativeJEREC2dn_isLoaded = false;
  FJ1jesRelativeJEREC2dn_isLoaded = false;
  FJ2jesRelativeJEREC2dn_isLoaded = false;
  FJ3jesRelativeJEREC2dn_isLoaded = false;
  FJ4jesRelativeJEREC2dn_isLoaded = false;
  VMD0jesRelativeJEREC2dn_isLoaded = false;
  VMD1jesRelativeJEREC2dn_isLoaded = false;
  VMD2jesRelativeJEREC2dn_isLoaded = false;
  VMD3jesRelativeJEREC2dn_isLoaded = false;
  VMD4jesRelativeJEREC2dn_isLoaded = false;
  WMD0jesRelativeJEREC2dn_isLoaded = false;
  WMD1jesRelativeJEREC2dn_isLoaded = false;
  WMD2jesRelativeJEREC2dn_isLoaded = false;
  WMD3jesRelativeJEREC2dn_isLoaded = false;
  WMD4jesRelativeJEREC2dn_isLoaded = false;
  NQGen0jesRelativeJEREC2dn_isLoaded = false;
  NQGen1jesRelativeJEREC2dn_isLoaded = false;
  NQGen2jesRelativeJEREC2dn_isLoaded = false;
  NQGen3jesRelativeJEREC2dn_isLoaded = false;
  NQGen4jesRelativeJEREC2dn_isLoaded = false;
  NBGen0jesRelativeJEREC2dn_isLoaded = false;
  NBGen1jesRelativeJEREC2dn_isLoaded = false;
  NBGen2jesRelativeJEREC2dn_isLoaded = false;
  NBGen3jesRelativeJEREC2dn_isLoaded = false;
  NBGen4jesRelativeJEREC2dn_isLoaded = false;
  NLGen0jesRelativeJEREC2dn_isLoaded = false;
  NLGen1jesRelativeJEREC2dn_isLoaded = false;
  NLGen2jesRelativeJEREC2dn_isLoaded = false;
  NLGen3jesRelativeJEREC2dn_isLoaded = false;
  NLGen4jesRelativeJEREC2dn_isLoaded = false;
  NVQGen0jesRelativeJEREC2dn_isLoaded = false;
  NVQGen1jesRelativeJEREC2dn_isLoaded = false;
  NVQGen2jesRelativeJEREC2dn_isLoaded = false;
  NVQGen3jesRelativeJEREC2dn_isLoaded = false;
  NVQGen4jesRelativeJEREC2dn_isLoaded = false;
  NiFJjesRelativeJEREC2dn_isLoaded = false;
  iFJ0jesRelativeJEREC2dn_isLoaded = false;
  iFJ1jesRelativeJEREC2dn_isLoaded = false;
  iFJ2jesRelativeJEREC2dn_isLoaded = false;
  iFJ3jesRelativeJEREC2dn_isLoaded = false;
  iFJ4jesRelativeJEREC2dn_isLoaded = false;
  iVMD0jesRelativeJEREC2dn_isLoaded = false;
  iVMD1jesRelativeJEREC2dn_isLoaded = false;
  iVMD2jesRelativeJEREC2dn_isLoaded = false;
  iVMD3jesRelativeJEREC2dn_isLoaded = false;
  iVMD4jesRelativeJEREC2dn_isLoaded = false;
  iWMD0jesRelativeJEREC2dn_isLoaded = false;
  iWMD1jesRelativeJEREC2dn_isLoaded = false;
  iWMD2jesRelativeJEREC2dn_isLoaded = false;
  iWMD3jesRelativeJEREC2dn_isLoaded = false;
  iWMD4jesRelativeJEREC2dn_isLoaded = false;
  METjesRelativeJEREC2dn_isLoaded = false;
  NujesRelativeJEREC2dn_isLoaded = false;
  NJjesRelativeJEREC2dn_isLoaded = false;
  NbLoosejesRelativeJEREC2dn_isLoaded = false;
  NbMediumjesRelativeJEREC2dn_isLoaded = false;
  NbTightjesRelativeJEREC2dn_isLoaded = false;
  NoORNbLoosejesRelativeJEREC2dn_isLoaded = false;
  NoORNbMediumjesRelativeJEREC2dn_isLoaded = false;
  NoORNbTightjesRelativeJEREC2dn_isLoaded = false;
  J0jesRelativeJEREC2dn_isLoaded = false;
  J1jesRelativeJEREC2dn_isLoaded = false;
  J2jesRelativeJEREC2dn_isLoaded = false;
  J3jesRelativeJEREC2dn_isLoaded = false;
  J4jesRelativeJEREC2dn_isLoaded = false;
  J5jesRelativeJEREC2dn_isLoaded = false;
  J6jesRelativeJEREC2dn_isLoaded = false;
  J7jesRelativeJEREC2dn_isLoaded = false;
  NQJGenjesRelativeJEREC2dn_isLoaded = false;
  NBJGenjesRelativeJEREC2dn_isLoaded = false;
  NLJGenjesRelativeJEREC2dn_isLoaded = false;
  MVVXjesRelativeJEREC2dn_isLoaded = false;
  PtVVXjesRelativeJEREC2dn_isLoaded = false;
  HTjesRelativeJEREC2dn_isLoaded = false;
  HTJjesRelativeJEREC2dn_isLoaded = false;
  HTFJjesRelativeJEREC2dn_isLoaded = false;
  SumPtFJjesRelativeJEREC2dn_isLoaded = false;
  SumPtJjesRelativeJEREC2dn_isLoaded = false;
  JsjesRelativeJERHFup_isLoaded = false;
  NFJjesRelativeJERHFup_isLoaded = false;
  FJ0jesRelativeJERHFup_isLoaded = false;
  FJ1jesRelativeJERHFup_isLoaded = false;
  FJ2jesRelativeJERHFup_isLoaded = false;
  FJ3jesRelativeJERHFup_isLoaded = false;
  FJ4jesRelativeJERHFup_isLoaded = false;
  VMD0jesRelativeJERHFup_isLoaded = false;
  VMD1jesRelativeJERHFup_isLoaded = false;
  VMD2jesRelativeJERHFup_isLoaded = false;
  VMD3jesRelativeJERHFup_isLoaded = false;
  VMD4jesRelativeJERHFup_isLoaded = false;
  WMD0jesRelativeJERHFup_isLoaded = false;
  WMD1jesRelativeJERHFup_isLoaded = false;
  WMD2jesRelativeJERHFup_isLoaded = false;
  WMD3jesRelativeJERHFup_isLoaded = false;
  WMD4jesRelativeJERHFup_isLoaded = false;
  NQGen0jesRelativeJERHFup_isLoaded = false;
  NQGen1jesRelativeJERHFup_isLoaded = false;
  NQGen2jesRelativeJERHFup_isLoaded = false;
  NQGen3jesRelativeJERHFup_isLoaded = false;
  NQGen4jesRelativeJERHFup_isLoaded = false;
  NBGen0jesRelativeJERHFup_isLoaded = false;
  NBGen1jesRelativeJERHFup_isLoaded = false;
  NBGen2jesRelativeJERHFup_isLoaded = false;
  NBGen3jesRelativeJERHFup_isLoaded = false;
  NBGen4jesRelativeJERHFup_isLoaded = false;
  NLGen0jesRelativeJERHFup_isLoaded = false;
  NLGen1jesRelativeJERHFup_isLoaded = false;
  NLGen2jesRelativeJERHFup_isLoaded = false;
  NLGen3jesRelativeJERHFup_isLoaded = false;
  NLGen4jesRelativeJERHFup_isLoaded = false;
  NVQGen0jesRelativeJERHFup_isLoaded = false;
  NVQGen1jesRelativeJERHFup_isLoaded = false;
  NVQGen2jesRelativeJERHFup_isLoaded = false;
  NVQGen3jesRelativeJERHFup_isLoaded = false;
  NVQGen4jesRelativeJERHFup_isLoaded = false;
  NiFJjesRelativeJERHFup_isLoaded = false;
  iFJ0jesRelativeJERHFup_isLoaded = false;
  iFJ1jesRelativeJERHFup_isLoaded = false;
  iFJ2jesRelativeJERHFup_isLoaded = false;
  iFJ3jesRelativeJERHFup_isLoaded = false;
  iFJ4jesRelativeJERHFup_isLoaded = false;
  iVMD0jesRelativeJERHFup_isLoaded = false;
  iVMD1jesRelativeJERHFup_isLoaded = false;
  iVMD2jesRelativeJERHFup_isLoaded = false;
  iVMD3jesRelativeJERHFup_isLoaded = false;
  iVMD4jesRelativeJERHFup_isLoaded = false;
  iWMD0jesRelativeJERHFup_isLoaded = false;
  iWMD1jesRelativeJERHFup_isLoaded = false;
  iWMD2jesRelativeJERHFup_isLoaded = false;
  iWMD3jesRelativeJERHFup_isLoaded = false;
  iWMD4jesRelativeJERHFup_isLoaded = false;
  METjesRelativeJERHFup_isLoaded = false;
  NujesRelativeJERHFup_isLoaded = false;
  NJjesRelativeJERHFup_isLoaded = false;
  NbLoosejesRelativeJERHFup_isLoaded = false;
  NbMediumjesRelativeJERHFup_isLoaded = false;
  NbTightjesRelativeJERHFup_isLoaded = false;
  NoORNbLoosejesRelativeJERHFup_isLoaded = false;
  NoORNbMediumjesRelativeJERHFup_isLoaded = false;
  NoORNbTightjesRelativeJERHFup_isLoaded = false;
  J0jesRelativeJERHFup_isLoaded = false;
  J1jesRelativeJERHFup_isLoaded = false;
  J2jesRelativeJERHFup_isLoaded = false;
  J3jesRelativeJERHFup_isLoaded = false;
  J4jesRelativeJERHFup_isLoaded = false;
  J5jesRelativeJERHFup_isLoaded = false;
  J6jesRelativeJERHFup_isLoaded = false;
  J7jesRelativeJERHFup_isLoaded = false;
  NQJGenjesRelativeJERHFup_isLoaded = false;
  NBJGenjesRelativeJERHFup_isLoaded = false;
  NLJGenjesRelativeJERHFup_isLoaded = false;
  MVVXjesRelativeJERHFup_isLoaded = false;
  PtVVXjesRelativeJERHFup_isLoaded = false;
  HTjesRelativeJERHFup_isLoaded = false;
  HTJjesRelativeJERHFup_isLoaded = false;
  HTFJjesRelativeJERHFup_isLoaded = false;
  SumPtFJjesRelativeJERHFup_isLoaded = false;
  SumPtJjesRelativeJERHFup_isLoaded = false;
  JsjesRelativeJERHFdn_isLoaded = false;
  NFJjesRelativeJERHFdn_isLoaded = false;
  FJ0jesRelativeJERHFdn_isLoaded = false;
  FJ1jesRelativeJERHFdn_isLoaded = false;
  FJ2jesRelativeJERHFdn_isLoaded = false;
  FJ3jesRelativeJERHFdn_isLoaded = false;
  FJ4jesRelativeJERHFdn_isLoaded = false;
  VMD0jesRelativeJERHFdn_isLoaded = false;
  VMD1jesRelativeJERHFdn_isLoaded = false;
  VMD2jesRelativeJERHFdn_isLoaded = false;
  VMD3jesRelativeJERHFdn_isLoaded = false;
  VMD4jesRelativeJERHFdn_isLoaded = false;
  WMD0jesRelativeJERHFdn_isLoaded = false;
  WMD1jesRelativeJERHFdn_isLoaded = false;
  WMD2jesRelativeJERHFdn_isLoaded = false;
  WMD3jesRelativeJERHFdn_isLoaded = false;
  WMD4jesRelativeJERHFdn_isLoaded = false;
  NQGen0jesRelativeJERHFdn_isLoaded = false;
  NQGen1jesRelativeJERHFdn_isLoaded = false;
  NQGen2jesRelativeJERHFdn_isLoaded = false;
  NQGen3jesRelativeJERHFdn_isLoaded = false;
  NQGen4jesRelativeJERHFdn_isLoaded = false;
  NBGen0jesRelativeJERHFdn_isLoaded = false;
  NBGen1jesRelativeJERHFdn_isLoaded = false;
  NBGen2jesRelativeJERHFdn_isLoaded = false;
  NBGen3jesRelativeJERHFdn_isLoaded = false;
  NBGen4jesRelativeJERHFdn_isLoaded = false;
  NLGen0jesRelativeJERHFdn_isLoaded = false;
  NLGen1jesRelativeJERHFdn_isLoaded = false;
  NLGen2jesRelativeJERHFdn_isLoaded = false;
  NLGen3jesRelativeJERHFdn_isLoaded = false;
  NLGen4jesRelativeJERHFdn_isLoaded = false;
  NVQGen0jesRelativeJERHFdn_isLoaded = false;
  NVQGen1jesRelativeJERHFdn_isLoaded = false;
  NVQGen2jesRelativeJERHFdn_isLoaded = false;
  NVQGen3jesRelativeJERHFdn_isLoaded = false;
  NVQGen4jesRelativeJERHFdn_isLoaded = false;
  NiFJjesRelativeJERHFdn_isLoaded = false;
  iFJ0jesRelativeJERHFdn_isLoaded = false;
  iFJ1jesRelativeJERHFdn_isLoaded = false;
  iFJ2jesRelativeJERHFdn_isLoaded = false;
  iFJ3jesRelativeJERHFdn_isLoaded = false;
  iFJ4jesRelativeJERHFdn_isLoaded = false;
  iVMD0jesRelativeJERHFdn_isLoaded = false;
  iVMD1jesRelativeJERHFdn_isLoaded = false;
  iVMD2jesRelativeJERHFdn_isLoaded = false;
  iVMD3jesRelativeJERHFdn_isLoaded = false;
  iVMD4jesRelativeJERHFdn_isLoaded = false;
  iWMD0jesRelativeJERHFdn_isLoaded = false;
  iWMD1jesRelativeJERHFdn_isLoaded = false;
  iWMD2jesRelativeJERHFdn_isLoaded = false;
  iWMD3jesRelativeJERHFdn_isLoaded = false;
  iWMD4jesRelativeJERHFdn_isLoaded = false;
  METjesRelativeJERHFdn_isLoaded = false;
  NujesRelativeJERHFdn_isLoaded = false;
  NJjesRelativeJERHFdn_isLoaded = false;
  NbLoosejesRelativeJERHFdn_isLoaded = false;
  NbMediumjesRelativeJERHFdn_isLoaded = false;
  NbTightjesRelativeJERHFdn_isLoaded = false;
  NoORNbLoosejesRelativeJERHFdn_isLoaded = false;
  NoORNbMediumjesRelativeJERHFdn_isLoaded = false;
  NoORNbTightjesRelativeJERHFdn_isLoaded = false;
  J0jesRelativeJERHFdn_isLoaded = false;
  J1jesRelativeJERHFdn_isLoaded = false;
  J2jesRelativeJERHFdn_isLoaded = false;
  J3jesRelativeJERHFdn_isLoaded = false;
  J4jesRelativeJERHFdn_isLoaded = false;
  J5jesRelativeJERHFdn_isLoaded = false;
  J6jesRelativeJERHFdn_isLoaded = false;
  J7jesRelativeJERHFdn_isLoaded = false;
  NQJGenjesRelativeJERHFdn_isLoaded = false;
  NBJGenjesRelativeJERHFdn_isLoaded = false;
  NLJGenjesRelativeJERHFdn_isLoaded = false;
  MVVXjesRelativeJERHFdn_isLoaded = false;
  PtVVXjesRelativeJERHFdn_isLoaded = false;
  HTjesRelativeJERHFdn_isLoaded = false;
  HTJjesRelativeJERHFdn_isLoaded = false;
  HTFJjesRelativeJERHFdn_isLoaded = false;
  SumPtFJjesRelativeJERHFdn_isLoaded = false;
  SumPtJjesRelativeJERHFdn_isLoaded = false;
  JsjesRelativePtBBup_isLoaded = false;
  NFJjesRelativePtBBup_isLoaded = false;
  FJ0jesRelativePtBBup_isLoaded = false;
  FJ1jesRelativePtBBup_isLoaded = false;
  FJ2jesRelativePtBBup_isLoaded = false;
  FJ3jesRelativePtBBup_isLoaded = false;
  FJ4jesRelativePtBBup_isLoaded = false;
  VMD0jesRelativePtBBup_isLoaded = false;
  VMD1jesRelativePtBBup_isLoaded = false;
  VMD2jesRelativePtBBup_isLoaded = false;
  VMD3jesRelativePtBBup_isLoaded = false;
  VMD4jesRelativePtBBup_isLoaded = false;
  WMD0jesRelativePtBBup_isLoaded = false;
  WMD1jesRelativePtBBup_isLoaded = false;
  WMD2jesRelativePtBBup_isLoaded = false;
  WMD3jesRelativePtBBup_isLoaded = false;
  WMD4jesRelativePtBBup_isLoaded = false;
  NQGen0jesRelativePtBBup_isLoaded = false;
  NQGen1jesRelativePtBBup_isLoaded = false;
  NQGen2jesRelativePtBBup_isLoaded = false;
  NQGen3jesRelativePtBBup_isLoaded = false;
  NQGen4jesRelativePtBBup_isLoaded = false;
  NBGen0jesRelativePtBBup_isLoaded = false;
  NBGen1jesRelativePtBBup_isLoaded = false;
  NBGen2jesRelativePtBBup_isLoaded = false;
  NBGen3jesRelativePtBBup_isLoaded = false;
  NBGen4jesRelativePtBBup_isLoaded = false;
  NLGen0jesRelativePtBBup_isLoaded = false;
  NLGen1jesRelativePtBBup_isLoaded = false;
  NLGen2jesRelativePtBBup_isLoaded = false;
  NLGen3jesRelativePtBBup_isLoaded = false;
  NLGen4jesRelativePtBBup_isLoaded = false;
  NVQGen0jesRelativePtBBup_isLoaded = false;
  NVQGen1jesRelativePtBBup_isLoaded = false;
  NVQGen2jesRelativePtBBup_isLoaded = false;
  NVQGen3jesRelativePtBBup_isLoaded = false;
  NVQGen4jesRelativePtBBup_isLoaded = false;
  NiFJjesRelativePtBBup_isLoaded = false;
  iFJ0jesRelativePtBBup_isLoaded = false;
  iFJ1jesRelativePtBBup_isLoaded = false;
  iFJ2jesRelativePtBBup_isLoaded = false;
  iFJ3jesRelativePtBBup_isLoaded = false;
  iFJ4jesRelativePtBBup_isLoaded = false;
  iVMD0jesRelativePtBBup_isLoaded = false;
  iVMD1jesRelativePtBBup_isLoaded = false;
  iVMD2jesRelativePtBBup_isLoaded = false;
  iVMD3jesRelativePtBBup_isLoaded = false;
  iVMD4jesRelativePtBBup_isLoaded = false;
  iWMD0jesRelativePtBBup_isLoaded = false;
  iWMD1jesRelativePtBBup_isLoaded = false;
  iWMD2jesRelativePtBBup_isLoaded = false;
  iWMD3jesRelativePtBBup_isLoaded = false;
  iWMD4jesRelativePtBBup_isLoaded = false;
  METjesRelativePtBBup_isLoaded = false;
  NujesRelativePtBBup_isLoaded = false;
  NJjesRelativePtBBup_isLoaded = false;
  NbLoosejesRelativePtBBup_isLoaded = false;
  NbMediumjesRelativePtBBup_isLoaded = false;
  NbTightjesRelativePtBBup_isLoaded = false;
  NoORNbLoosejesRelativePtBBup_isLoaded = false;
  NoORNbMediumjesRelativePtBBup_isLoaded = false;
  NoORNbTightjesRelativePtBBup_isLoaded = false;
  J0jesRelativePtBBup_isLoaded = false;
  J1jesRelativePtBBup_isLoaded = false;
  J2jesRelativePtBBup_isLoaded = false;
  J3jesRelativePtBBup_isLoaded = false;
  J4jesRelativePtBBup_isLoaded = false;
  J5jesRelativePtBBup_isLoaded = false;
  J6jesRelativePtBBup_isLoaded = false;
  J7jesRelativePtBBup_isLoaded = false;
  NQJGenjesRelativePtBBup_isLoaded = false;
  NBJGenjesRelativePtBBup_isLoaded = false;
  NLJGenjesRelativePtBBup_isLoaded = false;
  MVVXjesRelativePtBBup_isLoaded = false;
  PtVVXjesRelativePtBBup_isLoaded = false;
  HTjesRelativePtBBup_isLoaded = false;
  HTJjesRelativePtBBup_isLoaded = false;
  HTFJjesRelativePtBBup_isLoaded = false;
  SumPtFJjesRelativePtBBup_isLoaded = false;
  SumPtJjesRelativePtBBup_isLoaded = false;
  JsjesRelativePtBBdn_isLoaded = false;
  NFJjesRelativePtBBdn_isLoaded = false;
  FJ0jesRelativePtBBdn_isLoaded = false;
  FJ1jesRelativePtBBdn_isLoaded = false;
  FJ2jesRelativePtBBdn_isLoaded = false;
  FJ3jesRelativePtBBdn_isLoaded = false;
  FJ4jesRelativePtBBdn_isLoaded = false;
  VMD0jesRelativePtBBdn_isLoaded = false;
  VMD1jesRelativePtBBdn_isLoaded = false;
  VMD2jesRelativePtBBdn_isLoaded = false;
  VMD3jesRelativePtBBdn_isLoaded = false;
  VMD4jesRelativePtBBdn_isLoaded = false;
  WMD0jesRelativePtBBdn_isLoaded = false;
  WMD1jesRelativePtBBdn_isLoaded = false;
  WMD2jesRelativePtBBdn_isLoaded = false;
  WMD3jesRelativePtBBdn_isLoaded = false;
  WMD4jesRelativePtBBdn_isLoaded = false;
  NQGen0jesRelativePtBBdn_isLoaded = false;
  NQGen1jesRelativePtBBdn_isLoaded = false;
  NQGen2jesRelativePtBBdn_isLoaded = false;
  NQGen3jesRelativePtBBdn_isLoaded = false;
  NQGen4jesRelativePtBBdn_isLoaded = false;
  NBGen0jesRelativePtBBdn_isLoaded = false;
  NBGen1jesRelativePtBBdn_isLoaded = false;
  NBGen2jesRelativePtBBdn_isLoaded = false;
  NBGen3jesRelativePtBBdn_isLoaded = false;
  NBGen4jesRelativePtBBdn_isLoaded = false;
  NLGen0jesRelativePtBBdn_isLoaded = false;
  NLGen1jesRelativePtBBdn_isLoaded = false;
  NLGen2jesRelativePtBBdn_isLoaded = false;
  NLGen3jesRelativePtBBdn_isLoaded = false;
  NLGen4jesRelativePtBBdn_isLoaded = false;
  NVQGen0jesRelativePtBBdn_isLoaded = false;
  NVQGen1jesRelativePtBBdn_isLoaded = false;
  NVQGen2jesRelativePtBBdn_isLoaded = false;
  NVQGen3jesRelativePtBBdn_isLoaded = false;
  NVQGen4jesRelativePtBBdn_isLoaded = false;
  NiFJjesRelativePtBBdn_isLoaded = false;
  iFJ0jesRelativePtBBdn_isLoaded = false;
  iFJ1jesRelativePtBBdn_isLoaded = false;
  iFJ2jesRelativePtBBdn_isLoaded = false;
  iFJ3jesRelativePtBBdn_isLoaded = false;
  iFJ4jesRelativePtBBdn_isLoaded = false;
  iVMD0jesRelativePtBBdn_isLoaded = false;
  iVMD1jesRelativePtBBdn_isLoaded = false;
  iVMD2jesRelativePtBBdn_isLoaded = false;
  iVMD3jesRelativePtBBdn_isLoaded = false;
  iVMD4jesRelativePtBBdn_isLoaded = false;
  iWMD0jesRelativePtBBdn_isLoaded = false;
  iWMD1jesRelativePtBBdn_isLoaded = false;
  iWMD2jesRelativePtBBdn_isLoaded = false;
  iWMD3jesRelativePtBBdn_isLoaded = false;
  iWMD4jesRelativePtBBdn_isLoaded = false;
  METjesRelativePtBBdn_isLoaded = false;
  NujesRelativePtBBdn_isLoaded = false;
  NJjesRelativePtBBdn_isLoaded = false;
  NbLoosejesRelativePtBBdn_isLoaded = false;
  NbMediumjesRelativePtBBdn_isLoaded = false;
  NbTightjesRelativePtBBdn_isLoaded = false;
  NoORNbLoosejesRelativePtBBdn_isLoaded = false;
  NoORNbMediumjesRelativePtBBdn_isLoaded = false;
  NoORNbTightjesRelativePtBBdn_isLoaded = false;
  J0jesRelativePtBBdn_isLoaded = false;
  J1jesRelativePtBBdn_isLoaded = false;
  J2jesRelativePtBBdn_isLoaded = false;
  J3jesRelativePtBBdn_isLoaded = false;
  J4jesRelativePtBBdn_isLoaded = false;
  J5jesRelativePtBBdn_isLoaded = false;
  J6jesRelativePtBBdn_isLoaded = false;
  J7jesRelativePtBBdn_isLoaded = false;
  NQJGenjesRelativePtBBdn_isLoaded = false;
  NBJGenjesRelativePtBBdn_isLoaded = false;
  NLJGenjesRelativePtBBdn_isLoaded = false;
  MVVXjesRelativePtBBdn_isLoaded = false;
  PtVVXjesRelativePtBBdn_isLoaded = false;
  HTjesRelativePtBBdn_isLoaded = false;
  HTJjesRelativePtBBdn_isLoaded = false;
  HTFJjesRelativePtBBdn_isLoaded = false;
  SumPtFJjesRelativePtBBdn_isLoaded = false;
  SumPtJjesRelativePtBBdn_isLoaded = false;
  JsjesRelativePtEC1up_isLoaded = false;
  NFJjesRelativePtEC1up_isLoaded = false;
  FJ0jesRelativePtEC1up_isLoaded = false;
  FJ1jesRelativePtEC1up_isLoaded = false;
  FJ2jesRelativePtEC1up_isLoaded = false;
  FJ3jesRelativePtEC1up_isLoaded = false;
  FJ4jesRelativePtEC1up_isLoaded = false;
  VMD0jesRelativePtEC1up_isLoaded = false;
  VMD1jesRelativePtEC1up_isLoaded = false;
  VMD2jesRelativePtEC1up_isLoaded = false;
  VMD3jesRelativePtEC1up_isLoaded = false;
  VMD4jesRelativePtEC1up_isLoaded = false;
  WMD0jesRelativePtEC1up_isLoaded = false;
  WMD1jesRelativePtEC1up_isLoaded = false;
  WMD2jesRelativePtEC1up_isLoaded = false;
  WMD3jesRelativePtEC1up_isLoaded = false;
  WMD4jesRelativePtEC1up_isLoaded = false;
  NQGen0jesRelativePtEC1up_isLoaded = false;
  NQGen1jesRelativePtEC1up_isLoaded = false;
  NQGen2jesRelativePtEC1up_isLoaded = false;
  NQGen3jesRelativePtEC1up_isLoaded = false;
  NQGen4jesRelativePtEC1up_isLoaded = false;
  NBGen0jesRelativePtEC1up_isLoaded = false;
  NBGen1jesRelativePtEC1up_isLoaded = false;
  NBGen2jesRelativePtEC1up_isLoaded = false;
  NBGen3jesRelativePtEC1up_isLoaded = false;
  NBGen4jesRelativePtEC1up_isLoaded = false;
  NLGen0jesRelativePtEC1up_isLoaded = false;
  NLGen1jesRelativePtEC1up_isLoaded = false;
  NLGen2jesRelativePtEC1up_isLoaded = false;
  NLGen3jesRelativePtEC1up_isLoaded = false;
  NLGen4jesRelativePtEC1up_isLoaded = false;
  NVQGen0jesRelativePtEC1up_isLoaded = false;
  NVQGen1jesRelativePtEC1up_isLoaded = false;
  NVQGen2jesRelativePtEC1up_isLoaded = false;
  NVQGen3jesRelativePtEC1up_isLoaded = false;
  NVQGen4jesRelativePtEC1up_isLoaded = false;
  NiFJjesRelativePtEC1up_isLoaded = false;
  iFJ0jesRelativePtEC1up_isLoaded = false;
  iFJ1jesRelativePtEC1up_isLoaded = false;
  iFJ2jesRelativePtEC1up_isLoaded = false;
  iFJ3jesRelativePtEC1up_isLoaded = false;
  iFJ4jesRelativePtEC1up_isLoaded = false;
  iVMD0jesRelativePtEC1up_isLoaded = false;
  iVMD1jesRelativePtEC1up_isLoaded = false;
  iVMD2jesRelativePtEC1up_isLoaded = false;
  iVMD3jesRelativePtEC1up_isLoaded = false;
  iVMD4jesRelativePtEC1up_isLoaded = false;
  iWMD0jesRelativePtEC1up_isLoaded = false;
  iWMD1jesRelativePtEC1up_isLoaded = false;
  iWMD2jesRelativePtEC1up_isLoaded = false;
  iWMD3jesRelativePtEC1up_isLoaded = false;
  iWMD4jesRelativePtEC1up_isLoaded = false;
  METjesRelativePtEC1up_isLoaded = false;
  NujesRelativePtEC1up_isLoaded = false;
  NJjesRelativePtEC1up_isLoaded = false;
  NbLoosejesRelativePtEC1up_isLoaded = false;
  NbMediumjesRelativePtEC1up_isLoaded = false;
  NbTightjesRelativePtEC1up_isLoaded = false;
  NoORNbLoosejesRelativePtEC1up_isLoaded = false;
  NoORNbMediumjesRelativePtEC1up_isLoaded = false;
  NoORNbTightjesRelativePtEC1up_isLoaded = false;
  J0jesRelativePtEC1up_isLoaded = false;
  J1jesRelativePtEC1up_isLoaded = false;
  J2jesRelativePtEC1up_isLoaded = false;
  J3jesRelativePtEC1up_isLoaded = false;
  J4jesRelativePtEC1up_isLoaded = false;
  J5jesRelativePtEC1up_isLoaded = false;
  J6jesRelativePtEC1up_isLoaded = false;
  J7jesRelativePtEC1up_isLoaded = false;
  NQJGenjesRelativePtEC1up_isLoaded = false;
  NBJGenjesRelativePtEC1up_isLoaded = false;
  NLJGenjesRelativePtEC1up_isLoaded = false;
  MVVXjesRelativePtEC1up_isLoaded = false;
  PtVVXjesRelativePtEC1up_isLoaded = false;
  HTjesRelativePtEC1up_isLoaded = false;
  HTJjesRelativePtEC1up_isLoaded = false;
  HTFJjesRelativePtEC1up_isLoaded = false;
  SumPtFJjesRelativePtEC1up_isLoaded = false;
  SumPtJjesRelativePtEC1up_isLoaded = false;
  JsjesRelativePtEC1dn_isLoaded = false;
  NFJjesRelativePtEC1dn_isLoaded = false;
  FJ0jesRelativePtEC1dn_isLoaded = false;
  FJ1jesRelativePtEC1dn_isLoaded = false;
  FJ2jesRelativePtEC1dn_isLoaded = false;
  FJ3jesRelativePtEC1dn_isLoaded = false;
  FJ4jesRelativePtEC1dn_isLoaded = false;
  VMD0jesRelativePtEC1dn_isLoaded = false;
  VMD1jesRelativePtEC1dn_isLoaded = false;
  VMD2jesRelativePtEC1dn_isLoaded = false;
  VMD3jesRelativePtEC1dn_isLoaded = false;
  VMD4jesRelativePtEC1dn_isLoaded = false;
  WMD0jesRelativePtEC1dn_isLoaded = false;
  WMD1jesRelativePtEC1dn_isLoaded = false;
  WMD2jesRelativePtEC1dn_isLoaded = false;
  WMD3jesRelativePtEC1dn_isLoaded = false;
  WMD4jesRelativePtEC1dn_isLoaded = false;
  NQGen0jesRelativePtEC1dn_isLoaded = false;
  NQGen1jesRelativePtEC1dn_isLoaded = false;
  NQGen2jesRelativePtEC1dn_isLoaded = false;
  NQGen3jesRelativePtEC1dn_isLoaded = false;
  NQGen4jesRelativePtEC1dn_isLoaded = false;
  NBGen0jesRelativePtEC1dn_isLoaded = false;
  NBGen1jesRelativePtEC1dn_isLoaded = false;
  NBGen2jesRelativePtEC1dn_isLoaded = false;
  NBGen3jesRelativePtEC1dn_isLoaded = false;
  NBGen4jesRelativePtEC1dn_isLoaded = false;
  NLGen0jesRelativePtEC1dn_isLoaded = false;
  NLGen1jesRelativePtEC1dn_isLoaded = false;
  NLGen2jesRelativePtEC1dn_isLoaded = false;
  NLGen3jesRelativePtEC1dn_isLoaded = false;
  NLGen4jesRelativePtEC1dn_isLoaded = false;
  NVQGen0jesRelativePtEC1dn_isLoaded = false;
  NVQGen1jesRelativePtEC1dn_isLoaded = false;
  NVQGen2jesRelativePtEC1dn_isLoaded = false;
  NVQGen3jesRelativePtEC1dn_isLoaded = false;
  NVQGen4jesRelativePtEC1dn_isLoaded = false;
  NiFJjesRelativePtEC1dn_isLoaded = false;
  iFJ0jesRelativePtEC1dn_isLoaded = false;
  iFJ1jesRelativePtEC1dn_isLoaded = false;
  iFJ2jesRelativePtEC1dn_isLoaded = false;
  iFJ3jesRelativePtEC1dn_isLoaded = false;
  iFJ4jesRelativePtEC1dn_isLoaded = false;
  iVMD0jesRelativePtEC1dn_isLoaded = false;
  iVMD1jesRelativePtEC1dn_isLoaded = false;
  iVMD2jesRelativePtEC1dn_isLoaded = false;
  iVMD3jesRelativePtEC1dn_isLoaded = false;
  iVMD4jesRelativePtEC1dn_isLoaded = false;
  iWMD0jesRelativePtEC1dn_isLoaded = false;
  iWMD1jesRelativePtEC1dn_isLoaded = false;
  iWMD2jesRelativePtEC1dn_isLoaded = false;
  iWMD3jesRelativePtEC1dn_isLoaded = false;
  iWMD4jesRelativePtEC1dn_isLoaded = false;
  METjesRelativePtEC1dn_isLoaded = false;
  NujesRelativePtEC1dn_isLoaded = false;
  NJjesRelativePtEC1dn_isLoaded = false;
  NbLoosejesRelativePtEC1dn_isLoaded = false;
  NbMediumjesRelativePtEC1dn_isLoaded = false;
  NbTightjesRelativePtEC1dn_isLoaded = false;
  NoORNbLoosejesRelativePtEC1dn_isLoaded = false;
  NoORNbMediumjesRelativePtEC1dn_isLoaded = false;
  NoORNbTightjesRelativePtEC1dn_isLoaded = false;
  J0jesRelativePtEC1dn_isLoaded = false;
  J1jesRelativePtEC1dn_isLoaded = false;
  J2jesRelativePtEC1dn_isLoaded = false;
  J3jesRelativePtEC1dn_isLoaded = false;
  J4jesRelativePtEC1dn_isLoaded = false;
  J5jesRelativePtEC1dn_isLoaded = false;
  J6jesRelativePtEC1dn_isLoaded = false;
  J7jesRelativePtEC1dn_isLoaded = false;
  NQJGenjesRelativePtEC1dn_isLoaded = false;
  NBJGenjesRelativePtEC1dn_isLoaded = false;
  NLJGenjesRelativePtEC1dn_isLoaded = false;
  MVVXjesRelativePtEC1dn_isLoaded = false;
  PtVVXjesRelativePtEC1dn_isLoaded = false;
  HTjesRelativePtEC1dn_isLoaded = false;
  HTJjesRelativePtEC1dn_isLoaded = false;
  HTFJjesRelativePtEC1dn_isLoaded = false;
  SumPtFJjesRelativePtEC1dn_isLoaded = false;
  SumPtJjesRelativePtEC1dn_isLoaded = false;
  JsjesRelativePtEC2up_isLoaded = false;
  NFJjesRelativePtEC2up_isLoaded = false;
  FJ0jesRelativePtEC2up_isLoaded = false;
  FJ1jesRelativePtEC2up_isLoaded = false;
  FJ2jesRelativePtEC2up_isLoaded = false;
  FJ3jesRelativePtEC2up_isLoaded = false;
  FJ4jesRelativePtEC2up_isLoaded = false;
  VMD0jesRelativePtEC2up_isLoaded = false;
  VMD1jesRelativePtEC2up_isLoaded = false;
  VMD2jesRelativePtEC2up_isLoaded = false;
  VMD3jesRelativePtEC2up_isLoaded = false;
  VMD4jesRelativePtEC2up_isLoaded = false;
  WMD0jesRelativePtEC2up_isLoaded = false;
  WMD1jesRelativePtEC2up_isLoaded = false;
  WMD2jesRelativePtEC2up_isLoaded = false;
  WMD3jesRelativePtEC2up_isLoaded = false;
  WMD4jesRelativePtEC2up_isLoaded = false;
  NQGen0jesRelativePtEC2up_isLoaded = false;
  NQGen1jesRelativePtEC2up_isLoaded = false;
  NQGen2jesRelativePtEC2up_isLoaded = false;
  NQGen3jesRelativePtEC2up_isLoaded = false;
  NQGen4jesRelativePtEC2up_isLoaded = false;
  NBGen0jesRelativePtEC2up_isLoaded = false;
  NBGen1jesRelativePtEC2up_isLoaded = false;
  NBGen2jesRelativePtEC2up_isLoaded = false;
  NBGen3jesRelativePtEC2up_isLoaded = false;
  NBGen4jesRelativePtEC2up_isLoaded = false;
  NLGen0jesRelativePtEC2up_isLoaded = false;
  NLGen1jesRelativePtEC2up_isLoaded = false;
  NLGen2jesRelativePtEC2up_isLoaded = false;
  NLGen3jesRelativePtEC2up_isLoaded = false;
  NLGen4jesRelativePtEC2up_isLoaded = false;
  NVQGen0jesRelativePtEC2up_isLoaded = false;
  NVQGen1jesRelativePtEC2up_isLoaded = false;
  NVQGen2jesRelativePtEC2up_isLoaded = false;
  NVQGen3jesRelativePtEC2up_isLoaded = false;
  NVQGen4jesRelativePtEC2up_isLoaded = false;
  NiFJjesRelativePtEC2up_isLoaded = false;
  iFJ0jesRelativePtEC2up_isLoaded = false;
  iFJ1jesRelativePtEC2up_isLoaded = false;
  iFJ2jesRelativePtEC2up_isLoaded = false;
  iFJ3jesRelativePtEC2up_isLoaded = false;
  iFJ4jesRelativePtEC2up_isLoaded = false;
  iVMD0jesRelativePtEC2up_isLoaded = false;
  iVMD1jesRelativePtEC2up_isLoaded = false;
  iVMD2jesRelativePtEC2up_isLoaded = false;
  iVMD3jesRelativePtEC2up_isLoaded = false;
  iVMD4jesRelativePtEC2up_isLoaded = false;
  iWMD0jesRelativePtEC2up_isLoaded = false;
  iWMD1jesRelativePtEC2up_isLoaded = false;
  iWMD2jesRelativePtEC2up_isLoaded = false;
  iWMD3jesRelativePtEC2up_isLoaded = false;
  iWMD4jesRelativePtEC2up_isLoaded = false;
  METjesRelativePtEC2up_isLoaded = false;
  NujesRelativePtEC2up_isLoaded = false;
  NJjesRelativePtEC2up_isLoaded = false;
  NbLoosejesRelativePtEC2up_isLoaded = false;
  NbMediumjesRelativePtEC2up_isLoaded = false;
  NbTightjesRelativePtEC2up_isLoaded = false;
  NoORNbLoosejesRelativePtEC2up_isLoaded = false;
  NoORNbMediumjesRelativePtEC2up_isLoaded = false;
  NoORNbTightjesRelativePtEC2up_isLoaded = false;
  J0jesRelativePtEC2up_isLoaded = false;
  J1jesRelativePtEC2up_isLoaded = false;
  J2jesRelativePtEC2up_isLoaded = false;
  J3jesRelativePtEC2up_isLoaded = false;
  J4jesRelativePtEC2up_isLoaded = false;
  J5jesRelativePtEC2up_isLoaded = false;
  J6jesRelativePtEC2up_isLoaded = false;
  J7jesRelativePtEC2up_isLoaded = false;
  NQJGenjesRelativePtEC2up_isLoaded = false;
  NBJGenjesRelativePtEC2up_isLoaded = false;
  NLJGenjesRelativePtEC2up_isLoaded = false;
  MVVXjesRelativePtEC2up_isLoaded = false;
  PtVVXjesRelativePtEC2up_isLoaded = false;
  HTjesRelativePtEC2up_isLoaded = false;
  HTJjesRelativePtEC2up_isLoaded = false;
  HTFJjesRelativePtEC2up_isLoaded = false;
  SumPtFJjesRelativePtEC2up_isLoaded = false;
  SumPtJjesRelativePtEC2up_isLoaded = false;
  JsjesRelativePtEC2dn_isLoaded = false;
  NFJjesRelativePtEC2dn_isLoaded = false;
  FJ0jesRelativePtEC2dn_isLoaded = false;
  FJ1jesRelativePtEC2dn_isLoaded = false;
  FJ2jesRelativePtEC2dn_isLoaded = false;
  FJ3jesRelativePtEC2dn_isLoaded = false;
  FJ4jesRelativePtEC2dn_isLoaded = false;
  VMD0jesRelativePtEC2dn_isLoaded = false;
  VMD1jesRelativePtEC2dn_isLoaded = false;
  VMD2jesRelativePtEC2dn_isLoaded = false;
  VMD3jesRelativePtEC2dn_isLoaded = false;
  VMD4jesRelativePtEC2dn_isLoaded = false;
  WMD0jesRelativePtEC2dn_isLoaded = false;
  WMD1jesRelativePtEC2dn_isLoaded = false;
  WMD2jesRelativePtEC2dn_isLoaded = false;
  WMD3jesRelativePtEC2dn_isLoaded = false;
  WMD4jesRelativePtEC2dn_isLoaded = false;
  NQGen0jesRelativePtEC2dn_isLoaded = false;
  NQGen1jesRelativePtEC2dn_isLoaded = false;
  NQGen2jesRelativePtEC2dn_isLoaded = false;
  NQGen3jesRelativePtEC2dn_isLoaded = false;
  NQGen4jesRelativePtEC2dn_isLoaded = false;
  NBGen0jesRelativePtEC2dn_isLoaded = false;
  NBGen1jesRelativePtEC2dn_isLoaded = false;
  NBGen2jesRelativePtEC2dn_isLoaded = false;
  NBGen3jesRelativePtEC2dn_isLoaded = false;
  NBGen4jesRelativePtEC2dn_isLoaded = false;
  NLGen0jesRelativePtEC2dn_isLoaded = false;
  NLGen1jesRelativePtEC2dn_isLoaded = false;
  NLGen2jesRelativePtEC2dn_isLoaded = false;
  NLGen3jesRelativePtEC2dn_isLoaded = false;
  NLGen4jesRelativePtEC2dn_isLoaded = false;
  NVQGen0jesRelativePtEC2dn_isLoaded = false;
  NVQGen1jesRelativePtEC2dn_isLoaded = false;
  NVQGen2jesRelativePtEC2dn_isLoaded = false;
  NVQGen3jesRelativePtEC2dn_isLoaded = false;
  NVQGen4jesRelativePtEC2dn_isLoaded = false;
  NiFJjesRelativePtEC2dn_isLoaded = false;
  iFJ0jesRelativePtEC2dn_isLoaded = false;
  iFJ1jesRelativePtEC2dn_isLoaded = false;
  iFJ2jesRelativePtEC2dn_isLoaded = false;
  iFJ3jesRelativePtEC2dn_isLoaded = false;
  iFJ4jesRelativePtEC2dn_isLoaded = false;
  iVMD0jesRelativePtEC2dn_isLoaded = false;
  iVMD1jesRelativePtEC2dn_isLoaded = false;
  iVMD2jesRelativePtEC2dn_isLoaded = false;
  iVMD3jesRelativePtEC2dn_isLoaded = false;
  iVMD4jesRelativePtEC2dn_isLoaded = false;
  iWMD0jesRelativePtEC2dn_isLoaded = false;
  iWMD1jesRelativePtEC2dn_isLoaded = false;
  iWMD2jesRelativePtEC2dn_isLoaded = false;
  iWMD3jesRelativePtEC2dn_isLoaded = false;
  iWMD4jesRelativePtEC2dn_isLoaded = false;
  METjesRelativePtEC2dn_isLoaded = false;
  NujesRelativePtEC2dn_isLoaded = false;
  NJjesRelativePtEC2dn_isLoaded = false;
  NbLoosejesRelativePtEC2dn_isLoaded = false;
  NbMediumjesRelativePtEC2dn_isLoaded = false;
  NbTightjesRelativePtEC2dn_isLoaded = false;
  NoORNbLoosejesRelativePtEC2dn_isLoaded = false;
  NoORNbMediumjesRelativePtEC2dn_isLoaded = false;
  NoORNbTightjesRelativePtEC2dn_isLoaded = false;
  J0jesRelativePtEC2dn_isLoaded = false;
  J1jesRelativePtEC2dn_isLoaded = false;
  J2jesRelativePtEC2dn_isLoaded = false;
  J3jesRelativePtEC2dn_isLoaded = false;
  J4jesRelativePtEC2dn_isLoaded = false;
  J5jesRelativePtEC2dn_isLoaded = false;
  J6jesRelativePtEC2dn_isLoaded = false;
  J7jesRelativePtEC2dn_isLoaded = false;
  NQJGenjesRelativePtEC2dn_isLoaded = false;
  NBJGenjesRelativePtEC2dn_isLoaded = false;
  NLJGenjesRelativePtEC2dn_isLoaded = false;
  MVVXjesRelativePtEC2dn_isLoaded = false;
  PtVVXjesRelativePtEC2dn_isLoaded = false;
  HTjesRelativePtEC2dn_isLoaded = false;
  HTJjesRelativePtEC2dn_isLoaded = false;
  HTFJjesRelativePtEC2dn_isLoaded = false;
  SumPtFJjesRelativePtEC2dn_isLoaded = false;
  SumPtJjesRelativePtEC2dn_isLoaded = false;
  JsjesRelativePtHFup_isLoaded = false;
  NFJjesRelativePtHFup_isLoaded = false;
  FJ0jesRelativePtHFup_isLoaded = false;
  FJ1jesRelativePtHFup_isLoaded = false;
  FJ2jesRelativePtHFup_isLoaded = false;
  FJ3jesRelativePtHFup_isLoaded = false;
  FJ4jesRelativePtHFup_isLoaded = false;
  VMD0jesRelativePtHFup_isLoaded = false;
  VMD1jesRelativePtHFup_isLoaded = false;
  VMD2jesRelativePtHFup_isLoaded = false;
  VMD3jesRelativePtHFup_isLoaded = false;
  VMD4jesRelativePtHFup_isLoaded = false;
  WMD0jesRelativePtHFup_isLoaded = false;
  WMD1jesRelativePtHFup_isLoaded = false;
  WMD2jesRelativePtHFup_isLoaded = false;
  WMD3jesRelativePtHFup_isLoaded = false;
  WMD4jesRelativePtHFup_isLoaded = false;
  NQGen0jesRelativePtHFup_isLoaded = false;
  NQGen1jesRelativePtHFup_isLoaded = false;
  NQGen2jesRelativePtHFup_isLoaded = false;
  NQGen3jesRelativePtHFup_isLoaded = false;
  NQGen4jesRelativePtHFup_isLoaded = false;
  NBGen0jesRelativePtHFup_isLoaded = false;
  NBGen1jesRelativePtHFup_isLoaded = false;
  NBGen2jesRelativePtHFup_isLoaded = false;
  NBGen3jesRelativePtHFup_isLoaded = false;
  NBGen4jesRelativePtHFup_isLoaded = false;
  NLGen0jesRelativePtHFup_isLoaded = false;
  NLGen1jesRelativePtHFup_isLoaded = false;
  NLGen2jesRelativePtHFup_isLoaded = false;
  NLGen3jesRelativePtHFup_isLoaded = false;
  NLGen4jesRelativePtHFup_isLoaded = false;
  NVQGen0jesRelativePtHFup_isLoaded = false;
  NVQGen1jesRelativePtHFup_isLoaded = false;
  NVQGen2jesRelativePtHFup_isLoaded = false;
  NVQGen3jesRelativePtHFup_isLoaded = false;
  NVQGen4jesRelativePtHFup_isLoaded = false;
  NiFJjesRelativePtHFup_isLoaded = false;
  iFJ0jesRelativePtHFup_isLoaded = false;
  iFJ1jesRelativePtHFup_isLoaded = false;
  iFJ2jesRelativePtHFup_isLoaded = false;
  iFJ3jesRelativePtHFup_isLoaded = false;
  iFJ4jesRelativePtHFup_isLoaded = false;
  iVMD0jesRelativePtHFup_isLoaded = false;
  iVMD1jesRelativePtHFup_isLoaded = false;
  iVMD2jesRelativePtHFup_isLoaded = false;
  iVMD3jesRelativePtHFup_isLoaded = false;
  iVMD4jesRelativePtHFup_isLoaded = false;
  iWMD0jesRelativePtHFup_isLoaded = false;
  iWMD1jesRelativePtHFup_isLoaded = false;
  iWMD2jesRelativePtHFup_isLoaded = false;
  iWMD3jesRelativePtHFup_isLoaded = false;
  iWMD4jesRelativePtHFup_isLoaded = false;
  METjesRelativePtHFup_isLoaded = false;
  NujesRelativePtHFup_isLoaded = false;
  NJjesRelativePtHFup_isLoaded = false;
  NbLoosejesRelativePtHFup_isLoaded = false;
  NbMediumjesRelativePtHFup_isLoaded = false;
  NbTightjesRelativePtHFup_isLoaded = false;
  NoORNbLoosejesRelativePtHFup_isLoaded = false;
  NoORNbMediumjesRelativePtHFup_isLoaded = false;
  NoORNbTightjesRelativePtHFup_isLoaded = false;
  J0jesRelativePtHFup_isLoaded = false;
  J1jesRelativePtHFup_isLoaded = false;
  J2jesRelativePtHFup_isLoaded = false;
  J3jesRelativePtHFup_isLoaded = false;
  J4jesRelativePtHFup_isLoaded = false;
  J5jesRelativePtHFup_isLoaded = false;
  J6jesRelativePtHFup_isLoaded = false;
  J7jesRelativePtHFup_isLoaded = false;
  NQJGenjesRelativePtHFup_isLoaded = false;
  NBJGenjesRelativePtHFup_isLoaded = false;
  NLJGenjesRelativePtHFup_isLoaded = false;
  MVVXjesRelativePtHFup_isLoaded = false;
  PtVVXjesRelativePtHFup_isLoaded = false;
  HTjesRelativePtHFup_isLoaded = false;
  HTJjesRelativePtHFup_isLoaded = false;
  HTFJjesRelativePtHFup_isLoaded = false;
  SumPtFJjesRelativePtHFup_isLoaded = false;
  SumPtJjesRelativePtHFup_isLoaded = false;
  JsjesRelativePtHFdn_isLoaded = false;
  NFJjesRelativePtHFdn_isLoaded = false;
  FJ0jesRelativePtHFdn_isLoaded = false;
  FJ1jesRelativePtHFdn_isLoaded = false;
  FJ2jesRelativePtHFdn_isLoaded = false;
  FJ3jesRelativePtHFdn_isLoaded = false;
  FJ4jesRelativePtHFdn_isLoaded = false;
  VMD0jesRelativePtHFdn_isLoaded = false;
  VMD1jesRelativePtHFdn_isLoaded = false;
  VMD2jesRelativePtHFdn_isLoaded = false;
  VMD3jesRelativePtHFdn_isLoaded = false;
  VMD4jesRelativePtHFdn_isLoaded = false;
  WMD0jesRelativePtHFdn_isLoaded = false;
  WMD1jesRelativePtHFdn_isLoaded = false;
  WMD2jesRelativePtHFdn_isLoaded = false;
  WMD3jesRelativePtHFdn_isLoaded = false;
  WMD4jesRelativePtHFdn_isLoaded = false;
  NQGen0jesRelativePtHFdn_isLoaded = false;
  NQGen1jesRelativePtHFdn_isLoaded = false;
  NQGen2jesRelativePtHFdn_isLoaded = false;
  NQGen3jesRelativePtHFdn_isLoaded = false;
  NQGen4jesRelativePtHFdn_isLoaded = false;
  NBGen0jesRelativePtHFdn_isLoaded = false;
  NBGen1jesRelativePtHFdn_isLoaded = false;
  NBGen2jesRelativePtHFdn_isLoaded = false;
  NBGen3jesRelativePtHFdn_isLoaded = false;
  NBGen4jesRelativePtHFdn_isLoaded = false;
  NLGen0jesRelativePtHFdn_isLoaded = false;
  NLGen1jesRelativePtHFdn_isLoaded = false;
  NLGen2jesRelativePtHFdn_isLoaded = false;
  NLGen3jesRelativePtHFdn_isLoaded = false;
  NLGen4jesRelativePtHFdn_isLoaded = false;
  NVQGen0jesRelativePtHFdn_isLoaded = false;
  NVQGen1jesRelativePtHFdn_isLoaded = false;
  NVQGen2jesRelativePtHFdn_isLoaded = false;
  NVQGen3jesRelativePtHFdn_isLoaded = false;
  NVQGen4jesRelativePtHFdn_isLoaded = false;
  NiFJjesRelativePtHFdn_isLoaded = false;
  iFJ0jesRelativePtHFdn_isLoaded = false;
  iFJ1jesRelativePtHFdn_isLoaded = false;
  iFJ2jesRelativePtHFdn_isLoaded = false;
  iFJ3jesRelativePtHFdn_isLoaded = false;
  iFJ4jesRelativePtHFdn_isLoaded = false;
  iVMD0jesRelativePtHFdn_isLoaded = false;
  iVMD1jesRelativePtHFdn_isLoaded = false;
  iVMD2jesRelativePtHFdn_isLoaded = false;
  iVMD3jesRelativePtHFdn_isLoaded = false;
  iVMD4jesRelativePtHFdn_isLoaded = false;
  iWMD0jesRelativePtHFdn_isLoaded = false;
  iWMD1jesRelativePtHFdn_isLoaded = false;
  iWMD2jesRelativePtHFdn_isLoaded = false;
  iWMD3jesRelativePtHFdn_isLoaded = false;
  iWMD4jesRelativePtHFdn_isLoaded = false;
  METjesRelativePtHFdn_isLoaded = false;
  NujesRelativePtHFdn_isLoaded = false;
  NJjesRelativePtHFdn_isLoaded = false;
  NbLoosejesRelativePtHFdn_isLoaded = false;
  NbMediumjesRelativePtHFdn_isLoaded = false;
  NbTightjesRelativePtHFdn_isLoaded = false;
  NoORNbLoosejesRelativePtHFdn_isLoaded = false;
  NoORNbMediumjesRelativePtHFdn_isLoaded = false;
  NoORNbTightjesRelativePtHFdn_isLoaded = false;
  J0jesRelativePtHFdn_isLoaded = false;
  J1jesRelativePtHFdn_isLoaded = false;
  J2jesRelativePtHFdn_isLoaded = false;
  J3jesRelativePtHFdn_isLoaded = false;
  J4jesRelativePtHFdn_isLoaded = false;
  J5jesRelativePtHFdn_isLoaded = false;
  J6jesRelativePtHFdn_isLoaded = false;
  J7jesRelativePtHFdn_isLoaded = false;
  NQJGenjesRelativePtHFdn_isLoaded = false;
  NBJGenjesRelativePtHFdn_isLoaded = false;
  NLJGenjesRelativePtHFdn_isLoaded = false;
  MVVXjesRelativePtHFdn_isLoaded = false;
  PtVVXjesRelativePtHFdn_isLoaded = false;
  HTjesRelativePtHFdn_isLoaded = false;
  HTJjesRelativePtHFdn_isLoaded = false;
  HTFJjesRelativePtHFdn_isLoaded = false;
  SumPtFJjesRelativePtHFdn_isLoaded = false;
  SumPtJjesRelativePtHFdn_isLoaded = false;
  JsjesRelativeBalup_isLoaded = false;
  NFJjesRelativeBalup_isLoaded = false;
  FJ0jesRelativeBalup_isLoaded = false;
  FJ1jesRelativeBalup_isLoaded = false;
  FJ2jesRelativeBalup_isLoaded = false;
  FJ3jesRelativeBalup_isLoaded = false;
  FJ4jesRelativeBalup_isLoaded = false;
  VMD0jesRelativeBalup_isLoaded = false;
  VMD1jesRelativeBalup_isLoaded = false;
  VMD2jesRelativeBalup_isLoaded = false;
  VMD3jesRelativeBalup_isLoaded = false;
  VMD4jesRelativeBalup_isLoaded = false;
  WMD0jesRelativeBalup_isLoaded = false;
  WMD1jesRelativeBalup_isLoaded = false;
  WMD2jesRelativeBalup_isLoaded = false;
  WMD3jesRelativeBalup_isLoaded = false;
  WMD4jesRelativeBalup_isLoaded = false;
  NQGen0jesRelativeBalup_isLoaded = false;
  NQGen1jesRelativeBalup_isLoaded = false;
  NQGen2jesRelativeBalup_isLoaded = false;
  NQGen3jesRelativeBalup_isLoaded = false;
  NQGen4jesRelativeBalup_isLoaded = false;
  NBGen0jesRelativeBalup_isLoaded = false;
  NBGen1jesRelativeBalup_isLoaded = false;
  NBGen2jesRelativeBalup_isLoaded = false;
  NBGen3jesRelativeBalup_isLoaded = false;
  NBGen4jesRelativeBalup_isLoaded = false;
  NLGen0jesRelativeBalup_isLoaded = false;
  NLGen1jesRelativeBalup_isLoaded = false;
  NLGen2jesRelativeBalup_isLoaded = false;
  NLGen3jesRelativeBalup_isLoaded = false;
  NLGen4jesRelativeBalup_isLoaded = false;
  NVQGen0jesRelativeBalup_isLoaded = false;
  NVQGen1jesRelativeBalup_isLoaded = false;
  NVQGen2jesRelativeBalup_isLoaded = false;
  NVQGen3jesRelativeBalup_isLoaded = false;
  NVQGen4jesRelativeBalup_isLoaded = false;
  NiFJjesRelativeBalup_isLoaded = false;
  iFJ0jesRelativeBalup_isLoaded = false;
  iFJ1jesRelativeBalup_isLoaded = false;
  iFJ2jesRelativeBalup_isLoaded = false;
  iFJ3jesRelativeBalup_isLoaded = false;
  iFJ4jesRelativeBalup_isLoaded = false;
  iVMD0jesRelativeBalup_isLoaded = false;
  iVMD1jesRelativeBalup_isLoaded = false;
  iVMD2jesRelativeBalup_isLoaded = false;
  iVMD3jesRelativeBalup_isLoaded = false;
  iVMD4jesRelativeBalup_isLoaded = false;
  iWMD0jesRelativeBalup_isLoaded = false;
  iWMD1jesRelativeBalup_isLoaded = false;
  iWMD2jesRelativeBalup_isLoaded = false;
  iWMD3jesRelativeBalup_isLoaded = false;
  iWMD4jesRelativeBalup_isLoaded = false;
  METjesRelativeBalup_isLoaded = false;
  NujesRelativeBalup_isLoaded = false;
  NJjesRelativeBalup_isLoaded = false;
  NbLoosejesRelativeBalup_isLoaded = false;
  NbMediumjesRelativeBalup_isLoaded = false;
  NbTightjesRelativeBalup_isLoaded = false;
  NoORNbLoosejesRelativeBalup_isLoaded = false;
  NoORNbMediumjesRelativeBalup_isLoaded = false;
  NoORNbTightjesRelativeBalup_isLoaded = false;
  J0jesRelativeBalup_isLoaded = false;
  J1jesRelativeBalup_isLoaded = false;
  J2jesRelativeBalup_isLoaded = false;
  J3jesRelativeBalup_isLoaded = false;
  J4jesRelativeBalup_isLoaded = false;
  J5jesRelativeBalup_isLoaded = false;
  J6jesRelativeBalup_isLoaded = false;
  J7jesRelativeBalup_isLoaded = false;
  NQJGenjesRelativeBalup_isLoaded = false;
  NBJGenjesRelativeBalup_isLoaded = false;
  NLJGenjesRelativeBalup_isLoaded = false;
  MVVXjesRelativeBalup_isLoaded = false;
  PtVVXjesRelativeBalup_isLoaded = false;
  HTjesRelativeBalup_isLoaded = false;
  HTJjesRelativeBalup_isLoaded = false;
  HTFJjesRelativeBalup_isLoaded = false;
  SumPtFJjesRelativeBalup_isLoaded = false;
  SumPtJjesRelativeBalup_isLoaded = false;
  JsjesRelativeBaldn_isLoaded = false;
  NFJjesRelativeBaldn_isLoaded = false;
  FJ0jesRelativeBaldn_isLoaded = false;
  FJ1jesRelativeBaldn_isLoaded = false;
  FJ2jesRelativeBaldn_isLoaded = false;
  FJ3jesRelativeBaldn_isLoaded = false;
  FJ4jesRelativeBaldn_isLoaded = false;
  VMD0jesRelativeBaldn_isLoaded = false;
  VMD1jesRelativeBaldn_isLoaded = false;
  VMD2jesRelativeBaldn_isLoaded = false;
  VMD3jesRelativeBaldn_isLoaded = false;
  VMD4jesRelativeBaldn_isLoaded = false;
  WMD0jesRelativeBaldn_isLoaded = false;
  WMD1jesRelativeBaldn_isLoaded = false;
  WMD2jesRelativeBaldn_isLoaded = false;
  WMD3jesRelativeBaldn_isLoaded = false;
  WMD4jesRelativeBaldn_isLoaded = false;
  NQGen0jesRelativeBaldn_isLoaded = false;
  NQGen1jesRelativeBaldn_isLoaded = false;
  NQGen2jesRelativeBaldn_isLoaded = false;
  NQGen3jesRelativeBaldn_isLoaded = false;
  NQGen4jesRelativeBaldn_isLoaded = false;
  NBGen0jesRelativeBaldn_isLoaded = false;
  NBGen1jesRelativeBaldn_isLoaded = false;
  NBGen2jesRelativeBaldn_isLoaded = false;
  NBGen3jesRelativeBaldn_isLoaded = false;
  NBGen4jesRelativeBaldn_isLoaded = false;
  NLGen0jesRelativeBaldn_isLoaded = false;
  NLGen1jesRelativeBaldn_isLoaded = false;
  NLGen2jesRelativeBaldn_isLoaded = false;
  NLGen3jesRelativeBaldn_isLoaded = false;
  NLGen4jesRelativeBaldn_isLoaded = false;
  NVQGen0jesRelativeBaldn_isLoaded = false;
  NVQGen1jesRelativeBaldn_isLoaded = false;
  NVQGen2jesRelativeBaldn_isLoaded = false;
  NVQGen3jesRelativeBaldn_isLoaded = false;
  NVQGen4jesRelativeBaldn_isLoaded = false;
  NiFJjesRelativeBaldn_isLoaded = false;
  iFJ0jesRelativeBaldn_isLoaded = false;
  iFJ1jesRelativeBaldn_isLoaded = false;
  iFJ2jesRelativeBaldn_isLoaded = false;
  iFJ3jesRelativeBaldn_isLoaded = false;
  iFJ4jesRelativeBaldn_isLoaded = false;
  iVMD0jesRelativeBaldn_isLoaded = false;
  iVMD1jesRelativeBaldn_isLoaded = false;
  iVMD2jesRelativeBaldn_isLoaded = false;
  iVMD3jesRelativeBaldn_isLoaded = false;
  iVMD4jesRelativeBaldn_isLoaded = false;
  iWMD0jesRelativeBaldn_isLoaded = false;
  iWMD1jesRelativeBaldn_isLoaded = false;
  iWMD2jesRelativeBaldn_isLoaded = false;
  iWMD3jesRelativeBaldn_isLoaded = false;
  iWMD4jesRelativeBaldn_isLoaded = false;
  METjesRelativeBaldn_isLoaded = false;
  NujesRelativeBaldn_isLoaded = false;
  NJjesRelativeBaldn_isLoaded = false;
  NbLoosejesRelativeBaldn_isLoaded = false;
  NbMediumjesRelativeBaldn_isLoaded = false;
  NbTightjesRelativeBaldn_isLoaded = false;
  NoORNbLoosejesRelativeBaldn_isLoaded = false;
  NoORNbMediumjesRelativeBaldn_isLoaded = false;
  NoORNbTightjesRelativeBaldn_isLoaded = false;
  J0jesRelativeBaldn_isLoaded = false;
  J1jesRelativeBaldn_isLoaded = false;
  J2jesRelativeBaldn_isLoaded = false;
  J3jesRelativeBaldn_isLoaded = false;
  J4jesRelativeBaldn_isLoaded = false;
  J5jesRelativeBaldn_isLoaded = false;
  J6jesRelativeBaldn_isLoaded = false;
  J7jesRelativeBaldn_isLoaded = false;
  NQJGenjesRelativeBaldn_isLoaded = false;
  NBJGenjesRelativeBaldn_isLoaded = false;
  NLJGenjesRelativeBaldn_isLoaded = false;
  MVVXjesRelativeBaldn_isLoaded = false;
  PtVVXjesRelativeBaldn_isLoaded = false;
  HTjesRelativeBaldn_isLoaded = false;
  HTJjesRelativeBaldn_isLoaded = false;
  HTFJjesRelativeBaldn_isLoaded = false;
  SumPtFJjesRelativeBaldn_isLoaded = false;
  SumPtJjesRelativeBaldn_isLoaded = false;
  JsjesRelativeSampleup_isLoaded = false;
  NFJjesRelativeSampleup_isLoaded = false;
  FJ0jesRelativeSampleup_isLoaded = false;
  FJ1jesRelativeSampleup_isLoaded = false;
  FJ2jesRelativeSampleup_isLoaded = false;
  FJ3jesRelativeSampleup_isLoaded = false;
  FJ4jesRelativeSampleup_isLoaded = false;
  VMD0jesRelativeSampleup_isLoaded = false;
  VMD1jesRelativeSampleup_isLoaded = false;
  VMD2jesRelativeSampleup_isLoaded = false;
  VMD3jesRelativeSampleup_isLoaded = false;
  VMD4jesRelativeSampleup_isLoaded = false;
  WMD0jesRelativeSampleup_isLoaded = false;
  WMD1jesRelativeSampleup_isLoaded = false;
  WMD2jesRelativeSampleup_isLoaded = false;
  WMD3jesRelativeSampleup_isLoaded = false;
  WMD4jesRelativeSampleup_isLoaded = false;
  NQGen0jesRelativeSampleup_isLoaded = false;
  NQGen1jesRelativeSampleup_isLoaded = false;
  NQGen2jesRelativeSampleup_isLoaded = false;
  NQGen3jesRelativeSampleup_isLoaded = false;
  NQGen4jesRelativeSampleup_isLoaded = false;
  NBGen0jesRelativeSampleup_isLoaded = false;
  NBGen1jesRelativeSampleup_isLoaded = false;
  NBGen2jesRelativeSampleup_isLoaded = false;
  NBGen3jesRelativeSampleup_isLoaded = false;
  NBGen4jesRelativeSampleup_isLoaded = false;
  NLGen0jesRelativeSampleup_isLoaded = false;
  NLGen1jesRelativeSampleup_isLoaded = false;
  NLGen2jesRelativeSampleup_isLoaded = false;
  NLGen3jesRelativeSampleup_isLoaded = false;
  NLGen4jesRelativeSampleup_isLoaded = false;
  NVQGen0jesRelativeSampleup_isLoaded = false;
  NVQGen1jesRelativeSampleup_isLoaded = false;
  NVQGen2jesRelativeSampleup_isLoaded = false;
  NVQGen3jesRelativeSampleup_isLoaded = false;
  NVQGen4jesRelativeSampleup_isLoaded = false;
  NiFJjesRelativeSampleup_isLoaded = false;
  iFJ0jesRelativeSampleup_isLoaded = false;
  iFJ1jesRelativeSampleup_isLoaded = false;
  iFJ2jesRelativeSampleup_isLoaded = false;
  iFJ3jesRelativeSampleup_isLoaded = false;
  iFJ4jesRelativeSampleup_isLoaded = false;
  iVMD0jesRelativeSampleup_isLoaded = false;
  iVMD1jesRelativeSampleup_isLoaded = false;
  iVMD2jesRelativeSampleup_isLoaded = false;
  iVMD3jesRelativeSampleup_isLoaded = false;
  iVMD4jesRelativeSampleup_isLoaded = false;
  iWMD0jesRelativeSampleup_isLoaded = false;
  iWMD1jesRelativeSampleup_isLoaded = false;
  iWMD2jesRelativeSampleup_isLoaded = false;
  iWMD3jesRelativeSampleup_isLoaded = false;
  iWMD4jesRelativeSampleup_isLoaded = false;
  METjesRelativeSampleup_isLoaded = false;
  NujesRelativeSampleup_isLoaded = false;
  NJjesRelativeSampleup_isLoaded = false;
  NbLoosejesRelativeSampleup_isLoaded = false;
  NbMediumjesRelativeSampleup_isLoaded = false;
  NbTightjesRelativeSampleup_isLoaded = false;
  NoORNbLoosejesRelativeSampleup_isLoaded = false;
  NoORNbMediumjesRelativeSampleup_isLoaded = false;
  NoORNbTightjesRelativeSampleup_isLoaded = false;
  J0jesRelativeSampleup_isLoaded = false;
  J1jesRelativeSampleup_isLoaded = false;
  J2jesRelativeSampleup_isLoaded = false;
  J3jesRelativeSampleup_isLoaded = false;
  J4jesRelativeSampleup_isLoaded = false;
  J5jesRelativeSampleup_isLoaded = false;
  J6jesRelativeSampleup_isLoaded = false;
  J7jesRelativeSampleup_isLoaded = false;
  NQJGenjesRelativeSampleup_isLoaded = false;
  NBJGenjesRelativeSampleup_isLoaded = false;
  NLJGenjesRelativeSampleup_isLoaded = false;
  MVVXjesRelativeSampleup_isLoaded = false;
  PtVVXjesRelativeSampleup_isLoaded = false;
  HTjesRelativeSampleup_isLoaded = false;
  HTJjesRelativeSampleup_isLoaded = false;
  HTFJjesRelativeSampleup_isLoaded = false;
  SumPtFJjesRelativeSampleup_isLoaded = false;
  SumPtJjesRelativeSampleup_isLoaded = false;
  JsjesRelativeSampledn_isLoaded = false;
  NFJjesRelativeSampledn_isLoaded = false;
  FJ0jesRelativeSampledn_isLoaded = false;
  FJ1jesRelativeSampledn_isLoaded = false;
  FJ2jesRelativeSampledn_isLoaded = false;
  FJ3jesRelativeSampledn_isLoaded = false;
  FJ4jesRelativeSampledn_isLoaded = false;
  VMD0jesRelativeSampledn_isLoaded = false;
  VMD1jesRelativeSampledn_isLoaded = false;
  VMD2jesRelativeSampledn_isLoaded = false;
  VMD3jesRelativeSampledn_isLoaded = false;
  VMD4jesRelativeSampledn_isLoaded = false;
  WMD0jesRelativeSampledn_isLoaded = false;
  WMD1jesRelativeSampledn_isLoaded = false;
  WMD2jesRelativeSampledn_isLoaded = false;
  WMD3jesRelativeSampledn_isLoaded = false;
  WMD4jesRelativeSampledn_isLoaded = false;
  NQGen0jesRelativeSampledn_isLoaded = false;
  NQGen1jesRelativeSampledn_isLoaded = false;
  NQGen2jesRelativeSampledn_isLoaded = false;
  NQGen3jesRelativeSampledn_isLoaded = false;
  NQGen4jesRelativeSampledn_isLoaded = false;
  NBGen0jesRelativeSampledn_isLoaded = false;
  NBGen1jesRelativeSampledn_isLoaded = false;
  NBGen2jesRelativeSampledn_isLoaded = false;
  NBGen3jesRelativeSampledn_isLoaded = false;
  NBGen4jesRelativeSampledn_isLoaded = false;
  NLGen0jesRelativeSampledn_isLoaded = false;
  NLGen1jesRelativeSampledn_isLoaded = false;
  NLGen2jesRelativeSampledn_isLoaded = false;
  NLGen3jesRelativeSampledn_isLoaded = false;
  NLGen4jesRelativeSampledn_isLoaded = false;
  NVQGen0jesRelativeSampledn_isLoaded = false;
  NVQGen1jesRelativeSampledn_isLoaded = false;
  NVQGen2jesRelativeSampledn_isLoaded = false;
  NVQGen3jesRelativeSampledn_isLoaded = false;
  NVQGen4jesRelativeSampledn_isLoaded = false;
  NiFJjesRelativeSampledn_isLoaded = false;
  iFJ0jesRelativeSampledn_isLoaded = false;
  iFJ1jesRelativeSampledn_isLoaded = false;
  iFJ2jesRelativeSampledn_isLoaded = false;
  iFJ3jesRelativeSampledn_isLoaded = false;
  iFJ4jesRelativeSampledn_isLoaded = false;
  iVMD0jesRelativeSampledn_isLoaded = false;
  iVMD1jesRelativeSampledn_isLoaded = false;
  iVMD2jesRelativeSampledn_isLoaded = false;
  iVMD3jesRelativeSampledn_isLoaded = false;
  iVMD4jesRelativeSampledn_isLoaded = false;
  iWMD0jesRelativeSampledn_isLoaded = false;
  iWMD1jesRelativeSampledn_isLoaded = false;
  iWMD2jesRelativeSampledn_isLoaded = false;
  iWMD3jesRelativeSampledn_isLoaded = false;
  iWMD4jesRelativeSampledn_isLoaded = false;
  METjesRelativeSampledn_isLoaded = false;
  NujesRelativeSampledn_isLoaded = false;
  NJjesRelativeSampledn_isLoaded = false;
  NbLoosejesRelativeSampledn_isLoaded = false;
  NbMediumjesRelativeSampledn_isLoaded = false;
  NbTightjesRelativeSampledn_isLoaded = false;
  NoORNbLoosejesRelativeSampledn_isLoaded = false;
  NoORNbMediumjesRelativeSampledn_isLoaded = false;
  NoORNbTightjesRelativeSampledn_isLoaded = false;
  J0jesRelativeSampledn_isLoaded = false;
  J1jesRelativeSampledn_isLoaded = false;
  J2jesRelativeSampledn_isLoaded = false;
  J3jesRelativeSampledn_isLoaded = false;
  J4jesRelativeSampledn_isLoaded = false;
  J5jesRelativeSampledn_isLoaded = false;
  J6jesRelativeSampledn_isLoaded = false;
  J7jesRelativeSampledn_isLoaded = false;
  NQJGenjesRelativeSampledn_isLoaded = false;
  NBJGenjesRelativeSampledn_isLoaded = false;
  NLJGenjesRelativeSampledn_isLoaded = false;
  MVVXjesRelativeSampledn_isLoaded = false;
  PtVVXjesRelativeSampledn_isLoaded = false;
  HTjesRelativeSampledn_isLoaded = false;
  HTJjesRelativeSampledn_isLoaded = false;
  HTFJjesRelativeSampledn_isLoaded = false;
  SumPtFJjesRelativeSampledn_isLoaded = false;
  SumPtJjesRelativeSampledn_isLoaded = false;
  JsjesRelativeFSRup_isLoaded = false;
  NFJjesRelativeFSRup_isLoaded = false;
  FJ0jesRelativeFSRup_isLoaded = false;
  FJ1jesRelativeFSRup_isLoaded = false;
  FJ2jesRelativeFSRup_isLoaded = false;
  FJ3jesRelativeFSRup_isLoaded = false;
  FJ4jesRelativeFSRup_isLoaded = false;
  VMD0jesRelativeFSRup_isLoaded = false;
  VMD1jesRelativeFSRup_isLoaded = false;
  VMD2jesRelativeFSRup_isLoaded = false;
  VMD3jesRelativeFSRup_isLoaded = false;
  VMD4jesRelativeFSRup_isLoaded = false;
  WMD0jesRelativeFSRup_isLoaded = false;
  WMD1jesRelativeFSRup_isLoaded = false;
  WMD2jesRelativeFSRup_isLoaded = false;
  WMD3jesRelativeFSRup_isLoaded = false;
  WMD4jesRelativeFSRup_isLoaded = false;
  NQGen0jesRelativeFSRup_isLoaded = false;
  NQGen1jesRelativeFSRup_isLoaded = false;
  NQGen2jesRelativeFSRup_isLoaded = false;
  NQGen3jesRelativeFSRup_isLoaded = false;
  NQGen4jesRelativeFSRup_isLoaded = false;
  NBGen0jesRelativeFSRup_isLoaded = false;
  NBGen1jesRelativeFSRup_isLoaded = false;
  NBGen2jesRelativeFSRup_isLoaded = false;
  NBGen3jesRelativeFSRup_isLoaded = false;
  NBGen4jesRelativeFSRup_isLoaded = false;
  NLGen0jesRelativeFSRup_isLoaded = false;
  NLGen1jesRelativeFSRup_isLoaded = false;
  NLGen2jesRelativeFSRup_isLoaded = false;
  NLGen3jesRelativeFSRup_isLoaded = false;
  NLGen4jesRelativeFSRup_isLoaded = false;
  NVQGen0jesRelativeFSRup_isLoaded = false;
  NVQGen1jesRelativeFSRup_isLoaded = false;
  NVQGen2jesRelativeFSRup_isLoaded = false;
  NVQGen3jesRelativeFSRup_isLoaded = false;
  NVQGen4jesRelativeFSRup_isLoaded = false;
  NiFJjesRelativeFSRup_isLoaded = false;
  iFJ0jesRelativeFSRup_isLoaded = false;
  iFJ1jesRelativeFSRup_isLoaded = false;
  iFJ2jesRelativeFSRup_isLoaded = false;
  iFJ3jesRelativeFSRup_isLoaded = false;
  iFJ4jesRelativeFSRup_isLoaded = false;
  iVMD0jesRelativeFSRup_isLoaded = false;
  iVMD1jesRelativeFSRup_isLoaded = false;
  iVMD2jesRelativeFSRup_isLoaded = false;
  iVMD3jesRelativeFSRup_isLoaded = false;
  iVMD4jesRelativeFSRup_isLoaded = false;
  iWMD0jesRelativeFSRup_isLoaded = false;
  iWMD1jesRelativeFSRup_isLoaded = false;
  iWMD2jesRelativeFSRup_isLoaded = false;
  iWMD3jesRelativeFSRup_isLoaded = false;
  iWMD4jesRelativeFSRup_isLoaded = false;
  METjesRelativeFSRup_isLoaded = false;
  NujesRelativeFSRup_isLoaded = false;
  NJjesRelativeFSRup_isLoaded = false;
  NbLoosejesRelativeFSRup_isLoaded = false;
  NbMediumjesRelativeFSRup_isLoaded = false;
  NbTightjesRelativeFSRup_isLoaded = false;
  NoORNbLoosejesRelativeFSRup_isLoaded = false;
  NoORNbMediumjesRelativeFSRup_isLoaded = false;
  NoORNbTightjesRelativeFSRup_isLoaded = false;
  J0jesRelativeFSRup_isLoaded = false;
  J1jesRelativeFSRup_isLoaded = false;
  J2jesRelativeFSRup_isLoaded = false;
  J3jesRelativeFSRup_isLoaded = false;
  J4jesRelativeFSRup_isLoaded = false;
  J5jesRelativeFSRup_isLoaded = false;
  J6jesRelativeFSRup_isLoaded = false;
  J7jesRelativeFSRup_isLoaded = false;
  NQJGenjesRelativeFSRup_isLoaded = false;
  NBJGenjesRelativeFSRup_isLoaded = false;
  NLJGenjesRelativeFSRup_isLoaded = false;
  MVVXjesRelativeFSRup_isLoaded = false;
  PtVVXjesRelativeFSRup_isLoaded = false;
  HTjesRelativeFSRup_isLoaded = false;
  HTJjesRelativeFSRup_isLoaded = false;
  HTFJjesRelativeFSRup_isLoaded = false;
  SumPtFJjesRelativeFSRup_isLoaded = false;
  SumPtJjesRelativeFSRup_isLoaded = false;
  JsjesRelativeFSRdn_isLoaded = false;
  NFJjesRelativeFSRdn_isLoaded = false;
  FJ0jesRelativeFSRdn_isLoaded = false;
  FJ1jesRelativeFSRdn_isLoaded = false;
  FJ2jesRelativeFSRdn_isLoaded = false;
  FJ3jesRelativeFSRdn_isLoaded = false;
  FJ4jesRelativeFSRdn_isLoaded = false;
  VMD0jesRelativeFSRdn_isLoaded = false;
  VMD1jesRelativeFSRdn_isLoaded = false;
  VMD2jesRelativeFSRdn_isLoaded = false;
  VMD3jesRelativeFSRdn_isLoaded = false;
  VMD4jesRelativeFSRdn_isLoaded = false;
  WMD0jesRelativeFSRdn_isLoaded = false;
  WMD1jesRelativeFSRdn_isLoaded = false;
  WMD2jesRelativeFSRdn_isLoaded = false;
  WMD3jesRelativeFSRdn_isLoaded = false;
  WMD4jesRelativeFSRdn_isLoaded = false;
  NQGen0jesRelativeFSRdn_isLoaded = false;
  NQGen1jesRelativeFSRdn_isLoaded = false;
  NQGen2jesRelativeFSRdn_isLoaded = false;
  NQGen3jesRelativeFSRdn_isLoaded = false;
  NQGen4jesRelativeFSRdn_isLoaded = false;
  NBGen0jesRelativeFSRdn_isLoaded = false;
  NBGen1jesRelativeFSRdn_isLoaded = false;
  NBGen2jesRelativeFSRdn_isLoaded = false;
  NBGen3jesRelativeFSRdn_isLoaded = false;
  NBGen4jesRelativeFSRdn_isLoaded = false;
  NLGen0jesRelativeFSRdn_isLoaded = false;
  NLGen1jesRelativeFSRdn_isLoaded = false;
  NLGen2jesRelativeFSRdn_isLoaded = false;
  NLGen3jesRelativeFSRdn_isLoaded = false;
  NLGen4jesRelativeFSRdn_isLoaded = false;
  NVQGen0jesRelativeFSRdn_isLoaded = false;
  NVQGen1jesRelativeFSRdn_isLoaded = false;
  NVQGen2jesRelativeFSRdn_isLoaded = false;
  NVQGen3jesRelativeFSRdn_isLoaded = false;
  NVQGen4jesRelativeFSRdn_isLoaded = false;
  NiFJjesRelativeFSRdn_isLoaded = false;
  iFJ0jesRelativeFSRdn_isLoaded = false;
  iFJ1jesRelativeFSRdn_isLoaded = false;
  iFJ2jesRelativeFSRdn_isLoaded = false;
  iFJ3jesRelativeFSRdn_isLoaded = false;
  iFJ4jesRelativeFSRdn_isLoaded = false;
  iVMD0jesRelativeFSRdn_isLoaded = false;
  iVMD1jesRelativeFSRdn_isLoaded = false;
  iVMD2jesRelativeFSRdn_isLoaded = false;
  iVMD3jesRelativeFSRdn_isLoaded = false;
  iVMD4jesRelativeFSRdn_isLoaded = false;
  iWMD0jesRelativeFSRdn_isLoaded = false;
  iWMD1jesRelativeFSRdn_isLoaded = false;
  iWMD2jesRelativeFSRdn_isLoaded = false;
  iWMD3jesRelativeFSRdn_isLoaded = false;
  iWMD4jesRelativeFSRdn_isLoaded = false;
  METjesRelativeFSRdn_isLoaded = false;
  NujesRelativeFSRdn_isLoaded = false;
  NJjesRelativeFSRdn_isLoaded = false;
  NbLoosejesRelativeFSRdn_isLoaded = false;
  NbMediumjesRelativeFSRdn_isLoaded = false;
  NbTightjesRelativeFSRdn_isLoaded = false;
  NoORNbLoosejesRelativeFSRdn_isLoaded = false;
  NoORNbMediumjesRelativeFSRdn_isLoaded = false;
  NoORNbTightjesRelativeFSRdn_isLoaded = false;
  J0jesRelativeFSRdn_isLoaded = false;
  J1jesRelativeFSRdn_isLoaded = false;
  J2jesRelativeFSRdn_isLoaded = false;
  J3jesRelativeFSRdn_isLoaded = false;
  J4jesRelativeFSRdn_isLoaded = false;
  J5jesRelativeFSRdn_isLoaded = false;
  J6jesRelativeFSRdn_isLoaded = false;
  J7jesRelativeFSRdn_isLoaded = false;
  NQJGenjesRelativeFSRdn_isLoaded = false;
  NBJGenjesRelativeFSRdn_isLoaded = false;
  NLJGenjesRelativeFSRdn_isLoaded = false;
  MVVXjesRelativeFSRdn_isLoaded = false;
  PtVVXjesRelativeFSRdn_isLoaded = false;
  HTjesRelativeFSRdn_isLoaded = false;
  HTJjesRelativeFSRdn_isLoaded = false;
  HTFJjesRelativeFSRdn_isLoaded = false;
  SumPtFJjesRelativeFSRdn_isLoaded = false;
  SumPtJjesRelativeFSRdn_isLoaded = false;
  JsjesRelativeStatFSRup_isLoaded = false;
  NFJjesRelativeStatFSRup_isLoaded = false;
  FJ0jesRelativeStatFSRup_isLoaded = false;
  FJ1jesRelativeStatFSRup_isLoaded = false;
  FJ2jesRelativeStatFSRup_isLoaded = false;
  FJ3jesRelativeStatFSRup_isLoaded = false;
  FJ4jesRelativeStatFSRup_isLoaded = false;
  VMD0jesRelativeStatFSRup_isLoaded = false;
  VMD1jesRelativeStatFSRup_isLoaded = false;
  VMD2jesRelativeStatFSRup_isLoaded = false;
  VMD3jesRelativeStatFSRup_isLoaded = false;
  VMD4jesRelativeStatFSRup_isLoaded = false;
  WMD0jesRelativeStatFSRup_isLoaded = false;
  WMD1jesRelativeStatFSRup_isLoaded = false;
  WMD2jesRelativeStatFSRup_isLoaded = false;
  WMD3jesRelativeStatFSRup_isLoaded = false;
  WMD4jesRelativeStatFSRup_isLoaded = false;
  NQGen0jesRelativeStatFSRup_isLoaded = false;
  NQGen1jesRelativeStatFSRup_isLoaded = false;
  NQGen2jesRelativeStatFSRup_isLoaded = false;
  NQGen3jesRelativeStatFSRup_isLoaded = false;
  NQGen4jesRelativeStatFSRup_isLoaded = false;
  NBGen0jesRelativeStatFSRup_isLoaded = false;
  NBGen1jesRelativeStatFSRup_isLoaded = false;
  NBGen2jesRelativeStatFSRup_isLoaded = false;
  NBGen3jesRelativeStatFSRup_isLoaded = false;
  NBGen4jesRelativeStatFSRup_isLoaded = false;
  NLGen0jesRelativeStatFSRup_isLoaded = false;
  NLGen1jesRelativeStatFSRup_isLoaded = false;
  NLGen2jesRelativeStatFSRup_isLoaded = false;
  NLGen3jesRelativeStatFSRup_isLoaded = false;
  NLGen4jesRelativeStatFSRup_isLoaded = false;
  NVQGen0jesRelativeStatFSRup_isLoaded = false;
  NVQGen1jesRelativeStatFSRup_isLoaded = false;
  NVQGen2jesRelativeStatFSRup_isLoaded = false;
  NVQGen3jesRelativeStatFSRup_isLoaded = false;
  NVQGen4jesRelativeStatFSRup_isLoaded = false;
  NiFJjesRelativeStatFSRup_isLoaded = false;
  iFJ0jesRelativeStatFSRup_isLoaded = false;
  iFJ1jesRelativeStatFSRup_isLoaded = false;
  iFJ2jesRelativeStatFSRup_isLoaded = false;
  iFJ3jesRelativeStatFSRup_isLoaded = false;
  iFJ4jesRelativeStatFSRup_isLoaded = false;
  iVMD0jesRelativeStatFSRup_isLoaded = false;
  iVMD1jesRelativeStatFSRup_isLoaded = false;
  iVMD2jesRelativeStatFSRup_isLoaded = false;
  iVMD3jesRelativeStatFSRup_isLoaded = false;
  iVMD4jesRelativeStatFSRup_isLoaded = false;
  iWMD0jesRelativeStatFSRup_isLoaded = false;
  iWMD1jesRelativeStatFSRup_isLoaded = false;
  iWMD2jesRelativeStatFSRup_isLoaded = false;
  iWMD3jesRelativeStatFSRup_isLoaded = false;
  iWMD4jesRelativeStatFSRup_isLoaded = false;
  METjesRelativeStatFSRup_isLoaded = false;
  NujesRelativeStatFSRup_isLoaded = false;
  NJjesRelativeStatFSRup_isLoaded = false;
  NbLoosejesRelativeStatFSRup_isLoaded = false;
  NbMediumjesRelativeStatFSRup_isLoaded = false;
  NbTightjesRelativeStatFSRup_isLoaded = false;
  NoORNbLoosejesRelativeStatFSRup_isLoaded = false;
  NoORNbMediumjesRelativeStatFSRup_isLoaded = false;
  NoORNbTightjesRelativeStatFSRup_isLoaded = false;
  J0jesRelativeStatFSRup_isLoaded = false;
  J1jesRelativeStatFSRup_isLoaded = false;
  J2jesRelativeStatFSRup_isLoaded = false;
  J3jesRelativeStatFSRup_isLoaded = false;
  J4jesRelativeStatFSRup_isLoaded = false;
  J5jesRelativeStatFSRup_isLoaded = false;
  J6jesRelativeStatFSRup_isLoaded = false;
  J7jesRelativeStatFSRup_isLoaded = false;
  NQJGenjesRelativeStatFSRup_isLoaded = false;
  NBJGenjesRelativeStatFSRup_isLoaded = false;
  NLJGenjesRelativeStatFSRup_isLoaded = false;
  MVVXjesRelativeStatFSRup_isLoaded = false;
  PtVVXjesRelativeStatFSRup_isLoaded = false;
  HTjesRelativeStatFSRup_isLoaded = false;
  HTJjesRelativeStatFSRup_isLoaded = false;
  HTFJjesRelativeStatFSRup_isLoaded = false;
  SumPtFJjesRelativeStatFSRup_isLoaded = false;
  SumPtJjesRelativeStatFSRup_isLoaded = false;
  JsjesRelativeStatFSRdn_isLoaded = false;
  NFJjesRelativeStatFSRdn_isLoaded = false;
  FJ0jesRelativeStatFSRdn_isLoaded = false;
  FJ1jesRelativeStatFSRdn_isLoaded = false;
  FJ2jesRelativeStatFSRdn_isLoaded = false;
  FJ3jesRelativeStatFSRdn_isLoaded = false;
  FJ4jesRelativeStatFSRdn_isLoaded = false;
  VMD0jesRelativeStatFSRdn_isLoaded = false;
  VMD1jesRelativeStatFSRdn_isLoaded = false;
  VMD2jesRelativeStatFSRdn_isLoaded = false;
  VMD3jesRelativeStatFSRdn_isLoaded = false;
  VMD4jesRelativeStatFSRdn_isLoaded = false;
  WMD0jesRelativeStatFSRdn_isLoaded = false;
  WMD1jesRelativeStatFSRdn_isLoaded = false;
  WMD2jesRelativeStatFSRdn_isLoaded = false;
  WMD3jesRelativeStatFSRdn_isLoaded = false;
  WMD4jesRelativeStatFSRdn_isLoaded = false;
  NQGen0jesRelativeStatFSRdn_isLoaded = false;
  NQGen1jesRelativeStatFSRdn_isLoaded = false;
  NQGen2jesRelativeStatFSRdn_isLoaded = false;
  NQGen3jesRelativeStatFSRdn_isLoaded = false;
  NQGen4jesRelativeStatFSRdn_isLoaded = false;
  NBGen0jesRelativeStatFSRdn_isLoaded = false;
  NBGen1jesRelativeStatFSRdn_isLoaded = false;
  NBGen2jesRelativeStatFSRdn_isLoaded = false;
  NBGen3jesRelativeStatFSRdn_isLoaded = false;
  NBGen4jesRelativeStatFSRdn_isLoaded = false;
  NLGen0jesRelativeStatFSRdn_isLoaded = false;
  NLGen1jesRelativeStatFSRdn_isLoaded = false;
  NLGen2jesRelativeStatFSRdn_isLoaded = false;
  NLGen3jesRelativeStatFSRdn_isLoaded = false;
  NLGen4jesRelativeStatFSRdn_isLoaded = false;
  NVQGen0jesRelativeStatFSRdn_isLoaded = false;
  NVQGen1jesRelativeStatFSRdn_isLoaded = false;
  NVQGen2jesRelativeStatFSRdn_isLoaded = false;
  NVQGen3jesRelativeStatFSRdn_isLoaded = false;
  NVQGen4jesRelativeStatFSRdn_isLoaded = false;
  NiFJjesRelativeStatFSRdn_isLoaded = false;
  iFJ0jesRelativeStatFSRdn_isLoaded = false;
  iFJ1jesRelativeStatFSRdn_isLoaded = false;
  iFJ2jesRelativeStatFSRdn_isLoaded = false;
  iFJ3jesRelativeStatFSRdn_isLoaded = false;
  iFJ4jesRelativeStatFSRdn_isLoaded = false;
  iVMD0jesRelativeStatFSRdn_isLoaded = false;
  iVMD1jesRelativeStatFSRdn_isLoaded = false;
  iVMD2jesRelativeStatFSRdn_isLoaded = false;
  iVMD3jesRelativeStatFSRdn_isLoaded = false;
  iVMD4jesRelativeStatFSRdn_isLoaded = false;
  iWMD0jesRelativeStatFSRdn_isLoaded = false;
  iWMD1jesRelativeStatFSRdn_isLoaded = false;
  iWMD2jesRelativeStatFSRdn_isLoaded = false;
  iWMD3jesRelativeStatFSRdn_isLoaded = false;
  iWMD4jesRelativeStatFSRdn_isLoaded = false;
  METjesRelativeStatFSRdn_isLoaded = false;
  NujesRelativeStatFSRdn_isLoaded = false;
  NJjesRelativeStatFSRdn_isLoaded = false;
  NbLoosejesRelativeStatFSRdn_isLoaded = false;
  NbMediumjesRelativeStatFSRdn_isLoaded = false;
  NbTightjesRelativeStatFSRdn_isLoaded = false;
  NoORNbLoosejesRelativeStatFSRdn_isLoaded = false;
  NoORNbMediumjesRelativeStatFSRdn_isLoaded = false;
  NoORNbTightjesRelativeStatFSRdn_isLoaded = false;
  J0jesRelativeStatFSRdn_isLoaded = false;
  J1jesRelativeStatFSRdn_isLoaded = false;
  J2jesRelativeStatFSRdn_isLoaded = false;
  J3jesRelativeStatFSRdn_isLoaded = false;
  J4jesRelativeStatFSRdn_isLoaded = false;
  J5jesRelativeStatFSRdn_isLoaded = false;
  J6jesRelativeStatFSRdn_isLoaded = false;
  J7jesRelativeStatFSRdn_isLoaded = false;
  NQJGenjesRelativeStatFSRdn_isLoaded = false;
  NBJGenjesRelativeStatFSRdn_isLoaded = false;
  NLJGenjesRelativeStatFSRdn_isLoaded = false;
  MVVXjesRelativeStatFSRdn_isLoaded = false;
  PtVVXjesRelativeStatFSRdn_isLoaded = false;
  HTjesRelativeStatFSRdn_isLoaded = false;
  HTJjesRelativeStatFSRdn_isLoaded = false;
  HTFJjesRelativeStatFSRdn_isLoaded = false;
  SumPtFJjesRelativeStatFSRdn_isLoaded = false;
  SumPtJjesRelativeStatFSRdn_isLoaded = false;
  JsjesRelativeStatECup_isLoaded = false;
  NFJjesRelativeStatECup_isLoaded = false;
  FJ0jesRelativeStatECup_isLoaded = false;
  FJ1jesRelativeStatECup_isLoaded = false;
  FJ2jesRelativeStatECup_isLoaded = false;
  FJ3jesRelativeStatECup_isLoaded = false;
  FJ4jesRelativeStatECup_isLoaded = false;
  VMD0jesRelativeStatECup_isLoaded = false;
  VMD1jesRelativeStatECup_isLoaded = false;
  VMD2jesRelativeStatECup_isLoaded = false;
  VMD3jesRelativeStatECup_isLoaded = false;
  VMD4jesRelativeStatECup_isLoaded = false;
  WMD0jesRelativeStatECup_isLoaded = false;
  WMD1jesRelativeStatECup_isLoaded = false;
  WMD2jesRelativeStatECup_isLoaded = false;
  WMD3jesRelativeStatECup_isLoaded = false;
  WMD4jesRelativeStatECup_isLoaded = false;
  NQGen0jesRelativeStatECup_isLoaded = false;
  NQGen1jesRelativeStatECup_isLoaded = false;
  NQGen2jesRelativeStatECup_isLoaded = false;
  NQGen3jesRelativeStatECup_isLoaded = false;
  NQGen4jesRelativeStatECup_isLoaded = false;
  NBGen0jesRelativeStatECup_isLoaded = false;
  NBGen1jesRelativeStatECup_isLoaded = false;
  NBGen2jesRelativeStatECup_isLoaded = false;
  NBGen3jesRelativeStatECup_isLoaded = false;
  NBGen4jesRelativeStatECup_isLoaded = false;
  NLGen0jesRelativeStatECup_isLoaded = false;
  NLGen1jesRelativeStatECup_isLoaded = false;
  NLGen2jesRelativeStatECup_isLoaded = false;
  NLGen3jesRelativeStatECup_isLoaded = false;
  NLGen4jesRelativeStatECup_isLoaded = false;
  NVQGen0jesRelativeStatECup_isLoaded = false;
  NVQGen1jesRelativeStatECup_isLoaded = false;
  NVQGen2jesRelativeStatECup_isLoaded = false;
  NVQGen3jesRelativeStatECup_isLoaded = false;
  NVQGen4jesRelativeStatECup_isLoaded = false;
  NiFJjesRelativeStatECup_isLoaded = false;
  iFJ0jesRelativeStatECup_isLoaded = false;
  iFJ1jesRelativeStatECup_isLoaded = false;
  iFJ2jesRelativeStatECup_isLoaded = false;
  iFJ3jesRelativeStatECup_isLoaded = false;
  iFJ4jesRelativeStatECup_isLoaded = false;
  iVMD0jesRelativeStatECup_isLoaded = false;
  iVMD1jesRelativeStatECup_isLoaded = false;
  iVMD2jesRelativeStatECup_isLoaded = false;
  iVMD3jesRelativeStatECup_isLoaded = false;
  iVMD4jesRelativeStatECup_isLoaded = false;
  iWMD0jesRelativeStatECup_isLoaded = false;
  iWMD1jesRelativeStatECup_isLoaded = false;
  iWMD2jesRelativeStatECup_isLoaded = false;
  iWMD3jesRelativeStatECup_isLoaded = false;
  iWMD4jesRelativeStatECup_isLoaded = false;
  METjesRelativeStatECup_isLoaded = false;
  NujesRelativeStatECup_isLoaded = false;
  NJjesRelativeStatECup_isLoaded = false;
  NbLoosejesRelativeStatECup_isLoaded = false;
  NbMediumjesRelativeStatECup_isLoaded = false;
  NbTightjesRelativeStatECup_isLoaded = false;
  NoORNbLoosejesRelativeStatECup_isLoaded = false;
  NoORNbMediumjesRelativeStatECup_isLoaded = false;
  NoORNbTightjesRelativeStatECup_isLoaded = false;
  J0jesRelativeStatECup_isLoaded = false;
  J1jesRelativeStatECup_isLoaded = false;
  J2jesRelativeStatECup_isLoaded = false;
  J3jesRelativeStatECup_isLoaded = false;
  J4jesRelativeStatECup_isLoaded = false;
  J5jesRelativeStatECup_isLoaded = false;
  J6jesRelativeStatECup_isLoaded = false;
  J7jesRelativeStatECup_isLoaded = false;
  NQJGenjesRelativeStatECup_isLoaded = false;
  NBJGenjesRelativeStatECup_isLoaded = false;
  NLJGenjesRelativeStatECup_isLoaded = false;
  MVVXjesRelativeStatECup_isLoaded = false;
  PtVVXjesRelativeStatECup_isLoaded = false;
  HTjesRelativeStatECup_isLoaded = false;
  HTJjesRelativeStatECup_isLoaded = false;
  HTFJjesRelativeStatECup_isLoaded = false;
  SumPtFJjesRelativeStatECup_isLoaded = false;
  SumPtJjesRelativeStatECup_isLoaded = false;
  JsjesRelativeStatECdn_isLoaded = false;
  NFJjesRelativeStatECdn_isLoaded = false;
  FJ0jesRelativeStatECdn_isLoaded = false;
  FJ1jesRelativeStatECdn_isLoaded = false;
  FJ2jesRelativeStatECdn_isLoaded = false;
  FJ3jesRelativeStatECdn_isLoaded = false;
  FJ4jesRelativeStatECdn_isLoaded = false;
  VMD0jesRelativeStatECdn_isLoaded = false;
  VMD1jesRelativeStatECdn_isLoaded = false;
  VMD2jesRelativeStatECdn_isLoaded = false;
  VMD3jesRelativeStatECdn_isLoaded = false;
  VMD4jesRelativeStatECdn_isLoaded = false;
  WMD0jesRelativeStatECdn_isLoaded = false;
  WMD1jesRelativeStatECdn_isLoaded = false;
  WMD2jesRelativeStatECdn_isLoaded = false;
  WMD3jesRelativeStatECdn_isLoaded = false;
  WMD4jesRelativeStatECdn_isLoaded = false;
  NQGen0jesRelativeStatECdn_isLoaded = false;
  NQGen1jesRelativeStatECdn_isLoaded = false;
  NQGen2jesRelativeStatECdn_isLoaded = false;
  NQGen3jesRelativeStatECdn_isLoaded = false;
  NQGen4jesRelativeStatECdn_isLoaded = false;
  NBGen0jesRelativeStatECdn_isLoaded = false;
  NBGen1jesRelativeStatECdn_isLoaded = false;
  NBGen2jesRelativeStatECdn_isLoaded = false;
  NBGen3jesRelativeStatECdn_isLoaded = false;
  NBGen4jesRelativeStatECdn_isLoaded = false;
  NLGen0jesRelativeStatECdn_isLoaded = false;
  NLGen1jesRelativeStatECdn_isLoaded = false;
  NLGen2jesRelativeStatECdn_isLoaded = false;
  NLGen3jesRelativeStatECdn_isLoaded = false;
  NLGen4jesRelativeStatECdn_isLoaded = false;
  NVQGen0jesRelativeStatECdn_isLoaded = false;
  NVQGen1jesRelativeStatECdn_isLoaded = false;
  NVQGen2jesRelativeStatECdn_isLoaded = false;
  NVQGen3jesRelativeStatECdn_isLoaded = false;
  NVQGen4jesRelativeStatECdn_isLoaded = false;
  NiFJjesRelativeStatECdn_isLoaded = false;
  iFJ0jesRelativeStatECdn_isLoaded = false;
  iFJ1jesRelativeStatECdn_isLoaded = false;
  iFJ2jesRelativeStatECdn_isLoaded = false;
  iFJ3jesRelativeStatECdn_isLoaded = false;
  iFJ4jesRelativeStatECdn_isLoaded = false;
  iVMD0jesRelativeStatECdn_isLoaded = false;
  iVMD1jesRelativeStatECdn_isLoaded = false;
  iVMD2jesRelativeStatECdn_isLoaded = false;
  iVMD3jesRelativeStatECdn_isLoaded = false;
  iVMD4jesRelativeStatECdn_isLoaded = false;
  iWMD0jesRelativeStatECdn_isLoaded = false;
  iWMD1jesRelativeStatECdn_isLoaded = false;
  iWMD2jesRelativeStatECdn_isLoaded = false;
  iWMD3jesRelativeStatECdn_isLoaded = false;
  iWMD4jesRelativeStatECdn_isLoaded = false;
  METjesRelativeStatECdn_isLoaded = false;
  NujesRelativeStatECdn_isLoaded = false;
  NJjesRelativeStatECdn_isLoaded = false;
  NbLoosejesRelativeStatECdn_isLoaded = false;
  NbMediumjesRelativeStatECdn_isLoaded = false;
  NbTightjesRelativeStatECdn_isLoaded = false;
  NoORNbLoosejesRelativeStatECdn_isLoaded = false;
  NoORNbMediumjesRelativeStatECdn_isLoaded = false;
  NoORNbTightjesRelativeStatECdn_isLoaded = false;
  J0jesRelativeStatECdn_isLoaded = false;
  J1jesRelativeStatECdn_isLoaded = false;
  J2jesRelativeStatECdn_isLoaded = false;
  J3jesRelativeStatECdn_isLoaded = false;
  J4jesRelativeStatECdn_isLoaded = false;
  J5jesRelativeStatECdn_isLoaded = false;
  J6jesRelativeStatECdn_isLoaded = false;
  J7jesRelativeStatECdn_isLoaded = false;
  NQJGenjesRelativeStatECdn_isLoaded = false;
  NBJGenjesRelativeStatECdn_isLoaded = false;
  NLJGenjesRelativeStatECdn_isLoaded = false;
  MVVXjesRelativeStatECdn_isLoaded = false;
  PtVVXjesRelativeStatECdn_isLoaded = false;
  HTjesRelativeStatECdn_isLoaded = false;
  HTJjesRelativeStatECdn_isLoaded = false;
  HTFJjesRelativeStatECdn_isLoaded = false;
  SumPtFJjesRelativeStatECdn_isLoaded = false;
  SumPtJjesRelativeStatECdn_isLoaded = false;
  JsjesRelativeStatHFup_isLoaded = false;
  NFJjesRelativeStatHFup_isLoaded = false;
  FJ0jesRelativeStatHFup_isLoaded = false;
  FJ1jesRelativeStatHFup_isLoaded = false;
  FJ2jesRelativeStatHFup_isLoaded = false;
  FJ3jesRelativeStatHFup_isLoaded = false;
  FJ4jesRelativeStatHFup_isLoaded = false;
  VMD0jesRelativeStatHFup_isLoaded = false;
  VMD1jesRelativeStatHFup_isLoaded = false;
  VMD2jesRelativeStatHFup_isLoaded = false;
  VMD3jesRelativeStatHFup_isLoaded = false;
  VMD4jesRelativeStatHFup_isLoaded = false;
  WMD0jesRelativeStatHFup_isLoaded = false;
  WMD1jesRelativeStatHFup_isLoaded = false;
  WMD2jesRelativeStatHFup_isLoaded = false;
  WMD3jesRelativeStatHFup_isLoaded = false;
  WMD4jesRelativeStatHFup_isLoaded = false;
  NQGen0jesRelativeStatHFup_isLoaded = false;
  NQGen1jesRelativeStatHFup_isLoaded = false;
  NQGen2jesRelativeStatHFup_isLoaded = false;
  NQGen3jesRelativeStatHFup_isLoaded = false;
  NQGen4jesRelativeStatHFup_isLoaded = false;
  NBGen0jesRelativeStatHFup_isLoaded = false;
  NBGen1jesRelativeStatHFup_isLoaded = false;
  NBGen2jesRelativeStatHFup_isLoaded = false;
  NBGen3jesRelativeStatHFup_isLoaded = false;
  NBGen4jesRelativeStatHFup_isLoaded = false;
  NLGen0jesRelativeStatHFup_isLoaded = false;
  NLGen1jesRelativeStatHFup_isLoaded = false;
  NLGen2jesRelativeStatHFup_isLoaded = false;
  NLGen3jesRelativeStatHFup_isLoaded = false;
  NLGen4jesRelativeStatHFup_isLoaded = false;
  NVQGen0jesRelativeStatHFup_isLoaded = false;
  NVQGen1jesRelativeStatHFup_isLoaded = false;
  NVQGen2jesRelativeStatHFup_isLoaded = false;
  NVQGen3jesRelativeStatHFup_isLoaded = false;
  NVQGen4jesRelativeStatHFup_isLoaded = false;
  NiFJjesRelativeStatHFup_isLoaded = false;
  iFJ0jesRelativeStatHFup_isLoaded = false;
  iFJ1jesRelativeStatHFup_isLoaded = false;
  iFJ2jesRelativeStatHFup_isLoaded = false;
  iFJ3jesRelativeStatHFup_isLoaded = false;
  iFJ4jesRelativeStatHFup_isLoaded = false;
  iVMD0jesRelativeStatHFup_isLoaded = false;
  iVMD1jesRelativeStatHFup_isLoaded = false;
  iVMD2jesRelativeStatHFup_isLoaded = false;
  iVMD3jesRelativeStatHFup_isLoaded = false;
  iVMD4jesRelativeStatHFup_isLoaded = false;
  iWMD0jesRelativeStatHFup_isLoaded = false;
  iWMD1jesRelativeStatHFup_isLoaded = false;
  iWMD2jesRelativeStatHFup_isLoaded = false;
  iWMD3jesRelativeStatHFup_isLoaded = false;
  iWMD4jesRelativeStatHFup_isLoaded = false;
  METjesRelativeStatHFup_isLoaded = false;
  NujesRelativeStatHFup_isLoaded = false;
  NJjesRelativeStatHFup_isLoaded = false;
  NbLoosejesRelativeStatHFup_isLoaded = false;
  NbMediumjesRelativeStatHFup_isLoaded = false;
  NbTightjesRelativeStatHFup_isLoaded = false;
  NoORNbLoosejesRelativeStatHFup_isLoaded = false;
  NoORNbMediumjesRelativeStatHFup_isLoaded = false;
  NoORNbTightjesRelativeStatHFup_isLoaded = false;
  J0jesRelativeStatHFup_isLoaded = false;
  J1jesRelativeStatHFup_isLoaded = false;
  J2jesRelativeStatHFup_isLoaded = false;
  J3jesRelativeStatHFup_isLoaded = false;
  J4jesRelativeStatHFup_isLoaded = false;
  J5jesRelativeStatHFup_isLoaded = false;
  J6jesRelativeStatHFup_isLoaded = false;
  J7jesRelativeStatHFup_isLoaded = false;
  NQJGenjesRelativeStatHFup_isLoaded = false;
  NBJGenjesRelativeStatHFup_isLoaded = false;
  NLJGenjesRelativeStatHFup_isLoaded = false;
  MVVXjesRelativeStatHFup_isLoaded = false;
  PtVVXjesRelativeStatHFup_isLoaded = false;
  HTjesRelativeStatHFup_isLoaded = false;
  HTJjesRelativeStatHFup_isLoaded = false;
  HTFJjesRelativeStatHFup_isLoaded = false;
  SumPtFJjesRelativeStatHFup_isLoaded = false;
  SumPtJjesRelativeStatHFup_isLoaded = false;
  JsjesRelativeStatHFdn_isLoaded = false;
  NFJjesRelativeStatHFdn_isLoaded = false;
  FJ0jesRelativeStatHFdn_isLoaded = false;
  FJ1jesRelativeStatHFdn_isLoaded = false;
  FJ2jesRelativeStatHFdn_isLoaded = false;
  FJ3jesRelativeStatHFdn_isLoaded = false;
  FJ4jesRelativeStatHFdn_isLoaded = false;
  VMD0jesRelativeStatHFdn_isLoaded = false;
  VMD1jesRelativeStatHFdn_isLoaded = false;
  VMD2jesRelativeStatHFdn_isLoaded = false;
  VMD3jesRelativeStatHFdn_isLoaded = false;
  VMD4jesRelativeStatHFdn_isLoaded = false;
  WMD0jesRelativeStatHFdn_isLoaded = false;
  WMD1jesRelativeStatHFdn_isLoaded = false;
  WMD2jesRelativeStatHFdn_isLoaded = false;
  WMD3jesRelativeStatHFdn_isLoaded = false;
  WMD4jesRelativeStatHFdn_isLoaded = false;
  NQGen0jesRelativeStatHFdn_isLoaded = false;
  NQGen1jesRelativeStatHFdn_isLoaded = false;
  NQGen2jesRelativeStatHFdn_isLoaded = false;
  NQGen3jesRelativeStatHFdn_isLoaded = false;
  NQGen4jesRelativeStatHFdn_isLoaded = false;
  NBGen0jesRelativeStatHFdn_isLoaded = false;
  NBGen1jesRelativeStatHFdn_isLoaded = false;
  NBGen2jesRelativeStatHFdn_isLoaded = false;
  NBGen3jesRelativeStatHFdn_isLoaded = false;
  NBGen4jesRelativeStatHFdn_isLoaded = false;
  NLGen0jesRelativeStatHFdn_isLoaded = false;
  NLGen1jesRelativeStatHFdn_isLoaded = false;
  NLGen2jesRelativeStatHFdn_isLoaded = false;
  NLGen3jesRelativeStatHFdn_isLoaded = false;
  NLGen4jesRelativeStatHFdn_isLoaded = false;
  NVQGen0jesRelativeStatHFdn_isLoaded = false;
  NVQGen1jesRelativeStatHFdn_isLoaded = false;
  NVQGen2jesRelativeStatHFdn_isLoaded = false;
  NVQGen3jesRelativeStatHFdn_isLoaded = false;
  NVQGen4jesRelativeStatHFdn_isLoaded = false;
  NiFJjesRelativeStatHFdn_isLoaded = false;
  iFJ0jesRelativeStatHFdn_isLoaded = false;
  iFJ1jesRelativeStatHFdn_isLoaded = false;
  iFJ2jesRelativeStatHFdn_isLoaded = false;
  iFJ3jesRelativeStatHFdn_isLoaded = false;
  iFJ4jesRelativeStatHFdn_isLoaded = false;
  iVMD0jesRelativeStatHFdn_isLoaded = false;
  iVMD1jesRelativeStatHFdn_isLoaded = false;
  iVMD2jesRelativeStatHFdn_isLoaded = false;
  iVMD3jesRelativeStatHFdn_isLoaded = false;
  iVMD4jesRelativeStatHFdn_isLoaded = false;
  iWMD0jesRelativeStatHFdn_isLoaded = false;
  iWMD1jesRelativeStatHFdn_isLoaded = false;
  iWMD2jesRelativeStatHFdn_isLoaded = false;
  iWMD3jesRelativeStatHFdn_isLoaded = false;
  iWMD4jesRelativeStatHFdn_isLoaded = false;
  METjesRelativeStatHFdn_isLoaded = false;
  NujesRelativeStatHFdn_isLoaded = false;
  NJjesRelativeStatHFdn_isLoaded = false;
  NbLoosejesRelativeStatHFdn_isLoaded = false;
  NbMediumjesRelativeStatHFdn_isLoaded = false;
  NbTightjesRelativeStatHFdn_isLoaded = false;
  NoORNbLoosejesRelativeStatHFdn_isLoaded = false;
  NoORNbMediumjesRelativeStatHFdn_isLoaded = false;
  NoORNbTightjesRelativeStatHFdn_isLoaded = false;
  J0jesRelativeStatHFdn_isLoaded = false;
  J1jesRelativeStatHFdn_isLoaded = false;
  J2jesRelativeStatHFdn_isLoaded = false;
  J3jesRelativeStatHFdn_isLoaded = false;
  J4jesRelativeStatHFdn_isLoaded = false;
  J5jesRelativeStatHFdn_isLoaded = false;
  J6jesRelativeStatHFdn_isLoaded = false;
  J7jesRelativeStatHFdn_isLoaded = false;
  NQJGenjesRelativeStatHFdn_isLoaded = false;
  NBJGenjesRelativeStatHFdn_isLoaded = false;
  NLJGenjesRelativeStatHFdn_isLoaded = false;
  MVVXjesRelativeStatHFdn_isLoaded = false;
  PtVVXjesRelativeStatHFdn_isLoaded = false;
  HTjesRelativeStatHFdn_isLoaded = false;
  HTJjesRelativeStatHFdn_isLoaded = false;
  HTFJjesRelativeStatHFdn_isLoaded = false;
  SumPtFJjesRelativeStatHFdn_isLoaded = false;
  SumPtJjesRelativeStatHFdn_isLoaded = false;
  JsjesPileUpDataMCup_isLoaded = false;
  NFJjesPileUpDataMCup_isLoaded = false;
  FJ0jesPileUpDataMCup_isLoaded = false;
  FJ1jesPileUpDataMCup_isLoaded = false;
  FJ2jesPileUpDataMCup_isLoaded = false;
  FJ3jesPileUpDataMCup_isLoaded = false;
  FJ4jesPileUpDataMCup_isLoaded = false;
  VMD0jesPileUpDataMCup_isLoaded = false;
  VMD1jesPileUpDataMCup_isLoaded = false;
  VMD2jesPileUpDataMCup_isLoaded = false;
  VMD3jesPileUpDataMCup_isLoaded = false;
  VMD4jesPileUpDataMCup_isLoaded = false;
  WMD0jesPileUpDataMCup_isLoaded = false;
  WMD1jesPileUpDataMCup_isLoaded = false;
  WMD2jesPileUpDataMCup_isLoaded = false;
  WMD3jesPileUpDataMCup_isLoaded = false;
  WMD4jesPileUpDataMCup_isLoaded = false;
  NQGen0jesPileUpDataMCup_isLoaded = false;
  NQGen1jesPileUpDataMCup_isLoaded = false;
  NQGen2jesPileUpDataMCup_isLoaded = false;
  NQGen3jesPileUpDataMCup_isLoaded = false;
  NQGen4jesPileUpDataMCup_isLoaded = false;
  NBGen0jesPileUpDataMCup_isLoaded = false;
  NBGen1jesPileUpDataMCup_isLoaded = false;
  NBGen2jesPileUpDataMCup_isLoaded = false;
  NBGen3jesPileUpDataMCup_isLoaded = false;
  NBGen4jesPileUpDataMCup_isLoaded = false;
  NLGen0jesPileUpDataMCup_isLoaded = false;
  NLGen1jesPileUpDataMCup_isLoaded = false;
  NLGen2jesPileUpDataMCup_isLoaded = false;
  NLGen3jesPileUpDataMCup_isLoaded = false;
  NLGen4jesPileUpDataMCup_isLoaded = false;
  NVQGen0jesPileUpDataMCup_isLoaded = false;
  NVQGen1jesPileUpDataMCup_isLoaded = false;
  NVQGen2jesPileUpDataMCup_isLoaded = false;
  NVQGen3jesPileUpDataMCup_isLoaded = false;
  NVQGen4jesPileUpDataMCup_isLoaded = false;
  NiFJjesPileUpDataMCup_isLoaded = false;
  iFJ0jesPileUpDataMCup_isLoaded = false;
  iFJ1jesPileUpDataMCup_isLoaded = false;
  iFJ2jesPileUpDataMCup_isLoaded = false;
  iFJ3jesPileUpDataMCup_isLoaded = false;
  iFJ4jesPileUpDataMCup_isLoaded = false;
  iVMD0jesPileUpDataMCup_isLoaded = false;
  iVMD1jesPileUpDataMCup_isLoaded = false;
  iVMD2jesPileUpDataMCup_isLoaded = false;
  iVMD3jesPileUpDataMCup_isLoaded = false;
  iVMD4jesPileUpDataMCup_isLoaded = false;
  iWMD0jesPileUpDataMCup_isLoaded = false;
  iWMD1jesPileUpDataMCup_isLoaded = false;
  iWMD2jesPileUpDataMCup_isLoaded = false;
  iWMD3jesPileUpDataMCup_isLoaded = false;
  iWMD4jesPileUpDataMCup_isLoaded = false;
  METjesPileUpDataMCup_isLoaded = false;
  NujesPileUpDataMCup_isLoaded = false;
  NJjesPileUpDataMCup_isLoaded = false;
  NbLoosejesPileUpDataMCup_isLoaded = false;
  NbMediumjesPileUpDataMCup_isLoaded = false;
  NbTightjesPileUpDataMCup_isLoaded = false;
  NoORNbLoosejesPileUpDataMCup_isLoaded = false;
  NoORNbMediumjesPileUpDataMCup_isLoaded = false;
  NoORNbTightjesPileUpDataMCup_isLoaded = false;
  J0jesPileUpDataMCup_isLoaded = false;
  J1jesPileUpDataMCup_isLoaded = false;
  J2jesPileUpDataMCup_isLoaded = false;
  J3jesPileUpDataMCup_isLoaded = false;
  J4jesPileUpDataMCup_isLoaded = false;
  J5jesPileUpDataMCup_isLoaded = false;
  J6jesPileUpDataMCup_isLoaded = false;
  J7jesPileUpDataMCup_isLoaded = false;
  NQJGenjesPileUpDataMCup_isLoaded = false;
  NBJGenjesPileUpDataMCup_isLoaded = false;
  NLJGenjesPileUpDataMCup_isLoaded = false;
  MVVXjesPileUpDataMCup_isLoaded = false;
  PtVVXjesPileUpDataMCup_isLoaded = false;
  HTjesPileUpDataMCup_isLoaded = false;
  HTJjesPileUpDataMCup_isLoaded = false;
  HTFJjesPileUpDataMCup_isLoaded = false;
  SumPtFJjesPileUpDataMCup_isLoaded = false;
  SumPtJjesPileUpDataMCup_isLoaded = false;
  JsjesPileUpDataMCdn_isLoaded = false;
  NFJjesPileUpDataMCdn_isLoaded = false;
  FJ0jesPileUpDataMCdn_isLoaded = false;
  FJ1jesPileUpDataMCdn_isLoaded = false;
  FJ2jesPileUpDataMCdn_isLoaded = false;
  FJ3jesPileUpDataMCdn_isLoaded = false;
  FJ4jesPileUpDataMCdn_isLoaded = false;
  VMD0jesPileUpDataMCdn_isLoaded = false;
  VMD1jesPileUpDataMCdn_isLoaded = false;
  VMD2jesPileUpDataMCdn_isLoaded = false;
  VMD3jesPileUpDataMCdn_isLoaded = false;
  VMD4jesPileUpDataMCdn_isLoaded = false;
  WMD0jesPileUpDataMCdn_isLoaded = false;
  WMD1jesPileUpDataMCdn_isLoaded = false;
  WMD2jesPileUpDataMCdn_isLoaded = false;
  WMD3jesPileUpDataMCdn_isLoaded = false;
  WMD4jesPileUpDataMCdn_isLoaded = false;
  NQGen0jesPileUpDataMCdn_isLoaded = false;
  NQGen1jesPileUpDataMCdn_isLoaded = false;
  NQGen2jesPileUpDataMCdn_isLoaded = false;
  NQGen3jesPileUpDataMCdn_isLoaded = false;
  NQGen4jesPileUpDataMCdn_isLoaded = false;
  NBGen0jesPileUpDataMCdn_isLoaded = false;
  NBGen1jesPileUpDataMCdn_isLoaded = false;
  NBGen2jesPileUpDataMCdn_isLoaded = false;
  NBGen3jesPileUpDataMCdn_isLoaded = false;
  NBGen4jesPileUpDataMCdn_isLoaded = false;
  NLGen0jesPileUpDataMCdn_isLoaded = false;
  NLGen1jesPileUpDataMCdn_isLoaded = false;
  NLGen2jesPileUpDataMCdn_isLoaded = false;
  NLGen3jesPileUpDataMCdn_isLoaded = false;
  NLGen4jesPileUpDataMCdn_isLoaded = false;
  NVQGen0jesPileUpDataMCdn_isLoaded = false;
  NVQGen1jesPileUpDataMCdn_isLoaded = false;
  NVQGen2jesPileUpDataMCdn_isLoaded = false;
  NVQGen3jesPileUpDataMCdn_isLoaded = false;
  NVQGen4jesPileUpDataMCdn_isLoaded = false;
  NiFJjesPileUpDataMCdn_isLoaded = false;
  iFJ0jesPileUpDataMCdn_isLoaded = false;
  iFJ1jesPileUpDataMCdn_isLoaded = false;
  iFJ2jesPileUpDataMCdn_isLoaded = false;
  iFJ3jesPileUpDataMCdn_isLoaded = false;
  iFJ4jesPileUpDataMCdn_isLoaded = false;
  iVMD0jesPileUpDataMCdn_isLoaded = false;
  iVMD1jesPileUpDataMCdn_isLoaded = false;
  iVMD2jesPileUpDataMCdn_isLoaded = false;
  iVMD3jesPileUpDataMCdn_isLoaded = false;
  iVMD4jesPileUpDataMCdn_isLoaded = false;
  iWMD0jesPileUpDataMCdn_isLoaded = false;
  iWMD1jesPileUpDataMCdn_isLoaded = false;
  iWMD2jesPileUpDataMCdn_isLoaded = false;
  iWMD3jesPileUpDataMCdn_isLoaded = false;
  iWMD4jesPileUpDataMCdn_isLoaded = false;
  METjesPileUpDataMCdn_isLoaded = false;
  NujesPileUpDataMCdn_isLoaded = false;
  NJjesPileUpDataMCdn_isLoaded = false;
  NbLoosejesPileUpDataMCdn_isLoaded = false;
  NbMediumjesPileUpDataMCdn_isLoaded = false;
  NbTightjesPileUpDataMCdn_isLoaded = false;
  NoORNbLoosejesPileUpDataMCdn_isLoaded = false;
  NoORNbMediumjesPileUpDataMCdn_isLoaded = false;
  NoORNbTightjesPileUpDataMCdn_isLoaded = false;
  J0jesPileUpDataMCdn_isLoaded = false;
  J1jesPileUpDataMCdn_isLoaded = false;
  J2jesPileUpDataMCdn_isLoaded = false;
  J3jesPileUpDataMCdn_isLoaded = false;
  J4jesPileUpDataMCdn_isLoaded = false;
  J5jesPileUpDataMCdn_isLoaded = false;
  J6jesPileUpDataMCdn_isLoaded = false;
  J7jesPileUpDataMCdn_isLoaded = false;
  NQJGenjesPileUpDataMCdn_isLoaded = false;
  NBJGenjesPileUpDataMCdn_isLoaded = false;
  NLJGenjesPileUpDataMCdn_isLoaded = false;
  MVVXjesPileUpDataMCdn_isLoaded = false;
  PtVVXjesPileUpDataMCdn_isLoaded = false;
  HTjesPileUpDataMCdn_isLoaded = false;
  HTJjesPileUpDataMCdn_isLoaded = false;
  HTFJjesPileUpDataMCdn_isLoaded = false;
  SumPtFJjesPileUpDataMCdn_isLoaded = false;
  SumPtJjesPileUpDataMCdn_isLoaded = false;
  JsjesPileUpPtRefup_isLoaded = false;
  NFJjesPileUpPtRefup_isLoaded = false;
  FJ0jesPileUpPtRefup_isLoaded = false;
  FJ1jesPileUpPtRefup_isLoaded = false;
  FJ2jesPileUpPtRefup_isLoaded = false;
  FJ3jesPileUpPtRefup_isLoaded = false;
  FJ4jesPileUpPtRefup_isLoaded = false;
  VMD0jesPileUpPtRefup_isLoaded = false;
  VMD1jesPileUpPtRefup_isLoaded = false;
  VMD2jesPileUpPtRefup_isLoaded = false;
  VMD3jesPileUpPtRefup_isLoaded = false;
  VMD4jesPileUpPtRefup_isLoaded = false;
  WMD0jesPileUpPtRefup_isLoaded = false;
  WMD1jesPileUpPtRefup_isLoaded = false;
  WMD2jesPileUpPtRefup_isLoaded = false;
  WMD3jesPileUpPtRefup_isLoaded = false;
  WMD4jesPileUpPtRefup_isLoaded = false;
  NQGen0jesPileUpPtRefup_isLoaded = false;
  NQGen1jesPileUpPtRefup_isLoaded = false;
  NQGen2jesPileUpPtRefup_isLoaded = false;
  NQGen3jesPileUpPtRefup_isLoaded = false;
  NQGen4jesPileUpPtRefup_isLoaded = false;
  NBGen0jesPileUpPtRefup_isLoaded = false;
  NBGen1jesPileUpPtRefup_isLoaded = false;
  NBGen2jesPileUpPtRefup_isLoaded = false;
  NBGen3jesPileUpPtRefup_isLoaded = false;
  NBGen4jesPileUpPtRefup_isLoaded = false;
  NLGen0jesPileUpPtRefup_isLoaded = false;
  NLGen1jesPileUpPtRefup_isLoaded = false;
  NLGen2jesPileUpPtRefup_isLoaded = false;
  NLGen3jesPileUpPtRefup_isLoaded = false;
  NLGen4jesPileUpPtRefup_isLoaded = false;
  NVQGen0jesPileUpPtRefup_isLoaded = false;
  NVQGen1jesPileUpPtRefup_isLoaded = false;
  NVQGen2jesPileUpPtRefup_isLoaded = false;
  NVQGen3jesPileUpPtRefup_isLoaded = false;
  NVQGen4jesPileUpPtRefup_isLoaded = false;
  NiFJjesPileUpPtRefup_isLoaded = false;
  iFJ0jesPileUpPtRefup_isLoaded = false;
  iFJ1jesPileUpPtRefup_isLoaded = false;
  iFJ2jesPileUpPtRefup_isLoaded = false;
  iFJ3jesPileUpPtRefup_isLoaded = false;
  iFJ4jesPileUpPtRefup_isLoaded = false;
  iVMD0jesPileUpPtRefup_isLoaded = false;
  iVMD1jesPileUpPtRefup_isLoaded = false;
  iVMD2jesPileUpPtRefup_isLoaded = false;
  iVMD3jesPileUpPtRefup_isLoaded = false;
  iVMD4jesPileUpPtRefup_isLoaded = false;
  iWMD0jesPileUpPtRefup_isLoaded = false;
  iWMD1jesPileUpPtRefup_isLoaded = false;
  iWMD2jesPileUpPtRefup_isLoaded = false;
  iWMD3jesPileUpPtRefup_isLoaded = false;
  iWMD4jesPileUpPtRefup_isLoaded = false;
  METjesPileUpPtRefup_isLoaded = false;
  NujesPileUpPtRefup_isLoaded = false;
  NJjesPileUpPtRefup_isLoaded = false;
  NbLoosejesPileUpPtRefup_isLoaded = false;
  NbMediumjesPileUpPtRefup_isLoaded = false;
  NbTightjesPileUpPtRefup_isLoaded = false;
  NoORNbLoosejesPileUpPtRefup_isLoaded = false;
  NoORNbMediumjesPileUpPtRefup_isLoaded = false;
  NoORNbTightjesPileUpPtRefup_isLoaded = false;
  J0jesPileUpPtRefup_isLoaded = false;
  J1jesPileUpPtRefup_isLoaded = false;
  J2jesPileUpPtRefup_isLoaded = false;
  J3jesPileUpPtRefup_isLoaded = false;
  J4jesPileUpPtRefup_isLoaded = false;
  J5jesPileUpPtRefup_isLoaded = false;
  J6jesPileUpPtRefup_isLoaded = false;
  J7jesPileUpPtRefup_isLoaded = false;
  NQJGenjesPileUpPtRefup_isLoaded = false;
  NBJGenjesPileUpPtRefup_isLoaded = false;
  NLJGenjesPileUpPtRefup_isLoaded = false;
  MVVXjesPileUpPtRefup_isLoaded = false;
  PtVVXjesPileUpPtRefup_isLoaded = false;
  HTjesPileUpPtRefup_isLoaded = false;
  HTJjesPileUpPtRefup_isLoaded = false;
  HTFJjesPileUpPtRefup_isLoaded = false;
  SumPtFJjesPileUpPtRefup_isLoaded = false;
  SumPtJjesPileUpPtRefup_isLoaded = false;
  JsjesPileUpPtRefdn_isLoaded = false;
  NFJjesPileUpPtRefdn_isLoaded = false;
  FJ0jesPileUpPtRefdn_isLoaded = false;
  FJ1jesPileUpPtRefdn_isLoaded = false;
  FJ2jesPileUpPtRefdn_isLoaded = false;
  FJ3jesPileUpPtRefdn_isLoaded = false;
  FJ4jesPileUpPtRefdn_isLoaded = false;
  VMD0jesPileUpPtRefdn_isLoaded = false;
  VMD1jesPileUpPtRefdn_isLoaded = false;
  VMD2jesPileUpPtRefdn_isLoaded = false;
  VMD3jesPileUpPtRefdn_isLoaded = false;
  VMD4jesPileUpPtRefdn_isLoaded = false;
  WMD0jesPileUpPtRefdn_isLoaded = false;
  WMD1jesPileUpPtRefdn_isLoaded = false;
  WMD2jesPileUpPtRefdn_isLoaded = false;
  WMD3jesPileUpPtRefdn_isLoaded = false;
  WMD4jesPileUpPtRefdn_isLoaded = false;
  NQGen0jesPileUpPtRefdn_isLoaded = false;
  NQGen1jesPileUpPtRefdn_isLoaded = false;
  NQGen2jesPileUpPtRefdn_isLoaded = false;
  NQGen3jesPileUpPtRefdn_isLoaded = false;
  NQGen4jesPileUpPtRefdn_isLoaded = false;
  NBGen0jesPileUpPtRefdn_isLoaded = false;
  NBGen1jesPileUpPtRefdn_isLoaded = false;
  NBGen2jesPileUpPtRefdn_isLoaded = false;
  NBGen3jesPileUpPtRefdn_isLoaded = false;
  NBGen4jesPileUpPtRefdn_isLoaded = false;
  NLGen0jesPileUpPtRefdn_isLoaded = false;
  NLGen1jesPileUpPtRefdn_isLoaded = false;
  NLGen2jesPileUpPtRefdn_isLoaded = false;
  NLGen3jesPileUpPtRefdn_isLoaded = false;
  NLGen4jesPileUpPtRefdn_isLoaded = false;
  NVQGen0jesPileUpPtRefdn_isLoaded = false;
  NVQGen1jesPileUpPtRefdn_isLoaded = false;
  NVQGen2jesPileUpPtRefdn_isLoaded = false;
  NVQGen3jesPileUpPtRefdn_isLoaded = false;
  NVQGen4jesPileUpPtRefdn_isLoaded = false;
  NiFJjesPileUpPtRefdn_isLoaded = false;
  iFJ0jesPileUpPtRefdn_isLoaded = false;
  iFJ1jesPileUpPtRefdn_isLoaded = false;
  iFJ2jesPileUpPtRefdn_isLoaded = false;
  iFJ3jesPileUpPtRefdn_isLoaded = false;
  iFJ4jesPileUpPtRefdn_isLoaded = false;
  iVMD0jesPileUpPtRefdn_isLoaded = false;
  iVMD1jesPileUpPtRefdn_isLoaded = false;
  iVMD2jesPileUpPtRefdn_isLoaded = false;
  iVMD3jesPileUpPtRefdn_isLoaded = false;
  iVMD4jesPileUpPtRefdn_isLoaded = false;
  iWMD0jesPileUpPtRefdn_isLoaded = false;
  iWMD1jesPileUpPtRefdn_isLoaded = false;
  iWMD2jesPileUpPtRefdn_isLoaded = false;
  iWMD3jesPileUpPtRefdn_isLoaded = false;
  iWMD4jesPileUpPtRefdn_isLoaded = false;
  METjesPileUpPtRefdn_isLoaded = false;
  NujesPileUpPtRefdn_isLoaded = false;
  NJjesPileUpPtRefdn_isLoaded = false;
  NbLoosejesPileUpPtRefdn_isLoaded = false;
  NbMediumjesPileUpPtRefdn_isLoaded = false;
  NbTightjesPileUpPtRefdn_isLoaded = false;
  NoORNbLoosejesPileUpPtRefdn_isLoaded = false;
  NoORNbMediumjesPileUpPtRefdn_isLoaded = false;
  NoORNbTightjesPileUpPtRefdn_isLoaded = false;
  J0jesPileUpPtRefdn_isLoaded = false;
  J1jesPileUpPtRefdn_isLoaded = false;
  J2jesPileUpPtRefdn_isLoaded = false;
  J3jesPileUpPtRefdn_isLoaded = false;
  J4jesPileUpPtRefdn_isLoaded = false;
  J5jesPileUpPtRefdn_isLoaded = false;
  J6jesPileUpPtRefdn_isLoaded = false;
  J7jesPileUpPtRefdn_isLoaded = false;
  NQJGenjesPileUpPtRefdn_isLoaded = false;
  NBJGenjesPileUpPtRefdn_isLoaded = false;
  NLJGenjesPileUpPtRefdn_isLoaded = false;
  MVVXjesPileUpPtRefdn_isLoaded = false;
  PtVVXjesPileUpPtRefdn_isLoaded = false;
  HTjesPileUpPtRefdn_isLoaded = false;
  HTJjesPileUpPtRefdn_isLoaded = false;
  HTFJjesPileUpPtRefdn_isLoaded = false;
  SumPtFJjesPileUpPtRefdn_isLoaded = false;
  SumPtJjesPileUpPtRefdn_isLoaded = false;
  JsjesPileUpPtBBup_isLoaded = false;
  NFJjesPileUpPtBBup_isLoaded = false;
  FJ0jesPileUpPtBBup_isLoaded = false;
  FJ1jesPileUpPtBBup_isLoaded = false;
  FJ2jesPileUpPtBBup_isLoaded = false;
  FJ3jesPileUpPtBBup_isLoaded = false;
  FJ4jesPileUpPtBBup_isLoaded = false;
  VMD0jesPileUpPtBBup_isLoaded = false;
  VMD1jesPileUpPtBBup_isLoaded = false;
  VMD2jesPileUpPtBBup_isLoaded = false;
  VMD3jesPileUpPtBBup_isLoaded = false;
  VMD4jesPileUpPtBBup_isLoaded = false;
  WMD0jesPileUpPtBBup_isLoaded = false;
  WMD1jesPileUpPtBBup_isLoaded = false;
  WMD2jesPileUpPtBBup_isLoaded = false;
  WMD3jesPileUpPtBBup_isLoaded = false;
  WMD4jesPileUpPtBBup_isLoaded = false;
  NQGen0jesPileUpPtBBup_isLoaded = false;
  NQGen1jesPileUpPtBBup_isLoaded = false;
  NQGen2jesPileUpPtBBup_isLoaded = false;
  NQGen3jesPileUpPtBBup_isLoaded = false;
  NQGen4jesPileUpPtBBup_isLoaded = false;
  NBGen0jesPileUpPtBBup_isLoaded = false;
  NBGen1jesPileUpPtBBup_isLoaded = false;
  NBGen2jesPileUpPtBBup_isLoaded = false;
  NBGen3jesPileUpPtBBup_isLoaded = false;
  NBGen4jesPileUpPtBBup_isLoaded = false;
  NLGen0jesPileUpPtBBup_isLoaded = false;
  NLGen1jesPileUpPtBBup_isLoaded = false;
  NLGen2jesPileUpPtBBup_isLoaded = false;
  NLGen3jesPileUpPtBBup_isLoaded = false;
  NLGen4jesPileUpPtBBup_isLoaded = false;
  NVQGen0jesPileUpPtBBup_isLoaded = false;
  NVQGen1jesPileUpPtBBup_isLoaded = false;
  NVQGen2jesPileUpPtBBup_isLoaded = false;
  NVQGen3jesPileUpPtBBup_isLoaded = false;
  NVQGen4jesPileUpPtBBup_isLoaded = false;
  NiFJjesPileUpPtBBup_isLoaded = false;
  iFJ0jesPileUpPtBBup_isLoaded = false;
  iFJ1jesPileUpPtBBup_isLoaded = false;
  iFJ2jesPileUpPtBBup_isLoaded = false;
  iFJ3jesPileUpPtBBup_isLoaded = false;
  iFJ4jesPileUpPtBBup_isLoaded = false;
  iVMD0jesPileUpPtBBup_isLoaded = false;
  iVMD1jesPileUpPtBBup_isLoaded = false;
  iVMD2jesPileUpPtBBup_isLoaded = false;
  iVMD3jesPileUpPtBBup_isLoaded = false;
  iVMD4jesPileUpPtBBup_isLoaded = false;
  iWMD0jesPileUpPtBBup_isLoaded = false;
  iWMD1jesPileUpPtBBup_isLoaded = false;
  iWMD2jesPileUpPtBBup_isLoaded = false;
  iWMD3jesPileUpPtBBup_isLoaded = false;
  iWMD4jesPileUpPtBBup_isLoaded = false;
  METjesPileUpPtBBup_isLoaded = false;
  NujesPileUpPtBBup_isLoaded = false;
  NJjesPileUpPtBBup_isLoaded = false;
  NbLoosejesPileUpPtBBup_isLoaded = false;
  NbMediumjesPileUpPtBBup_isLoaded = false;
  NbTightjesPileUpPtBBup_isLoaded = false;
  NoORNbLoosejesPileUpPtBBup_isLoaded = false;
  NoORNbMediumjesPileUpPtBBup_isLoaded = false;
  NoORNbTightjesPileUpPtBBup_isLoaded = false;
  J0jesPileUpPtBBup_isLoaded = false;
  J1jesPileUpPtBBup_isLoaded = false;
  J2jesPileUpPtBBup_isLoaded = false;
  J3jesPileUpPtBBup_isLoaded = false;
  J4jesPileUpPtBBup_isLoaded = false;
  J5jesPileUpPtBBup_isLoaded = false;
  J6jesPileUpPtBBup_isLoaded = false;
  J7jesPileUpPtBBup_isLoaded = false;
  NQJGenjesPileUpPtBBup_isLoaded = false;
  NBJGenjesPileUpPtBBup_isLoaded = false;
  NLJGenjesPileUpPtBBup_isLoaded = false;
  MVVXjesPileUpPtBBup_isLoaded = false;
  PtVVXjesPileUpPtBBup_isLoaded = false;
  HTjesPileUpPtBBup_isLoaded = false;
  HTJjesPileUpPtBBup_isLoaded = false;
  HTFJjesPileUpPtBBup_isLoaded = false;
  SumPtFJjesPileUpPtBBup_isLoaded = false;
  SumPtJjesPileUpPtBBup_isLoaded = false;
  JsjesPileUpPtBBdn_isLoaded = false;
  NFJjesPileUpPtBBdn_isLoaded = false;
  FJ0jesPileUpPtBBdn_isLoaded = false;
  FJ1jesPileUpPtBBdn_isLoaded = false;
  FJ2jesPileUpPtBBdn_isLoaded = false;
  FJ3jesPileUpPtBBdn_isLoaded = false;
  FJ4jesPileUpPtBBdn_isLoaded = false;
  VMD0jesPileUpPtBBdn_isLoaded = false;
  VMD1jesPileUpPtBBdn_isLoaded = false;
  VMD2jesPileUpPtBBdn_isLoaded = false;
  VMD3jesPileUpPtBBdn_isLoaded = false;
  VMD4jesPileUpPtBBdn_isLoaded = false;
  WMD0jesPileUpPtBBdn_isLoaded = false;
  WMD1jesPileUpPtBBdn_isLoaded = false;
  WMD2jesPileUpPtBBdn_isLoaded = false;
  WMD3jesPileUpPtBBdn_isLoaded = false;
  WMD4jesPileUpPtBBdn_isLoaded = false;
  NQGen0jesPileUpPtBBdn_isLoaded = false;
  NQGen1jesPileUpPtBBdn_isLoaded = false;
  NQGen2jesPileUpPtBBdn_isLoaded = false;
  NQGen3jesPileUpPtBBdn_isLoaded = false;
  NQGen4jesPileUpPtBBdn_isLoaded = false;
  NBGen0jesPileUpPtBBdn_isLoaded = false;
  NBGen1jesPileUpPtBBdn_isLoaded = false;
  NBGen2jesPileUpPtBBdn_isLoaded = false;
  NBGen3jesPileUpPtBBdn_isLoaded = false;
  NBGen4jesPileUpPtBBdn_isLoaded = false;
  NLGen0jesPileUpPtBBdn_isLoaded = false;
  NLGen1jesPileUpPtBBdn_isLoaded = false;
  NLGen2jesPileUpPtBBdn_isLoaded = false;
  NLGen3jesPileUpPtBBdn_isLoaded = false;
  NLGen4jesPileUpPtBBdn_isLoaded = false;
  NVQGen0jesPileUpPtBBdn_isLoaded = false;
  NVQGen1jesPileUpPtBBdn_isLoaded = false;
  NVQGen2jesPileUpPtBBdn_isLoaded = false;
  NVQGen3jesPileUpPtBBdn_isLoaded = false;
  NVQGen4jesPileUpPtBBdn_isLoaded = false;
  NiFJjesPileUpPtBBdn_isLoaded = false;
  iFJ0jesPileUpPtBBdn_isLoaded = false;
  iFJ1jesPileUpPtBBdn_isLoaded = false;
  iFJ2jesPileUpPtBBdn_isLoaded = false;
  iFJ3jesPileUpPtBBdn_isLoaded = false;
  iFJ4jesPileUpPtBBdn_isLoaded = false;
  iVMD0jesPileUpPtBBdn_isLoaded = false;
  iVMD1jesPileUpPtBBdn_isLoaded = false;
  iVMD2jesPileUpPtBBdn_isLoaded = false;
  iVMD3jesPileUpPtBBdn_isLoaded = false;
  iVMD4jesPileUpPtBBdn_isLoaded = false;
  iWMD0jesPileUpPtBBdn_isLoaded = false;
  iWMD1jesPileUpPtBBdn_isLoaded = false;
  iWMD2jesPileUpPtBBdn_isLoaded = false;
  iWMD3jesPileUpPtBBdn_isLoaded = false;
  iWMD4jesPileUpPtBBdn_isLoaded = false;
  METjesPileUpPtBBdn_isLoaded = false;
  NujesPileUpPtBBdn_isLoaded = false;
  NJjesPileUpPtBBdn_isLoaded = false;
  NbLoosejesPileUpPtBBdn_isLoaded = false;
  NbMediumjesPileUpPtBBdn_isLoaded = false;
  NbTightjesPileUpPtBBdn_isLoaded = false;
  NoORNbLoosejesPileUpPtBBdn_isLoaded = false;
  NoORNbMediumjesPileUpPtBBdn_isLoaded = false;
  NoORNbTightjesPileUpPtBBdn_isLoaded = false;
  J0jesPileUpPtBBdn_isLoaded = false;
  J1jesPileUpPtBBdn_isLoaded = false;
  J2jesPileUpPtBBdn_isLoaded = false;
  J3jesPileUpPtBBdn_isLoaded = false;
  J4jesPileUpPtBBdn_isLoaded = false;
  J5jesPileUpPtBBdn_isLoaded = false;
  J6jesPileUpPtBBdn_isLoaded = false;
  J7jesPileUpPtBBdn_isLoaded = false;
  NQJGenjesPileUpPtBBdn_isLoaded = false;
  NBJGenjesPileUpPtBBdn_isLoaded = false;
  NLJGenjesPileUpPtBBdn_isLoaded = false;
  MVVXjesPileUpPtBBdn_isLoaded = false;
  PtVVXjesPileUpPtBBdn_isLoaded = false;
  HTjesPileUpPtBBdn_isLoaded = false;
  HTJjesPileUpPtBBdn_isLoaded = false;
  HTFJjesPileUpPtBBdn_isLoaded = false;
  SumPtFJjesPileUpPtBBdn_isLoaded = false;
  SumPtJjesPileUpPtBBdn_isLoaded = false;
  JsjesPileUpPtEC1up_isLoaded = false;
  NFJjesPileUpPtEC1up_isLoaded = false;
  FJ0jesPileUpPtEC1up_isLoaded = false;
  FJ1jesPileUpPtEC1up_isLoaded = false;
  FJ2jesPileUpPtEC1up_isLoaded = false;
  FJ3jesPileUpPtEC1up_isLoaded = false;
  FJ4jesPileUpPtEC1up_isLoaded = false;
  VMD0jesPileUpPtEC1up_isLoaded = false;
  VMD1jesPileUpPtEC1up_isLoaded = false;
  VMD2jesPileUpPtEC1up_isLoaded = false;
  VMD3jesPileUpPtEC1up_isLoaded = false;
  VMD4jesPileUpPtEC1up_isLoaded = false;
  WMD0jesPileUpPtEC1up_isLoaded = false;
  WMD1jesPileUpPtEC1up_isLoaded = false;
  WMD2jesPileUpPtEC1up_isLoaded = false;
  WMD3jesPileUpPtEC1up_isLoaded = false;
  WMD4jesPileUpPtEC1up_isLoaded = false;
  NQGen0jesPileUpPtEC1up_isLoaded = false;
  NQGen1jesPileUpPtEC1up_isLoaded = false;
  NQGen2jesPileUpPtEC1up_isLoaded = false;
  NQGen3jesPileUpPtEC1up_isLoaded = false;
  NQGen4jesPileUpPtEC1up_isLoaded = false;
  NBGen0jesPileUpPtEC1up_isLoaded = false;
  NBGen1jesPileUpPtEC1up_isLoaded = false;
  NBGen2jesPileUpPtEC1up_isLoaded = false;
  NBGen3jesPileUpPtEC1up_isLoaded = false;
  NBGen4jesPileUpPtEC1up_isLoaded = false;
  NLGen0jesPileUpPtEC1up_isLoaded = false;
  NLGen1jesPileUpPtEC1up_isLoaded = false;
  NLGen2jesPileUpPtEC1up_isLoaded = false;
  NLGen3jesPileUpPtEC1up_isLoaded = false;
  NLGen4jesPileUpPtEC1up_isLoaded = false;
  NVQGen0jesPileUpPtEC1up_isLoaded = false;
  NVQGen1jesPileUpPtEC1up_isLoaded = false;
  NVQGen2jesPileUpPtEC1up_isLoaded = false;
  NVQGen3jesPileUpPtEC1up_isLoaded = false;
  NVQGen4jesPileUpPtEC1up_isLoaded = false;
  NiFJjesPileUpPtEC1up_isLoaded = false;
  iFJ0jesPileUpPtEC1up_isLoaded = false;
  iFJ1jesPileUpPtEC1up_isLoaded = false;
  iFJ2jesPileUpPtEC1up_isLoaded = false;
  iFJ3jesPileUpPtEC1up_isLoaded = false;
  iFJ4jesPileUpPtEC1up_isLoaded = false;
  iVMD0jesPileUpPtEC1up_isLoaded = false;
  iVMD1jesPileUpPtEC1up_isLoaded = false;
  iVMD2jesPileUpPtEC1up_isLoaded = false;
  iVMD3jesPileUpPtEC1up_isLoaded = false;
  iVMD4jesPileUpPtEC1up_isLoaded = false;
  iWMD0jesPileUpPtEC1up_isLoaded = false;
  iWMD1jesPileUpPtEC1up_isLoaded = false;
  iWMD2jesPileUpPtEC1up_isLoaded = false;
  iWMD3jesPileUpPtEC1up_isLoaded = false;
  iWMD4jesPileUpPtEC1up_isLoaded = false;
  METjesPileUpPtEC1up_isLoaded = false;
  NujesPileUpPtEC1up_isLoaded = false;
  NJjesPileUpPtEC1up_isLoaded = false;
  NbLoosejesPileUpPtEC1up_isLoaded = false;
  NbMediumjesPileUpPtEC1up_isLoaded = false;
  NbTightjesPileUpPtEC1up_isLoaded = false;
  NoORNbLoosejesPileUpPtEC1up_isLoaded = false;
  NoORNbMediumjesPileUpPtEC1up_isLoaded = false;
  NoORNbTightjesPileUpPtEC1up_isLoaded = false;
  J0jesPileUpPtEC1up_isLoaded = false;
  J1jesPileUpPtEC1up_isLoaded = false;
  J2jesPileUpPtEC1up_isLoaded = false;
  J3jesPileUpPtEC1up_isLoaded = false;
  J4jesPileUpPtEC1up_isLoaded = false;
  J5jesPileUpPtEC1up_isLoaded = false;
  J6jesPileUpPtEC1up_isLoaded = false;
  J7jesPileUpPtEC1up_isLoaded = false;
  NQJGenjesPileUpPtEC1up_isLoaded = false;
  NBJGenjesPileUpPtEC1up_isLoaded = false;
  NLJGenjesPileUpPtEC1up_isLoaded = false;
  MVVXjesPileUpPtEC1up_isLoaded = false;
  PtVVXjesPileUpPtEC1up_isLoaded = false;
  HTjesPileUpPtEC1up_isLoaded = false;
  HTJjesPileUpPtEC1up_isLoaded = false;
  HTFJjesPileUpPtEC1up_isLoaded = false;
  SumPtFJjesPileUpPtEC1up_isLoaded = false;
  SumPtJjesPileUpPtEC1up_isLoaded = false;
  JsjesPileUpPtEC1dn_isLoaded = false;
  NFJjesPileUpPtEC1dn_isLoaded = false;
  FJ0jesPileUpPtEC1dn_isLoaded = false;
  FJ1jesPileUpPtEC1dn_isLoaded = false;
  FJ2jesPileUpPtEC1dn_isLoaded = false;
  FJ3jesPileUpPtEC1dn_isLoaded = false;
  FJ4jesPileUpPtEC1dn_isLoaded = false;
  VMD0jesPileUpPtEC1dn_isLoaded = false;
  VMD1jesPileUpPtEC1dn_isLoaded = false;
  VMD2jesPileUpPtEC1dn_isLoaded = false;
  VMD3jesPileUpPtEC1dn_isLoaded = false;
  VMD4jesPileUpPtEC1dn_isLoaded = false;
  WMD0jesPileUpPtEC1dn_isLoaded = false;
  WMD1jesPileUpPtEC1dn_isLoaded = false;
  WMD2jesPileUpPtEC1dn_isLoaded = false;
  WMD3jesPileUpPtEC1dn_isLoaded = false;
  WMD4jesPileUpPtEC1dn_isLoaded = false;
  NQGen0jesPileUpPtEC1dn_isLoaded = false;
  NQGen1jesPileUpPtEC1dn_isLoaded = false;
  NQGen2jesPileUpPtEC1dn_isLoaded = false;
  NQGen3jesPileUpPtEC1dn_isLoaded = false;
  NQGen4jesPileUpPtEC1dn_isLoaded = false;
  NBGen0jesPileUpPtEC1dn_isLoaded = false;
  NBGen1jesPileUpPtEC1dn_isLoaded = false;
  NBGen2jesPileUpPtEC1dn_isLoaded = false;
  NBGen3jesPileUpPtEC1dn_isLoaded = false;
  NBGen4jesPileUpPtEC1dn_isLoaded = false;
  NLGen0jesPileUpPtEC1dn_isLoaded = false;
  NLGen1jesPileUpPtEC1dn_isLoaded = false;
  NLGen2jesPileUpPtEC1dn_isLoaded = false;
  NLGen3jesPileUpPtEC1dn_isLoaded = false;
  NLGen4jesPileUpPtEC1dn_isLoaded = false;
  NVQGen0jesPileUpPtEC1dn_isLoaded = false;
  NVQGen1jesPileUpPtEC1dn_isLoaded = false;
  NVQGen2jesPileUpPtEC1dn_isLoaded = false;
  NVQGen3jesPileUpPtEC1dn_isLoaded = false;
  NVQGen4jesPileUpPtEC1dn_isLoaded = false;
  NiFJjesPileUpPtEC1dn_isLoaded = false;
  iFJ0jesPileUpPtEC1dn_isLoaded = false;
  iFJ1jesPileUpPtEC1dn_isLoaded = false;
  iFJ2jesPileUpPtEC1dn_isLoaded = false;
  iFJ3jesPileUpPtEC1dn_isLoaded = false;
  iFJ4jesPileUpPtEC1dn_isLoaded = false;
  iVMD0jesPileUpPtEC1dn_isLoaded = false;
  iVMD1jesPileUpPtEC1dn_isLoaded = false;
  iVMD2jesPileUpPtEC1dn_isLoaded = false;
  iVMD3jesPileUpPtEC1dn_isLoaded = false;
  iVMD4jesPileUpPtEC1dn_isLoaded = false;
  iWMD0jesPileUpPtEC1dn_isLoaded = false;
  iWMD1jesPileUpPtEC1dn_isLoaded = false;
  iWMD2jesPileUpPtEC1dn_isLoaded = false;
  iWMD3jesPileUpPtEC1dn_isLoaded = false;
  iWMD4jesPileUpPtEC1dn_isLoaded = false;
  METjesPileUpPtEC1dn_isLoaded = false;
  NujesPileUpPtEC1dn_isLoaded = false;
  NJjesPileUpPtEC1dn_isLoaded = false;
  NbLoosejesPileUpPtEC1dn_isLoaded = false;
  NbMediumjesPileUpPtEC1dn_isLoaded = false;
  NbTightjesPileUpPtEC1dn_isLoaded = false;
  NoORNbLoosejesPileUpPtEC1dn_isLoaded = false;
  NoORNbMediumjesPileUpPtEC1dn_isLoaded = false;
  NoORNbTightjesPileUpPtEC1dn_isLoaded = false;
  J0jesPileUpPtEC1dn_isLoaded = false;
  J1jesPileUpPtEC1dn_isLoaded = false;
  J2jesPileUpPtEC1dn_isLoaded = false;
  J3jesPileUpPtEC1dn_isLoaded = false;
  J4jesPileUpPtEC1dn_isLoaded = false;
  J5jesPileUpPtEC1dn_isLoaded = false;
  J6jesPileUpPtEC1dn_isLoaded = false;
  J7jesPileUpPtEC1dn_isLoaded = false;
  NQJGenjesPileUpPtEC1dn_isLoaded = false;
  NBJGenjesPileUpPtEC1dn_isLoaded = false;
  NLJGenjesPileUpPtEC1dn_isLoaded = false;
  MVVXjesPileUpPtEC1dn_isLoaded = false;
  PtVVXjesPileUpPtEC1dn_isLoaded = false;
  HTjesPileUpPtEC1dn_isLoaded = false;
  HTJjesPileUpPtEC1dn_isLoaded = false;
  HTFJjesPileUpPtEC1dn_isLoaded = false;
  SumPtFJjesPileUpPtEC1dn_isLoaded = false;
  SumPtJjesPileUpPtEC1dn_isLoaded = false;
  JsjesPileUpPtEC2up_isLoaded = false;
  NFJjesPileUpPtEC2up_isLoaded = false;
  FJ0jesPileUpPtEC2up_isLoaded = false;
  FJ1jesPileUpPtEC2up_isLoaded = false;
  FJ2jesPileUpPtEC2up_isLoaded = false;
  FJ3jesPileUpPtEC2up_isLoaded = false;
  FJ4jesPileUpPtEC2up_isLoaded = false;
  VMD0jesPileUpPtEC2up_isLoaded = false;
  VMD1jesPileUpPtEC2up_isLoaded = false;
  VMD2jesPileUpPtEC2up_isLoaded = false;
  VMD3jesPileUpPtEC2up_isLoaded = false;
  VMD4jesPileUpPtEC2up_isLoaded = false;
  WMD0jesPileUpPtEC2up_isLoaded = false;
  WMD1jesPileUpPtEC2up_isLoaded = false;
  WMD2jesPileUpPtEC2up_isLoaded = false;
  WMD3jesPileUpPtEC2up_isLoaded = false;
  WMD4jesPileUpPtEC2up_isLoaded = false;
  NQGen0jesPileUpPtEC2up_isLoaded = false;
  NQGen1jesPileUpPtEC2up_isLoaded = false;
  NQGen2jesPileUpPtEC2up_isLoaded = false;
  NQGen3jesPileUpPtEC2up_isLoaded = false;
  NQGen4jesPileUpPtEC2up_isLoaded = false;
  NBGen0jesPileUpPtEC2up_isLoaded = false;
  NBGen1jesPileUpPtEC2up_isLoaded = false;
  NBGen2jesPileUpPtEC2up_isLoaded = false;
  NBGen3jesPileUpPtEC2up_isLoaded = false;
  NBGen4jesPileUpPtEC2up_isLoaded = false;
  NLGen0jesPileUpPtEC2up_isLoaded = false;
  NLGen1jesPileUpPtEC2up_isLoaded = false;
  NLGen2jesPileUpPtEC2up_isLoaded = false;
  NLGen3jesPileUpPtEC2up_isLoaded = false;
  NLGen4jesPileUpPtEC2up_isLoaded = false;
  NVQGen0jesPileUpPtEC2up_isLoaded = false;
  NVQGen1jesPileUpPtEC2up_isLoaded = false;
  NVQGen2jesPileUpPtEC2up_isLoaded = false;
  NVQGen3jesPileUpPtEC2up_isLoaded = false;
  NVQGen4jesPileUpPtEC2up_isLoaded = false;
  NiFJjesPileUpPtEC2up_isLoaded = false;
  iFJ0jesPileUpPtEC2up_isLoaded = false;
  iFJ1jesPileUpPtEC2up_isLoaded = false;
  iFJ2jesPileUpPtEC2up_isLoaded = false;
  iFJ3jesPileUpPtEC2up_isLoaded = false;
  iFJ4jesPileUpPtEC2up_isLoaded = false;
  iVMD0jesPileUpPtEC2up_isLoaded = false;
  iVMD1jesPileUpPtEC2up_isLoaded = false;
  iVMD2jesPileUpPtEC2up_isLoaded = false;
  iVMD3jesPileUpPtEC2up_isLoaded = false;
  iVMD4jesPileUpPtEC2up_isLoaded = false;
  iWMD0jesPileUpPtEC2up_isLoaded = false;
  iWMD1jesPileUpPtEC2up_isLoaded = false;
  iWMD2jesPileUpPtEC2up_isLoaded = false;
  iWMD3jesPileUpPtEC2up_isLoaded = false;
  iWMD4jesPileUpPtEC2up_isLoaded = false;
  METjesPileUpPtEC2up_isLoaded = false;
  NujesPileUpPtEC2up_isLoaded = false;
  NJjesPileUpPtEC2up_isLoaded = false;
  NbLoosejesPileUpPtEC2up_isLoaded = false;
  NbMediumjesPileUpPtEC2up_isLoaded = false;
  NbTightjesPileUpPtEC2up_isLoaded = false;
  NoORNbLoosejesPileUpPtEC2up_isLoaded = false;
  NoORNbMediumjesPileUpPtEC2up_isLoaded = false;
  NoORNbTightjesPileUpPtEC2up_isLoaded = false;
  J0jesPileUpPtEC2up_isLoaded = false;
  J1jesPileUpPtEC2up_isLoaded = false;
  J2jesPileUpPtEC2up_isLoaded = false;
  J3jesPileUpPtEC2up_isLoaded = false;
  J4jesPileUpPtEC2up_isLoaded = false;
  J5jesPileUpPtEC2up_isLoaded = false;
  J6jesPileUpPtEC2up_isLoaded = false;
  J7jesPileUpPtEC2up_isLoaded = false;
  NQJGenjesPileUpPtEC2up_isLoaded = false;
  NBJGenjesPileUpPtEC2up_isLoaded = false;
  NLJGenjesPileUpPtEC2up_isLoaded = false;
  MVVXjesPileUpPtEC2up_isLoaded = false;
  PtVVXjesPileUpPtEC2up_isLoaded = false;
  HTjesPileUpPtEC2up_isLoaded = false;
  HTJjesPileUpPtEC2up_isLoaded = false;
  HTFJjesPileUpPtEC2up_isLoaded = false;
  SumPtFJjesPileUpPtEC2up_isLoaded = false;
  SumPtJjesPileUpPtEC2up_isLoaded = false;
  JsjesPileUpPtEC2dn_isLoaded = false;
  NFJjesPileUpPtEC2dn_isLoaded = false;
  FJ0jesPileUpPtEC2dn_isLoaded = false;
  FJ1jesPileUpPtEC2dn_isLoaded = false;
  FJ2jesPileUpPtEC2dn_isLoaded = false;
  FJ3jesPileUpPtEC2dn_isLoaded = false;
  FJ4jesPileUpPtEC2dn_isLoaded = false;
  VMD0jesPileUpPtEC2dn_isLoaded = false;
  VMD1jesPileUpPtEC2dn_isLoaded = false;
  VMD2jesPileUpPtEC2dn_isLoaded = false;
  VMD3jesPileUpPtEC2dn_isLoaded = false;
  VMD4jesPileUpPtEC2dn_isLoaded = false;
  WMD0jesPileUpPtEC2dn_isLoaded = false;
  WMD1jesPileUpPtEC2dn_isLoaded = false;
  WMD2jesPileUpPtEC2dn_isLoaded = false;
  WMD3jesPileUpPtEC2dn_isLoaded = false;
  WMD4jesPileUpPtEC2dn_isLoaded = false;
  NQGen0jesPileUpPtEC2dn_isLoaded = false;
  NQGen1jesPileUpPtEC2dn_isLoaded = false;
  NQGen2jesPileUpPtEC2dn_isLoaded = false;
  NQGen3jesPileUpPtEC2dn_isLoaded = false;
  NQGen4jesPileUpPtEC2dn_isLoaded = false;
  NBGen0jesPileUpPtEC2dn_isLoaded = false;
  NBGen1jesPileUpPtEC2dn_isLoaded = false;
  NBGen2jesPileUpPtEC2dn_isLoaded = false;
  NBGen3jesPileUpPtEC2dn_isLoaded = false;
  NBGen4jesPileUpPtEC2dn_isLoaded = false;
  NLGen0jesPileUpPtEC2dn_isLoaded = false;
  NLGen1jesPileUpPtEC2dn_isLoaded = false;
  NLGen2jesPileUpPtEC2dn_isLoaded = false;
  NLGen3jesPileUpPtEC2dn_isLoaded = false;
  NLGen4jesPileUpPtEC2dn_isLoaded = false;
  NVQGen0jesPileUpPtEC2dn_isLoaded = false;
  NVQGen1jesPileUpPtEC2dn_isLoaded = false;
  NVQGen2jesPileUpPtEC2dn_isLoaded = false;
  NVQGen3jesPileUpPtEC2dn_isLoaded = false;
  NVQGen4jesPileUpPtEC2dn_isLoaded = false;
  NiFJjesPileUpPtEC2dn_isLoaded = false;
  iFJ0jesPileUpPtEC2dn_isLoaded = false;
  iFJ1jesPileUpPtEC2dn_isLoaded = false;
  iFJ2jesPileUpPtEC2dn_isLoaded = false;
  iFJ3jesPileUpPtEC2dn_isLoaded = false;
  iFJ4jesPileUpPtEC2dn_isLoaded = false;
  iVMD0jesPileUpPtEC2dn_isLoaded = false;
  iVMD1jesPileUpPtEC2dn_isLoaded = false;
  iVMD2jesPileUpPtEC2dn_isLoaded = false;
  iVMD3jesPileUpPtEC2dn_isLoaded = false;
  iVMD4jesPileUpPtEC2dn_isLoaded = false;
  iWMD0jesPileUpPtEC2dn_isLoaded = false;
  iWMD1jesPileUpPtEC2dn_isLoaded = false;
  iWMD2jesPileUpPtEC2dn_isLoaded = false;
  iWMD3jesPileUpPtEC2dn_isLoaded = false;
  iWMD4jesPileUpPtEC2dn_isLoaded = false;
  METjesPileUpPtEC2dn_isLoaded = false;
  NujesPileUpPtEC2dn_isLoaded = false;
  NJjesPileUpPtEC2dn_isLoaded = false;
  NbLoosejesPileUpPtEC2dn_isLoaded = false;
  NbMediumjesPileUpPtEC2dn_isLoaded = false;
  NbTightjesPileUpPtEC2dn_isLoaded = false;
  NoORNbLoosejesPileUpPtEC2dn_isLoaded = false;
  NoORNbMediumjesPileUpPtEC2dn_isLoaded = false;
  NoORNbTightjesPileUpPtEC2dn_isLoaded = false;
  J0jesPileUpPtEC2dn_isLoaded = false;
  J1jesPileUpPtEC2dn_isLoaded = false;
  J2jesPileUpPtEC2dn_isLoaded = false;
  J3jesPileUpPtEC2dn_isLoaded = false;
  J4jesPileUpPtEC2dn_isLoaded = false;
  J5jesPileUpPtEC2dn_isLoaded = false;
  J6jesPileUpPtEC2dn_isLoaded = false;
  J7jesPileUpPtEC2dn_isLoaded = false;
  NQJGenjesPileUpPtEC2dn_isLoaded = false;
  NBJGenjesPileUpPtEC2dn_isLoaded = false;
  NLJGenjesPileUpPtEC2dn_isLoaded = false;
  MVVXjesPileUpPtEC2dn_isLoaded = false;
  PtVVXjesPileUpPtEC2dn_isLoaded = false;
  HTjesPileUpPtEC2dn_isLoaded = false;
  HTJjesPileUpPtEC2dn_isLoaded = false;
  HTFJjesPileUpPtEC2dn_isLoaded = false;
  SumPtFJjesPileUpPtEC2dn_isLoaded = false;
  SumPtJjesPileUpPtEC2dn_isLoaded = false;
  JsjesPileUpPtHFup_isLoaded = false;
  NFJjesPileUpPtHFup_isLoaded = false;
  FJ0jesPileUpPtHFup_isLoaded = false;
  FJ1jesPileUpPtHFup_isLoaded = false;
  FJ2jesPileUpPtHFup_isLoaded = false;
  FJ3jesPileUpPtHFup_isLoaded = false;
  FJ4jesPileUpPtHFup_isLoaded = false;
  VMD0jesPileUpPtHFup_isLoaded = false;
  VMD1jesPileUpPtHFup_isLoaded = false;
  VMD2jesPileUpPtHFup_isLoaded = false;
  VMD3jesPileUpPtHFup_isLoaded = false;
  VMD4jesPileUpPtHFup_isLoaded = false;
  WMD0jesPileUpPtHFup_isLoaded = false;
  WMD1jesPileUpPtHFup_isLoaded = false;
  WMD2jesPileUpPtHFup_isLoaded = false;
  WMD3jesPileUpPtHFup_isLoaded = false;
  WMD4jesPileUpPtHFup_isLoaded = false;
  NQGen0jesPileUpPtHFup_isLoaded = false;
  NQGen1jesPileUpPtHFup_isLoaded = false;
  NQGen2jesPileUpPtHFup_isLoaded = false;
  NQGen3jesPileUpPtHFup_isLoaded = false;
  NQGen4jesPileUpPtHFup_isLoaded = false;
  NBGen0jesPileUpPtHFup_isLoaded = false;
  NBGen1jesPileUpPtHFup_isLoaded = false;
  NBGen2jesPileUpPtHFup_isLoaded = false;
  NBGen3jesPileUpPtHFup_isLoaded = false;
  NBGen4jesPileUpPtHFup_isLoaded = false;
  NLGen0jesPileUpPtHFup_isLoaded = false;
  NLGen1jesPileUpPtHFup_isLoaded = false;
  NLGen2jesPileUpPtHFup_isLoaded = false;
  NLGen3jesPileUpPtHFup_isLoaded = false;
  NLGen4jesPileUpPtHFup_isLoaded = false;
  NVQGen0jesPileUpPtHFup_isLoaded = false;
  NVQGen1jesPileUpPtHFup_isLoaded = false;
  NVQGen2jesPileUpPtHFup_isLoaded = false;
  NVQGen3jesPileUpPtHFup_isLoaded = false;
  NVQGen4jesPileUpPtHFup_isLoaded = false;
  NiFJjesPileUpPtHFup_isLoaded = false;
  iFJ0jesPileUpPtHFup_isLoaded = false;
  iFJ1jesPileUpPtHFup_isLoaded = false;
  iFJ2jesPileUpPtHFup_isLoaded = false;
  iFJ3jesPileUpPtHFup_isLoaded = false;
  iFJ4jesPileUpPtHFup_isLoaded = false;
  iVMD0jesPileUpPtHFup_isLoaded = false;
  iVMD1jesPileUpPtHFup_isLoaded = false;
  iVMD2jesPileUpPtHFup_isLoaded = false;
  iVMD3jesPileUpPtHFup_isLoaded = false;
  iVMD4jesPileUpPtHFup_isLoaded = false;
  iWMD0jesPileUpPtHFup_isLoaded = false;
  iWMD1jesPileUpPtHFup_isLoaded = false;
  iWMD2jesPileUpPtHFup_isLoaded = false;
  iWMD3jesPileUpPtHFup_isLoaded = false;
  iWMD4jesPileUpPtHFup_isLoaded = false;
  METjesPileUpPtHFup_isLoaded = false;
  NujesPileUpPtHFup_isLoaded = false;
  NJjesPileUpPtHFup_isLoaded = false;
  NbLoosejesPileUpPtHFup_isLoaded = false;
  NbMediumjesPileUpPtHFup_isLoaded = false;
  NbTightjesPileUpPtHFup_isLoaded = false;
  NoORNbLoosejesPileUpPtHFup_isLoaded = false;
  NoORNbMediumjesPileUpPtHFup_isLoaded = false;
  NoORNbTightjesPileUpPtHFup_isLoaded = false;
  J0jesPileUpPtHFup_isLoaded = false;
  J1jesPileUpPtHFup_isLoaded = false;
  J2jesPileUpPtHFup_isLoaded = false;
  J3jesPileUpPtHFup_isLoaded = false;
  J4jesPileUpPtHFup_isLoaded = false;
  J5jesPileUpPtHFup_isLoaded = false;
  J6jesPileUpPtHFup_isLoaded = false;
  J7jesPileUpPtHFup_isLoaded = false;
  NQJGenjesPileUpPtHFup_isLoaded = false;
  NBJGenjesPileUpPtHFup_isLoaded = false;
  NLJGenjesPileUpPtHFup_isLoaded = false;
  MVVXjesPileUpPtHFup_isLoaded = false;
  PtVVXjesPileUpPtHFup_isLoaded = false;
  HTjesPileUpPtHFup_isLoaded = false;
  HTJjesPileUpPtHFup_isLoaded = false;
  HTFJjesPileUpPtHFup_isLoaded = false;
  SumPtFJjesPileUpPtHFup_isLoaded = false;
  SumPtJjesPileUpPtHFup_isLoaded = false;
  JsjesPileUpPtHFdn_isLoaded = false;
  NFJjesPileUpPtHFdn_isLoaded = false;
  FJ0jesPileUpPtHFdn_isLoaded = false;
  FJ1jesPileUpPtHFdn_isLoaded = false;
  FJ2jesPileUpPtHFdn_isLoaded = false;
  FJ3jesPileUpPtHFdn_isLoaded = false;
  FJ4jesPileUpPtHFdn_isLoaded = false;
  VMD0jesPileUpPtHFdn_isLoaded = false;
  VMD1jesPileUpPtHFdn_isLoaded = false;
  VMD2jesPileUpPtHFdn_isLoaded = false;
  VMD3jesPileUpPtHFdn_isLoaded = false;
  VMD4jesPileUpPtHFdn_isLoaded = false;
  WMD0jesPileUpPtHFdn_isLoaded = false;
  WMD1jesPileUpPtHFdn_isLoaded = false;
  WMD2jesPileUpPtHFdn_isLoaded = false;
  WMD3jesPileUpPtHFdn_isLoaded = false;
  WMD4jesPileUpPtHFdn_isLoaded = false;
  NQGen0jesPileUpPtHFdn_isLoaded = false;
  NQGen1jesPileUpPtHFdn_isLoaded = false;
  NQGen2jesPileUpPtHFdn_isLoaded = false;
  NQGen3jesPileUpPtHFdn_isLoaded = false;
  NQGen4jesPileUpPtHFdn_isLoaded = false;
  NBGen0jesPileUpPtHFdn_isLoaded = false;
  NBGen1jesPileUpPtHFdn_isLoaded = false;
  NBGen2jesPileUpPtHFdn_isLoaded = false;
  NBGen3jesPileUpPtHFdn_isLoaded = false;
  NBGen4jesPileUpPtHFdn_isLoaded = false;
  NLGen0jesPileUpPtHFdn_isLoaded = false;
  NLGen1jesPileUpPtHFdn_isLoaded = false;
  NLGen2jesPileUpPtHFdn_isLoaded = false;
  NLGen3jesPileUpPtHFdn_isLoaded = false;
  NLGen4jesPileUpPtHFdn_isLoaded = false;
  NVQGen0jesPileUpPtHFdn_isLoaded = false;
  NVQGen1jesPileUpPtHFdn_isLoaded = false;
  NVQGen2jesPileUpPtHFdn_isLoaded = false;
  NVQGen3jesPileUpPtHFdn_isLoaded = false;
  NVQGen4jesPileUpPtHFdn_isLoaded = false;
  NiFJjesPileUpPtHFdn_isLoaded = false;
  iFJ0jesPileUpPtHFdn_isLoaded = false;
  iFJ1jesPileUpPtHFdn_isLoaded = false;
  iFJ2jesPileUpPtHFdn_isLoaded = false;
  iFJ3jesPileUpPtHFdn_isLoaded = false;
  iFJ4jesPileUpPtHFdn_isLoaded = false;
  iVMD0jesPileUpPtHFdn_isLoaded = false;
  iVMD1jesPileUpPtHFdn_isLoaded = false;
  iVMD2jesPileUpPtHFdn_isLoaded = false;
  iVMD3jesPileUpPtHFdn_isLoaded = false;
  iVMD4jesPileUpPtHFdn_isLoaded = false;
  iWMD0jesPileUpPtHFdn_isLoaded = false;
  iWMD1jesPileUpPtHFdn_isLoaded = false;
  iWMD2jesPileUpPtHFdn_isLoaded = false;
  iWMD3jesPileUpPtHFdn_isLoaded = false;
  iWMD4jesPileUpPtHFdn_isLoaded = false;
  METjesPileUpPtHFdn_isLoaded = false;
  NujesPileUpPtHFdn_isLoaded = false;
  NJjesPileUpPtHFdn_isLoaded = false;
  NbLoosejesPileUpPtHFdn_isLoaded = false;
  NbMediumjesPileUpPtHFdn_isLoaded = false;
  NbTightjesPileUpPtHFdn_isLoaded = false;
  NoORNbLoosejesPileUpPtHFdn_isLoaded = false;
  NoORNbMediumjesPileUpPtHFdn_isLoaded = false;
  NoORNbTightjesPileUpPtHFdn_isLoaded = false;
  J0jesPileUpPtHFdn_isLoaded = false;
  J1jesPileUpPtHFdn_isLoaded = false;
  J2jesPileUpPtHFdn_isLoaded = false;
  J3jesPileUpPtHFdn_isLoaded = false;
  J4jesPileUpPtHFdn_isLoaded = false;
  J5jesPileUpPtHFdn_isLoaded = false;
  J6jesPileUpPtHFdn_isLoaded = false;
  J7jesPileUpPtHFdn_isLoaded = false;
  NQJGenjesPileUpPtHFdn_isLoaded = false;
  NBJGenjesPileUpPtHFdn_isLoaded = false;
  NLJGenjesPileUpPtHFdn_isLoaded = false;
  MVVXjesPileUpPtHFdn_isLoaded = false;
  PtVVXjesPileUpPtHFdn_isLoaded = false;
  HTjesPileUpPtHFdn_isLoaded = false;
  HTJjesPileUpPtHFdn_isLoaded = false;
  HTFJjesPileUpPtHFdn_isLoaded = false;
  SumPtFJjesPileUpPtHFdn_isLoaded = false;
  SumPtJjesPileUpPtHFdn_isLoaded = false;
  GenV0_isLoaded = false;
  GenV1_isLoaded = false;
  GenV2_isLoaded = false;
  isHad0_isLoaded = false;
  isHad1_isLoaded = false;
  isHad2_isLoaded = false;
  GenF00_isLoaded = false;
  GenF01_isLoaded = false;
  GenF10_isLoaded = false;
  GenF11_isLoaded = false;
  GenF20_isLoaded = false;
  GenF21_isLoaded = false;
}

void VVV0Tree::LoadAllBranches() {
  // load all branches
  if (isData_branch != 0) isData();
  if (run_branch != 0) run();
  if (lumi_branch != 0) lumi();
  if (evt_branch != 0) evt();
  if (year_branch != 0) year();
  if (genWeight_branch != 0) genWeight();
  if (wgt_branch != 0) wgt();
  if (LHEReweightingWeight_branch != 0) LHEReweightingWeight();
  if (prefireWgt_branch != 0) prefireWgt();
  if (prefireWgtUp_branch != 0) prefireWgtUp();
  if (prefireWgtDn_branch != 0) prefireWgtDn();
  if (puWgt_branch != 0) puWgt();
  if (puWgtUp_branch != 0) puWgtUp();
  if (puWgtDn_branch != 0) puWgtDn();
  if (pu_nPU_branch != 0) pu_nPU();
  if (pu_nTrueInt_branch != 0) pu_nTrueInt();
  if (trigWgt_branch != 0) trigWgt();
  if (trigWgtUp_branch != 0) trigWgtUp();
  if (trigWgtDn_branch != 0) trigWgtDn();
  if (PDF_branch != 0) PDF();
  if (QCDScale_branch != 0) QCDScale();
  if (trigger_branch != 0) trigger();
  if (is0Lep_branch != 0) is0Lep();
  if (is1Lep_branch != 0) is1Lep();
  if (Lep_branch != 0) Lep();
  if (LepFlav_branch != 0) LepFlav();
  if (Js_branch != 0) Js();
  if (NFJ_branch != 0) NFJ();
  if (FJ0_branch != 0) FJ0();
  if (FJ1_branch != 0) FJ1();
  if (FJ2_branch != 0) FJ2();
  if (FJ3_branch != 0) FJ3();
  if (FJ4_branch != 0) FJ4();
  if (VMD0_branch != 0) VMD0();
  if (VMD1_branch != 0) VMD1();
  if (VMD2_branch != 0) VMD2();
  if (VMD3_branch != 0) VMD3();
  if (VMD4_branch != 0) VMD4();
  if (WMD0_branch != 0) WMD0();
  if (WMD1_branch != 0) WMD1();
  if (WMD2_branch != 0) WMD2();
  if (WMD3_branch != 0) WMD3();
  if (WMD4_branch != 0) WMD4();
  if (NQGen0_branch != 0) NQGen0();
  if (NQGen1_branch != 0) NQGen1();
  if (NQGen2_branch != 0) NQGen2();
  if (NQGen3_branch != 0) NQGen3();
  if (NQGen4_branch != 0) NQGen4();
  if (NBGen0_branch != 0) NBGen0();
  if (NBGen1_branch != 0) NBGen1();
  if (NBGen2_branch != 0) NBGen2();
  if (NBGen3_branch != 0) NBGen3();
  if (NBGen4_branch != 0) NBGen4();
  if (NLGen0_branch != 0) NLGen0();
  if (NLGen1_branch != 0) NLGen1();
  if (NLGen2_branch != 0) NLGen2();
  if (NLGen3_branch != 0) NLGen3();
  if (NLGen4_branch != 0) NLGen4();
  if (NVQGen0_branch != 0) NVQGen0();
  if (NVQGen1_branch != 0) NVQGen1();
  if (NVQGen2_branch != 0) NVQGen2();
  if (NVQGen3_branch != 0) NVQGen3();
  if (NVQGen4_branch != 0) NVQGen4();
  if (NiFJ_branch != 0) NiFJ();
  if (iFJ0_branch != 0) iFJ0();
  if (iFJ1_branch != 0) iFJ1();
  if (iFJ2_branch != 0) iFJ2();
  if (iFJ3_branch != 0) iFJ3();
  if (iFJ4_branch != 0) iFJ4();
  if (iVMD0_branch != 0) iVMD0();
  if (iVMD1_branch != 0) iVMD1();
  if (iVMD2_branch != 0) iVMD2();
  if (iVMD3_branch != 0) iVMD3();
  if (iVMD4_branch != 0) iVMD4();
  if (iWMD0_branch != 0) iWMD0();
  if (iWMD1_branch != 0) iWMD1();
  if (iWMD2_branch != 0) iWMD2();
  if (iWMD3_branch != 0) iWMD3();
  if (iWMD4_branch != 0) iWMD4();
  if (MET_branch != 0) MET();
  if (Nu_branch != 0) Nu();
  if (NJ_branch != 0) NJ();
  if (NbLoose_branch != 0) NbLoose();
  if (NbMedium_branch != 0) NbMedium();
  if (NbTight_branch != 0) NbTight();
  if (NoORNbLoose_branch != 0) NoORNbLoose();
  if (NoORNbMedium_branch != 0) NoORNbMedium();
  if (NoORNbTight_branch != 0) NoORNbTight();
  if (J0_branch != 0) J0();
  if (J1_branch != 0) J1();
  if (J2_branch != 0) J2();
  if (J3_branch != 0) J3();
  if (J4_branch != 0) J4();
  if (J5_branch != 0) J5();
  if (J6_branch != 0) J6();
  if (J7_branch != 0) J7();
  if (NQJGen_branch != 0) NQJGen();
  if (NBJGen_branch != 0) NBJGen();
  if (NLJGen_branch != 0) NLJGen();
  if (MVVX_branch != 0) MVVX();
  if (PtVVX_branch != 0) PtVVX();
  if (HT_branch != 0) HT();
  if (HTJ_branch != 0) HTJ();
  if (HTFJ_branch != 0) HTFJ();
  if (SumPtFJ_branch != 0) SumPtFJ();
  if (SumPtJ_branch != 0) SumPtJ();
  if (JsJESUp_branch != 0) JsJESUp();
  if (NFJJESUp_branch != 0) NFJJESUp();
  if (FJ0JESUp_branch != 0) FJ0JESUp();
  if (FJ1JESUp_branch != 0) FJ1JESUp();
  if (FJ2JESUp_branch != 0) FJ2JESUp();
  if (FJ3JESUp_branch != 0) FJ3JESUp();
  if (FJ4JESUp_branch != 0) FJ4JESUp();
  if (VMD0JESUp_branch != 0) VMD0JESUp();
  if (VMD1JESUp_branch != 0) VMD1JESUp();
  if (VMD2JESUp_branch != 0) VMD2JESUp();
  if (VMD3JESUp_branch != 0) VMD3JESUp();
  if (VMD4JESUp_branch != 0) VMD4JESUp();
  if (WMD0JESUp_branch != 0) WMD0JESUp();
  if (WMD1JESUp_branch != 0) WMD1JESUp();
  if (WMD2JESUp_branch != 0) WMD2JESUp();
  if (WMD3JESUp_branch != 0) WMD3JESUp();
  if (WMD4JESUp_branch != 0) WMD4JESUp();
  if (NQGen0JESUp_branch != 0) NQGen0JESUp();
  if (NQGen1JESUp_branch != 0) NQGen1JESUp();
  if (NQGen2JESUp_branch != 0) NQGen2JESUp();
  if (NQGen3JESUp_branch != 0) NQGen3JESUp();
  if (NQGen4JESUp_branch != 0) NQGen4JESUp();
  if (NBGen0JESUp_branch != 0) NBGen0JESUp();
  if (NBGen1JESUp_branch != 0) NBGen1JESUp();
  if (NBGen2JESUp_branch != 0) NBGen2JESUp();
  if (NBGen3JESUp_branch != 0) NBGen3JESUp();
  if (NBGen4JESUp_branch != 0) NBGen4JESUp();
  if (NLGen0JESUp_branch != 0) NLGen0JESUp();
  if (NLGen1JESUp_branch != 0) NLGen1JESUp();
  if (NLGen2JESUp_branch != 0) NLGen2JESUp();
  if (NLGen3JESUp_branch != 0) NLGen3JESUp();
  if (NLGen4JESUp_branch != 0) NLGen4JESUp();
  if (NVQGen0JESUp_branch != 0) NVQGen0JESUp();
  if (NVQGen1JESUp_branch != 0) NVQGen1JESUp();
  if (NVQGen2JESUp_branch != 0) NVQGen2JESUp();
  if (NVQGen3JESUp_branch != 0) NVQGen3JESUp();
  if (NVQGen4JESUp_branch != 0) NVQGen4JESUp();
  if (NiFJJESUp_branch != 0) NiFJJESUp();
  if (iFJ0JESUp_branch != 0) iFJ0JESUp();
  if (iFJ1JESUp_branch != 0) iFJ1JESUp();
  if (iFJ2JESUp_branch != 0) iFJ2JESUp();
  if (iFJ3JESUp_branch != 0) iFJ3JESUp();
  if (iFJ4JESUp_branch != 0) iFJ4JESUp();
  if (iVMD0JESUp_branch != 0) iVMD0JESUp();
  if (iVMD1JESUp_branch != 0) iVMD1JESUp();
  if (iVMD2JESUp_branch != 0) iVMD2JESUp();
  if (iVMD3JESUp_branch != 0) iVMD3JESUp();
  if (iVMD4JESUp_branch != 0) iVMD4JESUp();
  if (iWMD0JESUp_branch != 0) iWMD0JESUp();
  if (iWMD1JESUp_branch != 0) iWMD1JESUp();
  if (iWMD2JESUp_branch != 0) iWMD2JESUp();
  if (iWMD3JESUp_branch != 0) iWMD3JESUp();
  if (iWMD4JESUp_branch != 0) iWMD4JESUp();
  if (METJESUp_branch != 0) METJESUp();
  if (NuJESUp_branch != 0) NuJESUp();
  if (NJJESUp_branch != 0) NJJESUp();
  if (NbLooseJESUp_branch != 0) NbLooseJESUp();
  if (NbMediumJESUp_branch != 0) NbMediumJESUp();
  if (NbTightJESUp_branch != 0) NbTightJESUp();
  if (NoORNbLooseJESUp_branch != 0) NoORNbLooseJESUp();
  if (NoORNbMediumJESUp_branch != 0) NoORNbMediumJESUp();
  if (NoORNbTightJESUp_branch != 0) NoORNbTightJESUp();
  if (J0JESUp_branch != 0) J0JESUp();
  if (J1JESUp_branch != 0) J1JESUp();
  if (J2JESUp_branch != 0) J2JESUp();
  if (J3JESUp_branch != 0) J3JESUp();
  if (J4JESUp_branch != 0) J4JESUp();
  if (J5JESUp_branch != 0) J5JESUp();
  if (J6JESUp_branch != 0) J6JESUp();
  if (J7JESUp_branch != 0) J7JESUp();
  if (NQJGenJESUp_branch != 0) NQJGenJESUp();
  if (NBJGenJESUp_branch != 0) NBJGenJESUp();
  if (NLJGenJESUp_branch != 0) NLJGenJESUp();
  if (MVVXJESUp_branch != 0) MVVXJESUp();
  if (PtVVXJESUp_branch != 0) PtVVXJESUp();
  if (HTJESUp_branch != 0) HTJESUp();
  if (HTJJESUp_branch != 0) HTJJESUp();
  if (HTFJJESUp_branch != 0) HTFJJESUp();
  if (SumPtFJJESUp_branch != 0) SumPtFJJESUp();
  if (SumPtJJESUp_branch != 0) SumPtJJESUp();
  if (JsJESDn_branch != 0) JsJESDn();
  if (NFJJESDn_branch != 0) NFJJESDn();
  if (FJ0JESDn_branch != 0) FJ0JESDn();
  if (FJ1JESDn_branch != 0) FJ1JESDn();
  if (FJ2JESDn_branch != 0) FJ2JESDn();
  if (FJ3JESDn_branch != 0) FJ3JESDn();
  if (FJ4JESDn_branch != 0) FJ4JESDn();
  if (VMD0JESDn_branch != 0) VMD0JESDn();
  if (VMD1JESDn_branch != 0) VMD1JESDn();
  if (VMD2JESDn_branch != 0) VMD2JESDn();
  if (VMD3JESDn_branch != 0) VMD3JESDn();
  if (VMD4JESDn_branch != 0) VMD4JESDn();
  if (WMD0JESDn_branch != 0) WMD0JESDn();
  if (WMD1JESDn_branch != 0) WMD1JESDn();
  if (WMD2JESDn_branch != 0) WMD2JESDn();
  if (WMD3JESDn_branch != 0) WMD3JESDn();
  if (WMD4JESDn_branch != 0) WMD4JESDn();
  if (NQGen0JESDn_branch != 0) NQGen0JESDn();
  if (NQGen1JESDn_branch != 0) NQGen1JESDn();
  if (NQGen2JESDn_branch != 0) NQGen2JESDn();
  if (NQGen3JESDn_branch != 0) NQGen3JESDn();
  if (NQGen4JESDn_branch != 0) NQGen4JESDn();
  if (NBGen0JESDn_branch != 0) NBGen0JESDn();
  if (NBGen1JESDn_branch != 0) NBGen1JESDn();
  if (NBGen2JESDn_branch != 0) NBGen2JESDn();
  if (NBGen3JESDn_branch != 0) NBGen3JESDn();
  if (NBGen4JESDn_branch != 0) NBGen4JESDn();
  if (NLGen0JESDn_branch != 0) NLGen0JESDn();
  if (NLGen1JESDn_branch != 0) NLGen1JESDn();
  if (NLGen2JESDn_branch != 0) NLGen2JESDn();
  if (NLGen3JESDn_branch != 0) NLGen3JESDn();
  if (NLGen4JESDn_branch != 0) NLGen4JESDn();
  if (NVQGen0JESDn_branch != 0) NVQGen0JESDn();
  if (NVQGen1JESDn_branch != 0) NVQGen1JESDn();
  if (NVQGen2JESDn_branch != 0) NVQGen2JESDn();
  if (NVQGen3JESDn_branch != 0) NVQGen3JESDn();
  if (NVQGen4JESDn_branch != 0) NVQGen4JESDn();
  if (NiFJJESDn_branch != 0) NiFJJESDn();
  if (iFJ0JESDn_branch != 0) iFJ0JESDn();
  if (iFJ1JESDn_branch != 0) iFJ1JESDn();
  if (iFJ2JESDn_branch != 0) iFJ2JESDn();
  if (iFJ3JESDn_branch != 0) iFJ3JESDn();
  if (iFJ4JESDn_branch != 0) iFJ4JESDn();
  if (iVMD0JESDn_branch != 0) iVMD0JESDn();
  if (iVMD1JESDn_branch != 0) iVMD1JESDn();
  if (iVMD2JESDn_branch != 0) iVMD2JESDn();
  if (iVMD3JESDn_branch != 0) iVMD3JESDn();
  if (iVMD4JESDn_branch != 0) iVMD4JESDn();
  if (iWMD0JESDn_branch != 0) iWMD0JESDn();
  if (iWMD1JESDn_branch != 0) iWMD1JESDn();
  if (iWMD2JESDn_branch != 0) iWMD2JESDn();
  if (iWMD3JESDn_branch != 0) iWMD3JESDn();
  if (iWMD4JESDn_branch != 0) iWMD4JESDn();
  if (METJESDn_branch != 0) METJESDn();
  if (NuJESDn_branch != 0) NuJESDn();
  if (NJJESDn_branch != 0) NJJESDn();
  if (NbLooseJESDn_branch != 0) NbLooseJESDn();
  if (NbMediumJESDn_branch != 0) NbMediumJESDn();
  if (NbTightJESDn_branch != 0) NbTightJESDn();
  if (NoORNbLooseJESDn_branch != 0) NoORNbLooseJESDn();
  if (NoORNbMediumJESDn_branch != 0) NoORNbMediumJESDn();
  if (NoORNbTightJESDn_branch != 0) NoORNbTightJESDn();
  if (J0JESDn_branch != 0) J0JESDn();
  if (J1JESDn_branch != 0) J1JESDn();
  if (J2JESDn_branch != 0) J2JESDn();
  if (J3JESDn_branch != 0) J3JESDn();
  if (J4JESDn_branch != 0) J4JESDn();
  if (J5JESDn_branch != 0) J5JESDn();
  if (J6JESDn_branch != 0) J6JESDn();
  if (J7JESDn_branch != 0) J7JESDn();
  if (NQJGenJESDn_branch != 0) NQJGenJESDn();
  if (NBJGenJESDn_branch != 0) NBJGenJESDn();
  if (NLJGenJESDn_branch != 0) NLJGenJESDn();
  if (MVVXJESDn_branch != 0) MVVXJESDn();
  if (PtVVXJESDn_branch != 0) PtVVXJESDn();
  if (HTJESDn_branch != 0) HTJESDn();
  if (HTJJESDn_branch != 0) HTJJESDn();
  if (HTFJJESDn_branch != 0) HTFJJESDn();
  if (SumPtFJJESDn_branch != 0) SumPtFJJESDn();
  if (SumPtJJESDn_branch != 0) SumPtJJESDn();
  if (JsJERUp_branch != 0) JsJERUp();
  if (NFJJERUp_branch != 0) NFJJERUp();
  if (FJ0JERUp_branch != 0) FJ0JERUp();
  if (FJ1JERUp_branch != 0) FJ1JERUp();
  if (FJ2JERUp_branch != 0) FJ2JERUp();
  if (FJ3JERUp_branch != 0) FJ3JERUp();
  if (FJ4JERUp_branch != 0) FJ4JERUp();
  if (VMD0JERUp_branch != 0) VMD0JERUp();
  if (VMD1JERUp_branch != 0) VMD1JERUp();
  if (VMD2JERUp_branch != 0) VMD2JERUp();
  if (VMD3JERUp_branch != 0) VMD3JERUp();
  if (VMD4JERUp_branch != 0) VMD4JERUp();
  if (WMD0JERUp_branch != 0) WMD0JERUp();
  if (WMD1JERUp_branch != 0) WMD1JERUp();
  if (WMD2JERUp_branch != 0) WMD2JERUp();
  if (WMD3JERUp_branch != 0) WMD3JERUp();
  if (WMD4JERUp_branch != 0) WMD4JERUp();
  if (NQGen0JERUp_branch != 0) NQGen0JERUp();
  if (NQGen1JERUp_branch != 0) NQGen1JERUp();
  if (NQGen2JERUp_branch != 0) NQGen2JERUp();
  if (NQGen3JERUp_branch != 0) NQGen3JERUp();
  if (NQGen4JERUp_branch != 0) NQGen4JERUp();
  if (NBGen0JERUp_branch != 0) NBGen0JERUp();
  if (NBGen1JERUp_branch != 0) NBGen1JERUp();
  if (NBGen2JERUp_branch != 0) NBGen2JERUp();
  if (NBGen3JERUp_branch != 0) NBGen3JERUp();
  if (NBGen4JERUp_branch != 0) NBGen4JERUp();
  if (NLGen0JERUp_branch != 0) NLGen0JERUp();
  if (NLGen1JERUp_branch != 0) NLGen1JERUp();
  if (NLGen2JERUp_branch != 0) NLGen2JERUp();
  if (NLGen3JERUp_branch != 0) NLGen3JERUp();
  if (NLGen4JERUp_branch != 0) NLGen4JERUp();
  if (NVQGen0JERUp_branch != 0) NVQGen0JERUp();
  if (NVQGen1JERUp_branch != 0) NVQGen1JERUp();
  if (NVQGen2JERUp_branch != 0) NVQGen2JERUp();
  if (NVQGen3JERUp_branch != 0) NVQGen3JERUp();
  if (NVQGen4JERUp_branch != 0) NVQGen4JERUp();
  if (NiFJJERUp_branch != 0) NiFJJERUp();
  if (iFJ0JERUp_branch != 0) iFJ0JERUp();
  if (iFJ1JERUp_branch != 0) iFJ1JERUp();
  if (iFJ2JERUp_branch != 0) iFJ2JERUp();
  if (iFJ3JERUp_branch != 0) iFJ3JERUp();
  if (iFJ4JERUp_branch != 0) iFJ4JERUp();
  if (iVMD0JERUp_branch != 0) iVMD0JERUp();
  if (iVMD1JERUp_branch != 0) iVMD1JERUp();
  if (iVMD2JERUp_branch != 0) iVMD2JERUp();
  if (iVMD3JERUp_branch != 0) iVMD3JERUp();
  if (iVMD4JERUp_branch != 0) iVMD4JERUp();
  if (iWMD0JERUp_branch != 0) iWMD0JERUp();
  if (iWMD1JERUp_branch != 0) iWMD1JERUp();
  if (iWMD2JERUp_branch != 0) iWMD2JERUp();
  if (iWMD3JERUp_branch != 0) iWMD3JERUp();
  if (iWMD4JERUp_branch != 0) iWMD4JERUp();
  if (METJERUp_branch != 0) METJERUp();
  if (NuJERUp_branch != 0) NuJERUp();
  if (NJJERUp_branch != 0) NJJERUp();
  if (NbLooseJERUp_branch != 0) NbLooseJERUp();
  if (NbMediumJERUp_branch != 0) NbMediumJERUp();
  if (NbTightJERUp_branch != 0) NbTightJERUp();
  if (NoORNbLooseJERUp_branch != 0) NoORNbLooseJERUp();
  if (NoORNbMediumJERUp_branch != 0) NoORNbMediumJERUp();
  if (NoORNbTightJERUp_branch != 0) NoORNbTightJERUp();
  if (J0JERUp_branch != 0) J0JERUp();
  if (J1JERUp_branch != 0) J1JERUp();
  if (J2JERUp_branch != 0) J2JERUp();
  if (J3JERUp_branch != 0) J3JERUp();
  if (J4JERUp_branch != 0) J4JERUp();
  if (J5JERUp_branch != 0) J5JERUp();
  if (J6JERUp_branch != 0) J6JERUp();
  if (J7JERUp_branch != 0) J7JERUp();
  if (NQJGenJERUp_branch != 0) NQJGenJERUp();
  if (NBJGenJERUp_branch != 0) NBJGenJERUp();
  if (NLJGenJERUp_branch != 0) NLJGenJERUp();
  if (MVVXJERUp_branch != 0) MVVXJERUp();
  if (PtVVXJERUp_branch != 0) PtVVXJERUp();
  if (HTJERUp_branch != 0) HTJERUp();
  if (HTJJERUp_branch != 0) HTJJERUp();
  if (HTFJJERUp_branch != 0) HTFJJERUp();
  if (SumPtFJJERUp_branch != 0) SumPtFJJERUp();
  if (SumPtJJERUp_branch != 0) SumPtJJERUp();
  if (JsJERDn_branch != 0) JsJERDn();
  if (NFJJERDn_branch != 0) NFJJERDn();
  if (FJ0JERDn_branch != 0) FJ0JERDn();
  if (FJ1JERDn_branch != 0) FJ1JERDn();
  if (FJ2JERDn_branch != 0) FJ2JERDn();
  if (FJ3JERDn_branch != 0) FJ3JERDn();
  if (FJ4JERDn_branch != 0) FJ4JERDn();
  if (VMD0JERDn_branch != 0) VMD0JERDn();
  if (VMD1JERDn_branch != 0) VMD1JERDn();
  if (VMD2JERDn_branch != 0) VMD2JERDn();
  if (VMD3JERDn_branch != 0) VMD3JERDn();
  if (VMD4JERDn_branch != 0) VMD4JERDn();
  if (WMD0JERDn_branch != 0) WMD0JERDn();
  if (WMD1JERDn_branch != 0) WMD1JERDn();
  if (WMD2JERDn_branch != 0) WMD2JERDn();
  if (WMD3JERDn_branch != 0) WMD3JERDn();
  if (WMD4JERDn_branch != 0) WMD4JERDn();
  if (NQGen0JERDn_branch != 0) NQGen0JERDn();
  if (NQGen1JERDn_branch != 0) NQGen1JERDn();
  if (NQGen2JERDn_branch != 0) NQGen2JERDn();
  if (NQGen3JERDn_branch != 0) NQGen3JERDn();
  if (NQGen4JERDn_branch != 0) NQGen4JERDn();
  if (NBGen0JERDn_branch != 0) NBGen0JERDn();
  if (NBGen1JERDn_branch != 0) NBGen1JERDn();
  if (NBGen2JERDn_branch != 0) NBGen2JERDn();
  if (NBGen3JERDn_branch != 0) NBGen3JERDn();
  if (NBGen4JERDn_branch != 0) NBGen4JERDn();
  if (NLGen0JERDn_branch != 0) NLGen0JERDn();
  if (NLGen1JERDn_branch != 0) NLGen1JERDn();
  if (NLGen2JERDn_branch != 0) NLGen2JERDn();
  if (NLGen3JERDn_branch != 0) NLGen3JERDn();
  if (NLGen4JERDn_branch != 0) NLGen4JERDn();
  if (NVQGen0JERDn_branch != 0) NVQGen0JERDn();
  if (NVQGen1JERDn_branch != 0) NVQGen1JERDn();
  if (NVQGen2JERDn_branch != 0) NVQGen2JERDn();
  if (NVQGen3JERDn_branch != 0) NVQGen3JERDn();
  if (NVQGen4JERDn_branch != 0) NVQGen4JERDn();
  if (NiFJJERDn_branch != 0) NiFJJERDn();
  if (iFJ0JERDn_branch != 0) iFJ0JERDn();
  if (iFJ1JERDn_branch != 0) iFJ1JERDn();
  if (iFJ2JERDn_branch != 0) iFJ2JERDn();
  if (iFJ3JERDn_branch != 0) iFJ3JERDn();
  if (iFJ4JERDn_branch != 0) iFJ4JERDn();
  if (iVMD0JERDn_branch != 0) iVMD0JERDn();
  if (iVMD1JERDn_branch != 0) iVMD1JERDn();
  if (iVMD2JERDn_branch != 0) iVMD2JERDn();
  if (iVMD3JERDn_branch != 0) iVMD3JERDn();
  if (iVMD4JERDn_branch != 0) iVMD4JERDn();
  if (iWMD0JERDn_branch != 0) iWMD0JERDn();
  if (iWMD1JERDn_branch != 0) iWMD1JERDn();
  if (iWMD2JERDn_branch != 0) iWMD2JERDn();
  if (iWMD3JERDn_branch != 0) iWMD3JERDn();
  if (iWMD4JERDn_branch != 0) iWMD4JERDn();
  if (METJERDn_branch != 0) METJERDn();
  if (NuJERDn_branch != 0) NuJERDn();
  if (NJJERDn_branch != 0) NJJERDn();
  if (NbLooseJERDn_branch != 0) NbLooseJERDn();
  if (NbMediumJERDn_branch != 0) NbMediumJERDn();
  if (NbTightJERDn_branch != 0) NbTightJERDn();
  if (NoORNbLooseJERDn_branch != 0) NoORNbLooseJERDn();
  if (NoORNbMediumJERDn_branch != 0) NoORNbMediumJERDn();
  if (NoORNbTightJERDn_branch != 0) NoORNbTightJERDn();
  if (J0JERDn_branch != 0) J0JERDn();
  if (J1JERDn_branch != 0) J1JERDn();
  if (J2JERDn_branch != 0) J2JERDn();
  if (J3JERDn_branch != 0) J3JERDn();
  if (J4JERDn_branch != 0) J4JERDn();
  if (J5JERDn_branch != 0) J5JERDn();
  if (J6JERDn_branch != 0) J6JERDn();
  if (J7JERDn_branch != 0) J7JERDn();
  if (NQJGenJERDn_branch != 0) NQJGenJERDn();
  if (NBJGenJERDn_branch != 0) NBJGenJERDn();
  if (NLJGenJERDn_branch != 0) NLJGenJERDn();
  if (MVVXJERDn_branch != 0) MVVXJERDn();
  if (PtVVXJERDn_branch != 0) PtVVXJERDn();
  if (HTJERDn_branch != 0) HTJERDn();
  if (HTJJERDn_branch != 0) HTJJERDn();
  if (HTFJJERDn_branch != 0) HTFJJERDn();
  if (SumPtFJJERDn_branch != 0) SumPtFJJERDn();
  if (SumPtJJERDn_branch != 0) SumPtJJERDn();
  if (JsJMSUp_branch != 0) JsJMSUp();
  if (NFJJMSUp_branch != 0) NFJJMSUp();
  if (FJ0JMSUp_branch != 0) FJ0JMSUp();
  if (FJ1JMSUp_branch != 0) FJ1JMSUp();
  if (FJ2JMSUp_branch != 0) FJ2JMSUp();
  if (FJ3JMSUp_branch != 0) FJ3JMSUp();
  if (FJ4JMSUp_branch != 0) FJ4JMSUp();
  if (VMD0JMSUp_branch != 0) VMD0JMSUp();
  if (VMD1JMSUp_branch != 0) VMD1JMSUp();
  if (VMD2JMSUp_branch != 0) VMD2JMSUp();
  if (VMD3JMSUp_branch != 0) VMD3JMSUp();
  if (VMD4JMSUp_branch != 0) VMD4JMSUp();
  if (WMD0JMSUp_branch != 0) WMD0JMSUp();
  if (WMD1JMSUp_branch != 0) WMD1JMSUp();
  if (WMD2JMSUp_branch != 0) WMD2JMSUp();
  if (WMD3JMSUp_branch != 0) WMD3JMSUp();
  if (WMD4JMSUp_branch != 0) WMD4JMSUp();
  if (NQGen0JMSUp_branch != 0) NQGen0JMSUp();
  if (NQGen1JMSUp_branch != 0) NQGen1JMSUp();
  if (NQGen2JMSUp_branch != 0) NQGen2JMSUp();
  if (NQGen3JMSUp_branch != 0) NQGen3JMSUp();
  if (NQGen4JMSUp_branch != 0) NQGen4JMSUp();
  if (NBGen0JMSUp_branch != 0) NBGen0JMSUp();
  if (NBGen1JMSUp_branch != 0) NBGen1JMSUp();
  if (NBGen2JMSUp_branch != 0) NBGen2JMSUp();
  if (NBGen3JMSUp_branch != 0) NBGen3JMSUp();
  if (NBGen4JMSUp_branch != 0) NBGen4JMSUp();
  if (NLGen0JMSUp_branch != 0) NLGen0JMSUp();
  if (NLGen1JMSUp_branch != 0) NLGen1JMSUp();
  if (NLGen2JMSUp_branch != 0) NLGen2JMSUp();
  if (NLGen3JMSUp_branch != 0) NLGen3JMSUp();
  if (NLGen4JMSUp_branch != 0) NLGen4JMSUp();
  if (NVQGen0JMSUp_branch != 0) NVQGen0JMSUp();
  if (NVQGen1JMSUp_branch != 0) NVQGen1JMSUp();
  if (NVQGen2JMSUp_branch != 0) NVQGen2JMSUp();
  if (NVQGen3JMSUp_branch != 0) NVQGen3JMSUp();
  if (NVQGen4JMSUp_branch != 0) NVQGen4JMSUp();
  if (NiFJJMSUp_branch != 0) NiFJJMSUp();
  if (iFJ0JMSUp_branch != 0) iFJ0JMSUp();
  if (iFJ1JMSUp_branch != 0) iFJ1JMSUp();
  if (iFJ2JMSUp_branch != 0) iFJ2JMSUp();
  if (iFJ3JMSUp_branch != 0) iFJ3JMSUp();
  if (iFJ4JMSUp_branch != 0) iFJ4JMSUp();
  if (iVMD0JMSUp_branch != 0) iVMD0JMSUp();
  if (iVMD1JMSUp_branch != 0) iVMD1JMSUp();
  if (iVMD2JMSUp_branch != 0) iVMD2JMSUp();
  if (iVMD3JMSUp_branch != 0) iVMD3JMSUp();
  if (iVMD4JMSUp_branch != 0) iVMD4JMSUp();
  if (iWMD0JMSUp_branch != 0) iWMD0JMSUp();
  if (iWMD1JMSUp_branch != 0) iWMD1JMSUp();
  if (iWMD2JMSUp_branch != 0) iWMD2JMSUp();
  if (iWMD3JMSUp_branch != 0) iWMD3JMSUp();
  if (iWMD4JMSUp_branch != 0) iWMD4JMSUp();
  if (METJMSUp_branch != 0) METJMSUp();
  if (NuJMSUp_branch != 0) NuJMSUp();
  if (NJJMSUp_branch != 0) NJJMSUp();
  if (NbLooseJMSUp_branch != 0) NbLooseJMSUp();
  if (NbMediumJMSUp_branch != 0) NbMediumJMSUp();
  if (NbTightJMSUp_branch != 0) NbTightJMSUp();
  if (NoORNbLooseJMSUp_branch != 0) NoORNbLooseJMSUp();
  if (NoORNbMediumJMSUp_branch != 0) NoORNbMediumJMSUp();
  if (NoORNbTightJMSUp_branch != 0) NoORNbTightJMSUp();
  if (J0JMSUp_branch != 0) J0JMSUp();
  if (J1JMSUp_branch != 0) J1JMSUp();
  if (J2JMSUp_branch != 0) J2JMSUp();
  if (J3JMSUp_branch != 0) J3JMSUp();
  if (J4JMSUp_branch != 0) J4JMSUp();
  if (J5JMSUp_branch != 0) J5JMSUp();
  if (J6JMSUp_branch != 0) J6JMSUp();
  if (J7JMSUp_branch != 0) J7JMSUp();
  if (NQJGenJMSUp_branch != 0) NQJGenJMSUp();
  if (NBJGenJMSUp_branch != 0) NBJGenJMSUp();
  if (NLJGenJMSUp_branch != 0) NLJGenJMSUp();
  if (MVVXJMSUp_branch != 0) MVVXJMSUp();
  if (PtVVXJMSUp_branch != 0) PtVVXJMSUp();
  if (HTJMSUp_branch != 0) HTJMSUp();
  if (HTJJMSUp_branch != 0) HTJJMSUp();
  if (HTFJJMSUp_branch != 0) HTFJJMSUp();
  if (SumPtFJJMSUp_branch != 0) SumPtFJJMSUp();
  if (SumPtJJMSUp_branch != 0) SumPtJJMSUp();
  if (JsJMSDn_branch != 0) JsJMSDn();
  if (NFJJMSDn_branch != 0) NFJJMSDn();
  if (FJ0JMSDn_branch != 0) FJ0JMSDn();
  if (FJ1JMSDn_branch != 0) FJ1JMSDn();
  if (FJ2JMSDn_branch != 0) FJ2JMSDn();
  if (FJ3JMSDn_branch != 0) FJ3JMSDn();
  if (FJ4JMSDn_branch != 0) FJ4JMSDn();
  if (VMD0JMSDn_branch != 0) VMD0JMSDn();
  if (VMD1JMSDn_branch != 0) VMD1JMSDn();
  if (VMD2JMSDn_branch != 0) VMD2JMSDn();
  if (VMD3JMSDn_branch != 0) VMD3JMSDn();
  if (VMD4JMSDn_branch != 0) VMD4JMSDn();
  if (WMD0JMSDn_branch != 0) WMD0JMSDn();
  if (WMD1JMSDn_branch != 0) WMD1JMSDn();
  if (WMD2JMSDn_branch != 0) WMD2JMSDn();
  if (WMD3JMSDn_branch != 0) WMD3JMSDn();
  if (WMD4JMSDn_branch != 0) WMD4JMSDn();
  if (NQGen0JMSDn_branch != 0) NQGen0JMSDn();
  if (NQGen1JMSDn_branch != 0) NQGen1JMSDn();
  if (NQGen2JMSDn_branch != 0) NQGen2JMSDn();
  if (NQGen3JMSDn_branch != 0) NQGen3JMSDn();
  if (NQGen4JMSDn_branch != 0) NQGen4JMSDn();
  if (NBGen0JMSDn_branch != 0) NBGen0JMSDn();
  if (NBGen1JMSDn_branch != 0) NBGen1JMSDn();
  if (NBGen2JMSDn_branch != 0) NBGen2JMSDn();
  if (NBGen3JMSDn_branch != 0) NBGen3JMSDn();
  if (NBGen4JMSDn_branch != 0) NBGen4JMSDn();
  if (NLGen0JMSDn_branch != 0) NLGen0JMSDn();
  if (NLGen1JMSDn_branch != 0) NLGen1JMSDn();
  if (NLGen2JMSDn_branch != 0) NLGen2JMSDn();
  if (NLGen3JMSDn_branch != 0) NLGen3JMSDn();
  if (NLGen4JMSDn_branch != 0) NLGen4JMSDn();
  if (NVQGen0JMSDn_branch != 0) NVQGen0JMSDn();
  if (NVQGen1JMSDn_branch != 0) NVQGen1JMSDn();
  if (NVQGen2JMSDn_branch != 0) NVQGen2JMSDn();
  if (NVQGen3JMSDn_branch != 0) NVQGen3JMSDn();
  if (NVQGen4JMSDn_branch != 0) NVQGen4JMSDn();
  if (NiFJJMSDn_branch != 0) NiFJJMSDn();
  if (iFJ0JMSDn_branch != 0) iFJ0JMSDn();
  if (iFJ1JMSDn_branch != 0) iFJ1JMSDn();
  if (iFJ2JMSDn_branch != 0) iFJ2JMSDn();
  if (iFJ3JMSDn_branch != 0) iFJ3JMSDn();
  if (iFJ4JMSDn_branch != 0) iFJ4JMSDn();
  if (iVMD0JMSDn_branch != 0) iVMD0JMSDn();
  if (iVMD1JMSDn_branch != 0) iVMD1JMSDn();
  if (iVMD2JMSDn_branch != 0) iVMD2JMSDn();
  if (iVMD3JMSDn_branch != 0) iVMD3JMSDn();
  if (iVMD4JMSDn_branch != 0) iVMD4JMSDn();
  if (iWMD0JMSDn_branch != 0) iWMD0JMSDn();
  if (iWMD1JMSDn_branch != 0) iWMD1JMSDn();
  if (iWMD2JMSDn_branch != 0) iWMD2JMSDn();
  if (iWMD3JMSDn_branch != 0) iWMD3JMSDn();
  if (iWMD4JMSDn_branch != 0) iWMD4JMSDn();
  if (METJMSDn_branch != 0) METJMSDn();
  if (NuJMSDn_branch != 0) NuJMSDn();
  if (NJJMSDn_branch != 0) NJJMSDn();
  if (NbLooseJMSDn_branch != 0) NbLooseJMSDn();
  if (NbMediumJMSDn_branch != 0) NbMediumJMSDn();
  if (NbTightJMSDn_branch != 0) NbTightJMSDn();
  if (NoORNbLooseJMSDn_branch != 0) NoORNbLooseJMSDn();
  if (NoORNbMediumJMSDn_branch != 0) NoORNbMediumJMSDn();
  if (NoORNbTightJMSDn_branch != 0) NoORNbTightJMSDn();
  if (J0JMSDn_branch != 0) J0JMSDn();
  if (J1JMSDn_branch != 0) J1JMSDn();
  if (J2JMSDn_branch != 0) J2JMSDn();
  if (J3JMSDn_branch != 0) J3JMSDn();
  if (J4JMSDn_branch != 0) J4JMSDn();
  if (J5JMSDn_branch != 0) J5JMSDn();
  if (J6JMSDn_branch != 0) J6JMSDn();
  if (J7JMSDn_branch != 0) J7JMSDn();
  if (NQJGenJMSDn_branch != 0) NQJGenJMSDn();
  if (NBJGenJMSDn_branch != 0) NBJGenJMSDn();
  if (NLJGenJMSDn_branch != 0) NLJGenJMSDn();
  if (MVVXJMSDn_branch != 0) MVVXJMSDn();
  if (PtVVXJMSDn_branch != 0) PtVVXJMSDn();
  if (HTJMSDn_branch != 0) HTJMSDn();
  if (HTJJMSDn_branch != 0) HTJJMSDn();
  if (HTFJJMSDn_branch != 0) HTFJJMSDn();
  if (SumPtFJJMSDn_branch != 0) SumPtFJJMSDn();
  if (SumPtJJMSDn_branch != 0) SumPtJJMSDn();
  if (JsJMRUp_branch != 0) JsJMRUp();
  if (NFJJMRUp_branch != 0) NFJJMRUp();
  if (FJ0JMRUp_branch != 0) FJ0JMRUp();
  if (FJ1JMRUp_branch != 0) FJ1JMRUp();
  if (FJ2JMRUp_branch != 0) FJ2JMRUp();
  if (FJ3JMRUp_branch != 0) FJ3JMRUp();
  if (FJ4JMRUp_branch != 0) FJ4JMRUp();
  if (VMD0JMRUp_branch != 0) VMD0JMRUp();
  if (VMD1JMRUp_branch != 0) VMD1JMRUp();
  if (VMD2JMRUp_branch != 0) VMD2JMRUp();
  if (VMD3JMRUp_branch != 0) VMD3JMRUp();
  if (VMD4JMRUp_branch != 0) VMD4JMRUp();
  if (WMD0JMRUp_branch != 0) WMD0JMRUp();
  if (WMD1JMRUp_branch != 0) WMD1JMRUp();
  if (WMD2JMRUp_branch != 0) WMD2JMRUp();
  if (WMD3JMRUp_branch != 0) WMD3JMRUp();
  if (WMD4JMRUp_branch != 0) WMD4JMRUp();
  if (NQGen0JMRUp_branch != 0) NQGen0JMRUp();
  if (NQGen1JMRUp_branch != 0) NQGen1JMRUp();
  if (NQGen2JMRUp_branch != 0) NQGen2JMRUp();
  if (NQGen3JMRUp_branch != 0) NQGen3JMRUp();
  if (NQGen4JMRUp_branch != 0) NQGen4JMRUp();
  if (NBGen0JMRUp_branch != 0) NBGen0JMRUp();
  if (NBGen1JMRUp_branch != 0) NBGen1JMRUp();
  if (NBGen2JMRUp_branch != 0) NBGen2JMRUp();
  if (NBGen3JMRUp_branch != 0) NBGen3JMRUp();
  if (NBGen4JMRUp_branch != 0) NBGen4JMRUp();
  if (NLGen0JMRUp_branch != 0) NLGen0JMRUp();
  if (NLGen1JMRUp_branch != 0) NLGen1JMRUp();
  if (NLGen2JMRUp_branch != 0) NLGen2JMRUp();
  if (NLGen3JMRUp_branch != 0) NLGen3JMRUp();
  if (NLGen4JMRUp_branch != 0) NLGen4JMRUp();
  if (NVQGen0JMRUp_branch != 0) NVQGen0JMRUp();
  if (NVQGen1JMRUp_branch != 0) NVQGen1JMRUp();
  if (NVQGen2JMRUp_branch != 0) NVQGen2JMRUp();
  if (NVQGen3JMRUp_branch != 0) NVQGen3JMRUp();
  if (NVQGen4JMRUp_branch != 0) NVQGen4JMRUp();
  if (NiFJJMRUp_branch != 0) NiFJJMRUp();
  if (iFJ0JMRUp_branch != 0) iFJ0JMRUp();
  if (iFJ1JMRUp_branch != 0) iFJ1JMRUp();
  if (iFJ2JMRUp_branch != 0) iFJ2JMRUp();
  if (iFJ3JMRUp_branch != 0) iFJ3JMRUp();
  if (iFJ4JMRUp_branch != 0) iFJ4JMRUp();
  if (iVMD0JMRUp_branch != 0) iVMD0JMRUp();
  if (iVMD1JMRUp_branch != 0) iVMD1JMRUp();
  if (iVMD2JMRUp_branch != 0) iVMD2JMRUp();
  if (iVMD3JMRUp_branch != 0) iVMD3JMRUp();
  if (iVMD4JMRUp_branch != 0) iVMD4JMRUp();
  if (iWMD0JMRUp_branch != 0) iWMD0JMRUp();
  if (iWMD1JMRUp_branch != 0) iWMD1JMRUp();
  if (iWMD2JMRUp_branch != 0) iWMD2JMRUp();
  if (iWMD3JMRUp_branch != 0) iWMD3JMRUp();
  if (iWMD4JMRUp_branch != 0) iWMD4JMRUp();
  if (METJMRUp_branch != 0) METJMRUp();
  if (NuJMRUp_branch != 0) NuJMRUp();
  if (NJJMRUp_branch != 0) NJJMRUp();
  if (NbLooseJMRUp_branch != 0) NbLooseJMRUp();
  if (NbMediumJMRUp_branch != 0) NbMediumJMRUp();
  if (NbTightJMRUp_branch != 0) NbTightJMRUp();
  if (NoORNbLooseJMRUp_branch != 0) NoORNbLooseJMRUp();
  if (NoORNbMediumJMRUp_branch != 0) NoORNbMediumJMRUp();
  if (NoORNbTightJMRUp_branch != 0) NoORNbTightJMRUp();
  if (J0JMRUp_branch != 0) J0JMRUp();
  if (J1JMRUp_branch != 0) J1JMRUp();
  if (J2JMRUp_branch != 0) J2JMRUp();
  if (J3JMRUp_branch != 0) J3JMRUp();
  if (J4JMRUp_branch != 0) J4JMRUp();
  if (J5JMRUp_branch != 0) J5JMRUp();
  if (J6JMRUp_branch != 0) J6JMRUp();
  if (J7JMRUp_branch != 0) J7JMRUp();
  if (NQJGenJMRUp_branch != 0) NQJGenJMRUp();
  if (NBJGenJMRUp_branch != 0) NBJGenJMRUp();
  if (NLJGenJMRUp_branch != 0) NLJGenJMRUp();
  if (MVVXJMRUp_branch != 0) MVVXJMRUp();
  if (PtVVXJMRUp_branch != 0) PtVVXJMRUp();
  if (HTJMRUp_branch != 0) HTJMRUp();
  if (HTJJMRUp_branch != 0) HTJJMRUp();
  if (HTFJJMRUp_branch != 0) HTFJJMRUp();
  if (SumPtFJJMRUp_branch != 0) SumPtFJJMRUp();
  if (SumPtJJMRUp_branch != 0) SumPtJJMRUp();
  if (JsJMRDn_branch != 0) JsJMRDn();
  if (NFJJMRDn_branch != 0) NFJJMRDn();
  if (FJ0JMRDn_branch != 0) FJ0JMRDn();
  if (FJ1JMRDn_branch != 0) FJ1JMRDn();
  if (FJ2JMRDn_branch != 0) FJ2JMRDn();
  if (FJ3JMRDn_branch != 0) FJ3JMRDn();
  if (FJ4JMRDn_branch != 0) FJ4JMRDn();
  if (VMD0JMRDn_branch != 0) VMD0JMRDn();
  if (VMD1JMRDn_branch != 0) VMD1JMRDn();
  if (VMD2JMRDn_branch != 0) VMD2JMRDn();
  if (VMD3JMRDn_branch != 0) VMD3JMRDn();
  if (VMD4JMRDn_branch != 0) VMD4JMRDn();
  if (WMD0JMRDn_branch != 0) WMD0JMRDn();
  if (WMD1JMRDn_branch != 0) WMD1JMRDn();
  if (WMD2JMRDn_branch != 0) WMD2JMRDn();
  if (WMD3JMRDn_branch != 0) WMD3JMRDn();
  if (WMD4JMRDn_branch != 0) WMD4JMRDn();
  if (NQGen0JMRDn_branch != 0) NQGen0JMRDn();
  if (NQGen1JMRDn_branch != 0) NQGen1JMRDn();
  if (NQGen2JMRDn_branch != 0) NQGen2JMRDn();
  if (NQGen3JMRDn_branch != 0) NQGen3JMRDn();
  if (NQGen4JMRDn_branch != 0) NQGen4JMRDn();
  if (NBGen0JMRDn_branch != 0) NBGen0JMRDn();
  if (NBGen1JMRDn_branch != 0) NBGen1JMRDn();
  if (NBGen2JMRDn_branch != 0) NBGen2JMRDn();
  if (NBGen3JMRDn_branch != 0) NBGen3JMRDn();
  if (NBGen4JMRDn_branch != 0) NBGen4JMRDn();
  if (NLGen0JMRDn_branch != 0) NLGen0JMRDn();
  if (NLGen1JMRDn_branch != 0) NLGen1JMRDn();
  if (NLGen2JMRDn_branch != 0) NLGen2JMRDn();
  if (NLGen3JMRDn_branch != 0) NLGen3JMRDn();
  if (NLGen4JMRDn_branch != 0) NLGen4JMRDn();
  if (NVQGen0JMRDn_branch != 0) NVQGen0JMRDn();
  if (NVQGen1JMRDn_branch != 0) NVQGen1JMRDn();
  if (NVQGen2JMRDn_branch != 0) NVQGen2JMRDn();
  if (NVQGen3JMRDn_branch != 0) NVQGen3JMRDn();
  if (NVQGen4JMRDn_branch != 0) NVQGen4JMRDn();
  if (NiFJJMRDn_branch != 0) NiFJJMRDn();
  if (iFJ0JMRDn_branch != 0) iFJ0JMRDn();
  if (iFJ1JMRDn_branch != 0) iFJ1JMRDn();
  if (iFJ2JMRDn_branch != 0) iFJ2JMRDn();
  if (iFJ3JMRDn_branch != 0) iFJ3JMRDn();
  if (iFJ4JMRDn_branch != 0) iFJ4JMRDn();
  if (iVMD0JMRDn_branch != 0) iVMD0JMRDn();
  if (iVMD1JMRDn_branch != 0) iVMD1JMRDn();
  if (iVMD2JMRDn_branch != 0) iVMD2JMRDn();
  if (iVMD3JMRDn_branch != 0) iVMD3JMRDn();
  if (iVMD4JMRDn_branch != 0) iVMD4JMRDn();
  if (iWMD0JMRDn_branch != 0) iWMD0JMRDn();
  if (iWMD1JMRDn_branch != 0) iWMD1JMRDn();
  if (iWMD2JMRDn_branch != 0) iWMD2JMRDn();
  if (iWMD3JMRDn_branch != 0) iWMD3JMRDn();
  if (iWMD4JMRDn_branch != 0) iWMD4JMRDn();
  if (METJMRDn_branch != 0) METJMRDn();
  if (NuJMRDn_branch != 0) NuJMRDn();
  if (NJJMRDn_branch != 0) NJJMRDn();
  if (NbLooseJMRDn_branch != 0) NbLooseJMRDn();
  if (NbMediumJMRDn_branch != 0) NbMediumJMRDn();
  if (NbTightJMRDn_branch != 0) NbTightJMRDn();
  if (NoORNbLooseJMRDn_branch != 0) NoORNbLooseJMRDn();
  if (NoORNbMediumJMRDn_branch != 0) NoORNbMediumJMRDn();
  if (NoORNbTightJMRDn_branch != 0) NoORNbTightJMRDn();
  if (J0JMRDn_branch != 0) J0JMRDn();
  if (J1JMRDn_branch != 0) J1JMRDn();
  if (J2JMRDn_branch != 0) J2JMRDn();
  if (J3JMRDn_branch != 0) J3JMRDn();
  if (J4JMRDn_branch != 0) J4JMRDn();
  if (J5JMRDn_branch != 0) J5JMRDn();
  if (J6JMRDn_branch != 0) J6JMRDn();
  if (J7JMRDn_branch != 0) J7JMRDn();
  if (NQJGenJMRDn_branch != 0) NQJGenJMRDn();
  if (NBJGenJMRDn_branch != 0) NBJGenJMRDn();
  if (NLJGenJMRDn_branch != 0) NLJGenJMRDn();
  if (MVVXJMRDn_branch != 0) MVVXJMRDn();
  if (PtVVXJMRDn_branch != 0) PtVVXJMRDn();
  if (HTJMRDn_branch != 0) HTJMRDn();
  if (HTJJMRDn_branch != 0) HTJJMRDn();
  if (HTFJJMRDn_branch != 0) HTFJJMRDn();
  if (SumPtFJJMRDn_branch != 0) SumPtFJJMRDn();
  if (SumPtJJMRDn_branch != 0) SumPtJJMRDn();
  if (JsjesAbsoluteStatup_branch != 0) JsjesAbsoluteStatup();
  if (NFJjesAbsoluteStatup_branch != 0) NFJjesAbsoluteStatup();
  if (FJ0jesAbsoluteStatup_branch != 0) FJ0jesAbsoluteStatup();
  if (FJ1jesAbsoluteStatup_branch != 0) FJ1jesAbsoluteStatup();
  if (FJ2jesAbsoluteStatup_branch != 0) FJ2jesAbsoluteStatup();
  if (FJ3jesAbsoluteStatup_branch != 0) FJ3jesAbsoluteStatup();
  if (FJ4jesAbsoluteStatup_branch != 0) FJ4jesAbsoluteStatup();
  if (VMD0jesAbsoluteStatup_branch != 0) VMD0jesAbsoluteStatup();
  if (VMD1jesAbsoluteStatup_branch != 0) VMD1jesAbsoluteStatup();
  if (VMD2jesAbsoluteStatup_branch != 0) VMD2jesAbsoluteStatup();
  if (VMD3jesAbsoluteStatup_branch != 0) VMD3jesAbsoluteStatup();
  if (VMD4jesAbsoluteStatup_branch != 0) VMD4jesAbsoluteStatup();
  if (WMD0jesAbsoluteStatup_branch != 0) WMD0jesAbsoluteStatup();
  if (WMD1jesAbsoluteStatup_branch != 0) WMD1jesAbsoluteStatup();
  if (WMD2jesAbsoluteStatup_branch != 0) WMD2jesAbsoluteStatup();
  if (WMD3jesAbsoluteStatup_branch != 0) WMD3jesAbsoluteStatup();
  if (WMD4jesAbsoluteStatup_branch != 0) WMD4jesAbsoluteStatup();
  if (NQGen0jesAbsoluteStatup_branch != 0) NQGen0jesAbsoluteStatup();
  if (NQGen1jesAbsoluteStatup_branch != 0) NQGen1jesAbsoluteStatup();
  if (NQGen2jesAbsoluteStatup_branch != 0) NQGen2jesAbsoluteStatup();
  if (NQGen3jesAbsoluteStatup_branch != 0) NQGen3jesAbsoluteStatup();
  if (NQGen4jesAbsoluteStatup_branch != 0) NQGen4jesAbsoluteStatup();
  if (NBGen0jesAbsoluteStatup_branch != 0) NBGen0jesAbsoluteStatup();
  if (NBGen1jesAbsoluteStatup_branch != 0) NBGen1jesAbsoluteStatup();
  if (NBGen2jesAbsoluteStatup_branch != 0) NBGen2jesAbsoluteStatup();
  if (NBGen3jesAbsoluteStatup_branch != 0) NBGen3jesAbsoluteStatup();
  if (NBGen4jesAbsoluteStatup_branch != 0) NBGen4jesAbsoluteStatup();
  if (NLGen0jesAbsoluteStatup_branch != 0) NLGen0jesAbsoluteStatup();
  if (NLGen1jesAbsoluteStatup_branch != 0) NLGen1jesAbsoluteStatup();
  if (NLGen2jesAbsoluteStatup_branch != 0) NLGen2jesAbsoluteStatup();
  if (NLGen3jesAbsoluteStatup_branch != 0) NLGen3jesAbsoluteStatup();
  if (NLGen4jesAbsoluteStatup_branch != 0) NLGen4jesAbsoluteStatup();
  if (NVQGen0jesAbsoluteStatup_branch != 0) NVQGen0jesAbsoluteStatup();
  if (NVQGen1jesAbsoluteStatup_branch != 0) NVQGen1jesAbsoluteStatup();
  if (NVQGen2jesAbsoluteStatup_branch != 0) NVQGen2jesAbsoluteStatup();
  if (NVQGen3jesAbsoluteStatup_branch != 0) NVQGen3jesAbsoluteStatup();
  if (NVQGen4jesAbsoluteStatup_branch != 0) NVQGen4jesAbsoluteStatup();
  if (NiFJjesAbsoluteStatup_branch != 0) NiFJjesAbsoluteStatup();
  if (iFJ0jesAbsoluteStatup_branch != 0) iFJ0jesAbsoluteStatup();
  if (iFJ1jesAbsoluteStatup_branch != 0) iFJ1jesAbsoluteStatup();
  if (iFJ2jesAbsoluteStatup_branch != 0) iFJ2jesAbsoluteStatup();
  if (iFJ3jesAbsoluteStatup_branch != 0) iFJ3jesAbsoluteStatup();
  if (iFJ4jesAbsoluteStatup_branch != 0) iFJ4jesAbsoluteStatup();
  if (iVMD0jesAbsoluteStatup_branch != 0) iVMD0jesAbsoluteStatup();
  if (iVMD1jesAbsoluteStatup_branch != 0) iVMD1jesAbsoluteStatup();
  if (iVMD2jesAbsoluteStatup_branch != 0) iVMD2jesAbsoluteStatup();
  if (iVMD3jesAbsoluteStatup_branch != 0) iVMD3jesAbsoluteStatup();
  if (iVMD4jesAbsoluteStatup_branch != 0) iVMD4jesAbsoluteStatup();
  if (iWMD0jesAbsoluteStatup_branch != 0) iWMD0jesAbsoluteStatup();
  if (iWMD1jesAbsoluteStatup_branch != 0) iWMD1jesAbsoluteStatup();
  if (iWMD2jesAbsoluteStatup_branch != 0) iWMD2jesAbsoluteStatup();
  if (iWMD3jesAbsoluteStatup_branch != 0) iWMD3jesAbsoluteStatup();
  if (iWMD4jesAbsoluteStatup_branch != 0) iWMD4jesAbsoluteStatup();
  if (METjesAbsoluteStatup_branch != 0) METjesAbsoluteStatup();
  if (NujesAbsoluteStatup_branch != 0) NujesAbsoluteStatup();
  if (NJjesAbsoluteStatup_branch != 0) NJjesAbsoluteStatup();
  if (NbLoosejesAbsoluteStatup_branch != 0) NbLoosejesAbsoluteStatup();
  if (NbMediumjesAbsoluteStatup_branch != 0) NbMediumjesAbsoluteStatup();
  if (NbTightjesAbsoluteStatup_branch != 0) NbTightjesAbsoluteStatup();
  if (NoORNbLoosejesAbsoluteStatup_branch != 0) NoORNbLoosejesAbsoluteStatup();
  if (NoORNbMediumjesAbsoluteStatup_branch != 0) NoORNbMediumjesAbsoluteStatup();
  if (NoORNbTightjesAbsoluteStatup_branch != 0) NoORNbTightjesAbsoluteStatup();
  if (J0jesAbsoluteStatup_branch != 0) J0jesAbsoluteStatup();
  if (J1jesAbsoluteStatup_branch != 0) J1jesAbsoluteStatup();
  if (J2jesAbsoluteStatup_branch != 0) J2jesAbsoluteStatup();
  if (J3jesAbsoluteStatup_branch != 0) J3jesAbsoluteStatup();
  if (J4jesAbsoluteStatup_branch != 0) J4jesAbsoluteStatup();
  if (J5jesAbsoluteStatup_branch != 0) J5jesAbsoluteStatup();
  if (J6jesAbsoluteStatup_branch != 0) J6jesAbsoluteStatup();
  if (J7jesAbsoluteStatup_branch != 0) J7jesAbsoluteStatup();
  if (NQJGenjesAbsoluteStatup_branch != 0) NQJGenjesAbsoluteStatup();
  if (NBJGenjesAbsoluteStatup_branch != 0) NBJGenjesAbsoluteStatup();
  if (NLJGenjesAbsoluteStatup_branch != 0) NLJGenjesAbsoluteStatup();
  if (MVVXjesAbsoluteStatup_branch != 0) MVVXjesAbsoluteStatup();
  if (PtVVXjesAbsoluteStatup_branch != 0) PtVVXjesAbsoluteStatup();
  if (HTjesAbsoluteStatup_branch != 0) HTjesAbsoluteStatup();
  if (HTJjesAbsoluteStatup_branch != 0) HTJjesAbsoluteStatup();
  if (HTFJjesAbsoluteStatup_branch != 0) HTFJjesAbsoluteStatup();
  if (SumPtFJjesAbsoluteStatup_branch != 0) SumPtFJjesAbsoluteStatup();
  if (SumPtJjesAbsoluteStatup_branch != 0) SumPtJjesAbsoluteStatup();
  if (JsjesAbsoluteStatdn_branch != 0) JsjesAbsoluteStatdn();
  if (NFJjesAbsoluteStatdn_branch != 0) NFJjesAbsoluteStatdn();
  if (FJ0jesAbsoluteStatdn_branch != 0) FJ0jesAbsoluteStatdn();
  if (FJ1jesAbsoluteStatdn_branch != 0) FJ1jesAbsoluteStatdn();
  if (FJ2jesAbsoluteStatdn_branch != 0) FJ2jesAbsoluteStatdn();
  if (FJ3jesAbsoluteStatdn_branch != 0) FJ3jesAbsoluteStatdn();
  if (FJ4jesAbsoluteStatdn_branch != 0) FJ4jesAbsoluteStatdn();
  if (VMD0jesAbsoluteStatdn_branch != 0) VMD0jesAbsoluteStatdn();
  if (VMD1jesAbsoluteStatdn_branch != 0) VMD1jesAbsoluteStatdn();
  if (VMD2jesAbsoluteStatdn_branch != 0) VMD2jesAbsoluteStatdn();
  if (VMD3jesAbsoluteStatdn_branch != 0) VMD3jesAbsoluteStatdn();
  if (VMD4jesAbsoluteStatdn_branch != 0) VMD4jesAbsoluteStatdn();
  if (WMD0jesAbsoluteStatdn_branch != 0) WMD0jesAbsoluteStatdn();
  if (WMD1jesAbsoluteStatdn_branch != 0) WMD1jesAbsoluteStatdn();
  if (WMD2jesAbsoluteStatdn_branch != 0) WMD2jesAbsoluteStatdn();
  if (WMD3jesAbsoluteStatdn_branch != 0) WMD3jesAbsoluteStatdn();
  if (WMD4jesAbsoluteStatdn_branch != 0) WMD4jesAbsoluteStatdn();
  if (NQGen0jesAbsoluteStatdn_branch != 0) NQGen0jesAbsoluteStatdn();
  if (NQGen1jesAbsoluteStatdn_branch != 0) NQGen1jesAbsoluteStatdn();
  if (NQGen2jesAbsoluteStatdn_branch != 0) NQGen2jesAbsoluteStatdn();
  if (NQGen3jesAbsoluteStatdn_branch != 0) NQGen3jesAbsoluteStatdn();
  if (NQGen4jesAbsoluteStatdn_branch != 0) NQGen4jesAbsoluteStatdn();
  if (NBGen0jesAbsoluteStatdn_branch != 0) NBGen0jesAbsoluteStatdn();
  if (NBGen1jesAbsoluteStatdn_branch != 0) NBGen1jesAbsoluteStatdn();
  if (NBGen2jesAbsoluteStatdn_branch != 0) NBGen2jesAbsoluteStatdn();
  if (NBGen3jesAbsoluteStatdn_branch != 0) NBGen3jesAbsoluteStatdn();
  if (NBGen4jesAbsoluteStatdn_branch != 0) NBGen4jesAbsoluteStatdn();
  if (NLGen0jesAbsoluteStatdn_branch != 0) NLGen0jesAbsoluteStatdn();
  if (NLGen1jesAbsoluteStatdn_branch != 0) NLGen1jesAbsoluteStatdn();
  if (NLGen2jesAbsoluteStatdn_branch != 0) NLGen2jesAbsoluteStatdn();
  if (NLGen3jesAbsoluteStatdn_branch != 0) NLGen3jesAbsoluteStatdn();
  if (NLGen4jesAbsoluteStatdn_branch != 0) NLGen4jesAbsoluteStatdn();
  if (NVQGen0jesAbsoluteStatdn_branch != 0) NVQGen0jesAbsoluteStatdn();
  if (NVQGen1jesAbsoluteStatdn_branch != 0) NVQGen1jesAbsoluteStatdn();
  if (NVQGen2jesAbsoluteStatdn_branch != 0) NVQGen2jesAbsoluteStatdn();
  if (NVQGen3jesAbsoluteStatdn_branch != 0) NVQGen3jesAbsoluteStatdn();
  if (NVQGen4jesAbsoluteStatdn_branch != 0) NVQGen4jesAbsoluteStatdn();
  if (NiFJjesAbsoluteStatdn_branch != 0) NiFJjesAbsoluteStatdn();
  if (iFJ0jesAbsoluteStatdn_branch != 0) iFJ0jesAbsoluteStatdn();
  if (iFJ1jesAbsoluteStatdn_branch != 0) iFJ1jesAbsoluteStatdn();
  if (iFJ2jesAbsoluteStatdn_branch != 0) iFJ2jesAbsoluteStatdn();
  if (iFJ3jesAbsoluteStatdn_branch != 0) iFJ3jesAbsoluteStatdn();
  if (iFJ4jesAbsoluteStatdn_branch != 0) iFJ4jesAbsoluteStatdn();
  if (iVMD0jesAbsoluteStatdn_branch != 0) iVMD0jesAbsoluteStatdn();
  if (iVMD1jesAbsoluteStatdn_branch != 0) iVMD1jesAbsoluteStatdn();
  if (iVMD2jesAbsoluteStatdn_branch != 0) iVMD2jesAbsoluteStatdn();
  if (iVMD3jesAbsoluteStatdn_branch != 0) iVMD3jesAbsoluteStatdn();
  if (iVMD4jesAbsoluteStatdn_branch != 0) iVMD4jesAbsoluteStatdn();
  if (iWMD0jesAbsoluteStatdn_branch != 0) iWMD0jesAbsoluteStatdn();
  if (iWMD1jesAbsoluteStatdn_branch != 0) iWMD1jesAbsoluteStatdn();
  if (iWMD2jesAbsoluteStatdn_branch != 0) iWMD2jesAbsoluteStatdn();
  if (iWMD3jesAbsoluteStatdn_branch != 0) iWMD3jesAbsoluteStatdn();
  if (iWMD4jesAbsoluteStatdn_branch != 0) iWMD4jesAbsoluteStatdn();
  if (METjesAbsoluteStatdn_branch != 0) METjesAbsoluteStatdn();
  if (NujesAbsoluteStatdn_branch != 0) NujesAbsoluteStatdn();
  if (NJjesAbsoluteStatdn_branch != 0) NJjesAbsoluteStatdn();
  if (NbLoosejesAbsoluteStatdn_branch != 0) NbLoosejesAbsoluteStatdn();
  if (NbMediumjesAbsoluteStatdn_branch != 0) NbMediumjesAbsoluteStatdn();
  if (NbTightjesAbsoluteStatdn_branch != 0) NbTightjesAbsoluteStatdn();
  if (NoORNbLoosejesAbsoluteStatdn_branch != 0) NoORNbLoosejesAbsoluteStatdn();
  if (NoORNbMediumjesAbsoluteStatdn_branch != 0) NoORNbMediumjesAbsoluteStatdn();
  if (NoORNbTightjesAbsoluteStatdn_branch != 0) NoORNbTightjesAbsoluteStatdn();
  if (J0jesAbsoluteStatdn_branch != 0) J0jesAbsoluteStatdn();
  if (J1jesAbsoluteStatdn_branch != 0) J1jesAbsoluteStatdn();
  if (J2jesAbsoluteStatdn_branch != 0) J2jesAbsoluteStatdn();
  if (J3jesAbsoluteStatdn_branch != 0) J3jesAbsoluteStatdn();
  if (J4jesAbsoluteStatdn_branch != 0) J4jesAbsoluteStatdn();
  if (J5jesAbsoluteStatdn_branch != 0) J5jesAbsoluteStatdn();
  if (J6jesAbsoluteStatdn_branch != 0) J6jesAbsoluteStatdn();
  if (J7jesAbsoluteStatdn_branch != 0) J7jesAbsoluteStatdn();
  if (NQJGenjesAbsoluteStatdn_branch != 0) NQJGenjesAbsoluteStatdn();
  if (NBJGenjesAbsoluteStatdn_branch != 0) NBJGenjesAbsoluteStatdn();
  if (NLJGenjesAbsoluteStatdn_branch != 0) NLJGenjesAbsoluteStatdn();
  if (MVVXjesAbsoluteStatdn_branch != 0) MVVXjesAbsoluteStatdn();
  if (PtVVXjesAbsoluteStatdn_branch != 0) PtVVXjesAbsoluteStatdn();
  if (HTjesAbsoluteStatdn_branch != 0) HTjesAbsoluteStatdn();
  if (HTJjesAbsoluteStatdn_branch != 0) HTJjesAbsoluteStatdn();
  if (HTFJjesAbsoluteStatdn_branch != 0) HTFJjesAbsoluteStatdn();
  if (SumPtFJjesAbsoluteStatdn_branch != 0) SumPtFJjesAbsoluteStatdn();
  if (SumPtJjesAbsoluteStatdn_branch != 0) SumPtJjesAbsoluteStatdn();
  if (JsjesAbsoluteScaleup_branch != 0) JsjesAbsoluteScaleup();
  if (NFJjesAbsoluteScaleup_branch != 0) NFJjesAbsoluteScaleup();
  if (FJ0jesAbsoluteScaleup_branch != 0) FJ0jesAbsoluteScaleup();
  if (FJ1jesAbsoluteScaleup_branch != 0) FJ1jesAbsoluteScaleup();
  if (FJ2jesAbsoluteScaleup_branch != 0) FJ2jesAbsoluteScaleup();
  if (FJ3jesAbsoluteScaleup_branch != 0) FJ3jesAbsoluteScaleup();
  if (FJ4jesAbsoluteScaleup_branch != 0) FJ4jesAbsoluteScaleup();
  if (VMD0jesAbsoluteScaleup_branch != 0) VMD0jesAbsoluteScaleup();
  if (VMD1jesAbsoluteScaleup_branch != 0) VMD1jesAbsoluteScaleup();
  if (VMD2jesAbsoluteScaleup_branch != 0) VMD2jesAbsoluteScaleup();
  if (VMD3jesAbsoluteScaleup_branch != 0) VMD3jesAbsoluteScaleup();
  if (VMD4jesAbsoluteScaleup_branch != 0) VMD4jesAbsoluteScaleup();
  if (WMD0jesAbsoluteScaleup_branch != 0) WMD0jesAbsoluteScaleup();
  if (WMD1jesAbsoluteScaleup_branch != 0) WMD1jesAbsoluteScaleup();
  if (WMD2jesAbsoluteScaleup_branch != 0) WMD2jesAbsoluteScaleup();
  if (WMD3jesAbsoluteScaleup_branch != 0) WMD3jesAbsoluteScaleup();
  if (WMD4jesAbsoluteScaleup_branch != 0) WMD4jesAbsoluteScaleup();
  if (NQGen0jesAbsoluteScaleup_branch != 0) NQGen0jesAbsoluteScaleup();
  if (NQGen1jesAbsoluteScaleup_branch != 0) NQGen1jesAbsoluteScaleup();
  if (NQGen2jesAbsoluteScaleup_branch != 0) NQGen2jesAbsoluteScaleup();
  if (NQGen3jesAbsoluteScaleup_branch != 0) NQGen3jesAbsoluteScaleup();
  if (NQGen4jesAbsoluteScaleup_branch != 0) NQGen4jesAbsoluteScaleup();
  if (NBGen0jesAbsoluteScaleup_branch != 0) NBGen0jesAbsoluteScaleup();
  if (NBGen1jesAbsoluteScaleup_branch != 0) NBGen1jesAbsoluteScaleup();
  if (NBGen2jesAbsoluteScaleup_branch != 0) NBGen2jesAbsoluteScaleup();
  if (NBGen3jesAbsoluteScaleup_branch != 0) NBGen3jesAbsoluteScaleup();
  if (NBGen4jesAbsoluteScaleup_branch != 0) NBGen4jesAbsoluteScaleup();
  if (NLGen0jesAbsoluteScaleup_branch != 0) NLGen0jesAbsoluteScaleup();
  if (NLGen1jesAbsoluteScaleup_branch != 0) NLGen1jesAbsoluteScaleup();
  if (NLGen2jesAbsoluteScaleup_branch != 0) NLGen2jesAbsoluteScaleup();
  if (NLGen3jesAbsoluteScaleup_branch != 0) NLGen3jesAbsoluteScaleup();
  if (NLGen4jesAbsoluteScaleup_branch != 0) NLGen4jesAbsoluteScaleup();
  if (NVQGen0jesAbsoluteScaleup_branch != 0) NVQGen0jesAbsoluteScaleup();
  if (NVQGen1jesAbsoluteScaleup_branch != 0) NVQGen1jesAbsoluteScaleup();
  if (NVQGen2jesAbsoluteScaleup_branch != 0) NVQGen2jesAbsoluteScaleup();
  if (NVQGen3jesAbsoluteScaleup_branch != 0) NVQGen3jesAbsoluteScaleup();
  if (NVQGen4jesAbsoluteScaleup_branch != 0) NVQGen4jesAbsoluteScaleup();
  if (NiFJjesAbsoluteScaleup_branch != 0) NiFJjesAbsoluteScaleup();
  if (iFJ0jesAbsoluteScaleup_branch != 0) iFJ0jesAbsoluteScaleup();
  if (iFJ1jesAbsoluteScaleup_branch != 0) iFJ1jesAbsoluteScaleup();
  if (iFJ2jesAbsoluteScaleup_branch != 0) iFJ2jesAbsoluteScaleup();
  if (iFJ3jesAbsoluteScaleup_branch != 0) iFJ3jesAbsoluteScaleup();
  if (iFJ4jesAbsoluteScaleup_branch != 0) iFJ4jesAbsoluteScaleup();
  if (iVMD0jesAbsoluteScaleup_branch != 0) iVMD0jesAbsoluteScaleup();
  if (iVMD1jesAbsoluteScaleup_branch != 0) iVMD1jesAbsoluteScaleup();
  if (iVMD2jesAbsoluteScaleup_branch != 0) iVMD2jesAbsoluteScaleup();
  if (iVMD3jesAbsoluteScaleup_branch != 0) iVMD3jesAbsoluteScaleup();
  if (iVMD4jesAbsoluteScaleup_branch != 0) iVMD4jesAbsoluteScaleup();
  if (iWMD0jesAbsoluteScaleup_branch != 0) iWMD0jesAbsoluteScaleup();
  if (iWMD1jesAbsoluteScaleup_branch != 0) iWMD1jesAbsoluteScaleup();
  if (iWMD2jesAbsoluteScaleup_branch != 0) iWMD2jesAbsoluteScaleup();
  if (iWMD3jesAbsoluteScaleup_branch != 0) iWMD3jesAbsoluteScaleup();
  if (iWMD4jesAbsoluteScaleup_branch != 0) iWMD4jesAbsoluteScaleup();
  if (METjesAbsoluteScaleup_branch != 0) METjesAbsoluteScaleup();
  if (NujesAbsoluteScaleup_branch != 0) NujesAbsoluteScaleup();
  if (NJjesAbsoluteScaleup_branch != 0) NJjesAbsoluteScaleup();
  if (NbLoosejesAbsoluteScaleup_branch != 0) NbLoosejesAbsoluteScaleup();
  if (NbMediumjesAbsoluteScaleup_branch != 0) NbMediumjesAbsoluteScaleup();
  if (NbTightjesAbsoluteScaleup_branch != 0) NbTightjesAbsoluteScaleup();
  if (NoORNbLoosejesAbsoluteScaleup_branch != 0) NoORNbLoosejesAbsoluteScaleup();
  if (NoORNbMediumjesAbsoluteScaleup_branch != 0) NoORNbMediumjesAbsoluteScaleup();
  if (NoORNbTightjesAbsoluteScaleup_branch != 0) NoORNbTightjesAbsoluteScaleup();
  if (J0jesAbsoluteScaleup_branch != 0) J0jesAbsoluteScaleup();
  if (J1jesAbsoluteScaleup_branch != 0) J1jesAbsoluteScaleup();
  if (J2jesAbsoluteScaleup_branch != 0) J2jesAbsoluteScaleup();
  if (J3jesAbsoluteScaleup_branch != 0) J3jesAbsoluteScaleup();
  if (J4jesAbsoluteScaleup_branch != 0) J4jesAbsoluteScaleup();
  if (J5jesAbsoluteScaleup_branch != 0) J5jesAbsoluteScaleup();
  if (J6jesAbsoluteScaleup_branch != 0) J6jesAbsoluteScaleup();
  if (J7jesAbsoluteScaleup_branch != 0) J7jesAbsoluteScaleup();
  if (NQJGenjesAbsoluteScaleup_branch != 0) NQJGenjesAbsoluteScaleup();
  if (NBJGenjesAbsoluteScaleup_branch != 0) NBJGenjesAbsoluteScaleup();
  if (NLJGenjesAbsoluteScaleup_branch != 0) NLJGenjesAbsoluteScaleup();
  if (MVVXjesAbsoluteScaleup_branch != 0) MVVXjesAbsoluteScaleup();
  if (PtVVXjesAbsoluteScaleup_branch != 0) PtVVXjesAbsoluteScaleup();
  if (HTjesAbsoluteScaleup_branch != 0) HTjesAbsoluteScaleup();
  if (HTJjesAbsoluteScaleup_branch != 0) HTJjesAbsoluteScaleup();
  if (HTFJjesAbsoluteScaleup_branch != 0) HTFJjesAbsoluteScaleup();
  if (SumPtFJjesAbsoluteScaleup_branch != 0) SumPtFJjesAbsoluteScaleup();
  if (SumPtJjesAbsoluteScaleup_branch != 0) SumPtJjesAbsoluteScaleup();
  if (JsjesAbsoluteScaledn_branch != 0) JsjesAbsoluteScaledn();
  if (NFJjesAbsoluteScaledn_branch != 0) NFJjesAbsoluteScaledn();
  if (FJ0jesAbsoluteScaledn_branch != 0) FJ0jesAbsoluteScaledn();
  if (FJ1jesAbsoluteScaledn_branch != 0) FJ1jesAbsoluteScaledn();
  if (FJ2jesAbsoluteScaledn_branch != 0) FJ2jesAbsoluteScaledn();
  if (FJ3jesAbsoluteScaledn_branch != 0) FJ3jesAbsoluteScaledn();
  if (FJ4jesAbsoluteScaledn_branch != 0) FJ4jesAbsoluteScaledn();
  if (VMD0jesAbsoluteScaledn_branch != 0) VMD0jesAbsoluteScaledn();
  if (VMD1jesAbsoluteScaledn_branch != 0) VMD1jesAbsoluteScaledn();
  if (VMD2jesAbsoluteScaledn_branch != 0) VMD2jesAbsoluteScaledn();
  if (VMD3jesAbsoluteScaledn_branch != 0) VMD3jesAbsoluteScaledn();
  if (VMD4jesAbsoluteScaledn_branch != 0) VMD4jesAbsoluteScaledn();
  if (WMD0jesAbsoluteScaledn_branch != 0) WMD0jesAbsoluteScaledn();
  if (WMD1jesAbsoluteScaledn_branch != 0) WMD1jesAbsoluteScaledn();
  if (WMD2jesAbsoluteScaledn_branch != 0) WMD2jesAbsoluteScaledn();
  if (WMD3jesAbsoluteScaledn_branch != 0) WMD3jesAbsoluteScaledn();
  if (WMD4jesAbsoluteScaledn_branch != 0) WMD4jesAbsoluteScaledn();
  if (NQGen0jesAbsoluteScaledn_branch != 0) NQGen0jesAbsoluteScaledn();
  if (NQGen1jesAbsoluteScaledn_branch != 0) NQGen1jesAbsoluteScaledn();
  if (NQGen2jesAbsoluteScaledn_branch != 0) NQGen2jesAbsoluteScaledn();
  if (NQGen3jesAbsoluteScaledn_branch != 0) NQGen3jesAbsoluteScaledn();
  if (NQGen4jesAbsoluteScaledn_branch != 0) NQGen4jesAbsoluteScaledn();
  if (NBGen0jesAbsoluteScaledn_branch != 0) NBGen0jesAbsoluteScaledn();
  if (NBGen1jesAbsoluteScaledn_branch != 0) NBGen1jesAbsoluteScaledn();
  if (NBGen2jesAbsoluteScaledn_branch != 0) NBGen2jesAbsoluteScaledn();
  if (NBGen3jesAbsoluteScaledn_branch != 0) NBGen3jesAbsoluteScaledn();
  if (NBGen4jesAbsoluteScaledn_branch != 0) NBGen4jesAbsoluteScaledn();
  if (NLGen0jesAbsoluteScaledn_branch != 0) NLGen0jesAbsoluteScaledn();
  if (NLGen1jesAbsoluteScaledn_branch != 0) NLGen1jesAbsoluteScaledn();
  if (NLGen2jesAbsoluteScaledn_branch != 0) NLGen2jesAbsoluteScaledn();
  if (NLGen3jesAbsoluteScaledn_branch != 0) NLGen3jesAbsoluteScaledn();
  if (NLGen4jesAbsoluteScaledn_branch != 0) NLGen4jesAbsoluteScaledn();
  if (NVQGen0jesAbsoluteScaledn_branch != 0) NVQGen0jesAbsoluteScaledn();
  if (NVQGen1jesAbsoluteScaledn_branch != 0) NVQGen1jesAbsoluteScaledn();
  if (NVQGen2jesAbsoluteScaledn_branch != 0) NVQGen2jesAbsoluteScaledn();
  if (NVQGen3jesAbsoluteScaledn_branch != 0) NVQGen3jesAbsoluteScaledn();
  if (NVQGen4jesAbsoluteScaledn_branch != 0) NVQGen4jesAbsoluteScaledn();
  if (NiFJjesAbsoluteScaledn_branch != 0) NiFJjesAbsoluteScaledn();
  if (iFJ0jesAbsoluteScaledn_branch != 0) iFJ0jesAbsoluteScaledn();
  if (iFJ1jesAbsoluteScaledn_branch != 0) iFJ1jesAbsoluteScaledn();
  if (iFJ2jesAbsoluteScaledn_branch != 0) iFJ2jesAbsoluteScaledn();
  if (iFJ3jesAbsoluteScaledn_branch != 0) iFJ3jesAbsoluteScaledn();
  if (iFJ4jesAbsoluteScaledn_branch != 0) iFJ4jesAbsoluteScaledn();
  if (iVMD0jesAbsoluteScaledn_branch != 0) iVMD0jesAbsoluteScaledn();
  if (iVMD1jesAbsoluteScaledn_branch != 0) iVMD1jesAbsoluteScaledn();
  if (iVMD2jesAbsoluteScaledn_branch != 0) iVMD2jesAbsoluteScaledn();
  if (iVMD3jesAbsoluteScaledn_branch != 0) iVMD3jesAbsoluteScaledn();
  if (iVMD4jesAbsoluteScaledn_branch != 0) iVMD4jesAbsoluteScaledn();
  if (iWMD0jesAbsoluteScaledn_branch != 0) iWMD0jesAbsoluteScaledn();
  if (iWMD1jesAbsoluteScaledn_branch != 0) iWMD1jesAbsoluteScaledn();
  if (iWMD2jesAbsoluteScaledn_branch != 0) iWMD2jesAbsoluteScaledn();
  if (iWMD3jesAbsoluteScaledn_branch != 0) iWMD3jesAbsoluteScaledn();
  if (iWMD4jesAbsoluteScaledn_branch != 0) iWMD4jesAbsoluteScaledn();
  if (METjesAbsoluteScaledn_branch != 0) METjesAbsoluteScaledn();
  if (NujesAbsoluteScaledn_branch != 0) NujesAbsoluteScaledn();
  if (NJjesAbsoluteScaledn_branch != 0) NJjesAbsoluteScaledn();
  if (NbLoosejesAbsoluteScaledn_branch != 0) NbLoosejesAbsoluteScaledn();
  if (NbMediumjesAbsoluteScaledn_branch != 0) NbMediumjesAbsoluteScaledn();
  if (NbTightjesAbsoluteScaledn_branch != 0) NbTightjesAbsoluteScaledn();
  if (NoORNbLoosejesAbsoluteScaledn_branch != 0) NoORNbLoosejesAbsoluteScaledn();
  if (NoORNbMediumjesAbsoluteScaledn_branch != 0) NoORNbMediumjesAbsoluteScaledn();
  if (NoORNbTightjesAbsoluteScaledn_branch != 0) NoORNbTightjesAbsoluteScaledn();
  if (J0jesAbsoluteScaledn_branch != 0) J0jesAbsoluteScaledn();
  if (J1jesAbsoluteScaledn_branch != 0) J1jesAbsoluteScaledn();
  if (J2jesAbsoluteScaledn_branch != 0) J2jesAbsoluteScaledn();
  if (J3jesAbsoluteScaledn_branch != 0) J3jesAbsoluteScaledn();
  if (J4jesAbsoluteScaledn_branch != 0) J4jesAbsoluteScaledn();
  if (J5jesAbsoluteScaledn_branch != 0) J5jesAbsoluteScaledn();
  if (J6jesAbsoluteScaledn_branch != 0) J6jesAbsoluteScaledn();
  if (J7jesAbsoluteScaledn_branch != 0) J7jesAbsoluteScaledn();
  if (NQJGenjesAbsoluteScaledn_branch != 0) NQJGenjesAbsoluteScaledn();
  if (NBJGenjesAbsoluteScaledn_branch != 0) NBJGenjesAbsoluteScaledn();
  if (NLJGenjesAbsoluteScaledn_branch != 0) NLJGenjesAbsoluteScaledn();
  if (MVVXjesAbsoluteScaledn_branch != 0) MVVXjesAbsoluteScaledn();
  if (PtVVXjesAbsoluteScaledn_branch != 0) PtVVXjesAbsoluteScaledn();
  if (HTjesAbsoluteScaledn_branch != 0) HTjesAbsoluteScaledn();
  if (HTJjesAbsoluteScaledn_branch != 0) HTJjesAbsoluteScaledn();
  if (HTFJjesAbsoluteScaledn_branch != 0) HTFJjesAbsoluteScaledn();
  if (SumPtFJjesAbsoluteScaledn_branch != 0) SumPtFJjesAbsoluteScaledn();
  if (SumPtJjesAbsoluteScaledn_branch != 0) SumPtJjesAbsoluteScaledn();
  if (JsjesAbsoluteMPFBiasup_branch != 0) JsjesAbsoluteMPFBiasup();
  if (NFJjesAbsoluteMPFBiasup_branch != 0) NFJjesAbsoluteMPFBiasup();
  if (FJ0jesAbsoluteMPFBiasup_branch != 0) FJ0jesAbsoluteMPFBiasup();
  if (FJ1jesAbsoluteMPFBiasup_branch != 0) FJ1jesAbsoluteMPFBiasup();
  if (FJ2jesAbsoluteMPFBiasup_branch != 0) FJ2jesAbsoluteMPFBiasup();
  if (FJ3jesAbsoluteMPFBiasup_branch != 0) FJ3jesAbsoluteMPFBiasup();
  if (FJ4jesAbsoluteMPFBiasup_branch != 0) FJ4jesAbsoluteMPFBiasup();
  if (VMD0jesAbsoluteMPFBiasup_branch != 0) VMD0jesAbsoluteMPFBiasup();
  if (VMD1jesAbsoluteMPFBiasup_branch != 0) VMD1jesAbsoluteMPFBiasup();
  if (VMD2jesAbsoluteMPFBiasup_branch != 0) VMD2jesAbsoluteMPFBiasup();
  if (VMD3jesAbsoluteMPFBiasup_branch != 0) VMD3jesAbsoluteMPFBiasup();
  if (VMD4jesAbsoluteMPFBiasup_branch != 0) VMD4jesAbsoluteMPFBiasup();
  if (WMD0jesAbsoluteMPFBiasup_branch != 0) WMD0jesAbsoluteMPFBiasup();
  if (WMD1jesAbsoluteMPFBiasup_branch != 0) WMD1jesAbsoluteMPFBiasup();
  if (WMD2jesAbsoluteMPFBiasup_branch != 0) WMD2jesAbsoluteMPFBiasup();
  if (WMD3jesAbsoluteMPFBiasup_branch != 0) WMD3jesAbsoluteMPFBiasup();
  if (WMD4jesAbsoluteMPFBiasup_branch != 0) WMD4jesAbsoluteMPFBiasup();
  if (NQGen0jesAbsoluteMPFBiasup_branch != 0) NQGen0jesAbsoluteMPFBiasup();
  if (NQGen1jesAbsoluteMPFBiasup_branch != 0) NQGen1jesAbsoluteMPFBiasup();
  if (NQGen2jesAbsoluteMPFBiasup_branch != 0) NQGen2jesAbsoluteMPFBiasup();
  if (NQGen3jesAbsoluteMPFBiasup_branch != 0) NQGen3jesAbsoluteMPFBiasup();
  if (NQGen4jesAbsoluteMPFBiasup_branch != 0) NQGen4jesAbsoluteMPFBiasup();
  if (NBGen0jesAbsoluteMPFBiasup_branch != 0) NBGen0jesAbsoluteMPFBiasup();
  if (NBGen1jesAbsoluteMPFBiasup_branch != 0) NBGen1jesAbsoluteMPFBiasup();
  if (NBGen2jesAbsoluteMPFBiasup_branch != 0) NBGen2jesAbsoluteMPFBiasup();
  if (NBGen3jesAbsoluteMPFBiasup_branch != 0) NBGen3jesAbsoluteMPFBiasup();
  if (NBGen4jesAbsoluteMPFBiasup_branch != 0) NBGen4jesAbsoluteMPFBiasup();
  if (NLGen0jesAbsoluteMPFBiasup_branch != 0) NLGen0jesAbsoluteMPFBiasup();
  if (NLGen1jesAbsoluteMPFBiasup_branch != 0) NLGen1jesAbsoluteMPFBiasup();
  if (NLGen2jesAbsoluteMPFBiasup_branch != 0) NLGen2jesAbsoluteMPFBiasup();
  if (NLGen3jesAbsoluteMPFBiasup_branch != 0) NLGen3jesAbsoluteMPFBiasup();
  if (NLGen4jesAbsoluteMPFBiasup_branch != 0) NLGen4jesAbsoluteMPFBiasup();
  if (NVQGen0jesAbsoluteMPFBiasup_branch != 0) NVQGen0jesAbsoluteMPFBiasup();
  if (NVQGen1jesAbsoluteMPFBiasup_branch != 0) NVQGen1jesAbsoluteMPFBiasup();
  if (NVQGen2jesAbsoluteMPFBiasup_branch != 0) NVQGen2jesAbsoluteMPFBiasup();
  if (NVQGen3jesAbsoluteMPFBiasup_branch != 0) NVQGen3jesAbsoluteMPFBiasup();
  if (NVQGen4jesAbsoluteMPFBiasup_branch != 0) NVQGen4jesAbsoluteMPFBiasup();
  if (NiFJjesAbsoluteMPFBiasup_branch != 0) NiFJjesAbsoluteMPFBiasup();
  if (iFJ0jesAbsoluteMPFBiasup_branch != 0) iFJ0jesAbsoluteMPFBiasup();
  if (iFJ1jesAbsoluteMPFBiasup_branch != 0) iFJ1jesAbsoluteMPFBiasup();
  if (iFJ2jesAbsoluteMPFBiasup_branch != 0) iFJ2jesAbsoluteMPFBiasup();
  if (iFJ3jesAbsoluteMPFBiasup_branch != 0) iFJ3jesAbsoluteMPFBiasup();
  if (iFJ4jesAbsoluteMPFBiasup_branch != 0) iFJ4jesAbsoluteMPFBiasup();
  if (iVMD0jesAbsoluteMPFBiasup_branch != 0) iVMD0jesAbsoluteMPFBiasup();
  if (iVMD1jesAbsoluteMPFBiasup_branch != 0) iVMD1jesAbsoluteMPFBiasup();
  if (iVMD2jesAbsoluteMPFBiasup_branch != 0) iVMD2jesAbsoluteMPFBiasup();
  if (iVMD3jesAbsoluteMPFBiasup_branch != 0) iVMD3jesAbsoluteMPFBiasup();
  if (iVMD4jesAbsoluteMPFBiasup_branch != 0) iVMD4jesAbsoluteMPFBiasup();
  if (iWMD0jesAbsoluteMPFBiasup_branch != 0) iWMD0jesAbsoluteMPFBiasup();
  if (iWMD1jesAbsoluteMPFBiasup_branch != 0) iWMD1jesAbsoluteMPFBiasup();
  if (iWMD2jesAbsoluteMPFBiasup_branch != 0) iWMD2jesAbsoluteMPFBiasup();
  if (iWMD3jesAbsoluteMPFBiasup_branch != 0) iWMD3jesAbsoluteMPFBiasup();
  if (iWMD4jesAbsoluteMPFBiasup_branch != 0) iWMD4jesAbsoluteMPFBiasup();
  if (METjesAbsoluteMPFBiasup_branch != 0) METjesAbsoluteMPFBiasup();
  if (NujesAbsoluteMPFBiasup_branch != 0) NujesAbsoluteMPFBiasup();
  if (NJjesAbsoluteMPFBiasup_branch != 0) NJjesAbsoluteMPFBiasup();
  if (NbLoosejesAbsoluteMPFBiasup_branch != 0) NbLoosejesAbsoluteMPFBiasup();
  if (NbMediumjesAbsoluteMPFBiasup_branch != 0) NbMediumjesAbsoluteMPFBiasup();
  if (NbTightjesAbsoluteMPFBiasup_branch != 0) NbTightjesAbsoluteMPFBiasup();
  if (NoORNbLoosejesAbsoluteMPFBiasup_branch != 0) NoORNbLoosejesAbsoluteMPFBiasup();
  if (NoORNbMediumjesAbsoluteMPFBiasup_branch != 0) NoORNbMediumjesAbsoluteMPFBiasup();
  if (NoORNbTightjesAbsoluteMPFBiasup_branch != 0) NoORNbTightjesAbsoluteMPFBiasup();
  if (J0jesAbsoluteMPFBiasup_branch != 0) J0jesAbsoluteMPFBiasup();
  if (J1jesAbsoluteMPFBiasup_branch != 0) J1jesAbsoluteMPFBiasup();
  if (J2jesAbsoluteMPFBiasup_branch != 0) J2jesAbsoluteMPFBiasup();
  if (J3jesAbsoluteMPFBiasup_branch != 0) J3jesAbsoluteMPFBiasup();
  if (J4jesAbsoluteMPFBiasup_branch != 0) J4jesAbsoluteMPFBiasup();
  if (J5jesAbsoluteMPFBiasup_branch != 0) J5jesAbsoluteMPFBiasup();
  if (J6jesAbsoluteMPFBiasup_branch != 0) J6jesAbsoluteMPFBiasup();
  if (J7jesAbsoluteMPFBiasup_branch != 0) J7jesAbsoluteMPFBiasup();
  if (NQJGenjesAbsoluteMPFBiasup_branch != 0) NQJGenjesAbsoluteMPFBiasup();
  if (NBJGenjesAbsoluteMPFBiasup_branch != 0) NBJGenjesAbsoluteMPFBiasup();
  if (NLJGenjesAbsoluteMPFBiasup_branch != 0) NLJGenjesAbsoluteMPFBiasup();
  if (MVVXjesAbsoluteMPFBiasup_branch != 0) MVVXjesAbsoluteMPFBiasup();
  if (PtVVXjesAbsoluteMPFBiasup_branch != 0) PtVVXjesAbsoluteMPFBiasup();
  if (HTjesAbsoluteMPFBiasup_branch != 0) HTjesAbsoluteMPFBiasup();
  if (HTJjesAbsoluteMPFBiasup_branch != 0) HTJjesAbsoluteMPFBiasup();
  if (HTFJjesAbsoluteMPFBiasup_branch != 0) HTFJjesAbsoluteMPFBiasup();
  if (SumPtFJjesAbsoluteMPFBiasup_branch != 0) SumPtFJjesAbsoluteMPFBiasup();
  if (SumPtJjesAbsoluteMPFBiasup_branch != 0) SumPtJjesAbsoluteMPFBiasup();
  if (JsjesAbsoluteMPFBiasdn_branch != 0) JsjesAbsoluteMPFBiasdn();
  if (NFJjesAbsoluteMPFBiasdn_branch != 0) NFJjesAbsoluteMPFBiasdn();
  if (FJ0jesAbsoluteMPFBiasdn_branch != 0) FJ0jesAbsoluteMPFBiasdn();
  if (FJ1jesAbsoluteMPFBiasdn_branch != 0) FJ1jesAbsoluteMPFBiasdn();
  if (FJ2jesAbsoluteMPFBiasdn_branch != 0) FJ2jesAbsoluteMPFBiasdn();
  if (FJ3jesAbsoluteMPFBiasdn_branch != 0) FJ3jesAbsoluteMPFBiasdn();
  if (FJ4jesAbsoluteMPFBiasdn_branch != 0) FJ4jesAbsoluteMPFBiasdn();
  if (VMD0jesAbsoluteMPFBiasdn_branch != 0) VMD0jesAbsoluteMPFBiasdn();
  if (VMD1jesAbsoluteMPFBiasdn_branch != 0) VMD1jesAbsoluteMPFBiasdn();
  if (VMD2jesAbsoluteMPFBiasdn_branch != 0) VMD2jesAbsoluteMPFBiasdn();
  if (VMD3jesAbsoluteMPFBiasdn_branch != 0) VMD3jesAbsoluteMPFBiasdn();
  if (VMD4jesAbsoluteMPFBiasdn_branch != 0) VMD4jesAbsoluteMPFBiasdn();
  if (WMD0jesAbsoluteMPFBiasdn_branch != 0) WMD0jesAbsoluteMPFBiasdn();
  if (WMD1jesAbsoluteMPFBiasdn_branch != 0) WMD1jesAbsoluteMPFBiasdn();
  if (WMD2jesAbsoluteMPFBiasdn_branch != 0) WMD2jesAbsoluteMPFBiasdn();
  if (WMD3jesAbsoluteMPFBiasdn_branch != 0) WMD3jesAbsoluteMPFBiasdn();
  if (WMD4jesAbsoluteMPFBiasdn_branch != 0) WMD4jesAbsoluteMPFBiasdn();
  if (NQGen0jesAbsoluteMPFBiasdn_branch != 0) NQGen0jesAbsoluteMPFBiasdn();
  if (NQGen1jesAbsoluteMPFBiasdn_branch != 0) NQGen1jesAbsoluteMPFBiasdn();
  if (NQGen2jesAbsoluteMPFBiasdn_branch != 0) NQGen2jesAbsoluteMPFBiasdn();
  if (NQGen3jesAbsoluteMPFBiasdn_branch != 0) NQGen3jesAbsoluteMPFBiasdn();
  if (NQGen4jesAbsoluteMPFBiasdn_branch != 0) NQGen4jesAbsoluteMPFBiasdn();
  if (NBGen0jesAbsoluteMPFBiasdn_branch != 0) NBGen0jesAbsoluteMPFBiasdn();
  if (NBGen1jesAbsoluteMPFBiasdn_branch != 0) NBGen1jesAbsoluteMPFBiasdn();
  if (NBGen2jesAbsoluteMPFBiasdn_branch != 0) NBGen2jesAbsoluteMPFBiasdn();
  if (NBGen3jesAbsoluteMPFBiasdn_branch != 0) NBGen3jesAbsoluteMPFBiasdn();
  if (NBGen4jesAbsoluteMPFBiasdn_branch != 0) NBGen4jesAbsoluteMPFBiasdn();
  if (NLGen0jesAbsoluteMPFBiasdn_branch != 0) NLGen0jesAbsoluteMPFBiasdn();
  if (NLGen1jesAbsoluteMPFBiasdn_branch != 0) NLGen1jesAbsoluteMPFBiasdn();
  if (NLGen2jesAbsoluteMPFBiasdn_branch != 0) NLGen2jesAbsoluteMPFBiasdn();
  if (NLGen3jesAbsoluteMPFBiasdn_branch != 0) NLGen3jesAbsoluteMPFBiasdn();
  if (NLGen4jesAbsoluteMPFBiasdn_branch != 0) NLGen4jesAbsoluteMPFBiasdn();
  if (NVQGen0jesAbsoluteMPFBiasdn_branch != 0) NVQGen0jesAbsoluteMPFBiasdn();
  if (NVQGen1jesAbsoluteMPFBiasdn_branch != 0) NVQGen1jesAbsoluteMPFBiasdn();
  if (NVQGen2jesAbsoluteMPFBiasdn_branch != 0) NVQGen2jesAbsoluteMPFBiasdn();
  if (NVQGen3jesAbsoluteMPFBiasdn_branch != 0) NVQGen3jesAbsoluteMPFBiasdn();
  if (NVQGen4jesAbsoluteMPFBiasdn_branch != 0) NVQGen4jesAbsoluteMPFBiasdn();
  if (NiFJjesAbsoluteMPFBiasdn_branch != 0) NiFJjesAbsoluteMPFBiasdn();
  if (iFJ0jesAbsoluteMPFBiasdn_branch != 0) iFJ0jesAbsoluteMPFBiasdn();
  if (iFJ1jesAbsoluteMPFBiasdn_branch != 0) iFJ1jesAbsoluteMPFBiasdn();
  if (iFJ2jesAbsoluteMPFBiasdn_branch != 0) iFJ2jesAbsoluteMPFBiasdn();
  if (iFJ3jesAbsoluteMPFBiasdn_branch != 0) iFJ3jesAbsoluteMPFBiasdn();
  if (iFJ4jesAbsoluteMPFBiasdn_branch != 0) iFJ4jesAbsoluteMPFBiasdn();
  if (iVMD0jesAbsoluteMPFBiasdn_branch != 0) iVMD0jesAbsoluteMPFBiasdn();
  if (iVMD1jesAbsoluteMPFBiasdn_branch != 0) iVMD1jesAbsoluteMPFBiasdn();
  if (iVMD2jesAbsoluteMPFBiasdn_branch != 0) iVMD2jesAbsoluteMPFBiasdn();
  if (iVMD3jesAbsoluteMPFBiasdn_branch != 0) iVMD3jesAbsoluteMPFBiasdn();
  if (iVMD4jesAbsoluteMPFBiasdn_branch != 0) iVMD4jesAbsoluteMPFBiasdn();
  if (iWMD0jesAbsoluteMPFBiasdn_branch != 0) iWMD0jesAbsoluteMPFBiasdn();
  if (iWMD1jesAbsoluteMPFBiasdn_branch != 0) iWMD1jesAbsoluteMPFBiasdn();
  if (iWMD2jesAbsoluteMPFBiasdn_branch != 0) iWMD2jesAbsoluteMPFBiasdn();
  if (iWMD3jesAbsoluteMPFBiasdn_branch != 0) iWMD3jesAbsoluteMPFBiasdn();
  if (iWMD4jesAbsoluteMPFBiasdn_branch != 0) iWMD4jesAbsoluteMPFBiasdn();
  if (METjesAbsoluteMPFBiasdn_branch != 0) METjesAbsoluteMPFBiasdn();
  if (NujesAbsoluteMPFBiasdn_branch != 0) NujesAbsoluteMPFBiasdn();
  if (NJjesAbsoluteMPFBiasdn_branch != 0) NJjesAbsoluteMPFBiasdn();
  if (NbLoosejesAbsoluteMPFBiasdn_branch != 0) NbLoosejesAbsoluteMPFBiasdn();
  if (NbMediumjesAbsoluteMPFBiasdn_branch != 0) NbMediumjesAbsoluteMPFBiasdn();
  if (NbTightjesAbsoluteMPFBiasdn_branch != 0) NbTightjesAbsoluteMPFBiasdn();
  if (NoORNbLoosejesAbsoluteMPFBiasdn_branch != 0) NoORNbLoosejesAbsoluteMPFBiasdn();
  if (NoORNbMediumjesAbsoluteMPFBiasdn_branch != 0) NoORNbMediumjesAbsoluteMPFBiasdn();
  if (NoORNbTightjesAbsoluteMPFBiasdn_branch != 0) NoORNbTightjesAbsoluteMPFBiasdn();
  if (J0jesAbsoluteMPFBiasdn_branch != 0) J0jesAbsoluteMPFBiasdn();
  if (J1jesAbsoluteMPFBiasdn_branch != 0) J1jesAbsoluteMPFBiasdn();
  if (J2jesAbsoluteMPFBiasdn_branch != 0) J2jesAbsoluteMPFBiasdn();
  if (J3jesAbsoluteMPFBiasdn_branch != 0) J3jesAbsoluteMPFBiasdn();
  if (J4jesAbsoluteMPFBiasdn_branch != 0) J4jesAbsoluteMPFBiasdn();
  if (J5jesAbsoluteMPFBiasdn_branch != 0) J5jesAbsoluteMPFBiasdn();
  if (J6jesAbsoluteMPFBiasdn_branch != 0) J6jesAbsoluteMPFBiasdn();
  if (J7jesAbsoluteMPFBiasdn_branch != 0) J7jesAbsoluteMPFBiasdn();
  if (NQJGenjesAbsoluteMPFBiasdn_branch != 0) NQJGenjesAbsoluteMPFBiasdn();
  if (NBJGenjesAbsoluteMPFBiasdn_branch != 0) NBJGenjesAbsoluteMPFBiasdn();
  if (NLJGenjesAbsoluteMPFBiasdn_branch != 0) NLJGenjesAbsoluteMPFBiasdn();
  if (MVVXjesAbsoluteMPFBiasdn_branch != 0) MVVXjesAbsoluteMPFBiasdn();
  if (PtVVXjesAbsoluteMPFBiasdn_branch != 0) PtVVXjesAbsoluteMPFBiasdn();
  if (HTjesAbsoluteMPFBiasdn_branch != 0) HTjesAbsoluteMPFBiasdn();
  if (HTJjesAbsoluteMPFBiasdn_branch != 0) HTJjesAbsoluteMPFBiasdn();
  if (HTFJjesAbsoluteMPFBiasdn_branch != 0) HTFJjesAbsoluteMPFBiasdn();
  if (SumPtFJjesAbsoluteMPFBiasdn_branch != 0) SumPtFJjesAbsoluteMPFBiasdn();
  if (SumPtJjesAbsoluteMPFBiasdn_branch != 0) SumPtJjesAbsoluteMPFBiasdn();
  if (JsjesFragmentationup_branch != 0) JsjesFragmentationup();
  if (NFJjesFragmentationup_branch != 0) NFJjesFragmentationup();
  if (FJ0jesFragmentationup_branch != 0) FJ0jesFragmentationup();
  if (FJ1jesFragmentationup_branch != 0) FJ1jesFragmentationup();
  if (FJ2jesFragmentationup_branch != 0) FJ2jesFragmentationup();
  if (FJ3jesFragmentationup_branch != 0) FJ3jesFragmentationup();
  if (FJ4jesFragmentationup_branch != 0) FJ4jesFragmentationup();
  if (VMD0jesFragmentationup_branch != 0) VMD0jesFragmentationup();
  if (VMD1jesFragmentationup_branch != 0) VMD1jesFragmentationup();
  if (VMD2jesFragmentationup_branch != 0) VMD2jesFragmentationup();
  if (VMD3jesFragmentationup_branch != 0) VMD3jesFragmentationup();
  if (VMD4jesFragmentationup_branch != 0) VMD4jesFragmentationup();
  if (WMD0jesFragmentationup_branch != 0) WMD0jesFragmentationup();
  if (WMD1jesFragmentationup_branch != 0) WMD1jesFragmentationup();
  if (WMD2jesFragmentationup_branch != 0) WMD2jesFragmentationup();
  if (WMD3jesFragmentationup_branch != 0) WMD3jesFragmentationup();
  if (WMD4jesFragmentationup_branch != 0) WMD4jesFragmentationup();
  if (NQGen0jesFragmentationup_branch != 0) NQGen0jesFragmentationup();
  if (NQGen1jesFragmentationup_branch != 0) NQGen1jesFragmentationup();
  if (NQGen2jesFragmentationup_branch != 0) NQGen2jesFragmentationup();
  if (NQGen3jesFragmentationup_branch != 0) NQGen3jesFragmentationup();
  if (NQGen4jesFragmentationup_branch != 0) NQGen4jesFragmentationup();
  if (NBGen0jesFragmentationup_branch != 0) NBGen0jesFragmentationup();
  if (NBGen1jesFragmentationup_branch != 0) NBGen1jesFragmentationup();
  if (NBGen2jesFragmentationup_branch != 0) NBGen2jesFragmentationup();
  if (NBGen3jesFragmentationup_branch != 0) NBGen3jesFragmentationup();
  if (NBGen4jesFragmentationup_branch != 0) NBGen4jesFragmentationup();
  if (NLGen0jesFragmentationup_branch != 0) NLGen0jesFragmentationup();
  if (NLGen1jesFragmentationup_branch != 0) NLGen1jesFragmentationup();
  if (NLGen2jesFragmentationup_branch != 0) NLGen2jesFragmentationup();
  if (NLGen3jesFragmentationup_branch != 0) NLGen3jesFragmentationup();
  if (NLGen4jesFragmentationup_branch != 0) NLGen4jesFragmentationup();
  if (NVQGen0jesFragmentationup_branch != 0) NVQGen0jesFragmentationup();
  if (NVQGen1jesFragmentationup_branch != 0) NVQGen1jesFragmentationup();
  if (NVQGen2jesFragmentationup_branch != 0) NVQGen2jesFragmentationup();
  if (NVQGen3jesFragmentationup_branch != 0) NVQGen3jesFragmentationup();
  if (NVQGen4jesFragmentationup_branch != 0) NVQGen4jesFragmentationup();
  if (NiFJjesFragmentationup_branch != 0) NiFJjesFragmentationup();
  if (iFJ0jesFragmentationup_branch != 0) iFJ0jesFragmentationup();
  if (iFJ1jesFragmentationup_branch != 0) iFJ1jesFragmentationup();
  if (iFJ2jesFragmentationup_branch != 0) iFJ2jesFragmentationup();
  if (iFJ3jesFragmentationup_branch != 0) iFJ3jesFragmentationup();
  if (iFJ4jesFragmentationup_branch != 0) iFJ4jesFragmentationup();
  if (iVMD0jesFragmentationup_branch != 0) iVMD0jesFragmentationup();
  if (iVMD1jesFragmentationup_branch != 0) iVMD1jesFragmentationup();
  if (iVMD2jesFragmentationup_branch != 0) iVMD2jesFragmentationup();
  if (iVMD3jesFragmentationup_branch != 0) iVMD3jesFragmentationup();
  if (iVMD4jesFragmentationup_branch != 0) iVMD4jesFragmentationup();
  if (iWMD0jesFragmentationup_branch != 0) iWMD0jesFragmentationup();
  if (iWMD1jesFragmentationup_branch != 0) iWMD1jesFragmentationup();
  if (iWMD2jesFragmentationup_branch != 0) iWMD2jesFragmentationup();
  if (iWMD3jesFragmentationup_branch != 0) iWMD3jesFragmentationup();
  if (iWMD4jesFragmentationup_branch != 0) iWMD4jesFragmentationup();
  if (METjesFragmentationup_branch != 0) METjesFragmentationup();
  if (NujesFragmentationup_branch != 0) NujesFragmentationup();
  if (NJjesFragmentationup_branch != 0) NJjesFragmentationup();
  if (NbLoosejesFragmentationup_branch != 0) NbLoosejesFragmentationup();
  if (NbMediumjesFragmentationup_branch != 0) NbMediumjesFragmentationup();
  if (NbTightjesFragmentationup_branch != 0) NbTightjesFragmentationup();
  if (NoORNbLoosejesFragmentationup_branch != 0) NoORNbLoosejesFragmentationup();
  if (NoORNbMediumjesFragmentationup_branch != 0) NoORNbMediumjesFragmentationup();
  if (NoORNbTightjesFragmentationup_branch != 0) NoORNbTightjesFragmentationup();
  if (J0jesFragmentationup_branch != 0) J0jesFragmentationup();
  if (J1jesFragmentationup_branch != 0) J1jesFragmentationup();
  if (J2jesFragmentationup_branch != 0) J2jesFragmentationup();
  if (J3jesFragmentationup_branch != 0) J3jesFragmentationup();
  if (J4jesFragmentationup_branch != 0) J4jesFragmentationup();
  if (J5jesFragmentationup_branch != 0) J5jesFragmentationup();
  if (J6jesFragmentationup_branch != 0) J6jesFragmentationup();
  if (J7jesFragmentationup_branch != 0) J7jesFragmentationup();
  if (NQJGenjesFragmentationup_branch != 0) NQJGenjesFragmentationup();
  if (NBJGenjesFragmentationup_branch != 0) NBJGenjesFragmentationup();
  if (NLJGenjesFragmentationup_branch != 0) NLJGenjesFragmentationup();
  if (MVVXjesFragmentationup_branch != 0) MVVXjesFragmentationup();
  if (PtVVXjesFragmentationup_branch != 0) PtVVXjesFragmentationup();
  if (HTjesFragmentationup_branch != 0) HTjesFragmentationup();
  if (HTJjesFragmentationup_branch != 0) HTJjesFragmentationup();
  if (HTFJjesFragmentationup_branch != 0) HTFJjesFragmentationup();
  if (SumPtFJjesFragmentationup_branch != 0) SumPtFJjesFragmentationup();
  if (SumPtJjesFragmentationup_branch != 0) SumPtJjesFragmentationup();
  if (JsjesFragmentationdn_branch != 0) JsjesFragmentationdn();
  if (NFJjesFragmentationdn_branch != 0) NFJjesFragmentationdn();
  if (FJ0jesFragmentationdn_branch != 0) FJ0jesFragmentationdn();
  if (FJ1jesFragmentationdn_branch != 0) FJ1jesFragmentationdn();
  if (FJ2jesFragmentationdn_branch != 0) FJ2jesFragmentationdn();
  if (FJ3jesFragmentationdn_branch != 0) FJ3jesFragmentationdn();
  if (FJ4jesFragmentationdn_branch != 0) FJ4jesFragmentationdn();
  if (VMD0jesFragmentationdn_branch != 0) VMD0jesFragmentationdn();
  if (VMD1jesFragmentationdn_branch != 0) VMD1jesFragmentationdn();
  if (VMD2jesFragmentationdn_branch != 0) VMD2jesFragmentationdn();
  if (VMD3jesFragmentationdn_branch != 0) VMD3jesFragmentationdn();
  if (VMD4jesFragmentationdn_branch != 0) VMD4jesFragmentationdn();
  if (WMD0jesFragmentationdn_branch != 0) WMD0jesFragmentationdn();
  if (WMD1jesFragmentationdn_branch != 0) WMD1jesFragmentationdn();
  if (WMD2jesFragmentationdn_branch != 0) WMD2jesFragmentationdn();
  if (WMD3jesFragmentationdn_branch != 0) WMD3jesFragmentationdn();
  if (WMD4jesFragmentationdn_branch != 0) WMD4jesFragmentationdn();
  if (NQGen0jesFragmentationdn_branch != 0) NQGen0jesFragmentationdn();
  if (NQGen1jesFragmentationdn_branch != 0) NQGen1jesFragmentationdn();
  if (NQGen2jesFragmentationdn_branch != 0) NQGen2jesFragmentationdn();
  if (NQGen3jesFragmentationdn_branch != 0) NQGen3jesFragmentationdn();
  if (NQGen4jesFragmentationdn_branch != 0) NQGen4jesFragmentationdn();
  if (NBGen0jesFragmentationdn_branch != 0) NBGen0jesFragmentationdn();
  if (NBGen1jesFragmentationdn_branch != 0) NBGen1jesFragmentationdn();
  if (NBGen2jesFragmentationdn_branch != 0) NBGen2jesFragmentationdn();
  if (NBGen3jesFragmentationdn_branch != 0) NBGen3jesFragmentationdn();
  if (NBGen4jesFragmentationdn_branch != 0) NBGen4jesFragmentationdn();
  if (NLGen0jesFragmentationdn_branch != 0) NLGen0jesFragmentationdn();
  if (NLGen1jesFragmentationdn_branch != 0) NLGen1jesFragmentationdn();
  if (NLGen2jesFragmentationdn_branch != 0) NLGen2jesFragmentationdn();
  if (NLGen3jesFragmentationdn_branch != 0) NLGen3jesFragmentationdn();
  if (NLGen4jesFragmentationdn_branch != 0) NLGen4jesFragmentationdn();
  if (NVQGen0jesFragmentationdn_branch != 0) NVQGen0jesFragmentationdn();
  if (NVQGen1jesFragmentationdn_branch != 0) NVQGen1jesFragmentationdn();
  if (NVQGen2jesFragmentationdn_branch != 0) NVQGen2jesFragmentationdn();
  if (NVQGen3jesFragmentationdn_branch != 0) NVQGen3jesFragmentationdn();
  if (NVQGen4jesFragmentationdn_branch != 0) NVQGen4jesFragmentationdn();
  if (NiFJjesFragmentationdn_branch != 0) NiFJjesFragmentationdn();
  if (iFJ0jesFragmentationdn_branch != 0) iFJ0jesFragmentationdn();
  if (iFJ1jesFragmentationdn_branch != 0) iFJ1jesFragmentationdn();
  if (iFJ2jesFragmentationdn_branch != 0) iFJ2jesFragmentationdn();
  if (iFJ3jesFragmentationdn_branch != 0) iFJ3jesFragmentationdn();
  if (iFJ4jesFragmentationdn_branch != 0) iFJ4jesFragmentationdn();
  if (iVMD0jesFragmentationdn_branch != 0) iVMD0jesFragmentationdn();
  if (iVMD1jesFragmentationdn_branch != 0) iVMD1jesFragmentationdn();
  if (iVMD2jesFragmentationdn_branch != 0) iVMD2jesFragmentationdn();
  if (iVMD3jesFragmentationdn_branch != 0) iVMD3jesFragmentationdn();
  if (iVMD4jesFragmentationdn_branch != 0) iVMD4jesFragmentationdn();
  if (iWMD0jesFragmentationdn_branch != 0) iWMD0jesFragmentationdn();
  if (iWMD1jesFragmentationdn_branch != 0) iWMD1jesFragmentationdn();
  if (iWMD2jesFragmentationdn_branch != 0) iWMD2jesFragmentationdn();
  if (iWMD3jesFragmentationdn_branch != 0) iWMD3jesFragmentationdn();
  if (iWMD4jesFragmentationdn_branch != 0) iWMD4jesFragmentationdn();
  if (METjesFragmentationdn_branch != 0) METjesFragmentationdn();
  if (NujesFragmentationdn_branch != 0) NujesFragmentationdn();
  if (NJjesFragmentationdn_branch != 0) NJjesFragmentationdn();
  if (NbLoosejesFragmentationdn_branch != 0) NbLoosejesFragmentationdn();
  if (NbMediumjesFragmentationdn_branch != 0) NbMediumjesFragmentationdn();
  if (NbTightjesFragmentationdn_branch != 0) NbTightjesFragmentationdn();
  if (NoORNbLoosejesFragmentationdn_branch != 0) NoORNbLoosejesFragmentationdn();
  if (NoORNbMediumjesFragmentationdn_branch != 0) NoORNbMediumjesFragmentationdn();
  if (NoORNbTightjesFragmentationdn_branch != 0) NoORNbTightjesFragmentationdn();
  if (J0jesFragmentationdn_branch != 0) J0jesFragmentationdn();
  if (J1jesFragmentationdn_branch != 0) J1jesFragmentationdn();
  if (J2jesFragmentationdn_branch != 0) J2jesFragmentationdn();
  if (J3jesFragmentationdn_branch != 0) J3jesFragmentationdn();
  if (J4jesFragmentationdn_branch != 0) J4jesFragmentationdn();
  if (J5jesFragmentationdn_branch != 0) J5jesFragmentationdn();
  if (J6jesFragmentationdn_branch != 0) J6jesFragmentationdn();
  if (J7jesFragmentationdn_branch != 0) J7jesFragmentationdn();
  if (NQJGenjesFragmentationdn_branch != 0) NQJGenjesFragmentationdn();
  if (NBJGenjesFragmentationdn_branch != 0) NBJGenjesFragmentationdn();
  if (NLJGenjesFragmentationdn_branch != 0) NLJGenjesFragmentationdn();
  if (MVVXjesFragmentationdn_branch != 0) MVVXjesFragmentationdn();
  if (PtVVXjesFragmentationdn_branch != 0) PtVVXjesFragmentationdn();
  if (HTjesFragmentationdn_branch != 0) HTjesFragmentationdn();
  if (HTJjesFragmentationdn_branch != 0) HTJjesFragmentationdn();
  if (HTFJjesFragmentationdn_branch != 0) HTFJjesFragmentationdn();
  if (SumPtFJjesFragmentationdn_branch != 0) SumPtFJjesFragmentationdn();
  if (SumPtJjesFragmentationdn_branch != 0) SumPtJjesFragmentationdn();
  if (JsjesSinglePionECALup_branch != 0) JsjesSinglePionECALup();
  if (NFJjesSinglePionECALup_branch != 0) NFJjesSinglePionECALup();
  if (FJ0jesSinglePionECALup_branch != 0) FJ0jesSinglePionECALup();
  if (FJ1jesSinglePionECALup_branch != 0) FJ1jesSinglePionECALup();
  if (FJ2jesSinglePionECALup_branch != 0) FJ2jesSinglePionECALup();
  if (FJ3jesSinglePionECALup_branch != 0) FJ3jesSinglePionECALup();
  if (FJ4jesSinglePionECALup_branch != 0) FJ4jesSinglePionECALup();
  if (VMD0jesSinglePionECALup_branch != 0) VMD0jesSinglePionECALup();
  if (VMD1jesSinglePionECALup_branch != 0) VMD1jesSinglePionECALup();
  if (VMD2jesSinglePionECALup_branch != 0) VMD2jesSinglePionECALup();
  if (VMD3jesSinglePionECALup_branch != 0) VMD3jesSinglePionECALup();
  if (VMD4jesSinglePionECALup_branch != 0) VMD4jesSinglePionECALup();
  if (WMD0jesSinglePionECALup_branch != 0) WMD0jesSinglePionECALup();
  if (WMD1jesSinglePionECALup_branch != 0) WMD1jesSinglePionECALup();
  if (WMD2jesSinglePionECALup_branch != 0) WMD2jesSinglePionECALup();
  if (WMD3jesSinglePionECALup_branch != 0) WMD3jesSinglePionECALup();
  if (WMD4jesSinglePionECALup_branch != 0) WMD4jesSinglePionECALup();
  if (NQGen0jesSinglePionECALup_branch != 0) NQGen0jesSinglePionECALup();
  if (NQGen1jesSinglePionECALup_branch != 0) NQGen1jesSinglePionECALup();
  if (NQGen2jesSinglePionECALup_branch != 0) NQGen2jesSinglePionECALup();
  if (NQGen3jesSinglePionECALup_branch != 0) NQGen3jesSinglePionECALup();
  if (NQGen4jesSinglePionECALup_branch != 0) NQGen4jesSinglePionECALup();
  if (NBGen0jesSinglePionECALup_branch != 0) NBGen0jesSinglePionECALup();
  if (NBGen1jesSinglePionECALup_branch != 0) NBGen1jesSinglePionECALup();
  if (NBGen2jesSinglePionECALup_branch != 0) NBGen2jesSinglePionECALup();
  if (NBGen3jesSinglePionECALup_branch != 0) NBGen3jesSinglePionECALup();
  if (NBGen4jesSinglePionECALup_branch != 0) NBGen4jesSinglePionECALup();
  if (NLGen0jesSinglePionECALup_branch != 0) NLGen0jesSinglePionECALup();
  if (NLGen1jesSinglePionECALup_branch != 0) NLGen1jesSinglePionECALup();
  if (NLGen2jesSinglePionECALup_branch != 0) NLGen2jesSinglePionECALup();
  if (NLGen3jesSinglePionECALup_branch != 0) NLGen3jesSinglePionECALup();
  if (NLGen4jesSinglePionECALup_branch != 0) NLGen4jesSinglePionECALup();
  if (NVQGen0jesSinglePionECALup_branch != 0) NVQGen0jesSinglePionECALup();
  if (NVQGen1jesSinglePionECALup_branch != 0) NVQGen1jesSinglePionECALup();
  if (NVQGen2jesSinglePionECALup_branch != 0) NVQGen2jesSinglePionECALup();
  if (NVQGen3jesSinglePionECALup_branch != 0) NVQGen3jesSinglePionECALup();
  if (NVQGen4jesSinglePionECALup_branch != 0) NVQGen4jesSinglePionECALup();
  if (NiFJjesSinglePionECALup_branch != 0) NiFJjesSinglePionECALup();
  if (iFJ0jesSinglePionECALup_branch != 0) iFJ0jesSinglePionECALup();
  if (iFJ1jesSinglePionECALup_branch != 0) iFJ1jesSinglePionECALup();
  if (iFJ2jesSinglePionECALup_branch != 0) iFJ2jesSinglePionECALup();
  if (iFJ3jesSinglePionECALup_branch != 0) iFJ3jesSinglePionECALup();
  if (iFJ4jesSinglePionECALup_branch != 0) iFJ4jesSinglePionECALup();
  if (iVMD0jesSinglePionECALup_branch != 0) iVMD0jesSinglePionECALup();
  if (iVMD1jesSinglePionECALup_branch != 0) iVMD1jesSinglePionECALup();
  if (iVMD2jesSinglePionECALup_branch != 0) iVMD2jesSinglePionECALup();
  if (iVMD3jesSinglePionECALup_branch != 0) iVMD3jesSinglePionECALup();
  if (iVMD4jesSinglePionECALup_branch != 0) iVMD4jesSinglePionECALup();
  if (iWMD0jesSinglePionECALup_branch != 0) iWMD0jesSinglePionECALup();
  if (iWMD1jesSinglePionECALup_branch != 0) iWMD1jesSinglePionECALup();
  if (iWMD2jesSinglePionECALup_branch != 0) iWMD2jesSinglePionECALup();
  if (iWMD3jesSinglePionECALup_branch != 0) iWMD3jesSinglePionECALup();
  if (iWMD4jesSinglePionECALup_branch != 0) iWMD4jesSinglePionECALup();
  if (METjesSinglePionECALup_branch != 0) METjesSinglePionECALup();
  if (NujesSinglePionECALup_branch != 0) NujesSinglePionECALup();
  if (NJjesSinglePionECALup_branch != 0) NJjesSinglePionECALup();
  if (NbLoosejesSinglePionECALup_branch != 0) NbLoosejesSinglePionECALup();
  if (NbMediumjesSinglePionECALup_branch != 0) NbMediumjesSinglePionECALup();
  if (NbTightjesSinglePionECALup_branch != 0) NbTightjesSinglePionECALup();
  if (NoORNbLoosejesSinglePionECALup_branch != 0) NoORNbLoosejesSinglePionECALup();
  if (NoORNbMediumjesSinglePionECALup_branch != 0) NoORNbMediumjesSinglePionECALup();
  if (NoORNbTightjesSinglePionECALup_branch != 0) NoORNbTightjesSinglePionECALup();
  if (J0jesSinglePionECALup_branch != 0) J0jesSinglePionECALup();
  if (J1jesSinglePionECALup_branch != 0) J1jesSinglePionECALup();
  if (J2jesSinglePionECALup_branch != 0) J2jesSinglePionECALup();
  if (J3jesSinglePionECALup_branch != 0) J3jesSinglePionECALup();
  if (J4jesSinglePionECALup_branch != 0) J4jesSinglePionECALup();
  if (J5jesSinglePionECALup_branch != 0) J5jesSinglePionECALup();
  if (J6jesSinglePionECALup_branch != 0) J6jesSinglePionECALup();
  if (J7jesSinglePionECALup_branch != 0) J7jesSinglePionECALup();
  if (NQJGenjesSinglePionECALup_branch != 0) NQJGenjesSinglePionECALup();
  if (NBJGenjesSinglePionECALup_branch != 0) NBJGenjesSinglePionECALup();
  if (NLJGenjesSinglePionECALup_branch != 0) NLJGenjesSinglePionECALup();
  if (MVVXjesSinglePionECALup_branch != 0) MVVXjesSinglePionECALup();
  if (PtVVXjesSinglePionECALup_branch != 0) PtVVXjesSinglePionECALup();
  if (HTjesSinglePionECALup_branch != 0) HTjesSinglePionECALup();
  if (HTJjesSinglePionECALup_branch != 0) HTJjesSinglePionECALup();
  if (HTFJjesSinglePionECALup_branch != 0) HTFJjesSinglePionECALup();
  if (SumPtFJjesSinglePionECALup_branch != 0) SumPtFJjesSinglePionECALup();
  if (SumPtJjesSinglePionECALup_branch != 0) SumPtJjesSinglePionECALup();
  if (JsjesSinglePionECALdn_branch != 0) JsjesSinglePionECALdn();
  if (NFJjesSinglePionECALdn_branch != 0) NFJjesSinglePionECALdn();
  if (FJ0jesSinglePionECALdn_branch != 0) FJ0jesSinglePionECALdn();
  if (FJ1jesSinglePionECALdn_branch != 0) FJ1jesSinglePionECALdn();
  if (FJ2jesSinglePionECALdn_branch != 0) FJ2jesSinglePionECALdn();
  if (FJ3jesSinglePionECALdn_branch != 0) FJ3jesSinglePionECALdn();
  if (FJ4jesSinglePionECALdn_branch != 0) FJ4jesSinglePionECALdn();
  if (VMD0jesSinglePionECALdn_branch != 0) VMD0jesSinglePionECALdn();
  if (VMD1jesSinglePionECALdn_branch != 0) VMD1jesSinglePionECALdn();
  if (VMD2jesSinglePionECALdn_branch != 0) VMD2jesSinglePionECALdn();
  if (VMD3jesSinglePionECALdn_branch != 0) VMD3jesSinglePionECALdn();
  if (VMD4jesSinglePionECALdn_branch != 0) VMD4jesSinglePionECALdn();
  if (WMD0jesSinglePionECALdn_branch != 0) WMD0jesSinglePionECALdn();
  if (WMD1jesSinglePionECALdn_branch != 0) WMD1jesSinglePionECALdn();
  if (WMD2jesSinglePionECALdn_branch != 0) WMD2jesSinglePionECALdn();
  if (WMD3jesSinglePionECALdn_branch != 0) WMD3jesSinglePionECALdn();
  if (WMD4jesSinglePionECALdn_branch != 0) WMD4jesSinglePionECALdn();
  if (NQGen0jesSinglePionECALdn_branch != 0) NQGen0jesSinglePionECALdn();
  if (NQGen1jesSinglePionECALdn_branch != 0) NQGen1jesSinglePionECALdn();
  if (NQGen2jesSinglePionECALdn_branch != 0) NQGen2jesSinglePionECALdn();
  if (NQGen3jesSinglePionECALdn_branch != 0) NQGen3jesSinglePionECALdn();
  if (NQGen4jesSinglePionECALdn_branch != 0) NQGen4jesSinglePionECALdn();
  if (NBGen0jesSinglePionECALdn_branch != 0) NBGen0jesSinglePionECALdn();
  if (NBGen1jesSinglePionECALdn_branch != 0) NBGen1jesSinglePionECALdn();
  if (NBGen2jesSinglePionECALdn_branch != 0) NBGen2jesSinglePionECALdn();
  if (NBGen3jesSinglePionECALdn_branch != 0) NBGen3jesSinglePionECALdn();
  if (NBGen4jesSinglePionECALdn_branch != 0) NBGen4jesSinglePionECALdn();
  if (NLGen0jesSinglePionECALdn_branch != 0) NLGen0jesSinglePionECALdn();
  if (NLGen1jesSinglePionECALdn_branch != 0) NLGen1jesSinglePionECALdn();
  if (NLGen2jesSinglePionECALdn_branch != 0) NLGen2jesSinglePionECALdn();
  if (NLGen3jesSinglePionECALdn_branch != 0) NLGen3jesSinglePionECALdn();
  if (NLGen4jesSinglePionECALdn_branch != 0) NLGen4jesSinglePionECALdn();
  if (NVQGen0jesSinglePionECALdn_branch != 0) NVQGen0jesSinglePionECALdn();
  if (NVQGen1jesSinglePionECALdn_branch != 0) NVQGen1jesSinglePionECALdn();
  if (NVQGen2jesSinglePionECALdn_branch != 0) NVQGen2jesSinglePionECALdn();
  if (NVQGen3jesSinglePionECALdn_branch != 0) NVQGen3jesSinglePionECALdn();
  if (NVQGen4jesSinglePionECALdn_branch != 0) NVQGen4jesSinglePionECALdn();
  if (NiFJjesSinglePionECALdn_branch != 0) NiFJjesSinglePionECALdn();
  if (iFJ0jesSinglePionECALdn_branch != 0) iFJ0jesSinglePionECALdn();
  if (iFJ1jesSinglePionECALdn_branch != 0) iFJ1jesSinglePionECALdn();
  if (iFJ2jesSinglePionECALdn_branch != 0) iFJ2jesSinglePionECALdn();
  if (iFJ3jesSinglePionECALdn_branch != 0) iFJ3jesSinglePionECALdn();
  if (iFJ4jesSinglePionECALdn_branch != 0) iFJ4jesSinglePionECALdn();
  if (iVMD0jesSinglePionECALdn_branch != 0) iVMD0jesSinglePionECALdn();
  if (iVMD1jesSinglePionECALdn_branch != 0) iVMD1jesSinglePionECALdn();
  if (iVMD2jesSinglePionECALdn_branch != 0) iVMD2jesSinglePionECALdn();
  if (iVMD3jesSinglePionECALdn_branch != 0) iVMD3jesSinglePionECALdn();
  if (iVMD4jesSinglePionECALdn_branch != 0) iVMD4jesSinglePionECALdn();
  if (iWMD0jesSinglePionECALdn_branch != 0) iWMD0jesSinglePionECALdn();
  if (iWMD1jesSinglePionECALdn_branch != 0) iWMD1jesSinglePionECALdn();
  if (iWMD2jesSinglePionECALdn_branch != 0) iWMD2jesSinglePionECALdn();
  if (iWMD3jesSinglePionECALdn_branch != 0) iWMD3jesSinglePionECALdn();
  if (iWMD4jesSinglePionECALdn_branch != 0) iWMD4jesSinglePionECALdn();
  if (METjesSinglePionECALdn_branch != 0) METjesSinglePionECALdn();
  if (NujesSinglePionECALdn_branch != 0) NujesSinglePionECALdn();
  if (NJjesSinglePionECALdn_branch != 0) NJjesSinglePionECALdn();
  if (NbLoosejesSinglePionECALdn_branch != 0) NbLoosejesSinglePionECALdn();
  if (NbMediumjesSinglePionECALdn_branch != 0) NbMediumjesSinglePionECALdn();
  if (NbTightjesSinglePionECALdn_branch != 0) NbTightjesSinglePionECALdn();
  if (NoORNbLoosejesSinglePionECALdn_branch != 0) NoORNbLoosejesSinglePionECALdn();
  if (NoORNbMediumjesSinglePionECALdn_branch != 0) NoORNbMediumjesSinglePionECALdn();
  if (NoORNbTightjesSinglePionECALdn_branch != 0) NoORNbTightjesSinglePionECALdn();
  if (J0jesSinglePionECALdn_branch != 0) J0jesSinglePionECALdn();
  if (J1jesSinglePionECALdn_branch != 0) J1jesSinglePionECALdn();
  if (J2jesSinglePionECALdn_branch != 0) J2jesSinglePionECALdn();
  if (J3jesSinglePionECALdn_branch != 0) J3jesSinglePionECALdn();
  if (J4jesSinglePionECALdn_branch != 0) J4jesSinglePionECALdn();
  if (J5jesSinglePionECALdn_branch != 0) J5jesSinglePionECALdn();
  if (J6jesSinglePionECALdn_branch != 0) J6jesSinglePionECALdn();
  if (J7jesSinglePionECALdn_branch != 0) J7jesSinglePionECALdn();
  if (NQJGenjesSinglePionECALdn_branch != 0) NQJGenjesSinglePionECALdn();
  if (NBJGenjesSinglePionECALdn_branch != 0) NBJGenjesSinglePionECALdn();
  if (NLJGenjesSinglePionECALdn_branch != 0) NLJGenjesSinglePionECALdn();
  if (MVVXjesSinglePionECALdn_branch != 0) MVVXjesSinglePionECALdn();
  if (PtVVXjesSinglePionECALdn_branch != 0) PtVVXjesSinglePionECALdn();
  if (HTjesSinglePionECALdn_branch != 0) HTjesSinglePionECALdn();
  if (HTJjesSinglePionECALdn_branch != 0) HTJjesSinglePionECALdn();
  if (HTFJjesSinglePionECALdn_branch != 0) HTFJjesSinglePionECALdn();
  if (SumPtFJjesSinglePionECALdn_branch != 0) SumPtFJjesSinglePionECALdn();
  if (SumPtJjesSinglePionECALdn_branch != 0) SumPtJjesSinglePionECALdn();
  if (JsjesSinglePionHCALup_branch != 0) JsjesSinglePionHCALup();
  if (NFJjesSinglePionHCALup_branch != 0) NFJjesSinglePionHCALup();
  if (FJ0jesSinglePionHCALup_branch != 0) FJ0jesSinglePionHCALup();
  if (FJ1jesSinglePionHCALup_branch != 0) FJ1jesSinglePionHCALup();
  if (FJ2jesSinglePionHCALup_branch != 0) FJ2jesSinglePionHCALup();
  if (FJ3jesSinglePionHCALup_branch != 0) FJ3jesSinglePionHCALup();
  if (FJ4jesSinglePionHCALup_branch != 0) FJ4jesSinglePionHCALup();
  if (VMD0jesSinglePionHCALup_branch != 0) VMD0jesSinglePionHCALup();
  if (VMD1jesSinglePionHCALup_branch != 0) VMD1jesSinglePionHCALup();
  if (VMD2jesSinglePionHCALup_branch != 0) VMD2jesSinglePionHCALup();
  if (VMD3jesSinglePionHCALup_branch != 0) VMD3jesSinglePionHCALup();
  if (VMD4jesSinglePionHCALup_branch != 0) VMD4jesSinglePionHCALup();
  if (WMD0jesSinglePionHCALup_branch != 0) WMD0jesSinglePionHCALup();
  if (WMD1jesSinglePionHCALup_branch != 0) WMD1jesSinglePionHCALup();
  if (WMD2jesSinglePionHCALup_branch != 0) WMD2jesSinglePionHCALup();
  if (WMD3jesSinglePionHCALup_branch != 0) WMD3jesSinglePionHCALup();
  if (WMD4jesSinglePionHCALup_branch != 0) WMD4jesSinglePionHCALup();
  if (NQGen0jesSinglePionHCALup_branch != 0) NQGen0jesSinglePionHCALup();
  if (NQGen1jesSinglePionHCALup_branch != 0) NQGen1jesSinglePionHCALup();
  if (NQGen2jesSinglePionHCALup_branch != 0) NQGen2jesSinglePionHCALup();
  if (NQGen3jesSinglePionHCALup_branch != 0) NQGen3jesSinglePionHCALup();
  if (NQGen4jesSinglePionHCALup_branch != 0) NQGen4jesSinglePionHCALup();
  if (NBGen0jesSinglePionHCALup_branch != 0) NBGen0jesSinglePionHCALup();
  if (NBGen1jesSinglePionHCALup_branch != 0) NBGen1jesSinglePionHCALup();
  if (NBGen2jesSinglePionHCALup_branch != 0) NBGen2jesSinglePionHCALup();
  if (NBGen3jesSinglePionHCALup_branch != 0) NBGen3jesSinglePionHCALup();
  if (NBGen4jesSinglePionHCALup_branch != 0) NBGen4jesSinglePionHCALup();
  if (NLGen0jesSinglePionHCALup_branch != 0) NLGen0jesSinglePionHCALup();
  if (NLGen1jesSinglePionHCALup_branch != 0) NLGen1jesSinglePionHCALup();
  if (NLGen2jesSinglePionHCALup_branch != 0) NLGen2jesSinglePionHCALup();
  if (NLGen3jesSinglePionHCALup_branch != 0) NLGen3jesSinglePionHCALup();
  if (NLGen4jesSinglePionHCALup_branch != 0) NLGen4jesSinglePionHCALup();
  if (NVQGen0jesSinglePionHCALup_branch != 0) NVQGen0jesSinglePionHCALup();
  if (NVQGen1jesSinglePionHCALup_branch != 0) NVQGen1jesSinglePionHCALup();
  if (NVQGen2jesSinglePionHCALup_branch != 0) NVQGen2jesSinglePionHCALup();
  if (NVQGen3jesSinglePionHCALup_branch != 0) NVQGen3jesSinglePionHCALup();
  if (NVQGen4jesSinglePionHCALup_branch != 0) NVQGen4jesSinglePionHCALup();
  if (NiFJjesSinglePionHCALup_branch != 0) NiFJjesSinglePionHCALup();
  if (iFJ0jesSinglePionHCALup_branch != 0) iFJ0jesSinglePionHCALup();
  if (iFJ1jesSinglePionHCALup_branch != 0) iFJ1jesSinglePionHCALup();
  if (iFJ2jesSinglePionHCALup_branch != 0) iFJ2jesSinglePionHCALup();
  if (iFJ3jesSinglePionHCALup_branch != 0) iFJ3jesSinglePionHCALup();
  if (iFJ4jesSinglePionHCALup_branch != 0) iFJ4jesSinglePionHCALup();
  if (iVMD0jesSinglePionHCALup_branch != 0) iVMD0jesSinglePionHCALup();
  if (iVMD1jesSinglePionHCALup_branch != 0) iVMD1jesSinglePionHCALup();
  if (iVMD2jesSinglePionHCALup_branch != 0) iVMD2jesSinglePionHCALup();
  if (iVMD3jesSinglePionHCALup_branch != 0) iVMD3jesSinglePionHCALup();
  if (iVMD4jesSinglePionHCALup_branch != 0) iVMD4jesSinglePionHCALup();
  if (iWMD0jesSinglePionHCALup_branch != 0) iWMD0jesSinglePionHCALup();
  if (iWMD1jesSinglePionHCALup_branch != 0) iWMD1jesSinglePionHCALup();
  if (iWMD2jesSinglePionHCALup_branch != 0) iWMD2jesSinglePionHCALup();
  if (iWMD3jesSinglePionHCALup_branch != 0) iWMD3jesSinglePionHCALup();
  if (iWMD4jesSinglePionHCALup_branch != 0) iWMD4jesSinglePionHCALup();
  if (METjesSinglePionHCALup_branch != 0) METjesSinglePionHCALup();
  if (NujesSinglePionHCALup_branch != 0) NujesSinglePionHCALup();
  if (NJjesSinglePionHCALup_branch != 0) NJjesSinglePionHCALup();
  if (NbLoosejesSinglePionHCALup_branch != 0) NbLoosejesSinglePionHCALup();
  if (NbMediumjesSinglePionHCALup_branch != 0) NbMediumjesSinglePionHCALup();
  if (NbTightjesSinglePionHCALup_branch != 0) NbTightjesSinglePionHCALup();
  if (NoORNbLoosejesSinglePionHCALup_branch != 0) NoORNbLoosejesSinglePionHCALup();
  if (NoORNbMediumjesSinglePionHCALup_branch != 0) NoORNbMediumjesSinglePionHCALup();
  if (NoORNbTightjesSinglePionHCALup_branch != 0) NoORNbTightjesSinglePionHCALup();
  if (J0jesSinglePionHCALup_branch != 0) J0jesSinglePionHCALup();
  if (J1jesSinglePionHCALup_branch != 0) J1jesSinglePionHCALup();
  if (J2jesSinglePionHCALup_branch != 0) J2jesSinglePionHCALup();
  if (J3jesSinglePionHCALup_branch != 0) J3jesSinglePionHCALup();
  if (J4jesSinglePionHCALup_branch != 0) J4jesSinglePionHCALup();
  if (J5jesSinglePionHCALup_branch != 0) J5jesSinglePionHCALup();
  if (J6jesSinglePionHCALup_branch != 0) J6jesSinglePionHCALup();
  if (J7jesSinglePionHCALup_branch != 0) J7jesSinglePionHCALup();
  if (NQJGenjesSinglePionHCALup_branch != 0) NQJGenjesSinglePionHCALup();
  if (NBJGenjesSinglePionHCALup_branch != 0) NBJGenjesSinglePionHCALup();
  if (NLJGenjesSinglePionHCALup_branch != 0) NLJGenjesSinglePionHCALup();
  if (MVVXjesSinglePionHCALup_branch != 0) MVVXjesSinglePionHCALup();
  if (PtVVXjesSinglePionHCALup_branch != 0) PtVVXjesSinglePionHCALup();
  if (HTjesSinglePionHCALup_branch != 0) HTjesSinglePionHCALup();
  if (HTJjesSinglePionHCALup_branch != 0) HTJjesSinglePionHCALup();
  if (HTFJjesSinglePionHCALup_branch != 0) HTFJjesSinglePionHCALup();
  if (SumPtFJjesSinglePionHCALup_branch != 0) SumPtFJjesSinglePionHCALup();
  if (SumPtJjesSinglePionHCALup_branch != 0) SumPtJjesSinglePionHCALup();
  if (JsjesSinglePionHCALdn_branch != 0) JsjesSinglePionHCALdn();
  if (NFJjesSinglePionHCALdn_branch != 0) NFJjesSinglePionHCALdn();
  if (FJ0jesSinglePionHCALdn_branch != 0) FJ0jesSinglePionHCALdn();
  if (FJ1jesSinglePionHCALdn_branch != 0) FJ1jesSinglePionHCALdn();
  if (FJ2jesSinglePionHCALdn_branch != 0) FJ2jesSinglePionHCALdn();
  if (FJ3jesSinglePionHCALdn_branch != 0) FJ3jesSinglePionHCALdn();
  if (FJ4jesSinglePionHCALdn_branch != 0) FJ4jesSinglePionHCALdn();
  if (VMD0jesSinglePionHCALdn_branch != 0) VMD0jesSinglePionHCALdn();
  if (VMD1jesSinglePionHCALdn_branch != 0) VMD1jesSinglePionHCALdn();
  if (VMD2jesSinglePionHCALdn_branch != 0) VMD2jesSinglePionHCALdn();
  if (VMD3jesSinglePionHCALdn_branch != 0) VMD3jesSinglePionHCALdn();
  if (VMD4jesSinglePionHCALdn_branch != 0) VMD4jesSinglePionHCALdn();
  if (WMD0jesSinglePionHCALdn_branch != 0) WMD0jesSinglePionHCALdn();
  if (WMD1jesSinglePionHCALdn_branch != 0) WMD1jesSinglePionHCALdn();
  if (WMD2jesSinglePionHCALdn_branch != 0) WMD2jesSinglePionHCALdn();
  if (WMD3jesSinglePionHCALdn_branch != 0) WMD3jesSinglePionHCALdn();
  if (WMD4jesSinglePionHCALdn_branch != 0) WMD4jesSinglePionHCALdn();
  if (NQGen0jesSinglePionHCALdn_branch != 0) NQGen0jesSinglePionHCALdn();
  if (NQGen1jesSinglePionHCALdn_branch != 0) NQGen1jesSinglePionHCALdn();
  if (NQGen2jesSinglePionHCALdn_branch != 0) NQGen2jesSinglePionHCALdn();
  if (NQGen3jesSinglePionHCALdn_branch != 0) NQGen3jesSinglePionHCALdn();
  if (NQGen4jesSinglePionHCALdn_branch != 0) NQGen4jesSinglePionHCALdn();
  if (NBGen0jesSinglePionHCALdn_branch != 0) NBGen0jesSinglePionHCALdn();
  if (NBGen1jesSinglePionHCALdn_branch != 0) NBGen1jesSinglePionHCALdn();
  if (NBGen2jesSinglePionHCALdn_branch != 0) NBGen2jesSinglePionHCALdn();
  if (NBGen3jesSinglePionHCALdn_branch != 0) NBGen3jesSinglePionHCALdn();
  if (NBGen4jesSinglePionHCALdn_branch != 0) NBGen4jesSinglePionHCALdn();
  if (NLGen0jesSinglePionHCALdn_branch != 0) NLGen0jesSinglePionHCALdn();
  if (NLGen1jesSinglePionHCALdn_branch != 0) NLGen1jesSinglePionHCALdn();
  if (NLGen2jesSinglePionHCALdn_branch != 0) NLGen2jesSinglePionHCALdn();
  if (NLGen3jesSinglePionHCALdn_branch != 0) NLGen3jesSinglePionHCALdn();
  if (NLGen4jesSinglePionHCALdn_branch != 0) NLGen4jesSinglePionHCALdn();
  if (NVQGen0jesSinglePionHCALdn_branch != 0) NVQGen0jesSinglePionHCALdn();
  if (NVQGen1jesSinglePionHCALdn_branch != 0) NVQGen1jesSinglePionHCALdn();
  if (NVQGen2jesSinglePionHCALdn_branch != 0) NVQGen2jesSinglePionHCALdn();
  if (NVQGen3jesSinglePionHCALdn_branch != 0) NVQGen3jesSinglePionHCALdn();
  if (NVQGen4jesSinglePionHCALdn_branch != 0) NVQGen4jesSinglePionHCALdn();
  if (NiFJjesSinglePionHCALdn_branch != 0) NiFJjesSinglePionHCALdn();
  if (iFJ0jesSinglePionHCALdn_branch != 0) iFJ0jesSinglePionHCALdn();
  if (iFJ1jesSinglePionHCALdn_branch != 0) iFJ1jesSinglePionHCALdn();
  if (iFJ2jesSinglePionHCALdn_branch != 0) iFJ2jesSinglePionHCALdn();
  if (iFJ3jesSinglePionHCALdn_branch != 0) iFJ3jesSinglePionHCALdn();
  if (iFJ4jesSinglePionHCALdn_branch != 0) iFJ4jesSinglePionHCALdn();
  if (iVMD0jesSinglePionHCALdn_branch != 0) iVMD0jesSinglePionHCALdn();
  if (iVMD1jesSinglePionHCALdn_branch != 0) iVMD1jesSinglePionHCALdn();
  if (iVMD2jesSinglePionHCALdn_branch != 0) iVMD2jesSinglePionHCALdn();
  if (iVMD3jesSinglePionHCALdn_branch != 0) iVMD3jesSinglePionHCALdn();
  if (iVMD4jesSinglePionHCALdn_branch != 0) iVMD4jesSinglePionHCALdn();
  if (iWMD0jesSinglePionHCALdn_branch != 0) iWMD0jesSinglePionHCALdn();
  if (iWMD1jesSinglePionHCALdn_branch != 0) iWMD1jesSinglePionHCALdn();
  if (iWMD2jesSinglePionHCALdn_branch != 0) iWMD2jesSinglePionHCALdn();
  if (iWMD3jesSinglePionHCALdn_branch != 0) iWMD3jesSinglePionHCALdn();
  if (iWMD4jesSinglePionHCALdn_branch != 0) iWMD4jesSinglePionHCALdn();
  if (METjesSinglePionHCALdn_branch != 0) METjesSinglePionHCALdn();
  if (NujesSinglePionHCALdn_branch != 0) NujesSinglePionHCALdn();
  if (NJjesSinglePionHCALdn_branch != 0) NJjesSinglePionHCALdn();
  if (NbLoosejesSinglePionHCALdn_branch != 0) NbLoosejesSinglePionHCALdn();
  if (NbMediumjesSinglePionHCALdn_branch != 0) NbMediumjesSinglePionHCALdn();
  if (NbTightjesSinglePionHCALdn_branch != 0) NbTightjesSinglePionHCALdn();
  if (NoORNbLoosejesSinglePionHCALdn_branch != 0) NoORNbLoosejesSinglePionHCALdn();
  if (NoORNbMediumjesSinglePionHCALdn_branch != 0) NoORNbMediumjesSinglePionHCALdn();
  if (NoORNbTightjesSinglePionHCALdn_branch != 0) NoORNbTightjesSinglePionHCALdn();
  if (J0jesSinglePionHCALdn_branch != 0) J0jesSinglePionHCALdn();
  if (J1jesSinglePionHCALdn_branch != 0) J1jesSinglePionHCALdn();
  if (J2jesSinglePionHCALdn_branch != 0) J2jesSinglePionHCALdn();
  if (J3jesSinglePionHCALdn_branch != 0) J3jesSinglePionHCALdn();
  if (J4jesSinglePionHCALdn_branch != 0) J4jesSinglePionHCALdn();
  if (J5jesSinglePionHCALdn_branch != 0) J5jesSinglePionHCALdn();
  if (J6jesSinglePionHCALdn_branch != 0) J6jesSinglePionHCALdn();
  if (J7jesSinglePionHCALdn_branch != 0) J7jesSinglePionHCALdn();
  if (NQJGenjesSinglePionHCALdn_branch != 0) NQJGenjesSinglePionHCALdn();
  if (NBJGenjesSinglePionHCALdn_branch != 0) NBJGenjesSinglePionHCALdn();
  if (NLJGenjesSinglePionHCALdn_branch != 0) NLJGenjesSinglePionHCALdn();
  if (MVVXjesSinglePionHCALdn_branch != 0) MVVXjesSinglePionHCALdn();
  if (PtVVXjesSinglePionHCALdn_branch != 0) PtVVXjesSinglePionHCALdn();
  if (HTjesSinglePionHCALdn_branch != 0) HTjesSinglePionHCALdn();
  if (HTJjesSinglePionHCALdn_branch != 0) HTJjesSinglePionHCALdn();
  if (HTFJjesSinglePionHCALdn_branch != 0) HTFJjesSinglePionHCALdn();
  if (SumPtFJjesSinglePionHCALdn_branch != 0) SumPtFJjesSinglePionHCALdn();
  if (SumPtJjesSinglePionHCALdn_branch != 0) SumPtJjesSinglePionHCALdn();
  if (JsjesFlavorQCDup_branch != 0) JsjesFlavorQCDup();
  if (NFJjesFlavorQCDup_branch != 0) NFJjesFlavorQCDup();
  if (FJ0jesFlavorQCDup_branch != 0) FJ0jesFlavorQCDup();
  if (FJ1jesFlavorQCDup_branch != 0) FJ1jesFlavorQCDup();
  if (FJ2jesFlavorQCDup_branch != 0) FJ2jesFlavorQCDup();
  if (FJ3jesFlavorQCDup_branch != 0) FJ3jesFlavorQCDup();
  if (FJ4jesFlavorQCDup_branch != 0) FJ4jesFlavorQCDup();
  if (VMD0jesFlavorQCDup_branch != 0) VMD0jesFlavorQCDup();
  if (VMD1jesFlavorQCDup_branch != 0) VMD1jesFlavorQCDup();
  if (VMD2jesFlavorQCDup_branch != 0) VMD2jesFlavorQCDup();
  if (VMD3jesFlavorQCDup_branch != 0) VMD3jesFlavorQCDup();
  if (VMD4jesFlavorQCDup_branch != 0) VMD4jesFlavorQCDup();
  if (WMD0jesFlavorQCDup_branch != 0) WMD0jesFlavorQCDup();
  if (WMD1jesFlavorQCDup_branch != 0) WMD1jesFlavorQCDup();
  if (WMD2jesFlavorQCDup_branch != 0) WMD2jesFlavorQCDup();
  if (WMD3jesFlavorQCDup_branch != 0) WMD3jesFlavorQCDup();
  if (WMD4jesFlavorQCDup_branch != 0) WMD4jesFlavorQCDup();
  if (NQGen0jesFlavorQCDup_branch != 0) NQGen0jesFlavorQCDup();
  if (NQGen1jesFlavorQCDup_branch != 0) NQGen1jesFlavorQCDup();
  if (NQGen2jesFlavorQCDup_branch != 0) NQGen2jesFlavorQCDup();
  if (NQGen3jesFlavorQCDup_branch != 0) NQGen3jesFlavorQCDup();
  if (NQGen4jesFlavorQCDup_branch != 0) NQGen4jesFlavorQCDup();
  if (NBGen0jesFlavorQCDup_branch != 0) NBGen0jesFlavorQCDup();
  if (NBGen1jesFlavorQCDup_branch != 0) NBGen1jesFlavorQCDup();
  if (NBGen2jesFlavorQCDup_branch != 0) NBGen2jesFlavorQCDup();
  if (NBGen3jesFlavorQCDup_branch != 0) NBGen3jesFlavorQCDup();
  if (NBGen4jesFlavorQCDup_branch != 0) NBGen4jesFlavorQCDup();
  if (NLGen0jesFlavorQCDup_branch != 0) NLGen0jesFlavorQCDup();
  if (NLGen1jesFlavorQCDup_branch != 0) NLGen1jesFlavorQCDup();
  if (NLGen2jesFlavorQCDup_branch != 0) NLGen2jesFlavorQCDup();
  if (NLGen3jesFlavorQCDup_branch != 0) NLGen3jesFlavorQCDup();
  if (NLGen4jesFlavorQCDup_branch != 0) NLGen4jesFlavorQCDup();
  if (NVQGen0jesFlavorQCDup_branch != 0) NVQGen0jesFlavorQCDup();
  if (NVQGen1jesFlavorQCDup_branch != 0) NVQGen1jesFlavorQCDup();
  if (NVQGen2jesFlavorQCDup_branch != 0) NVQGen2jesFlavorQCDup();
  if (NVQGen3jesFlavorQCDup_branch != 0) NVQGen3jesFlavorQCDup();
  if (NVQGen4jesFlavorQCDup_branch != 0) NVQGen4jesFlavorQCDup();
  if (NiFJjesFlavorQCDup_branch != 0) NiFJjesFlavorQCDup();
  if (iFJ0jesFlavorQCDup_branch != 0) iFJ0jesFlavorQCDup();
  if (iFJ1jesFlavorQCDup_branch != 0) iFJ1jesFlavorQCDup();
  if (iFJ2jesFlavorQCDup_branch != 0) iFJ2jesFlavorQCDup();
  if (iFJ3jesFlavorQCDup_branch != 0) iFJ3jesFlavorQCDup();
  if (iFJ4jesFlavorQCDup_branch != 0) iFJ4jesFlavorQCDup();
  if (iVMD0jesFlavorQCDup_branch != 0) iVMD0jesFlavorQCDup();
  if (iVMD1jesFlavorQCDup_branch != 0) iVMD1jesFlavorQCDup();
  if (iVMD2jesFlavorQCDup_branch != 0) iVMD2jesFlavorQCDup();
  if (iVMD3jesFlavorQCDup_branch != 0) iVMD3jesFlavorQCDup();
  if (iVMD4jesFlavorQCDup_branch != 0) iVMD4jesFlavorQCDup();
  if (iWMD0jesFlavorQCDup_branch != 0) iWMD0jesFlavorQCDup();
  if (iWMD1jesFlavorQCDup_branch != 0) iWMD1jesFlavorQCDup();
  if (iWMD2jesFlavorQCDup_branch != 0) iWMD2jesFlavorQCDup();
  if (iWMD3jesFlavorQCDup_branch != 0) iWMD3jesFlavorQCDup();
  if (iWMD4jesFlavorQCDup_branch != 0) iWMD4jesFlavorQCDup();
  if (METjesFlavorQCDup_branch != 0) METjesFlavorQCDup();
  if (NujesFlavorQCDup_branch != 0) NujesFlavorQCDup();
  if (NJjesFlavorQCDup_branch != 0) NJjesFlavorQCDup();
  if (NbLoosejesFlavorQCDup_branch != 0) NbLoosejesFlavorQCDup();
  if (NbMediumjesFlavorQCDup_branch != 0) NbMediumjesFlavorQCDup();
  if (NbTightjesFlavorQCDup_branch != 0) NbTightjesFlavorQCDup();
  if (NoORNbLoosejesFlavorQCDup_branch != 0) NoORNbLoosejesFlavorQCDup();
  if (NoORNbMediumjesFlavorQCDup_branch != 0) NoORNbMediumjesFlavorQCDup();
  if (NoORNbTightjesFlavorQCDup_branch != 0) NoORNbTightjesFlavorQCDup();
  if (J0jesFlavorQCDup_branch != 0) J0jesFlavorQCDup();
  if (J1jesFlavorQCDup_branch != 0) J1jesFlavorQCDup();
  if (J2jesFlavorQCDup_branch != 0) J2jesFlavorQCDup();
  if (J3jesFlavorQCDup_branch != 0) J3jesFlavorQCDup();
  if (J4jesFlavorQCDup_branch != 0) J4jesFlavorQCDup();
  if (J5jesFlavorQCDup_branch != 0) J5jesFlavorQCDup();
  if (J6jesFlavorQCDup_branch != 0) J6jesFlavorQCDup();
  if (J7jesFlavorQCDup_branch != 0) J7jesFlavorQCDup();
  if (NQJGenjesFlavorQCDup_branch != 0) NQJGenjesFlavorQCDup();
  if (NBJGenjesFlavorQCDup_branch != 0) NBJGenjesFlavorQCDup();
  if (NLJGenjesFlavorQCDup_branch != 0) NLJGenjesFlavorQCDup();
  if (MVVXjesFlavorQCDup_branch != 0) MVVXjesFlavorQCDup();
  if (PtVVXjesFlavorQCDup_branch != 0) PtVVXjesFlavorQCDup();
  if (HTjesFlavorQCDup_branch != 0) HTjesFlavorQCDup();
  if (HTJjesFlavorQCDup_branch != 0) HTJjesFlavorQCDup();
  if (HTFJjesFlavorQCDup_branch != 0) HTFJjesFlavorQCDup();
  if (SumPtFJjesFlavorQCDup_branch != 0) SumPtFJjesFlavorQCDup();
  if (SumPtJjesFlavorQCDup_branch != 0) SumPtJjesFlavorQCDup();
  if (JsjesFlavorQCDdn_branch != 0) JsjesFlavorQCDdn();
  if (NFJjesFlavorQCDdn_branch != 0) NFJjesFlavorQCDdn();
  if (FJ0jesFlavorQCDdn_branch != 0) FJ0jesFlavorQCDdn();
  if (FJ1jesFlavorQCDdn_branch != 0) FJ1jesFlavorQCDdn();
  if (FJ2jesFlavorQCDdn_branch != 0) FJ2jesFlavorQCDdn();
  if (FJ3jesFlavorQCDdn_branch != 0) FJ3jesFlavorQCDdn();
  if (FJ4jesFlavorQCDdn_branch != 0) FJ4jesFlavorQCDdn();
  if (VMD0jesFlavorQCDdn_branch != 0) VMD0jesFlavorQCDdn();
  if (VMD1jesFlavorQCDdn_branch != 0) VMD1jesFlavorQCDdn();
  if (VMD2jesFlavorQCDdn_branch != 0) VMD2jesFlavorQCDdn();
  if (VMD3jesFlavorQCDdn_branch != 0) VMD3jesFlavorQCDdn();
  if (VMD4jesFlavorQCDdn_branch != 0) VMD4jesFlavorQCDdn();
  if (WMD0jesFlavorQCDdn_branch != 0) WMD0jesFlavorQCDdn();
  if (WMD1jesFlavorQCDdn_branch != 0) WMD1jesFlavorQCDdn();
  if (WMD2jesFlavorQCDdn_branch != 0) WMD2jesFlavorQCDdn();
  if (WMD3jesFlavorQCDdn_branch != 0) WMD3jesFlavorQCDdn();
  if (WMD4jesFlavorQCDdn_branch != 0) WMD4jesFlavorQCDdn();
  if (NQGen0jesFlavorQCDdn_branch != 0) NQGen0jesFlavorQCDdn();
  if (NQGen1jesFlavorQCDdn_branch != 0) NQGen1jesFlavorQCDdn();
  if (NQGen2jesFlavorQCDdn_branch != 0) NQGen2jesFlavorQCDdn();
  if (NQGen3jesFlavorQCDdn_branch != 0) NQGen3jesFlavorQCDdn();
  if (NQGen4jesFlavorQCDdn_branch != 0) NQGen4jesFlavorQCDdn();
  if (NBGen0jesFlavorQCDdn_branch != 0) NBGen0jesFlavorQCDdn();
  if (NBGen1jesFlavorQCDdn_branch != 0) NBGen1jesFlavorQCDdn();
  if (NBGen2jesFlavorQCDdn_branch != 0) NBGen2jesFlavorQCDdn();
  if (NBGen3jesFlavorQCDdn_branch != 0) NBGen3jesFlavorQCDdn();
  if (NBGen4jesFlavorQCDdn_branch != 0) NBGen4jesFlavorQCDdn();
  if (NLGen0jesFlavorQCDdn_branch != 0) NLGen0jesFlavorQCDdn();
  if (NLGen1jesFlavorQCDdn_branch != 0) NLGen1jesFlavorQCDdn();
  if (NLGen2jesFlavorQCDdn_branch != 0) NLGen2jesFlavorQCDdn();
  if (NLGen3jesFlavorQCDdn_branch != 0) NLGen3jesFlavorQCDdn();
  if (NLGen4jesFlavorQCDdn_branch != 0) NLGen4jesFlavorQCDdn();
  if (NVQGen0jesFlavorQCDdn_branch != 0) NVQGen0jesFlavorQCDdn();
  if (NVQGen1jesFlavorQCDdn_branch != 0) NVQGen1jesFlavorQCDdn();
  if (NVQGen2jesFlavorQCDdn_branch != 0) NVQGen2jesFlavorQCDdn();
  if (NVQGen3jesFlavorQCDdn_branch != 0) NVQGen3jesFlavorQCDdn();
  if (NVQGen4jesFlavorQCDdn_branch != 0) NVQGen4jesFlavorQCDdn();
  if (NiFJjesFlavorQCDdn_branch != 0) NiFJjesFlavorQCDdn();
  if (iFJ0jesFlavorQCDdn_branch != 0) iFJ0jesFlavorQCDdn();
  if (iFJ1jesFlavorQCDdn_branch != 0) iFJ1jesFlavorQCDdn();
  if (iFJ2jesFlavorQCDdn_branch != 0) iFJ2jesFlavorQCDdn();
  if (iFJ3jesFlavorQCDdn_branch != 0) iFJ3jesFlavorQCDdn();
  if (iFJ4jesFlavorQCDdn_branch != 0) iFJ4jesFlavorQCDdn();
  if (iVMD0jesFlavorQCDdn_branch != 0) iVMD0jesFlavorQCDdn();
  if (iVMD1jesFlavorQCDdn_branch != 0) iVMD1jesFlavorQCDdn();
  if (iVMD2jesFlavorQCDdn_branch != 0) iVMD2jesFlavorQCDdn();
  if (iVMD3jesFlavorQCDdn_branch != 0) iVMD3jesFlavorQCDdn();
  if (iVMD4jesFlavorQCDdn_branch != 0) iVMD4jesFlavorQCDdn();
  if (iWMD0jesFlavorQCDdn_branch != 0) iWMD0jesFlavorQCDdn();
  if (iWMD1jesFlavorQCDdn_branch != 0) iWMD1jesFlavorQCDdn();
  if (iWMD2jesFlavorQCDdn_branch != 0) iWMD2jesFlavorQCDdn();
  if (iWMD3jesFlavorQCDdn_branch != 0) iWMD3jesFlavorQCDdn();
  if (iWMD4jesFlavorQCDdn_branch != 0) iWMD4jesFlavorQCDdn();
  if (METjesFlavorQCDdn_branch != 0) METjesFlavorQCDdn();
  if (NujesFlavorQCDdn_branch != 0) NujesFlavorQCDdn();
  if (NJjesFlavorQCDdn_branch != 0) NJjesFlavorQCDdn();
  if (NbLoosejesFlavorQCDdn_branch != 0) NbLoosejesFlavorQCDdn();
  if (NbMediumjesFlavorQCDdn_branch != 0) NbMediumjesFlavorQCDdn();
  if (NbTightjesFlavorQCDdn_branch != 0) NbTightjesFlavorQCDdn();
  if (NoORNbLoosejesFlavorQCDdn_branch != 0) NoORNbLoosejesFlavorQCDdn();
  if (NoORNbMediumjesFlavorQCDdn_branch != 0) NoORNbMediumjesFlavorQCDdn();
  if (NoORNbTightjesFlavorQCDdn_branch != 0) NoORNbTightjesFlavorQCDdn();
  if (J0jesFlavorQCDdn_branch != 0) J0jesFlavorQCDdn();
  if (J1jesFlavorQCDdn_branch != 0) J1jesFlavorQCDdn();
  if (J2jesFlavorQCDdn_branch != 0) J2jesFlavorQCDdn();
  if (J3jesFlavorQCDdn_branch != 0) J3jesFlavorQCDdn();
  if (J4jesFlavorQCDdn_branch != 0) J4jesFlavorQCDdn();
  if (J5jesFlavorQCDdn_branch != 0) J5jesFlavorQCDdn();
  if (J6jesFlavorQCDdn_branch != 0) J6jesFlavorQCDdn();
  if (J7jesFlavorQCDdn_branch != 0) J7jesFlavorQCDdn();
  if (NQJGenjesFlavorQCDdn_branch != 0) NQJGenjesFlavorQCDdn();
  if (NBJGenjesFlavorQCDdn_branch != 0) NBJGenjesFlavorQCDdn();
  if (NLJGenjesFlavorQCDdn_branch != 0) NLJGenjesFlavorQCDdn();
  if (MVVXjesFlavorQCDdn_branch != 0) MVVXjesFlavorQCDdn();
  if (PtVVXjesFlavorQCDdn_branch != 0) PtVVXjesFlavorQCDdn();
  if (HTjesFlavorQCDdn_branch != 0) HTjesFlavorQCDdn();
  if (HTJjesFlavorQCDdn_branch != 0) HTJjesFlavorQCDdn();
  if (HTFJjesFlavorQCDdn_branch != 0) HTFJjesFlavorQCDdn();
  if (SumPtFJjesFlavorQCDdn_branch != 0) SumPtFJjesFlavorQCDdn();
  if (SumPtJjesFlavorQCDdn_branch != 0) SumPtJjesFlavorQCDdn();
  if (JsjesTimePtEtaup_branch != 0) JsjesTimePtEtaup();
  if (NFJjesTimePtEtaup_branch != 0) NFJjesTimePtEtaup();
  if (FJ0jesTimePtEtaup_branch != 0) FJ0jesTimePtEtaup();
  if (FJ1jesTimePtEtaup_branch != 0) FJ1jesTimePtEtaup();
  if (FJ2jesTimePtEtaup_branch != 0) FJ2jesTimePtEtaup();
  if (FJ3jesTimePtEtaup_branch != 0) FJ3jesTimePtEtaup();
  if (FJ4jesTimePtEtaup_branch != 0) FJ4jesTimePtEtaup();
  if (VMD0jesTimePtEtaup_branch != 0) VMD0jesTimePtEtaup();
  if (VMD1jesTimePtEtaup_branch != 0) VMD1jesTimePtEtaup();
  if (VMD2jesTimePtEtaup_branch != 0) VMD2jesTimePtEtaup();
  if (VMD3jesTimePtEtaup_branch != 0) VMD3jesTimePtEtaup();
  if (VMD4jesTimePtEtaup_branch != 0) VMD4jesTimePtEtaup();
  if (WMD0jesTimePtEtaup_branch != 0) WMD0jesTimePtEtaup();
  if (WMD1jesTimePtEtaup_branch != 0) WMD1jesTimePtEtaup();
  if (WMD2jesTimePtEtaup_branch != 0) WMD2jesTimePtEtaup();
  if (WMD3jesTimePtEtaup_branch != 0) WMD3jesTimePtEtaup();
  if (WMD4jesTimePtEtaup_branch != 0) WMD4jesTimePtEtaup();
  if (NQGen0jesTimePtEtaup_branch != 0) NQGen0jesTimePtEtaup();
  if (NQGen1jesTimePtEtaup_branch != 0) NQGen1jesTimePtEtaup();
  if (NQGen2jesTimePtEtaup_branch != 0) NQGen2jesTimePtEtaup();
  if (NQGen3jesTimePtEtaup_branch != 0) NQGen3jesTimePtEtaup();
  if (NQGen4jesTimePtEtaup_branch != 0) NQGen4jesTimePtEtaup();
  if (NBGen0jesTimePtEtaup_branch != 0) NBGen0jesTimePtEtaup();
  if (NBGen1jesTimePtEtaup_branch != 0) NBGen1jesTimePtEtaup();
  if (NBGen2jesTimePtEtaup_branch != 0) NBGen2jesTimePtEtaup();
  if (NBGen3jesTimePtEtaup_branch != 0) NBGen3jesTimePtEtaup();
  if (NBGen4jesTimePtEtaup_branch != 0) NBGen4jesTimePtEtaup();
  if (NLGen0jesTimePtEtaup_branch != 0) NLGen0jesTimePtEtaup();
  if (NLGen1jesTimePtEtaup_branch != 0) NLGen1jesTimePtEtaup();
  if (NLGen2jesTimePtEtaup_branch != 0) NLGen2jesTimePtEtaup();
  if (NLGen3jesTimePtEtaup_branch != 0) NLGen3jesTimePtEtaup();
  if (NLGen4jesTimePtEtaup_branch != 0) NLGen4jesTimePtEtaup();
  if (NVQGen0jesTimePtEtaup_branch != 0) NVQGen0jesTimePtEtaup();
  if (NVQGen1jesTimePtEtaup_branch != 0) NVQGen1jesTimePtEtaup();
  if (NVQGen2jesTimePtEtaup_branch != 0) NVQGen2jesTimePtEtaup();
  if (NVQGen3jesTimePtEtaup_branch != 0) NVQGen3jesTimePtEtaup();
  if (NVQGen4jesTimePtEtaup_branch != 0) NVQGen4jesTimePtEtaup();
  if (NiFJjesTimePtEtaup_branch != 0) NiFJjesTimePtEtaup();
  if (iFJ0jesTimePtEtaup_branch != 0) iFJ0jesTimePtEtaup();
  if (iFJ1jesTimePtEtaup_branch != 0) iFJ1jesTimePtEtaup();
  if (iFJ2jesTimePtEtaup_branch != 0) iFJ2jesTimePtEtaup();
  if (iFJ3jesTimePtEtaup_branch != 0) iFJ3jesTimePtEtaup();
  if (iFJ4jesTimePtEtaup_branch != 0) iFJ4jesTimePtEtaup();
  if (iVMD0jesTimePtEtaup_branch != 0) iVMD0jesTimePtEtaup();
  if (iVMD1jesTimePtEtaup_branch != 0) iVMD1jesTimePtEtaup();
  if (iVMD2jesTimePtEtaup_branch != 0) iVMD2jesTimePtEtaup();
  if (iVMD3jesTimePtEtaup_branch != 0) iVMD3jesTimePtEtaup();
  if (iVMD4jesTimePtEtaup_branch != 0) iVMD4jesTimePtEtaup();
  if (iWMD0jesTimePtEtaup_branch != 0) iWMD0jesTimePtEtaup();
  if (iWMD1jesTimePtEtaup_branch != 0) iWMD1jesTimePtEtaup();
  if (iWMD2jesTimePtEtaup_branch != 0) iWMD2jesTimePtEtaup();
  if (iWMD3jesTimePtEtaup_branch != 0) iWMD3jesTimePtEtaup();
  if (iWMD4jesTimePtEtaup_branch != 0) iWMD4jesTimePtEtaup();
  if (METjesTimePtEtaup_branch != 0) METjesTimePtEtaup();
  if (NujesTimePtEtaup_branch != 0) NujesTimePtEtaup();
  if (NJjesTimePtEtaup_branch != 0) NJjesTimePtEtaup();
  if (NbLoosejesTimePtEtaup_branch != 0) NbLoosejesTimePtEtaup();
  if (NbMediumjesTimePtEtaup_branch != 0) NbMediumjesTimePtEtaup();
  if (NbTightjesTimePtEtaup_branch != 0) NbTightjesTimePtEtaup();
  if (NoORNbLoosejesTimePtEtaup_branch != 0) NoORNbLoosejesTimePtEtaup();
  if (NoORNbMediumjesTimePtEtaup_branch != 0) NoORNbMediumjesTimePtEtaup();
  if (NoORNbTightjesTimePtEtaup_branch != 0) NoORNbTightjesTimePtEtaup();
  if (J0jesTimePtEtaup_branch != 0) J0jesTimePtEtaup();
  if (J1jesTimePtEtaup_branch != 0) J1jesTimePtEtaup();
  if (J2jesTimePtEtaup_branch != 0) J2jesTimePtEtaup();
  if (J3jesTimePtEtaup_branch != 0) J3jesTimePtEtaup();
  if (J4jesTimePtEtaup_branch != 0) J4jesTimePtEtaup();
  if (J5jesTimePtEtaup_branch != 0) J5jesTimePtEtaup();
  if (J6jesTimePtEtaup_branch != 0) J6jesTimePtEtaup();
  if (J7jesTimePtEtaup_branch != 0) J7jesTimePtEtaup();
  if (NQJGenjesTimePtEtaup_branch != 0) NQJGenjesTimePtEtaup();
  if (NBJGenjesTimePtEtaup_branch != 0) NBJGenjesTimePtEtaup();
  if (NLJGenjesTimePtEtaup_branch != 0) NLJGenjesTimePtEtaup();
  if (MVVXjesTimePtEtaup_branch != 0) MVVXjesTimePtEtaup();
  if (PtVVXjesTimePtEtaup_branch != 0) PtVVXjesTimePtEtaup();
  if (HTjesTimePtEtaup_branch != 0) HTjesTimePtEtaup();
  if (HTJjesTimePtEtaup_branch != 0) HTJjesTimePtEtaup();
  if (HTFJjesTimePtEtaup_branch != 0) HTFJjesTimePtEtaup();
  if (SumPtFJjesTimePtEtaup_branch != 0) SumPtFJjesTimePtEtaup();
  if (SumPtJjesTimePtEtaup_branch != 0) SumPtJjesTimePtEtaup();
  if (JsjesTimePtEtadn_branch != 0) JsjesTimePtEtadn();
  if (NFJjesTimePtEtadn_branch != 0) NFJjesTimePtEtadn();
  if (FJ0jesTimePtEtadn_branch != 0) FJ0jesTimePtEtadn();
  if (FJ1jesTimePtEtadn_branch != 0) FJ1jesTimePtEtadn();
  if (FJ2jesTimePtEtadn_branch != 0) FJ2jesTimePtEtadn();
  if (FJ3jesTimePtEtadn_branch != 0) FJ3jesTimePtEtadn();
  if (FJ4jesTimePtEtadn_branch != 0) FJ4jesTimePtEtadn();
  if (VMD0jesTimePtEtadn_branch != 0) VMD0jesTimePtEtadn();
  if (VMD1jesTimePtEtadn_branch != 0) VMD1jesTimePtEtadn();
  if (VMD2jesTimePtEtadn_branch != 0) VMD2jesTimePtEtadn();
  if (VMD3jesTimePtEtadn_branch != 0) VMD3jesTimePtEtadn();
  if (VMD4jesTimePtEtadn_branch != 0) VMD4jesTimePtEtadn();
  if (WMD0jesTimePtEtadn_branch != 0) WMD0jesTimePtEtadn();
  if (WMD1jesTimePtEtadn_branch != 0) WMD1jesTimePtEtadn();
  if (WMD2jesTimePtEtadn_branch != 0) WMD2jesTimePtEtadn();
  if (WMD3jesTimePtEtadn_branch != 0) WMD3jesTimePtEtadn();
  if (WMD4jesTimePtEtadn_branch != 0) WMD4jesTimePtEtadn();
  if (NQGen0jesTimePtEtadn_branch != 0) NQGen0jesTimePtEtadn();
  if (NQGen1jesTimePtEtadn_branch != 0) NQGen1jesTimePtEtadn();
  if (NQGen2jesTimePtEtadn_branch != 0) NQGen2jesTimePtEtadn();
  if (NQGen3jesTimePtEtadn_branch != 0) NQGen3jesTimePtEtadn();
  if (NQGen4jesTimePtEtadn_branch != 0) NQGen4jesTimePtEtadn();
  if (NBGen0jesTimePtEtadn_branch != 0) NBGen0jesTimePtEtadn();
  if (NBGen1jesTimePtEtadn_branch != 0) NBGen1jesTimePtEtadn();
  if (NBGen2jesTimePtEtadn_branch != 0) NBGen2jesTimePtEtadn();
  if (NBGen3jesTimePtEtadn_branch != 0) NBGen3jesTimePtEtadn();
  if (NBGen4jesTimePtEtadn_branch != 0) NBGen4jesTimePtEtadn();
  if (NLGen0jesTimePtEtadn_branch != 0) NLGen0jesTimePtEtadn();
  if (NLGen1jesTimePtEtadn_branch != 0) NLGen1jesTimePtEtadn();
  if (NLGen2jesTimePtEtadn_branch != 0) NLGen2jesTimePtEtadn();
  if (NLGen3jesTimePtEtadn_branch != 0) NLGen3jesTimePtEtadn();
  if (NLGen4jesTimePtEtadn_branch != 0) NLGen4jesTimePtEtadn();
  if (NVQGen0jesTimePtEtadn_branch != 0) NVQGen0jesTimePtEtadn();
  if (NVQGen1jesTimePtEtadn_branch != 0) NVQGen1jesTimePtEtadn();
  if (NVQGen2jesTimePtEtadn_branch != 0) NVQGen2jesTimePtEtadn();
  if (NVQGen3jesTimePtEtadn_branch != 0) NVQGen3jesTimePtEtadn();
  if (NVQGen4jesTimePtEtadn_branch != 0) NVQGen4jesTimePtEtadn();
  if (NiFJjesTimePtEtadn_branch != 0) NiFJjesTimePtEtadn();
  if (iFJ0jesTimePtEtadn_branch != 0) iFJ0jesTimePtEtadn();
  if (iFJ1jesTimePtEtadn_branch != 0) iFJ1jesTimePtEtadn();
  if (iFJ2jesTimePtEtadn_branch != 0) iFJ2jesTimePtEtadn();
  if (iFJ3jesTimePtEtadn_branch != 0) iFJ3jesTimePtEtadn();
  if (iFJ4jesTimePtEtadn_branch != 0) iFJ4jesTimePtEtadn();
  if (iVMD0jesTimePtEtadn_branch != 0) iVMD0jesTimePtEtadn();
  if (iVMD1jesTimePtEtadn_branch != 0) iVMD1jesTimePtEtadn();
  if (iVMD2jesTimePtEtadn_branch != 0) iVMD2jesTimePtEtadn();
  if (iVMD3jesTimePtEtadn_branch != 0) iVMD3jesTimePtEtadn();
  if (iVMD4jesTimePtEtadn_branch != 0) iVMD4jesTimePtEtadn();
  if (iWMD0jesTimePtEtadn_branch != 0) iWMD0jesTimePtEtadn();
  if (iWMD1jesTimePtEtadn_branch != 0) iWMD1jesTimePtEtadn();
  if (iWMD2jesTimePtEtadn_branch != 0) iWMD2jesTimePtEtadn();
  if (iWMD3jesTimePtEtadn_branch != 0) iWMD3jesTimePtEtadn();
  if (iWMD4jesTimePtEtadn_branch != 0) iWMD4jesTimePtEtadn();
  if (METjesTimePtEtadn_branch != 0) METjesTimePtEtadn();
  if (NujesTimePtEtadn_branch != 0) NujesTimePtEtadn();
  if (NJjesTimePtEtadn_branch != 0) NJjesTimePtEtadn();
  if (NbLoosejesTimePtEtadn_branch != 0) NbLoosejesTimePtEtadn();
  if (NbMediumjesTimePtEtadn_branch != 0) NbMediumjesTimePtEtadn();
  if (NbTightjesTimePtEtadn_branch != 0) NbTightjesTimePtEtadn();
  if (NoORNbLoosejesTimePtEtadn_branch != 0) NoORNbLoosejesTimePtEtadn();
  if (NoORNbMediumjesTimePtEtadn_branch != 0) NoORNbMediumjesTimePtEtadn();
  if (NoORNbTightjesTimePtEtadn_branch != 0) NoORNbTightjesTimePtEtadn();
  if (J0jesTimePtEtadn_branch != 0) J0jesTimePtEtadn();
  if (J1jesTimePtEtadn_branch != 0) J1jesTimePtEtadn();
  if (J2jesTimePtEtadn_branch != 0) J2jesTimePtEtadn();
  if (J3jesTimePtEtadn_branch != 0) J3jesTimePtEtadn();
  if (J4jesTimePtEtadn_branch != 0) J4jesTimePtEtadn();
  if (J5jesTimePtEtadn_branch != 0) J5jesTimePtEtadn();
  if (J6jesTimePtEtadn_branch != 0) J6jesTimePtEtadn();
  if (J7jesTimePtEtadn_branch != 0) J7jesTimePtEtadn();
  if (NQJGenjesTimePtEtadn_branch != 0) NQJGenjesTimePtEtadn();
  if (NBJGenjesTimePtEtadn_branch != 0) NBJGenjesTimePtEtadn();
  if (NLJGenjesTimePtEtadn_branch != 0) NLJGenjesTimePtEtadn();
  if (MVVXjesTimePtEtadn_branch != 0) MVVXjesTimePtEtadn();
  if (PtVVXjesTimePtEtadn_branch != 0) PtVVXjesTimePtEtadn();
  if (HTjesTimePtEtadn_branch != 0) HTjesTimePtEtadn();
  if (HTJjesTimePtEtadn_branch != 0) HTJjesTimePtEtadn();
  if (HTFJjesTimePtEtadn_branch != 0) HTFJjesTimePtEtadn();
  if (SumPtFJjesTimePtEtadn_branch != 0) SumPtFJjesTimePtEtadn();
  if (SumPtJjesTimePtEtadn_branch != 0) SumPtJjesTimePtEtadn();
  if (JsjesRelativeJEREC1up_branch != 0) JsjesRelativeJEREC1up();
  if (NFJjesRelativeJEREC1up_branch != 0) NFJjesRelativeJEREC1up();
  if (FJ0jesRelativeJEREC1up_branch != 0) FJ0jesRelativeJEREC1up();
  if (FJ1jesRelativeJEREC1up_branch != 0) FJ1jesRelativeJEREC1up();
  if (FJ2jesRelativeJEREC1up_branch != 0) FJ2jesRelativeJEREC1up();
  if (FJ3jesRelativeJEREC1up_branch != 0) FJ3jesRelativeJEREC1up();
  if (FJ4jesRelativeJEREC1up_branch != 0) FJ4jesRelativeJEREC1up();
  if (VMD0jesRelativeJEREC1up_branch != 0) VMD0jesRelativeJEREC1up();
  if (VMD1jesRelativeJEREC1up_branch != 0) VMD1jesRelativeJEREC1up();
  if (VMD2jesRelativeJEREC1up_branch != 0) VMD2jesRelativeJEREC1up();
  if (VMD3jesRelativeJEREC1up_branch != 0) VMD3jesRelativeJEREC1up();
  if (VMD4jesRelativeJEREC1up_branch != 0) VMD4jesRelativeJEREC1up();
  if (WMD0jesRelativeJEREC1up_branch != 0) WMD0jesRelativeJEREC1up();
  if (WMD1jesRelativeJEREC1up_branch != 0) WMD1jesRelativeJEREC1up();
  if (WMD2jesRelativeJEREC1up_branch != 0) WMD2jesRelativeJEREC1up();
  if (WMD3jesRelativeJEREC1up_branch != 0) WMD3jesRelativeJEREC1up();
  if (WMD4jesRelativeJEREC1up_branch != 0) WMD4jesRelativeJEREC1up();
  if (NQGen0jesRelativeJEREC1up_branch != 0) NQGen0jesRelativeJEREC1up();
  if (NQGen1jesRelativeJEREC1up_branch != 0) NQGen1jesRelativeJEREC1up();
  if (NQGen2jesRelativeJEREC1up_branch != 0) NQGen2jesRelativeJEREC1up();
  if (NQGen3jesRelativeJEREC1up_branch != 0) NQGen3jesRelativeJEREC1up();
  if (NQGen4jesRelativeJEREC1up_branch != 0) NQGen4jesRelativeJEREC1up();
  if (NBGen0jesRelativeJEREC1up_branch != 0) NBGen0jesRelativeJEREC1up();
  if (NBGen1jesRelativeJEREC1up_branch != 0) NBGen1jesRelativeJEREC1up();
  if (NBGen2jesRelativeJEREC1up_branch != 0) NBGen2jesRelativeJEREC1up();
  if (NBGen3jesRelativeJEREC1up_branch != 0) NBGen3jesRelativeJEREC1up();
  if (NBGen4jesRelativeJEREC1up_branch != 0) NBGen4jesRelativeJEREC1up();
  if (NLGen0jesRelativeJEREC1up_branch != 0) NLGen0jesRelativeJEREC1up();
  if (NLGen1jesRelativeJEREC1up_branch != 0) NLGen1jesRelativeJEREC1up();
  if (NLGen2jesRelativeJEREC1up_branch != 0) NLGen2jesRelativeJEREC1up();
  if (NLGen3jesRelativeJEREC1up_branch != 0) NLGen3jesRelativeJEREC1up();
  if (NLGen4jesRelativeJEREC1up_branch != 0) NLGen4jesRelativeJEREC1up();
  if (NVQGen0jesRelativeJEREC1up_branch != 0) NVQGen0jesRelativeJEREC1up();
  if (NVQGen1jesRelativeJEREC1up_branch != 0) NVQGen1jesRelativeJEREC1up();
  if (NVQGen2jesRelativeJEREC1up_branch != 0) NVQGen2jesRelativeJEREC1up();
  if (NVQGen3jesRelativeJEREC1up_branch != 0) NVQGen3jesRelativeJEREC1up();
  if (NVQGen4jesRelativeJEREC1up_branch != 0) NVQGen4jesRelativeJEREC1up();
  if (NiFJjesRelativeJEREC1up_branch != 0) NiFJjesRelativeJEREC1up();
  if (iFJ0jesRelativeJEREC1up_branch != 0) iFJ0jesRelativeJEREC1up();
  if (iFJ1jesRelativeJEREC1up_branch != 0) iFJ1jesRelativeJEREC1up();
  if (iFJ2jesRelativeJEREC1up_branch != 0) iFJ2jesRelativeJEREC1up();
  if (iFJ3jesRelativeJEREC1up_branch != 0) iFJ3jesRelativeJEREC1up();
  if (iFJ4jesRelativeJEREC1up_branch != 0) iFJ4jesRelativeJEREC1up();
  if (iVMD0jesRelativeJEREC1up_branch != 0) iVMD0jesRelativeJEREC1up();
  if (iVMD1jesRelativeJEREC1up_branch != 0) iVMD1jesRelativeJEREC1up();
  if (iVMD2jesRelativeJEREC1up_branch != 0) iVMD2jesRelativeJEREC1up();
  if (iVMD3jesRelativeJEREC1up_branch != 0) iVMD3jesRelativeJEREC1up();
  if (iVMD4jesRelativeJEREC1up_branch != 0) iVMD4jesRelativeJEREC1up();
  if (iWMD0jesRelativeJEREC1up_branch != 0) iWMD0jesRelativeJEREC1up();
  if (iWMD1jesRelativeJEREC1up_branch != 0) iWMD1jesRelativeJEREC1up();
  if (iWMD2jesRelativeJEREC1up_branch != 0) iWMD2jesRelativeJEREC1up();
  if (iWMD3jesRelativeJEREC1up_branch != 0) iWMD3jesRelativeJEREC1up();
  if (iWMD4jesRelativeJEREC1up_branch != 0) iWMD4jesRelativeJEREC1up();
  if (METjesRelativeJEREC1up_branch != 0) METjesRelativeJEREC1up();
  if (NujesRelativeJEREC1up_branch != 0) NujesRelativeJEREC1up();
  if (NJjesRelativeJEREC1up_branch != 0) NJjesRelativeJEREC1up();
  if (NbLoosejesRelativeJEREC1up_branch != 0) NbLoosejesRelativeJEREC1up();
  if (NbMediumjesRelativeJEREC1up_branch != 0) NbMediumjesRelativeJEREC1up();
  if (NbTightjesRelativeJEREC1up_branch != 0) NbTightjesRelativeJEREC1up();
  if (NoORNbLoosejesRelativeJEREC1up_branch != 0) NoORNbLoosejesRelativeJEREC1up();
  if (NoORNbMediumjesRelativeJEREC1up_branch != 0) NoORNbMediumjesRelativeJEREC1up();
  if (NoORNbTightjesRelativeJEREC1up_branch != 0) NoORNbTightjesRelativeJEREC1up();
  if (J0jesRelativeJEREC1up_branch != 0) J0jesRelativeJEREC1up();
  if (J1jesRelativeJEREC1up_branch != 0) J1jesRelativeJEREC1up();
  if (J2jesRelativeJEREC1up_branch != 0) J2jesRelativeJEREC1up();
  if (J3jesRelativeJEREC1up_branch != 0) J3jesRelativeJEREC1up();
  if (J4jesRelativeJEREC1up_branch != 0) J4jesRelativeJEREC1up();
  if (J5jesRelativeJEREC1up_branch != 0) J5jesRelativeJEREC1up();
  if (J6jesRelativeJEREC1up_branch != 0) J6jesRelativeJEREC1up();
  if (J7jesRelativeJEREC1up_branch != 0) J7jesRelativeJEREC1up();
  if (NQJGenjesRelativeJEREC1up_branch != 0) NQJGenjesRelativeJEREC1up();
  if (NBJGenjesRelativeJEREC1up_branch != 0) NBJGenjesRelativeJEREC1up();
  if (NLJGenjesRelativeJEREC1up_branch != 0) NLJGenjesRelativeJEREC1up();
  if (MVVXjesRelativeJEREC1up_branch != 0) MVVXjesRelativeJEREC1up();
  if (PtVVXjesRelativeJEREC1up_branch != 0) PtVVXjesRelativeJEREC1up();
  if (HTjesRelativeJEREC1up_branch != 0) HTjesRelativeJEREC1up();
  if (HTJjesRelativeJEREC1up_branch != 0) HTJjesRelativeJEREC1up();
  if (HTFJjesRelativeJEREC1up_branch != 0) HTFJjesRelativeJEREC1up();
  if (SumPtFJjesRelativeJEREC1up_branch != 0) SumPtFJjesRelativeJEREC1up();
  if (SumPtJjesRelativeJEREC1up_branch != 0) SumPtJjesRelativeJEREC1up();
  if (JsjesRelativeJEREC1dn_branch != 0) JsjesRelativeJEREC1dn();
  if (NFJjesRelativeJEREC1dn_branch != 0) NFJjesRelativeJEREC1dn();
  if (FJ0jesRelativeJEREC1dn_branch != 0) FJ0jesRelativeJEREC1dn();
  if (FJ1jesRelativeJEREC1dn_branch != 0) FJ1jesRelativeJEREC1dn();
  if (FJ2jesRelativeJEREC1dn_branch != 0) FJ2jesRelativeJEREC1dn();
  if (FJ3jesRelativeJEREC1dn_branch != 0) FJ3jesRelativeJEREC1dn();
  if (FJ4jesRelativeJEREC1dn_branch != 0) FJ4jesRelativeJEREC1dn();
  if (VMD0jesRelativeJEREC1dn_branch != 0) VMD0jesRelativeJEREC1dn();
  if (VMD1jesRelativeJEREC1dn_branch != 0) VMD1jesRelativeJEREC1dn();
  if (VMD2jesRelativeJEREC1dn_branch != 0) VMD2jesRelativeJEREC1dn();
  if (VMD3jesRelativeJEREC1dn_branch != 0) VMD3jesRelativeJEREC1dn();
  if (VMD4jesRelativeJEREC1dn_branch != 0) VMD4jesRelativeJEREC1dn();
  if (WMD0jesRelativeJEREC1dn_branch != 0) WMD0jesRelativeJEREC1dn();
  if (WMD1jesRelativeJEREC1dn_branch != 0) WMD1jesRelativeJEREC1dn();
  if (WMD2jesRelativeJEREC1dn_branch != 0) WMD2jesRelativeJEREC1dn();
  if (WMD3jesRelativeJEREC1dn_branch != 0) WMD3jesRelativeJEREC1dn();
  if (WMD4jesRelativeJEREC1dn_branch != 0) WMD4jesRelativeJEREC1dn();
  if (NQGen0jesRelativeJEREC1dn_branch != 0) NQGen0jesRelativeJEREC1dn();
  if (NQGen1jesRelativeJEREC1dn_branch != 0) NQGen1jesRelativeJEREC1dn();
  if (NQGen2jesRelativeJEREC1dn_branch != 0) NQGen2jesRelativeJEREC1dn();
  if (NQGen3jesRelativeJEREC1dn_branch != 0) NQGen3jesRelativeJEREC1dn();
  if (NQGen4jesRelativeJEREC1dn_branch != 0) NQGen4jesRelativeJEREC1dn();
  if (NBGen0jesRelativeJEREC1dn_branch != 0) NBGen0jesRelativeJEREC1dn();
  if (NBGen1jesRelativeJEREC1dn_branch != 0) NBGen1jesRelativeJEREC1dn();
  if (NBGen2jesRelativeJEREC1dn_branch != 0) NBGen2jesRelativeJEREC1dn();
  if (NBGen3jesRelativeJEREC1dn_branch != 0) NBGen3jesRelativeJEREC1dn();
  if (NBGen4jesRelativeJEREC1dn_branch != 0) NBGen4jesRelativeJEREC1dn();
  if (NLGen0jesRelativeJEREC1dn_branch != 0) NLGen0jesRelativeJEREC1dn();
  if (NLGen1jesRelativeJEREC1dn_branch != 0) NLGen1jesRelativeJEREC1dn();
  if (NLGen2jesRelativeJEREC1dn_branch != 0) NLGen2jesRelativeJEREC1dn();
  if (NLGen3jesRelativeJEREC1dn_branch != 0) NLGen3jesRelativeJEREC1dn();
  if (NLGen4jesRelativeJEREC1dn_branch != 0) NLGen4jesRelativeJEREC1dn();
  if (NVQGen0jesRelativeJEREC1dn_branch != 0) NVQGen0jesRelativeJEREC1dn();
  if (NVQGen1jesRelativeJEREC1dn_branch != 0) NVQGen1jesRelativeJEREC1dn();
  if (NVQGen2jesRelativeJEREC1dn_branch != 0) NVQGen2jesRelativeJEREC1dn();
  if (NVQGen3jesRelativeJEREC1dn_branch != 0) NVQGen3jesRelativeJEREC1dn();
  if (NVQGen4jesRelativeJEREC1dn_branch != 0) NVQGen4jesRelativeJEREC1dn();
  if (NiFJjesRelativeJEREC1dn_branch != 0) NiFJjesRelativeJEREC1dn();
  if (iFJ0jesRelativeJEREC1dn_branch != 0) iFJ0jesRelativeJEREC1dn();
  if (iFJ1jesRelativeJEREC1dn_branch != 0) iFJ1jesRelativeJEREC1dn();
  if (iFJ2jesRelativeJEREC1dn_branch != 0) iFJ2jesRelativeJEREC1dn();
  if (iFJ3jesRelativeJEREC1dn_branch != 0) iFJ3jesRelativeJEREC1dn();
  if (iFJ4jesRelativeJEREC1dn_branch != 0) iFJ4jesRelativeJEREC1dn();
  if (iVMD0jesRelativeJEREC1dn_branch != 0) iVMD0jesRelativeJEREC1dn();
  if (iVMD1jesRelativeJEREC1dn_branch != 0) iVMD1jesRelativeJEREC1dn();
  if (iVMD2jesRelativeJEREC1dn_branch != 0) iVMD2jesRelativeJEREC1dn();
  if (iVMD3jesRelativeJEREC1dn_branch != 0) iVMD3jesRelativeJEREC1dn();
  if (iVMD4jesRelativeJEREC1dn_branch != 0) iVMD4jesRelativeJEREC1dn();
  if (iWMD0jesRelativeJEREC1dn_branch != 0) iWMD0jesRelativeJEREC1dn();
  if (iWMD1jesRelativeJEREC1dn_branch != 0) iWMD1jesRelativeJEREC1dn();
  if (iWMD2jesRelativeJEREC1dn_branch != 0) iWMD2jesRelativeJEREC1dn();
  if (iWMD3jesRelativeJEREC1dn_branch != 0) iWMD3jesRelativeJEREC1dn();
  if (iWMD4jesRelativeJEREC1dn_branch != 0) iWMD4jesRelativeJEREC1dn();
  if (METjesRelativeJEREC1dn_branch != 0) METjesRelativeJEREC1dn();
  if (NujesRelativeJEREC1dn_branch != 0) NujesRelativeJEREC1dn();
  if (NJjesRelativeJEREC1dn_branch != 0) NJjesRelativeJEREC1dn();
  if (NbLoosejesRelativeJEREC1dn_branch != 0) NbLoosejesRelativeJEREC1dn();
  if (NbMediumjesRelativeJEREC1dn_branch != 0) NbMediumjesRelativeJEREC1dn();
  if (NbTightjesRelativeJEREC1dn_branch != 0) NbTightjesRelativeJEREC1dn();
  if (NoORNbLoosejesRelativeJEREC1dn_branch != 0) NoORNbLoosejesRelativeJEREC1dn();
  if (NoORNbMediumjesRelativeJEREC1dn_branch != 0) NoORNbMediumjesRelativeJEREC1dn();
  if (NoORNbTightjesRelativeJEREC1dn_branch != 0) NoORNbTightjesRelativeJEREC1dn();
  if (J0jesRelativeJEREC1dn_branch != 0) J0jesRelativeJEREC1dn();
  if (J1jesRelativeJEREC1dn_branch != 0) J1jesRelativeJEREC1dn();
  if (J2jesRelativeJEREC1dn_branch != 0) J2jesRelativeJEREC1dn();
  if (J3jesRelativeJEREC1dn_branch != 0) J3jesRelativeJEREC1dn();
  if (J4jesRelativeJEREC1dn_branch != 0) J4jesRelativeJEREC1dn();
  if (J5jesRelativeJEREC1dn_branch != 0) J5jesRelativeJEREC1dn();
  if (J6jesRelativeJEREC1dn_branch != 0) J6jesRelativeJEREC1dn();
  if (J7jesRelativeJEREC1dn_branch != 0) J7jesRelativeJEREC1dn();
  if (NQJGenjesRelativeJEREC1dn_branch != 0) NQJGenjesRelativeJEREC1dn();
  if (NBJGenjesRelativeJEREC1dn_branch != 0) NBJGenjesRelativeJEREC1dn();
  if (NLJGenjesRelativeJEREC1dn_branch != 0) NLJGenjesRelativeJEREC1dn();
  if (MVVXjesRelativeJEREC1dn_branch != 0) MVVXjesRelativeJEREC1dn();
  if (PtVVXjesRelativeJEREC1dn_branch != 0) PtVVXjesRelativeJEREC1dn();
  if (HTjesRelativeJEREC1dn_branch != 0) HTjesRelativeJEREC1dn();
  if (HTJjesRelativeJEREC1dn_branch != 0) HTJjesRelativeJEREC1dn();
  if (HTFJjesRelativeJEREC1dn_branch != 0) HTFJjesRelativeJEREC1dn();
  if (SumPtFJjesRelativeJEREC1dn_branch != 0) SumPtFJjesRelativeJEREC1dn();
  if (SumPtJjesRelativeJEREC1dn_branch != 0) SumPtJjesRelativeJEREC1dn();
  if (JsjesRelativeJEREC2up_branch != 0) JsjesRelativeJEREC2up();
  if (NFJjesRelativeJEREC2up_branch != 0) NFJjesRelativeJEREC2up();
  if (FJ0jesRelativeJEREC2up_branch != 0) FJ0jesRelativeJEREC2up();
  if (FJ1jesRelativeJEREC2up_branch != 0) FJ1jesRelativeJEREC2up();
  if (FJ2jesRelativeJEREC2up_branch != 0) FJ2jesRelativeJEREC2up();
  if (FJ3jesRelativeJEREC2up_branch != 0) FJ3jesRelativeJEREC2up();
  if (FJ4jesRelativeJEREC2up_branch != 0) FJ4jesRelativeJEREC2up();
  if (VMD0jesRelativeJEREC2up_branch != 0) VMD0jesRelativeJEREC2up();
  if (VMD1jesRelativeJEREC2up_branch != 0) VMD1jesRelativeJEREC2up();
  if (VMD2jesRelativeJEREC2up_branch != 0) VMD2jesRelativeJEREC2up();
  if (VMD3jesRelativeJEREC2up_branch != 0) VMD3jesRelativeJEREC2up();
  if (VMD4jesRelativeJEREC2up_branch != 0) VMD4jesRelativeJEREC2up();
  if (WMD0jesRelativeJEREC2up_branch != 0) WMD0jesRelativeJEREC2up();
  if (WMD1jesRelativeJEREC2up_branch != 0) WMD1jesRelativeJEREC2up();
  if (WMD2jesRelativeJEREC2up_branch != 0) WMD2jesRelativeJEREC2up();
  if (WMD3jesRelativeJEREC2up_branch != 0) WMD3jesRelativeJEREC2up();
  if (WMD4jesRelativeJEREC2up_branch != 0) WMD4jesRelativeJEREC2up();
  if (NQGen0jesRelativeJEREC2up_branch != 0) NQGen0jesRelativeJEREC2up();
  if (NQGen1jesRelativeJEREC2up_branch != 0) NQGen1jesRelativeJEREC2up();
  if (NQGen2jesRelativeJEREC2up_branch != 0) NQGen2jesRelativeJEREC2up();
  if (NQGen3jesRelativeJEREC2up_branch != 0) NQGen3jesRelativeJEREC2up();
  if (NQGen4jesRelativeJEREC2up_branch != 0) NQGen4jesRelativeJEREC2up();
  if (NBGen0jesRelativeJEREC2up_branch != 0) NBGen0jesRelativeJEREC2up();
  if (NBGen1jesRelativeJEREC2up_branch != 0) NBGen1jesRelativeJEREC2up();
  if (NBGen2jesRelativeJEREC2up_branch != 0) NBGen2jesRelativeJEREC2up();
  if (NBGen3jesRelativeJEREC2up_branch != 0) NBGen3jesRelativeJEREC2up();
  if (NBGen4jesRelativeJEREC2up_branch != 0) NBGen4jesRelativeJEREC2up();
  if (NLGen0jesRelativeJEREC2up_branch != 0) NLGen0jesRelativeJEREC2up();
  if (NLGen1jesRelativeJEREC2up_branch != 0) NLGen1jesRelativeJEREC2up();
  if (NLGen2jesRelativeJEREC2up_branch != 0) NLGen2jesRelativeJEREC2up();
  if (NLGen3jesRelativeJEREC2up_branch != 0) NLGen3jesRelativeJEREC2up();
  if (NLGen4jesRelativeJEREC2up_branch != 0) NLGen4jesRelativeJEREC2up();
  if (NVQGen0jesRelativeJEREC2up_branch != 0) NVQGen0jesRelativeJEREC2up();
  if (NVQGen1jesRelativeJEREC2up_branch != 0) NVQGen1jesRelativeJEREC2up();
  if (NVQGen2jesRelativeJEREC2up_branch != 0) NVQGen2jesRelativeJEREC2up();
  if (NVQGen3jesRelativeJEREC2up_branch != 0) NVQGen3jesRelativeJEREC2up();
  if (NVQGen4jesRelativeJEREC2up_branch != 0) NVQGen4jesRelativeJEREC2up();
  if (NiFJjesRelativeJEREC2up_branch != 0) NiFJjesRelativeJEREC2up();
  if (iFJ0jesRelativeJEREC2up_branch != 0) iFJ0jesRelativeJEREC2up();
  if (iFJ1jesRelativeJEREC2up_branch != 0) iFJ1jesRelativeJEREC2up();
  if (iFJ2jesRelativeJEREC2up_branch != 0) iFJ2jesRelativeJEREC2up();
  if (iFJ3jesRelativeJEREC2up_branch != 0) iFJ3jesRelativeJEREC2up();
  if (iFJ4jesRelativeJEREC2up_branch != 0) iFJ4jesRelativeJEREC2up();
  if (iVMD0jesRelativeJEREC2up_branch != 0) iVMD0jesRelativeJEREC2up();
  if (iVMD1jesRelativeJEREC2up_branch != 0) iVMD1jesRelativeJEREC2up();
  if (iVMD2jesRelativeJEREC2up_branch != 0) iVMD2jesRelativeJEREC2up();
  if (iVMD3jesRelativeJEREC2up_branch != 0) iVMD3jesRelativeJEREC2up();
  if (iVMD4jesRelativeJEREC2up_branch != 0) iVMD4jesRelativeJEREC2up();
  if (iWMD0jesRelativeJEREC2up_branch != 0) iWMD0jesRelativeJEREC2up();
  if (iWMD1jesRelativeJEREC2up_branch != 0) iWMD1jesRelativeJEREC2up();
  if (iWMD2jesRelativeJEREC2up_branch != 0) iWMD2jesRelativeJEREC2up();
  if (iWMD3jesRelativeJEREC2up_branch != 0) iWMD3jesRelativeJEREC2up();
  if (iWMD4jesRelativeJEREC2up_branch != 0) iWMD4jesRelativeJEREC2up();
  if (METjesRelativeJEREC2up_branch != 0) METjesRelativeJEREC2up();
  if (NujesRelativeJEREC2up_branch != 0) NujesRelativeJEREC2up();
  if (NJjesRelativeJEREC2up_branch != 0) NJjesRelativeJEREC2up();
  if (NbLoosejesRelativeJEREC2up_branch != 0) NbLoosejesRelativeJEREC2up();
  if (NbMediumjesRelativeJEREC2up_branch != 0) NbMediumjesRelativeJEREC2up();
  if (NbTightjesRelativeJEREC2up_branch != 0) NbTightjesRelativeJEREC2up();
  if (NoORNbLoosejesRelativeJEREC2up_branch != 0) NoORNbLoosejesRelativeJEREC2up();
  if (NoORNbMediumjesRelativeJEREC2up_branch != 0) NoORNbMediumjesRelativeJEREC2up();
  if (NoORNbTightjesRelativeJEREC2up_branch != 0) NoORNbTightjesRelativeJEREC2up();
  if (J0jesRelativeJEREC2up_branch != 0) J0jesRelativeJEREC2up();
  if (J1jesRelativeJEREC2up_branch != 0) J1jesRelativeJEREC2up();
  if (J2jesRelativeJEREC2up_branch != 0) J2jesRelativeJEREC2up();
  if (J3jesRelativeJEREC2up_branch != 0) J3jesRelativeJEREC2up();
  if (J4jesRelativeJEREC2up_branch != 0) J4jesRelativeJEREC2up();
  if (J5jesRelativeJEREC2up_branch != 0) J5jesRelativeJEREC2up();
  if (J6jesRelativeJEREC2up_branch != 0) J6jesRelativeJEREC2up();
  if (J7jesRelativeJEREC2up_branch != 0) J7jesRelativeJEREC2up();
  if (NQJGenjesRelativeJEREC2up_branch != 0) NQJGenjesRelativeJEREC2up();
  if (NBJGenjesRelativeJEREC2up_branch != 0) NBJGenjesRelativeJEREC2up();
  if (NLJGenjesRelativeJEREC2up_branch != 0) NLJGenjesRelativeJEREC2up();
  if (MVVXjesRelativeJEREC2up_branch != 0) MVVXjesRelativeJEREC2up();
  if (PtVVXjesRelativeJEREC2up_branch != 0) PtVVXjesRelativeJEREC2up();
  if (HTjesRelativeJEREC2up_branch != 0) HTjesRelativeJEREC2up();
  if (HTJjesRelativeJEREC2up_branch != 0) HTJjesRelativeJEREC2up();
  if (HTFJjesRelativeJEREC2up_branch != 0) HTFJjesRelativeJEREC2up();
  if (SumPtFJjesRelativeJEREC2up_branch != 0) SumPtFJjesRelativeJEREC2up();
  if (SumPtJjesRelativeJEREC2up_branch != 0) SumPtJjesRelativeJEREC2up();
  if (JsjesRelativeJEREC2dn_branch != 0) JsjesRelativeJEREC2dn();
  if (NFJjesRelativeJEREC2dn_branch != 0) NFJjesRelativeJEREC2dn();
  if (FJ0jesRelativeJEREC2dn_branch != 0) FJ0jesRelativeJEREC2dn();
  if (FJ1jesRelativeJEREC2dn_branch != 0) FJ1jesRelativeJEREC2dn();
  if (FJ2jesRelativeJEREC2dn_branch != 0) FJ2jesRelativeJEREC2dn();
  if (FJ3jesRelativeJEREC2dn_branch != 0) FJ3jesRelativeJEREC2dn();
  if (FJ4jesRelativeJEREC2dn_branch != 0) FJ4jesRelativeJEREC2dn();
  if (VMD0jesRelativeJEREC2dn_branch != 0) VMD0jesRelativeJEREC2dn();
  if (VMD1jesRelativeJEREC2dn_branch != 0) VMD1jesRelativeJEREC2dn();
  if (VMD2jesRelativeJEREC2dn_branch != 0) VMD2jesRelativeJEREC2dn();
  if (VMD3jesRelativeJEREC2dn_branch != 0) VMD3jesRelativeJEREC2dn();
  if (VMD4jesRelativeJEREC2dn_branch != 0) VMD4jesRelativeJEREC2dn();
  if (WMD0jesRelativeJEREC2dn_branch != 0) WMD0jesRelativeJEREC2dn();
  if (WMD1jesRelativeJEREC2dn_branch != 0) WMD1jesRelativeJEREC2dn();
  if (WMD2jesRelativeJEREC2dn_branch != 0) WMD2jesRelativeJEREC2dn();
  if (WMD3jesRelativeJEREC2dn_branch != 0) WMD3jesRelativeJEREC2dn();
  if (WMD4jesRelativeJEREC2dn_branch != 0) WMD4jesRelativeJEREC2dn();
  if (NQGen0jesRelativeJEREC2dn_branch != 0) NQGen0jesRelativeJEREC2dn();
  if (NQGen1jesRelativeJEREC2dn_branch != 0) NQGen1jesRelativeJEREC2dn();
  if (NQGen2jesRelativeJEREC2dn_branch != 0) NQGen2jesRelativeJEREC2dn();
  if (NQGen3jesRelativeJEREC2dn_branch != 0) NQGen3jesRelativeJEREC2dn();
  if (NQGen4jesRelativeJEREC2dn_branch != 0) NQGen4jesRelativeJEREC2dn();
  if (NBGen0jesRelativeJEREC2dn_branch != 0) NBGen0jesRelativeJEREC2dn();
  if (NBGen1jesRelativeJEREC2dn_branch != 0) NBGen1jesRelativeJEREC2dn();
  if (NBGen2jesRelativeJEREC2dn_branch != 0) NBGen2jesRelativeJEREC2dn();
  if (NBGen3jesRelativeJEREC2dn_branch != 0) NBGen3jesRelativeJEREC2dn();
  if (NBGen4jesRelativeJEREC2dn_branch != 0) NBGen4jesRelativeJEREC2dn();
  if (NLGen0jesRelativeJEREC2dn_branch != 0) NLGen0jesRelativeJEREC2dn();
  if (NLGen1jesRelativeJEREC2dn_branch != 0) NLGen1jesRelativeJEREC2dn();
  if (NLGen2jesRelativeJEREC2dn_branch != 0) NLGen2jesRelativeJEREC2dn();
  if (NLGen3jesRelativeJEREC2dn_branch != 0) NLGen3jesRelativeJEREC2dn();
  if (NLGen4jesRelativeJEREC2dn_branch != 0) NLGen4jesRelativeJEREC2dn();
  if (NVQGen0jesRelativeJEREC2dn_branch != 0) NVQGen0jesRelativeJEREC2dn();
  if (NVQGen1jesRelativeJEREC2dn_branch != 0) NVQGen1jesRelativeJEREC2dn();
  if (NVQGen2jesRelativeJEREC2dn_branch != 0) NVQGen2jesRelativeJEREC2dn();
  if (NVQGen3jesRelativeJEREC2dn_branch != 0) NVQGen3jesRelativeJEREC2dn();
  if (NVQGen4jesRelativeJEREC2dn_branch != 0) NVQGen4jesRelativeJEREC2dn();
  if (NiFJjesRelativeJEREC2dn_branch != 0) NiFJjesRelativeJEREC2dn();
  if (iFJ0jesRelativeJEREC2dn_branch != 0) iFJ0jesRelativeJEREC2dn();
  if (iFJ1jesRelativeJEREC2dn_branch != 0) iFJ1jesRelativeJEREC2dn();
  if (iFJ2jesRelativeJEREC2dn_branch != 0) iFJ2jesRelativeJEREC2dn();
  if (iFJ3jesRelativeJEREC2dn_branch != 0) iFJ3jesRelativeJEREC2dn();
  if (iFJ4jesRelativeJEREC2dn_branch != 0) iFJ4jesRelativeJEREC2dn();
  if (iVMD0jesRelativeJEREC2dn_branch != 0) iVMD0jesRelativeJEREC2dn();
  if (iVMD1jesRelativeJEREC2dn_branch != 0) iVMD1jesRelativeJEREC2dn();
  if (iVMD2jesRelativeJEREC2dn_branch != 0) iVMD2jesRelativeJEREC2dn();
  if (iVMD3jesRelativeJEREC2dn_branch != 0) iVMD3jesRelativeJEREC2dn();
  if (iVMD4jesRelativeJEREC2dn_branch != 0) iVMD4jesRelativeJEREC2dn();
  if (iWMD0jesRelativeJEREC2dn_branch != 0) iWMD0jesRelativeJEREC2dn();
  if (iWMD1jesRelativeJEREC2dn_branch != 0) iWMD1jesRelativeJEREC2dn();
  if (iWMD2jesRelativeJEREC2dn_branch != 0) iWMD2jesRelativeJEREC2dn();
  if (iWMD3jesRelativeJEREC2dn_branch != 0) iWMD3jesRelativeJEREC2dn();
  if (iWMD4jesRelativeJEREC2dn_branch != 0) iWMD4jesRelativeJEREC2dn();
  if (METjesRelativeJEREC2dn_branch != 0) METjesRelativeJEREC2dn();
  if (NujesRelativeJEREC2dn_branch != 0) NujesRelativeJEREC2dn();
  if (NJjesRelativeJEREC2dn_branch != 0) NJjesRelativeJEREC2dn();
  if (NbLoosejesRelativeJEREC2dn_branch != 0) NbLoosejesRelativeJEREC2dn();
  if (NbMediumjesRelativeJEREC2dn_branch != 0) NbMediumjesRelativeJEREC2dn();
  if (NbTightjesRelativeJEREC2dn_branch != 0) NbTightjesRelativeJEREC2dn();
  if (NoORNbLoosejesRelativeJEREC2dn_branch != 0) NoORNbLoosejesRelativeJEREC2dn();
  if (NoORNbMediumjesRelativeJEREC2dn_branch != 0) NoORNbMediumjesRelativeJEREC2dn();
  if (NoORNbTightjesRelativeJEREC2dn_branch != 0) NoORNbTightjesRelativeJEREC2dn();
  if (J0jesRelativeJEREC2dn_branch != 0) J0jesRelativeJEREC2dn();
  if (J1jesRelativeJEREC2dn_branch != 0) J1jesRelativeJEREC2dn();
  if (J2jesRelativeJEREC2dn_branch != 0) J2jesRelativeJEREC2dn();
  if (J3jesRelativeJEREC2dn_branch != 0) J3jesRelativeJEREC2dn();
  if (J4jesRelativeJEREC2dn_branch != 0) J4jesRelativeJEREC2dn();
  if (J5jesRelativeJEREC2dn_branch != 0) J5jesRelativeJEREC2dn();
  if (J6jesRelativeJEREC2dn_branch != 0) J6jesRelativeJEREC2dn();
  if (J7jesRelativeJEREC2dn_branch != 0) J7jesRelativeJEREC2dn();
  if (NQJGenjesRelativeJEREC2dn_branch != 0) NQJGenjesRelativeJEREC2dn();
  if (NBJGenjesRelativeJEREC2dn_branch != 0) NBJGenjesRelativeJEREC2dn();
  if (NLJGenjesRelativeJEREC2dn_branch != 0) NLJGenjesRelativeJEREC2dn();
  if (MVVXjesRelativeJEREC2dn_branch != 0) MVVXjesRelativeJEREC2dn();
  if (PtVVXjesRelativeJEREC2dn_branch != 0) PtVVXjesRelativeJEREC2dn();
  if (HTjesRelativeJEREC2dn_branch != 0) HTjesRelativeJEREC2dn();
  if (HTJjesRelativeJEREC2dn_branch != 0) HTJjesRelativeJEREC2dn();
  if (HTFJjesRelativeJEREC2dn_branch != 0) HTFJjesRelativeJEREC2dn();
  if (SumPtFJjesRelativeJEREC2dn_branch != 0) SumPtFJjesRelativeJEREC2dn();
  if (SumPtJjesRelativeJEREC2dn_branch != 0) SumPtJjesRelativeJEREC2dn();
  if (JsjesRelativeJERHFup_branch != 0) JsjesRelativeJERHFup();
  if (NFJjesRelativeJERHFup_branch != 0) NFJjesRelativeJERHFup();
  if (FJ0jesRelativeJERHFup_branch != 0) FJ0jesRelativeJERHFup();
  if (FJ1jesRelativeJERHFup_branch != 0) FJ1jesRelativeJERHFup();
  if (FJ2jesRelativeJERHFup_branch != 0) FJ2jesRelativeJERHFup();
  if (FJ3jesRelativeJERHFup_branch != 0) FJ3jesRelativeJERHFup();
  if (FJ4jesRelativeJERHFup_branch != 0) FJ4jesRelativeJERHFup();
  if (VMD0jesRelativeJERHFup_branch != 0) VMD0jesRelativeJERHFup();
  if (VMD1jesRelativeJERHFup_branch != 0) VMD1jesRelativeJERHFup();
  if (VMD2jesRelativeJERHFup_branch != 0) VMD2jesRelativeJERHFup();
  if (VMD3jesRelativeJERHFup_branch != 0) VMD3jesRelativeJERHFup();
  if (VMD4jesRelativeJERHFup_branch != 0) VMD4jesRelativeJERHFup();
  if (WMD0jesRelativeJERHFup_branch != 0) WMD0jesRelativeJERHFup();
  if (WMD1jesRelativeJERHFup_branch != 0) WMD1jesRelativeJERHFup();
  if (WMD2jesRelativeJERHFup_branch != 0) WMD2jesRelativeJERHFup();
  if (WMD3jesRelativeJERHFup_branch != 0) WMD3jesRelativeJERHFup();
  if (WMD4jesRelativeJERHFup_branch != 0) WMD4jesRelativeJERHFup();
  if (NQGen0jesRelativeJERHFup_branch != 0) NQGen0jesRelativeJERHFup();
  if (NQGen1jesRelativeJERHFup_branch != 0) NQGen1jesRelativeJERHFup();
  if (NQGen2jesRelativeJERHFup_branch != 0) NQGen2jesRelativeJERHFup();
  if (NQGen3jesRelativeJERHFup_branch != 0) NQGen3jesRelativeJERHFup();
  if (NQGen4jesRelativeJERHFup_branch != 0) NQGen4jesRelativeJERHFup();
  if (NBGen0jesRelativeJERHFup_branch != 0) NBGen0jesRelativeJERHFup();
  if (NBGen1jesRelativeJERHFup_branch != 0) NBGen1jesRelativeJERHFup();
  if (NBGen2jesRelativeJERHFup_branch != 0) NBGen2jesRelativeJERHFup();
  if (NBGen3jesRelativeJERHFup_branch != 0) NBGen3jesRelativeJERHFup();
  if (NBGen4jesRelativeJERHFup_branch != 0) NBGen4jesRelativeJERHFup();
  if (NLGen0jesRelativeJERHFup_branch != 0) NLGen0jesRelativeJERHFup();
  if (NLGen1jesRelativeJERHFup_branch != 0) NLGen1jesRelativeJERHFup();
  if (NLGen2jesRelativeJERHFup_branch != 0) NLGen2jesRelativeJERHFup();
  if (NLGen3jesRelativeJERHFup_branch != 0) NLGen3jesRelativeJERHFup();
  if (NLGen4jesRelativeJERHFup_branch != 0) NLGen4jesRelativeJERHFup();
  if (NVQGen0jesRelativeJERHFup_branch != 0) NVQGen0jesRelativeJERHFup();
  if (NVQGen1jesRelativeJERHFup_branch != 0) NVQGen1jesRelativeJERHFup();
  if (NVQGen2jesRelativeJERHFup_branch != 0) NVQGen2jesRelativeJERHFup();
  if (NVQGen3jesRelativeJERHFup_branch != 0) NVQGen3jesRelativeJERHFup();
  if (NVQGen4jesRelativeJERHFup_branch != 0) NVQGen4jesRelativeJERHFup();
  if (NiFJjesRelativeJERHFup_branch != 0) NiFJjesRelativeJERHFup();
  if (iFJ0jesRelativeJERHFup_branch != 0) iFJ0jesRelativeJERHFup();
  if (iFJ1jesRelativeJERHFup_branch != 0) iFJ1jesRelativeJERHFup();
  if (iFJ2jesRelativeJERHFup_branch != 0) iFJ2jesRelativeJERHFup();
  if (iFJ3jesRelativeJERHFup_branch != 0) iFJ3jesRelativeJERHFup();
  if (iFJ4jesRelativeJERHFup_branch != 0) iFJ4jesRelativeJERHFup();
  if (iVMD0jesRelativeJERHFup_branch != 0) iVMD0jesRelativeJERHFup();
  if (iVMD1jesRelativeJERHFup_branch != 0) iVMD1jesRelativeJERHFup();
  if (iVMD2jesRelativeJERHFup_branch != 0) iVMD2jesRelativeJERHFup();
  if (iVMD3jesRelativeJERHFup_branch != 0) iVMD3jesRelativeJERHFup();
  if (iVMD4jesRelativeJERHFup_branch != 0) iVMD4jesRelativeJERHFup();
  if (iWMD0jesRelativeJERHFup_branch != 0) iWMD0jesRelativeJERHFup();
  if (iWMD1jesRelativeJERHFup_branch != 0) iWMD1jesRelativeJERHFup();
  if (iWMD2jesRelativeJERHFup_branch != 0) iWMD2jesRelativeJERHFup();
  if (iWMD3jesRelativeJERHFup_branch != 0) iWMD3jesRelativeJERHFup();
  if (iWMD4jesRelativeJERHFup_branch != 0) iWMD4jesRelativeJERHFup();
  if (METjesRelativeJERHFup_branch != 0) METjesRelativeJERHFup();
  if (NujesRelativeJERHFup_branch != 0) NujesRelativeJERHFup();
  if (NJjesRelativeJERHFup_branch != 0) NJjesRelativeJERHFup();
  if (NbLoosejesRelativeJERHFup_branch != 0) NbLoosejesRelativeJERHFup();
  if (NbMediumjesRelativeJERHFup_branch != 0) NbMediumjesRelativeJERHFup();
  if (NbTightjesRelativeJERHFup_branch != 0) NbTightjesRelativeJERHFup();
  if (NoORNbLoosejesRelativeJERHFup_branch != 0) NoORNbLoosejesRelativeJERHFup();
  if (NoORNbMediumjesRelativeJERHFup_branch != 0) NoORNbMediumjesRelativeJERHFup();
  if (NoORNbTightjesRelativeJERHFup_branch != 0) NoORNbTightjesRelativeJERHFup();
  if (J0jesRelativeJERHFup_branch != 0) J0jesRelativeJERHFup();
  if (J1jesRelativeJERHFup_branch != 0) J1jesRelativeJERHFup();
  if (J2jesRelativeJERHFup_branch != 0) J2jesRelativeJERHFup();
  if (J3jesRelativeJERHFup_branch != 0) J3jesRelativeJERHFup();
  if (J4jesRelativeJERHFup_branch != 0) J4jesRelativeJERHFup();
  if (J5jesRelativeJERHFup_branch != 0) J5jesRelativeJERHFup();
  if (J6jesRelativeJERHFup_branch != 0) J6jesRelativeJERHFup();
  if (J7jesRelativeJERHFup_branch != 0) J7jesRelativeJERHFup();
  if (NQJGenjesRelativeJERHFup_branch != 0) NQJGenjesRelativeJERHFup();
  if (NBJGenjesRelativeJERHFup_branch != 0) NBJGenjesRelativeJERHFup();
  if (NLJGenjesRelativeJERHFup_branch != 0) NLJGenjesRelativeJERHFup();
  if (MVVXjesRelativeJERHFup_branch != 0) MVVXjesRelativeJERHFup();
  if (PtVVXjesRelativeJERHFup_branch != 0) PtVVXjesRelativeJERHFup();
  if (HTjesRelativeJERHFup_branch != 0) HTjesRelativeJERHFup();
  if (HTJjesRelativeJERHFup_branch != 0) HTJjesRelativeJERHFup();
  if (HTFJjesRelativeJERHFup_branch != 0) HTFJjesRelativeJERHFup();
  if (SumPtFJjesRelativeJERHFup_branch != 0) SumPtFJjesRelativeJERHFup();
  if (SumPtJjesRelativeJERHFup_branch != 0) SumPtJjesRelativeJERHFup();
  if (JsjesRelativeJERHFdn_branch != 0) JsjesRelativeJERHFdn();
  if (NFJjesRelativeJERHFdn_branch != 0) NFJjesRelativeJERHFdn();
  if (FJ0jesRelativeJERHFdn_branch != 0) FJ0jesRelativeJERHFdn();
  if (FJ1jesRelativeJERHFdn_branch != 0) FJ1jesRelativeJERHFdn();
  if (FJ2jesRelativeJERHFdn_branch != 0) FJ2jesRelativeJERHFdn();
  if (FJ3jesRelativeJERHFdn_branch != 0) FJ3jesRelativeJERHFdn();
  if (FJ4jesRelativeJERHFdn_branch != 0) FJ4jesRelativeJERHFdn();
  if (VMD0jesRelativeJERHFdn_branch != 0) VMD0jesRelativeJERHFdn();
  if (VMD1jesRelativeJERHFdn_branch != 0) VMD1jesRelativeJERHFdn();
  if (VMD2jesRelativeJERHFdn_branch != 0) VMD2jesRelativeJERHFdn();
  if (VMD3jesRelativeJERHFdn_branch != 0) VMD3jesRelativeJERHFdn();
  if (VMD4jesRelativeJERHFdn_branch != 0) VMD4jesRelativeJERHFdn();
  if (WMD0jesRelativeJERHFdn_branch != 0) WMD0jesRelativeJERHFdn();
  if (WMD1jesRelativeJERHFdn_branch != 0) WMD1jesRelativeJERHFdn();
  if (WMD2jesRelativeJERHFdn_branch != 0) WMD2jesRelativeJERHFdn();
  if (WMD3jesRelativeJERHFdn_branch != 0) WMD3jesRelativeJERHFdn();
  if (WMD4jesRelativeJERHFdn_branch != 0) WMD4jesRelativeJERHFdn();
  if (NQGen0jesRelativeJERHFdn_branch != 0) NQGen0jesRelativeJERHFdn();
  if (NQGen1jesRelativeJERHFdn_branch != 0) NQGen1jesRelativeJERHFdn();
  if (NQGen2jesRelativeJERHFdn_branch != 0) NQGen2jesRelativeJERHFdn();
  if (NQGen3jesRelativeJERHFdn_branch != 0) NQGen3jesRelativeJERHFdn();
  if (NQGen4jesRelativeJERHFdn_branch != 0) NQGen4jesRelativeJERHFdn();
  if (NBGen0jesRelativeJERHFdn_branch != 0) NBGen0jesRelativeJERHFdn();
  if (NBGen1jesRelativeJERHFdn_branch != 0) NBGen1jesRelativeJERHFdn();
  if (NBGen2jesRelativeJERHFdn_branch != 0) NBGen2jesRelativeJERHFdn();
  if (NBGen3jesRelativeJERHFdn_branch != 0) NBGen3jesRelativeJERHFdn();
  if (NBGen4jesRelativeJERHFdn_branch != 0) NBGen4jesRelativeJERHFdn();
  if (NLGen0jesRelativeJERHFdn_branch != 0) NLGen0jesRelativeJERHFdn();
  if (NLGen1jesRelativeJERHFdn_branch != 0) NLGen1jesRelativeJERHFdn();
  if (NLGen2jesRelativeJERHFdn_branch != 0) NLGen2jesRelativeJERHFdn();
  if (NLGen3jesRelativeJERHFdn_branch != 0) NLGen3jesRelativeJERHFdn();
  if (NLGen4jesRelativeJERHFdn_branch != 0) NLGen4jesRelativeJERHFdn();
  if (NVQGen0jesRelativeJERHFdn_branch != 0) NVQGen0jesRelativeJERHFdn();
  if (NVQGen1jesRelativeJERHFdn_branch != 0) NVQGen1jesRelativeJERHFdn();
  if (NVQGen2jesRelativeJERHFdn_branch != 0) NVQGen2jesRelativeJERHFdn();
  if (NVQGen3jesRelativeJERHFdn_branch != 0) NVQGen3jesRelativeJERHFdn();
  if (NVQGen4jesRelativeJERHFdn_branch != 0) NVQGen4jesRelativeJERHFdn();
  if (NiFJjesRelativeJERHFdn_branch != 0) NiFJjesRelativeJERHFdn();
  if (iFJ0jesRelativeJERHFdn_branch != 0) iFJ0jesRelativeJERHFdn();
  if (iFJ1jesRelativeJERHFdn_branch != 0) iFJ1jesRelativeJERHFdn();
  if (iFJ2jesRelativeJERHFdn_branch != 0) iFJ2jesRelativeJERHFdn();
  if (iFJ3jesRelativeJERHFdn_branch != 0) iFJ3jesRelativeJERHFdn();
  if (iFJ4jesRelativeJERHFdn_branch != 0) iFJ4jesRelativeJERHFdn();
  if (iVMD0jesRelativeJERHFdn_branch != 0) iVMD0jesRelativeJERHFdn();
  if (iVMD1jesRelativeJERHFdn_branch != 0) iVMD1jesRelativeJERHFdn();
  if (iVMD2jesRelativeJERHFdn_branch != 0) iVMD2jesRelativeJERHFdn();
  if (iVMD3jesRelativeJERHFdn_branch != 0) iVMD3jesRelativeJERHFdn();
  if (iVMD4jesRelativeJERHFdn_branch != 0) iVMD4jesRelativeJERHFdn();
  if (iWMD0jesRelativeJERHFdn_branch != 0) iWMD0jesRelativeJERHFdn();
  if (iWMD1jesRelativeJERHFdn_branch != 0) iWMD1jesRelativeJERHFdn();
  if (iWMD2jesRelativeJERHFdn_branch != 0) iWMD2jesRelativeJERHFdn();
  if (iWMD3jesRelativeJERHFdn_branch != 0) iWMD3jesRelativeJERHFdn();
  if (iWMD4jesRelativeJERHFdn_branch != 0) iWMD4jesRelativeJERHFdn();
  if (METjesRelativeJERHFdn_branch != 0) METjesRelativeJERHFdn();
  if (NujesRelativeJERHFdn_branch != 0) NujesRelativeJERHFdn();
  if (NJjesRelativeJERHFdn_branch != 0) NJjesRelativeJERHFdn();
  if (NbLoosejesRelativeJERHFdn_branch != 0) NbLoosejesRelativeJERHFdn();
  if (NbMediumjesRelativeJERHFdn_branch != 0) NbMediumjesRelativeJERHFdn();
  if (NbTightjesRelativeJERHFdn_branch != 0) NbTightjesRelativeJERHFdn();
  if (NoORNbLoosejesRelativeJERHFdn_branch != 0) NoORNbLoosejesRelativeJERHFdn();
  if (NoORNbMediumjesRelativeJERHFdn_branch != 0) NoORNbMediumjesRelativeJERHFdn();
  if (NoORNbTightjesRelativeJERHFdn_branch != 0) NoORNbTightjesRelativeJERHFdn();
  if (J0jesRelativeJERHFdn_branch != 0) J0jesRelativeJERHFdn();
  if (J1jesRelativeJERHFdn_branch != 0) J1jesRelativeJERHFdn();
  if (J2jesRelativeJERHFdn_branch != 0) J2jesRelativeJERHFdn();
  if (J3jesRelativeJERHFdn_branch != 0) J3jesRelativeJERHFdn();
  if (J4jesRelativeJERHFdn_branch != 0) J4jesRelativeJERHFdn();
  if (J5jesRelativeJERHFdn_branch != 0) J5jesRelativeJERHFdn();
  if (J6jesRelativeJERHFdn_branch != 0) J6jesRelativeJERHFdn();
  if (J7jesRelativeJERHFdn_branch != 0) J7jesRelativeJERHFdn();
  if (NQJGenjesRelativeJERHFdn_branch != 0) NQJGenjesRelativeJERHFdn();
  if (NBJGenjesRelativeJERHFdn_branch != 0) NBJGenjesRelativeJERHFdn();
  if (NLJGenjesRelativeJERHFdn_branch != 0) NLJGenjesRelativeJERHFdn();
  if (MVVXjesRelativeJERHFdn_branch != 0) MVVXjesRelativeJERHFdn();
  if (PtVVXjesRelativeJERHFdn_branch != 0) PtVVXjesRelativeJERHFdn();
  if (HTjesRelativeJERHFdn_branch != 0) HTjesRelativeJERHFdn();
  if (HTJjesRelativeJERHFdn_branch != 0) HTJjesRelativeJERHFdn();
  if (HTFJjesRelativeJERHFdn_branch != 0) HTFJjesRelativeJERHFdn();
  if (SumPtFJjesRelativeJERHFdn_branch != 0) SumPtFJjesRelativeJERHFdn();
  if (SumPtJjesRelativeJERHFdn_branch != 0) SumPtJjesRelativeJERHFdn();
  if (JsjesRelativePtBBup_branch != 0) JsjesRelativePtBBup();
  if (NFJjesRelativePtBBup_branch != 0) NFJjesRelativePtBBup();
  if (FJ0jesRelativePtBBup_branch != 0) FJ0jesRelativePtBBup();
  if (FJ1jesRelativePtBBup_branch != 0) FJ1jesRelativePtBBup();
  if (FJ2jesRelativePtBBup_branch != 0) FJ2jesRelativePtBBup();
  if (FJ3jesRelativePtBBup_branch != 0) FJ3jesRelativePtBBup();
  if (FJ4jesRelativePtBBup_branch != 0) FJ4jesRelativePtBBup();
  if (VMD0jesRelativePtBBup_branch != 0) VMD0jesRelativePtBBup();
  if (VMD1jesRelativePtBBup_branch != 0) VMD1jesRelativePtBBup();
  if (VMD2jesRelativePtBBup_branch != 0) VMD2jesRelativePtBBup();
  if (VMD3jesRelativePtBBup_branch != 0) VMD3jesRelativePtBBup();
  if (VMD4jesRelativePtBBup_branch != 0) VMD4jesRelativePtBBup();
  if (WMD0jesRelativePtBBup_branch != 0) WMD0jesRelativePtBBup();
  if (WMD1jesRelativePtBBup_branch != 0) WMD1jesRelativePtBBup();
  if (WMD2jesRelativePtBBup_branch != 0) WMD2jesRelativePtBBup();
  if (WMD3jesRelativePtBBup_branch != 0) WMD3jesRelativePtBBup();
  if (WMD4jesRelativePtBBup_branch != 0) WMD4jesRelativePtBBup();
  if (NQGen0jesRelativePtBBup_branch != 0) NQGen0jesRelativePtBBup();
  if (NQGen1jesRelativePtBBup_branch != 0) NQGen1jesRelativePtBBup();
  if (NQGen2jesRelativePtBBup_branch != 0) NQGen2jesRelativePtBBup();
  if (NQGen3jesRelativePtBBup_branch != 0) NQGen3jesRelativePtBBup();
  if (NQGen4jesRelativePtBBup_branch != 0) NQGen4jesRelativePtBBup();
  if (NBGen0jesRelativePtBBup_branch != 0) NBGen0jesRelativePtBBup();
  if (NBGen1jesRelativePtBBup_branch != 0) NBGen1jesRelativePtBBup();
  if (NBGen2jesRelativePtBBup_branch != 0) NBGen2jesRelativePtBBup();
  if (NBGen3jesRelativePtBBup_branch != 0) NBGen3jesRelativePtBBup();
  if (NBGen4jesRelativePtBBup_branch != 0) NBGen4jesRelativePtBBup();
  if (NLGen0jesRelativePtBBup_branch != 0) NLGen0jesRelativePtBBup();
  if (NLGen1jesRelativePtBBup_branch != 0) NLGen1jesRelativePtBBup();
  if (NLGen2jesRelativePtBBup_branch != 0) NLGen2jesRelativePtBBup();
  if (NLGen3jesRelativePtBBup_branch != 0) NLGen3jesRelativePtBBup();
  if (NLGen4jesRelativePtBBup_branch != 0) NLGen4jesRelativePtBBup();
  if (NVQGen0jesRelativePtBBup_branch != 0) NVQGen0jesRelativePtBBup();
  if (NVQGen1jesRelativePtBBup_branch != 0) NVQGen1jesRelativePtBBup();
  if (NVQGen2jesRelativePtBBup_branch != 0) NVQGen2jesRelativePtBBup();
  if (NVQGen3jesRelativePtBBup_branch != 0) NVQGen3jesRelativePtBBup();
  if (NVQGen4jesRelativePtBBup_branch != 0) NVQGen4jesRelativePtBBup();
  if (NiFJjesRelativePtBBup_branch != 0) NiFJjesRelativePtBBup();
  if (iFJ0jesRelativePtBBup_branch != 0) iFJ0jesRelativePtBBup();
  if (iFJ1jesRelativePtBBup_branch != 0) iFJ1jesRelativePtBBup();
  if (iFJ2jesRelativePtBBup_branch != 0) iFJ2jesRelativePtBBup();
  if (iFJ3jesRelativePtBBup_branch != 0) iFJ3jesRelativePtBBup();
  if (iFJ4jesRelativePtBBup_branch != 0) iFJ4jesRelativePtBBup();
  if (iVMD0jesRelativePtBBup_branch != 0) iVMD0jesRelativePtBBup();
  if (iVMD1jesRelativePtBBup_branch != 0) iVMD1jesRelativePtBBup();
  if (iVMD2jesRelativePtBBup_branch != 0) iVMD2jesRelativePtBBup();
  if (iVMD3jesRelativePtBBup_branch != 0) iVMD3jesRelativePtBBup();
  if (iVMD4jesRelativePtBBup_branch != 0) iVMD4jesRelativePtBBup();
  if (iWMD0jesRelativePtBBup_branch != 0) iWMD0jesRelativePtBBup();
  if (iWMD1jesRelativePtBBup_branch != 0) iWMD1jesRelativePtBBup();
  if (iWMD2jesRelativePtBBup_branch != 0) iWMD2jesRelativePtBBup();
  if (iWMD3jesRelativePtBBup_branch != 0) iWMD3jesRelativePtBBup();
  if (iWMD4jesRelativePtBBup_branch != 0) iWMD4jesRelativePtBBup();
  if (METjesRelativePtBBup_branch != 0) METjesRelativePtBBup();
  if (NujesRelativePtBBup_branch != 0) NujesRelativePtBBup();
  if (NJjesRelativePtBBup_branch != 0) NJjesRelativePtBBup();
  if (NbLoosejesRelativePtBBup_branch != 0) NbLoosejesRelativePtBBup();
  if (NbMediumjesRelativePtBBup_branch != 0) NbMediumjesRelativePtBBup();
  if (NbTightjesRelativePtBBup_branch != 0) NbTightjesRelativePtBBup();
  if (NoORNbLoosejesRelativePtBBup_branch != 0) NoORNbLoosejesRelativePtBBup();
  if (NoORNbMediumjesRelativePtBBup_branch != 0) NoORNbMediumjesRelativePtBBup();
  if (NoORNbTightjesRelativePtBBup_branch != 0) NoORNbTightjesRelativePtBBup();
  if (J0jesRelativePtBBup_branch != 0) J0jesRelativePtBBup();
  if (J1jesRelativePtBBup_branch != 0) J1jesRelativePtBBup();
  if (J2jesRelativePtBBup_branch != 0) J2jesRelativePtBBup();
  if (J3jesRelativePtBBup_branch != 0) J3jesRelativePtBBup();
  if (J4jesRelativePtBBup_branch != 0) J4jesRelativePtBBup();
  if (J5jesRelativePtBBup_branch != 0) J5jesRelativePtBBup();
  if (J6jesRelativePtBBup_branch != 0) J6jesRelativePtBBup();
  if (J7jesRelativePtBBup_branch != 0) J7jesRelativePtBBup();
  if (NQJGenjesRelativePtBBup_branch != 0) NQJGenjesRelativePtBBup();
  if (NBJGenjesRelativePtBBup_branch != 0) NBJGenjesRelativePtBBup();
  if (NLJGenjesRelativePtBBup_branch != 0) NLJGenjesRelativePtBBup();
  if (MVVXjesRelativePtBBup_branch != 0) MVVXjesRelativePtBBup();
  if (PtVVXjesRelativePtBBup_branch != 0) PtVVXjesRelativePtBBup();
  if (HTjesRelativePtBBup_branch != 0) HTjesRelativePtBBup();
  if (HTJjesRelativePtBBup_branch != 0) HTJjesRelativePtBBup();
  if (HTFJjesRelativePtBBup_branch != 0) HTFJjesRelativePtBBup();
  if (SumPtFJjesRelativePtBBup_branch != 0) SumPtFJjesRelativePtBBup();
  if (SumPtJjesRelativePtBBup_branch != 0) SumPtJjesRelativePtBBup();
  if (JsjesRelativePtBBdn_branch != 0) JsjesRelativePtBBdn();
  if (NFJjesRelativePtBBdn_branch != 0) NFJjesRelativePtBBdn();
  if (FJ0jesRelativePtBBdn_branch != 0) FJ0jesRelativePtBBdn();
  if (FJ1jesRelativePtBBdn_branch != 0) FJ1jesRelativePtBBdn();
  if (FJ2jesRelativePtBBdn_branch != 0) FJ2jesRelativePtBBdn();
  if (FJ3jesRelativePtBBdn_branch != 0) FJ3jesRelativePtBBdn();
  if (FJ4jesRelativePtBBdn_branch != 0) FJ4jesRelativePtBBdn();
  if (VMD0jesRelativePtBBdn_branch != 0) VMD0jesRelativePtBBdn();
  if (VMD1jesRelativePtBBdn_branch != 0) VMD1jesRelativePtBBdn();
  if (VMD2jesRelativePtBBdn_branch != 0) VMD2jesRelativePtBBdn();
  if (VMD3jesRelativePtBBdn_branch != 0) VMD3jesRelativePtBBdn();
  if (VMD4jesRelativePtBBdn_branch != 0) VMD4jesRelativePtBBdn();
  if (WMD0jesRelativePtBBdn_branch != 0) WMD0jesRelativePtBBdn();
  if (WMD1jesRelativePtBBdn_branch != 0) WMD1jesRelativePtBBdn();
  if (WMD2jesRelativePtBBdn_branch != 0) WMD2jesRelativePtBBdn();
  if (WMD3jesRelativePtBBdn_branch != 0) WMD3jesRelativePtBBdn();
  if (WMD4jesRelativePtBBdn_branch != 0) WMD4jesRelativePtBBdn();
  if (NQGen0jesRelativePtBBdn_branch != 0) NQGen0jesRelativePtBBdn();
  if (NQGen1jesRelativePtBBdn_branch != 0) NQGen1jesRelativePtBBdn();
  if (NQGen2jesRelativePtBBdn_branch != 0) NQGen2jesRelativePtBBdn();
  if (NQGen3jesRelativePtBBdn_branch != 0) NQGen3jesRelativePtBBdn();
  if (NQGen4jesRelativePtBBdn_branch != 0) NQGen4jesRelativePtBBdn();
  if (NBGen0jesRelativePtBBdn_branch != 0) NBGen0jesRelativePtBBdn();
  if (NBGen1jesRelativePtBBdn_branch != 0) NBGen1jesRelativePtBBdn();
  if (NBGen2jesRelativePtBBdn_branch != 0) NBGen2jesRelativePtBBdn();
  if (NBGen3jesRelativePtBBdn_branch != 0) NBGen3jesRelativePtBBdn();
  if (NBGen4jesRelativePtBBdn_branch != 0) NBGen4jesRelativePtBBdn();
  if (NLGen0jesRelativePtBBdn_branch != 0) NLGen0jesRelativePtBBdn();
  if (NLGen1jesRelativePtBBdn_branch != 0) NLGen1jesRelativePtBBdn();
  if (NLGen2jesRelativePtBBdn_branch != 0) NLGen2jesRelativePtBBdn();
  if (NLGen3jesRelativePtBBdn_branch != 0) NLGen3jesRelativePtBBdn();
  if (NLGen4jesRelativePtBBdn_branch != 0) NLGen4jesRelativePtBBdn();
  if (NVQGen0jesRelativePtBBdn_branch != 0) NVQGen0jesRelativePtBBdn();
  if (NVQGen1jesRelativePtBBdn_branch != 0) NVQGen1jesRelativePtBBdn();
  if (NVQGen2jesRelativePtBBdn_branch != 0) NVQGen2jesRelativePtBBdn();
  if (NVQGen3jesRelativePtBBdn_branch != 0) NVQGen3jesRelativePtBBdn();
  if (NVQGen4jesRelativePtBBdn_branch != 0) NVQGen4jesRelativePtBBdn();
  if (NiFJjesRelativePtBBdn_branch != 0) NiFJjesRelativePtBBdn();
  if (iFJ0jesRelativePtBBdn_branch != 0) iFJ0jesRelativePtBBdn();
  if (iFJ1jesRelativePtBBdn_branch != 0) iFJ1jesRelativePtBBdn();
  if (iFJ2jesRelativePtBBdn_branch != 0) iFJ2jesRelativePtBBdn();
  if (iFJ3jesRelativePtBBdn_branch != 0) iFJ3jesRelativePtBBdn();
  if (iFJ4jesRelativePtBBdn_branch != 0) iFJ4jesRelativePtBBdn();
  if (iVMD0jesRelativePtBBdn_branch != 0) iVMD0jesRelativePtBBdn();
  if (iVMD1jesRelativePtBBdn_branch != 0) iVMD1jesRelativePtBBdn();
  if (iVMD2jesRelativePtBBdn_branch != 0) iVMD2jesRelativePtBBdn();
  if (iVMD3jesRelativePtBBdn_branch != 0) iVMD3jesRelativePtBBdn();
  if (iVMD4jesRelativePtBBdn_branch != 0) iVMD4jesRelativePtBBdn();
  if (iWMD0jesRelativePtBBdn_branch != 0) iWMD0jesRelativePtBBdn();
  if (iWMD1jesRelativePtBBdn_branch != 0) iWMD1jesRelativePtBBdn();
  if (iWMD2jesRelativePtBBdn_branch != 0) iWMD2jesRelativePtBBdn();
  if (iWMD3jesRelativePtBBdn_branch != 0) iWMD3jesRelativePtBBdn();
  if (iWMD4jesRelativePtBBdn_branch != 0) iWMD4jesRelativePtBBdn();
  if (METjesRelativePtBBdn_branch != 0) METjesRelativePtBBdn();
  if (NujesRelativePtBBdn_branch != 0) NujesRelativePtBBdn();
  if (NJjesRelativePtBBdn_branch != 0) NJjesRelativePtBBdn();
  if (NbLoosejesRelativePtBBdn_branch != 0) NbLoosejesRelativePtBBdn();
  if (NbMediumjesRelativePtBBdn_branch != 0) NbMediumjesRelativePtBBdn();
  if (NbTightjesRelativePtBBdn_branch != 0) NbTightjesRelativePtBBdn();
  if (NoORNbLoosejesRelativePtBBdn_branch != 0) NoORNbLoosejesRelativePtBBdn();
  if (NoORNbMediumjesRelativePtBBdn_branch != 0) NoORNbMediumjesRelativePtBBdn();
  if (NoORNbTightjesRelativePtBBdn_branch != 0) NoORNbTightjesRelativePtBBdn();
  if (J0jesRelativePtBBdn_branch != 0) J0jesRelativePtBBdn();
  if (J1jesRelativePtBBdn_branch != 0) J1jesRelativePtBBdn();
  if (J2jesRelativePtBBdn_branch != 0) J2jesRelativePtBBdn();
  if (J3jesRelativePtBBdn_branch != 0) J3jesRelativePtBBdn();
  if (J4jesRelativePtBBdn_branch != 0) J4jesRelativePtBBdn();
  if (J5jesRelativePtBBdn_branch != 0) J5jesRelativePtBBdn();
  if (J6jesRelativePtBBdn_branch != 0) J6jesRelativePtBBdn();
  if (J7jesRelativePtBBdn_branch != 0) J7jesRelativePtBBdn();
  if (NQJGenjesRelativePtBBdn_branch != 0) NQJGenjesRelativePtBBdn();
  if (NBJGenjesRelativePtBBdn_branch != 0) NBJGenjesRelativePtBBdn();
  if (NLJGenjesRelativePtBBdn_branch != 0) NLJGenjesRelativePtBBdn();
  if (MVVXjesRelativePtBBdn_branch != 0) MVVXjesRelativePtBBdn();
  if (PtVVXjesRelativePtBBdn_branch != 0) PtVVXjesRelativePtBBdn();
  if (HTjesRelativePtBBdn_branch != 0) HTjesRelativePtBBdn();
  if (HTJjesRelativePtBBdn_branch != 0) HTJjesRelativePtBBdn();
  if (HTFJjesRelativePtBBdn_branch != 0) HTFJjesRelativePtBBdn();
  if (SumPtFJjesRelativePtBBdn_branch != 0) SumPtFJjesRelativePtBBdn();
  if (SumPtJjesRelativePtBBdn_branch != 0) SumPtJjesRelativePtBBdn();
  if (JsjesRelativePtEC1up_branch != 0) JsjesRelativePtEC1up();
  if (NFJjesRelativePtEC1up_branch != 0) NFJjesRelativePtEC1up();
  if (FJ0jesRelativePtEC1up_branch != 0) FJ0jesRelativePtEC1up();
  if (FJ1jesRelativePtEC1up_branch != 0) FJ1jesRelativePtEC1up();
  if (FJ2jesRelativePtEC1up_branch != 0) FJ2jesRelativePtEC1up();
  if (FJ3jesRelativePtEC1up_branch != 0) FJ3jesRelativePtEC1up();
  if (FJ4jesRelativePtEC1up_branch != 0) FJ4jesRelativePtEC1up();
  if (VMD0jesRelativePtEC1up_branch != 0) VMD0jesRelativePtEC1up();
  if (VMD1jesRelativePtEC1up_branch != 0) VMD1jesRelativePtEC1up();
  if (VMD2jesRelativePtEC1up_branch != 0) VMD2jesRelativePtEC1up();
  if (VMD3jesRelativePtEC1up_branch != 0) VMD3jesRelativePtEC1up();
  if (VMD4jesRelativePtEC1up_branch != 0) VMD4jesRelativePtEC1up();
  if (WMD0jesRelativePtEC1up_branch != 0) WMD0jesRelativePtEC1up();
  if (WMD1jesRelativePtEC1up_branch != 0) WMD1jesRelativePtEC1up();
  if (WMD2jesRelativePtEC1up_branch != 0) WMD2jesRelativePtEC1up();
  if (WMD3jesRelativePtEC1up_branch != 0) WMD3jesRelativePtEC1up();
  if (WMD4jesRelativePtEC1up_branch != 0) WMD4jesRelativePtEC1up();
  if (NQGen0jesRelativePtEC1up_branch != 0) NQGen0jesRelativePtEC1up();
  if (NQGen1jesRelativePtEC1up_branch != 0) NQGen1jesRelativePtEC1up();
  if (NQGen2jesRelativePtEC1up_branch != 0) NQGen2jesRelativePtEC1up();
  if (NQGen3jesRelativePtEC1up_branch != 0) NQGen3jesRelativePtEC1up();
  if (NQGen4jesRelativePtEC1up_branch != 0) NQGen4jesRelativePtEC1up();
  if (NBGen0jesRelativePtEC1up_branch != 0) NBGen0jesRelativePtEC1up();
  if (NBGen1jesRelativePtEC1up_branch != 0) NBGen1jesRelativePtEC1up();
  if (NBGen2jesRelativePtEC1up_branch != 0) NBGen2jesRelativePtEC1up();
  if (NBGen3jesRelativePtEC1up_branch != 0) NBGen3jesRelativePtEC1up();
  if (NBGen4jesRelativePtEC1up_branch != 0) NBGen4jesRelativePtEC1up();
  if (NLGen0jesRelativePtEC1up_branch != 0) NLGen0jesRelativePtEC1up();
  if (NLGen1jesRelativePtEC1up_branch != 0) NLGen1jesRelativePtEC1up();
  if (NLGen2jesRelativePtEC1up_branch != 0) NLGen2jesRelativePtEC1up();
  if (NLGen3jesRelativePtEC1up_branch != 0) NLGen3jesRelativePtEC1up();
  if (NLGen4jesRelativePtEC1up_branch != 0) NLGen4jesRelativePtEC1up();
  if (NVQGen0jesRelativePtEC1up_branch != 0) NVQGen0jesRelativePtEC1up();
  if (NVQGen1jesRelativePtEC1up_branch != 0) NVQGen1jesRelativePtEC1up();
  if (NVQGen2jesRelativePtEC1up_branch != 0) NVQGen2jesRelativePtEC1up();
  if (NVQGen3jesRelativePtEC1up_branch != 0) NVQGen3jesRelativePtEC1up();
  if (NVQGen4jesRelativePtEC1up_branch != 0) NVQGen4jesRelativePtEC1up();
  if (NiFJjesRelativePtEC1up_branch != 0) NiFJjesRelativePtEC1up();
  if (iFJ0jesRelativePtEC1up_branch != 0) iFJ0jesRelativePtEC1up();
  if (iFJ1jesRelativePtEC1up_branch != 0) iFJ1jesRelativePtEC1up();
  if (iFJ2jesRelativePtEC1up_branch != 0) iFJ2jesRelativePtEC1up();
  if (iFJ3jesRelativePtEC1up_branch != 0) iFJ3jesRelativePtEC1up();
  if (iFJ4jesRelativePtEC1up_branch != 0) iFJ4jesRelativePtEC1up();
  if (iVMD0jesRelativePtEC1up_branch != 0) iVMD0jesRelativePtEC1up();
  if (iVMD1jesRelativePtEC1up_branch != 0) iVMD1jesRelativePtEC1up();
  if (iVMD2jesRelativePtEC1up_branch != 0) iVMD2jesRelativePtEC1up();
  if (iVMD3jesRelativePtEC1up_branch != 0) iVMD3jesRelativePtEC1up();
  if (iVMD4jesRelativePtEC1up_branch != 0) iVMD4jesRelativePtEC1up();
  if (iWMD0jesRelativePtEC1up_branch != 0) iWMD0jesRelativePtEC1up();
  if (iWMD1jesRelativePtEC1up_branch != 0) iWMD1jesRelativePtEC1up();
  if (iWMD2jesRelativePtEC1up_branch != 0) iWMD2jesRelativePtEC1up();
  if (iWMD3jesRelativePtEC1up_branch != 0) iWMD3jesRelativePtEC1up();
  if (iWMD4jesRelativePtEC1up_branch != 0) iWMD4jesRelativePtEC1up();
  if (METjesRelativePtEC1up_branch != 0) METjesRelativePtEC1up();
  if (NujesRelativePtEC1up_branch != 0) NujesRelativePtEC1up();
  if (NJjesRelativePtEC1up_branch != 0) NJjesRelativePtEC1up();
  if (NbLoosejesRelativePtEC1up_branch != 0) NbLoosejesRelativePtEC1up();
  if (NbMediumjesRelativePtEC1up_branch != 0) NbMediumjesRelativePtEC1up();
  if (NbTightjesRelativePtEC1up_branch != 0) NbTightjesRelativePtEC1up();
  if (NoORNbLoosejesRelativePtEC1up_branch != 0) NoORNbLoosejesRelativePtEC1up();
  if (NoORNbMediumjesRelativePtEC1up_branch != 0) NoORNbMediumjesRelativePtEC1up();
  if (NoORNbTightjesRelativePtEC1up_branch != 0) NoORNbTightjesRelativePtEC1up();
  if (J0jesRelativePtEC1up_branch != 0) J0jesRelativePtEC1up();
  if (J1jesRelativePtEC1up_branch != 0) J1jesRelativePtEC1up();
  if (J2jesRelativePtEC1up_branch != 0) J2jesRelativePtEC1up();
  if (J3jesRelativePtEC1up_branch != 0) J3jesRelativePtEC1up();
  if (J4jesRelativePtEC1up_branch != 0) J4jesRelativePtEC1up();
  if (J5jesRelativePtEC1up_branch != 0) J5jesRelativePtEC1up();
  if (J6jesRelativePtEC1up_branch != 0) J6jesRelativePtEC1up();
  if (J7jesRelativePtEC1up_branch != 0) J7jesRelativePtEC1up();
  if (NQJGenjesRelativePtEC1up_branch != 0) NQJGenjesRelativePtEC1up();
  if (NBJGenjesRelativePtEC1up_branch != 0) NBJGenjesRelativePtEC1up();
  if (NLJGenjesRelativePtEC1up_branch != 0) NLJGenjesRelativePtEC1up();
  if (MVVXjesRelativePtEC1up_branch != 0) MVVXjesRelativePtEC1up();
  if (PtVVXjesRelativePtEC1up_branch != 0) PtVVXjesRelativePtEC1up();
  if (HTjesRelativePtEC1up_branch != 0) HTjesRelativePtEC1up();
  if (HTJjesRelativePtEC1up_branch != 0) HTJjesRelativePtEC1up();
  if (HTFJjesRelativePtEC1up_branch != 0) HTFJjesRelativePtEC1up();
  if (SumPtFJjesRelativePtEC1up_branch != 0) SumPtFJjesRelativePtEC1up();
  if (SumPtJjesRelativePtEC1up_branch != 0) SumPtJjesRelativePtEC1up();
  if (JsjesRelativePtEC1dn_branch != 0) JsjesRelativePtEC1dn();
  if (NFJjesRelativePtEC1dn_branch != 0) NFJjesRelativePtEC1dn();
  if (FJ0jesRelativePtEC1dn_branch != 0) FJ0jesRelativePtEC1dn();
  if (FJ1jesRelativePtEC1dn_branch != 0) FJ1jesRelativePtEC1dn();
  if (FJ2jesRelativePtEC1dn_branch != 0) FJ2jesRelativePtEC1dn();
  if (FJ3jesRelativePtEC1dn_branch != 0) FJ3jesRelativePtEC1dn();
  if (FJ4jesRelativePtEC1dn_branch != 0) FJ4jesRelativePtEC1dn();
  if (VMD0jesRelativePtEC1dn_branch != 0) VMD0jesRelativePtEC1dn();
  if (VMD1jesRelativePtEC1dn_branch != 0) VMD1jesRelativePtEC1dn();
  if (VMD2jesRelativePtEC1dn_branch != 0) VMD2jesRelativePtEC1dn();
  if (VMD3jesRelativePtEC1dn_branch != 0) VMD3jesRelativePtEC1dn();
  if (VMD4jesRelativePtEC1dn_branch != 0) VMD4jesRelativePtEC1dn();
  if (WMD0jesRelativePtEC1dn_branch != 0) WMD0jesRelativePtEC1dn();
  if (WMD1jesRelativePtEC1dn_branch != 0) WMD1jesRelativePtEC1dn();
  if (WMD2jesRelativePtEC1dn_branch != 0) WMD2jesRelativePtEC1dn();
  if (WMD3jesRelativePtEC1dn_branch != 0) WMD3jesRelativePtEC1dn();
  if (WMD4jesRelativePtEC1dn_branch != 0) WMD4jesRelativePtEC1dn();
  if (NQGen0jesRelativePtEC1dn_branch != 0) NQGen0jesRelativePtEC1dn();
  if (NQGen1jesRelativePtEC1dn_branch != 0) NQGen1jesRelativePtEC1dn();
  if (NQGen2jesRelativePtEC1dn_branch != 0) NQGen2jesRelativePtEC1dn();
  if (NQGen3jesRelativePtEC1dn_branch != 0) NQGen3jesRelativePtEC1dn();
  if (NQGen4jesRelativePtEC1dn_branch != 0) NQGen4jesRelativePtEC1dn();
  if (NBGen0jesRelativePtEC1dn_branch != 0) NBGen0jesRelativePtEC1dn();
  if (NBGen1jesRelativePtEC1dn_branch != 0) NBGen1jesRelativePtEC1dn();
  if (NBGen2jesRelativePtEC1dn_branch != 0) NBGen2jesRelativePtEC1dn();
  if (NBGen3jesRelativePtEC1dn_branch != 0) NBGen3jesRelativePtEC1dn();
  if (NBGen4jesRelativePtEC1dn_branch != 0) NBGen4jesRelativePtEC1dn();
  if (NLGen0jesRelativePtEC1dn_branch != 0) NLGen0jesRelativePtEC1dn();
  if (NLGen1jesRelativePtEC1dn_branch != 0) NLGen1jesRelativePtEC1dn();
  if (NLGen2jesRelativePtEC1dn_branch != 0) NLGen2jesRelativePtEC1dn();
  if (NLGen3jesRelativePtEC1dn_branch != 0) NLGen3jesRelativePtEC1dn();
  if (NLGen4jesRelativePtEC1dn_branch != 0) NLGen4jesRelativePtEC1dn();
  if (NVQGen0jesRelativePtEC1dn_branch != 0) NVQGen0jesRelativePtEC1dn();
  if (NVQGen1jesRelativePtEC1dn_branch != 0) NVQGen1jesRelativePtEC1dn();
  if (NVQGen2jesRelativePtEC1dn_branch != 0) NVQGen2jesRelativePtEC1dn();
  if (NVQGen3jesRelativePtEC1dn_branch != 0) NVQGen3jesRelativePtEC1dn();
  if (NVQGen4jesRelativePtEC1dn_branch != 0) NVQGen4jesRelativePtEC1dn();
  if (NiFJjesRelativePtEC1dn_branch != 0) NiFJjesRelativePtEC1dn();
  if (iFJ0jesRelativePtEC1dn_branch != 0) iFJ0jesRelativePtEC1dn();
  if (iFJ1jesRelativePtEC1dn_branch != 0) iFJ1jesRelativePtEC1dn();
  if (iFJ2jesRelativePtEC1dn_branch != 0) iFJ2jesRelativePtEC1dn();
  if (iFJ3jesRelativePtEC1dn_branch != 0) iFJ3jesRelativePtEC1dn();
  if (iFJ4jesRelativePtEC1dn_branch != 0) iFJ4jesRelativePtEC1dn();
  if (iVMD0jesRelativePtEC1dn_branch != 0) iVMD0jesRelativePtEC1dn();
  if (iVMD1jesRelativePtEC1dn_branch != 0) iVMD1jesRelativePtEC1dn();
  if (iVMD2jesRelativePtEC1dn_branch != 0) iVMD2jesRelativePtEC1dn();
  if (iVMD3jesRelativePtEC1dn_branch != 0) iVMD3jesRelativePtEC1dn();
  if (iVMD4jesRelativePtEC1dn_branch != 0) iVMD4jesRelativePtEC1dn();
  if (iWMD0jesRelativePtEC1dn_branch != 0) iWMD0jesRelativePtEC1dn();
  if (iWMD1jesRelativePtEC1dn_branch != 0) iWMD1jesRelativePtEC1dn();
  if (iWMD2jesRelativePtEC1dn_branch != 0) iWMD2jesRelativePtEC1dn();
  if (iWMD3jesRelativePtEC1dn_branch != 0) iWMD3jesRelativePtEC1dn();
  if (iWMD4jesRelativePtEC1dn_branch != 0) iWMD4jesRelativePtEC1dn();
  if (METjesRelativePtEC1dn_branch != 0) METjesRelativePtEC1dn();
  if (NujesRelativePtEC1dn_branch != 0) NujesRelativePtEC1dn();
  if (NJjesRelativePtEC1dn_branch != 0) NJjesRelativePtEC1dn();
  if (NbLoosejesRelativePtEC1dn_branch != 0) NbLoosejesRelativePtEC1dn();
  if (NbMediumjesRelativePtEC1dn_branch != 0) NbMediumjesRelativePtEC1dn();
  if (NbTightjesRelativePtEC1dn_branch != 0) NbTightjesRelativePtEC1dn();
  if (NoORNbLoosejesRelativePtEC1dn_branch != 0) NoORNbLoosejesRelativePtEC1dn();
  if (NoORNbMediumjesRelativePtEC1dn_branch != 0) NoORNbMediumjesRelativePtEC1dn();
  if (NoORNbTightjesRelativePtEC1dn_branch != 0) NoORNbTightjesRelativePtEC1dn();
  if (J0jesRelativePtEC1dn_branch != 0) J0jesRelativePtEC1dn();
  if (J1jesRelativePtEC1dn_branch != 0) J1jesRelativePtEC1dn();
  if (J2jesRelativePtEC1dn_branch != 0) J2jesRelativePtEC1dn();
  if (J3jesRelativePtEC1dn_branch != 0) J3jesRelativePtEC1dn();
  if (J4jesRelativePtEC1dn_branch != 0) J4jesRelativePtEC1dn();
  if (J5jesRelativePtEC1dn_branch != 0) J5jesRelativePtEC1dn();
  if (J6jesRelativePtEC1dn_branch != 0) J6jesRelativePtEC1dn();
  if (J7jesRelativePtEC1dn_branch != 0) J7jesRelativePtEC1dn();
  if (NQJGenjesRelativePtEC1dn_branch != 0) NQJGenjesRelativePtEC1dn();
  if (NBJGenjesRelativePtEC1dn_branch != 0) NBJGenjesRelativePtEC1dn();
  if (NLJGenjesRelativePtEC1dn_branch != 0) NLJGenjesRelativePtEC1dn();
  if (MVVXjesRelativePtEC1dn_branch != 0) MVVXjesRelativePtEC1dn();
  if (PtVVXjesRelativePtEC1dn_branch != 0) PtVVXjesRelativePtEC1dn();
  if (HTjesRelativePtEC1dn_branch != 0) HTjesRelativePtEC1dn();
  if (HTJjesRelativePtEC1dn_branch != 0) HTJjesRelativePtEC1dn();
  if (HTFJjesRelativePtEC1dn_branch != 0) HTFJjesRelativePtEC1dn();
  if (SumPtFJjesRelativePtEC1dn_branch != 0) SumPtFJjesRelativePtEC1dn();
  if (SumPtJjesRelativePtEC1dn_branch != 0) SumPtJjesRelativePtEC1dn();
  if (JsjesRelativePtEC2up_branch != 0) JsjesRelativePtEC2up();
  if (NFJjesRelativePtEC2up_branch != 0) NFJjesRelativePtEC2up();
  if (FJ0jesRelativePtEC2up_branch != 0) FJ0jesRelativePtEC2up();
  if (FJ1jesRelativePtEC2up_branch != 0) FJ1jesRelativePtEC2up();
  if (FJ2jesRelativePtEC2up_branch != 0) FJ2jesRelativePtEC2up();
  if (FJ3jesRelativePtEC2up_branch != 0) FJ3jesRelativePtEC2up();
  if (FJ4jesRelativePtEC2up_branch != 0) FJ4jesRelativePtEC2up();
  if (VMD0jesRelativePtEC2up_branch != 0) VMD0jesRelativePtEC2up();
  if (VMD1jesRelativePtEC2up_branch != 0) VMD1jesRelativePtEC2up();
  if (VMD2jesRelativePtEC2up_branch != 0) VMD2jesRelativePtEC2up();
  if (VMD3jesRelativePtEC2up_branch != 0) VMD3jesRelativePtEC2up();
  if (VMD4jesRelativePtEC2up_branch != 0) VMD4jesRelativePtEC2up();
  if (WMD0jesRelativePtEC2up_branch != 0) WMD0jesRelativePtEC2up();
  if (WMD1jesRelativePtEC2up_branch != 0) WMD1jesRelativePtEC2up();
  if (WMD2jesRelativePtEC2up_branch != 0) WMD2jesRelativePtEC2up();
  if (WMD3jesRelativePtEC2up_branch != 0) WMD3jesRelativePtEC2up();
  if (WMD4jesRelativePtEC2up_branch != 0) WMD4jesRelativePtEC2up();
  if (NQGen0jesRelativePtEC2up_branch != 0) NQGen0jesRelativePtEC2up();
  if (NQGen1jesRelativePtEC2up_branch != 0) NQGen1jesRelativePtEC2up();
  if (NQGen2jesRelativePtEC2up_branch != 0) NQGen2jesRelativePtEC2up();
  if (NQGen3jesRelativePtEC2up_branch != 0) NQGen3jesRelativePtEC2up();
  if (NQGen4jesRelativePtEC2up_branch != 0) NQGen4jesRelativePtEC2up();
  if (NBGen0jesRelativePtEC2up_branch != 0) NBGen0jesRelativePtEC2up();
  if (NBGen1jesRelativePtEC2up_branch != 0) NBGen1jesRelativePtEC2up();
  if (NBGen2jesRelativePtEC2up_branch != 0) NBGen2jesRelativePtEC2up();
  if (NBGen3jesRelativePtEC2up_branch != 0) NBGen3jesRelativePtEC2up();
  if (NBGen4jesRelativePtEC2up_branch != 0) NBGen4jesRelativePtEC2up();
  if (NLGen0jesRelativePtEC2up_branch != 0) NLGen0jesRelativePtEC2up();
  if (NLGen1jesRelativePtEC2up_branch != 0) NLGen1jesRelativePtEC2up();
  if (NLGen2jesRelativePtEC2up_branch != 0) NLGen2jesRelativePtEC2up();
  if (NLGen3jesRelativePtEC2up_branch != 0) NLGen3jesRelativePtEC2up();
  if (NLGen4jesRelativePtEC2up_branch != 0) NLGen4jesRelativePtEC2up();
  if (NVQGen0jesRelativePtEC2up_branch != 0) NVQGen0jesRelativePtEC2up();
  if (NVQGen1jesRelativePtEC2up_branch != 0) NVQGen1jesRelativePtEC2up();
  if (NVQGen2jesRelativePtEC2up_branch != 0) NVQGen2jesRelativePtEC2up();
  if (NVQGen3jesRelativePtEC2up_branch != 0) NVQGen3jesRelativePtEC2up();
  if (NVQGen4jesRelativePtEC2up_branch != 0) NVQGen4jesRelativePtEC2up();
  if (NiFJjesRelativePtEC2up_branch != 0) NiFJjesRelativePtEC2up();
  if (iFJ0jesRelativePtEC2up_branch != 0) iFJ0jesRelativePtEC2up();
  if (iFJ1jesRelativePtEC2up_branch != 0) iFJ1jesRelativePtEC2up();
  if (iFJ2jesRelativePtEC2up_branch != 0) iFJ2jesRelativePtEC2up();
  if (iFJ3jesRelativePtEC2up_branch != 0) iFJ3jesRelativePtEC2up();
  if (iFJ4jesRelativePtEC2up_branch != 0) iFJ4jesRelativePtEC2up();
  if (iVMD0jesRelativePtEC2up_branch != 0) iVMD0jesRelativePtEC2up();
  if (iVMD1jesRelativePtEC2up_branch != 0) iVMD1jesRelativePtEC2up();
  if (iVMD2jesRelativePtEC2up_branch != 0) iVMD2jesRelativePtEC2up();
  if (iVMD3jesRelativePtEC2up_branch != 0) iVMD3jesRelativePtEC2up();
  if (iVMD4jesRelativePtEC2up_branch != 0) iVMD4jesRelativePtEC2up();
  if (iWMD0jesRelativePtEC2up_branch != 0) iWMD0jesRelativePtEC2up();
  if (iWMD1jesRelativePtEC2up_branch != 0) iWMD1jesRelativePtEC2up();
  if (iWMD2jesRelativePtEC2up_branch != 0) iWMD2jesRelativePtEC2up();
  if (iWMD3jesRelativePtEC2up_branch != 0) iWMD3jesRelativePtEC2up();
  if (iWMD4jesRelativePtEC2up_branch != 0) iWMD4jesRelativePtEC2up();
  if (METjesRelativePtEC2up_branch != 0) METjesRelativePtEC2up();
  if (NujesRelativePtEC2up_branch != 0) NujesRelativePtEC2up();
  if (NJjesRelativePtEC2up_branch != 0) NJjesRelativePtEC2up();
  if (NbLoosejesRelativePtEC2up_branch != 0) NbLoosejesRelativePtEC2up();
  if (NbMediumjesRelativePtEC2up_branch != 0) NbMediumjesRelativePtEC2up();
  if (NbTightjesRelativePtEC2up_branch != 0) NbTightjesRelativePtEC2up();
  if (NoORNbLoosejesRelativePtEC2up_branch != 0) NoORNbLoosejesRelativePtEC2up();
  if (NoORNbMediumjesRelativePtEC2up_branch != 0) NoORNbMediumjesRelativePtEC2up();
  if (NoORNbTightjesRelativePtEC2up_branch != 0) NoORNbTightjesRelativePtEC2up();
  if (J0jesRelativePtEC2up_branch != 0) J0jesRelativePtEC2up();
  if (J1jesRelativePtEC2up_branch != 0) J1jesRelativePtEC2up();
  if (J2jesRelativePtEC2up_branch != 0) J2jesRelativePtEC2up();
  if (J3jesRelativePtEC2up_branch != 0) J3jesRelativePtEC2up();
  if (J4jesRelativePtEC2up_branch != 0) J4jesRelativePtEC2up();
  if (J5jesRelativePtEC2up_branch != 0) J5jesRelativePtEC2up();
  if (J6jesRelativePtEC2up_branch != 0) J6jesRelativePtEC2up();
  if (J7jesRelativePtEC2up_branch != 0) J7jesRelativePtEC2up();
  if (NQJGenjesRelativePtEC2up_branch != 0) NQJGenjesRelativePtEC2up();
  if (NBJGenjesRelativePtEC2up_branch != 0) NBJGenjesRelativePtEC2up();
  if (NLJGenjesRelativePtEC2up_branch != 0) NLJGenjesRelativePtEC2up();
  if (MVVXjesRelativePtEC2up_branch != 0) MVVXjesRelativePtEC2up();
  if (PtVVXjesRelativePtEC2up_branch != 0) PtVVXjesRelativePtEC2up();
  if (HTjesRelativePtEC2up_branch != 0) HTjesRelativePtEC2up();
  if (HTJjesRelativePtEC2up_branch != 0) HTJjesRelativePtEC2up();
  if (HTFJjesRelativePtEC2up_branch != 0) HTFJjesRelativePtEC2up();
  if (SumPtFJjesRelativePtEC2up_branch != 0) SumPtFJjesRelativePtEC2up();
  if (SumPtJjesRelativePtEC2up_branch != 0) SumPtJjesRelativePtEC2up();
  if (JsjesRelativePtEC2dn_branch != 0) JsjesRelativePtEC2dn();
  if (NFJjesRelativePtEC2dn_branch != 0) NFJjesRelativePtEC2dn();
  if (FJ0jesRelativePtEC2dn_branch != 0) FJ0jesRelativePtEC2dn();
  if (FJ1jesRelativePtEC2dn_branch != 0) FJ1jesRelativePtEC2dn();
  if (FJ2jesRelativePtEC2dn_branch != 0) FJ2jesRelativePtEC2dn();
  if (FJ3jesRelativePtEC2dn_branch != 0) FJ3jesRelativePtEC2dn();
  if (FJ4jesRelativePtEC2dn_branch != 0) FJ4jesRelativePtEC2dn();
  if (VMD0jesRelativePtEC2dn_branch != 0) VMD0jesRelativePtEC2dn();
  if (VMD1jesRelativePtEC2dn_branch != 0) VMD1jesRelativePtEC2dn();
  if (VMD2jesRelativePtEC2dn_branch != 0) VMD2jesRelativePtEC2dn();
  if (VMD3jesRelativePtEC2dn_branch != 0) VMD3jesRelativePtEC2dn();
  if (VMD4jesRelativePtEC2dn_branch != 0) VMD4jesRelativePtEC2dn();
  if (WMD0jesRelativePtEC2dn_branch != 0) WMD0jesRelativePtEC2dn();
  if (WMD1jesRelativePtEC2dn_branch != 0) WMD1jesRelativePtEC2dn();
  if (WMD2jesRelativePtEC2dn_branch != 0) WMD2jesRelativePtEC2dn();
  if (WMD3jesRelativePtEC2dn_branch != 0) WMD3jesRelativePtEC2dn();
  if (WMD4jesRelativePtEC2dn_branch != 0) WMD4jesRelativePtEC2dn();
  if (NQGen0jesRelativePtEC2dn_branch != 0) NQGen0jesRelativePtEC2dn();
  if (NQGen1jesRelativePtEC2dn_branch != 0) NQGen1jesRelativePtEC2dn();
  if (NQGen2jesRelativePtEC2dn_branch != 0) NQGen2jesRelativePtEC2dn();
  if (NQGen3jesRelativePtEC2dn_branch != 0) NQGen3jesRelativePtEC2dn();
  if (NQGen4jesRelativePtEC2dn_branch != 0) NQGen4jesRelativePtEC2dn();
  if (NBGen0jesRelativePtEC2dn_branch != 0) NBGen0jesRelativePtEC2dn();
  if (NBGen1jesRelativePtEC2dn_branch != 0) NBGen1jesRelativePtEC2dn();
  if (NBGen2jesRelativePtEC2dn_branch != 0) NBGen2jesRelativePtEC2dn();
  if (NBGen3jesRelativePtEC2dn_branch != 0) NBGen3jesRelativePtEC2dn();
  if (NBGen4jesRelativePtEC2dn_branch != 0) NBGen4jesRelativePtEC2dn();
  if (NLGen0jesRelativePtEC2dn_branch != 0) NLGen0jesRelativePtEC2dn();
  if (NLGen1jesRelativePtEC2dn_branch != 0) NLGen1jesRelativePtEC2dn();
  if (NLGen2jesRelativePtEC2dn_branch != 0) NLGen2jesRelativePtEC2dn();
  if (NLGen3jesRelativePtEC2dn_branch != 0) NLGen3jesRelativePtEC2dn();
  if (NLGen4jesRelativePtEC2dn_branch != 0) NLGen4jesRelativePtEC2dn();
  if (NVQGen0jesRelativePtEC2dn_branch != 0) NVQGen0jesRelativePtEC2dn();
  if (NVQGen1jesRelativePtEC2dn_branch != 0) NVQGen1jesRelativePtEC2dn();
  if (NVQGen2jesRelativePtEC2dn_branch != 0) NVQGen2jesRelativePtEC2dn();
  if (NVQGen3jesRelativePtEC2dn_branch != 0) NVQGen3jesRelativePtEC2dn();
  if (NVQGen4jesRelativePtEC2dn_branch != 0) NVQGen4jesRelativePtEC2dn();
  if (NiFJjesRelativePtEC2dn_branch != 0) NiFJjesRelativePtEC2dn();
  if (iFJ0jesRelativePtEC2dn_branch != 0) iFJ0jesRelativePtEC2dn();
  if (iFJ1jesRelativePtEC2dn_branch != 0) iFJ1jesRelativePtEC2dn();
  if (iFJ2jesRelativePtEC2dn_branch != 0) iFJ2jesRelativePtEC2dn();
  if (iFJ3jesRelativePtEC2dn_branch != 0) iFJ3jesRelativePtEC2dn();
  if (iFJ4jesRelativePtEC2dn_branch != 0) iFJ4jesRelativePtEC2dn();
  if (iVMD0jesRelativePtEC2dn_branch != 0) iVMD0jesRelativePtEC2dn();
  if (iVMD1jesRelativePtEC2dn_branch != 0) iVMD1jesRelativePtEC2dn();
  if (iVMD2jesRelativePtEC2dn_branch != 0) iVMD2jesRelativePtEC2dn();
  if (iVMD3jesRelativePtEC2dn_branch != 0) iVMD3jesRelativePtEC2dn();
  if (iVMD4jesRelativePtEC2dn_branch != 0) iVMD4jesRelativePtEC2dn();
  if (iWMD0jesRelativePtEC2dn_branch != 0) iWMD0jesRelativePtEC2dn();
  if (iWMD1jesRelativePtEC2dn_branch != 0) iWMD1jesRelativePtEC2dn();
  if (iWMD2jesRelativePtEC2dn_branch != 0) iWMD2jesRelativePtEC2dn();
  if (iWMD3jesRelativePtEC2dn_branch != 0) iWMD3jesRelativePtEC2dn();
  if (iWMD4jesRelativePtEC2dn_branch != 0) iWMD4jesRelativePtEC2dn();
  if (METjesRelativePtEC2dn_branch != 0) METjesRelativePtEC2dn();
  if (NujesRelativePtEC2dn_branch != 0) NujesRelativePtEC2dn();
  if (NJjesRelativePtEC2dn_branch != 0) NJjesRelativePtEC2dn();
  if (NbLoosejesRelativePtEC2dn_branch != 0) NbLoosejesRelativePtEC2dn();
  if (NbMediumjesRelativePtEC2dn_branch != 0) NbMediumjesRelativePtEC2dn();
  if (NbTightjesRelativePtEC2dn_branch != 0) NbTightjesRelativePtEC2dn();
  if (NoORNbLoosejesRelativePtEC2dn_branch != 0) NoORNbLoosejesRelativePtEC2dn();
  if (NoORNbMediumjesRelativePtEC2dn_branch != 0) NoORNbMediumjesRelativePtEC2dn();
  if (NoORNbTightjesRelativePtEC2dn_branch != 0) NoORNbTightjesRelativePtEC2dn();
  if (J0jesRelativePtEC2dn_branch != 0) J0jesRelativePtEC2dn();
  if (J1jesRelativePtEC2dn_branch != 0) J1jesRelativePtEC2dn();
  if (J2jesRelativePtEC2dn_branch != 0) J2jesRelativePtEC2dn();
  if (J3jesRelativePtEC2dn_branch != 0) J3jesRelativePtEC2dn();
  if (J4jesRelativePtEC2dn_branch != 0) J4jesRelativePtEC2dn();
  if (J5jesRelativePtEC2dn_branch != 0) J5jesRelativePtEC2dn();
  if (J6jesRelativePtEC2dn_branch != 0) J6jesRelativePtEC2dn();
  if (J7jesRelativePtEC2dn_branch != 0) J7jesRelativePtEC2dn();
  if (NQJGenjesRelativePtEC2dn_branch != 0) NQJGenjesRelativePtEC2dn();
  if (NBJGenjesRelativePtEC2dn_branch != 0) NBJGenjesRelativePtEC2dn();
  if (NLJGenjesRelativePtEC2dn_branch != 0) NLJGenjesRelativePtEC2dn();
  if (MVVXjesRelativePtEC2dn_branch != 0) MVVXjesRelativePtEC2dn();
  if (PtVVXjesRelativePtEC2dn_branch != 0) PtVVXjesRelativePtEC2dn();
  if (HTjesRelativePtEC2dn_branch != 0) HTjesRelativePtEC2dn();
  if (HTJjesRelativePtEC2dn_branch != 0) HTJjesRelativePtEC2dn();
  if (HTFJjesRelativePtEC2dn_branch != 0) HTFJjesRelativePtEC2dn();
  if (SumPtFJjesRelativePtEC2dn_branch != 0) SumPtFJjesRelativePtEC2dn();
  if (SumPtJjesRelativePtEC2dn_branch != 0) SumPtJjesRelativePtEC2dn();
  if (JsjesRelativePtHFup_branch != 0) JsjesRelativePtHFup();
  if (NFJjesRelativePtHFup_branch != 0) NFJjesRelativePtHFup();
  if (FJ0jesRelativePtHFup_branch != 0) FJ0jesRelativePtHFup();
  if (FJ1jesRelativePtHFup_branch != 0) FJ1jesRelativePtHFup();
  if (FJ2jesRelativePtHFup_branch != 0) FJ2jesRelativePtHFup();
  if (FJ3jesRelativePtHFup_branch != 0) FJ3jesRelativePtHFup();
  if (FJ4jesRelativePtHFup_branch != 0) FJ4jesRelativePtHFup();
  if (VMD0jesRelativePtHFup_branch != 0) VMD0jesRelativePtHFup();
  if (VMD1jesRelativePtHFup_branch != 0) VMD1jesRelativePtHFup();
  if (VMD2jesRelativePtHFup_branch != 0) VMD2jesRelativePtHFup();
  if (VMD3jesRelativePtHFup_branch != 0) VMD3jesRelativePtHFup();
  if (VMD4jesRelativePtHFup_branch != 0) VMD4jesRelativePtHFup();
  if (WMD0jesRelativePtHFup_branch != 0) WMD0jesRelativePtHFup();
  if (WMD1jesRelativePtHFup_branch != 0) WMD1jesRelativePtHFup();
  if (WMD2jesRelativePtHFup_branch != 0) WMD2jesRelativePtHFup();
  if (WMD3jesRelativePtHFup_branch != 0) WMD3jesRelativePtHFup();
  if (WMD4jesRelativePtHFup_branch != 0) WMD4jesRelativePtHFup();
  if (NQGen0jesRelativePtHFup_branch != 0) NQGen0jesRelativePtHFup();
  if (NQGen1jesRelativePtHFup_branch != 0) NQGen1jesRelativePtHFup();
  if (NQGen2jesRelativePtHFup_branch != 0) NQGen2jesRelativePtHFup();
  if (NQGen3jesRelativePtHFup_branch != 0) NQGen3jesRelativePtHFup();
  if (NQGen4jesRelativePtHFup_branch != 0) NQGen4jesRelativePtHFup();
  if (NBGen0jesRelativePtHFup_branch != 0) NBGen0jesRelativePtHFup();
  if (NBGen1jesRelativePtHFup_branch != 0) NBGen1jesRelativePtHFup();
  if (NBGen2jesRelativePtHFup_branch != 0) NBGen2jesRelativePtHFup();
  if (NBGen3jesRelativePtHFup_branch != 0) NBGen3jesRelativePtHFup();
  if (NBGen4jesRelativePtHFup_branch != 0) NBGen4jesRelativePtHFup();
  if (NLGen0jesRelativePtHFup_branch != 0) NLGen0jesRelativePtHFup();
  if (NLGen1jesRelativePtHFup_branch != 0) NLGen1jesRelativePtHFup();
  if (NLGen2jesRelativePtHFup_branch != 0) NLGen2jesRelativePtHFup();
  if (NLGen3jesRelativePtHFup_branch != 0) NLGen3jesRelativePtHFup();
  if (NLGen4jesRelativePtHFup_branch != 0) NLGen4jesRelativePtHFup();
  if (NVQGen0jesRelativePtHFup_branch != 0) NVQGen0jesRelativePtHFup();
  if (NVQGen1jesRelativePtHFup_branch != 0) NVQGen1jesRelativePtHFup();
  if (NVQGen2jesRelativePtHFup_branch != 0) NVQGen2jesRelativePtHFup();
  if (NVQGen3jesRelativePtHFup_branch != 0) NVQGen3jesRelativePtHFup();
  if (NVQGen4jesRelativePtHFup_branch != 0) NVQGen4jesRelativePtHFup();
  if (NiFJjesRelativePtHFup_branch != 0) NiFJjesRelativePtHFup();
  if (iFJ0jesRelativePtHFup_branch != 0) iFJ0jesRelativePtHFup();
  if (iFJ1jesRelativePtHFup_branch != 0) iFJ1jesRelativePtHFup();
  if (iFJ2jesRelativePtHFup_branch != 0) iFJ2jesRelativePtHFup();
  if (iFJ3jesRelativePtHFup_branch != 0) iFJ3jesRelativePtHFup();
  if (iFJ4jesRelativePtHFup_branch != 0) iFJ4jesRelativePtHFup();
  if (iVMD0jesRelativePtHFup_branch != 0) iVMD0jesRelativePtHFup();
  if (iVMD1jesRelativePtHFup_branch != 0) iVMD1jesRelativePtHFup();
  if (iVMD2jesRelativePtHFup_branch != 0) iVMD2jesRelativePtHFup();
  if (iVMD3jesRelativePtHFup_branch != 0) iVMD3jesRelativePtHFup();
  if (iVMD4jesRelativePtHFup_branch != 0) iVMD4jesRelativePtHFup();
  if (iWMD0jesRelativePtHFup_branch != 0) iWMD0jesRelativePtHFup();
  if (iWMD1jesRelativePtHFup_branch != 0) iWMD1jesRelativePtHFup();
  if (iWMD2jesRelativePtHFup_branch != 0) iWMD2jesRelativePtHFup();
  if (iWMD3jesRelativePtHFup_branch != 0) iWMD3jesRelativePtHFup();
  if (iWMD4jesRelativePtHFup_branch != 0) iWMD4jesRelativePtHFup();
  if (METjesRelativePtHFup_branch != 0) METjesRelativePtHFup();
  if (NujesRelativePtHFup_branch != 0) NujesRelativePtHFup();
  if (NJjesRelativePtHFup_branch != 0) NJjesRelativePtHFup();
  if (NbLoosejesRelativePtHFup_branch != 0) NbLoosejesRelativePtHFup();
  if (NbMediumjesRelativePtHFup_branch != 0) NbMediumjesRelativePtHFup();
  if (NbTightjesRelativePtHFup_branch != 0) NbTightjesRelativePtHFup();
  if (NoORNbLoosejesRelativePtHFup_branch != 0) NoORNbLoosejesRelativePtHFup();
  if (NoORNbMediumjesRelativePtHFup_branch != 0) NoORNbMediumjesRelativePtHFup();
  if (NoORNbTightjesRelativePtHFup_branch != 0) NoORNbTightjesRelativePtHFup();
  if (J0jesRelativePtHFup_branch != 0) J0jesRelativePtHFup();
  if (J1jesRelativePtHFup_branch != 0) J1jesRelativePtHFup();
  if (J2jesRelativePtHFup_branch != 0) J2jesRelativePtHFup();
  if (J3jesRelativePtHFup_branch != 0) J3jesRelativePtHFup();
  if (J4jesRelativePtHFup_branch != 0) J4jesRelativePtHFup();
  if (J5jesRelativePtHFup_branch != 0) J5jesRelativePtHFup();
  if (J6jesRelativePtHFup_branch != 0) J6jesRelativePtHFup();
  if (J7jesRelativePtHFup_branch != 0) J7jesRelativePtHFup();
  if (NQJGenjesRelativePtHFup_branch != 0) NQJGenjesRelativePtHFup();
  if (NBJGenjesRelativePtHFup_branch != 0) NBJGenjesRelativePtHFup();
  if (NLJGenjesRelativePtHFup_branch != 0) NLJGenjesRelativePtHFup();
  if (MVVXjesRelativePtHFup_branch != 0) MVVXjesRelativePtHFup();
  if (PtVVXjesRelativePtHFup_branch != 0) PtVVXjesRelativePtHFup();
  if (HTjesRelativePtHFup_branch != 0) HTjesRelativePtHFup();
  if (HTJjesRelativePtHFup_branch != 0) HTJjesRelativePtHFup();
  if (HTFJjesRelativePtHFup_branch != 0) HTFJjesRelativePtHFup();
  if (SumPtFJjesRelativePtHFup_branch != 0) SumPtFJjesRelativePtHFup();
  if (SumPtJjesRelativePtHFup_branch != 0) SumPtJjesRelativePtHFup();
  if (JsjesRelativePtHFdn_branch != 0) JsjesRelativePtHFdn();
  if (NFJjesRelativePtHFdn_branch != 0) NFJjesRelativePtHFdn();
  if (FJ0jesRelativePtHFdn_branch != 0) FJ0jesRelativePtHFdn();
  if (FJ1jesRelativePtHFdn_branch != 0) FJ1jesRelativePtHFdn();
  if (FJ2jesRelativePtHFdn_branch != 0) FJ2jesRelativePtHFdn();
  if (FJ3jesRelativePtHFdn_branch != 0) FJ3jesRelativePtHFdn();
  if (FJ4jesRelativePtHFdn_branch != 0) FJ4jesRelativePtHFdn();
  if (VMD0jesRelativePtHFdn_branch != 0) VMD0jesRelativePtHFdn();
  if (VMD1jesRelativePtHFdn_branch != 0) VMD1jesRelativePtHFdn();
  if (VMD2jesRelativePtHFdn_branch != 0) VMD2jesRelativePtHFdn();
  if (VMD3jesRelativePtHFdn_branch != 0) VMD3jesRelativePtHFdn();
  if (VMD4jesRelativePtHFdn_branch != 0) VMD4jesRelativePtHFdn();
  if (WMD0jesRelativePtHFdn_branch != 0) WMD0jesRelativePtHFdn();
  if (WMD1jesRelativePtHFdn_branch != 0) WMD1jesRelativePtHFdn();
  if (WMD2jesRelativePtHFdn_branch != 0) WMD2jesRelativePtHFdn();
  if (WMD3jesRelativePtHFdn_branch != 0) WMD3jesRelativePtHFdn();
  if (WMD4jesRelativePtHFdn_branch != 0) WMD4jesRelativePtHFdn();
  if (NQGen0jesRelativePtHFdn_branch != 0) NQGen0jesRelativePtHFdn();
  if (NQGen1jesRelativePtHFdn_branch != 0) NQGen1jesRelativePtHFdn();
  if (NQGen2jesRelativePtHFdn_branch != 0) NQGen2jesRelativePtHFdn();
  if (NQGen3jesRelativePtHFdn_branch != 0) NQGen3jesRelativePtHFdn();
  if (NQGen4jesRelativePtHFdn_branch != 0) NQGen4jesRelativePtHFdn();
  if (NBGen0jesRelativePtHFdn_branch != 0) NBGen0jesRelativePtHFdn();
  if (NBGen1jesRelativePtHFdn_branch != 0) NBGen1jesRelativePtHFdn();
  if (NBGen2jesRelativePtHFdn_branch != 0) NBGen2jesRelativePtHFdn();
  if (NBGen3jesRelativePtHFdn_branch != 0) NBGen3jesRelativePtHFdn();
  if (NBGen4jesRelativePtHFdn_branch != 0) NBGen4jesRelativePtHFdn();
  if (NLGen0jesRelativePtHFdn_branch != 0) NLGen0jesRelativePtHFdn();
  if (NLGen1jesRelativePtHFdn_branch != 0) NLGen1jesRelativePtHFdn();
  if (NLGen2jesRelativePtHFdn_branch != 0) NLGen2jesRelativePtHFdn();
  if (NLGen3jesRelativePtHFdn_branch != 0) NLGen3jesRelativePtHFdn();
  if (NLGen4jesRelativePtHFdn_branch != 0) NLGen4jesRelativePtHFdn();
  if (NVQGen0jesRelativePtHFdn_branch != 0) NVQGen0jesRelativePtHFdn();
  if (NVQGen1jesRelativePtHFdn_branch != 0) NVQGen1jesRelativePtHFdn();
  if (NVQGen2jesRelativePtHFdn_branch != 0) NVQGen2jesRelativePtHFdn();
  if (NVQGen3jesRelativePtHFdn_branch != 0) NVQGen3jesRelativePtHFdn();
  if (NVQGen4jesRelativePtHFdn_branch != 0) NVQGen4jesRelativePtHFdn();
  if (NiFJjesRelativePtHFdn_branch != 0) NiFJjesRelativePtHFdn();
  if (iFJ0jesRelativePtHFdn_branch != 0) iFJ0jesRelativePtHFdn();
  if (iFJ1jesRelativePtHFdn_branch != 0) iFJ1jesRelativePtHFdn();
  if (iFJ2jesRelativePtHFdn_branch != 0) iFJ2jesRelativePtHFdn();
  if (iFJ3jesRelativePtHFdn_branch != 0) iFJ3jesRelativePtHFdn();
  if (iFJ4jesRelativePtHFdn_branch != 0) iFJ4jesRelativePtHFdn();
  if (iVMD0jesRelativePtHFdn_branch != 0) iVMD0jesRelativePtHFdn();
  if (iVMD1jesRelativePtHFdn_branch != 0) iVMD1jesRelativePtHFdn();
  if (iVMD2jesRelativePtHFdn_branch != 0) iVMD2jesRelativePtHFdn();
  if (iVMD3jesRelativePtHFdn_branch != 0) iVMD3jesRelativePtHFdn();
  if (iVMD4jesRelativePtHFdn_branch != 0) iVMD4jesRelativePtHFdn();
  if (iWMD0jesRelativePtHFdn_branch != 0) iWMD0jesRelativePtHFdn();
  if (iWMD1jesRelativePtHFdn_branch != 0) iWMD1jesRelativePtHFdn();
  if (iWMD2jesRelativePtHFdn_branch != 0) iWMD2jesRelativePtHFdn();
  if (iWMD3jesRelativePtHFdn_branch != 0) iWMD3jesRelativePtHFdn();
  if (iWMD4jesRelativePtHFdn_branch != 0) iWMD4jesRelativePtHFdn();
  if (METjesRelativePtHFdn_branch != 0) METjesRelativePtHFdn();
  if (NujesRelativePtHFdn_branch != 0) NujesRelativePtHFdn();
  if (NJjesRelativePtHFdn_branch != 0) NJjesRelativePtHFdn();
  if (NbLoosejesRelativePtHFdn_branch != 0) NbLoosejesRelativePtHFdn();
  if (NbMediumjesRelativePtHFdn_branch != 0) NbMediumjesRelativePtHFdn();
  if (NbTightjesRelativePtHFdn_branch != 0) NbTightjesRelativePtHFdn();
  if (NoORNbLoosejesRelativePtHFdn_branch != 0) NoORNbLoosejesRelativePtHFdn();
  if (NoORNbMediumjesRelativePtHFdn_branch != 0) NoORNbMediumjesRelativePtHFdn();
  if (NoORNbTightjesRelativePtHFdn_branch != 0) NoORNbTightjesRelativePtHFdn();
  if (J0jesRelativePtHFdn_branch != 0) J0jesRelativePtHFdn();
  if (J1jesRelativePtHFdn_branch != 0) J1jesRelativePtHFdn();
  if (J2jesRelativePtHFdn_branch != 0) J2jesRelativePtHFdn();
  if (J3jesRelativePtHFdn_branch != 0) J3jesRelativePtHFdn();
  if (J4jesRelativePtHFdn_branch != 0) J4jesRelativePtHFdn();
  if (J5jesRelativePtHFdn_branch != 0) J5jesRelativePtHFdn();
  if (J6jesRelativePtHFdn_branch != 0) J6jesRelativePtHFdn();
  if (J7jesRelativePtHFdn_branch != 0) J7jesRelativePtHFdn();
  if (NQJGenjesRelativePtHFdn_branch != 0) NQJGenjesRelativePtHFdn();
  if (NBJGenjesRelativePtHFdn_branch != 0) NBJGenjesRelativePtHFdn();
  if (NLJGenjesRelativePtHFdn_branch != 0) NLJGenjesRelativePtHFdn();
  if (MVVXjesRelativePtHFdn_branch != 0) MVVXjesRelativePtHFdn();
  if (PtVVXjesRelativePtHFdn_branch != 0) PtVVXjesRelativePtHFdn();
  if (HTjesRelativePtHFdn_branch != 0) HTjesRelativePtHFdn();
  if (HTJjesRelativePtHFdn_branch != 0) HTJjesRelativePtHFdn();
  if (HTFJjesRelativePtHFdn_branch != 0) HTFJjesRelativePtHFdn();
  if (SumPtFJjesRelativePtHFdn_branch != 0) SumPtFJjesRelativePtHFdn();
  if (SumPtJjesRelativePtHFdn_branch != 0) SumPtJjesRelativePtHFdn();
  if (JsjesRelativeBalup_branch != 0) JsjesRelativeBalup();
  if (NFJjesRelativeBalup_branch != 0) NFJjesRelativeBalup();
  if (FJ0jesRelativeBalup_branch != 0) FJ0jesRelativeBalup();
  if (FJ1jesRelativeBalup_branch != 0) FJ1jesRelativeBalup();
  if (FJ2jesRelativeBalup_branch != 0) FJ2jesRelativeBalup();
  if (FJ3jesRelativeBalup_branch != 0) FJ3jesRelativeBalup();
  if (FJ4jesRelativeBalup_branch != 0) FJ4jesRelativeBalup();
  if (VMD0jesRelativeBalup_branch != 0) VMD0jesRelativeBalup();
  if (VMD1jesRelativeBalup_branch != 0) VMD1jesRelativeBalup();
  if (VMD2jesRelativeBalup_branch != 0) VMD2jesRelativeBalup();
  if (VMD3jesRelativeBalup_branch != 0) VMD3jesRelativeBalup();
  if (VMD4jesRelativeBalup_branch != 0) VMD4jesRelativeBalup();
  if (WMD0jesRelativeBalup_branch != 0) WMD0jesRelativeBalup();
  if (WMD1jesRelativeBalup_branch != 0) WMD1jesRelativeBalup();
  if (WMD2jesRelativeBalup_branch != 0) WMD2jesRelativeBalup();
  if (WMD3jesRelativeBalup_branch != 0) WMD3jesRelativeBalup();
  if (WMD4jesRelativeBalup_branch != 0) WMD4jesRelativeBalup();
  if (NQGen0jesRelativeBalup_branch != 0) NQGen0jesRelativeBalup();
  if (NQGen1jesRelativeBalup_branch != 0) NQGen1jesRelativeBalup();
  if (NQGen2jesRelativeBalup_branch != 0) NQGen2jesRelativeBalup();
  if (NQGen3jesRelativeBalup_branch != 0) NQGen3jesRelativeBalup();
  if (NQGen4jesRelativeBalup_branch != 0) NQGen4jesRelativeBalup();
  if (NBGen0jesRelativeBalup_branch != 0) NBGen0jesRelativeBalup();
  if (NBGen1jesRelativeBalup_branch != 0) NBGen1jesRelativeBalup();
  if (NBGen2jesRelativeBalup_branch != 0) NBGen2jesRelativeBalup();
  if (NBGen3jesRelativeBalup_branch != 0) NBGen3jesRelativeBalup();
  if (NBGen4jesRelativeBalup_branch != 0) NBGen4jesRelativeBalup();
  if (NLGen0jesRelativeBalup_branch != 0) NLGen0jesRelativeBalup();
  if (NLGen1jesRelativeBalup_branch != 0) NLGen1jesRelativeBalup();
  if (NLGen2jesRelativeBalup_branch != 0) NLGen2jesRelativeBalup();
  if (NLGen3jesRelativeBalup_branch != 0) NLGen3jesRelativeBalup();
  if (NLGen4jesRelativeBalup_branch != 0) NLGen4jesRelativeBalup();
  if (NVQGen0jesRelativeBalup_branch != 0) NVQGen0jesRelativeBalup();
  if (NVQGen1jesRelativeBalup_branch != 0) NVQGen1jesRelativeBalup();
  if (NVQGen2jesRelativeBalup_branch != 0) NVQGen2jesRelativeBalup();
  if (NVQGen3jesRelativeBalup_branch != 0) NVQGen3jesRelativeBalup();
  if (NVQGen4jesRelativeBalup_branch != 0) NVQGen4jesRelativeBalup();
  if (NiFJjesRelativeBalup_branch != 0) NiFJjesRelativeBalup();
  if (iFJ0jesRelativeBalup_branch != 0) iFJ0jesRelativeBalup();
  if (iFJ1jesRelativeBalup_branch != 0) iFJ1jesRelativeBalup();
  if (iFJ2jesRelativeBalup_branch != 0) iFJ2jesRelativeBalup();
  if (iFJ3jesRelativeBalup_branch != 0) iFJ3jesRelativeBalup();
  if (iFJ4jesRelativeBalup_branch != 0) iFJ4jesRelativeBalup();
  if (iVMD0jesRelativeBalup_branch != 0) iVMD0jesRelativeBalup();
  if (iVMD1jesRelativeBalup_branch != 0) iVMD1jesRelativeBalup();
  if (iVMD2jesRelativeBalup_branch != 0) iVMD2jesRelativeBalup();
  if (iVMD3jesRelativeBalup_branch != 0) iVMD3jesRelativeBalup();
  if (iVMD4jesRelativeBalup_branch != 0) iVMD4jesRelativeBalup();
  if (iWMD0jesRelativeBalup_branch != 0) iWMD0jesRelativeBalup();
  if (iWMD1jesRelativeBalup_branch != 0) iWMD1jesRelativeBalup();
  if (iWMD2jesRelativeBalup_branch != 0) iWMD2jesRelativeBalup();
  if (iWMD3jesRelativeBalup_branch != 0) iWMD3jesRelativeBalup();
  if (iWMD4jesRelativeBalup_branch != 0) iWMD4jesRelativeBalup();
  if (METjesRelativeBalup_branch != 0) METjesRelativeBalup();
  if (NujesRelativeBalup_branch != 0) NujesRelativeBalup();
  if (NJjesRelativeBalup_branch != 0) NJjesRelativeBalup();
  if (NbLoosejesRelativeBalup_branch != 0) NbLoosejesRelativeBalup();
  if (NbMediumjesRelativeBalup_branch != 0) NbMediumjesRelativeBalup();
  if (NbTightjesRelativeBalup_branch != 0) NbTightjesRelativeBalup();
  if (NoORNbLoosejesRelativeBalup_branch != 0) NoORNbLoosejesRelativeBalup();
  if (NoORNbMediumjesRelativeBalup_branch != 0) NoORNbMediumjesRelativeBalup();
  if (NoORNbTightjesRelativeBalup_branch != 0) NoORNbTightjesRelativeBalup();
  if (J0jesRelativeBalup_branch != 0) J0jesRelativeBalup();
  if (J1jesRelativeBalup_branch != 0) J1jesRelativeBalup();
  if (J2jesRelativeBalup_branch != 0) J2jesRelativeBalup();
  if (J3jesRelativeBalup_branch != 0) J3jesRelativeBalup();
  if (J4jesRelativeBalup_branch != 0) J4jesRelativeBalup();
  if (J5jesRelativeBalup_branch != 0) J5jesRelativeBalup();
  if (J6jesRelativeBalup_branch != 0) J6jesRelativeBalup();
  if (J7jesRelativeBalup_branch != 0) J7jesRelativeBalup();
  if (NQJGenjesRelativeBalup_branch != 0) NQJGenjesRelativeBalup();
  if (NBJGenjesRelativeBalup_branch != 0) NBJGenjesRelativeBalup();
  if (NLJGenjesRelativeBalup_branch != 0) NLJGenjesRelativeBalup();
  if (MVVXjesRelativeBalup_branch != 0) MVVXjesRelativeBalup();
  if (PtVVXjesRelativeBalup_branch != 0) PtVVXjesRelativeBalup();
  if (HTjesRelativeBalup_branch != 0) HTjesRelativeBalup();
  if (HTJjesRelativeBalup_branch != 0) HTJjesRelativeBalup();
  if (HTFJjesRelativeBalup_branch != 0) HTFJjesRelativeBalup();
  if (SumPtFJjesRelativeBalup_branch != 0) SumPtFJjesRelativeBalup();
  if (SumPtJjesRelativeBalup_branch != 0) SumPtJjesRelativeBalup();
  if (JsjesRelativeBaldn_branch != 0) JsjesRelativeBaldn();
  if (NFJjesRelativeBaldn_branch != 0) NFJjesRelativeBaldn();
  if (FJ0jesRelativeBaldn_branch != 0) FJ0jesRelativeBaldn();
  if (FJ1jesRelativeBaldn_branch != 0) FJ1jesRelativeBaldn();
  if (FJ2jesRelativeBaldn_branch != 0) FJ2jesRelativeBaldn();
  if (FJ3jesRelativeBaldn_branch != 0) FJ3jesRelativeBaldn();
  if (FJ4jesRelativeBaldn_branch != 0) FJ4jesRelativeBaldn();
  if (VMD0jesRelativeBaldn_branch != 0) VMD0jesRelativeBaldn();
  if (VMD1jesRelativeBaldn_branch != 0) VMD1jesRelativeBaldn();
  if (VMD2jesRelativeBaldn_branch != 0) VMD2jesRelativeBaldn();
  if (VMD3jesRelativeBaldn_branch != 0) VMD3jesRelativeBaldn();
  if (VMD4jesRelativeBaldn_branch != 0) VMD4jesRelativeBaldn();
  if (WMD0jesRelativeBaldn_branch != 0) WMD0jesRelativeBaldn();
  if (WMD1jesRelativeBaldn_branch != 0) WMD1jesRelativeBaldn();
  if (WMD2jesRelativeBaldn_branch != 0) WMD2jesRelativeBaldn();
  if (WMD3jesRelativeBaldn_branch != 0) WMD3jesRelativeBaldn();
  if (WMD4jesRelativeBaldn_branch != 0) WMD4jesRelativeBaldn();
  if (NQGen0jesRelativeBaldn_branch != 0) NQGen0jesRelativeBaldn();
  if (NQGen1jesRelativeBaldn_branch != 0) NQGen1jesRelativeBaldn();
  if (NQGen2jesRelativeBaldn_branch != 0) NQGen2jesRelativeBaldn();
  if (NQGen3jesRelativeBaldn_branch != 0) NQGen3jesRelativeBaldn();
  if (NQGen4jesRelativeBaldn_branch != 0) NQGen4jesRelativeBaldn();
  if (NBGen0jesRelativeBaldn_branch != 0) NBGen0jesRelativeBaldn();
  if (NBGen1jesRelativeBaldn_branch != 0) NBGen1jesRelativeBaldn();
  if (NBGen2jesRelativeBaldn_branch != 0) NBGen2jesRelativeBaldn();
  if (NBGen3jesRelativeBaldn_branch != 0) NBGen3jesRelativeBaldn();
  if (NBGen4jesRelativeBaldn_branch != 0) NBGen4jesRelativeBaldn();
  if (NLGen0jesRelativeBaldn_branch != 0) NLGen0jesRelativeBaldn();
  if (NLGen1jesRelativeBaldn_branch != 0) NLGen1jesRelativeBaldn();
  if (NLGen2jesRelativeBaldn_branch != 0) NLGen2jesRelativeBaldn();
  if (NLGen3jesRelativeBaldn_branch != 0) NLGen3jesRelativeBaldn();
  if (NLGen4jesRelativeBaldn_branch != 0) NLGen4jesRelativeBaldn();
  if (NVQGen0jesRelativeBaldn_branch != 0) NVQGen0jesRelativeBaldn();
  if (NVQGen1jesRelativeBaldn_branch != 0) NVQGen1jesRelativeBaldn();
  if (NVQGen2jesRelativeBaldn_branch != 0) NVQGen2jesRelativeBaldn();
  if (NVQGen3jesRelativeBaldn_branch != 0) NVQGen3jesRelativeBaldn();
  if (NVQGen4jesRelativeBaldn_branch != 0) NVQGen4jesRelativeBaldn();
  if (NiFJjesRelativeBaldn_branch != 0) NiFJjesRelativeBaldn();
  if (iFJ0jesRelativeBaldn_branch != 0) iFJ0jesRelativeBaldn();
  if (iFJ1jesRelativeBaldn_branch != 0) iFJ1jesRelativeBaldn();
  if (iFJ2jesRelativeBaldn_branch != 0) iFJ2jesRelativeBaldn();
  if (iFJ3jesRelativeBaldn_branch != 0) iFJ3jesRelativeBaldn();
  if (iFJ4jesRelativeBaldn_branch != 0) iFJ4jesRelativeBaldn();
  if (iVMD0jesRelativeBaldn_branch != 0) iVMD0jesRelativeBaldn();
  if (iVMD1jesRelativeBaldn_branch != 0) iVMD1jesRelativeBaldn();
  if (iVMD2jesRelativeBaldn_branch != 0) iVMD2jesRelativeBaldn();
  if (iVMD3jesRelativeBaldn_branch != 0) iVMD3jesRelativeBaldn();
  if (iVMD4jesRelativeBaldn_branch != 0) iVMD4jesRelativeBaldn();
  if (iWMD0jesRelativeBaldn_branch != 0) iWMD0jesRelativeBaldn();
  if (iWMD1jesRelativeBaldn_branch != 0) iWMD1jesRelativeBaldn();
  if (iWMD2jesRelativeBaldn_branch != 0) iWMD2jesRelativeBaldn();
  if (iWMD3jesRelativeBaldn_branch != 0) iWMD3jesRelativeBaldn();
  if (iWMD4jesRelativeBaldn_branch != 0) iWMD4jesRelativeBaldn();
  if (METjesRelativeBaldn_branch != 0) METjesRelativeBaldn();
  if (NujesRelativeBaldn_branch != 0) NujesRelativeBaldn();
  if (NJjesRelativeBaldn_branch != 0) NJjesRelativeBaldn();
  if (NbLoosejesRelativeBaldn_branch != 0) NbLoosejesRelativeBaldn();
  if (NbMediumjesRelativeBaldn_branch != 0) NbMediumjesRelativeBaldn();
  if (NbTightjesRelativeBaldn_branch != 0) NbTightjesRelativeBaldn();
  if (NoORNbLoosejesRelativeBaldn_branch != 0) NoORNbLoosejesRelativeBaldn();
  if (NoORNbMediumjesRelativeBaldn_branch != 0) NoORNbMediumjesRelativeBaldn();
  if (NoORNbTightjesRelativeBaldn_branch != 0) NoORNbTightjesRelativeBaldn();
  if (J0jesRelativeBaldn_branch != 0) J0jesRelativeBaldn();
  if (J1jesRelativeBaldn_branch != 0) J1jesRelativeBaldn();
  if (J2jesRelativeBaldn_branch != 0) J2jesRelativeBaldn();
  if (J3jesRelativeBaldn_branch != 0) J3jesRelativeBaldn();
  if (J4jesRelativeBaldn_branch != 0) J4jesRelativeBaldn();
  if (J5jesRelativeBaldn_branch != 0) J5jesRelativeBaldn();
  if (J6jesRelativeBaldn_branch != 0) J6jesRelativeBaldn();
  if (J7jesRelativeBaldn_branch != 0) J7jesRelativeBaldn();
  if (NQJGenjesRelativeBaldn_branch != 0) NQJGenjesRelativeBaldn();
  if (NBJGenjesRelativeBaldn_branch != 0) NBJGenjesRelativeBaldn();
  if (NLJGenjesRelativeBaldn_branch != 0) NLJGenjesRelativeBaldn();
  if (MVVXjesRelativeBaldn_branch != 0) MVVXjesRelativeBaldn();
  if (PtVVXjesRelativeBaldn_branch != 0) PtVVXjesRelativeBaldn();
  if (HTjesRelativeBaldn_branch != 0) HTjesRelativeBaldn();
  if (HTJjesRelativeBaldn_branch != 0) HTJjesRelativeBaldn();
  if (HTFJjesRelativeBaldn_branch != 0) HTFJjesRelativeBaldn();
  if (SumPtFJjesRelativeBaldn_branch != 0) SumPtFJjesRelativeBaldn();
  if (SumPtJjesRelativeBaldn_branch != 0) SumPtJjesRelativeBaldn();
  if (JsjesRelativeSampleup_branch != 0) JsjesRelativeSampleup();
  if (NFJjesRelativeSampleup_branch != 0) NFJjesRelativeSampleup();
  if (FJ0jesRelativeSampleup_branch != 0) FJ0jesRelativeSampleup();
  if (FJ1jesRelativeSampleup_branch != 0) FJ1jesRelativeSampleup();
  if (FJ2jesRelativeSampleup_branch != 0) FJ2jesRelativeSampleup();
  if (FJ3jesRelativeSampleup_branch != 0) FJ3jesRelativeSampleup();
  if (FJ4jesRelativeSampleup_branch != 0) FJ4jesRelativeSampleup();
  if (VMD0jesRelativeSampleup_branch != 0) VMD0jesRelativeSampleup();
  if (VMD1jesRelativeSampleup_branch != 0) VMD1jesRelativeSampleup();
  if (VMD2jesRelativeSampleup_branch != 0) VMD2jesRelativeSampleup();
  if (VMD3jesRelativeSampleup_branch != 0) VMD3jesRelativeSampleup();
  if (VMD4jesRelativeSampleup_branch != 0) VMD4jesRelativeSampleup();
  if (WMD0jesRelativeSampleup_branch != 0) WMD0jesRelativeSampleup();
  if (WMD1jesRelativeSampleup_branch != 0) WMD1jesRelativeSampleup();
  if (WMD2jesRelativeSampleup_branch != 0) WMD2jesRelativeSampleup();
  if (WMD3jesRelativeSampleup_branch != 0) WMD3jesRelativeSampleup();
  if (WMD4jesRelativeSampleup_branch != 0) WMD4jesRelativeSampleup();
  if (NQGen0jesRelativeSampleup_branch != 0) NQGen0jesRelativeSampleup();
  if (NQGen1jesRelativeSampleup_branch != 0) NQGen1jesRelativeSampleup();
  if (NQGen2jesRelativeSampleup_branch != 0) NQGen2jesRelativeSampleup();
  if (NQGen3jesRelativeSampleup_branch != 0) NQGen3jesRelativeSampleup();
  if (NQGen4jesRelativeSampleup_branch != 0) NQGen4jesRelativeSampleup();
  if (NBGen0jesRelativeSampleup_branch != 0) NBGen0jesRelativeSampleup();
  if (NBGen1jesRelativeSampleup_branch != 0) NBGen1jesRelativeSampleup();
  if (NBGen2jesRelativeSampleup_branch != 0) NBGen2jesRelativeSampleup();
  if (NBGen3jesRelativeSampleup_branch != 0) NBGen3jesRelativeSampleup();
  if (NBGen4jesRelativeSampleup_branch != 0) NBGen4jesRelativeSampleup();
  if (NLGen0jesRelativeSampleup_branch != 0) NLGen0jesRelativeSampleup();
  if (NLGen1jesRelativeSampleup_branch != 0) NLGen1jesRelativeSampleup();
  if (NLGen2jesRelativeSampleup_branch != 0) NLGen2jesRelativeSampleup();
  if (NLGen3jesRelativeSampleup_branch != 0) NLGen3jesRelativeSampleup();
  if (NLGen4jesRelativeSampleup_branch != 0) NLGen4jesRelativeSampleup();
  if (NVQGen0jesRelativeSampleup_branch != 0) NVQGen0jesRelativeSampleup();
  if (NVQGen1jesRelativeSampleup_branch != 0) NVQGen1jesRelativeSampleup();
  if (NVQGen2jesRelativeSampleup_branch != 0) NVQGen2jesRelativeSampleup();
  if (NVQGen3jesRelativeSampleup_branch != 0) NVQGen3jesRelativeSampleup();
  if (NVQGen4jesRelativeSampleup_branch != 0) NVQGen4jesRelativeSampleup();
  if (NiFJjesRelativeSampleup_branch != 0) NiFJjesRelativeSampleup();
  if (iFJ0jesRelativeSampleup_branch != 0) iFJ0jesRelativeSampleup();
  if (iFJ1jesRelativeSampleup_branch != 0) iFJ1jesRelativeSampleup();
  if (iFJ2jesRelativeSampleup_branch != 0) iFJ2jesRelativeSampleup();
  if (iFJ3jesRelativeSampleup_branch != 0) iFJ3jesRelativeSampleup();
  if (iFJ4jesRelativeSampleup_branch != 0) iFJ4jesRelativeSampleup();
  if (iVMD0jesRelativeSampleup_branch != 0) iVMD0jesRelativeSampleup();
  if (iVMD1jesRelativeSampleup_branch != 0) iVMD1jesRelativeSampleup();
  if (iVMD2jesRelativeSampleup_branch != 0) iVMD2jesRelativeSampleup();
  if (iVMD3jesRelativeSampleup_branch != 0) iVMD3jesRelativeSampleup();
  if (iVMD4jesRelativeSampleup_branch != 0) iVMD4jesRelativeSampleup();
  if (iWMD0jesRelativeSampleup_branch != 0) iWMD0jesRelativeSampleup();
  if (iWMD1jesRelativeSampleup_branch != 0) iWMD1jesRelativeSampleup();
  if (iWMD2jesRelativeSampleup_branch != 0) iWMD2jesRelativeSampleup();
  if (iWMD3jesRelativeSampleup_branch != 0) iWMD3jesRelativeSampleup();
  if (iWMD4jesRelativeSampleup_branch != 0) iWMD4jesRelativeSampleup();
  if (METjesRelativeSampleup_branch != 0) METjesRelativeSampleup();
  if (NujesRelativeSampleup_branch != 0) NujesRelativeSampleup();
  if (NJjesRelativeSampleup_branch != 0) NJjesRelativeSampleup();
  if (NbLoosejesRelativeSampleup_branch != 0) NbLoosejesRelativeSampleup();
  if (NbMediumjesRelativeSampleup_branch != 0) NbMediumjesRelativeSampleup();
  if (NbTightjesRelativeSampleup_branch != 0) NbTightjesRelativeSampleup();
  if (NoORNbLoosejesRelativeSampleup_branch != 0) NoORNbLoosejesRelativeSampleup();
  if (NoORNbMediumjesRelativeSampleup_branch != 0) NoORNbMediumjesRelativeSampleup();
  if (NoORNbTightjesRelativeSampleup_branch != 0) NoORNbTightjesRelativeSampleup();
  if (J0jesRelativeSampleup_branch != 0) J0jesRelativeSampleup();
  if (J1jesRelativeSampleup_branch != 0) J1jesRelativeSampleup();
  if (J2jesRelativeSampleup_branch != 0) J2jesRelativeSampleup();
  if (J3jesRelativeSampleup_branch != 0) J3jesRelativeSampleup();
  if (J4jesRelativeSampleup_branch != 0) J4jesRelativeSampleup();
  if (J5jesRelativeSampleup_branch != 0) J5jesRelativeSampleup();
  if (J6jesRelativeSampleup_branch != 0) J6jesRelativeSampleup();
  if (J7jesRelativeSampleup_branch != 0) J7jesRelativeSampleup();
  if (NQJGenjesRelativeSampleup_branch != 0) NQJGenjesRelativeSampleup();
  if (NBJGenjesRelativeSampleup_branch != 0) NBJGenjesRelativeSampleup();
  if (NLJGenjesRelativeSampleup_branch != 0) NLJGenjesRelativeSampleup();
  if (MVVXjesRelativeSampleup_branch != 0) MVVXjesRelativeSampleup();
  if (PtVVXjesRelativeSampleup_branch != 0) PtVVXjesRelativeSampleup();
  if (HTjesRelativeSampleup_branch != 0) HTjesRelativeSampleup();
  if (HTJjesRelativeSampleup_branch != 0) HTJjesRelativeSampleup();
  if (HTFJjesRelativeSampleup_branch != 0) HTFJjesRelativeSampleup();
  if (SumPtFJjesRelativeSampleup_branch != 0) SumPtFJjesRelativeSampleup();
  if (SumPtJjesRelativeSampleup_branch != 0) SumPtJjesRelativeSampleup();
  if (JsjesRelativeSampledn_branch != 0) JsjesRelativeSampledn();
  if (NFJjesRelativeSampledn_branch != 0) NFJjesRelativeSampledn();
  if (FJ0jesRelativeSampledn_branch != 0) FJ0jesRelativeSampledn();
  if (FJ1jesRelativeSampledn_branch != 0) FJ1jesRelativeSampledn();
  if (FJ2jesRelativeSampledn_branch != 0) FJ2jesRelativeSampledn();
  if (FJ3jesRelativeSampledn_branch != 0) FJ3jesRelativeSampledn();
  if (FJ4jesRelativeSampledn_branch != 0) FJ4jesRelativeSampledn();
  if (VMD0jesRelativeSampledn_branch != 0) VMD0jesRelativeSampledn();
  if (VMD1jesRelativeSampledn_branch != 0) VMD1jesRelativeSampledn();
  if (VMD2jesRelativeSampledn_branch != 0) VMD2jesRelativeSampledn();
  if (VMD3jesRelativeSampledn_branch != 0) VMD3jesRelativeSampledn();
  if (VMD4jesRelativeSampledn_branch != 0) VMD4jesRelativeSampledn();
  if (WMD0jesRelativeSampledn_branch != 0) WMD0jesRelativeSampledn();
  if (WMD1jesRelativeSampledn_branch != 0) WMD1jesRelativeSampledn();
  if (WMD2jesRelativeSampledn_branch != 0) WMD2jesRelativeSampledn();
  if (WMD3jesRelativeSampledn_branch != 0) WMD3jesRelativeSampledn();
  if (WMD4jesRelativeSampledn_branch != 0) WMD4jesRelativeSampledn();
  if (NQGen0jesRelativeSampledn_branch != 0) NQGen0jesRelativeSampledn();
  if (NQGen1jesRelativeSampledn_branch != 0) NQGen1jesRelativeSampledn();
  if (NQGen2jesRelativeSampledn_branch != 0) NQGen2jesRelativeSampledn();
  if (NQGen3jesRelativeSampledn_branch != 0) NQGen3jesRelativeSampledn();
  if (NQGen4jesRelativeSampledn_branch != 0) NQGen4jesRelativeSampledn();
  if (NBGen0jesRelativeSampledn_branch != 0) NBGen0jesRelativeSampledn();
  if (NBGen1jesRelativeSampledn_branch != 0) NBGen1jesRelativeSampledn();
  if (NBGen2jesRelativeSampledn_branch != 0) NBGen2jesRelativeSampledn();
  if (NBGen3jesRelativeSampledn_branch != 0) NBGen3jesRelativeSampledn();
  if (NBGen4jesRelativeSampledn_branch != 0) NBGen4jesRelativeSampledn();
  if (NLGen0jesRelativeSampledn_branch != 0) NLGen0jesRelativeSampledn();
  if (NLGen1jesRelativeSampledn_branch != 0) NLGen1jesRelativeSampledn();
  if (NLGen2jesRelativeSampledn_branch != 0) NLGen2jesRelativeSampledn();
  if (NLGen3jesRelativeSampledn_branch != 0) NLGen3jesRelativeSampledn();
  if (NLGen4jesRelativeSampledn_branch != 0) NLGen4jesRelativeSampledn();
  if (NVQGen0jesRelativeSampledn_branch != 0) NVQGen0jesRelativeSampledn();
  if (NVQGen1jesRelativeSampledn_branch != 0) NVQGen1jesRelativeSampledn();
  if (NVQGen2jesRelativeSampledn_branch != 0) NVQGen2jesRelativeSampledn();
  if (NVQGen3jesRelativeSampledn_branch != 0) NVQGen3jesRelativeSampledn();
  if (NVQGen4jesRelativeSampledn_branch != 0) NVQGen4jesRelativeSampledn();
  if (NiFJjesRelativeSampledn_branch != 0) NiFJjesRelativeSampledn();
  if (iFJ0jesRelativeSampledn_branch != 0) iFJ0jesRelativeSampledn();
  if (iFJ1jesRelativeSampledn_branch != 0) iFJ1jesRelativeSampledn();
  if (iFJ2jesRelativeSampledn_branch != 0) iFJ2jesRelativeSampledn();
  if (iFJ3jesRelativeSampledn_branch != 0) iFJ3jesRelativeSampledn();
  if (iFJ4jesRelativeSampledn_branch != 0) iFJ4jesRelativeSampledn();
  if (iVMD0jesRelativeSampledn_branch != 0) iVMD0jesRelativeSampledn();
  if (iVMD1jesRelativeSampledn_branch != 0) iVMD1jesRelativeSampledn();
  if (iVMD2jesRelativeSampledn_branch != 0) iVMD2jesRelativeSampledn();
  if (iVMD3jesRelativeSampledn_branch != 0) iVMD3jesRelativeSampledn();
  if (iVMD4jesRelativeSampledn_branch != 0) iVMD4jesRelativeSampledn();
  if (iWMD0jesRelativeSampledn_branch != 0) iWMD0jesRelativeSampledn();
  if (iWMD1jesRelativeSampledn_branch != 0) iWMD1jesRelativeSampledn();
  if (iWMD2jesRelativeSampledn_branch != 0) iWMD2jesRelativeSampledn();
  if (iWMD3jesRelativeSampledn_branch != 0) iWMD3jesRelativeSampledn();
  if (iWMD4jesRelativeSampledn_branch != 0) iWMD4jesRelativeSampledn();
  if (METjesRelativeSampledn_branch != 0) METjesRelativeSampledn();
  if (NujesRelativeSampledn_branch != 0) NujesRelativeSampledn();
  if (NJjesRelativeSampledn_branch != 0) NJjesRelativeSampledn();
  if (NbLoosejesRelativeSampledn_branch != 0) NbLoosejesRelativeSampledn();
  if (NbMediumjesRelativeSampledn_branch != 0) NbMediumjesRelativeSampledn();
  if (NbTightjesRelativeSampledn_branch != 0) NbTightjesRelativeSampledn();
  if (NoORNbLoosejesRelativeSampledn_branch != 0) NoORNbLoosejesRelativeSampledn();
  if (NoORNbMediumjesRelativeSampledn_branch != 0) NoORNbMediumjesRelativeSampledn();
  if (NoORNbTightjesRelativeSampledn_branch != 0) NoORNbTightjesRelativeSampledn();
  if (J0jesRelativeSampledn_branch != 0) J0jesRelativeSampledn();
  if (J1jesRelativeSampledn_branch != 0) J1jesRelativeSampledn();
  if (J2jesRelativeSampledn_branch != 0) J2jesRelativeSampledn();
  if (J3jesRelativeSampledn_branch != 0) J3jesRelativeSampledn();
  if (J4jesRelativeSampledn_branch != 0) J4jesRelativeSampledn();
  if (J5jesRelativeSampledn_branch != 0) J5jesRelativeSampledn();
  if (J6jesRelativeSampledn_branch != 0) J6jesRelativeSampledn();
  if (J7jesRelativeSampledn_branch != 0) J7jesRelativeSampledn();
  if (NQJGenjesRelativeSampledn_branch != 0) NQJGenjesRelativeSampledn();
  if (NBJGenjesRelativeSampledn_branch != 0) NBJGenjesRelativeSampledn();
  if (NLJGenjesRelativeSampledn_branch != 0) NLJGenjesRelativeSampledn();
  if (MVVXjesRelativeSampledn_branch != 0) MVVXjesRelativeSampledn();
  if (PtVVXjesRelativeSampledn_branch != 0) PtVVXjesRelativeSampledn();
  if (HTjesRelativeSampledn_branch != 0) HTjesRelativeSampledn();
  if (HTJjesRelativeSampledn_branch != 0) HTJjesRelativeSampledn();
  if (HTFJjesRelativeSampledn_branch != 0) HTFJjesRelativeSampledn();
  if (SumPtFJjesRelativeSampledn_branch != 0) SumPtFJjesRelativeSampledn();
  if (SumPtJjesRelativeSampledn_branch != 0) SumPtJjesRelativeSampledn();
  if (JsjesRelativeFSRup_branch != 0) JsjesRelativeFSRup();
  if (NFJjesRelativeFSRup_branch != 0) NFJjesRelativeFSRup();
  if (FJ0jesRelativeFSRup_branch != 0) FJ0jesRelativeFSRup();
  if (FJ1jesRelativeFSRup_branch != 0) FJ1jesRelativeFSRup();
  if (FJ2jesRelativeFSRup_branch != 0) FJ2jesRelativeFSRup();
  if (FJ3jesRelativeFSRup_branch != 0) FJ3jesRelativeFSRup();
  if (FJ4jesRelativeFSRup_branch != 0) FJ4jesRelativeFSRup();
  if (VMD0jesRelativeFSRup_branch != 0) VMD0jesRelativeFSRup();
  if (VMD1jesRelativeFSRup_branch != 0) VMD1jesRelativeFSRup();
  if (VMD2jesRelativeFSRup_branch != 0) VMD2jesRelativeFSRup();
  if (VMD3jesRelativeFSRup_branch != 0) VMD3jesRelativeFSRup();
  if (VMD4jesRelativeFSRup_branch != 0) VMD4jesRelativeFSRup();
  if (WMD0jesRelativeFSRup_branch != 0) WMD0jesRelativeFSRup();
  if (WMD1jesRelativeFSRup_branch != 0) WMD1jesRelativeFSRup();
  if (WMD2jesRelativeFSRup_branch != 0) WMD2jesRelativeFSRup();
  if (WMD3jesRelativeFSRup_branch != 0) WMD3jesRelativeFSRup();
  if (WMD4jesRelativeFSRup_branch != 0) WMD4jesRelativeFSRup();
  if (NQGen0jesRelativeFSRup_branch != 0) NQGen0jesRelativeFSRup();
  if (NQGen1jesRelativeFSRup_branch != 0) NQGen1jesRelativeFSRup();
  if (NQGen2jesRelativeFSRup_branch != 0) NQGen2jesRelativeFSRup();
  if (NQGen3jesRelativeFSRup_branch != 0) NQGen3jesRelativeFSRup();
  if (NQGen4jesRelativeFSRup_branch != 0) NQGen4jesRelativeFSRup();
  if (NBGen0jesRelativeFSRup_branch != 0) NBGen0jesRelativeFSRup();
  if (NBGen1jesRelativeFSRup_branch != 0) NBGen1jesRelativeFSRup();
  if (NBGen2jesRelativeFSRup_branch != 0) NBGen2jesRelativeFSRup();
  if (NBGen3jesRelativeFSRup_branch != 0) NBGen3jesRelativeFSRup();
  if (NBGen4jesRelativeFSRup_branch != 0) NBGen4jesRelativeFSRup();
  if (NLGen0jesRelativeFSRup_branch != 0) NLGen0jesRelativeFSRup();
  if (NLGen1jesRelativeFSRup_branch != 0) NLGen1jesRelativeFSRup();
  if (NLGen2jesRelativeFSRup_branch != 0) NLGen2jesRelativeFSRup();
  if (NLGen3jesRelativeFSRup_branch != 0) NLGen3jesRelativeFSRup();
  if (NLGen4jesRelativeFSRup_branch != 0) NLGen4jesRelativeFSRup();
  if (NVQGen0jesRelativeFSRup_branch != 0) NVQGen0jesRelativeFSRup();
  if (NVQGen1jesRelativeFSRup_branch != 0) NVQGen1jesRelativeFSRup();
  if (NVQGen2jesRelativeFSRup_branch != 0) NVQGen2jesRelativeFSRup();
  if (NVQGen3jesRelativeFSRup_branch != 0) NVQGen3jesRelativeFSRup();
  if (NVQGen4jesRelativeFSRup_branch != 0) NVQGen4jesRelativeFSRup();
  if (NiFJjesRelativeFSRup_branch != 0) NiFJjesRelativeFSRup();
  if (iFJ0jesRelativeFSRup_branch != 0) iFJ0jesRelativeFSRup();
  if (iFJ1jesRelativeFSRup_branch != 0) iFJ1jesRelativeFSRup();
  if (iFJ2jesRelativeFSRup_branch != 0) iFJ2jesRelativeFSRup();
  if (iFJ3jesRelativeFSRup_branch != 0) iFJ3jesRelativeFSRup();
  if (iFJ4jesRelativeFSRup_branch != 0) iFJ4jesRelativeFSRup();
  if (iVMD0jesRelativeFSRup_branch != 0) iVMD0jesRelativeFSRup();
  if (iVMD1jesRelativeFSRup_branch != 0) iVMD1jesRelativeFSRup();
  if (iVMD2jesRelativeFSRup_branch != 0) iVMD2jesRelativeFSRup();
  if (iVMD3jesRelativeFSRup_branch != 0) iVMD3jesRelativeFSRup();
  if (iVMD4jesRelativeFSRup_branch != 0) iVMD4jesRelativeFSRup();
  if (iWMD0jesRelativeFSRup_branch != 0) iWMD0jesRelativeFSRup();
  if (iWMD1jesRelativeFSRup_branch != 0) iWMD1jesRelativeFSRup();
  if (iWMD2jesRelativeFSRup_branch != 0) iWMD2jesRelativeFSRup();
  if (iWMD3jesRelativeFSRup_branch != 0) iWMD3jesRelativeFSRup();
  if (iWMD4jesRelativeFSRup_branch != 0) iWMD4jesRelativeFSRup();
  if (METjesRelativeFSRup_branch != 0) METjesRelativeFSRup();
  if (NujesRelativeFSRup_branch != 0) NujesRelativeFSRup();
  if (NJjesRelativeFSRup_branch != 0) NJjesRelativeFSRup();
  if (NbLoosejesRelativeFSRup_branch != 0) NbLoosejesRelativeFSRup();
  if (NbMediumjesRelativeFSRup_branch != 0) NbMediumjesRelativeFSRup();
  if (NbTightjesRelativeFSRup_branch != 0) NbTightjesRelativeFSRup();
  if (NoORNbLoosejesRelativeFSRup_branch != 0) NoORNbLoosejesRelativeFSRup();
  if (NoORNbMediumjesRelativeFSRup_branch != 0) NoORNbMediumjesRelativeFSRup();
  if (NoORNbTightjesRelativeFSRup_branch != 0) NoORNbTightjesRelativeFSRup();
  if (J0jesRelativeFSRup_branch != 0) J0jesRelativeFSRup();
  if (J1jesRelativeFSRup_branch != 0) J1jesRelativeFSRup();
  if (J2jesRelativeFSRup_branch != 0) J2jesRelativeFSRup();
  if (J3jesRelativeFSRup_branch != 0) J3jesRelativeFSRup();
  if (J4jesRelativeFSRup_branch != 0) J4jesRelativeFSRup();
  if (J5jesRelativeFSRup_branch != 0) J5jesRelativeFSRup();
  if (J6jesRelativeFSRup_branch != 0) J6jesRelativeFSRup();
  if (J7jesRelativeFSRup_branch != 0) J7jesRelativeFSRup();
  if (NQJGenjesRelativeFSRup_branch != 0) NQJGenjesRelativeFSRup();
  if (NBJGenjesRelativeFSRup_branch != 0) NBJGenjesRelativeFSRup();
  if (NLJGenjesRelativeFSRup_branch != 0) NLJGenjesRelativeFSRup();
  if (MVVXjesRelativeFSRup_branch != 0) MVVXjesRelativeFSRup();
  if (PtVVXjesRelativeFSRup_branch != 0) PtVVXjesRelativeFSRup();
  if (HTjesRelativeFSRup_branch != 0) HTjesRelativeFSRup();
  if (HTJjesRelativeFSRup_branch != 0) HTJjesRelativeFSRup();
  if (HTFJjesRelativeFSRup_branch != 0) HTFJjesRelativeFSRup();
  if (SumPtFJjesRelativeFSRup_branch != 0) SumPtFJjesRelativeFSRup();
  if (SumPtJjesRelativeFSRup_branch != 0) SumPtJjesRelativeFSRup();
  if (JsjesRelativeFSRdn_branch != 0) JsjesRelativeFSRdn();
  if (NFJjesRelativeFSRdn_branch != 0) NFJjesRelativeFSRdn();
  if (FJ0jesRelativeFSRdn_branch != 0) FJ0jesRelativeFSRdn();
  if (FJ1jesRelativeFSRdn_branch != 0) FJ1jesRelativeFSRdn();
  if (FJ2jesRelativeFSRdn_branch != 0) FJ2jesRelativeFSRdn();
  if (FJ3jesRelativeFSRdn_branch != 0) FJ3jesRelativeFSRdn();
  if (FJ4jesRelativeFSRdn_branch != 0) FJ4jesRelativeFSRdn();
  if (VMD0jesRelativeFSRdn_branch != 0) VMD0jesRelativeFSRdn();
  if (VMD1jesRelativeFSRdn_branch != 0) VMD1jesRelativeFSRdn();
  if (VMD2jesRelativeFSRdn_branch != 0) VMD2jesRelativeFSRdn();
  if (VMD3jesRelativeFSRdn_branch != 0) VMD3jesRelativeFSRdn();
  if (VMD4jesRelativeFSRdn_branch != 0) VMD4jesRelativeFSRdn();
  if (WMD0jesRelativeFSRdn_branch != 0) WMD0jesRelativeFSRdn();
  if (WMD1jesRelativeFSRdn_branch != 0) WMD1jesRelativeFSRdn();
  if (WMD2jesRelativeFSRdn_branch != 0) WMD2jesRelativeFSRdn();
  if (WMD3jesRelativeFSRdn_branch != 0) WMD3jesRelativeFSRdn();
  if (WMD4jesRelativeFSRdn_branch != 0) WMD4jesRelativeFSRdn();
  if (NQGen0jesRelativeFSRdn_branch != 0) NQGen0jesRelativeFSRdn();
  if (NQGen1jesRelativeFSRdn_branch != 0) NQGen1jesRelativeFSRdn();
  if (NQGen2jesRelativeFSRdn_branch != 0) NQGen2jesRelativeFSRdn();
  if (NQGen3jesRelativeFSRdn_branch != 0) NQGen3jesRelativeFSRdn();
  if (NQGen4jesRelativeFSRdn_branch != 0) NQGen4jesRelativeFSRdn();
  if (NBGen0jesRelativeFSRdn_branch != 0) NBGen0jesRelativeFSRdn();
  if (NBGen1jesRelativeFSRdn_branch != 0) NBGen1jesRelativeFSRdn();
  if (NBGen2jesRelativeFSRdn_branch != 0) NBGen2jesRelativeFSRdn();
  if (NBGen3jesRelativeFSRdn_branch != 0) NBGen3jesRelativeFSRdn();
  if (NBGen4jesRelativeFSRdn_branch != 0) NBGen4jesRelativeFSRdn();
  if (NLGen0jesRelativeFSRdn_branch != 0) NLGen0jesRelativeFSRdn();
  if (NLGen1jesRelativeFSRdn_branch != 0) NLGen1jesRelativeFSRdn();
  if (NLGen2jesRelativeFSRdn_branch != 0) NLGen2jesRelativeFSRdn();
  if (NLGen3jesRelativeFSRdn_branch != 0) NLGen3jesRelativeFSRdn();
  if (NLGen4jesRelativeFSRdn_branch != 0) NLGen4jesRelativeFSRdn();
  if (NVQGen0jesRelativeFSRdn_branch != 0) NVQGen0jesRelativeFSRdn();
  if (NVQGen1jesRelativeFSRdn_branch != 0) NVQGen1jesRelativeFSRdn();
  if (NVQGen2jesRelativeFSRdn_branch != 0) NVQGen2jesRelativeFSRdn();
  if (NVQGen3jesRelativeFSRdn_branch != 0) NVQGen3jesRelativeFSRdn();
  if (NVQGen4jesRelativeFSRdn_branch != 0) NVQGen4jesRelativeFSRdn();
  if (NiFJjesRelativeFSRdn_branch != 0) NiFJjesRelativeFSRdn();
  if (iFJ0jesRelativeFSRdn_branch != 0) iFJ0jesRelativeFSRdn();
  if (iFJ1jesRelativeFSRdn_branch != 0) iFJ1jesRelativeFSRdn();
  if (iFJ2jesRelativeFSRdn_branch != 0) iFJ2jesRelativeFSRdn();
  if (iFJ3jesRelativeFSRdn_branch != 0) iFJ3jesRelativeFSRdn();
  if (iFJ4jesRelativeFSRdn_branch != 0) iFJ4jesRelativeFSRdn();
  if (iVMD0jesRelativeFSRdn_branch != 0) iVMD0jesRelativeFSRdn();
  if (iVMD1jesRelativeFSRdn_branch != 0) iVMD1jesRelativeFSRdn();
  if (iVMD2jesRelativeFSRdn_branch != 0) iVMD2jesRelativeFSRdn();
  if (iVMD3jesRelativeFSRdn_branch != 0) iVMD3jesRelativeFSRdn();
  if (iVMD4jesRelativeFSRdn_branch != 0) iVMD4jesRelativeFSRdn();
  if (iWMD0jesRelativeFSRdn_branch != 0) iWMD0jesRelativeFSRdn();
  if (iWMD1jesRelativeFSRdn_branch != 0) iWMD1jesRelativeFSRdn();
  if (iWMD2jesRelativeFSRdn_branch != 0) iWMD2jesRelativeFSRdn();
  if (iWMD3jesRelativeFSRdn_branch != 0) iWMD3jesRelativeFSRdn();
  if (iWMD4jesRelativeFSRdn_branch != 0) iWMD4jesRelativeFSRdn();
  if (METjesRelativeFSRdn_branch != 0) METjesRelativeFSRdn();
  if (NujesRelativeFSRdn_branch != 0) NujesRelativeFSRdn();
  if (NJjesRelativeFSRdn_branch != 0) NJjesRelativeFSRdn();
  if (NbLoosejesRelativeFSRdn_branch != 0) NbLoosejesRelativeFSRdn();
  if (NbMediumjesRelativeFSRdn_branch != 0) NbMediumjesRelativeFSRdn();
  if (NbTightjesRelativeFSRdn_branch != 0) NbTightjesRelativeFSRdn();
  if (NoORNbLoosejesRelativeFSRdn_branch != 0) NoORNbLoosejesRelativeFSRdn();
  if (NoORNbMediumjesRelativeFSRdn_branch != 0) NoORNbMediumjesRelativeFSRdn();
  if (NoORNbTightjesRelativeFSRdn_branch != 0) NoORNbTightjesRelativeFSRdn();
  if (J0jesRelativeFSRdn_branch != 0) J0jesRelativeFSRdn();
  if (J1jesRelativeFSRdn_branch != 0) J1jesRelativeFSRdn();
  if (J2jesRelativeFSRdn_branch != 0) J2jesRelativeFSRdn();
  if (J3jesRelativeFSRdn_branch != 0) J3jesRelativeFSRdn();
  if (J4jesRelativeFSRdn_branch != 0) J4jesRelativeFSRdn();
  if (J5jesRelativeFSRdn_branch != 0) J5jesRelativeFSRdn();
  if (J6jesRelativeFSRdn_branch != 0) J6jesRelativeFSRdn();
  if (J7jesRelativeFSRdn_branch != 0) J7jesRelativeFSRdn();
  if (NQJGenjesRelativeFSRdn_branch != 0) NQJGenjesRelativeFSRdn();
  if (NBJGenjesRelativeFSRdn_branch != 0) NBJGenjesRelativeFSRdn();
  if (NLJGenjesRelativeFSRdn_branch != 0) NLJGenjesRelativeFSRdn();
  if (MVVXjesRelativeFSRdn_branch != 0) MVVXjesRelativeFSRdn();
  if (PtVVXjesRelativeFSRdn_branch != 0) PtVVXjesRelativeFSRdn();
  if (HTjesRelativeFSRdn_branch != 0) HTjesRelativeFSRdn();
  if (HTJjesRelativeFSRdn_branch != 0) HTJjesRelativeFSRdn();
  if (HTFJjesRelativeFSRdn_branch != 0) HTFJjesRelativeFSRdn();
  if (SumPtFJjesRelativeFSRdn_branch != 0) SumPtFJjesRelativeFSRdn();
  if (SumPtJjesRelativeFSRdn_branch != 0) SumPtJjesRelativeFSRdn();
  if (JsjesRelativeStatFSRup_branch != 0) JsjesRelativeStatFSRup();
  if (NFJjesRelativeStatFSRup_branch != 0) NFJjesRelativeStatFSRup();
  if (FJ0jesRelativeStatFSRup_branch != 0) FJ0jesRelativeStatFSRup();
  if (FJ1jesRelativeStatFSRup_branch != 0) FJ1jesRelativeStatFSRup();
  if (FJ2jesRelativeStatFSRup_branch != 0) FJ2jesRelativeStatFSRup();
  if (FJ3jesRelativeStatFSRup_branch != 0) FJ3jesRelativeStatFSRup();
  if (FJ4jesRelativeStatFSRup_branch != 0) FJ4jesRelativeStatFSRup();
  if (VMD0jesRelativeStatFSRup_branch != 0) VMD0jesRelativeStatFSRup();
  if (VMD1jesRelativeStatFSRup_branch != 0) VMD1jesRelativeStatFSRup();
  if (VMD2jesRelativeStatFSRup_branch != 0) VMD2jesRelativeStatFSRup();
  if (VMD3jesRelativeStatFSRup_branch != 0) VMD3jesRelativeStatFSRup();
  if (VMD4jesRelativeStatFSRup_branch != 0) VMD4jesRelativeStatFSRup();
  if (WMD0jesRelativeStatFSRup_branch != 0) WMD0jesRelativeStatFSRup();
  if (WMD1jesRelativeStatFSRup_branch != 0) WMD1jesRelativeStatFSRup();
  if (WMD2jesRelativeStatFSRup_branch != 0) WMD2jesRelativeStatFSRup();
  if (WMD3jesRelativeStatFSRup_branch != 0) WMD3jesRelativeStatFSRup();
  if (WMD4jesRelativeStatFSRup_branch != 0) WMD4jesRelativeStatFSRup();
  if (NQGen0jesRelativeStatFSRup_branch != 0) NQGen0jesRelativeStatFSRup();
  if (NQGen1jesRelativeStatFSRup_branch != 0) NQGen1jesRelativeStatFSRup();
  if (NQGen2jesRelativeStatFSRup_branch != 0) NQGen2jesRelativeStatFSRup();
  if (NQGen3jesRelativeStatFSRup_branch != 0) NQGen3jesRelativeStatFSRup();
  if (NQGen4jesRelativeStatFSRup_branch != 0) NQGen4jesRelativeStatFSRup();
  if (NBGen0jesRelativeStatFSRup_branch != 0) NBGen0jesRelativeStatFSRup();
  if (NBGen1jesRelativeStatFSRup_branch != 0) NBGen1jesRelativeStatFSRup();
  if (NBGen2jesRelativeStatFSRup_branch != 0) NBGen2jesRelativeStatFSRup();
  if (NBGen3jesRelativeStatFSRup_branch != 0) NBGen3jesRelativeStatFSRup();
  if (NBGen4jesRelativeStatFSRup_branch != 0) NBGen4jesRelativeStatFSRup();
  if (NLGen0jesRelativeStatFSRup_branch != 0) NLGen0jesRelativeStatFSRup();
  if (NLGen1jesRelativeStatFSRup_branch != 0) NLGen1jesRelativeStatFSRup();
  if (NLGen2jesRelativeStatFSRup_branch != 0) NLGen2jesRelativeStatFSRup();
  if (NLGen3jesRelativeStatFSRup_branch != 0) NLGen3jesRelativeStatFSRup();
  if (NLGen4jesRelativeStatFSRup_branch != 0) NLGen4jesRelativeStatFSRup();
  if (NVQGen0jesRelativeStatFSRup_branch != 0) NVQGen0jesRelativeStatFSRup();
  if (NVQGen1jesRelativeStatFSRup_branch != 0) NVQGen1jesRelativeStatFSRup();
  if (NVQGen2jesRelativeStatFSRup_branch != 0) NVQGen2jesRelativeStatFSRup();
  if (NVQGen3jesRelativeStatFSRup_branch != 0) NVQGen3jesRelativeStatFSRup();
  if (NVQGen4jesRelativeStatFSRup_branch != 0) NVQGen4jesRelativeStatFSRup();
  if (NiFJjesRelativeStatFSRup_branch != 0) NiFJjesRelativeStatFSRup();
  if (iFJ0jesRelativeStatFSRup_branch != 0) iFJ0jesRelativeStatFSRup();
  if (iFJ1jesRelativeStatFSRup_branch != 0) iFJ1jesRelativeStatFSRup();
  if (iFJ2jesRelativeStatFSRup_branch != 0) iFJ2jesRelativeStatFSRup();
  if (iFJ3jesRelativeStatFSRup_branch != 0) iFJ3jesRelativeStatFSRup();
  if (iFJ4jesRelativeStatFSRup_branch != 0) iFJ4jesRelativeStatFSRup();
  if (iVMD0jesRelativeStatFSRup_branch != 0) iVMD0jesRelativeStatFSRup();
  if (iVMD1jesRelativeStatFSRup_branch != 0) iVMD1jesRelativeStatFSRup();
  if (iVMD2jesRelativeStatFSRup_branch != 0) iVMD2jesRelativeStatFSRup();
  if (iVMD3jesRelativeStatFSRup_branch != 0) iVMD3jesRelativeStatFSRup();
  if (iVMD4jesRelativeStatFSRup_branch != 0) iVMD4jesRelativeStatFSRup();
  if (iWMD0jesRelativeStatFSRup_branch != 0) iWMD0jesRelativeStatFSRup();
  if (iWMD1jesRelativeStatFSRup_branch != 0) iWMD1jesRelativeStatFSRup();
  if (iWMD2jesRelativeStatFSRup_branch != 0) iWMD2jesRelativeStatFSRup();
  if (iWMD3jesRelativeStatFSRup_branch != 0) iWMD3jesRelativeStatFSRup();
  if (iWMD4jesRelativeStatFSRup_branch != 0) iWMD4jesRelativeStatFSRup();
  if (METjesRelativeStatFSRup_branch != 0) METjesRelativeStatFSRup();
  if (NujesRelativeStatFSRup_branch != 0) NujesRelativeStatFSRup();
  if (NJjesRelativeStatFSRup_branch != 0) NJjesRelativeStatFSRup();
  if (NbLoosejesRelativeStatFSRup_branch != 0) NbLoosejesRelativeStatFSRup();
  if (NbMediumjesRelativeStatFSRup_branch != 0) NbMediumjesRelativeStatFSRup();
  if (NbTightjesRelativeStatFSRup_branch != 0) NbTightjesRelativeStatFSRup();
  if (NoORNbLoosejesRelativeStatFSRup_branch != 0) NoORNbLoosejesRelativeStatFSRup();
  if (NoORNbMediumjesRelativeStatFSRup_branch != 0) NoORNbMediumjesRelativeStatFSRup();
  if (NoORNbTightjesRelativeStatFSRup_branch != 0) NoORNbTightjesRelativeStatFSRup();
  if (J0jesRelativeStatFSRup_branch != 0) J0jesRelativeStatFSRup();
  if (J1jesRelativeStatFSRup_branch != 0) J1jesRelativeStatFSRup();
  if (J2jesRelativeStatFSRup_branch != 0) J2jesRelativeStatFSRup();
  if (J3jesRelativeStatFSRup_branch != 0) J3jesRelativeStatFSRup();
  if (J4jesRelativeStatFSRup_branch != 0) J4jesRelativeStatFSRup();
  if (J5jesRelativeStatFSRup_branch != 0) J5jesRelativeStatFSRup();
  if (J6jesRelativeStatFSRup_branch != 0) J6jesRelativeStatFSRup();
  if (J7jesRelativeStatFSRup_branch != 0) J7jesRelativeStatFSRup();
  if (NQJGenjesRelativeStatFSRup_branch != 0) NQJGenjesRelativeStatFSRup();
  if (NBJGenjesRelativeStatFSRup_branch != 0) NBJGenjesRelativeStatFSRup();
  if (NLJGenjesRelativeStatFSRup_branch != 0) NLJGenjesRelativeStatFSRup();
  if (MVVXjesRelativeStatFSRup_branch != 0) MVVXjesRelativeStatFSRup();
  if (PtVVXjesRelativeStatFSRup_branch != 0) PtVVXjesRelativeStatFSRup();
  if (HTjesRelativeStatFSRup_branch != 0) HTjesRelativeStatFSRup();
  if (HTJjesRelativeStatFSRup_branch != 0) HTJjesRelativeStatFSRup();
  if (HTFJjesRelativeStatFSRup_branch != 0) HTFJjesRelativeStatFSRup();
  if (SumPtFJjesRelativeStatFSRup_branch != 0) SumPtFJjesRelativeStatFSRup();
  if (SumPtJjesRelativeStatFSRup_branch != 0) SumPtJjesRelativeStatFSRup();
  if (JsjesRelativeStatFSRdn_branch != 0) JsjesRelativeStatFSRdn();
  if (NFJjesRelativeStatFSRdn_branch != 0) NFJjesRelativeStatFSRdn();
  if (FJ0jesRelativeStatFSRdn_branch != 0) FJ0jesRelativeStatFSRdn();
  if (FJ1jesRelativeStatFSRdn_branch != 0) FJ1jesRelativeStatFSRdn();
  if (FJ2jesRelativeStatFSRdn_branch != 0) FJ2jesRelativeStatFSRdn();
  if (FJ3jesRelativeStatFSRdn_branch != 0) FJ3jesRelativeStatFSRdn();
  if (FJ4jesRelativeStatFSRdn_branch != 0) FJ4jesRelativeStatFSRdn();
  if (VMD0jesRelativeStatFSRdn_branch != 0) VMD0jesRelativeStatFSRdn();
  if (VMD1jesRelativeStatFSRdn_branch != 0) VMD1jesRelativeStatFSRdn();
  if (VMD2jesRelativeStatFSRdn_branch != 0) VMD2jesRelativeStatFSRdn();
  if (VMD3jesRelativeStatFSRdn_branch != 0) VMD3jesRelativeStatFSRdn();
  if (VMD4jesRelativeStatFSRdn_branch != 0) VMD4jesRelativeStatFSRdn();
  if (WMD0jesRelativeStatFSRdn_branch != 0) WMD0jesRelativeStatFSRdn();
  if (WMD1jesRelativeStatFSRdn_branch != 0) WMD1jesRelativeStatFSRdn();
  if (WMD2jesRelativeStatFSRdn_branch != 0) WMD2jesRelativeStatFSRdn();
  if (WMD3jesRelativeStatFSRdn_branch != 0) WMD3jesRelativeStatFSRdn();
  if (WMD4jesRelativeStatFSRdn_branch != 0) WMD4jesRelativeStatFSRdn();
  if (NQGen0jesRelativeStatFSRdn_branch != 0) NQGen0jesRelativeStatFSRdn();
  if (NQGen1jesRelativeStatFSRdn_branch != 0) NQGen1jesRelativeStatFSRdn();
  if (NQGen2jesRelativeStatFSRdn_branch != 0) NQGen2jesRelativeStatFSRdn();
  if (NQGen3jesRelativeStatFSRdn_branch != 0) NQGen3jesRelativeStatFSRdn();
  if (NQGen4jesRelativeStatFSRdn_branch != 0) NQGen4jesRelativeStatFSRdn();
  if (NBGen0jesRelativeStatFSRdn_branch != 0) NBGen0jesRelativeStatFSRdn();
  if (NBGen1jesRelativeStatFSRdn_branch != 0) NBGen1jesRelativeStatFSRdn();
  if (NBGen2jesRelativeStatFSRdn_branch != 0) NBGen2jesRelativeStatFSRdn();
  if (NBGen3jesRelativeStatFSRdn_branch != 0) NBGen3jesRelativeStatFSRdn();
  if (NBGen4jesRelativeStatFSRdn_branch != 0) NBGen4jesRelativeStatFSRdn();
  if (NLGen0jesRelativeStatFSRdn_branch != 0) NLGen0jesRelativeStatFSRdn();
  if (NLGen1jesRelativeStatFSRdn_branch != 0) NLGen1jesRelativeStatFSRdn();
  if (NLGen2jesRelativeStatFSRdn_branch != 0) NLGen2jesRelativeStatFSRdn();
  if (NLGen3jesRelativeStatFSRdn_branch != 0) NLGen3jesRelativeStatFSRdn();
  if (NLGen4jesRelativeStatFSRdn_branch != 0) NLGen4jesRelativeStatFSRdn();
  if (NVQGen0jesRelativeStatFSRdn_branch != 0) NVQGen0jesRelativeStatFSRdn();
  if (NVQGen1jesRelativeStatFSRdn_branch != 0) NVQGen1jesRelativeStatFSRdn();
  if (NVQGen2jesRelativeStatFSRdn_branch != 0) NVQGen2jesRelativeStatFSRdn();
  if (NVQGen3jesRelativeStatFSRdn_branch != 0) NVQGen3jesRelativeStatFSRdn();
  if (NVQGen4jesRelativeStatFSRdn_branch != 0) NVQGen4jesRelativeStatFSRdn();
  if (NiFJjesRelativeStatFSRdn_branch != 0) NiFJjesRelativeStatFSRdn();
  if (iFJ0jesRelativeStatFSRdn_branch != 0) iFJ0jesRelativeStatFSRdn();
  if (iFJ1jesRelativeStatFSRdn_branch != 0) iFJ1jesRelativeStatFSRdn();
  if (iFJ2jesRelativeStatFSRdn_branch != 0) iFJ2jesRelativeStatFSRdn();
  if (iFJ3jesRelativeStatFSRdn_branch != 0) iFJ3jesRelativeStatFSRdn();
  if (iFJ4jesRelativeStatFSRdn_branch != 0) iFJ4jesRelativeStatFSRdn();
  if (iVMD0jesRelativeStatFSRdn_branch != 0) iVMD0jesRelativeStatFSRdn();
  if (iVMD1jesRelativeStatFSRdn_branch != 0) iVMD1jesRelativeStatFSRdn();
  if (iVMD2jesRelativeStatFSRdn_branch != 0) iVMD2jesRelativeStatFSRdn();
  if (iVMD3jesRelativeStatFSRdn_branch != 0) iVMD3jesRelativeStatFSRdn();
  if (iVMD4jesRelativeStatFSRdn_branch != 0) iVMD4jesRelativeStatFSRdn();
  if (iWMD0jesRelativeStatFSRdn_branch != 0) iWMD0jesRelativeStatFSRdn();
  if (iWMD1jesRelativeStatFSRdn_branch != 0) iWMD1jesRelativeStatFSRdn();
  if (iWMD2jesRelativeStatFSRdn_branch != 0) iWMD2jesRelativeStatFSRdn();
  if (iWMD3jesRelativeStatFSRdn_branch != 0) iWMD3jesRelativeStatFSRdn();
  if (iWMD4jesRelativeStatFSRdn_branch != 0) iWMD4jesRelativeStatFSRdn();
  if (METjesRelativeStatFSRdn_branch != 0) METjesRelativeStatFSRdn();
  if (NujesRelativeStatFSRdn_branch != 0) NujesRelativeStatFSRdn();
  if (NJjesRelativeStatFSRdn_branch != 0) NJjesRelativeStatFSRdn();
  if (NbLoosejesRelativeStatFSRdn_branch != 0) NbLoosejesRelativeStatFSRdn();
  if (NbMediumjesRelativeStatFSRdn_branch != 0) NbMediumjesRelativeStatFSRdn();
  if (NbTightjesRelativeStatFSRdn_branch != 0) NbTightjesRelativeStatFSRdn();
  if (NoORNbLoosejesRelativeStatFSRdn_branch != 0) NoORNbLoosejesRelativeStatFSRdn();
  if (NoORNbMediumjesRelativeStatFSRdn_branch != 0) NoORNbMediumjesRelativeStatFSRdn();
  if (NoORNbTightjesRelativeStatFSRdn_branch != 0) NoORNbTightjesRelativeStatFSRdn();
  if (J0jesRelativeStatFSRdn_branch != 0) J0jesRelativeStatFSRdn();
  if (J1jesRelativeStatFSRdn_branch != 0) J1jesRelativeStatFSRdn();
  if (J2jesRelativeStatFSRdn_branch != 0) J2jesRelativeStatFSRdn();
  if (J3jesRelativeStatFSRdn_branch != 0) J3jesRelativeStatFSRdn();
  if (J4jesRelativeStatFSRdn_branch != 0) J4jesRelativeStatFSRdn();
  if (J5jesRelativeStatFSRdn_branch != 0) J5jesRelativeStatFSRdn();
  if (J6jesRelativeStatFSRdn_branch != 0) J6jesRelativeStatFSRdn();
  if (J7jesRelativeStatFSRdn_branch != 0) J7jesRelativeStatFSRdn();
  if (NQJGenjesRelativeStatFSRdn_branch != 0) NQJGenjesRelativeStatFSRdn();
  if (NBJGenjesRelativeStatFSRdn_branch != 0) NBJGenjesRelativeStatFSRdn();
  if (NLJGenjesRelativeStatFSRdn_branch != 0) NLJGenjesRelativeStatFSRdn();
  if (MVVXjesRelativeStatFSRdn_branch != 0) MVVXjesRelativeStatFSRdn();
  if (PtVVXjesRelativeStatFSRdn_branch != 0) PtVVXjesRelativeStatFSRdn();
  if (HTjesRelativeStatFSRdn_branch != 0) HTjesRelativeStatFSRdn();
  if (HTJjesRelativeStatFSRdn_branch != 0) HTJjesRelativeStatFSRdn();
  if (HTFJjesRelativeStatFSRdn_branch != 0) HTFJjesRelativeStatFSRdn();
  if (SumPtFJjesRelativeStatFSRdn_branch != 0) SumPtFJjesRelativeStatFSRdn();
  if (SumPtJjesRelativeStatFSRdn_branch != 0) SumPtJjesRelativeStatFSRdn();
  if (JsjesRelativeStatECup_branch != 0) JsjesRelativeStatECup();
  if (NFJjesRelativeStatECup_branch != 0) NFJjesRelativeStatECup();
  if (FJ0jesRelativeStatECup_branch != 0) FJ0jesRelativeStatECup();
  if (FJ1jesRelativeStatECup_branch != 0) FJ1jesRelativeStatECup();
  if (FJ2jesRelativeStatECup_branch != 0) FJ2jesRelativeStatECup();
  if (FJ3jesRelativeStatECup_branch != 0) FJ3jesRelativeStatECup();
  if (FJ4jesRelativeStatECup_branch != 0) FJ4jesRelativeStatECup();
  if (VMD0jesRelativeStatECup_branch != 0) VMD0jesRelativeStatECup();
  if (VMD1jesRelativeStatECup_branch != 0) VMD1jesRelativeStatECup();
  if (VMD2jesRelativeStatECup_branch != 0) VMD2jesRelativeStatECup();
  if (VMD3jesRelativeStatECup_branch != 0) VMD3jesRelativeStatECup();
  if (VMD4jesRelativeStatECup_branch != 0) VMD4jesRelativeStatECup();
  if (WMD0jesRelativeStatECup_branch != 0) WMD0jesRelativeStatECup();
  if (WMD1jesRelativeStatECup_branch != 0) WMD1jesRelativeStatECup();
  if (WMD2jesRelativeStatECup_branch != 0) WMD2jesRelativeStatECup();
  if (WMD3jesRelativeStatECup_branch != 0) WMD3jesRelativeStatECup();
  if (WMD4jesRelativeStatECup_branch != 0) WMD4jesRelativeStatECup();
  if (NQGen0jesRelativeStatECup_branch != 0) NQGen0jesRelativeStatECup();
  if (NQGen1jesRelativeStatECup_branch != 0) NQGen1jesRelativeStatECup();
  if (NQGen2jesRelativeStatECup_branch != 0) NQGen2jesRelativeStatECup();
  if (NQGen3jesRelativeStatECup_branch != 0) NQGen3jesRelativeStatECup();
  if (NQGen4jesRelativeStatECup_branch != 0) NQGen4jesRelativeStatECup();
  if (NBGen0jesRelativeStatECup_branch != 0) NBGen0jesRelativeStatECup();
  if (NBGen1jesRelativeStatECup_branch != 0) NBGen1jesRelativeStatECup();
  if (NBGen2jesRelativeStatECup_branch != 0) NBGen2jesRelativeStatECup();
  if (NBGen3jesRelativeStatECup_branch != 0) NBGen3jesRelativeStatECup();
  if (NBGen4jesRelativeStatECup_branch != 0) NBGen4jesRelativeStatECup();
  if (NLGen0jesRelativeStatECup_branch != 0) NLGen0jesRelativeStatECup();
  if (NLGen1jesRelativeStatECup_branch != 0) NLGen1jesRelativeStatECup();
  if (NLGen2jesRelativeStatECup_branch != 0) NLGen2jesRelativeStatECup();
  if (NLGen3jesRelativeStatECup_branch != 0) NLGen3jesRelativeStatECup();
  if (NLGen4jesRelativeStatECup_branch != 0) NLGen4jesRelativeStatECup();
  if (NVQGen0jesRelativeStatECup_branch != 0) NVQGen0jesRelativeStatECup();
  if (NVQGen1jesRelativeStatECup_branch != 0) NVQGen1jesRelativeStatECup();
  if (NVQGen2jesRelativeStatECup_branch != 0) NVQGen2jesRelativeStatECup();
  if (NVQGen3jesRelativeStatECup_branch != 0) NVQGen3jesRelativeStatECup();
  if (NVQGen4jesRelativeStatECup_branch != 0) NVQGen4jesRelativeStatECup();
  if (NiFJjesRelativeStatECup_branch != 0) NiFJjesRelativeStatECup();
  if (iFJ0jesRelativeStatECup_branch != 0) iFJ0jesRelativeStatECup();
  if (iFJ1jesRelativeStatECup_branch != 0) iFJ1jesRelativeStatECup();
  if (iFJ2jesRelativeStatECup_branch != 0) iFJ2jesRelativeStatECup();
  if (iFJ3jesRelativeStatECup_branch != 0) iFJ3jesRelativeStatECup();
  if (iFJ4jesRelativeStatECup_branch != 0) iFJ4jesRelativeStatECup();
  if (iVMD0jesRelativeStatECup_branch != 0) iVMD0jesRelativeStatECup();
  if (iVMD1jesRelativeStatECup_branch != 0) iVMD1jesRelativeStatECup();
  if (iVMD2jesRelativeStatECup_branch != 0) iVMD2jesRelativeStatECup();
  if (iVMD3jesRelativeStatECup_branch != 0) iVMD3jesRelativeStatECup();
  if (iVMD4jesRelativeStatECup_branch != 0) iVMD4jesRelativeStatECup();
  if (iWMD0jesRelativeStatECup_branch != 0) iWMD0jesRelativeStatECup();
  if (iWMD1jesRelativeStatECup_branch != 0) iWMD1jesRelativeStatECup();
  if (iWMD2jesRelativeStatECup_branch != 0) iWMD2jesRelativeStatECup();
  if (iWMD3jesRelativeStatECup_branch != 0) iWMD3jesRelativeStatECup();
  if (iWMD4jesRelativeStatECup_branch != 0) iWMD4jesRelativeStatECup();
  if (METjesRelativeStatECup_branch != 0) METjesRelativeStatECup();
  if (NujesRelativeStatECup_branch != 0) NujesRelativeStatECup();
  if (NJjesRelativeStatECup_branch != 0) NJjesRelativeStatECup();
  if (NbLoosejesRelativeStatECup_branch != 0) NbLoosejesRelativeStatECup();
  if (NbMediumjesRelativeStatECup_branch != 0) NbMediumjesRelativeStatECup();
  if (NbTightjesRelativeStatECup_branch != 0) NbTightjesRelativeStatECup();
  if (NoORNbLoosejesRelativeStatECup_branch != 0) NoORNbLoosejesRelativeStatECup();
  if (NoORNbMediumjesRelativeStatECup_branch != 0) NoORNbMediumjesRelativeStatECup();
  if (NoORNbTightjesRelativeStatECup_branch != 0) NoORNbTightjesRelativeStatECup();
  if (J0jesRelativeStatECup_branch != 0) J0jesRelativeStatECup();
  if (J1jesRelativeStatECup_branch != 0) J1jesRelativeStatECup();
  if (J2jesRelativeStatECup_branch != 0) J2jesRelativeStatECup();
  if (J3jesRelativeStatECup_branch != 0) J3jesRelativeStatECup();
  if (J4jesRelativeStatECup_branch != 0) J4jesRelativeStatECup();
  if (J5jesRelativeStatECup_branch != 0) J5jesRelativeStatECup();
  if (J6jesRelativeStatECup_branch != 0) J6jesRelativeStatECup();
  if (J7jesRelativeStatECup_branch != 0) J7jesRelativeStatECup();
  if (NQJGenjesRelativeStatECup_branch != 0) NQJGenjesRelativeStatECup();
  if (NBJGenjesRelativeStatECup_branch != 0) NBJGenjesRelativeStatECup();
  if (NLJGenjesRelativeStatECup_branch != 0) NLJGenjesRelativeStatECup();
  if (MVVXjesRelativeStatECup_branch != 0) MVVXjesRelativeStatECup();
  if (PtVVXjesRelativeStatECup_branch != 0) PtVVXjesRelativeStatECup();
  if (HTjesRelativeStatECup_branch != 0) HTjesRelativeStatECup();
  if (HTJjesRelativeStatECup_branch != 0) HTJjesRelativeStatECup();
  if (HTFJjesRelativeStatECup_branch != 0) HTFJjesRelativeStatECup();
  if (SumPtFJjesRelativeStatECup_branch != 0) SumPtFJjesRelativeStatECup();
  if (SumPtJjesRelativeStatECup_branch != 0) SumPtJjesRelativeStatECup();
  if (JsjesRelativeStatECdn_branch != 0) JsjesRelativeStatECdn();
  if (NFJjesRelativeStatECdn_branch != 0) NFJjesRelativeStatECdn();
  if (FJ0jesRelativeStatECdn_branch != 0) FJ0jesRelativeStatECdn();
  if (FJ1jesRelativeStatECdn_branch != 0) FJ1jesRelativeStatECdn();
  if (FJ2jesRelativeStatECdn_branch != 0) FJ2jesRelativeStatECdn();
  if (FJ3jesRelativeStatECdn_branch != 0) FJ3jesRelativeStatECdn();
  if (FJ4jesRelativeStatECdn_branch != 0) FJ4jesRelativeStatECdn();
  if (VMD0jesRelativeStatECdn_branch != 0) VMD0jesRelativeStatECdn();
  if (VMD1jesRelativeStatECdn_branch != 0) VMD1jesRelativeStatECdn();
  if (VMD2jesRelativeStatECdn_branch != 0) VMD2jesRelativeStatECdn();
  if (VMD3jesRelativeStatECdn_branch != 0) VMD3jesRelativeStatECdn();
  if (VMD4jesRelativeStatECdn_branch != 0) VMD4jesRelativeStatECdn();
  if (WMD0jesRelativeStatECdn_branch != 0) WMD0jesRelativeStatECdn();
  if (WMD1jesRelativeStatECdn_branch != 0) WMD1jesRelativeStatECdn();
  if (WMD2jesRelativeStatECdn_branch != 0) WMD2jesRelativeStatECdn();
  if (WMD3jesRelativeStatECdn_branch != 0) WMD3jesRelativeStatECdn();
  if (WMD4jesRelativeStatECdn_branch != 0) WMD4jesRelativeStatECdn();
  if (NQGen0jesRelativeStatECdn_branch != 0) NQGen0jesRelativeStatECdn();
  if (NQGen1jesRelativeStatECdn_branch != 0) NQGen1jesRelativeStatECdn();
  if (NQGen2jesRelativeStatECdn_branch != 0) NQGen2jesRelativeStatECdn();
  if (NQGen3jesRelativeStatECdn_branch != 0) NQGen3jesRelativeStatECdn();
  if (NQGen4jesRelativeStatECdn_branch != 0) NQGen4jesRelativeStatECdn();
  if (NBGen0jesRelativeStatECdn_branch != 0) NBGen0jesRelativeStatECdn();
  if (NBGen1jesRelativeStatECdn_branch != 0) NBGen1jesRelativeStatECdn();
  if (NBGen2jesRelativeStatECdn_branch != 0) NBGen2jesRelativeStatECdn();
  if (NBGen3jesRelativeStatECdn_branch != 0) NBGen3jesRelativeStatECdn();
  if (NBGen4jesRelativeStatECdn_branch != 0) NBGen4jesRelativeStatECdn();
  if (NLGen0jesRelativeStatECdn_branch != 0) NLGen0jesRelativeStatECdn();
  if (NLGen1jesRelativeStatECdn_branch != 0) NLGen1jesRelativeStatECdn();
  if (NLGen2jesRelativeStatECdn_branch != 0) NLGen2jesRelativeStatECdn();
  if (NLGen3jesRelativeStatECdn_branch != 0) NLGen3jesRelativeStatECdn();
  if (NLGen4jesRelativeStatECdn_branch != 0) NLGen4jesRelativeStatECdn();
  if (NVQGen0jesRelativeStatECdn_branch != 0) NVQGen0jesRelativeStatECdn();
  if (NVQGen1jesRelativeStatECdn_branch != 0) NVQGen1jesRelativeStatECdn();
  if (NVQGen2jesRelativeStatECdn_branch != 0) NVQGen2jesRelativeStatECdn();
  if (NVQGen3jesRelativeStatECdn_branch != 0) NVQGen3jesRelativeStatECdn();
  if (NVQGen4jesRelativeStatECdn_branch != 0) NVQGen4jesRelativeStatECdn();
  if (NiFJjesRelativeStatECdn_branch != 0) NiFJjesRelativeStatECdn();
  if (iFJ0jesRelativeStatECdn_branch != 0) iFJ0jesRelativeStatECdn();
  if (iFJ1jesRelativeStatECdn_branch != 0) iFJ1jesRelativeStatECdn();
  if (iFJ2jesRelativeStatECdn_branch != 0) iFJ2jesRelativeStatECdn();
  if (iFJ3jesRelativeStatECdn_branch != 0) iFJ3jesRelativeStatECdn();
  if (iFJ4jesRelativeStatECdn_branch != 0) iFJ4jesRelativeStatECdn();
  if (iVMD0jesRelativeStatECdn_branch != 0) iVMD0jesRelativeStatECdn();
  if (iVMD1jesRelativeStatECdn_branch != 0) iVMD1jesRelativeStatECdn();
  if (iVMD2jesRelativeStatECdn_branch != 0) iVMD2jesRelativeStatECdn();
  if (iVMD3jesRelativeStatECdn_branch != 0) iVMD3jesRelativeStatECdn();
  if (iVMD4jesRelativeStatECdn_branch != 0) iVMD4jesRelativeStatECdn();
  if (iWMD0jesRelativeStatECdn_branch != 0) iWMD0jesRelativeStatECdn();
  if (iWMD1jesRelativeStatECdn_branch != 0) iWMD1jesRelativeStatECdn();
  if (iWMD2jesRelativeStatECdn_branch != 0) iWMD2jesRelativeStatECdn();
  if (iWMD3jesRelativeStatECdn_branch != 0) iWMD3jesRelativeStatECdn();
  if (iWMD4jesRelativeStatECdn_branch != 0) iWMD4jesRelativeStatECdn();
  if (METjesRelativeStatECdn_branch != 0) METjesRelativeStatECdn();
  if (NujesRelativeStatECdn_branch != 0) NujesRelativeStatECdn();
  if (NJjesRelativeStatECdn_branch != 0) NJjesRelativeStatECdn();
  if (NbLoosejesRelativeStatECdn_branch != 0) NbLoosejesRelativeStatECdn();
  if (NbMediumjesRelativeStatECdn_branch != 0) NbMediumjesRelativeStatECdn();
  if (NbTightjesRelativeStatECdn_branch != 0) NbTightjesRelativeStatECdn();
  if (NoORNbLoosejesRelativeStatECdn_branch != 0) NoORNbLoosejesRelativeStatECdn();
  if (NoORNbMediumjesRelativeStatECdn_branch != 0) NoORNbMediumjesRelativeStatECdn();
  if (NoORNbTightjesRelativeStatECdn_branch != 0) NoORNbTightjesRelativeStatECdn();
  if (J0jesRelativeStatECdn_branch != 0) J0jesRelativeStatECdn();
  if (J1jesRelativeStatECdn_branch != 0) J1jesRelativeStatECdn();
  if (J2jesRelativeStatECdn_branch != 0) J2jesRelativeStatECdn();
  if (J3jesRelativeStatECdn_branch != 0) J3jesRelativeStatECdn();
  if (J4jesRelativeStatECdn_branch != 0) J4jesRelativeStatECdn();
  if (J5jesRelativeStatECdn_branch != 0) J5jesRelativeStatECdn();
  if (J6jesRelativeStatECdn_branch != 0) J6jesRelativeStatECdn();
  if (J7jesRelativeStatECdn_branch != 0) J7jesRelativeStatECdn();
  if (NQJGenjesRelativeStatECdn_branch != 0) NQJGenjesRelativeStatECdn();
  if (NBJGenjesRelativeStatECdn_branch != 0) NBJGenjesRelativeStatECdn();
  if (NLJGenjesRelativeStatECdn_branch != 0) NLJGenjesRelativeStatECdn();
  if (MVVXjesRelativeStatECdn_branch != 0) MVVXjesRelativeStatECdn();
  if (PtVVXjesRelativeStatECdn_branch != 0) PtVVXjesRelativeStatECdn();
  if (HTjesRelativeStatECdn_branch != 0) HTjesRelativeStatECdn();
  if (HTJjesRelativeStatECdn_branch != 0) HTJjesRelativeStatECdn();
  if (HTFJjesRelativeStatECdn_branch != 0) HTFJjesRelativeStatECdn();
  if (SumPtFJjesRelativeStatECdn_branch != 0) SumPtFJjesRelativeStatECdn();
  if (SumPtJjesRelativeStatECdn_branch != 0) SumPtJjesRelativeStatECdn();
  if (JsjesRelativeStatHFup_branch != 0) JsjesRelativeStatHFup();
  if (NFJjesRelativeStatHFup_branch != 0) NFJjesRelativeStatHFup();
  if (FJ0jesRelativeStatHFup_branch != 0) FJ0jesRelativeStatHFup();
  if (FJ1jesRelativeStatHFup_branch != 0) FJ1jesRelativeStatHFup();
  if (FJ2jesRelativeStatHFup_branch != 0) FJ2jesRelativeStatHFup();
  if (FJ3jesRelativeStatHFup_branch != 0) FJ3jesRelativeStatHFup();
  if (FJ4jesRelativeStatHFup_branch != 0) FJ4jesRelativeStatHFup();
  if (VMD0jesRelativeStatHFup_branch != 0) VMD0jesRelativeStatHFup();
  if (VMD1jesRelativeStatHFup_branch != 0) VMD1jesRelativeStatHFup();
  if (VMD2jesRelativeStatHFup_branch != 0) VMD2jesRelativeStatHFup();
  if (VMD3jesRelativeStatHFup_branch != 0) VMD3jesRelativeStatHFup();
  if (VMD4jesRelativeStatHFup_branch != 0) VMD4jesRelativeStatHFup();
  if (WMD0jesRelativeStatHFup_branch != 0) WMD0jesRelativeStatHFup();
  if (WMD1jesRelativeStatHFup_branch != 0) WMD1jesRelativeStatHFup();
  if (WMD2jesRelativeStatHFup_branch != 0) WMD2jesRelativeStatHFup();
  if (WMD3jesRelativeStatHFup_branch != 0) WMD3jesRelativeStatHFup();
  if (WMD4jesRelativeStatHFup_branch != 0) WMD4jesRelativeStatHFup();
  if (NQGen0jesRelativeStatHFup_branch != 0) NQGen0jesRelativeStatHFup();
  if (NQGen1jesRelativeStatHFup_branch != 0) NQGen1jesRelativeStatHFup();
  if (NQGen2jesRelativeStatHFup_branch != 0) NQGen2jesRelativeStatHFup();
  if (NQGen3jesRelativeStatHFup_branch != 0) NQGen3jesRelativeStatHFup();
  if (NQGen4jesRelativeStatHFup_branch != 0) NQGen4jesRelativeStatHFup();
  if (NBGen0jesRelativeStatHFup_branch != 0) NBGen0jesRelativeStatHFup();
  if (NBGen1jesRelativeStatHFup_branch != 0) NBGen1jesRelativeStatHFup();
  if (NBGen2jesRelativeStatHFup_branch != 0) NBGen2jesRelativeStatHFup();
  if (NBGen3jesRelativeStatHFup_branch != 0) NBGen3jesRelativeStatHFup();
  if (NBGen4jesRelativeStatHFup_branch != 0) NBGen4jesRelativeStatHFup();
  if (NLGen0jesRelativeStatHFup_branch != 0) NLGen0jesRelativeStatHFup();
  if (NLGen1jesRelativeStatHFup_branch != 0) NLGen1jesRelativeStatHFup();
  if (NLGen2jesRelativeStatHFup_branch != 0) NLGen2jesRelativeStatHFup();
  if (NLGen3jesRelativeStatHFup_branch != 0) NLGen3jesRelativeStatHFup();
  if (NLGen4jesRelativeStatHFup_branch != 0) NLGen4jesRelativeStatHFup();
  if (NVQGen0jesRelativeStatHFup_branch != 0) NVQGen0jesRelativeStatHFup();
  if (NVQGen1jesRelativeStatHFup_branch != 0) NVQGen1jesRelativeStatHFup();
  if (NVQGen2jesRelativeStatHFup_branch != 0) NVQGen2jesRelativeStatHFup();
  if (NVQGen3jesRelativeStatHFup_branch != 0) NVQGen3jesRelativeStatHFup();
  if (NVQGen4jesRelativeStatHFup_branch != 0) NVQGen4jesRelativeStatHFup();
  if (NiFJjesRelativeStatHFup_branch != 0) NiFJjesRelativeStatHFup();
  if (iFJ0jesRelativeStatHFup_branch != 0) iFJ0jesRelativeStatHFup();
  if (iFJ1jesRelativeStatHFup_branch != 0) iFJ1jesRelativeStatHFup();
  if (iFJ2jesRelativeStatHFup_branch != 0) iFJ2jesRelativeStatHFup();
  if (iFJ3jesRelativeStatHFup_branch != 0) iFJ3jesRelativeStatHFup();
  if (iFJ4jesRelativeStatHFup_branch != 0) iFJ4jesRelativeStatHFup();
  if (iVMD0jesRelativeStatHFup_branch != 0) iVMD0jesRelativeStatHFup();
  if (iVMD1jesRelativeStatHFup_branch != 0) iVMD1jesRelativeStatHFup();
  if (iVMD2jesRelativeStatHFup_branch != 0) iVMD2jesRelativeStatHFup();
  if (iVMD3jesRelativeStatHFup_branch != 0) iVMD3jesRelativeStatHFup();
  if (iVMD4jesRelativeStatHFup_branch != 0) iVMD4jesRelativeStatHFup();
  if (iWMD0jesRelativeStatHFup_branch != 0) iWMD0jesRelativeStatHFup();
  if (iWMD1jesRelativeStatHFup_branch != 0) iWMD1jesRelativeStatHFup();
  if (iWMD2jesRelativeStatHFup_branch != 0) iWMD2jesRelativeStatHFup();
  if (iWMD3jesRelativeStatHFup_branch != 0) iWMD3jesRelativeStatHFup();
  if (iWMD4jesRelativeStatHFup_branch != 0) iWMD4jesRelativeStatHFup();
  if (METjesRelativeStatHFup_branch != 0) METjesRelativeStatHFup();
  if (NujesRelativeStatHFup_branch != 0) NujesRelativeStatHFup();
  if (NJjesRelativeStatHFup_branch != 0) NJjesRelativeStatHFup();
  if (NbLoosejesRelativeStatHFup_branch != 0) NbLoosejesRelativeStatHFup();
  if (NbMediumjesRelativeStatHFup_branch != 0) NbMediumjesRelativeStatHFup();
  if (NbTightjesRelativeStatHFup_branch != 0) NbTightjesRelativeStatHFup();
  if (NoORNbLoosejesRelativeStatHFup_branch != 0) NoORNbLoosejesRelativeStatHFup();
  if (NoORNbMediumjesRelativeStatHFup_branch != 0) NoORNbMediumjesRelativeStatHFup();
  if (NoORNbTightjesRelativeStatHFup_branch != 0) NoORNbTightjesRelativeStatHFup();
  if (J0jesRelativeStatHFup_branch != 0) J0jesRelativeStatHFup();
  if (J1jesRelativeStatHFup_branch != 0) J1jesRelativeStatHFup();
  if (J2jesRelativeStatHFup_branch != 0) J2jesRelativeStatHFup();
  if (J3jesRelativeStatHFup_branch != 0) J3jesRelativeStatHFup();
  if (J4jesRelativeStatHFup_branch != 0) J4jesRelativeStatHFup();
  if (J5jesRelativeStatHFup_branch != 0) J5jesRelativeStatHFup();
  if (J6jesRelativeStatHFup_branch != 0) J6jesRelativeStatHFup();
  if (J7jesRelativeStatHFup_branch != 0) J7jesRelativeStatHFup();
  if (NQJGenjesRelativeStatHFup_branch != 0) NQJGenjesRelativeStatHFup();
  if (NBJGenjesRelativeStatHFup_branch != 0) NBJGenjesRelativeStatHFup();
  if (NLJGenjesRelativeStatHFup_branch != 0) NLJGenjesRelativeStatHFup();
  if (MVVXjesRelativeStatHFup_branch != 0) MVVXjesRelativeStatHFup();
  if (PtVVXjesRelativeStatHFup_branch != 0) PtVVXjesRelativeStatHFup();
  if (HTjesRelativeStatHFup_branch != 0) HTjesRelativeStatHFup();
  if (HTJjesRelativeStatHFup_branch != 0) HTJjesRelativeStatHFup();
  if (HTFJjesRelativeStatHFup_branch != 0) HTFJjesRelativeStatHFup();
  if (SumPtFJjesRelativeStatHFup_branch != 0) SumPtFJjesRelativeStatHFup();
  if (SumPtJjesRelativeStatHFup_branch != 0) SumPtJjesRelativeStatHFup();
  if (JsjesRelativeStatHFdn_branch != 0) JsjesRelativeStatHFdn();
  if (NFJjesRelativeStatHFdn_branch != 0) NFJjesRelativeStatHFdn();
  if (FJ0jesRelativeStatHFdn_branch != 0) FJ0jesRelativeStatHFdn();
  if (FJ1jesRelativeStatHFdn_branch != 0) FJ1jesRelativeStatHFdn();
  if (FJ2jesRelativeStatHFdn_branch != 0) FJ2jesRelativeStatHFdn();
  if (FJ3jesRelativeStatHFdn_branch != 0) FJ3jesRelativeStatHFdn();
  if (FJ4jesRelativeStatHFdn_branch != 0) FJ4jesRelativeStatHFdn();
  if (VMD0jesRelativeStatHFdn_branch != 0) VMD0jesRelativeStatHFdn();
  if (VMD1jesRelativeStatHFdn_branch != 0) VMD1jesRelativeStatHFdn();
  if (VMD2jesRelativeStatHFdn_branch != 0) VMD2jesRelativeStatHFdn();
  if (VMD3jesRelativeStatHFdn_branch != 0) VMD3jesRelativeStatHFdn();
  if (VMD4jesRelativeStatHFdn_branch != 0) VMD4jesRelativeStatHFdn();
  if (WMD0jesRelativeStatHFdn_branch != 0) WMD0jesRelativeStatHFdn();
  if (WMD1jesRelativeStatHFdn_branch != 0) WMD1jesRelativeStatHFdn();
  if (WMD2jesRelativeStatHFdn_branch != 0) WMD2jesRelativeStatHFdn();
  if (WMD3jesRelativeStatHFdn_branch != 0) WMD3jesRelativeStatHFdn();
  if (WMD4jesRelativeStatHFdn_branch != 0) WMD4jesRelativeStatHFdn();
  if (NQGen0jesRelativeStatHFdn_branch != 0) NQGen0jesRelativeStatHFdn();
  if (NQGen1jesRelativeStatHFdn_branch != 0) NQGen1jesRelativeStatHFdn();
  if (NQGen2jesRelativeStatHFdn_branch != 0) NQGen2jesRelativeStatHFdn();
  if (NQGen3jesRelativeStatHFdn_branch != 0) NQGen3jesRelativeStatHFdn();
  if (NQGen4jesRelativeStatHFdn_branch != 0) NQGen4jesRelativeStatHFdn();
  if (NBGen0jesRelativeStatHFdn_branch != 0) NBGen0jesRelativeStatHFdn();
  if (NBGen1jesRelativeStatHFdn_branch != 0) NBGen1jesRelativeStatHFdn();
  if (NBGen2jesRelativeStatHFdn_branch != 0) NBGen2jesRelativeStatHFdn();
  if (NBGen3jesRelativeStatHFdn_branch != 0) NBGen3jesRelativeStatHFdn();
  if (NBGen4jesRelativeStatHFdn_branch != 0) NBGen4jesRelativeStatHFdn();
  if (NLGen0jesRelativeStatHFdn_branch != 0) NLGen0jesRelativeStatHFdn();
  if (NLGen1jesRelativeStatHFdn_branch != 0) NLGen1jesRelativeStatHFdn();
  if (NLGen2jesRelativeStatHFdn_branch != 0) NLGen2jesRelativeStatHFdn();
  if (NLGen3jesRelativeStatHFdn_branch != 0) NLGen3jesRelativeStatHFdn();
  if (NLGen4jesRelativeStatHFdn_branch != 0) NLGen4jesRelativeStatHFdn();
  if (NVQGen0jesRelativeStatHFdn_branch != 0) NVQGen0jesRelativeStatHFdn();
  if (NVQGen1jesRelativeStatHFdn_branch != 0) NVQGen1jesRelativeStatHFdn();
  if (NVQGen2jesRelativeStatHFdn_branch != 0) NVQGen2jesRelativeStatHFdn();
  if (NVQGen3jesRelativeStatHFdn_branch != 0) NVQGen3jesRelativeStatHFdn();
  if (NVQGen4jesRelativeStatHFdn_branch != 0) NVQGen4jesRelativeStatHFdn();
  if (NiFJjesRelativeStatHFdn_branch != 0) NiFJjesRelativeStatHFdn();
  if (iFJ0jesRelativeStatHFdn_branch != 0) iFJ0jesRelativeStatHFdn();
  if (iFJ1jesRelativeStatHFdn_branch != 0) iFJ1jesRelativeStatHFdn();
  if (iFJ2jesRelativeStatHFdn_branch != 0) iFJ2jesRelativeStatHFdn();
  if (iFJ3jesRelativeStatHFdn_branch != 0) iFJ3jesRelativeStatHFdn();
  if (iFJ4jesRelativeStatHFdn_branch != 0) iFJ4jesRelativeStatHFdn();
  if (iVMD0jesRelativeStatHFdn_branch != 0) iVMD0jesRelativeStatHFdn();
  if (iVMD1jesRelativeStatHFdn_branch != 0) iVMD1jesRelativeStatHFdn();
  if (iVMD2jesRelativeStatHFdn_branch != 0) iVMD2jesRelativeStatHFdn();
  if (iVMD3jesRelativeStatHFdn_branch != 0) iVMD3jesRelativeStatHFdn();
  if (iVMD4jesRelativeStatHFdn_branch != 0) iVMD4jesRelativeStatHFdn();
  if (iWMD0jesRelativeStatHFdn_branch != 0) iWMD0jesRelativeStatHFdn();
  if (iWMD1jesRelativeStatHFdn_branch != 0) iWMD1jesRelativeStatHFdn();
  if (iWMD2jesRelativeStatHFdn_branch != 0) iWMD2jesRelativeStatHFdn();
  if (iWMD3jesRelativeStatHFdn_branch != 0) iWMD3jesRelativeStatHFdn();
  if (iWMD4jesRelativeStatHFdn_branch != 0) iWMD4jesRelativeStatHFdn();
  if (METjesRelativeStatHFdn_branch != 0) METjesRelativeStatHFdn();
  if (NujesRelativeStatHFdn_branch != 0) NujesRelativeStatHFdn();
  if (NJjesRelativeStatHFdn_branch != 0) NJjesRelativeStatHFdn();
  if (NbLoosejesRelativeStatHFdn_branch != 0) NbLoosejesRelativeStatHFdn();
  if (NbMediumjesRelativeStatHFdn_branch != 0) NbMediumjesRelativeStatHFdn();
  if (NbTightjesRelativeStatHFdn_branch != 0) NbTightjesRelativeStatHFdn();
  if (NoORNbLoosejesRelativeStatHFdn_branch != 0) NoORNbLoosejesRelativeStatHFdn();
  if (NoORNbMediumjesRelativeStatHFdn_branch != 0) NoORNbMediumjesRelativeStatHFdn();
  if (NoORNbTightjesRelativeStatHFdn_branch != 0) NoORNbTightjesRelativeStatHFdn();
  if (J0jesRelativeStatHFdn_branch != 0) J0jesRelativeStatHFdn();
  if (J1jesRelativeStatHFdn_branch != 0) J1jesRelativeStatHFdn();
  if (J2jesRelativeStatHFdn_branch != 0) J2jesRelativeStatHFdn();
  if (J3jesRelativeStatHFdn_branch != 0) J3jesRelativeStatHFdn();
  if (J4jesRelativeStatHFdn_branch != 0) J4jesRelativeStatHFdn();
  if (J5jesRelativeStatHFdn_branch != 0) J5jesRelativeStatHFdn();
  if (J6jesRelativeStatHFdn_branch != 0) J6jesRelativeStatHFdn();
  if (J7jesRelativeStatHFdn_branch != 0) J7jesRelativeStatHFdn();
  if (NQJGenjesRelativeStatHFdn_branch != 0) NQJGenjesRelativeStatHFdn();
  if (NBJGenjesRelativeStatHFdn_branch != 0) NBJGenjesRelativeStatHFdn();
  if (NLJGenjesRelativeStatHFdn_branch != 0) NLJGenjesRelativeStatHFdn();
  if (MVVXjesRelativeStatHFdn_branch != 0) MVVXjesRelativeStatHFdn();
  if (PtVVXjesRelativeStatHFdn_branch != 0) PtVVXjesRelativeStatHFdn();
  if (HTjesRelativeStatHFdn_branch != 0) HTjesRelativeStatHFdn();
  if (HTJjesRelativeStatHFdn_branch != 0) HTJjesRelativeStatHFdn();
  if (HTFJjesRelativeStatHFdn_branch != 0) HTFJjesRelativeStatHFdn();
  if (SumPtFJjesRelativeStatHFdn_branch != 0) SumPtFJjesRelativeStatHFdn();
  if (SumPtJjesRelativeStatHFdn_branch != 0) SumPtJjesRelativeStatHFdn();
  if (JsjesPileUpDataMCup_branch != 0) JsjesPileUpDataMCup();
  if (NFJjesPileUpDataMCup_branch != 0) NFJjesPileUpDataMCup();
  if (FJ0jesPileUpDataMCup_branch != 0) FJ0jesPileUpDataMCup();
  if (FJ1jesPileUpDataMCup_branch != 0) FJ1jesPileUpDataMCup();
  if (FJ2jesPileUpDataMCup_branch != 0) FJ2jesPileUpDataMCup();
  if (FJ3jesPileUpDataMCup_branch != 0) FJ3jesPileUpDataMCup();
  if (FJ4jesPileUpDataMCup_branch != 0) FJ4jesPileUpDataMCup();
  if (VMD0jesPileUpDataMCup_branch != 0) VMD0jesPileUpDataMCup();
  if (VMD1jesPileUpDataMCup_branch != 0) VMD1jesPileUpDataMCup();
  if (VMD2jesPileUpDataMCup_branch != 0) VMD2jesPileUpDataMCup();
  if (VMD3jesPileUpDataMCup_branch != 0) VMD3jesPileUpDataMCup();
  if (VMD4jesPileUpDataMCup_branch != 0) VMD4jesPileUpDataMCup();
  if (WMD0jesPileUpDataMCup_branch != 0) WMD0jesPileUpDataMCup();
  if (WMD1jesPileUpDataMCup_branch != 0) WMD1jesPileUpDataMCup();
  if (WMD2jesPileUpDataMCup_branch != 0) WMD2jesPileUpDataMCup();
  if (WMD3jesPileUpDataMCup_branch != 0) WMD3jesPileUpDataMCup();
  if (WMD4jesPileUpDataMCup_branch != 0) WMD4jesPileUpDataMCup();
  if (NQGen0jesPileUpDataMCup_branch != 0) NQGen0jesPileUpDataMCup();
  if (NQGen1jesPileUpDataMCup_branch != 0) NQGen1jesPileUpDataMCup();
  if (NQGen2jesPileUpDataMCup_branch != 0) NQGen2jesPileUpDataMCup();
  if (NQGen3jesPileUpDataMCup_branch != 0) NQGen3jesPileUpDataMCup();
  if (NQGen4jesPileUpDataMCup_branch != 0) NQGen4jesPileUpDataMCup();
  if (NBGen0jesPileUpDataMCup_branch != 0) NBGen0jesPileUpDataMCup();
  if (NBGen1jesPileUpDataMCup_branch != 0) NBGen1jesPileUpDataMCup();
  if (NBGen2jesPileUpDataMCup_branch != 0) NBGen2jesPileUpDataMCup();
  if (NBGen3jesPileUpDataMCup_branch != 0) NBGen3jesPileUpDataMCup();
  if (NBGen4jesPileUpDataMCup_branch != 0) NBGen4jesPileUpDataMCup();
  if (NLGen0jesPileUpDataMCup_branch != 0) NLGen0jesPileUpDataMCup();
  if (NLGen1jesPileUpDataMCup_branch != 0) NLGen1jesPileUpDataMCup();
  if (NLGen2jesPileUpDataMCup_branch != 0) NLGen2jesPileUpDataMCup();
  if (NLGen3jesPileUpDataMCup_branch != 0) NLGen3jesPileUpDataMCup();
  if (NLGen4jesPileUpDataMCup_branch != 0) NLGen4jesPileUpDataMCup();
  if (NVQGen0jesPileUpDataMCup_branch != 0) NVQGen0jesPileUpDataMCup();
  if (NVQGen1jesPileUpDataMCup_branch != 0) NVQGen1jesPileUpDataMCup();
  if (NVQGen2jesPileUpDataMCup_branch != 0) NVQGen2jesPileUpDataMCup();
  if (NVQGen3jesPileUpDataMCup_branch != 0) NVQGen3jesPileUpDataMCup();
  if (NVQGen4jesPileUpDataMCup_branch != 0) NVQGen4jesPileUpDataMCup();
  if (NiFJjesPileUpDataMCup_branch != 0) NiFJjesPileUpDataMCup();
  if (iFJ0jesPileUpDataMCup_branch != 0) iFJ0jesPileUpDataMCup();
  if (iFJ1jesPileUpDataMCup_branch != 0) iFJ1jesPileUpDataMCup();
  if (iFJ2jesPileUpDataMCup_branch != 0) iFJ2jesPileUpDataMCup();
  if (iFJ3jesPileUpDataMCup_branch != 0) iFJ3jesPileUpDataMCup();
  if (iFJ4jesPileUpDataMCup_branch != 0) iFJ4jesPileUpDataMCup();
  if (iVMD0jesPileUpDataMCup_branch != 0) iVMD0jesPileUpDataMCup();
  if (iVMD1jesPileUpDataMCup_branch != 0) iVMD1jesPileUpDataMCup();
  if (iVMD2jesPileUpDataMCup_branch != 0) iVMD2jesPileUpDataMCup();
  if (iVMD3jesPileUpDataMCup_branch != 0) iVMD3jesPileUpDataMCup();
  if (iVMD4jesPileUpDataMCup_branch != 0) iVMD4jesPileUpDataMCup();
  if (iWMD0jesPileUpDataMCup_branch != 0) iWMD0jesPileUpDataMCup();
  if (iWMD1jesPileUpDataMCup_branch != 0) iWMD1jesPileUpDataMCup();
  if (iWMD2jesPileUpDataMCup_branch != 0) iWMD2jesPileUpDataMCup();
  if (iWMD3jesPileUpDataMCup_branch != 0) iWMD3jesPileUpDataMCup();
  if (iWMD4jesPileUpDataMCup_branch != 0) iWMD4jesPileUpDataMCup();
  if (METjesPileUpDataMCup_branch != 0) METjesPileUpDataMCup();
  if (NujesPileUpDataMCup_branch != 0) NujesPileUpDataMCup();
  if (NJjesPileUpDataMCup_branch != 0) NJjesPileUpDataMCup();
  if (NbLoosejesPileUpDataMCup_branch != 0) NbLoosejesPileUpDataMCup();
  if (NbMediumjesPileUpDataMCup_branch != 0) NbMediumjesPileUpDataMCup();
  if (NbTightjesPileUpDataMCup_branch != 0) NbTightjesPileUpDataMCup();
  if (NoORNbLoosejesPileUpDataMCup_branch != 0) NoORNbLoosejesPileUpDataMCup();
  if (NoORNbMediumjesPileUpDataMCup_branch != 0) NoORNbMediumjesPileUpDataMCup();
  if (NoORNbTightjesPileUpDataMCup_branch != 0) NoORNbTightjesPileUpDataMCup();
  if (J0jesPileUpDataMCup_branch != 0) J0jesPileUpDataMCup();
  if (J1jesPileUpDataMCup_branch != 0) J1jesPileUpDataMCup();
  if (J2jesPileUpDataMCup_branch != 0) J2jesPileUpDataMCup();
  if (J3jesPileUpDataMCup_branch != 0) J3jesPileUpDataMCup();
  if (J4jesPileUpDataMCup_branch != 0) J4jesPileUpDataMCup();
  if (J5jesPileUpDataMCup_branch != 0) J5jesPileUpDataMCup();
  if (J6jesPileUpDataMCup_branch != 0) J6jesPileUpDataMCup();
  if (J7jesPileUpDataMCup_branch != 0) J7jesPileUpDataMCup();
  if (NQJGenjesPileUpDataMCup_branch != 0) NQJGenjesPileUpDataMCup();
  if (NBJGenjesPileUpDataMCup_branch != 0) NBJGenjesPileUpDataMCup();
  if (NLJGenjesPileUpDataMCup_branch != 0) NLJGenjesPileUpDataMCup();
  if (MVVXjesPileUpDataMCup_branch != 0) MVVXjesPileUpDataMCup();
  if (PtVVXjesPileUpDataMCup_branch != 0) PtVVXjesPileUpDataMCup();
  if (HTjesPileUpDataMCup_branch != 0) HTjesPileUpDataMCup();
  if (HTJjesPileUpDataMCup_branch != 0) HTJjesPileUpDataMCup();
  if (HTFJjesPileUpDataMCup_branch != 0) HTFJjesPileUpDataMCup();
  if (SumPtFJjesPileUpDataMCup_branch != 0) SumPtFJjesPileUpDataMCup();
  if (SumPtJjesPileUpDataMCup_branch != 0) SumPtJjesPileUpDataMCup();
  if (JsjesPileUpDataMCdn_branch != 0) JsjesPileUpDataMCdn();
  if (NFJjesPileUpDataMCdn_branch != 0) NFJjesPileUpDataMCdn();
  if (FJ0jesPileUpDataMCdn_branch != 0) FJ0jesPileUpDataMCdn();
  if (FJ1jesPileUpDataMCdn_branch != 0) FJ1jesPileUpDataMCdn();
  if (FJ2jesPileUpDataMCdn_branch != 0) FJ2jesPileUpDataMCdn();
  if (FJ3jesPileUpDataMCdn_branch != 0) FJ3jesPileUpDataMCdn();
  if (FJ4jesPileUpDataMCdn_branch != 0) FJ4jesPileUpDataMCdn();
  if (VMD0jesPileUpDataMCdn_branch != 0) VMD0jesPileUpDataMCdn();
  if (VMD1jesPileUpDataMCdn_branch != 0) VMD1jesPileUpDataMCdn();
  if (VMD2jesPileUpDataMCdn_branch != 0) VMD2jesPileUpDataMCdn();
  if (VMD3jesPileUpDataMCdn_branch != 0) VMD3jesPileUpDataMCdn();
  if (VMD4jesPileUpDataMCdn_branch != 0) VMD4jesPileUpDataMCdn();
  if (WMD0jesPileUpDataMCdn_branch != 0) WMD0jesPileUpDataMCdn();
  if (WMD1jesPileUpDataMCdn_branch != 0) WMD1jesPileUpDataMCdn();
  if (WMD2jesPileUpDataMCdn_branch != 0) WMD2jesPileUpDataMCdn();
  if (WMD3jesPileUpDataMCdn_branch != 0) WMD3jesPileUpDataMCdn();
  if (WMD4jesPileUpDataMCdn_branch != 0) WMD4jesPileUpDataMCdn();
  if (NQGen0jesPileUpDataMCdn_branch != 0) NQGen0jesPileUpDataMCdn();
  if (NQGen1jesPileUpDataMCdn_branch != 0) NQGen1jesPileUpDataMCdn();
  if (NQGen2jesPileUpDataMCdn_branch != 0) NQGen2jesPileUpDataMCdn();
  if (NQGen3jesPileUpDataMCdn_branch != 0) NQGen3jesPileUpDataMCdn();
  if (NQGen4jesPileUpDataMCdn_branch != 0) NQGen4jesPileUpDataMCdn();
  if (NBGen0jesPileUpDataMCdn_branch != 0) NBGen0jesPileUpDataMCdn();
  if (NBGen1jesPileUpDataMCdn_branch != 0) NBGen1jesPileUpDataMCdn();
  if (NBGen2jesPileUpDataMCdn_branch != 0) NBGen2jesPileUpDataMCdn();
  if (NBGen3jesPileUpDataMCdn_branch != 0) NBGen3jesPileUpDataMCdn();
  if (NBGen4jesPileUpDataMCdn_branch != 0) NBGen4jesPileUpDataMCdn();
  if (NLGen0jesPileUpDataMCdn_branch != 0) NLGen0jesPileUpDataMCdn();
  if (NLGen1jesPileUpDataMCdn_branch != 0) NLGen1jesPileUpDataMCdn();
  if (NLGen2jesPileUpDataMCdn_branch != 0) NLGen2jesPileUpDataMCdn();
  if (NLGen3jesPileUpDataMCdn_branch != 0) NLGen3jesPileUpDataMCdn();
  if (NLGen4jesPileUpDataMCdn_branch != 0) NLGen4jesPileUpDataMCdn();
  if (NVQGen0jesPileUpDataMCdn_branch != 0) NVQGen0jesPileUpDataMCdn();
  if (NVQGen1jesPileUpDataMCdn_branch != 0) NVQGen1jesPileUpDataMCdn();
  if (NVQGen2jesPileUpDataMCdn_branch != 0) NVQGen2jesPileUpDataMCdn();
  if (NVQGen3jesPileUpDataMCdn_branch != 0) NVQGen3jesPileUpDataMCdn();
  if (NVQGen4jesPileUpDataMCdn_branch != 0) NVQGen4jesPileUpDataMCdn();
  if (NiFJjesPileUpDataMCdn_branch != 0) NiFJjesPileUpDataMCdn();
  if (iFJ0jesPileUpDataMCdn_branch != 0) iFJ0jesPileUpDataMCdn();
  if (iFJ1jesPileUpDataMCdn_branch != 0) iFJ1jesPileUpDataMCdn();
  if (iFJ2jesPileUpDataMCdn_branch != 0) iFJ2jesPileUpDataMCdn();
  if (iFJ3jesPileUpDataMCdn_branch != 0) iFJ3jesPileUpDataMCdn();
  if (iFJ4jesPileUpDataMCdn_branch != 0) iFJ4jesPileUpDataMCdn();
  if (iVMD0jesPileUpDataMCdn_branch != 0) iVMD0jesPileUpDataMCdn();
  if (iVMD1jesPileUpDataMCdn_branch != 0) iVMD1jesPileUpDataMCdn();
  if (iVMD2jesPileUpDataMCdn_branch != 0) iVMD2jesPileUpDataMCdn();
  if (iVMD3jesPileUpDataMCdn_branch != 0) iVMD3jesPileUpDataMCdn();
  if (iVMD4jesPileUpDataMCdn_branch != 0) iVMD4jesPileUpDataMCdn();
  if (iWMD0jesPileUpDataMCdn_branch != 0) iWMD0jesPileUpDataMCdn();
  if (iWMD1jesPileUpDataMCdn_branch != 0) iWMD1jesPileUpDataMCdn();
  if (iWMD2jesPileUpDataMCdn_branch != 0) iWMD2jesPileUpDataMCdn();
  if (iWMD3jesPileUpDataMCdn_branch != 0) iWMD3jesPileUpDataMCdn();
  if (iWMD4jesPileUpDataMCdn_branch != 0) iWMD4jesPileUpDataMCdn();
  if (METjesPileUpDataMCdn_branch != 0) METjesPileUpDataMCdn();
  if (NujesPileUpDataMCdn_branch != 0) NujesPileUpDataMCdn();
  if (NJjesPileUpDataMCdn_branch != 0) NJjesPileUpDataMCdn();
  if (NbLoosejesPileUpDataMCdn_branch != 0) NbLoosejesPileUpDataMCdn();
  if (NbMediumjesPileUpDataMCdn_branch != 0) NbMediumjesPileUpDataMCdn();
  if (NbTightjesPileUpDataMCdn_branch != 0) NbTightjesPileUpDataMCdn();
  if (NoORNbLoosejesPileUpDataMCdn_branch != 0) NoORNbLoosejesPileUpDataMCdn();
  if (NoORNbMediumjesPileUpDataMCdn_branch != 0) NoORNbMediumjesPileUpDataMCdn();
  if (NoORNbTightjesPileUpDataMCdn_branch != 0) NoORNbTightjesPileUpDataMCdn();
  if (J0jesPileUpDataMCdn_branch != 0) J0jesPileUpDataMCdn();
  if (J1jesPileUpDataMCdn_branch != 0) J1jesPileUpDataMCdn();
  if (J2jesPileUpDataMCdn_branch != 0) J2jesPileUpDataMCdn();
  if (J3jesPileUpDataMCdn_branch != 0) J3jesPileUpDataMCdn();
  if (J4jesPileUpDataMCdn_branch != 0) J4jesPileUpDataMCdn();
  if (J5jesPileUpDataMCdn_branch != 0) J5jesPileUpDataMCdn();
  if (J6jesPileUpDataMCdn_branch != 0) J6jesPileUpDataMCdn();
  if (J7jesPileUpDataMCdn_branch != 0) J7jesPileUpDataMCdn();
  if (NQJGenjesPileUpDataMCdn_branch != 0) NQJGenjesPileUpDataMCdn();
  if (NBJGenjesPileUpDataMCdn_branch != 0) NBJGenjesPileUpDataMCdn();
  if (NLJGenjesPileUpDataMCdn_branch != 0) NLJGenjesPileUpDataMCdn();
  if (MVVXjesPileUpDataMCdn_branch != 0) MVVXjesPileUpDataMCdn();
  if (PtVVXjesPileUpDataMCdn_branch != 0) PtVVXjesPileUpDataMCdn();
  if (HTjesPileUpDataMCdn_branch != 0) HTjesPileUpDataMCdn();
  if (HTJjesPileUpDataMCdn_branch != 0) HTJjesPileUpDataMCdn();
  if (HTFJjesPileUpDataMCdn_branch != 0) HTFJjesPileUpDataMCdn();
  if (SumPtFJjesPileUpDataMCdn_branch != 0) SumPtFJjesPileUpDataMCdn();
  if (SumPtJjesPileUpDataMCdn_branch != 0) SumPtJjesPileUpDataMCdn();
  if (JsjesPileUpPtRefup_branch != 0) JsjesPileUpPtRefup();
  if (NFJjesPileUpPtRefup_branch != 0) NFJjesPileUpPtRefup();
  if (FJ0jesPileUpPtRefup_branch != 0) FJ0jesPileUpPtRefup();
  if (FJ1jesPileUpPtRefup_branch != 0) FJ1jesPileUpPtRefup();
  if (FJ2jesPileUpPtRefup_branch != 0) FJ2jesPileUpPtRefup();
  if (FJ3jesPileUpPtRefup_branch != 0) FJ3jesPileUpPtRefup();
  if (FJ4jesPileUpPtRefup_branch != 0) FJ4jesPileUpPtRefup();
  if (VMD0jesPileUpPtRefup_branch != 0) VMD0jesPileUpPtRefup();
  if (VMD1jesPileUpPtRefup_branch != 0) VMD1jesPileUpPtRefup();
  if (VMD2jesPileUpPtRefup_branch != 0) VMD2jesPileUpPtRefup();
  if (VMD3jesPileUpPtRefup_branch != 0) VMD3jesPileUpPtRefup();
  if (VMD4jesPileUpPtRefup_branch != 0) VMD4jesPileUpPtRefup();
  if (WMD0jesPileUpPtRefup_branch != 0) WMD0jesPileUpPtRefup();
  if (WMD1jesPileUpPtRefup_branch != 0) WMD1jesPileUpPtRefup();
  if (WMD2jesPileUpPtRefup_branch != 0) WMD2jesPileUpPtRefup();
  if (WMD3jesPileUpPtRefup_branch != 0) WMD3jesPileUpPtRefup();
  if (WMD4jesPileUpPtRefup_branch != 0) WMD4jesPileUpPtRefup();
  if (NQGen0jesPileUpPtRefup_branch != 0) NQGen0jesPileUpPtRefup();
  if (NQGen1jesPileUpPtRefup_branch != 0) NQGen1jesPileUpPtRefup();
  if (NQGen2jesPileUpPtRefup_branch != 0) NQGen2jesPileUpPtRefup();
  if (NQGen3jesPileUpPtRefup_branch != 0) NQGen3jesPileUpPtRefup();
  if (NQGen4jesPileUpPtRefup_branch != 0) NQGen4jesPileUpPtRefup();
  if (NBGen0jesPileUpPtRefup_branch != 0) NBGen0jesPileUpPtRefup();
  if (NBGen1jesPileUpPtRefup_branch != 0) NBGen1jesPileUpPtRefup();
  if (NBGen2jesPileUpPtRefup_branch != 0) NBGen2jesPileUpPtRefup();
  if (NBGen3jesPileUpPtRefup_branch != 0) NBGen3jesPileUpPtRefup();
  if (NBGen4jesPileUpPtRefup_branch != 0) NBGen4jesPileUpPtRefup();
  if (NLGen0jesPileUpPtRefup_branch != 0) NLGen0jesPileUpPtRefup();
  if (NLGen1jesPileUpPtRefup_branch != 0) NLGen1jesPileUpPtRefup();
  if (NLGen2jesPileUpPtRefup_branch != 0) NLGen2jesPileUpPtRefup();
  if (NLGen3jesPileUpPtRefup_branch != 0) NLGen3jesPileUpPtRefup();
  if (NLGen4jesPileUpPtRefup_branch != 0) NLGen4jesPileUpPtRefup();
  if (NVQGen0jesPileUpPtRefup_branch != 0) NVQGen0jesPileUpPtRefup();
  if (NVQGen1jesPileUpPtRefup_branch != 0) NVQGen1jesPileUpPtRefup();
  if (NVQGen2jesPileUpPtRefup_branch != 0) NVQGen2jesPileUpPtRefup();
  if (NVQGen3jesPileUpPtRefup_branch != 0) NVQGen3jesPileUpPtRefup();
  if (NVQGen4jesPileUpPtRefup_branch != 0) NVQGen4jesPileUpPtRefup();
  if (NiFJjesPileUpPtRefup_branch != 0) NiFJjesPileUpPtRefup();
  if (iFJ0jesPileUpPtRefup_branch != 0) iFJ0jesPileUpPtRefup();
  if (iFJ1jesPileUpPtRefup_branch != 0) iFJ1jesPileUpPtRefup();
  if (iFJ2jesPileUpPtRefup_branch != 0) iFJ2jesPileUpPtRefup();
  if (iFJ3jesPileUpPtRefup_branch != 0) iFJ3jesPileUpPtRefup();
  if (iFJ4jesPileUpPtRefup_branch != 0) iFJ4jesPileUpPtRefup();
  if (iVMD0jesPileUpPtRefup_branch != 0) iVMD0jesPileUpPtRefup();
  if (iVMD1jesPileUpPtRefup_branch != 0) iVMD1jesPileUpPtRefup();
  if (iVMD2jesPileUpPtRefup_branch != 0) iVMD2jesPileUpPtRefup();
  if (iVMD3jesPileUpPtRefup_branch != 0) iVMD3jesPileUpPtRefup();
  if (iVMD4jesPileUpPtRefup_branch != 0) iVMD4jesPileUpPtRefup();
  if (iWMD0jesPileUpPtRefup_branch != 0) iWMD0jesPileUpPtRefup();
  if (iWMD1jesPileUpPtRefup_branch != 0) iWMD1jesPileUpPtRefup();
  if (iWMD2jesPileUpPtRefup_branch != 0) iWMD2jesPileUpPtRefup();
  if (iWMD3jesPileUpPtRefup_branch != 0) iWMD3jesPileUpPtRefup();
  if (iWMD4jesPileUpPtRefup_branch != 0) iWMD4jesPileUpPtRefup();
  if (METjesPileUpPtRefup_branch != 0) METjesPileUpPtRefup();
  if (NujesPileUpPtRefup_branch != 0) NujesPileUpPtRefup();
  if (NJjesPileUpPtRefup_branch != 0) NJjesPileUpPtRefup();
  if (NbLoosejesPileUpPtRefup_branch != 0) NbLoosejesPileUpPtRefup();
  if (NbMediumjesPileUpPtRefup_branch != 0) NbMediumjesPileUpPtRefup();
  if (NbTightjesPileUpPtRefup_branch != 0) NbTightjesPileUpPtRefup();
  if (NoORNbLoosejesPileUpPtRefup_branch != 0) NoORNbLoosejesPileUpPtRefup();
  if (NoORNbMediumjesPileUpPtRefup_branch != 0) NoORNbMediumjesPileUpPtRefup();
  if (NoORNbTightjesPileUpPtRefup_branch != 0) NoORNbTightjesPileUpPtRefup();
  if (J0jesPileUpPtRefup_branch != 0) J0jesPileUpPtRefup();
  if (J1jesPileUpPtRefup_branch != 0) J1jesPileUpPtRefup();
  if (J2jesPileUpPtRefup_branch != 0) J2jesPileUpPtRefup();
  if (J3jesPileUpPtRefup_branch != 0) J3jesPileUpPtRefup();
  if (J4jesPileUpPtRefup_branch != 0) J4jesPileUpPtRefup();
  if (J5jesPileUpPtRefup_branch != 0) J5jesPileUpPtRefup();
  if (J6jesPileUpPtRefup_branch != 0) J6jesPileUpPtRefup();
  if (J7jesPileUpPtRefup_branch != 0) J7jesPileUpPtRefup();
  if (NQJGenjesPileUpPtRefup_branch != 0) NQJGenjesPileUpPtRefup();
  if (NBJGenjesPileUpPtRefup_branch != 0) NBJGenjesPileUpPtRefup();
  if (NLJGenjesPileUpPtRefup_branch != 0) NLJGenjesPileUpPtRefup();
  if (MVVXjesPileUpPtRefup_branch != 0) MVVXjesPileUpPtRefup();
  if (PtVVXjesPileUpPtRefup_branch != 0) PtVVXjesPileUpPtRefup();
  if (HTjesPileUpPtRefup_branch != 0) HTjesPileUpPtRefup();
  if (HTJjesPileUpPtRefup_branch != 0) HTJjesPileUpPtRefup();
  if (HTFJjesPileUpPtRefup_branch != 0) HTFJjesPileUpPtRefup();
  if (SumPtFJjesPileUpPtRefup_branch != 0) SumPtFJjesPileUpPtRefup();
  if (SumPtJjesPileUpPtRefup_branch != 0) SumPtJjesPileUpPtRefup();
  if (JsjesPileUpPtRefdn_branch != 0) JsjesPileUpPtRefdn();
  if (NFJjesPileUpPtRefdn_branch != 0) NFJjesPileUpPtRefdn();
  if (FJ0jesPileUpPtRefdn_branch != 0) FJ0jesPileUpPtRefdn();
  if (FJ1jesPileUpPtRefdn_branch != 0) FJ1jesPileUpPtRefdn();
  if (FJ2jesPileUpPtRefdn_branch != 0) FJ2jesPileUpPtRefdn();
  if (FJ3jesPileUpPtRefdn_branch != 0) FJ3jesPileUpPtRefdn();
  if (FJ4jesPileUpPtRefdn_branch != 0) FJ4jesPileUpPtRefdn();
  if (VMD0jesPileUpPtRefdn_branch != 0) VMD0jesPileUpPtRefdn();
  if (VMD1jesPileUpPtRefdn_branch != 0) VMD1jesPileUpPtRefdn();
  if (VMD2jesPileUpPtRefdn_branch != 0) VMD2jesPileUpPtRefdn();
  if (VMD3jesPileUpPtRefdn_branch != 0) VMD3jesPileUpPtRefdn();
  if (VMD4jesPileUpPtRefdn_branch != 0) VMD4jesPileUpPtRefdn();
  if (WMD0jesPileUpPtRefdn_branch != 0) WMD0jesPileUpPtRefdn();
  if (WMD1jesPileUpPtRefdn_branch != 0) WMD1jesPileUpPtRefdn();
  if (WMD2jesPileUpPtRefdn_branch != 0) WMD2jesPileUpPtRefdn();
  if (WMD3jesPileUpPtRefdn_branch != 0) WMD3jesPileUpPtRefdn();
  if (WMD4jesPileUpPtRefdn_branch != 0) WMD4jesPileUpPtRefdn();
  if (NQGen0jesPileUpPtRefdn_branch != 0) NQGen0jesPileUpPtRefdn();
  if (NQGen1jesPileUpPtRefdn_branch != 0) NQGen1jesPileUpPtRefdn();
  if (NQGen2jesPileUpPtRefdn_branch != 0) NQGen2jesPileUpPtRefdn();
  if (NQGen3jesPileUpPtRefdn_branch != 0) NQGen3jesPileUpPtRefdn();
  if (NQGen4jesPileUpPtRefdn_branch != 0) NQGen4jesPileUpPtRefdn();
  if (NBGen0jesPileUpPtRefdn_branch != 0) NBGen0jesPileUpPtRefdn();
  if (NBGen1jesPileUpPtRefdn_branch != 0) NBGen1jesPileUpPtRefdn();
  if (NBGen2jesPileUpPtRefdn_branch != 0) NBGen2jesPileUpPtRefdn();
  if (NBGen3jesPileUpPtRefdn_branch != 0) NBGen3jesPileUpPtRefdn();
  if (NBGen4jesPileUpPtRefdn_branch != 0) NBGen4jesPileUpPtRefdn();
  if (NLGen0jesPileUpPtRefdn_branch != 0) NLGen0jesPileUpPtRefdn();
  if (NLGen1jesPileUpPtRefdn_branch != 0) NLGen1jesPileUpPtRefdn();
  if (NLGen2jesPileUpPtRefdn_branch != 0) NLGen2jesPileUpPtRefdn();
  if (NLGen3jesPileUpPtRefdn_branch != 0) NLGen3jesPileUpPtRefdn();
  if (NLGen4jesPileUpPtRefdn_branch != 0) NLGen4jesPileUpPtRefdn();
  if (NVQGen0jesPileUpPtRefdn_branch != 0) NVQGen0jesPileUpPtRefdn();
  if (NVQGen1jesPileUpPtRefdn_branch != 0) NVQGen1jesPileUpPtRefdn();
  if (NVQGen2jesPileUpPtRefdn_branch != 0) NVQGen2jesPileUpPtRefdn();
  if (NVQGen3jesPileUpPtRefdn_branch != 0) NVQGen3jesPileUpPtRefdn();
  if (NVQGen4jesPileUpPtRefdn_branch != 0) NVQGen4jesPileUpPtRefdn();
  if (NiFJjesPileUpPtRefdn_branch != 0) NiFJjesPileUpPtRefdn();
  if (iFJ0jesPileUpPtRefdn_branch != 0) iFJ0jesPileUpPtRefdn();
  if (iFJ1jesPileUpPtRefdn_branch != 0) iFJ1jesPileUpPtRefdn();
  if (iFJ2jesPileUpPtRefdn_branch != 0) iFJ2jesPileUpPtRefdn();
  if (iFJ3jesPileUpPtRefdn_branch != 0) iFJ3jesPileUpPtRefdn();
  if (iFJ4jesPileUpPtRefdn_branch != 0) iFJ4jesPileUpPtRefdn();
  if (iVMD0jesPileUpPtRefdn_branch != 0) iVMD0jesPileUpPtRefdn();
  if (iVMD1jesPileUpPtRefdn_branch != 0) iVMD1jesPileUpPtRefdn();
  if (iVMD2jesPileUpPtRefdn_branch != 0) iVMD2jesPileUpPtRefdn();
  if (iVMD3jesPileUpPtRefdn_branch != 0) iVMD3jesPileUpPtRefdn();
  if (iVMD4jesPileUpPtRefdn_branch != 0) iVMD4jesPileUpPtRefdn();
  if (iWMD0jesPileUpPtRefdn_branch != 0) iWMD0jesPileUpPtRefdn();
  if (iWMD1jesPileUpPtRefdn_branch != 0) iWMD1jesPileUpPtRefdn();
  if (iWMD2jesPileUpPtRefdn_branch != 0) iWMD2jesPileUpPtRefdn();
  if (iWMD3jesPileUpPtRefdn_branch != 0) iWMD3jesPileUpPtRefdn();
  if (iWMD4jesPileUpPtRefdn_branch != 0) iWMD4jesPileUpPtRefdn();
  if (METjesPileUpPtRefdn_branch != 0) METjesPileUpPtRefdn();
  if (NujesPileUpPtRefdn_branch != 0) NujesPileUpPtRefdn();
  if (NJjesPileUpPtRefdn_branch != 0) NJjesPileUpPtRefdn();
  if (NbLoosejesPileUpPtRefdn_branch != 0) NbLoosejesPileUpPtRefdn();
  if (NbMediumjesPileUpPtRefdn_branch != 0) NbMediumjesPileUpPtRefdn();
  if (NbTightjesPileUpPtRefdn_branch != 0) NbTightjesPileUpPtRefdn();
  if (NoORNbLoosejesPileUpPtRefdn_branch != 0) NoORNbLoosejesPileUpPtRefdn();
  if (NoORNbMediumjesPileUpPtRefdn_branch != 0) NoORNbMediumjesPileUpPtRefdn();
  if (NoORNbTightjesPileUpPtRefdn_branch != 0) NoORNbTightjesPileUpPtRefdn();
  if (J0jesPileUpPtRefdn_branch != 0) J0jesPileUpPtRefdn();
  if (J1jesPileUpPtRefdn_branch != 0) J1jesPileUpPtRefdn();
  if (J2jesPileUpPtRefdn_branch != 0) J2jesPileUpPtRefdn();
  if (J3jesPileUpPtRefdn_branch != 0) J3jesPileUpPtRefdn();
  if (J4jesPileUpPtRefdn_branch != 0) J4jesPileUpPtRefdn();
  if (J5jesPileUpPtRefdn_branch != 0) J5jesPileUpPtRefdn();
  if (J6jesPileUpPtRefdn_branch != 0) J6jesPileUpPtRefdn();
  if (J7jesPileUpPtRefdn_branch != 0) J7jesPileUpPtRefdn();
  if (NQJGenjesPileUpPtRefdn_branch != 0) NQJGenjesPileUpPtRefdn();
  if (NBJGenjesPileUpPtRefdn_branch != 0) NBJGenjesPileUpPtRefdn();
  if (NLJGenjesPileUpPtRefdn_branch != 0) NLJGenjesPileUpPtRefdn();
  if (MVVXjesPileUpPtRefdn_branch != 0) MVVXjesPileUpPtRefdn();
  if (PtVVXjesPileUpPtRefdn_branch != 0) PtVVXjesPileUpPtRefdn();
  if (HTjesPileUpPtRefdn_branch != 0) HTjesPileUpPtRefdn();
  if (HTJjesPileUpPtRefdn_branch != 0) HTJjesPileUpPtRefdn();
  if (HTFJjesPileUpPtRefdn_branch != 0) HTFJjesPileUpPtRefdn();
  if (SumPtFJjesPileUpPtRefdn_branch != 0) SumPtFJjesPileUpPtRefdn();
  if (SumPtJjesPileUpPtRefdn_branch != 0) SumPtJjesPileUpPtRefdn();
  if (JsjesPileUpPtBBup_branch != 0) JsjesPileUpPtBBup();
  if (NFJjesPileUpPtBBup_branch != 0) NFJjesPileUpPtBBup();
  if (FJ0jesPileUpPtBBup_branch != 0) FJ0jesPileUpPtBBup();
  if (FJ1jesPileUpPtBBup_branch != 0) FJ1jesPileUpPtBBup();
  if (FJ2jesPileUpPtBBup_branch != 0) FJ2jesPileUpPtBBup();
  if (FJ3jesPileUpPtBBup_branch != 0) FJ3jesPileUpPtBBup();
  if (FJ4jesPileUpPtBBup_branch != 0) FJ4jesPileUpPtBBup();
  if (VMD0jesPileUpPtBBup_branch != 0) VMD0jesPileUpPtBBup();
  if (VMD1jesPileUpPtBBup_branch != 0) VMD1jesPileUpPtBBup();
  if (VMD2jesPileUpPtBBup_branch != 0) VMD2jesPileUpPtBBup();
  if (VMD3jesPileUpPtBBup_branch != 0) VMD3jesPileUpPtBBup();
  if (VMD4jesPileUpPtBBup_branch != 0) VMD4jesPileUpPtBBup();
  if (WMD0jesPileUpPtBBup_branch != 0) WMD0jesPileUpPtBBup();
  if (WMD1jesPileUpPtBBup_branch != 0) WMD1jesPileUpPtBBup();
  if (WMD2jesPileUpPtBBup_branch != 0) WMD2jesPileUpPtBBup();
  if (WMD3jesPileUpPtBBup_branch != 0) WMD3jesPileUpPtBBup();
  if (WMD4jesPileUpPtBBup_branch != 0) WMD4jesPileUpPtBBup();
  if (NQGen0jesPileUpPtBBup_branch != 0) NQGen0jesPileUpPtBBup();
  if (NQGen1jesPileUpPtBBup_branch != 0) NQGen1jesPileUpPtBBup();
  if (NQGen2jesPileUpPtBBup_branch != 0) NQGen2jesPileUpPtBBup();
  if (NQGen3jesPileUpPtBBup_branch != 0) NQGen3jesPileUpPtBBup();
  if (NQGen4jesPileUpPtBBup_branch != 0) NQGen4jesPileUpPtBBup();
  if (NBGen0jesPileUpPtBBup_branch != 0) NBGen0jesPileUpPtBBup();
  if (NBGen1jesPileUpPtBBup_branch != 0) NBGen1jesPileUpPtBBup();
  if (NBGen2jesPileUpPtBBup_branch != 0) NBGen2jesPileUpPtBBup();
  if (NBGen3jesPileUpPtBBup_branch != 0) NBGen3jesPileUpPtBBup();
  if (NBGen4jesPileUpPtBBup_branch != 0) NBGen4jesPileUpPtBBup();
  if (NLGen0jesPileUpPtBBup_branch != 0) NLGen0jesPileUpPtBBup();
  if (NLGen1jesPileUpPtBBup_branch != 0) NLGen1jesPileUpPtBBup();
  if (NLGen2jesPileUpPtBBup_branch != 0) NLGen2jesPileUpPtBBup();
  if (NLGen3jesPileUpPtBBup_branch != 0) NLGen3jesPileUpPtBBup();
  if (NLGen4jesPileUpPtBBup_branch != 0) NLGen4jesPileUpPtBBup();
  if (NVQGen0jesPileUpPtBBup_branch != 0) NVQGen0jesPileUpPtBBup();
  if (NVQGen1jesPileUpPtBBup_branch != 0) NVQGen1jesPileUpPtBBup();
  if (NVQGen2jesPileUpPtBBup_branch != 0) NVQGen2jesPileUpPtBBup();
  if (NVQGen3jesPileUpPtBBup_branch != 0) NVQGen3jesPileUpPtBBup();
  if (NVQGen4jesPileUpPtBBup_branch != 0) NVQGen4jesPileUpPtBBup();
  if (NiFJjesPileUpPtBBup_branch != 0) NiFJjesPileUpPtBBup();
  if (iFJ0jesPileUpPtBBup_branch != 0) iFJ0jesPileUpPtBBup();
  if (iFJ1jesPileUpPtBBup_branch != 0) iFJ1jesPileUpPtBBup();
  if (iFJ2jesPileUpPtBBup_branch != 0) iFJ2jesPileUpPtBBup();
  if (iFJ3jesPileUpPtBBup_branch != 0) iFJ3jesPileUpPtBBup();
  if (iFJ4jesPileUpPtBBup_branch != 0) iFJ4jesPileUpPtBBup();
  if (iVMD0jesPileUpPtBBup_branch != 0) iVMD0jesPileUpPtBBup();
  if (iVMD1jesPileUpPtBBup_branch != 0) iVMD1jesPileUpPtBBup();
  if (iVMD2jesPileUpPtBBup_branch != 0) iVMD2jesPileUpPtBBup();
  if (iVMD3jesPileUpPtBBup_branch != 0) iVMD3jesPileUpPtBBup();
  if (iVMD4jesPileUpPtBBup_branch != 0) iVMD4jesPileUpPtBBup();
  if (iWMD0jesPileUpPtBBup_branch != 0) iWMD0jesPileUpPtBBup();
  if (iWMD1jesPileUpPtBBup_branch != 0) iWMD1jesPileUpPtBBup();
  if (iWMD2jesPileUpPtBBup_branch != 0) iWMD2jesPileUpPtBBup();
  if (iWMD3jesPileUpPtBBup_branch != 0) iWMD3jesPileUpPtBBup();
  if (iWMD4jesPileUpPtBBup_branch != 0) iWMD4jesPileUpPtBBup();
  if (METjesPileUpPtBBup_branch != 0) METjesPileUpPtBBup();
  if (NujesPileUpPtBBup_branch != 0) NujesPileUpPtBBup();
  if (NJjesPileUpPtBBup_branch != 0) NJjesPileUpPtBBup();
  if (NbLoosejesPileUpPtBBup_branch != 0) NbLoosejesPileUpPtBBup();
  if (NbMediumjesPileUpPtBBup_branch != 0) NbMediumjesPileUpPtBBup();
  if (NbTightjesPileUpPtBBup_branch != 0) NbTightjesPileUpPtBBup();
  if (NoORNbLoosejesPileUpPtBBup_branch != 0) NoORNbLoosejesPileUpPtBBup();
  if (NoORNbMediumjesPileUpPtBBup_branch != 0) NoORNbMediumjesPileUpPtBBup();
  if (NoORNbTightjesPileUpPtBBup_branch != 0) NoORNbTightjesPileUpPtBBup();
  if (J0jesPileUpPtBBup_branch != 0) J0jesPileUpPtBBup();
  if (J1jesPileUpPtBBup_branch != 0) J1jesPileUpPtBBup();
  if (J2jesPileUpPtBBup_branch != 0) J2jesPileUpPtBBup();
  if (J3jesPileUpPtBBup_branch != 0) J3jesPileUpPtBBup();
  if (J4jesPileUpPtBBup_branch != 0) J4jesPileUpPtBBup();
  if (J5jesPileUpPtBBup_branch != 0) J5jesPileUpPtBBup();
  if (J6jesPileUpPtBBup_branch != 0) J6jesPileUpPtBBup();
  if (J7jesPileUpPtBBup_branch != 0) J7jesPileUpPtBBup();
  if (NQJGenjesPileUpPtBBup_branch != 0) NQJGenjesPileUpPtBBup();
  if (NBJGenjesPileUpPtBBup_branch != 0) NBJGenjesPileUpPtBBup();
  if (NLJGenjesPileUpPtBBup_branch != 0) NLJGenjesPileUpPtBBup();
  if (MVVXjesPileUpPtBBup_branch != 0) MVVXjesPileUpPtBBup();
  if (PtVVXjesPileUpPtBBup_branch != 0) PtVVXjesPileUpPtBBup();
  if (HTjesPileUpPtBBup_branch != 0) HTjesPileUpPtBBup();
  if (HTJjesPileUpPtBBup_branch != 0) HTJjesPileUpPtBBup();
  if (HTFJjesPileUpPtBBup_branch != 0) HTFJjesPileUpPtBBup();
  if (SumPtFJjesPileUpPtBBup_branch != 0) SumPtFJjesPileUpPtBBup();
  if (SumPtJjesPileUpPtBBup_branch != 0) SumPtJjesPileUpPtBBup();
  if (JsjesPileUpPtBBdn_branch != 0) JsjesPileUpPtBBdn();
  if (NFJjesPileUpPtBBdn_branch != 0) NFJjesPileUpPtBBdn();
  if (FJ0jesPileUpPtBBdn_branch != 0) FJ0jesPileUpPtBBdn();
  if (FJ1jesPileUpPtBBdn_branch != 0) FJ1jesPileUpPtBBdn();
  if (FJ2jesPileUpPtBBdn_branch != 0) FJ2jesPileUpPtBBdn();
  if (FJ3jesPileUpPtBBdn_branch != 0) FJ3jesPileUpPtBBdn();
  if (FJ4jesPileUpPtBBdn_branch != 0) FJ4jesPileUpPtBBdn();
  if (VMD0jesPileUpPtBBdn_branch != 0) VMD0jesPileUpPtBBdn();
  if (VMD1jesPileUpPtBBdn_branch != 0) VMD1jesPileUpPtBBdn();
  if (VMD2jesPileUpPtBBdn_branch != 0) VMD2jesPileUpPtBBdn();
  if (VMD3jesPileUpPtBBdn_branch != 0) VMD3jesPileUpPtBBdn();
  if (VMD4jesPileUpPtBBdn_branch != 0) VMD4jesPileUpPtBBdn();
  if (WMD0jesPileUpPtBBdn_branch != 0) WMD0jesPileUpPtBBdn();
  if (WMD1jesPileUpPtBBdn_branch != 0) WMD1jesPileUpPtBBdn();
  if (WMD2jesPileUpPtBBdn_branch != 0) WMD2jesPileUpPtBBdn();
  if (WMD3jesPileUpPtBBdn_branch != 0) WMD3jesPileUpPtBBdn();
  if (WMD4jesPileUpPtBBdn_branch != 0) WMD4jesPileUpPtBBdn();
  if (NQGen0jesPileUpPtBBdn_branch != 0) NQGen0jesPileUpPtBBdn();
  if (NQGen1jesPileUpPtBBdn_branch != 0) NQGen1jesPileUpPtBBdn();
  if (NQGen2jesPileUpPtBBdn_branch != 0) NQGen2jesPileUpPtBBdn();
  if (NQGen3jesPileUpPtBBdn_branch != 0) NQGen3jesPileUpPtBBdn();
  if (NQGen4jesPileUpPtBBdn_branch != 0) NQGen4jesPileUpPtBBdn();
  if (NBGen0jesPileUpPtBBdn_branch != 0) NBGen0jesPileUpPtBBdn();
  if (NBGen1jesPileUpPtBBdn_branch != 0) NBGen1jesPileUpPtBBdn();
  if (NBGen2jesPileUpPtBBdn_branch != 0) NBGen2jesPileUpPtBBdn();
  if (NBGen3jesPileUpPtBBdn_branch != 0) NBGen3jesPileUpPtBBdn();
  if (NBGen4jesPileUpPtBBdn_branch != 0) NBGen4jesPileUpPtBBdn();
  if (NLGen0jesPileUpPtBBdn_branch != 0) NLGen0jesPileUpPtBBdn();
  if (NLGen1jesPileUpPtBBdn_branch != 0) NLGen1jesPileUpPtBBdn();
  if (NLGen2jesPileUpPtBBdn_branch != 0) NLGen2jesPileUpPtBBdn();
  if (NLGen3jesPileUpPtBBdn_branch != 0) NLGen3jesPileUpPtBBdn();
  if (NLGen4jesPileUpPtBBdn_branch != 0) NLGen4jesPileUpPtBBdn();
  if (NVQGen0jesPileUpPtBBdn_branch != 0) NVQGen0jesPileUpPtBBdn();
  if (NVQGen1jesPileUpPtBBdn_branch != 0) NVQGen1jesPileUpPtBBdn();
  if (NVQGen2jesPileUpPtBBdn_branch != 0) NVQGen2jesPileUpPtBBdn();
  if (NVQGen3jesPileUpPtBBdn_branch != 0) NVQGen3jesPileUpPtBBdn();
  if (NVQGen4jesPileUpPtBBdn_branch != 0) NVQGen4jesPileUpPtBBdn();
  if (NiFJjesPileUpPtBBdn_branch != 0) NiFJjesPileUpPtBBdn();
  if (iFJ0jesPileUpPtBBdn_branch != 0) iFJ0jesPileUpPtBBdn();
  if (iFJ1jesPileUpPtBBdn_branch != 0) iFJ1jesPileUpPtBBdn();
  if (iFJ2jesPileUpPtBBdn_branch != 0) iFJ2jesPileUpPtBBdn();
  if (iFJ3jesPileUpPtBBdn_branch != 0) iFJ3jesPileUpPtBBdn();
  if (iFJ4jesPileUpPtBBdn_branch != 0) iFJ4jesPileUpPtBBdn();
  if (iVMD0jesPileUpPtBBdn_branch != 0) iVMD0jesPileUpPtBBdn();
  if (iVMD1jesPileUpPtBBdn_branch != 0) iVMD1jesPileUpPtBBdn();
  if (iVMD2jesPileUpPtBBdn_branch != 0) iVMD2jesPileUpPtBBdn();
  if (iVMD3jesPileUpPtBBdn_branch != 0) iVMD3jesPileUpPtBBdn();
  if (iVMD4jesPileUpPtBBdn_branch != 0) iVMD4jesPileUpPtBBdn();
  if (iWMD0jesPileUpPtBBdn_branch != 0) iWMD0jesPileUpPtBBdn();
  if (iWMD1jesPileUpPtBBdn_branch != 0) iWMD1jesPileUpPtBBdn();
  if (iWMD2jesPileUpPtBBdn_branch != 0) iWMD2jesPileUpPtBBdn();
  if (iWMD3jesPileUpPtBBdn_branch != 0) iWMD3jesPileUpPtBBdn();
  if (iWMD4jesPileUpPtBBdn_branch != 0) iWMD4jesPileUpPtBBdn();
  if (METjesPileUpPtBBdn_branch != 0) METjesPileUpPtBBdn();
  if (NujesPileUpPtBBdn_branch != 0) NujesPileUpPtBBdn();
  if (NJjesPileUpPtBBdn_branch != 0) NJjesPileUpPtBBdn();
  if (NbLoosejesPileUpPtBBdn_branch != 0) NbLoosejesPileUpPtBBdn();
  if (NbMediumjesPileUpPtBBdn_branch != 0) NbMediumjesPileUpPtBBdn();
  if (NbTightjesPileUpPtBBdn_branch != 0) NbTightjesPileUpPtBBdn();
  if (NoORNbLoosejesPileUpPtBBdn_branch != 0) NoORNbLoosejesPileUpPtBBdn();
  if (NoORNbMediumjesPileUpPtBBdn_branch != 0) NoORNbMediumjesPileUpPtBBdn();
  if (NoORNbTightjesPileUpPtBBdn_branch != 0) NoORNbTightjesPileUpPtBBdn();
  if (J0jesPileUpPtBBdn_branch != 0) J0jesPileUpPtBBdn();
  if (J1jesPileUpPtBBdn_branch != 0) J1jesPileUpPtBBdn();
  if (J2jesPileUpPtBBdn_branch != 0) J2jesPileUpPtBBdn();
  if (J3jesPileUpPtBBdn_branch != 0) J3jesPileUpPtBBdn();
  if (J4jesPileUpPtBBdn_branch != 0) J4jesPileUpPtBBdn();
  if (J5jesPileUpPtBBdn_branch != 0) J5jesPileUpPtBBdn();
  if (J6jesPileUpPtBBdn_branch != 0) J6jesPileUpPtBBdn();
  if (J7jesPileUpPtBBdn_branch != 0) J7jesPileUpPtBBdn();
  if (NQJGenjesPileUpPtBBdn_branch != 0) NQJGenjesPileUpPtBBdn();
  if (NBJGenjesPileUpPtBBdn_branch != 0) NBJGenjesPileUpPtBBdn();
  if (NLJGenjesPileUpPtBBdn_branch != 0) NLJGenjesPileUpPtBBdn();
  if (MVVXjesPileUpPtBBdn_branch != 0) MVVXjesPileUpPtBBdn();
  if (PtVVXjesPileUpPtBBdn_branch != 0) PtVVXjesPileUpPtBBdn();
  if (HTjesPileUpPtBBdn_branch != 0) HTjesPileUpPtBBdn();
  if (HTJjesPileUpPtBBdn_branch != 0) HTJjesPileUpPtBBdn();
  if (HTFJjesPileUpPtBBdn_branch != 0) HTFJjesPileUpPtBBdn();
  if (SumPtFJjesPileUpPtBBdn_branch != 0) SumPtFJjesPileUpPtBBdn();
  if (SumPtJjesPileUpPtBBdn_branch != 0) SumPtJjesPileUpPtBBdn();
  if (JsjesPileUpPtEC1up_branch != 0) JsjesPileUpPtEC1up();
  if (NFJjesPileUpPtEC1up_branch != 0) NFJjesPileUpPtEC1up();
  if (FJ0jesPileUpPtEC1up_branch != 0) FJ0jesPileUpPtEC1up();
  if (FJ1jesPileUpPtEC1up_branch != 0) FJ1jesPileUpPtEC1up();
  if (FJ2jesPileUpPtEC1up_branch != 0) FJ2jesPileUpPtEC1up();
  if (FJ3jesPileUpPtEC1up_branch != 0) FJ3jesPileUpPtEC1up();
  if (FJ4jesPileUpPtEC1up_branch != 0) FJ4jesPileUpPtEC1up();
  if (VMD0jesPileUpPtEC1up_branch != 0) VMD0jesPileUpPtEC1up();
  if (VMD1jesPileUpPtEC1up_branch != 0) VMD1jesPileUpPtEC1up();
  if (VMD2jesPileUpPtEC1up_branch != 0) VMD2jesPileUpPtEC1up();
  if (VMD3jesPileUpPtEC1up_branch != 0) VMD3jesPileUpPtEC1up();
  if (VMD4jesPileUpPtEC1up_branch != 0) VMD4jesPileUpPtEC1up();
  if (WMD0jesPileUpPtEC1up_branch != 0) WMD0jesPileUpPtEC1up();
  if (WMD1jesPileUpPtEC1up_branch != 0) WMD1jesPileUpPtEC1up();
  if (WMD2jesPileUpPtEC1up_branch != 0) WMD2jesPileUpPtEC1up();
  if (WMD3jesPileUpPtEC1up_branch != 0) WMD3jesPileUpPtEC1up();
  if (WMD4jesPileUpPtEC1up_branch != 0) WMD4jesPileUpPtEC1up();
  if (NQGen0jesPileUpPtEC1up_branch != 0) NQGen0jesPileUpPtEC1up();
  if (NQGen1jesPileUpPtEC1up_branch != 0) NQGen1jesPileUpPtEC1up();
  if (NQGen2jesPileUpPtEC1up_branch != 0) NQGen2jesPileUpPtEC1up();
  if (NQGen3jesPileUpPtEC1up_branch != 0) NQGen3jesPileUpPtEC1up();
  if (NQGen4jesPileUpPtEC1up_branch != 0) NQGen4jesPileUpPtEC1up();
  if (NBGen0jesPileUpPtEC1up_branch != 0) NBGen0jesPileUpPtEC1up();
  if (NBGen1jesPileUpPtEC1up_branch != 0) NBGen1jesPileUpPtEC1up();
  if (NBGen2jesPileUpPtEC1up_branch != 0) NBGen2jesPileUpPtEC1up();
  if (NBGen3jesPileUpPtEC1up_branch != 0) NBGen3jesPileUpPtEC1up();
  if (NBGen4jesPileUpPtEC1up_branch != 0) NBGen4jesPileUpPtEC1up();
  if (NLGen0jesPileUpPtEC1up_branch != 0) NLGen0jesPileUpPtEC1up();
  if (NLGen1jesPileUpPtEC1up_branch != 0) NLGen1jesPileUpPtEC1up();
  if (NLGen2jesPileUpPtEC1up_branch != 0) NLGen2jesPileUpPtEC1up();
  if (NLGen3jesPileUpPtEC1up_branch != 0) NLGen3jesPileUpPtEC1up();
  if (NLGen4jesPileUpPtEC1up_branch != 0) NLGen4jesPileUpPtEC1up();
  if (NVQGen0jesPileUpPtEC1up_branch != 0) NVQGen0jesPileUpPtEC1up();
  if (NVQGen1jesPileUpPtEC1up_branch != 0) NVQGen1jesPileUpPtEC1up();
  if (NVQGen2jesPileUpPtEC1up_branch != 0) NVQGen2jesPileUpPtEC1up();
  if (NVQGen3jesPileUpPtEC1up_branch != 0) NVQGen3jesPileUpPtEC1up();
  if (NVQGen4jesPileUpPtEC1up_branch != 0) NVQGen4jesPileUpPtEC1up();
  if (NiFJjesPileUpPtEC1up_branch != 0) NiFJjesPileUpPtEC1up();
  if (iFJ0jesPileUpPtEC1up_branch != 0) iFJ0jesPileUpPtEC1up();
  if (iFJ1jesPileUpPtEC1up_branch != 0) iFJ1jesPileUpPtEC1up();
  if (iFJ2jesPileUpPtEC1up_branch != 0) iFJ2jesPileUpPtEC1up();
  if (iFJ3jesPileUpPtEC1up_branch != 0) iFJ3jesPileUpPtEC1up();
  if (iFJ4jesPileUpPtEC1up_branch != 0) iFJ4jesPileUpPtEC1up();
  if (iVMD0jesPileUpPtEC1up_branch != 0) iVMD0jesPileUpPtEC1up();
  if (iVMD1jesPileUpPtEC1up_branch != 0) iVMD1jesPileUpPtEC1up();
  if (iVMD2jesPileUpPtEC1up_branch != 0) iVMD2jesPileUpPtEC1up();
  if (iVMD3jesPileUpPtEC1up_branch != 0) iVMD3jesPileUpPtEC1up();
  if (iVMD4jesPileUpPtEC1up_branch != 0) iVMD4jesPileUpPtEC1up();
  if (iWMD0jesPileUpPtEC1up_branch != 0) iWMD0jesPileUpPtEC1up();
  if (iWMD1jesPileUpPtEC1up_branch != 0) iWMD1jesPileUpPtEC1up();
  if (iWMD2jesPileUpPtEC1up_branch != 0) iWMD2jesPileUpPtEC1up();
  if (iWMD3jesPileUpPtEC1up_branch != 0) iWMD3jesPileUpPtEC1up();
  if (iWMD4jesPileUpPtEC1up_branch != 0) iWMD4jesPileUpPtEC1up();
  if (METjesPileUpPtEC1up_branch != 0) METjesPileUpPtEC1up();
  if (NujesPileUpPtEC1up_branch != 0) NujesPileUpPtEC1up();
  if (NJjesPileUpPtEC1up_branch != 0) NJjesPileUpPtEC1up();
  if (NbLoosejesPileUpPtEC1up_branch != 0) NbLoosejesPileUpPtEC1up();
  if (NbMediumjesPileUpPtEC1up_branch != 0) NbMediumjesPileUpPtEC1up();
  if (NbTightjesPileUpPtEC1up_branch != 0) NbTightjesPileUpPtEC1up();
  if (NoORNbLoosejesPileUpPtEC1up_branch != 0) NoORNbLoosejesPileUpPtEC1up();
  if (NoORNbMediumjesPileUpPtEC1up_branch != 0) NoORNbMediumjesPileUpPtEC1up();
  if (NoORNbTightjesPileUpPtEC1up_branch != 0) NoORNbTightjesPileUpPtEC1up();
  if (J0jesPileUpPtEC1up_branch != 0) J0jesPileUpPtEC1up();
  if (J1jesPileUpPtEC1up_branch != 0) J1jesPileUpPtEC1up();
  if (J2jesPileUpPtEC1up_branch != 0) J2jesPileUpPtEC1up();
  if (J3jesPileUpPtEC1up_branch != 0) J3jesPileUpPtEC1up();
  if (J4jesPileUpPtEC1up_branch != 0) J4jesPileUpPtEC1up();
  if (J5jesPileUpPtEC1up_branch != 0) J5jesPileUpPtEC1up();
  if (J6jesPileUpPtEC1up_branch != 0) J6jesPileUpPtEC1up();
  if (J7jesPileUpPtEC1up_branch != 0) J7jesPileUpPtEC1up();
  if (NQJGenjesPileUpPtEC1up_branch != 0) NQJGenjesPileUpPtEC1up();
  if (NBJGenjesPileUpPtEC1up_branch != 0) NBJGenjesPileUpPtEC1up();
  if (NLJGenjesPileUpPtEC1up_branch != 0) NLJGenjesPileUpPtEC1up();
  if (MVVXjesPileUpPtEC1up_branch != 0) MVVXjesPileUpPtEC1up();
  if (PtVVXjesPileUpPtEC1up_branch != 0) PtVVXjesPileUpPtEC1up();
  if (HTjesPileUpPtEC1up_branch != 0) HTjesPileUpPtEC1up();
  if (HTJjesPileUpPtEC1up_branch != 0) HTJjesPileUpPtEC1up();
  if (HTFJjesPileUpPtEC1up_branch != 0) HTFJjesPileUpPtEC1up();
  if (SumPtFJjesPileUpPtEC1up_branch != 0) SumPtFJjesPileUpPtEC1up();
  if (SumPtJjesPileUpPtEC1up_branch != 0) SumPtJjesPileUpPtEC1up();
  if (JsjesPileUpPtEC1dn_branch != 0) JsjesPileUpPtEC1dn();
  if (NFJjesPileUpPtEC1dn_branch != 0) NFJjesPileUpPtEC1dn();
  if (FJ0jesPileUpPtEC1dn_branch != 0) FJ0jesPileUpPtEC1dn();
  if (FJ1jesPileUpPtEC1dn_branch != 0) FJ1jesPileUpPtEC1dn();
  if (FJ2jesPileUpPtEC1dn_branch != 0) FJ2jesPileUpPtEC1dn();
  if (FJ3jesPileUpPtEC1dn_branch != 0) FJ3jesPileUpPtEC1dn();
  if (FJ4jesPileUpPtEC1dn_branch != 0) FJ4jesPileUpPtEC1dn();
  if (VMD0jesPileUpPtEC1dn_branch != 0) VMD0jesPileUpPtEC1dn();
  if (VMD1jesPileUpPtEC1dn_branch != 0) VMD1jesPileUpPtEC1dn();
  if (VMD2jesPileUpPtEC1dn_branch != 0) VMD2jesPileUpPtEC1dn();
  if (VMD3jesPileUpPtEC1dn_branch != 0) VMD3jesPileUpPtEC1dn();
  if (VMD4jesPileUpPtEC1dn_branch != 0) VMD4jesPileUpPtEC1dn();
  if (WMD0jesPileUpPtEC1dn_branch != 0) WMD0jesPileUpPtEC1dn();
  if (WMD1jesPileUpPtEC1dn_branch != 0) WMD1jesPileUpPtEC1dn();
  if (WMD2jesPileUpPtEC1dn_branch != 0) WMD2jesPileUpPtEC1dn();
  if (WMD3jesPileUpPtEC1dn_branch != 0) WMD3jesPileUpPtEC1dn();
  if (WMD4jesPileUpPtEC1dn_branch != 0) WMD4jesPileUpPtEC1dn();
  if (NQGen0jesPileUpPtEC1dn_branch != 0) NQGen0jesPileUpPtEC1dn();
  if (NQGen1jesPileUpPtEC1dn_branch != 0) NQGen1jesPileUpPtEC1dn();
  if (NQGen2jesPileUpPtEC1dn_branch != 0) NQGen2jesPileUpPtEC1dn();
  if (NQGen3jesPileUpPtEC1dn_branch != 0) NQGen3jesPileUpPtEC1dn();
  if (NQGen4jesPileUpPtEC1dn_branch != 0) NQGen4jesPileUpPtEC1dn();
  if (NBGen0jesPileUpPtEC1dn_branch != 0) NBGen0jesPileUpPtEC1dn();
  if (NBGen1jesPileUpPtEC1dn_branch != 0) NBGen1jesPileUpPtEC1dn();
  if (NBGen2jesPileUpPtEC1dn_branch != 0) NBGen2jesPileUpPtEC1dn();
  if (NBGen3jesPileUpPtEC1dn_branch != 0) NBGen3jesPileUpPtEC1dn();
  if (NBGen4jesPileUpPtEC1dn_branch != 0) NBGen4jesPileUpPtEC1dn();
  if (NLGen0jesPileUpPtEC1dn_branch != 0) NLGen0jesPileUpPtEC1dn();
  if (NLGen1jesPileUpPtEC1dn_branch != 0) NLGen1jesPileUpPtEC1dn();
  if (NLGen2jesPileUpPtEC1dn_branch != 0) NLGen2jesPileUpPtEC1dn();
  if (NLGen3jesPileUpPtEC1dn_branch != 0) NLGen3jesPileUpPtEC1dn();
  if (NLGen4jesPileUpPtEC1dn_branch != 0) NLGen4jesPileUpPtEC1dn();
  if (NVQGen0jesPileUpPtEC1dn_branch != 0) NVQGen0jesPileUpPtEC1dn();
  if (NVQGen1jesPileUpPtEC1dn_branch != 0) NVQGen1jesPileUpPtEC1dn();
  if (NVQGen2jesPileUpPtEC1dn_branch != 0) NVQGen2jesPileUpPtEC1dn();
  if (NVQGen3jesPileUpPtEC1dn_branch != 0) NVQGen3jesPileUpPtEC1dn();
  if (NVQGen4jesPileUpPtEC1dn_branch != 0) NVQGen4jesPileUpPtEC1dn();
  if (NiFJjesPileUpPtEC1dn_branch != 0) NiFJjesPileUpPtEC1dn();
  if (iFJ0jesPileUpPtEC1dn_branch != 0) iFJ0jesPileUpPtEC1dn();
  if (iFJ1jesPileUpPtEC1dn_branch != 0) iFJ1jesPileUpPtEC1dn();
  if (iFJ2jesPileUpPtEC1dn_branch != 0) iFJ2jesPileUpPtEC1dn();
  if (iFJ3jesPileUpPtEC1dn_branch != 0) iFJ3jesPileUpPtEC1dn();
  if (iFJ4jesPileUpPtEC1dn_branch != 0) iFJ4jesPileUpPtEC1dn();
  if (iVMD0jesPileUpPtEC1dn_branch != 0) iVMD0jesPileUpPtEC1dn();
  if (iVMD1jesPileUpPtEC1dn_branch != 0) iVMD1jesPileUpPtEC1dn();
  if (iVMD2jesPileUpPtEC1dn_branch != 0) iVMD2jesPileUpPtEC1dn();
  if (iVMD3jesPileUpPtEC1dn_branch != 0) iVMD3jesPileUpPtEC1dn();
  if (iVMD4jesPileUpPtEC1dn_branch != 0) iVMD4jesPileUpPtEC1dn();
  if (iWMD0jesPileUpPtEC1dn_branch != 0) iWMD0jesPileUpPtEC1dn();
  if (iWMD1jesPileUpPtEC1dn_branch != 0) iWMD1jesPileUpPtEC1dn();
  if (iWMD2jesPileUpPtEC1dn_branch != 0) iWMD2jesPileUpPtEC1dn();
  if (iWMD3jesPileUpPtEC1dn_branch != 0) iWMD3jesPileUpPtEC1dn();
  if (iWMD4jesPileUpPtEC1dn_branch != 0) iWMD4jesPileUpPtEC1dn();
  if (METjesPileUpPtEC1dn_branch != 0) METjesPileUpPtEC1dn();
  if (NujesPileUpPtEC1dn_branch != 0) NujesPileUpPtEC1dn();
  if (NJjesPileUpPtEC1dn_branch != 0) NJjesPileUpPtEC1dn();
  if (NbLoosejesPileUpPtEC1dn_branch != 0) NbLoosejesPileUpPtEC1dn();
  if (NbMediumjesPileUpPtEC1dn_branch != 0) NbMediumjesPileUpPtEC1dn();
  if (NbTightjesPileUpPtEC1dn_branch != 0) NbTightjesPileUpPtEC1dn();
  if (NoORNbLoosejesPileUpPtEC1dn_branch != 0) NoORNbLoosejesPileUpPtEC1dn();
  if (NoORNbMediumjesPileUpPtEC1dn_branch != 0) NoORNbMediumjesPileUpPtEC1dn();
  if (NoORNbTightjesPileUpPtEC1dn_branch != 0) NoORNbTightjesPileUpPtEC1dn();
  if (J0jesPileUpPtEC1dn_branch != 0) J0jesPileUpPtEC1dn();
  if (J1jesPileUpPtEC1dn_branch != 0) J1jesPileUpPtEC1dn();
  if (J2jesPileUpPtEC1dn_branch != 0) J2jesPileUpPtEC1dn();
  if (J3jesPileUpPtEC1dn_branch != 0) J3jesPileUpPtEC1dn();
  if (J4jesPileUpPtEC1dn_branch != 0) J4jesPileUpPtEC1dn();
  if (J5jesPileUpPtEC1dn_branch != 0) J5jesPileUpPtEC1dn();
  if (J6jesPileUpPtEC1dn_branch != 0) J6jesPileUpPtEC1dn();
  if (J7jesPileUpPtEC1dn_branch != 0) J7jesPileUpPtEC1dn();
  if (NQJGenjesPileUpPtEC1dn_branch != 0) NQJGenjesPileUpPtEC1dn();
  if (NBJGenjesPileUpPtEC1dn_branch != 0) NBJGenjesPileUpPtEC1dn();
  if (NLJGenjesPileUpPtEC1dn_branch != 0) NLJGenjesPileUpPtEC1dn();
  if (MVVXjesPileUpPtEC1dn_branch != 0) MVVXjesPileUpPtEC1dn();
  if (PtVVXjesPileUpPtEC1dn_branch != 0) PtVVXjesPileUpPtEC1dn();
  if (HTjesPileUpPtEC1dn_branch != 0) HTjesPileUpPtEC1dn();
  if (HTJjesPileUpPtEC1dn_branch != 0) HTJjesPileUpPtEC1dn();
  if (HTFJjesPileUpPtEC1dn_branch != 0) HTFJjesPileUpPtEC1dn();
  if (SumPtFJjesPileUpPtEC1dn_branch != 0) SumPtFJjesPileUpPtEC1dn();
  if (SumPtJjesPileUpPtEC1dn_branch != 0) SumPtJjesPileUpPtEC1dn();
  if (JsjesPileUpPtEC2up_branch != 0) JsjesPileUpPtEC2up();
  if (NFJjesPileUpPtEC2up_branch != 0) NFJjesPileUpPtEC2up();
  if (FJ0jesPileUpPtEC2up_branch != 0) FJ0jesPileUpPtEC2up();
  if (FJ1jesPileUpPtEC2up_branch != 0) FJ1jesPileUpPtEC2up();
  if (FJ2jesPileUpPtEC2up_branch != 0) FJ2jesPileUpPtEC2up();
  if (FJ3jesPileUpPtEC2up_branch != 0) FJ3jesPileUpPtEC2up();
  if (FJ4jesPileUpPtEC2up_branch != 0) FJ4jesPileUpPtEC2up();
  if (VMD0jesPileUpPtEC2up_branch != 0) VMD0jesPileUpPtEC2up();
  if (VMD1jesPileUpPtEC2up_branch != 0) VMD1jesPileUpPtEC2up();
  if (VMD2jesPileUpPtEC2up_branch != 0) VMD2jesPileUpPtEC2up();
  if (VMD3jesPileUpPtEC2up_branch != 0) VMD3jesPileUpPtEC2up();
  if (VMD4jesPileUpPtEC2up_branch != 0) VMD4jesPileUpPtEC2up();
  if (WMD0jesPileUpPtEC2up_branch != 0) WMD0jesPileUpPtEC2up();
  if (WMD1jesPileUpPtEC2up_branch != 0) WMD1jesPileUpPtEC2up();
  if (WMD2jesPileUpPtEC2up_branch != 0) WMD2jesPileUpPtEC2up();
  if (WMD3jesPileUpPtEC2up_branch != 0) WMD3jesPileUpPtEC2up();
  if (WMD4jesPileUpPtEC2up_branch != 0) WMD4jesPileUpPtEC2up();
  if (NQGen0jesPileUpPtEC2up_branch != 0) NQGen0jesPileUpPtEC2up();
  if (NQGen1jesPileUpPtEC2up_branch != 0) NQGen1jesPileUpPtEC2up();
  if (NQGen2jesPileUpPtEC2up_branch != 0) NQGen2jesPileUpPtEC2up();
  if (NQGen3jesPileUpPtEC2up_branch != 0) NQGen3jesPileUpPtEC2up();
  if (NQGen4jesPileUpPtEC2up_branch != 0) NQGen4jesPileUpPtEC2up();
  if (NBGen0jesPileUpPtEC2up_branch != 0) NBGen0jesPileUpPtEC2up();
  if (NBGen1jesPileUpPtEC2up_branch != 0) NBGen1jesPileUpPtEC2up();
  if (NBGen2jesPileUpPtEC2up_branch != 0) NBGen2jesPileUpPtEC2up();
  if (NBGen3jesPileUpPtEC2up_branch != 0) NBGen3jesPileUpPtEC2up();
  if (NBGen4jesPileUpPtEC2up_branch != 0) NBGen4jesPileUpPtEC2up();
  if (NLGen0jesPileUpPtEC2up_branch != 0) NLGen0jesPileUpPtEC2up();
  if (NLGen1jesPileUpPtEC2up_branch != 0) NLGen1jesPileUpPtEC2up();
  if (NLGen2jesPileUpPtEC2up_branch != 0) NLGen2jesPileUpPtEC2up();
  if (NLGen3jesPileUpPtEC2up_branch != 0) NLGen3jesPileUpPtEC2up();
  if (NLGen4jesPileUpPtEC2up_branch != 0) NLGen4jesPileUpPtEC2up();
  if (NVQGen0jesPileUpPtEC2up_branch != 0) NVQGen0jesPileUpPtEC2up();
  if (NVQGen1jesPileUpPtEC2up_branch != 0) NVQGen1jesPileUpPtEC2up();
  if (NVQGen2jesPileUpPtEC2up_branch != 0) NVQGen2jesPileUpPtEC2up();
  if (NVQGen3jesPileUpPtEC2up_branch != 0) NVQGen3jesPileUpPtEC2up();
  if (NVQGen4jesPileUpPtEC2up_branch != 0) NVQGen4jesPileUpPtEC2up();
  if (NiFJjesPileUpPtEC2up_branch != 0) NiFJjesPileUpPtEC2up();
  if (iFJ0jesPileUpPtEC2up_branch != 0) iFJ0jesPileUpPtEC2up();
  if (iFJ1jesPileUpPtEC2up_branch != 0) iFJ1jesPileUpPtEC2up();
  if (iFJ2jesPileUpPtEC2up_branch != 0) iFJ2jesPileUpPtEC2up();
  if (iFJ3jesPileUpPtEC2up_branch != 0) iFJ3jesPileUpPtEC2up();
  if (iFJ4jesPileUpPtEC2up_branch != 0) iFJ4jesPileUpPtEC2up();
  if (iVMD0jesPileUpPtEC2up_branch != 0) iVMD0jesPileUpPtEC2up();
  if (iVMD1jesPileUpPtEC2up_branch != 0) iVMD1jesPileUpPtEC2up();
  if (iVMD2jesPileUpPtEC2up_branch != 0) iVMD2jesPileUpPtEC2up();
  if (iVMD3jesPileUpPtEC2up_branch != 0) iVMD3jesPileUpPtEC2up();
  if (iVMD4jesPileUpPtEC2up_branch != 0) iVMD4jesPileUpPtEC2up();
  if (iWMD0jesPileUpPtEC2up_branch != 0) iWMD0jesPileUpPtEC2up();
  if (iWMD1jesPileUpPtEC2up_branch != 0) iWMD1jesPileUpPtEC2up();
  if (iWMD2jesPileUpPtEC2up_branch != 0) iWMD2jesPileUpPtEC2up();
  if (iWMD3jesPileUpPtEC2up_branch != 0) iWMD3jesPileUpPtEC2up();
  if (iWMD4jesPileUpPtEC2up_branch != 0) iWMD4jesPileUpPtEC2up();
  if (METjesPileUpPtEC2up_branch != 0) METjesPileUpPtEC2up();
  if (NujesPileUpPtEC2up_branch != 0) NujesPileUpPtEC2up();
  if (NJjesPileUpPtEC2up_branch != 0) NJjesPileUpPtEC2up();
  if (NbLoosejesPileUpPtEC2up_branch != 0) NbLoosejesPileUpPtEC2up();
  if (NbMediumjesPileUpPtEC2up_branch != 0) NbMediumjesPileUpPtEC2up();
  if (NbTightjesPileUpPtEC2up_branch != 0) NbTightjesPileUpPtEC2up();
  if (NoORNbLoosejesPileUpPtEC2up_branch != 0) NoORNbLoosejesPileUpPtEC2up();
  if (NoORNbMediumjesPileUpPtEC2up_branch != 0) NoORNbMediumjesPileUpPtEC2up();
  if (NoORNbTightjesPileUpPtEC2up_branch != 0) NoORNbTightjesPileUpPtEC2up();
  if (J0jesPileUpPtEC2up_branch != 0) J0jesPileUpPtEC2up();
  if (J1jesPileUpPtEC2up_branch != 0) J1jesPileUpPtEC2up();
  if (J2jesPileUpPtEC2up_branch != 0) J2jesPileUpPtEC2up();
  if (J3jesPileUpPtEC2up_branch != 0) J3jesPileUpPtEC2up();
  if (J4jesPileUpPtEC2up_branch != 0) J4jesPileUpPtEC2up();
  if (J5jesPileUpPtEC2up_branch != 0) J5jesPileUpPtEC2up();
  if (J6jesPileUpPtEC2up_branch != 0) J6jesPileUpPtEC2up();
  if (J7jesPileUpPtEC2up_branch != 0) J7jesPileUpPtEC2up();
  if (NQJGenjesPileUpPtEC2up_branch != 0) NQJGenjesPileUpPtEC2up();
  if (NBJGenjesPileUpPtEC2up_branch != 0) NBJGenjesPileUpPtEC2up();
  if (NLJGenjesPileUpPtEC2up_branch != 0) NLJGenjesPileUpPtEC2up();
  if (MVVXjesPileUpPtEC2up_branch != 0) MVVXjesPileUpPtEC2up();
  if (PtVVXjesPileUpPtEC2up_branch != 0) PtVVXjesPileUpPtEC2up();
  if (HTjesPileUpPtEC2up_branch != 0) HTjesPileUpPtEC2up();
  if (HTJjesPileUpPtEC2up_branch != 0) HTJjesPileUpPtEC2up();
  if (HTFJjesPileUpPtEC2up_branch != 0) HTFJjesPileUpPtEC2up();
  if (SumPtFJjesPileUpPtEC2up_branch != 0) SumPtFJjesPileUpPtEC2up();
  if (SumPtJjesPileUpPtEC2up_branch != 0) SumPtJjesPileUpPtEC2up();
  if (JsjesPileUpPtEC2dn_branch != 0) JsjesPileUpPtEC2dn();
  if (NFJjesPileUpPtEC2dn_branch != 0) NFJjesPileUpPtEC2dn();
  if (FJ0jesPileUpPtEC2dn_branch != 0) FJ0jesPileUpPtEC2dn();
  if (FJ1jesPileUpPtEC2dn_branch != 0) FJ1jesPileUpPtEC2dn();
  if (FJ2jesPileUpPtEC2dn_branch != 0) FJ2jesPileUpPtEC2dn();
  if (FJ3jesPileUpPtEC2dn_branch != 0) FJ3jesPileUpPtEC2dn();
  if (FJ4jesPileUpPtEC2dn_branch != 0) FJ4jesPileUpPtEC2dn();
  if (VMD0jesPileUpPtEC2dn_branch != 0) VMD0jesPileUpPtEC2dn();
  if (VMD1jesPileUpPtEC2dn_branch != 0) VMD1jesPileUpPtEC2dn();
  if (VMD2jesPileUpPtEC2dn_branch != 0) VMD2jesPileUpPtEC2dn();
  if (VMD3jesPileUpPtEC2dn_branch != 0) VMD3jesPileUpPtEC2dn();
  if (VMD4jesPileUpPtEC2dn_branch != 0) VMD4jesPileUpPtEC2dn();
  if (WMD0jesPileUpPtEC2dn_branch != 0) WMD0jesPileUpPtEC2dn();
  if (WMD1jesPileUpPtEC2dn_branch != 0) WMD1jesPileUpPtEC2dn();
  if (WMD2jesPileUpPtEC2dn_branch != 0) WMD2jesPileUpPtEC2dn();
  if (WMD3jesPileUpPtEC2dn_branch != 0) WMD3jesPileUpPtEC2dn();
  if (WMD4jesPileUpPtEC2dn_branch != 0) WMD4jesPileUpPtEC2dn();
  if (NQGen0jesPileUpPtEC2dn_branch != 0) NQGen0jesPileUpPtEC2dn();
  if (NQGen1jesPileUpPtEC2dn_branch != 0) NQGen1jesPileUpPtEC2dn();
  if (NQGen2jesPileUpPtEC2dn_branch != 0) NQGen2jesPileUpPtEC2dn();
  if (NQGen3jesPileUpPtEC2dn_branch != 0) NQGen3jesPileUpPtEC2dn();
  if (NQGen4jesPileUpPtEC2dn_branch != 0) NQGen4jesPileUpPtEC2dn();
  if (NBGen0jesPileUpPtEC2dn_branch != 0) NBGen0jesPileUpPtEC2dn();
  if (NBGen1jesPileUpPtEC2dn_branch != 0) NBGen1jesPileUpPtEC2dn();
  if (NBGen2jesPileUpPtEC2dn_branch != 0) NBGen2jesPileUpPtEC2dn();
  if (NBGen3jesPileUpPtEC2dn_branch != 0) NBGen3jesPileUpPtEC2dn();
  if (NBGen4jesPileUpPtEC2dn_branch != 0) NBGen4jesPileUpPtEC2dn();
  if (NLGen0jesPileUpPtEC2dn_branch != 0) NLGen0jesPileUpPtEC2dn();
  if (NLGen1jesPileUpPtEC2dn_branch != 0) NLGen1jesPileUpPtEC2dn();
  if (NLGen2jesPileUpPtEC2dn_branch != 0) NLGen2jesPileUpPtEC2dn();
  if (NLGen3jesPileUpPtEC2dn_branch != 0) NLGen3jesPileUpPtEC2dn();
  if (NLGen4jesPileUpPtEC2dn_branch != 0) NLGen4jesPileUpPtEC2dn();
  if (NVQGen0jesPileUpPtEC2dn_branch != 0) NVQGen0jesPileUpPtEC2dn();
  if (NVQGen1jesPileUpPtEC2dn_branch != 0) NVQGen1jesPileUpPtEC2dn();
  if (NVQGen2jesPileUpPtEC2dn_branch != 0) NVQGen2jesPileUpPtEC2dn();
  if (NVQGen3jesPileUpPtEC2dn_branch != 0) NVQGen3jesPileUpPtEC2dn();
  if (NVQGen4jesPileUpPtEC2dn_branch != 0) NVQGen4jesPileUpPtEC2dn();
  if (NiFJjesPileUpPtEC2dn_branch != 0) NiFJjesPileUpPtEC2dn();
  if (iFJ0jesPileUpPtEC2dn_branch != 0) iFJ0jesPileUpPtEC2dn();
  if (iFJ1jesPileUpPtEC2dn_branch != 0) iFJ1jesPileUpPtEC2dn();
  if (iFJ2jesPileUpPtEC2dn_branch != 0) iFJ2jesPileUpPtEC2dn();
  if (iFJ3jesPileUpPtEC2dn_branch != 0) iFJ3jesPileUpPtEC2dn();
  if (iFJ4jesPileUpPtEC2dn_branch != 0) iFJ4jesPileUpPtEC2dn();
  if (iVMD0jesPileUpPtEC2dn_branch != 0) iVMD0jesPileUpPtEC2dn();
  if (iVMD1jesPileUpPtEC2dn_branch != 0) iVMD1jesPileUpPtEC2dn();
  if (iVMD2jesPileUpPtEC2dn_branch != 0) iVMD2jesPileUpPtEC2dn();
  if (iVMD3jesPileUpPtEC2dn_branch != 0) iVMD3jesPileUpPtEC2dn();
  if (iVMD4jesPileUpPtEC2dn_branch != 0) iVMD4jesPileUpPtEC2dn();
  if (iWMD0jesPileUpPtEC2dn_branch != 0) iWMD0jesPileUpPtEC2dn();
  if (iWMD1jesPileUpPtEC2dn_branch != 0) iWMD1jesPileUpPtEC2dn();
  if (iWMD2jesPileUpPtEC2dn_branch != 0) iWMD2jesPileUpPtEC2dn();
  if (iWMD3jesPileUpPtEC2dn_branch != 0) iWMD3jesPileUpPtEC2dn();
  if (iWMD4jesPileUpPtEC2dn_branch != 0) iWMD4jesPileUpPtEC2dn();
  if (METjesPileUpPtEC2dn_branch != 0) METjesPileUpPtEC2dn();
  if (NujesPileUpPtEC2dn_branch != 0) NujesPileUpPtEC2dn();
  if (NJjesPileUpPtEC2dn_branch != 0) NJjesPileUpPtEC2dn();
  if (NbLoosejesPileUpPtEC2dn_branch != 0) NbLoosejesPileUpPtEC2dn();
  if (NbMediumjesPileUpPtEC2dn_branch != 0) NbMediumjesPileUpPtEC2dn();
  if (NbTightjesPileUpPtEC2dn_branch != 0) NbTightjesPileUpPtEC2dn();
  if (NoORNbLoosejesPileUpPtEC2dn_branch != 0) NoORNbLoosejesPileUpPtEC2dn();
  if (NoORNbMediumjesPileUpPtEC2dn_branch != 0) NoORNbMediumjesPileUpPtEC2dn();
  if (NoORNbTightjesPileUpPtEC2dn_branch != 0) NoORNbTightjesPileUpPtEC2dn();
  if (J0jesPileUpPtEC2dn_branch != 0) J0jesPileUpPtEC2dn();
  if (J1jesPileUpPtEC2dn_branch != 0) J1jesPileUpPtEC2dn();
  if (J2jesPileUpPtEC2dn_branch != 0) J2jesPileUpPtEC2dn();
  if (J3jesPileUpPtEC2dn_branch != 0) J3jesPileUpPtEC2dn();
  if (J4jesPileUpPtEC2dn_branch != 0) J4jesPileUpPtEC2dn();
  if (J5jesPileUpPtEC2dn_branch != 0) J5jesPileUpPtEC2dn();
  if (J6jesPileUpPtEC2dn_branch != 0) J6jesPileUpPtEC2dn();
  if (J7jesPileUpPtEC2dn_branch != 0) J7jesPileUpPtEC2dn();
  if (NQJGenjesPileUpPtEC2dn_branch != 0) NQJGenjesPileUpPtEC2dn();
  if (NBJGenjesPileUpPtEC2dn_branch != 0) NBJGenjesPileUpPtEC2dn();
  if (NLJGenjesPileUpPtEC2dn_branch != 0) NLJGenjesPileUpPtEC2dn();
  if (MVVXjesPileUpPtEC2dn_branch != 0) MVVXjesPileUpPtEC2dn();
  if (PtVVXjesPileUpPtEC2dn_branch != 0) PtVVXjesPileUpPtEC2dn();
  if (HTjesPileUpPtEC2dn_branch != 0) HTjesPileUpPtEC2dn();
  if (HTJjesPileUpPtEC2dn_branch != 0) HTJjesPileUpPtEC2dn();
  if (HTFJjesPileUpPtEC2dn_branch != 0) HTFJjesPileUpPtEC2dn();
  if (SumPtFJjesPileUpPtEC2dn_branch != 0) SumPtFJjesPileUpPtEC2dn();
  if (SumPtJjesPileUpPtEC2dn_branch != 0) SumPtJjesPileUpPtEC2dn();
  if (JsjesPileUpPtHFup_branch != 0) JsjesPileUpPtHFup();
  if (NFJjesPileUpPtHFup_branch != 0) NFJjesPileUpPtHFup();
  if (FJ0jesPileUpPtHFup_branch != 0) FJ0jesPileUpPtHFup();
  if (FJ1jesPileUpPtHFup_branch != 0) FJ1jesPileUpPtHFup();
  if (FJ2jesPileUpPtHFup_branch != 0) FJ2jesPileUpPtHFup();
  if (FJ3jesPileUpPtHFup_branch != 0) FJ3jesPileUpPtHFup();
  if (FJ4jesPileUpPtHFup_branch != 0) FJ4jesPileUpPtHFup();
  if (VMD0jesPileUpPtHFup_branch != 0) VMD0jesPileUpPtHFup();
  if (VMD1jesPileUpPtHFup_branch != 0) VMD1jesPileUpPtHFup();
  if (VMD2jesPileUpPtHFup_branch != 0) VMD2jesPileUpPtHFup();
  if (VMD3jesPileUpPtHFup_branch != 0) VMD3jesPileUpPtHFup();
  if (VMD4jesPileUpPtHFup_branch != 0) VMD4jesPileUpPtHFup();
  if (WMD0jesPileUpPtHFup_branch != 0) WMD0jesPileUpPtHFup();
  if (WMD1jesPileUpPtHFup_branch != 0) WMD1jesPileUpPtHFup();
  if (WMD2jesPileUpPtHFup_branch != 0) WMD2jesPileUpPtHFup();
  if (WMD3jesPileUpPtHFup_branch != 0) WMD3jesPileUpPtHFup();
  if (WMD4jesPileUpPtHFup_branch != 0) WMD4jesPileUpPtHFup();
  if (NQGen0jesPileUpPtHFup_branch != 0) NQGen0jesPileUpPtHFup();
  if (NQGen1jesPileUpPtHFup_branch != 0) NQGen1jesPileUpPtHFup();
  if (NQGen2jesPileUpPtHFup_branch != 0) NQGen2jesPileUpPtHFup();
  if (NQGen3jesPileUpPtHFup_branch != 0) NQGen3jesPileUpPtHFup();
  if (NQGen4jesPileUpPtHFup_branch != 0) NQGen4jesPileUpPtHFup();
  if (NBGen0jesPileUpPtHFup_branch != 0) NBGen0jesPileUpPtHFup();
  if (NBGen1jesPileUpPtHFup_branch != 0) NBGen1jesPileUpPtHFup();
  if (NBGen2jesPileUpPtHFup_branch != 0) NBGen2jesPileUpPtHFup();
  if (NBGen3jesPileUpPtHFup_branch != 0) NBGen3jesPileUpPtHFup();
  if (NBGen4jesPileUpPtHFup_branch != 0) NBGen4jesPileUpPtHFup();
  if (NLGen0jesPileUpPtHFup_branch != 0) NLGen0jesPileUpPtHFup();
  if (NLGen1jesPileUpPtHFup_branch != 0) NLGen1jesPileUpPtHFup();
  if (NLGen2jesPileUpPtHFup_branch != 0) NLGen2jesPileUpPtHFup();
  if (NLGen3jesPileUpPtHFup_branch != 0) NLGen3jesPileUpPtHFup();
  if (NLGen4jesPileUpPtHFup_branch != 0) NLGen4jesPileUpPtHFup();
  if (NVQGen0jesPileUpPtHFup_branch != 0) NVQGen0jesPileUpPtHFup();
  if (NVQGen1jesPileUpPtHFup_branch != 0) NVQGen1jesPileUpPtHFup();
  if (NVQGen2jesPileUpPtHFup_branch != 0) NVQGen2jesPileUpPtHFup();
  if (NVQGen3jesPileUpPtHFup_branch != 0) NVQGen3jesPileUpPtHFup();
  if (NVQGen4jesPileUpPtHFup_branch != 0) NVQGen4jesPileUpPtHFup();
  if (NiFJjesPileUpPtHFup_branch != 0) NiFJjesPileUpPtHFup();
  if (iFJ0jesPileUpPtHFup_branch != 0) iFJ0jesPileUpPtHFup();
  if (iFJ1jesPileUpPtHFup_branch != 0) iFJ1jesPileUpPtHFup();
  if (iFJ2jesPileUpPtHFup_branch != 0) iFJ2jesPileUpPtHFup();
  if (iFJ3jesPileUpPtHFup_branch != 0) iFJ3jesPileUpPtHFup();
  if (iFJ4jesPileUpPtHFup_branch != 0) iFJ4jesPileUpPtHFup();
  if (iVMD0jesPileUpPtHFup_branch != 0) iVMD0jesPileUpPtHFup();
  if (iVMD1jesPileUpPtHFup_branch != 0) iVMD1jesPileUpPtHFup();
  if (iVMD2jesPileUpPtHFup_branch != 0) iVMD2jesPileUpPtHFup();
  if (iVMD3jesPileUpPtHFup_branch != 0) iVMD3jesPileUpPtHFup();
  if (iVMD4jesPileUpPtHFup_branch != 0) iVMD4jesPileUpPtHFup();
  if (iWMD0jesPileUpPtHFup_branch != 0) iWMD0jesPileUpPtHFup();
  if (iWMD1jesPileUpPtHFup_branch != 0) iWMD1jesPileUpPtHFup();
  if (iWMD2jesPileUpPtHFup_branch != 0) iWMD2jesPileUpPtHFup();
  if (iWMD3jesPileUpPtHFup_branch != 0) iWMD3jesPileUpPtHFup();
  if (iWMD4jesPileUpPtHFup_branch != 0) iWMD4jesPileUpPtHFup();
  if (METjesPileUpPtHFup_branch != 0) METjesPileUpPtHFup();
  if (NujesPileUpPtHFup_branch != 0) NujesPileUpPtHFup();
  if (NJjesPileUpPtHFup_branch != 0) NJjesPileUpPtHFup();
  if (NbLoosejesPileUpPtHFup_branch != 0) NbLoosejesPileUpPtHFup();
  if (NbMediumjesPileUpPtHFup_branch != 0) NbMediumjesPileUpPtHFup();
  if (NbTightjesPileUpPtHFup_branch != 0) NbTightjesPileUpPtHFup();
  if (NoORNbLoosejesPileUpPtHFup_branch != 0) NoORNbLoosejesPileUpPtHFup();
  if (NoORNbMediumjesPileUpPtHFup_branch != 0) NoORNbMediumjesPileUpPtHFup();
  if (NoORNbTightjesPileUpPtHFup_branch != 0) NoORNbTightjesPileUpPtHFup();
  if (J0jesPileUpPtHFup_branch != 0) J0jesPileUpPtHFup();
  if (J1jesPileUpPtHFup_branch != 0) J1jesPileUpPtHFup();
  if (J2jesPileUpPtHFup_branch != 0) J2jesPileUpPtHFup();
  if (J3jesPileUpPtHFup_branch != 0) J3jesPileUpPtHFup();
  if (J4jesPileUpPtHFup_branch != 0) J4jesPileUpPtHFup();
  if (J5jesPileUpPtHFup_branch != 0) J5jesPileUpPtHFup();
  if (J6jesPileUpPtHFup_branch != 0) J6jesPileUpPtHFup();
  if (J7jesPileUpPtHFup_branch != 0) J7jesPileUpPtHFup();
  if (NQJGenjesPileUpPtHFup_branch != 0) NQJGenjesPileUpPtHFup();
  if (NBJGenjesPileUpPtHFup_branch != 0) NBJGenjesPileUpPtHFup();
  if (NLJGenjesPileUpPtHFup_branch != 0) NLJGenjesPileUpPtHFup();
  if (MVVXjesPileUpPtHFup_branch != 0) MVVXjesPileUpPtHFup();
  if (PtVVXjesPileUpPtHFup_branch != 0) PtVVXjesPileUpPtHFup();
  if (HTjesPileUpPtHFup_branch != 0) HTjesPileUpPtHFup();
  if (HTJjesPileUpPtHFup_branch != 0) HTJjesPileUpPtHFup();
  if (HTFJjesPileUpPtHFup_branch != 0) HTFJjesPileUpPtHFup();
  if (SumPtFJjesPileUpPtHFup_branch != 0) SumPtFJjesPileUpPtHFup();
  if (SumPtJjesPileUpPtHFup_branch != 0) SumPtJjesPileUpPtHFup();
  if (JsjesPileUpPtHFdn_branch != 0) JsjesPileUpPtHFdn();
  if (NFJjesPileUpPtHFdn_branch != 0) NFJjesPileUpPtHFdn();
  if (FJ0jesPileUpPtHFdn_branch != 0) FJ0jesPileUpPtHFdn();
  if (FJ1jesPileUpPtHFdn_branch != 0) FJ1jesPileUpPtHFdn();
  if (FJ2jesPileUpPtHFdn_branch != 0) FJ2jesPileUpPtHFdn();
  if (FJ3jesPileUpPtHFdn_branch != 0) FJ3jesPileUpPtHFdn();
  if (FJ4jesPileUpPtHFdn_branch != 0) FJ4jesPileUpPtHFdn();
  if (VMD0jesPileUpPtHFdn_branch != 0) VMD0jesPileUpPtHFdn();
  if (VMD1jesPileUpPtHFdn_branch != 0) VMD1jesPileUpPtHFdn();
  if (VMD2jesPileUpPtHFdn_branch != 0) VMD2jesPileUpPtHFdn();
  if (VMD3jesPileUpPtHFdn_branch != 0) VMD3jesPileUpPtHFdn();
  if (VMD4jesPileUpPtHFdn_branch != 0) VMD4jesPileUpPtHFdn();
  if (WMD0jesPileUpPtHFdn_branch != 0) WMD0jesPileUpPtHFdn();
  if (WMD1jesPileUpPtHFdn_branch != 0) WMD1jesPileUpPtHFdn();
  if (WMD2jesPileUpPtHFdn_branch != 0) WMD2jesPileUpPtHFdn();
  if (WMD3jesPileUpPtHFdn_branch != 0) WMD3jesPileUpPtHFdn();
  if (WMD4jesPileUpPtHFdn_branch != 0) WMD4jesPileUpPtHFdn();
  if (NQGen0jesPileUpPtHFdn_branch != 0) NQGen0jesPileUpPtHFdn();
  if (NQGen1jesPileUpPtHFdn_branch != 0) NQGen1jesPileUpPtHFdn();
  if (NQGen2jesPileUpPtHFdn_branch != 0) NQGen2jesPileUpPtHFdn();
  if (NQGen3jesPileUpPtHFdn_branch != 0) NQGen3jesPileUpPtHFdn();
  if (NQGen4jesPileUpPtHFdn_branch != 0) NQGen4jesPileUpPtHFdn();
  if (NBGen0jesPileUpPtHFdn_branch != 0) NBGen0jesPileUpPtHFdn();
  if (NBGen1jesPileUpPtHFdn_branch != 0) NBGen1jesPileUpPtHFdn();
  if (NBGen2jesPileUpPtHFdn_branch != 0) NBGen2jesPileUpPtHFdn();
  if (NBGen3jesPileUpPtHFdn_branch != 0) NBGen3jesPileUpPtHFdn();
  if (NBGen4jesPileUpPtHFdn_branch != 0) NBGen4jesPileUpPtHFdn();
  if (NLGen0jesPileUpPtHFdn_branch != 0) NLGen0jesPileUpPtHFdn();
  if (NLGen1jesPileUpPtHFdn_branch != 0) NLGen1jesPileUpPtHFdn();
  if (NLGen2jesPileUpPtHFdn_branch != 0) NLGen2jesPileUpPtHFdn();
  if (NLGen3jesPileUpPtHFdn_branch != 0) NLGen3jesPileUpPtHFdn();
  if (NLGen4jesPileUpPtHFdn_branch != 0) NLGen4jesPileUpPtHFdn();
  if (NVQGen0jesPileUpPtHFdn_branch != 0) NVQGen0jesPileUpPtHFdn();
  if (NVQGen1jesPileUpPtHFdn_branch != 0) NVQGen1jesPileUpPtHFdn();
  if (NVQGen2jesPileUpPtHFdn_branch != 0) NVQGen2jesPileUpPtHFdn();
  if (NVQGen3jesPileUpPtHFdn_branch != 0) NVQGen3jesPileUpPtHFdn();
  if (NVQGen4jesPileUpPtHFdn_branch != 0) NVQGen4jesPileUpPtHFdn();
  if (NiFJjesPileUpPtHFdn_branch != 0) NiFJjesPileUpPtHFdn();
  if (iFJ0jesPileUpPtHFdn_branch != 0) iFJ0jesPileUpPtHFdn();
  if (iFJ1jesPileUpPtHFdn_branch != 0) iFJ1jesPileUpPtHFdn();
  if (iFJ2jesPileUpPtHFdn_branch != 0) iFJ2jesPileUpPtHFdn();
  if (iFJ3jesPileUpPtHFdn_branch != 0) iFJ3jesPileUpPtHFdn();
  if (iFJ4jesPileUpPtHFdn_branch != 0) iFJ4jesPileUpPtHFdn();
  if (iVMD0jesPileUpPtHFdn_branch != 0) iVMD0jesPileUpPtHFdn();
  if (iVMD1jesPileUpPtHFdn_branch != 0) iVMD1jesPileUpPtHFdn();
  if (iVMD2jesPileUpPtHFdn_branch != 0) iVMD2jesPileUpPtHFdn();
  if (iVMD3jesPileUpPtHFdn_branch != 0) iVMD3jesPileUpPtHFdn();
  if (iVMD4jesPileUpPtHFdn_branch != 0) iVMD4jesPileUpPtHFdn();
  if (iWMD0jesPileUpPtHFdn_branch != 0) iWMD0jesPileUpPtHFdn();
  if (iWMD1jesPileUpPtHFdn_branch != 0) iWMD1jesPileUpPtHFdn();
  if (iWMD2jesPileUpPtHFdn_branch != 0) iWMD2jesPileUpPtHFdn();
  if (iWMD3jesPileUpPtHFdn_branch != 0) iWMD3jesPileUpPtHFdn();
  if (iWMD4jesPileUpPtHFdn_branch != 0) iWMD4jesPileUpPtHFdn();
  if (METjesPileUpPtHFdn_branch != 0) METjesPileUpPtHFdn();
  if (NujesPileUpPtHFdn_branch != 0) NujesPileUpPtHFdn();
  if (NJjesPileUpPtHFdn_branch != 0) NJjesPileUpPtHFdn();
  if (NbLoosejesPileUpPtHFdn_branch != 0) NbLoosejesPileUpPtHFdn();
  if (NbMediumjesPileUpPtHFdn_branch != 0) NbMediumjesPileUpPtHFdn();
  if (NbTightjesPileUpPtHFdn_branch != 0) NbTightjesPileUpPtHFdn();
  if (NoORNbLoosejesPileUpPtHFdn_branch != 0) NoORNbLoosejesPileUpPtHFdn();
  if (NoORNbMediumjesPileUpPtHFdn_branch != 0) NoORNbMediumjesPileUpPtHFdn();
  if (NoORNbTightjesPileUpPtHFdn_branch != 0) NoORNbTightjesPileUpPtHFdn();
  if (J0jesPileUpPtHFdn_branch != 0) J0jesPileUpPtHFdn();
  if (J1jesPileUpPtHFdn_branch != 0) J1jesPileUpPtHFdn();
  if (J2jesPileUpPtHFdn_branch != 0) J2jesPileUpPtHFdn();
  if (J3jesPileUpPtHFdn_branch != 0) J3jesPileUpPtHFdn();
  if (J4jesPileUpPtHFdn_branch != 0) J4jesPileUpPtHFdn();
  if (J5jesPileUpPtHFdn_branch != 0) J5jesPileUpPtHFdn();
  if (J6jesPileUpPtHFdn_branch != 0) J6jesPileUpPtHFdn();
  if (J7jesPileUpPtHFdn_branch != 0) J7jesPileUpPtHFdn();
  if (NQJGenjesPileUpPtHFdn_branch != 0) NQJGenjesPileUpPtHFdn();
  if (NBJGenjesPileUpPtHFdn_branch != 0) NBJGenjesPileUpPtHFdn();
  if (NLJGenjesPileUpPtHFdn_branch != 0) NLJGenjesPileUpPtHFdn();
  if (MVVXjesPileUpPtHFdn_branch != 0) MVVXjesPileUpPtHFdn();
  if (PtVVXjesPileUpPtHFdn_branch != 0) PtVVXjesPileUpPtHFdn();
  if (HTjesPileUpPtHFdn_branch != 0) HTjesPileUpPtHFdn();
  if (HTJjesPileUpPtHFdn_branch != 0) HTJjesPileUpPtHFdn();
  if (HTFJjesPileUpPtHFdn_branch != 0) HTFJjesPileUpPtHFdn();
  if (SumPtFJjesPileUpPtHFdn_branch != 0) SumPtFJjesPileUpPtHFdn();
  if (SumPtJjesPileUpPtHFdn_branch != 0) SumPtJjesPileUpPtHFdn();
  if (GenV0_branch != 0) GenV0();
  if (GenV1_branch != 0) GenV1();
  if (GenV2_branch != 0) GenV2();
  if (isHad0_branch != 0) isHad0();
  if (isHad1_branch != 0) isHad1();
  if (isHad2_branch != 0) isHad2();
  if (GenF00_branch != 0) GenF00();
  if (GenF01_branch != 0) GenF01();
  if (GenF10_branch != 0) GenF10();
  if (GenF11_branch != 0) GenF11();
  if (GenF20_branch != 0) GenF20();
  if (GenF21_branch != 0) GenF21();
}

const int &VVV0Tree::isData() {
  if (not isData_isLoaded) {
    if (isData_branch != 0) {
      isData_branch->GetEntry(index);
    } else {
      printf("branch isData_branch does not exist!\n");
      exit(1);
    }
    isData_isLoaded = true;
  }
  return isData_;
}

const int &VVV0Tree::run() {
  if (not run_isLoaded) {
    if (run_branch != 0) {
      run_branch->GetEntry(index);
    } else {
      printf("branch run_branch does not exist!\n");
      exit(1);
    }
    run_isLoaded = true;
  }
  return run_;
}

const int &VVV0Tree::lumi() {
  if (not lumi_isLoaded) {
    if (lumi_branch != 0) {
      lumi_branch->GetEntry(index);
    } else {
      printf("branch lumi_branch does not exist!\n");
      exit(1);
    }
    lumi_isLoaded = true;
  }
  return lumi_;
}

const unsigned long long &VVV0Tree::evt() {
  if (not evt_isLoaded) {
    if (evt_branch != 0) {
      evt_branch->GetEntry(index);
    } else {
      printf("branch evt_branch does not exist!\n");
      exit(1);
    }
    evt_isLoaded = true;
  }
  return evt_;
}

const int &VVV0Tree::year() {
  if (not year_isLoaded) {
    if (year_branch != 0) {
      year_branch->GetEntry(index);
    } else {
      printf("branch year_branch does not exist!\n");
      exit(1);
    }
    year_isLoaded = true;
  }
  return year_;
}

const float &VVV0Tree::genWeight() {
  if (not genWeight_isLoaded) {
    if (genWeight_branch != 0) {
      genWeight_branch->GetEntry(index);
    } else {
      printf("branch genWeight_branch does not exist!\n");
      exit(1);
    }
    genWeight_isLoaded = true;
  }
  return genWeight_;
}

const float &VVV0Tree::wgt() {
  if (not wgt_isLoaded) {
    if (wgt_branch != 0) {
      wgt_branch->GetEntry(index);
    } else {
      printf("branch wgt_branch does not exist!\n");
      exit(1);
    }
    wgt_isLoaded = true;
  }
  return wgt_;
}

const vector<float> &VVV0Tree::LHEReweightingWeight() {
  if (not LHEReweightingWeight_isLoaded) {
    if (LHEReweightingWeight_branch != 0) {
      LHEReweightingWeight_branch->GetEntry(index);
    } else {
      printf("branch LHEReweightingWeight_branch does not exist!\n");
      exit(1);
    }
    LHEReweightingWeight_isLoaded = true;
  }
  return *LHEReweightingWeight_;
}

const float &VVV0Tree::prefireWgt() {
  if (not prefireWgt_isLoaded) {
    if (prefireWgt_branch != 0) {
      prefireWgt_branch->GetEntry(index);
    } else {
      printf("branch prefireWgt_branch does not exist!\n");
      exit(1);
    }
    prefireWgt_isLoaded = true;
  }
  return prefireWgt_;
}

const float &VVV0Tree::prefireWgtUp() {
  if (not prefireWgtUp_isLoaded) {
    if (prefireWgtUp_branch != 0) {
      prefireWgtUp_branch->GetEntry(index);
    } else {
      printf("branch prefireWgtUp_branch does not exist!\n");
      exit(1);
    }
    prefireWgtUp_isLoaded = true;
  }
  return prefireWgtUp_;
}

const float &VVV0Tree::prefireWgtDn() {
  if (not prefireWgtDn_isLoaded) {
    if (prefireWgtDn_branch != 0) {
      prefireWgtDn_branch->GetEntry(index);
    } else {
      printf("branch prefireWgtDn_branch does not exist!\n");
      exit(1);
    }
    prefireWgtDn_isLoaded = true;
  }
  return prefireWgtDn_;
}

const float &VVV0Tree::puWgt() {
  if (not puWgt_isLoaded) {
    if (puWgt_branch != 0) {
      puWgt_branch->GetEntry(index);
    } else {
      printf("branch puWgt_branch does not exist!\n");
      exit(1);
    }
    puWgt_isLoaded = true;
  }
  return puWgt_;
}

const float &VVV0Tree::puWgtUp() {
  if (not puWgtUp_isLoaded) {
    if (puWgtUp_branch != 0) {
      puWgtUp_branch->GetEntry(index);
    } else {
      printf("branch puWgtUp_branch does not exist!\n");
      exit(1);
    }
    puWgtUp_isLoaded = true;
  }
  return puWgtUp_;
}

const float &VVV0Tree::puWgtDn() {
  if (not puWgtDn_isLoaded) {
    if (puWgtDn_branch != 0) {
      puWgtDn_branch->GetEntry(index);
    } else {
      printf("branch puWgtDn_branch does not exist!\n");
      exit(1);
    }
    puWgtDn_isLoaded = true;
  }
  return puWgtDn_;
}

const int &VVV0Tree::pu_nPU() {
  if (not pu_nPU_isLoaded) {
    if (pu_nPU_branch != 0) {
      pu_nPU_branch->GetEntry(index);
    } else {
      printf("branch pu_nPU_branch does not exist!\n");
      exit(1);
    }
    pu_nPU_isLoaded = true;
  }
  return pu_nPU_;
}

const float &VVV0Tree::pu_nTrueInt() {
  if (not pu_nTrueInt_isLoaded) {
    if (pu_nTrueInt_branch != 0) {
      pu_nTrueInt_branch->GetEntry(index);
    } else {
      printf("branch pu_nTrueInt_branch does not exist!\n");
      exit(1);
    }
    pu_nTrueInt_isLoaded = true;
  }
  return pu_nTrueInt_;
}

const float &VVV0Tree::trigWgt() {
  if (not trigWgt_isLoaded) {
    if (trigWgt_branch != 0) {
      trigWgt_branch->GetEntry(index);
    } else {
      printf("branch trigWgt_branch does not exist!\n");
      exit(1);
    }
    trigWgt_isLoaded = true;
  }
  return trigWgt_;
}

const float &VVV0Tree::trigWgtUp() {
  if (not trigWgtUp_isLoaded) {
    if (trigWgtUp_branch != 0) {
      trigWgtUp_branch->GetEntry(index);
    } else {
      printf("branch trigWgtUp_branch does not exist!\n");
      exit(1);
    }
    trigWgtUp_isLoaded = true;
  }
  return trigWgtUp_;
}

const float &VVV0Tree::trigWgtDn() {
  if (not trigWgtDn_isLoaded) {
    if (trigWgtDn_branch != 0) {
      trigWgtDn_branch->GetEntry(index);
    } else {
      printf("branch trigWgtDn_branch does not exist!\n");
      exit(1);
    }
    trigWgtDn_isLoaded = true;
  }
  return trigWgtDn_;
}

const vector<float> &VVV0Tree::PDF() {
  if (not PDF_isLoaded) {
    if (PDF_branch != 0) {
      PDF_branch->GetEntry(index);
    } else {
      printf("branch PDF_branch does not exist!\n");
      exit(1);
    }
    PDF_isLoaded = true;
  }
  return *PDF_;
}

const vector<float> &VVV0Tree::QCDScale() {
  if (not QCDScale_isLoaded) {
    if (QCDScale_branch != 0) {
      QCDScale_branch->GetEntry(index);
    } else {
      printf("branch QCDScale_branch does not exist!\n");
      exit(1);
    }
    QCDScale_isLoaded = true;
  }
  return *QCDScale_;
}

const int &VVV0Tree::trigger() {
  if (not trigger_isLoaded) {
    if (trigger_branch != 0) {
      trigger_branch->GetEntry(index);
    } else {
      printf("branch trigger_branch does not exist!\n");
      exit(1);
    }
    trigger_isLoaded = true;
  }
  return trigger_;
}

const int &VVV0Tree::is0Lep() {
  if (not is0Lep_isLoaded) {
    if (is0Lep_branch != 0) {
      is0Lep_branch->GetEntry(index);
    } else {
      printf("branch is0Lep_branch does not exist!\n");
      exit(1);
    }
    is0Lep_isLoaded = true;
  }
  return is0Lep_;
}

const int &VVV0Tree::is1Lep() {
  if (not is1Lep_isLoaded) {
    if (is1Lep_branch != 0) {
      is1Lep_branch->GetEntry(index);
    } else {
      printf("branch is1Lep_branch does not exist!\n");
      exit(1);
    }
    is1Lep_isLoaded = true;
  }
  return is1Lep_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::Lep() {
  if (not Lep_isLoaded) {
    if (Lep_branch != 0) {
      Lep_branch->GetEntry(index);
    } else {
      printf("branch Lep_branch does not exist!\n");
      exit(1);
    }
    Lep_isLoaded = true;
  }
  return *Lep_;
}

const int &VVV0Tree::LepFlav() {
  if (not LepFlav_isLoaded) {
    if (LepFlav_branch != 0) {
      LepFlav_branch->GetEntry(index);
    } else {
      printf("branch LepFlav_branch does not exist!\n");
      exit(1);
    }
    LepFlav_isLoaded = true;
  }
  return LepFlav_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::Js() {
  if (not Js_isLoaded) {
    if (Js_branch != 0) {
      Js_branch->GetEntry(index);
    } else {
      printf("branch Js_branch does not exist!\n");
      exit(1);
    }
    Js_isLoaded = true;
  }
  return *Js_;
}

const int &VVV0Tree::NFJ() {
  if (not NFJ_isLoaded) {
    if (NFJ_branch != 0) {
      NFJ_branch->GetEntry(index);
    } else {
      printf("branch NFJ_branch does not exist!\n");
      exit(1);
    }
    NFJ_isLoaded = true;
  }
  return NFJ_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0() {
  if (not FJ0_isLoaded) {
    if (FJ0_branch != 0) {
      FJ0_branch->GetEntry(index);
    } else {
      printf("branch FJ0_branch does not exist!\n");
      exit(1);
    }
    FJ0_isLoaded = true;
  }
  return *FJ0_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1() {
  if (not FJ1_isLoaded) {
    if (FJ1_branch != 0) {
      FJ1_branch->GetEntry(index);
    } else {
      printf("branch FJ1_branch does not exist!\n");
      exit(1);
    }
    FJ1_isLoaded = true;
  }
  return *FJ1_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2() {
  if (not FJ2_isLoaded) {
    if (FJ2_branch != 0) {
      FJ2_branch->GetEntry(index);
    } else {
      printf("branch FJ2_branch does not exist!\n");
      exit(1);
    }
    FJ2_isLoaded = true;
  }
  return *FJ2_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3() {
  if (not FJ3_isLoaded) {
    if (FJ3_branch != 0) {
      FJ3_branch->GetEntry(index);
    } else {
      printf("branch FJ3_branch does not exist!\n");
      exit(1);
    }
    FJ3_isLoaded = true;
  }
  return *FJ3_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4() {
  if (not FJ4_isLoaded) {
    if (FJ4_branch != 0) {
      FJ4_branch->GetEntry(index);
    } else {
      printf("branch FJ4_branch does not exist!\n");
      exit(1);
    }
    FJ4_isLoaded = true;
  }
  return *FJ4_;
}

const float &VVV0Tree::VMD0() {
  if (not VMD0_isLoaded) {
    if (VMD0_branch != 0) {
      VMD0_branch->GetEntry(index);
    } else {
      printf("branch VMD0_branch does not exist!\n");
      exit(1);
    }
    VMD0_isLoaded = true;
  }
  return VMD0_;
}

const float &VVV0Tree::VMD1() {
  if (not VMD1_isLoaded) {
    if (VMD1_branch != 0) {
      VMD1_branch->GetEntry(index);
    } else {
      printf("branch VMD1_branch does not exist!\n");
      exit(1);
    }
    VMD1_isLoaded = true;
  }
  return VMD1_;
}

const float &VVV0Tree::VMD2() {
  if (not VMD2_isLoaded) {
    if (VMD2_branch != 0) {
      VMD2_branch->GetEntry(index);
    } else {
      printf("branch VMD2_branch does not exist!\n");
      exit(1);
    }
    VMD2_isLoaded = true;
  }
  return VMD2_;
}

const float &VVV0Tree::VMD3() {
  if (not VMD3_isLoaded) {
    if (VMD3_branch != 0) {
      VMD3_branch->GetEntry(index);
    } else {
      printf("branch VMD3_branch does not exist!\n");
      exit(1);
    }
    VMD3_isLoaded = true;
  }
  return VMD3_;
}

const float &VVV0Tree::VMD4() {
  if (not VMD4_isLoaded) {
    if (VMD4_branch != 0) {
      VMD4_branch->GetEntry(index);
    } else {
      printf("branch VMD4_branch does not exist!\n");
      exit(1);
    }
    VMD4_isLoaded = true;
  }
  return VMD4_;
}

const float &VVV0Tree::WMD0() {
  if (not WMD0_isLoaded) {
    if (WMD0_branch != 0) {
      WMD0_branch->GetEntry(index);
    } else {
      printf("branch WMD0_branch does not exist!\n");
      exit(1);
    }
    WMD0_isLoaded = true;
  }
  return WMD0_;
}

const float &VVV0Tree::WMD1() {
  if (not WMD1_isLoaded) {
    if (WMD1_branch != 0) {
      WMD1_branch->GetEntry(index);
    } else {
      printf("branch WMD1_branch does not exist!\n");
      exit(1);
    }
    WMD1_isLoaded = true;
  }
  return WMD1_;
}

const float &VVV0Tree::WMD2() {
  if (not WMD2_isLoaded) {
    if (WMD2_branch != 0) {
      WMD2_branch->GetEntry(index);
    } else {
      printf("branch WMD2_branch does not exist!\n");
      exit(1);
    }
    WMD2_isLoaded = true;
  }
  return WMD2_;
}

const float &VVV0Tree::WMD3() {
  if (not WMD3_isLoaded) {
    if (WMD3_branch != 0) {
      WMD3_branch->GetEntry(index);
    } else {
      printf("branch WMD3_branch does not exist!\n");
      exit(1);
    }
    WMD3_isLoaded = true;
  }
  return WMD3_;
}

const float &VVV0Tree::WMD4() {
  if (not WMD4_isLoaded) {
    if (WMD4_branch != 0) {
      WMD4_branch->GetEntry(index);
    } else {
      printf("branch WMD4_branch does not exist!\n");
      exit(1);
    }
    WMD4_isLoaded = true;
  }
  return WMD4_;
}

const int &VVV0Tree::NQGen0() {
  if (not NQGen0_isLoaded) {
    if (NQGen0_branch != 0) {
      NQGen0_branch->GetEntry(index);
    } else {
      printf("branch NQGen0_branch does not exist!\n");
      exit(1);
    }
    NQGen0_isLoaded = true;
  }
  return NQGen0_;
}

const int &VVV0Tree::NQGen1() {
  if (not NQGen1_isLoaded) {
    if (NQGen1_branch != 0) {
      NQGen1_branch->GetEntry(index);
    } else {
      printf("branch NQGen1_branch does not exist!\n");
      exit(1);
    }
    NQGen1_isLoaded = true;
  }
  return NQGen1_;
}

const int &VVV0Tree::NQGen2() {
  if (not NQGen2_isLoaded) {
    if (NQGen2_branch != 0) {
      NQGen2_branch->GetEntry(index);
    } else {
      printf("branch NQGen2_branch does not exist!\n");
      exit(1);
    }
    NQGen2_isLoaded = true;
  }
  return NQGen2_;
}

const int &VVV0Tree::NQGen3() {
  if (not NQGen3_isLoaded) {
    if (NQGen3_branch != 0) {
      NQGen3_branch->GetEntry(index);
    } else {
      printf("branch NQGen3_branch does not exist!\n");
      exit(1);
    }
    NQGen3_isLoaded = true;
  }
  return NQGen3_;
}

const int &VVV0Tree::NQGen4() {
  if (not NQGen4_isLoaded) {
    if (NQGen4_branch != 0) {
      NQGen4_branch->GetEntry(index);
    } else {
      printf("branch NQGen4_branch does not exist!\n");
      exit(1);
    }
    NQGen4_isLoaded = true;
  }
  return NQGen4_;
}

const int &VVV0Tree::NBGen0() {
  if (not NBGen0_isLoaded) {
    if (NBGen0_branch != 0) {
      NBGen0_branch->GetEntry(index);
    } else {
      printf("branch NBGen0_branch does not exist!\n");
      exit(1);
    }
    NBGen0_isLoaded = true;
  }
  return NBGen0_;
}

const int &VVV0Tree::NBGen1() {
  if (not NBGen1_isLoaded) {
    if (NBGen1_branch != 0) {
      NBGen1_branch->GetEntry(index);
    } else {
      printf("branch NBGen1_branch does not exist!\n");
      exit(1);
    }
    NBGen1_isLoaded = true;
  }
  return NBGen1_;
}

const int &VVV0Tree::NBGen2() {
  if (not NBGen2_isLoaded) {
    if (NBGen2_branch != 0) {
      NBGen2_branch->GetEntry(index);
    } else {
      printf("branch NBGen2_branch does not exist!\n");
      exit(1);
    }
    NBGen2_isLoaded = true;
  }
  return NBGen2_;
}

const int &VVV0Tree::NBGen3() {
  if (not NBGen3_isLoaded) {
    if (NBGen3_branch != 0) {
      NBGen3_branch->GetEntry(index);
    } else {
      printf("branch NBGen3_branch does not exist!\n");
      exit(1);
    }
    NBGen3_isLoaded = true;
  }
  return NBGen3_;
}

const int &VVV0Tree::NBGen4() {
  if (not NBGen4_isLoaded) {
    if (NBGen4_branch != 0) {
      NBGen4_branch->GetEntry(index);
    } else {
      printf("branch NBGen4_branch does not exist!\n");
      exit(1);
    }
    NBGen4_isLoaded = true;
  }
  return NBGen4_;
}

const int &VVV0Tree::NLGen0() {
  if (not NLGen0_isLoaded) {
    if (NLGen0_branch != 0) {
      NLGen0_branch->GetEntry(index);
    } else {
      printf("branch NLGen0_branch does not exist!\n");
      exit(1);
    }
    NLGen0_isLoaded = true;
  }
  return NLGen0_;
}

const int &VVV0Tree::NLGen1() {
  if (not NLGen1_isLoaded) {
    if (NLGen1_branch != 0) {
      NLGen1_branch->GetEntry(index);
    } else {
      printf("branch NLGen1_branch does not exist!\n");
      exit(1);
    }
    NLGen1_isLoaded = true;
  }
  return NLGen1_;
}

const int &VVV0Tree::NLGen2() {
  if (not NLGen2_isLoaded) {
    if (NLGen2_branch != 0) {
      NLGen2_branch->GetEntry(index);
    } else {
      printf("branch NLGen2_branch does not exist!\n");
      exit(1);
    }
    NLGen2_isLoaded = true;
  }
  return NLGen2_;
}

const int &VVV0Tree::NLGen3() {
  if (not NLGen3_isLoaded) {
    if (NLGen3_branch != 0) {
      NLGen3_branch->GetEntry(index);
    } else {
      printf("branch NLGen3_branch does not exist!\n");
      exit(1);
    }
    NLGen3_isLoaded = true;
  }
  return NLGen3_;
}

const int &VVV0Tree::NLGen4() {
  if (not NLGen4_isLoaded) {
    if (NLGen4_branch != 0) {
      NLGen4_branch->GetEntry(index);
    } else {
      printf("branch NLGen4_branch does not exist!\n");
      exit(1);
    }
    NLGen4_isLoaded = true;
  }
  return NLGen4_;
}

const int &VVV0Tree::NVQGen0() {
  if (not NVQGen0_isLoaded) {
    if (NVQGen0_branch != 0) {
      NVQGen0_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0_branch does not exist!\n");
      exit(1);
    }
    NVQGen0_isLoaded = true;
  }
  return NVQGen0_;
}

const int &VVV0Tree::NVQGen1() {
  if (not NVQGen1_isLoaded) {
    if (NVQGen1_branch != 0) {
      NVQGen1_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1_branch does not exist!\n");
      exit(1);
    }
    NVQGen1_isLoaded = true;
  }
  return NVQGen1_;
}

const int &VVV0Tree::NVQGen2() {
  if (not NVQGen2_isLoaded) {
    if (NVQGen2_branch != 0) {
      NVQGen2_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2_branch does not exist!\n");
      exit(1);
    }
    NVQGen2_isLoaded = true;
  }
  return NVQGen2_;
}

const int &VVV0Tree::NVQGen3() {
  if (not NVQGen3_isLoaded) {
    if (NVQGen3_branch != 0) {
      NVQGen3_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3_branch does not exist!\n");
      exit(1);
    }
    NVQGen3_isLoaded = true;
  }
  return NVQGen3_;
}

const int &VVV0Tree::NVQGen4() {
  if (not NVQGen4_isLoaded) {
    if (NVQGen4_branch != 0) {
      NVQGen4_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4_branch does not exist!\n");
      exit(1);
    }
    NVQGen4_isLoaded = true;
  }
  return NVQGen4_;
}

const int &VVV0Tree::NiFJ() {
  if (not NiFJ_isLoaded) {
    if (NiFJ_branch != 0) {
      NiFJ_branch->GetEntry(index);
    } else {
      printf("branch NiFJ_branch does not exist!\n");
      exit(1);
    }
    NiFJ_isLoaded = true;
  }
  return NiFJ_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0() {
  if (not iFJ0_isLoaded) {
    if (iFJ0_branch != 0) {
      iFJ0_branch->GetEntry(index);
    } else {
      printf("branch iFJ0_branch does not exist!\n");
      exit(1);
    }
    iFJ0_isLoaded = true;
  }
  return *iFJ0_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1() {
  if (not iFJ1_isLoaded) {
    if (iFJ1_branch != 0) {
      iFJ1_branch->GetEntry(index);
    } else {
      printf("branch iFJ1_branch does not exist!\n");
      exit(1);
    }
    iFJ1_isLoaded = true;
  }
  return *iFJ1_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2() {
  if (not iFJ2_isLoaded) {
    if (iFJ2_branch != 0) {
      iFJ2_branch->GetEntry(index);
    } else {
      printf("branch iFJ2_branch does not exist!\n");
      exit(1);
    }
    iFJ2_isLoaded = true;
  }
  return *iFJ2_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3() {
  if (not iFJ3_isLoaded) {
    if (iFJ3_branch != 0) {
      iFJ3_branch->GetEntry(index);
    } else {
      printf("branch iFJ3_branch does not exist!\n");
      exit(1);
    }
    iFJ3_isLoaded = true;
  }
  return *iFJ3_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4() {
  if (not iFJ4_isLoaded) {
    if (iFJ4_branch != 0) {
      iFJ4_branch->GetEntry(index);
    } else {
      printf("branch iFJ4_branch does not exist!\n");
      exit(1);
    }
    iFJ4_isLoaded = true;
  }
  return *iFJ4_;
}

const float &VVV0Tree::iVMD0() {
  if (not iVMD0_isLoaded) {
    if (iVMD0_branch != 0) {
      iVMD0_branch->GetEntry(index);
    } else {
      printf("branch iVMD0_branch does not exist!\n");
      exit(1);
    }
    iVMD0_isLoaded = true;
  }
  return iVMD0_;
}

const float &VVV0Tree::iVMD1() {
  if (not iVMD1_isLoaded) {
    if (iVMD1_branch != 0) {
      iVMD1_branch->GetEntry(index);
    } else {
      printf("branch iVMD1_branch does not exist!\n");
      exit(1);
    }
    iVMD1_isLoaded = true;
  }
  return iVMD1_;
}

const float &VVV0Tree::iVMD2() {
  if (not iVMD2_isLoaded) {
    if (iVMD2_branch != 0) {
      iVMD2_branch->GetEntry(index);
    } else {
      printf("branch iVMD2_branch does not exist!\n");
      exit(1);
    }
    iVMD2_isLoaded = true;
  }
  return iVMD2_;
}

const float &VVV0Tree::iVMD3() {
  if (not iVMD3_isLoaded) {
    if (iVMD3_branch != 0) {
      iVMD3_branch->GetEntry(index);
    } else {
      printf("branch iVMD3_branch does not exist!\n");
      exit(1);
    }
    iVMD3_isLoaded = true;
  }
  return iVMD3_;
}

const float &VVV0Tree::iVMD4() {
  if (not iVMD4_isLoaded) {
    if (iVMD4_branch != 0) {
      iVMD4_branch->GetEntry(index);
    } else {
      printf("branch iVMD4_branch does not exist!\n");
      exit(1);
    }
    iVMD4_isLoaded = true;
  }
  return iVMD4_;
}

const float &VVV0Tree::iWMD0() {
  if (not iWMD0_isLoaded) {
    if (iWMD0_branch != 0) {
      iWMD0_branch->GetEntry(index);
    } else {
      printf("branch iWMD0_branch does not exist!\n");
      exit(1);
    }
    iWMD0_isLoaded = true;
  }
  return iWMD0_;
}

const float &VVV0Tree::iWMD1() {
  if (not iWMD1_isLoaded) {
    if (iWMD1_branch != 0) {
      iWMD1_branch->GetEntry(index);
    } else {
      printf("branch iWMD1_branch does not exist!\n");
      exit(1);
    }
    iWMD1_isLoaded = true;
  }
  return iWMD1_;
}

const float &VVV0Tree::iWMD2() {
  if (not iWMD2_isLoaded) {
    if (iWMD2_branch != 0) {
      iWMD2_branch->GetEntry(index);
    } else {
      printf("branch iWMD2_branch does not exist!\n");
      exit(1);
    }
    iWMD2_isLoaded = true;
  }
  return iWMD2_;
}

const float &VVV0Tree::iWMD3() {
  if (not iWMD3_isLoaded) {
    if (iWMD3_branch != 0) {
      iWMD3_branch->GetEntry(index);
    } else {
      printf("branch iWMD3_branch does not exist!\n");
      exit(1);
    }
    iWMD3_isLoaded = true;
  }
  return iWMD3_;
}

const float &VVV0Tree::iWMD4() {
  if (not iWMD4_isLoaded) {
    if (iWMD4_branch != 0) {
      iWMD4_branch->GetEntry(index);
    } else {
      printf("branch iWMD4_branch does not exist!\n");
      exit(1);
    }
    iWMD4_isLoaded = true;
  }
  return iWMD4_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::MET() {
  if (not MET_isLoaded) {
    if (MET_branch != 0) {
      MET_branch->GetEntry(index);
    } else {
      printf("branch MET_branch does not exist!\n");
      exit(1);
    }
    MET_isLoaded = true;
  }
  return *MET_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::Nu() {
  if (not Nu_isLoaded) {
    if (Nu_branch != 0) {
      Nu_branch->GetEntry(index);
    } else {
      printf("branch Nu_branch does not exist!\n");
      exit(1);
    }
    Nu_isLoaded = true;
  }
  return *Nu_;
}

const int &VVV0Tree::NJ() {
  if (not NJ_isLoaded) {
    if (NJ_branch != 0) {
      NJ_branch->GetEntry(index);
    } else {
      printf("branch NJ_branch does not exist!\n");
      exit(1);
    }
    NJ_isLoaded = true;
  }
  return NJ_;
}

const int &VVV0Tree::NbLoose() {
  if (not NbLoose_isLoaded) {
    if (NbLoose_branch != 0) {
      NbLoose_branch->GetEntry(index);
    } else {
      printf("branch NbLoose_branch does not exist!\n");
      exit(1);
    }
    NbLoose_isLoaded = true;
  }
  return NbLoose_;
}

const int &VVV0Tree::NbMedium() {
  if (not NbMedium_isLoaded) {
    if (NbMedium_branch != 0) {
      NbMedium_branch->GetEntry(index);
    } else {
      printf("branch NbMedium_branch does not exist!\n");
      exit(1);
    }
    NbMedium_isLoaded = true;
  }
  return NbMedium_;
}

const int &VVV0Tree::NbTight() {
  if (not NbTight_isLoaded) {
    if (NbTight_branch != 0) {
      NbTight_branch->GetEntry(index);
    } else {
      printf("branch NbTight_branch does not exist!\n");
      exit(1);
    }
    NbTight_isLoaded = true;
  }
  return NbTight_;
}

const int &VVV0Tree::NoORNbLoose() {
  if (not NoORNbLoose_isLoaded) {
    if (NoORNbLoose_branch != 0) {
      NoORNbLoose_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoose_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoose_isLoaded = true;
  }
  return NoORNbLoose_;
}

const int &VVV0Tree::NoORNbMedium() {
  if (not NoORNbMedium_isLoaded) {
    if (NoORNbMedium_branch != 0) {
      NoORNbMedium_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMedium_branch does not exist!\n");
      exit(1);
    }
    NoORNbMedium_isLoaded = true;
  }
  return NoORNbMedium_;
}

const int &VVV0Tree::NoORNbTight() {
  if (not NoORNbTight_isLoaded) {
    if (NoORNbTight_branch != 0) {
      NoORNbTight_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTight_branch does not exist!\n");
      exit(1);
    }
    NoORNbTight_isLoaded = true;
  }
  return NoORNbTight_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0() {
  if (not J0_isLoaded) {
    if (J0_branch != 0) {
      J0_branch->GetEntry(index);
    } else {
      printf("branch J0_branch does not exist!\n");
      exit(1);
    }
    J0_isLoaded = true;
  }
  return *J0_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1() {
  if (not J1_isLoaded) {
    if (J1_branch != 0) {
      J1_branch->GetEntry(index);
    } else {
      printf("branch J1_branch does not exist!\n");
      exit(1);
    }
    J1_isLoaded = true;
  }
  return *J1_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2() {
  if (not J2_isLoaded) {
    if (J2_branch != 0) {
      J2_branch->GetEntry(index);
    } else {
      printf("branch J2_branch does not exist!\n");
      exit(1);
    }
    J2_isLoaded = true;
  }
  return *J2_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3() {
  if (not J3_isLoaded) {
    if (J3_branch != 0) {
      J3_branch->GetEntry(index);
    } else {
      printf("branch J3_branch does not exist!\n");
      exit(1);
    }
    J3_isLoaded = true;
  }
  return *J3_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4() {
  if (not J4_isLoaded) {
    if (J4_branch != 0) {
      J4_branch->GetEntry(index);
    } else {
      printf("branch J4_branch does not exist!\n");
      exit(1);
    }
    J4_isLoaded = true;
  }
  return *J4_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5() {
  if (not J5_isLoaded) {
    if (J5_branch != 0) {
      J5_branch->GetEntry(index);
    } else {
      printf("branch J5_branch does not exist!\n");
      exit(1);
    }
    J5_isLoaded = true;
  }
  return *J5_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6() {
  if (not J6_isLoaded) {
    if (J6_branch != 0) {
      J6_branch->GetEntry(index);
    } else {
      printf("branch J6_branch does not exist!\n");
      exit(1);
    }
    J6_isLoaded = true;
  }
  return *J6_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7() {
  if (not J7_isLoaded) {
    if (J7_branch != 0) {
      J7_branch->GetEntry(index);
    } else {
      printf("branch J7_branch does not exist!\n");
      exit(1);
    }
    J7_isLoaded = true;
  }
  return *J7_;
}

const vector<int> &VVV0Tree::NQJGen() {
  if (not NQJGen_isLoaded) {
    if (NQJGen_branch != 0) {
      NQJGen_branch->GetEntry(index);
    } else {
      printf("branch NQJGen_branch does not exist!\n");
      exit(1);
    }
    NQJGen_isLoaded = true;
  }
  return *NQJGen_;
}

const vector<int> &VVV0Tree::NBJGen() {
  if (not NBJGen_isLoaded) {
    if (NBJGen_branch != 0) {
      NBJGen_branch->GetEntry(index);
    } else {
      printf("branch NBJGen_branch does not exist!\n");
      exit(1);
    }
    NBJGen_isLoaded = true;
  }
  return *NBJGen_;
}

const vector<int> &VVV0Tree::NLJGen() {
  if (not NLJGen_isLoaded) {
    if (NLJGen_branch != 0) {
      NLJGen_branch->GetEntry(index);
    } else {
      printf("branch NLJGen_branch does not exist!\n");
      exit(1);
    }
    NLJGen_isLoaded = true;
  }
  return *NLJGen_;
}

const float &VVV0Tree::MVVX() {
  if (not MVVX_isLoaded) {
    if (MVVX_branch != 0) {
      MVVX_branch->GetEntry(index);
    } else {
      printf("branch MVVX_branch does not exist!\n");
      exit(1);
    }
    MVVX_isLoaded = true;
  }
  return MVVX_;
}

const float &VVV0Tree::PtVVX() {
  if (not PtVVX_isLoaded) {
    if (PtVVX_branch != 0) {
      PtVVX_branch->GetEntry(index);
    } else {
      printf("branch PtVVX_branch does not exist!\n");
      exit(1);
    }
    PtVVX_isLoaded = true;
  }
  return PtVVX_;
}

const float &VVV0Tree::HT() {
  if (not HT_isLoaded) {
    if (HT_branch != 0) {
      HT_branch->GetEntry(index);
    } else {
      printf("branch HT_branch does not exist!\n");
      exit(1);
    }
    HT_isLoaded = true;
  }
  return HT_;
}

const float &VVV0Tree::HTJ() {
  if (not HTJ_isLoaded) {
    if (HTJ_branch != 0) {
      HTJ_branch->GetEntry(index);
    } else {
      printf("branch HTJ_branch does not exist!\n");
      exit(1);
    }
    HTJ_isLoaded = true;
  }
  return HTJ_;
}

const float &VVV0Tree::HTFJ() {
  if (not HTFJ_isLoaded) {
    if (HTFJ_branch != 0) {
      HTFJ_branch->GetEntry(index);
    } else {
      printf("branch HTFJ_branch does not exist!\n");
      exit(1);
    }
    HTFJ_isLoaded = true;
  }
  return HTFJ_;
}

const float &VVV0Tree::SumPtFJ() {
  if (not SumPtFJ_isLoaded) {
    if (SumPtFJ_branch != 0) {
      SumPtFJ_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJ_branch does not exist!\n");
      exit(1);
    }
    SumPtFJ_isLoaded = true;
  }
  return SumPtFJ_;
}

const float &VVV0Tree::SumPtJ() {
  if (not SumPtJ_isLoaded) {
    if (SumPtJ_branch != 0) {
      SumPtJ_branch->GetEntry(index);
    } else {
      printf("branch SumPtJ_branch does not exist!\n");
      exit(1);
    }
    SumPtJ_isLoaded = true;
  }
  return SumPtJ_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsJESUp() {
  if (not JsJESUp_isLoaded) {
    if (JsJESUp_branch != 0) {
      JsJESUp_branch->GetEntry(index);
    } else {
      printf("branch JsJESUp_branch does not exist!\n");
      exit(1);
    }
    JsJESUp_isLoaded = true;
  }
  return *JsJESUp_;
}

const int &VVV0Tree::NFJJESUp() {
  if (not NFJJESUp_isLoaded) {
    if (NFJJESUp_branch != 0) {
      NFJJESUp_branch->GetEntry(index);
    } else {
      printf("branch NFJJESUp_branch does not exist!\n");
      exit(1);
    }
    NFJJESUp_isLoaded = true;
  }
  return NFJJESUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0JESUp() {
  if (not FJ0JESUp_isLoaded) {
    if (FJ0JESUp_branch != 0) {
      FJ0JESUp_branch->GetEntry(index);
    } else {
      printf("branch FJ0JESUp_branch does not exist!\n");
      exit(1);
    }
    FJ0JESUp_isLoaded = true;
  }
  return *FJ0JESUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1JESUp() {
  if (not FJ1JESUp_isLoaded) {
    if (FJ1JESUp_branch != 0) {
      FJ1JESUp_branch->GetEntry(index);
    } else {
      printf("branch FJ1JESUp_branch does not exist!\n");
      exit(1);
    }
    FJ1JESUp_isLoaded = true;
  }
  return *FJ1JESUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2JESUp() {
  if (not FJ2JESUp_isLoaded) {
    if (FJ2JESUp_branch != 0) {
      FJ2JESUp_branch->GetEntry(index);
    } else {
      printf("branch FJ2JESUp_branch does not exist!\n");
      exit(1);
    }
    FJ2JESUp_isLoaded = true;
  }
  return *FJ2JESUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3JESUp() {
  if (not FJ3JESUp_isLoaded) {
    if (FJ3JESUp_branch != 0) {
      FJ3JESUp_branch->GetEntry(index);
    } else {
      printf("branch FJ3JESUp_branch does not exist!\n");
      exit(1);
    }
    FJ3JESUp_isLoaded = true;
  }
  return *FJ3JESUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4JESUp() {
  if (not FJ4JESUp_isLoaded) {
    if (FJ4JESUp_branch != 0) {
      FJ4JESUp_branch->GetEntry(index);
    } else {
      printf("branch FJ4JESUp_branch does not exist!\n");
      exit(1);
    }
    FJ4JESUp_isLoaded = true;
  }
  return *FJ4JESUp_;
}

const float &VVV0Tree::VMD0JESUp() {
  if (not VMD0JESUp_isLoaded) {
    if (VMD0JESUp_branch != 0) {
      VMD0JESUp_branch->GetEntry(index);
    } else {
      printf("branch VMD0JESUp_branch does not exist!\n");
      exit(1);
    }
    VMD0JESUp_isLoaded = true;
  }
  return VMD0JESUp_;
}

const float &VVV0Tree::VMD1JESUp() {
  if (not VMD1JESUp_isLoaded) {
    if (VMD1JESUp_branch != 0) {
      VMD1JESUp_branch->GetEntry(index);
    } else {
      printf("branch VMD1JESUp_branch does not exist!\n");
      exit(1);
    }
    VMD1JESUp_isLoaded = true;
  }
  return VMD1JESUp_;
}

const float &VVV0Tree::VMD2JESUp() {
  if (not VMD2JESUp_isLoaded) {
    if (VMD2JESUp_branch != 0) {
      VMD2JESUp_branch->GetEntry(index);
    } else {
      printf("branch VMD2JESUp_branch does not exist!\n");
      exit(1);
    }
    VMD2JESUp_isLoaded = true;
  }
  return VMD2JESUp_;
}

const float &VVV0Tree::VMD3JESUp() {
  if (not VMD3JESUp_isLoaded) {
    if (VMD3JESUp_branch != 0) {
      VMD3JESUp_branch->GetEntry(index);
    } else {
      printf("branch VMD3JESUp_branch does not exist!\n");
      exit(1);
    }
    VMD3JESUp_isLoaded = true;
  }
  return VMD3JESUp_;
}

const float &VVV0Tree::VMD4JESUp() {
  if (not VMD4JESUp_isLoaded) {
    if (VMD4JESUp_branch != 0) {
      VMD4JESUp_branch->GetEntry(index);
    } else {
      printf("branch VMD4JESUp_branch does not exist!\n");
      exit(1);
    }
    VMD4JESUp_isLoaded = true;
  }
  return VMD4JESUp_;
}

const float &VVV0Tree::WMD0JESUp() {
  if (not WMD0JESUp_isLoaded) {
    if (WMD0JESUp_branch != 0) {
      WMD0JESUp_branch->GetEntry(index);
    } else {
      printf("branch WMD0JESUp_branch does not exist!\n");
      exit(1);
    }
    WMD0JESUp_isLoaded = true;
  }
  return WMD0JESUp_;
}

const float &VVV0Tree::WMD1JESUp() {
  if (not WMD1JESUp_isLoaded) {
    if (WMD1JESUp_branch != 0) {
      WMD1JESUp_branch->GetEntry(index);
    } else {
      printf("branch WMD1JESUp_branch does not exist!\n");
      exit(1);
    }
    WMD1JESUp_isLoaded = true;
  }
  return WMD1JESUp_;
}

const float &VVV0Tree::WMD2JESUp() {
  if (not WMD2JESUp_isLoaded) {
    if (WMD2JESUp_branch != 0) {
      WMD2JESUp_branch->GetEntry(index);
    } else {
      printf("branch WMD2JESUp_branch does not exist!\n");
      exit(1);
    }
    WMD2JESUp_isLoaded = true;
  }
  return WMD2JESUp_;
}

const float &VVV0Tree::WMD3JESUp() {
  if (not WMD3JESUp_isLoaded) {
    if (WMD3JESUp_branch != 0) {
      WMD3JESUp_branch->GetEntry(index);
    } else {
      printf("branch WMD3JESUp_branch does not exist!\n");
      exit(1);
    }
    WMD3JESUp_isLoaded = true;
  }
  return WMD3JESUp_;
}

const float &VVV0Tree::WMD4JESUp() {
  if (not WMD4JESUp_isLoaded) {
    if (WMD4JESUp_branch != 0) {
      WMD4JESUp_branch->GetEntry(index);
    } else {
      printf("branch WMD4JESUp_branch does not exist!\n");
      exit(1);
    }
    WMD4JESUp_isLoaded = true;
  }
  return WMD4JESUp_;
}

const int &VVV0Tree::NQGen0JESUp() {
  if (not NQGen0JESUp_isLoaded) {
    if (NQGen0JESUp_branch != 0) {
      NQGen0JESUp_branch->GetEntry(index);
    } else {
      printf("branch NQGen0JESUp_branch does not exist!\n");
      exit(1);
    }
    NQGen0JESUp_isLoaded = true;
  }
  return NQGen0JESUp_;
}

const int &VVV0Tree::NQGen1JESUp() {
  if (not NQGen1JESUp_isLoaded) {
    if (NQGen1JESUp_branch != 0) {
      NQGen1JESUp_branch->GetEntry(index);
    } else {
      printf("branch NQGen1JESUp_branch does not exist!\n");
      exit(1);
    }
    NQGen1JESUp_isLoaded = true;
  }
  return NQGen1JESUp_;
}

const int &VVV0Tree::NQGen2JESUp() {
  if (not NQGen2JESUp_isLoaded) {
    if (NQGen2JESUp_branch != 0) {
      NQGen2JESUp_branch->GetEntry(index);
    } else {
      printf("branch NQGen2JESUp_branch does not exist!\n");
      exit(1);
    }
    NQGen2JESUp_isLoaded = true;
  }
  return NQGen2JESUp_;
}

const int &VVV0Tree::NQGen3JESUp() {
  if (not NQGen3JESUp_isLoaded) {
    if (NQGen3JESUp_branch != 0) {
      NQGen3JESUp_branch->GetEntry(index);
    } else {
      printf("branch NQGen3JESUp_branch does not exist!\n");
      exit(1);
    }
    NQGen3JESUp_isLoaded = true;
  }
  return NQGen3JESUp_;
}

const int &VVV0Tree::NQGen4JESUp() {
  if (not NQGen4JESUp_isLoaded) {
    if (NQGen4JESUp_branch != 0) {
      NQGen4JESUp_branch->GetEntry(index);
    } else {
      printf("branch NQGen4JESUp_branch does not exist!\n");
      exit(1);
    }
    NQGen4JESUp_isLoaded = true;
  }
  return NQGen4JESUp_;
}

const int &VVV0Tree::NBGen0JESUp() {
  if (not NBGen0JESUp_isLoaded) {
    if (NBGen0JESUp_branch != 0) {
      NBGen0JESUp_branch->GetEntry(index);
    } else {
      printf("branch NBGen0JESUp_branch does not exist!\n");
      exit(1);
    }
    NBGen0JESUp_isLoaded = true;
  }
  return NBGen0JESUp_;
}

const int &VVV0Tree::NBGen1JESUp() {
  if (not NBGen1JESUp_isLoaded) {
    if (NBGen1JESUp_branch != 0) {
      NBGen1JESUp_branch->GetEntry(index);
    } else {
      printf("branch NBGen1JESUp_branch does not exist!\n");
      exit(1);
    }
    NBGen1JESUp_isLoaded = true;
  }
  return NBGen1JESUp_;
}

const int &VVV0Tree::NBGen2JESUp() {
  if (not NBGen2JESUp_isLoaded) {
    if (NBGen2JESUp_branch != 0) {
      NBGen2JESUp_branch->GetEntry(index);
    } else {
      printf("branch NBGen2JESUp_branch does not exist!\n");
      exit(1);
    }
    NBGen2JESUp_isLoaded = true;
  }
  return NBGen2JESUp_;
}

const int &VVV0Tree::NBGen3JESUp() {
  if (not NBGen3JESUp_isLoaded) {
    if (NBGen3JESUp_branch != 0) {
      NBGen3JESUp_branch->GetEntry(index);
    } else {
      printf("branch NBGen3JESUp_branch does not exist!\n");
      exit(1);
    }
    NBGen3JESUp_isLoaded = true;
  }
  return NBGen3JESUp_;
}

const int &VVV0Tree::NBGen4JESUp() {
  if (not NBGen4JESUp_isLoaded) {
    if (NBGen4JESUp_branch != 0) {
      NBGen4JESUp_branch->GetEntry(index);
    } else {
      printf("branch NBGen4JESUp_branch does not exist!\n");
      exit(1);
    }
    NBGen4JESUp_isLoaded = true;
  }
  return NBGen4JESUp_;
}

const int &VVV0Tree::NLGen0JESUp() {
  if (not NLGen0JESUp_isLoaded) {
    if (NLGen0JESUp_branch != 0) {
      NLGen0JESUp_branch->GetEntry(index);
    } else {
      printf("branch NLGen0JESUp_branch does not exist!\n");
      exit(1);
    }
    NLGen0JESUp_isLoaded = true;
  }
  return NLGen0JESUp_;
}

const int &VVV0Tree::NLGen1JESUp() {
  if (not NLGen1JESUp_isLoaded) {
    if (NLGen1JESUp_branch != 0) {
      NLGen1JESUp_branch->GetEntry(index);
    } else {
      printf("branch NLGen1JESUp_branch does not exist!\n");
      exit(1);
    }
    NLGen1JESUp_isLoaded = true;
  }
  return NLGen1JESUp_;
}

const int &VVV0Tree::NLGen2JESUp() {
  if (not NLGen2JESUp_isLoaded) {
    if (NLGen2JESUp_branch != 0) {
      NLGen2JESUp_branch->GetEntry(index);
    } else {
      printf("branch NLGen2JESUp_branch does not exist!\n");
      exit(1);
    }
    NLGen2JESUp_isLoaded = true;
  }
  return NLGen2JESUp_;
}

const int &VVV0Tree::NLGen3JESUp() {
  if (not NLGen3JESUp_isLoaded) {
    if (NLGen3JESUp_branch != 0) {
      NLGen3JESUp_branch->GetEntry(index);
    } else {
      printf("branch NLGen3JESUp_branch does not exist!\n");
      exit(1);
    }
    NLGen3JESUp_isLoaded = true;
  }
  return NLGen3JESUp_;
}

const int &VVV0Tree::NLGen4JESUp() {
  if (not NLGen4JESUp_isLoaded) {
    if (NLGen4JESUp_branch != 0) {
      NLGen4JESUp_branch->GetEntry(index);
    } else {
      printf("branch NLGen4JESUp_branch does not exist!\n");
      exit(1);
    }
    NLGen4JESUp_isLoaded = true;
  }
  return NLGen4JESUp_;
}

const int &VVV0Tree::NVQGen0JESUp() {
  if (not NVQGen0JESUp_isLoaded) {
    if (NVQGen0JESUp_branch != 0) {
      NVQGen0JESUp_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0JESUp_branch does not exist!\n");
      exit(1);
    }
    NVQGen0JESUp_isLoaded = true;
  }
  return NVQGen0JESUp_;
}

const int &VVV0Tree::NVQGen1JESUp() {
  if (not NVQGen1JESUp_isLoaded) {
    if (NVQGen1JESUp_branch != 0) {
      NVQGen1JESUp_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1JESUp_branch does not exist!\n");
      exit(1);
    }
    NVQGen1JESUp_isLoaded = true;
  }
  return NVQGen1JESUp_;
}

const int &VVV0Tree::NVQGen2JESUp() {
  if (not NVQGen2JESUp_isLoaded) {
    if (NVQGen2JESUp_branch != 0) {
      NVQGen2JESUp_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2JESUp_branch does not exist!\n");
      exit(1);
    }
    NVQGen2JESUp_isLoaded = true;
  }
  return NVQGen2JESUp_;
}

const int &VVV0Tree::NVQGen3JESUp() {
  if (not NVQGen3JESUp_isLoaded) {
    if (NVQGen3JESUp_branch != 0) {
      NVQGen3JESUp_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3JESUp_branch does not exist!\n");
      exit(1);
    }
    NVQGen3JESUp_isLoaded = true;
  }
  return NVQGen3JESUp_;
}

const int &VVV0Tree::NVQGen4JESUp() {
  if (not NVQGen4JESUp_isLoaded) {
    if (NVQGen4JESUp_branch != 0) {
      NVQGen4JESUp_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4JESUp_branch does not exist!\n");
      exit(1);
    }
    NVQGen4JESUp_isLoaded = true;
  }
  return NVQGen4JESUp_;
}

const int &VVV0Tree::NiFJJESUp() {
  if (not NiFJJESUp_isLoaded) {
    if (NiFJJESUp_branch != 0) {
      NiFJJESUp_branch->GetEntry(index);
    } else {
      printf("branch NiFJJESUp_branch does not exist!\n");
      exit(1);
    }
    NiFJJESUp_isLoaded = true;
  }
  return NiFJJESUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0JESUp() {
  if (not iFJ0JESUp_isLoaded) {
    if (iFJ0JESUp_branch != 0) {
      iFJ0JESUp_branch->GetEntry(index);
    } else {
      printf("branch iFJ0JESUp_branch does not exist!\n");
      exit(1);
    }
    iFJ0JESUp_isLoaded = true;
  }
  return *iFJ0JESUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1JESUp() {
  if (not iFJ1JESUp_isLoaded) {
    if (iFJ1JESUp_branch != 0) {
      iFJ1JESUp_branch->GetEntry(index);
    } else {
      printf("branch iFJ1JESUp_branch does not exist!\n");
      exit(1);
    }
    iFJ1JESUp_isLoaded = true;
  }
  return *iFJ1JESUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2JESUp() {
  if (not iFJ2JESUp_isLoaded) {
    if (iFJ2JESUp_branch != 0) {
      iFJ2JESUp_branch->GetEntry(index);
    } else {
      printf("branch iFJ2JESUp_branch does not exist!\n");
      exit(1);
    }
    iFJ2JESUp_isLoaded = true;
  }
  return *iFJ2JESUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3JESUp() {
  if (not iFJ3JESUp_isLoaded) {
    if (iFJ3JESUp_branch != 0) {
      iFJ3JESUp_branch->GetEntry(index);
    } else {
      printf("branch iFJ3JESUp_branch does not exist!\n");
      exit(1);
    }
    iFJ3JESUp_isLoaded = true;
  }
  return *iFJ3JESUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4JESUp() {
  if (not iFJ4JESUp_isLoaded) {
    if (iFJ4JESUp_branch != 0) {
      iFJ4JESUp_branch->GetEntry(index);
    } else {
      printf("branch iFJ4JESUp_branch does not exist!\n");
      exit(1);
    }
    iFJ4JESUp_isLoaded = true;
  }
  return *iFJ4JESUp_;
}

const float &VVV0Tree::iVMD0JESUp() {
  if (not iVMD0JESUp_isLoaded) {
    if (iVMD0JESUp_branch != 0) {
      iVMD0JESUp_branch->GetEntry(index);
    } else {
      printf("branch iVMD0JESUp_branch does not exist!\n");
      exit(1);
    }
    iVMD0JESUp_isLoaded = true;
  }
  return iVMD0JESUp_;
}

const float &VVV0Tree::iVMD1JESUp() {
  if (not iVMD1JESUp_isLoaded) {
    if (iVMD1JESUp_branch != 0) {
      iVMD1JESUp_branch->GetEntry(index);
    } else {
      printf("branch iVMD1JESUp_branch does not exist!\n");
      exit(1);
    }
    iVMD1JESUp_isLoaded = true;
  }
  return iVMD1JESUp_;
}

const float &VVV0Tree::iVMD2JESUp() {
  if (not iVMD2JESUp_isLoaded) {
    if (iVMD2JESUp_branch != 0) {
      iVMD2JESUp_branch->GetEntry(index);
    } else {
      printf("branch iVMD2JESUp_branch does not exist!\n");
      exit(1);
    }
    iVMD2JESUp_isLoaded = true;
  }
  return iVMD2JESUp_;
}

const float &VVV0Tree::iVMD3JESUp() {
  if (not iVMD3JESUp_isLoaded) {
    if (iVMD3JESUp_branch != 0) {
      iVMD3JESUp_branch->GetEntry(index);
    } else {
      printf("branch iVMD3JESUp_branch does not exist!\n");
      exit(1);
    }
    iVMD3JESUp_isLoaded = true;
  }
  return iVMD3JESUp_;
}

const float &VVV0Tree::iVMD4JESUp() {
  if (not iVMD4JESUp_isLoaded) {
    if (iVMD4JESUp_branch != 0) {
      iVMD4JESUp_branch->GetEntry(index);
    } else {
      printf("branch iVMD4JESUp_branch does not exist!\n");
      exit(1);
    }
    iVMD4JESUp_isLoaded = true;
  }
  return iVMD4JESUp_;
}

const float &VVV0Tree::iWMD0JESUp() {
  if (not iWMD0JESUp_isLoaded) {
    if (iWMD0JESUp_branch != 0) {
      iWMD0JESUp_branch->GetEntry(index);
    } else {
      printf("branch iWMD0JESUp_branch does not exist!\n");
      exit(1);
    }
    iWMD0JESUp_isLoaded = true;
  }
  return iWMD0JESUp_;
}

const float &VVV0Tree::iWMD1JESUp() {
  if (not iWMD1JESUp_isLoaded) {
    if (iWMD1JESUp_branch != 0) {
      iWMD1JESUp_branch->GetEntry(index);
    } else {
      printf("branch iWMD1JESUp_branch does not exist!\n");
      exit(1);
    }
    iWMD1JESUp_isLoaded = true;
  }
  return iWMD1JESUp_;
}

const float &VVV0Tree::iWMD2JESUp() {
  if (not iWMD2JESUp_isLoaded) {
    if (iWMD2JESUp_branch != 0) {
      iWMD2JESUp_branch->GetEntry(index);
    } else {
      printf("branch iWMD2JESUp_branch does not exist!\n");
      exit(1);
    }
    iWMD2JESUp_isLoaded = true;
  }
  return iWMD2JESUp_;
}

const float &VVV0Tree::iWMD3JESUp() {
  if (not iWMD3JESUp_isLoaded) {
    if (iWMD3JESUp_branch != 0) {
      iWMD3JESUp_branch->GetEntry(index);
    } else {
      printf("branch iWMD3JESUp_branch does not exist!\n");
      exit(1);
    }
    iWMD3JESUp_isLoaded = true;
  }
  return iWMD3JESUp_;
}

const float &VVV0Tree::iWMD4JESUp() {
  if (not iWMD4JESUp_isLoaded) {
    if (iWMD4JESUp_branch != 0) {
      iWMD4JESUp_branch->GetEntry(index);
    } else {
      printf("branch iWMD4JESUp_branch does not exist!\n");
      exit(1);
    }
    iWMD4JESUp_isLoaded = true;
  }
  return iWMD4JESUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METJESUp() {
  if (not METJESUp_isLoaded) {
    if (METJESUp_branch != 0) {
      METJESUp_branch->GetEntry(index);
    } else {
      printf("branch METJESUp_branch does not exist!\n");
      exit(1);
    }
    METJESUp_isLoaded = true;
  }
  return *METJESUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NuJESUp() {
  if (not NuJESUp_isLoaded) {
    if (NuJESUp_branch != 0) {
      NuJESUp_branch->GetEntry(index);
    } else {
      printf("branch NuJESUp_branch does not exist!\n");
      exit(1);
    }
    NuJESUp_isLoaded = true;
  }
  return *NuJESUp_;
}

const int &VVV0Tree::NJJESUp() {
  if (not NJJESUp_isLoaded) {
    if (NJJESUp_branch != 0) {
      NJJESUp_branch->GetEntry(index);
    } else {
      printf("branch NJJESUp_branch does not exist!\n");
      exit(1);
    }
    NJJESUp_isLoaded = true;
  }
  return NJJESUp_;
}

const int &VVV0Tree::NbLooseJESUp() {
  if (not NbLooseJESUp_isLoaded) {
    if (NbLooseJESUp_branch != 0) {
      NbLooseJESUp_branch->GetEntry(index);
    } else {
      printf("branch NbLooseJESUp_branch does not exist!\n");
      exit(1);
    }
    NbLooseJESUp_isLoaded = true;
  }
  return NbLooseJESUp_;
}

const int &VVV0Tree::NbMediumJESUp() {
  if (not NbMediumJESUp_isLoaded) {
    if (NbMediumJESUp_branch != 0) {
      NbMediumJESUp_branch->GetEntry(index);
    } else {
      printf("branch NbMediumJESUp_branch does not exist!\n");
      exit(1);
    }
    NbMediumJESUp_isLoaded = true;
  }
  return NbMediumJESUp_;
}

const int &VVV0Tree::NbTightJESUp() {
  if (not NbTightJESUp_isLoaded) {
    if (NbTightJESUp_branch != 0) {
      NbTightJESUp_branch->GetEntry(index);
    } else {
      printf("branch NbTightJESUp_branch does not exist!\n");
      exit(1);
    }
    NbTightJESUp_isLoaded = true;
  }
  return NbTightJESUp_;
}

const int &VVV0Tree::NoORNbLooseJESUp() {
  if (not NoORNbLooseJESUp_isLoaded) {
    if (NoORNbLooseJESUp_branch != 0) {
      NoORNbLooseJESUp_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLooseJESUp_branch does not exist!\n");
      exit(1);
    }
    NoORNbLooseJESUp_isLoaded = true;
  }
  return NoORNbLooseJESUp_;
}

const int &VVV0Tree::NoORNbMediumJESUp() {
  if (not NoORNbMediumJESUp_isLoaded) {
    if (NoORNbMediumJESUp_branch != 0) {
      NoORNbMediumJESUp_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumJESUp_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumJESUp_isLoaded = true;
  }
  return NoORNbMediumJESUp_;
}

const int &VVV0Tree::NoORNbTightJESUp() {
  if (not NoORNbTightJESUp_isLoaded) {
    if (NoORNbTightJESUp_branch != 0) {
      NoORNbTightJESUp_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightJESUp_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightJESUp_isLoaded = true;
  }
  return NoORNbTightJESUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0JESUp() {
  if (not J0JESUp_isLoaded) {
    if (J0JESUp_branch != 0) {
      J0JESUp_branch->GetEntry(index);
    } else {
      printf("branch J0JESUp_branch does not exist!\n");
      exit(1);
    }
    J0JESUp_isLoaded = true;
  }
  return *J0JESUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1JESUp() {
  if (not J1JESUp_isLoaded) {
    if (J1JESUp_branch != 0) {
      J1JESUp_branch->GetEntry(index);
    } else {
      printf("branch J1JESUp_branch does not exist!\n");
      exit(1);
    }
    J1JESUp_isLoaded = true;
  }
  return *J1JESUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2JESUp() {
  if (not J2JESUp_isLoaded) {
    if (J2JESUp_branch != 0) {
      J2JESUp_branch->GetEntry(index);
    } else {
      printf("branch J2JESUp_branch does not exist!\n");
      exit(1);
    }
    J2JESUp_isLoaded = true;
  }
  return *J2JESUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3JESUp() {
  if (not J3JESUp_isLoaded) {
    if (J3JESUp_branch != 0) {
      J3JESUp_branch->GetEntry(index);
    } else {
      printf("branch J3JESUp_branch does not exist!\n");
      exit(1);
    }
    J3JESUp_isLoaded = true;
  }
  return *J3JESUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4JESUp() {
  if (not J4JESUp_isLoaded) {
    if (J4JESUp_branch != 0) {
      J4JESUp_branch->GetEntry(index);
    } else {
      printf("branch J4JESUp_branch does not exist!\n");
      exit(1);
    }
    J4JESUp_isLoaded = true;
  }
  return *J4JESUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5JESUp() {
  if (not J5JESUp_isLoaded) {
    if (J5JESUp_branch != 0) {
      J5JESUp_branch->GetEntry(index);
    } else {
      printf("branch J5JESUp_branch does not exist!\n");
      exit(1);
    }
    J5JESUp_isLoaded = true;
  }
  return *J5JESUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6JESUp() {
  if (not J6JESUp_isLoaded) {
    if (J6JESUp_branch != 0) {
      J6JESUp_branch->GetEntry(index);
    } else {
      printf("branch J6JESUp_branch does not exist!\n");
      exit(1);
    }
    J6JESUp_isLoaded = true;
  }
  return *J6JESUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7JESUp() {
  if (not J7JESUp_isLoaded) {
    if (J7JESUp_branch != 0) {
      J7JESUp_branch->GetEntry(index);
    } else {
      printf("branch J7JESUp_branch does not exist!\n");
      exit(1);
    }
    J7JESUp_isLoaded = true;
  }
  return *J7JESUp_;
}

const vector<int> &VVV0Tree::NQJGenJESUp() {
  if (not NQJGenJESUp_isLoaded) {
    if (NQJGenJESUp_branch != 0) {
      NQJGenJESUp_branch->GetEntry(index);
    } else {
      printf("branch NQJGenJESUp_branch does not exist!\n");
      exit(1);
    }
    NQJGenJESUp_isLoaded = true;
  }
  return *NQJGenJESUp_;
}

const vector<int> &VVV0Tree::NBJGenJESUp() {
  if (not NBJGenJESUp_isLoaded) {
    if (NBJGenJESUp_branch != 0) {
      NBJGenJESUp_branch->GetEntry(index);
    } else {
      printf("branch NBJGenJESUp_branch does not exist!\n");
      exit(1);
    }
    NBJGenJESUp_isLoaded = true;
  }
  return *NBJGenJESUp_;
}

const vector<int> &VVV0Tree::NLJGenJESUp() {
  if (not NLJGenJESUp_isLoaded) {
    if (NLJGenJESUp_branch != 0) {
      NLJGenJESUp_branch->GetEntry(index);
    } else {
      printf("branch NLJGenJESUp_branch does not exist!\n");
      exit(1);
    }
    NLJGenJESUp_isLoaded = true;
  }
  return *NLJGenJESUp_;
}

const float &VVV0Tree::MVVXJESUp() {
  if (not MVVXJESUp_isLoaded) {
    if (MVVXJESUp_branch != 0) {
      MVVXJESUp_branch->GetEntry(index);
    } else {
      printf("branch MVVXJESUp_branch does not exist!\n");
      exit(1);
    }
    MVVXJESUp_isLoaded = true;
  }
  return MVVXJESUp_;
}

const float &VVV0Tree::PtVVXJESUp() {
  if (not PtVVXJESUp_isLoaded) {
    if (PtVVXJESUp_branch != 0) {
      PtVVXJESUp_branch->GetEntry(index);
    } else {
      printf("branch PtVVXJESUp_branch does not exist!\n");
      exit(1);
    }
    PtVVXJESUp_isLoaded = true;
  }
  return PtVVXJESUp_;
}

const float &VVV0Tree::HTJESUp() {
  if (not HTJESUp_isLoaded) {
    if (HTJESUp_branch != 0) {
      HTJESUp_branch->GetEntry(index);
    } else {
      printf("branch HTJESUp_branch does not exist!\n");
      exit(1);
    }
    HTJESUp_isLoaded = true;
  }
  return HTJESUp_;
}

const float &VVV0Tree::HTJJESUp() {
  if (not HTJJESUp_isLoaded) {
    if (HTJJESUp_branch != 0) {
      HTJJESUp_branch->GetEntry(index);
    } else {
      printf("branch HTJJESUp_branch does not exist!\n");
      exit(1);
    }
    HTJJESUp_isLoaded = true;
  }
  return HTJJESUp_;
}

const float &VVV0Tree::HTFJJESUp() {
  if (not HTFJJESUp_isLoaded) {
    if (HTFJJESUp_branch != 0) {
      HTFJJESUp_branch->GetEntry(index);
    } else {
      printf("branch HTFJJESUp_branch does not exist!\n");
      exit(1);
    }
    HTFJJESUp_isLoaded = true;
  }
  return HTFJJESUp_;
}

const float &VVV0Tree::SumPtFJJESUp() {
  if (not SumPtFJJESUp_isLoaded) {
    if (SumPtFJJESUp_branch != 0) {
      SumPtFJJESUp_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJJESUp_branch does not exist!\n");
      exit(1);
    }
    SumPtFJJESUp_isLoaded = true;
  }
  return SumPtFJJESUp_;
}

const float &VVV0Tree::SumPtJJESUp() {
  if (not SumPtJJESUp_isLoaded) {
    if (SumPtJJESUp_branch != 0) {
      SumPtJJESUp_branch->GetEntry(index);
    } else {
      printf("branch SumPtJJESUp_branch does not exist!\n");
      exit(1);
    }
    SumPtJJESUp_isLoaded = true;
  }
  return SumPtJJESUp_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsJESDn() {
  if (not JsJESDn_isLoaded) {
    if (JsJESDn_branch != 0) {
      JsJESDn_branch->GetEntry(index);
    } else {
      printf("branch JsJESDn_branch does not exist!\n");
      exit(1);
    }
    JsJESDn_isLoaded = true;
  }
  return *JsJESDn_;
}

const int &VVV0Tree::NFJJESDn() {
  if (not NFJJESDn_isLoaded) {
    if (NFJJESDn_branch != 0) {
      NFJJESDn_branch->GetEntry(index);
    } else {
      printf("branch NFJJESDn_branch does not exist!\n");
      exit(1);
    }
    NFJJESDn_isLoaded = true;
  }
  return NFJJESDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0JESDn() {
  if (not FJ0JESDn_isLoaded) {
    if (FJ0JESDn_branch != 0) {
      FJ0JESDn_branch->GetEntry(index);
    } else {
      printf("branch FJ0JESDn_branch does not exist!\n");
      exit(1);
    }
    FJ0JESDn_isLoaded = true;
  }
  return *FJ0JESDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1JESDn() {
  if (not FJ1JESDn_isLoaded) {
    if (FJ1JESDn_branch != 0) {
      FJ1JESDn_branch->GetEntry(index);
    } else {
      printf("branch FJ1JESDn_branch does not exist!\n");
      exit(1);
    }
    FJ1JESDn_isLoaded = true;
  }
  return *FJ1JESDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2JESDn() {
  if (not FJ2JESDn_isLoaded) {
    if (FJ2JESDn_branch != 0) {
      FJ2JESDn_branch->GetEntry(index);
    } else {
      printf("branch FJ2JESDn_branch does not exist!\n");
      exit(1);
    }
    FJ2JESDn_isLoaded = true;
  }
  return *FJ2JESDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3JESDn() {
  if (not FJ3JESDn_isLoaded) {
    if (FJ3JESDn_branch != 0) {
      FJ3JESDn_branch->GetEntry(index);
    } else {
      printf("branch FJ3JESDn_branch does not exist!\n");
      exit(1);
    }
    FJ3JESDn_isLoaded = true;
  }
  return *FJ3JESDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4JESDn() {
  if (not FJ4JESDn_isLoaded) {
    if (FJ4JESDn_branch != 0) {
      FJ4JESDn_branch->GetEntry(index);
    } else {
      printf("branch FJ4JESDn_branch does not exist!\n");
      exit(1);
    }
    FJ4JESDn_isLoaded = true;
  }
  return *FJ4JESDn_;
}

const float &VVV0Tree::VMD0JESDn() {
  if (not VMD0JESDn_isLoaded) {
    if (VMD0JESDn_branch != 0) {
      VMD0JESDn_branch->GetEntry(index);
    } else {
      printf("branch VMD0JESDn_branch does not exist!\n");
      exit(1);
    }
    VMD0JESDn_isLoaded = true;
  }
  return VMD0JESDn_;
}

const float &VVV0Tree::VMD1JESDn() {
  if (not VMD1JESDn_isLoaded) {
    if (VMD1JESDn_branch != 0) {
      VMD1JESDn_branch->GetEntry(index);
    } else {
      printf("branch VMD1JESDn_branch does not exist!\n");
      exit(1);
    }
    VMD1JESDn_isLoaded = true;
  }
  return VMD1JESDn_;
}

const float &VVV0Tree::VMD2JESDn() {
  if (not VMD2JESDn_isLoaded) {
    if (VMD2JESDn_branch != 0) {
      VMD2JESDn_branch->GetEntry(index);
    } else {
      printf("branch VMD2JESDn_branch does not exist!\n");
      exit(1);
    }
    VMD2JESDn_isLoaded = true;
  }
  return VMD2JESDn_;
}

const float &VVV0Tree::VMD3JESDn() {
  if (not VMD3JESDn_isLoaded) {
    if (VMD3JESDn_branch != 0) {
      VMD3JESDn_branch->GetEntry(index);
    } else {
      printf("branch VMD3JESDn_branch does not exist!\n");
      exit(1);
    }
    VMD3JESDn_isLoaded = true;
  }
  return VMD3JESDn_;
}

const float &VVV0Tree::VMD4JESDn() {
  if (not VMD4JESDn_isLoaded) {
    if (VMD4JESDn_branch != 0) {
      VMD4JESDn_branch->GetEntry(index);
    } else {
      printf("branch VMD4JESDn_branch does not exist!\n");
      exit(1);
    }
    VMD4JESDn_isLoaded = true;
  }
  return VMD4JESDn_;
}

const float &VVV0Tree::WMD0JESDn() {
  if (not WMD0JESDn_isLoaded) {
    if (WMD0JESDn_branch != 0) {
      WMD0JESDn_branch->GetEntry(index);
    } else {
      printf("branch WMD0JESDn_branch does not exist!\n");
      exit(1);
    }
    WMD0JESDn_isLoaded = true;
  }
  return WMD0JESDn_;
}

const float &VVV0Tree::WMD1JESDn() {
  if (not WMD1JESDn_isLoaded) {
    if (WMD1JESDn_branch != 0) {
      WMD1JESDn_branch->GetEntry(index);
    } else {
      printf("branch WMD1JESDn_branch does not exist!\n");
      exit(1);
    }
    WMD1JESDn_isLoaded = true;
  }
  return WMD1JESDn_;
}

const float &VVV0Tree::WMD2JESDn() {
  if (not WMD2JESDn_isLoaded) {
    if (WMD2JESDn_branch != 0) {
      WMD2JESDn_branch->GetEntry(index);
    } else {
      printf("branch WMD2JESDn_branch does not exist!\n");
      exit(1);
    }
    WMD2JESDn_isLoaded = true;
  }
  return WMD2JESDn_;
}

const float &VVV0Tree::WMD3JESDn() {
  if (not WMD3JESDn_isLoaded) {
    if (WMD3JESDn_branch != 0) {
      WMD3JESDn_branch->GetEntry(index);
    } else {
      printf("branch WMD3JESDn_branch does not exist!\n");
      exit(1);
    }
    WMD3JESDn_isLoaded = true;
  }
  return WMD3JESDn_;
}

const float &VVV0Tree::WMD4JESDn() {
  if (not WMD4JESDn_isLoaded) {
    if (WMD4JESDn_branch != 0) {
      WMD4JESDn_branch->GetEntry(index);
    } else {
      printf("branch WMD4JESDn_branch does not exist!\n");
      exit(1);
    }
    WMD4JESDn_isLoaded = true;
  }
  return WMD4JESDn_;
}

const int &VVV0Tree::NQGen0JESDn() {
  if (not NQGen0JESDn_isLoaded) {
    if (NQGen0JESDn_branch != 0) {
      NQGen0JESDn_branch->GetEntry(index);
    } else {
      printf("branch NQGen0JESDn_branch does not exist!\n");
      exit(1);
    }
    NQGen0JESDn_isLoaded = true;
  }
  return NQGen0JESDn_;
}

const int &VVV0Tree::NQGen1JESDn() {
  if (not NQGen1JESDn_isLoaded) {
    if (NQGen1JESDn_branch != 0) {
      NQGen1JESDn_branch->GetEntry(index);
    } else {
      printf("branch NQGen1JESDn_branch does not exist!\n");
      exit(1);
    }
    NQGen1JESDn_isLoaded = true;
  }
  return NQGen1JESDn_;
}

const int &VVV0Tree::NQGen2JESDn() {
  if (not NQGen2JESDn_isLoaded) {
    if (NQGen2JESDn_branch != 0) {
      NQGen2JESDn_branch->GetEntry(index);
    } else {
      printf("branch NQGen2JESDn_branch does not exist!\n");
      exit(1);
    }
    NQGen2JESDn_isLoaded = true;
  }
  return NQGen2JESDn_;
}

const int &VVV0Tree::NQGen3JESDn() {
  if (not NQGen3JESDn_isLoaded) {
    if (NQGen3JESDn_branch != 0) {
      NQGen3JESDn_branch->GetEntry(index);
    } else {
      printf("branch NQGen3JESDn_branch does not exist!\n");
      exit(1);
    }
    NQGen3JESDn_isLoaded = true;
  }
  return NQGen3JESDn_;
}

const int &VVV0Tree::NQGen4JESDn() {
  if (not NQGen4JESDn_isLoaded) {
    if (NQGen4JESDn_branch != 0) {
      NQGen4JESDn_branch->GetEntry(index);
    } else {
      printf("branch NQGen4JESDn_branch does not exist!\n");
      exit(1);
    }
    NQGen4JESDn_isLoaded = true;
  }
  return NQGen4JESDn_;
}

const int &VVV0Tree::NBGen0JESDn() {
  if (not NBGen0JESDn_isLoaded) {
    if (NBGen0JESDn_branch != 0) {
      NBGen0JESDn_branch->GetEntry(index);
    } else {
      printf("branch NBGen0JESDn_branch does not exist!\n");
      exit(1);
    }
    NBGen0JESDn_isLoaded = true;
  }
  return NBGen0JESDn_;
}

const int &VVV0Tree::NBGen1JESDn() {
  if (not NBGen1JESDn_isLoaded) {
    if (NBGen1JESDn_branch != 0) {
      NBGen1JESDn_branch->GetEntry(index);
    } else {
      printf("branch NBGen1JESDn_branch does not exist!\n");
      exit(1);
    }
    NBGen1JESDn_isLoaded = true;
  }
  return NBGen1JESDn_;
}

const int &VVV0Tree::NBGen2JESDn() {
  if (not NBGen2JESDn_isLoaded) {
    if (NBGen2JESDn_branch != 0) {
      NBGen2JESDn_branch->GetEntry(index);
    } else {
      printf("branch NBGen2JESDn_branch does not exist!\n");
      exit(1);
    }
    NBGen2JESDn_isLoaded = true;
  }
  return NBGen2JESDn_;
}

const int &VVV0Tree::NBGen3JESDn() {
  if (not NBGen3JESDn_isLoaded) {
    if (NBGen3JESDn_branch != 0) {
      NBGen3JESDn_branch->GetEntry(index);
    } else {
      printf("branch NBGen3JESDn_branch does not exist!\n");
      exit(1);
    }
    NBGen3JESDn_isLoaded = true;
  }
  return NBGen3JESDn_;
}

const int &VVV0Tree::NBGen4JESDn() {
  if (not NBGen4JESDn_isLoaded) {
    if (NBGen4JESDn_branch != 0) {
      NBGen4JESDn_branch->GetEntry(index);
    } else {
      printf("branch NBGen4JESDn_branch does not exist!\n");
      exit(1);
    }
    NBGen4JESDn_isLoaded = true;
  }
  return NBGen4JESDn_;
}

const int &VVV0Tree::NLGen0JESDn() {
  if (not NLGen0JESDn_isLoaded) {
    if (NLGen0JESDn_branch != 0) {
      NLGen0JESDn_branch->GetEntry(index);
    } else {
      printf("branch NLGen0JESDn_branch does not exist!\n");
      exit(1);
    }
    NLGen0JESDn_isLoaded = true;
  }
  return NLGen0JESDn_;
}

const int &VVV0Tree::NLGen1JESDn() {
  if (not NLGen1JESDn_isLoaded) {
    if (NLGen1JESDn_branch != 0) {
      NLGen1JESDn_branch->GetEntry(index);
    } else {
      printf("branch NLGen1JESDn_branch does not exist!\n");
      exit(1);
    }
    NLGen1JESDn_isLoaded = true;
  }
  return NLGen1JESDn_;
}

const int &VVV0Tree::NLGen2JESDn() {
  if (not NLGen2JESDn_isLoaded) {
    if (NLGen2JESDn_branch != 0) {
      NLGen2JESDn_branch->GetEntry(index);
    } else {
      printf("branch NLGen2JESDn_branch does not exist!\n");
      exit(1);
    }
    NLGen2JESDn_isLoaded = true;
  }
  return NLGen2JESDn_;
}

const int &VVV0Tree::NLGen3JESDn() {
  if (not NLGen3JESDn_isLoaded) {
    if (NLGen3JESDn_branch != 0) {
      NLGen3JESDn_branch->GetEntry(index);
    } else {
      printf("branch NLGen3JESDn_branch does not exist!\n");
      exit(1);
    }
    NLGen3JESDn_isLoaded = true;
  }
  return NLGen3JESDn_;
}

const int &VVV0Tree::NLGen4JESDn() {
  if (not NLGen4JESDn_isLoaded) {
    if (NLGen4JESDn_branch != 0) {
      NLGen4JESDn_branch->GetEntry(index);
    } else {
      printf("branch NLGen4JESDn_branch does not exist!\n");
      exit(1);
    }
    NLGen4JESDn_isLoaded = true;
  }
  return NLGen4JESDn_;
}

const int &VVV0Tree::NVQGen0JESDn() {
  if (not NVQGen0JESDn_isLoaded) {
    if (NVQGen0JESDn_branch != 0) {
      NVQGen0JESDn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0JESDn_branch does not exist!\n");
      exit(1);
    }
    NVQGen0JESDn_isLoaded = true;
  }
  return NVQGen0JESDn_;
}

const int &VVV0Tree::NVQGen1JESDn() {
  if (not NVQGen1JESDn_isLoaded) {
    if (NVQGen1JESDn_branch != 0) {
      NVQGen1JESDn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1JESDn_branch does not exist!\n");
      exit(1);
    }
    NVQGen1JESDn_isLoaded = true;
  }
  return NVQGen1JESDn_;
}

const int &VVV0Tree::NVQGen2JESDn() {
  if (not NVQGen2JESDn_isLoaded) {
    if (NVQGen2JESDn_branch != 0) {
      NVQGen2JESDn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2JESDn_branch does not exist!\n");
      exit(1);
    }
    NVQGen2JESDn_isLoaded = true;
  }
  return NVQGen2JESDn_;
}

const int &VVV0Tree::NVQGen3JESDn() {
  if (not NVQGen3JESDn_isLoaded) {
    if (NVQGen3JESDn_branch != 0) {
      NVQGen3JESDn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3JESDn_branch does not exist!\n");
      exit(1);
    }
    NVQGen3JESDn_isLoaded = true;
  }
  return NVQGen3JESDn_;
}

const int &VVV0Tree::NVQGen4JESDn() {
  if (not NVQGen4JESDn_isLoaded) {
    if (NVQGen4JESDn_branch != 0) {
      NVQGen4JESDn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4JESDn_branch does not exist!\n");
      exit(1);
    }
    NVQGen4JESDn_isLoaded = true;
  }
  return NVQGen4JESDn_;
}

const int &VVV0Tree::NiFJJESDn() {
  if (not NiFJJESDn_isLoaded) {
    if (NiFJJESDn_branch != 0) {
      NiFJJESDn_branch->GetEntry(index);
    } else {
      printf("branch NiFJJESDn_branch does not exist!\n");
      exit(1);
    }
    NiFJJESDn_isLoaded = true;
  }
  return NiFJJESDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0JESDn() {
  if (not iFJ0JESDn_isLoaded) {
    if (iFJ0JESDn_branch != 0) {
      iFJ0JESDn_branch->GetEntry(index);
    } else {
      printf("branch iFJ0JESDn_branch does not exist!\n");
      exit(1);
    }
    iFJ0JESDn_isLoaded = true;
  }
  return *iFJ0JESDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1JESDn() {
  if (not iFJ1JESDn_isLoaded) {
    if (iFJ1JESDn_branch != 0) {
      iFJ1JESDn_branch->GetEntry(index);
    } else {
      printf("branch iFJ1JESDn_branch does not exist!\n");
      exit(1);
    }
    iFJ1JESDn_isLoaded = true;
  }
  return *iFJ1JESDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2JESDn() {
  if (not iFJ2JESDn_isLoaded) {
    if (iFJ2JESDn_branch != 0) {
      iFJ2JESDn_branch->GetEntry(index);
    } else {
      printf("branch iFJ2JESDn_branch does not exist!\n");
      exit(1);
    }
    iFJ2JESDn_isLoaded = true;
  }
  return *iFJ2JESDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3JESDn() {
  if (not iFJ3JESDn_isLoaded) {
    if (iFJ3JESDn_branch != 0) {
      iFJ3JESDn_branch->GetEntry(index);
    } else {
      printf("branch iFJ3JESDn_branch does not exist!\n");
      exit(1);
    }
    iFJ3JESDn_isLoaded = true;
  }
  return *iFJ3JESDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4JESDn() {
  if (not iFJ4JESDn_isLoaded) {
    if (iFJ4JESDn_branch != 0) {
      iFJ4JESDn_branch->GetEntry(index);
    } else {
      printf("branch iFJ4JESDn_branch does not exist!\n");
      exit(1);
    }
    iFJ4JESDn_isLoaded = true;
  }
  return *iFJ4JESDn_;
}

const float &VVV0Tree::iVMD0JESDn() {
  if (not iVMD0JESDn_isLoaded) {
    if (iVMD0JESDn_branch != 0) {
      iVMD0JESDn_branch->GetEntry(index);
    } else {
      printf("branch iVMD0JESDn_branch does not exist!\n");
      exit(1);
    }
    iVMD0JESDn_isLoaded = true;
  }
  return iVMD0JESDn_;
}

const float &VVV0Tree::iVMD1JESDn() {
  if (not iVMD1JESDn_isLoaded) {
    if (iVMD1JESDn_branch != 0) {
      iVMD1JESDn_branch->GetEntry(index);
    } else {
      printf("branch iVMD1JESDn_branch does not exist!\n");
      exit(1);
    }
    iVMD1JESDn_isLoaded = true;
  }
  return iVMD1JESDn_;
}

const float &VVV0Tree::iVMD2JESDn() {
  if (not iVMD2JESDn_isLoaded) {
    if (iVMD2JESDn_branch != 0) {
      iVMD2JESDn_branch->GetEntry(index);
    } else {
      printf("branch iVMD2JESDn_branch does not exist!\n");
      exit(1);
    }
    iVMD2JESDn_isLoaded = true;
  }
  return iVMD2JESDn_;
}

const float &VVV0Tree::iVMD3JESDn() {
  if (not iVMD3JESDn_isLoaded) {
    if (iVMD3JESDn_branch != 0) {
      iVMD3JESDn_branch->GetEntry(index);
    } else {
      printf("branch iVMD3JESDn_branch does not exist!\n");
      exit(1);
    }
    iVMD3JESDn_isLoaded = true;
  }
  return iVMD3JESDn_;
}

const float &VVV0Tree::iVMD4JESDn() {
  if (not iVMD4JESDn_isLoaded) {
    if (iVMD4JESDn_branch != 0) {
      iVMD4JESDn_branch->GetEntry(index);
    } else {
      printf("branch iVMD4JESDn_branch does not exist!\n");
      exit(1);
    }
    iVMD4JESDn_isLoaded = true;
  }
  return iVMD4JESDn_;
}

const float &VVV0Tree::iWMD0JESDn() {
  if (not iWMD0JESDn_isLoaded) {
    if (iWMD0JESDn_branch != 0) {
      iWMD0JESDn_branch->GetEntry(index);
    } else {
      printf("branch iWMD0JESDn_branch does not exist!\n");
      exit(1);
    }
    iWMD0JESDn_isLoaded = true;
  }
  return iWMD0JESDn_;
}

const float &VVV0Tree::iWMD1JESDn() {
  if (not iWMD1JESDn_isLoaded) {
    if (iWMD1JESDn_branch != 0) {
      iWMD1JESDn_branch->GetEntry(index);
    } else {
      printf("branch iWMD1JESDn_branch does not exist!\n");
      exit(1);
    }
    iWMD1JESDn_isLoaded = true;
  }
  return iWMD1JESDn_;
}

const float &VVV0Tree::iWMD2JESDn() {
  if (not iWMD2JESDn_isLoaded) {
    if (iWMD2JESDn_branch != 0) {
      iWMD2JESDn_branch->GetEntry(index);
    } else {
      printf("branch iWMD2JESDn_branch does not exist!\n");
      exit(1);
    }
    iWMD2JESDn_isLoaded = true;
  }
  return iWMD2JESDn_;
}

const float &VVV0Tree::iWMD3JESDn() {
  if (not iWMD3JESDn_isLoaded) {
    if (iWMD3JESDn_branch != 0) {
      iWMD3JESDn_branch->GetEntry(index);
    } else {
      printf("branch iWMD3JESDn_branch does not exist!\n");
      exit(1);
    }
    iWMD3JESDn_isLoaded = true;
  }
  return iWMD3JESDn_;
}

const float &VVV0Tree::iWMD4JESDn() {
  if (not iWMD4JESDn_isLoaded) {
    if (iWMD4JESDn_branch != 0) {
      iWMD4JESDn_branch->GetEntry(index);
    } else {
      printf("branch iWMD4JESDn_branch does not exist!\n");
      exit(1);
    }
    iWMD4JESDn_isLoaded = true;
  }
  return iWMD4JESDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METJESDn() {
  if (not METJESDn_isLoaded) {
    if (METJESDn_branch != 0) {
      METJESDn_branch->GetEntry(index);
    } else {
      printf("branch METJESDn_branch does not exist!\n");
      exit(1);
    }
    METJESDn_isLoaded = true;
  }
  return *METJESDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NuJESDn() {
  if (not NuJESDn_isLoaded) {
    if (NuJESDn_branch != 0) {
      NuJESDn_branch->GetEntry(index);
    } else {
      printf("branch NuJESDn_branch does not exist!\n");
      exit(1);
    }
    NuJESDn_isLoaded = true;
  }
  return *NuJESDn_;
}

const int &VVV0Tree::NJJESDn() {
  if (not NJJESDn_isLoaded) {
    if (NJJESDn_branch != 0) {
      NJJESDn_branch->GetEntry(index);
    } else {
      printf("branch NJJESDn_branch does not exist!\n");
      exit(1);
    }
    NJJESDn_isLoaded = true;
  }
  return NJJESDn_;
}

const int &VVV0Tree::NbLooseJESDn() {
  if (not NbLooseJESDn_isLoaded) {
    if (NbLooseJESDn_branch != 0) {
      NbLooseJESDn_branch->GetEntry(index);
    } else {
      printf("branch NbLooseJESDn_branch does not exist!\n");
      exit(1);
    }
    NbLooseJESDn_isLoaded = true;
  }
  return NbLooseJESDn_;
}

const int &VVV0Tree::NbMediumJESDn() {
  if (not NbMediumJESDn_isLoaded) {
    if (NbMediumJESDn_branch != 0) {
      NbMediumJESDn_branch->GetEntry(index);
    } else {
      printf("branch NbMediumJESDn_branch does not exist!\n");
      exit(1);
    }
    NbMediumJESDn_isLoaded = true;
  }
  return NbMediumJESDn_;
}

const int &VVV0Tree::NbTightJESDn() {
  if (not NbTightJESDn_isLoaded) {
    if (NbTightJESDn_branch != 0) {
      NbTightJESDn_branch->GetEntry(index);
    } else {
      printf("branch NbTightJESDn_branch does not exist!\n");
      exit(1);
    }
    NbTightJESDn_isLoaded = true;
  }
  return NbTightJESDn_;
}

const int &VVV0Tree::NoORNbLooseJESDn() {
  if (not NoORNbLooseJESDn_isLoaded) {
    if (NoORNbLooseJESDn_branch != 0) {
      NoORNbLooseJESDn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLooseJESDn_branch does not exist!\n");
      exit(1);
    }
    NoORNbLooseJESDn_isLoaded = true;
  }
  return NoORNbLooseJESDn_;
}

const int &VVV0Tree::NoORNbMediumJESDn() {
  if (not NoORNbMediumJESDn_isLoaded) {
    if (NoORNbMediumJESDn_branch != 0) {
      NoORNbMediumJESDn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumJESDn_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumJESDn_isLoaded = true;
  }
  return NoORNbMediumJESDn_;
}

const int &VVV0Tree::NoORNbTightJESDn() {
  if (not NoORNbTightJESDn_isLoaded) {
    if (NoORNbTightJESDn_branch != 0) {
      NoORNbTightJESDn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightJESDn_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightJESDn_isLoaded = true;
  }
  return NoORNbTightJESDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0JESDn() {
  if (not J0JESDn_isLoaded) {
    if (J0JESDn_branch != 0) {
      J0JESDn_branch->GetEntry(index);
    } else {
      printf("branch J0JESDn_branch does not exist!\n");
      exit(1);
    }
    J0JESDn_isLoaded = true;
  }
  return *J0JESDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1JESDn() {
  if (not J1JESDn_isLoaded) {
    if (J1JESDn_branch != 0) {
      J1JESDn_branch->GetEntry(index);
    } else {
      printf("branch J1JESDn_branch does not exist!\n");
      exit(1);
    }
    J1JESDn_isLoaded = true;
  }
  return *J1JESDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2JESDn() {
  if (not J2JESDn_isLoaded) {
    if (J2JESDn_branch != 0) {
      J2JESDn_branch->GetEntry(index);
    } else {
      printf("branch J2JESDn_branch does not exist!\n");
      exit(1);
    }
    J2JESDn_isLoaded = true;
  }
  return *J2JESDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3JESDn() {
  if (not J3JESDn_isLoaded) {
    if (J3JESDn_branch != 0) {
      J3JESDn_branch->GetEntry(index);
    } else {
      printf("branch J3JESDn_branch does not exist!\n");
      exit(1);
    }
    J3JESDn_isLoaded = true;
  }
  return *J3JESDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4JESDn() {
  if (not J4JESDn_isLoaded) {
    if (J4JESDn_branch != 0) {
      J4JESDn_branch->GetEntry(index);
    } else {
      printf("branch J4JESDn_branch does not exist!\n");
      exit(1);
    }
    J4JESDn_isLoaded = true;
  }
  return *J4JESDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5JESDn() {
  if (not J5JESDn_isLoaded) {
    if (J5JESDn_branch != 0) {
      J5JESDn_branch->GetEntry(index);
    } else {
      printf("branch J5JESDn_branch does not exist!\n");
      exit(1);
    }
    J5JESDn_isLoaded = true;
  }
  return *J5JESDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6JESDn() {
  if (not J6JESDn_isLoaded) {
    if (J6JESDn_branch != 0) {
      J6JESDn_branch->GetEntry(index);
    } else {
      printf("branch J6JESDn_branch does not exist!\n");
      exit(1);
    }
    J6JESDn_isLoaded = true;
  }
  return *J6JESDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7JESDn() {
  if (not J7JESDn_isLoaded) {
    if (J7JESDn_branch != 0) {
      J7JESDn_branch->GetEntry(index);
    } else {
      printf("branch J7JESDn_branch does not exist!\n");
      exit(1);
    }
    J7JESDn_isLoaded = true;
  }
  return *J7JESDn_;
}

const vector<int> &VVV0Tree::NQJGenJESDn() {
  if (not NQJGenJESDn_isLoaded) {
    if (NQJGenJESDn_branch != 0) {
      NQJGenJESDn_branch->GetEntry(index);
    } else {
      printf("branch NQJGenJESDn_branch does not exist!\n");
      exit(1);
    }
    NQJGenJESDn_isLoaded = true;
  }
  return *NQJGenJESDn_;
}

const vector<int> &VVV0Tree::NBJGenJESDn() {
  if (not NBJGenJESDn_isLoaded) {
    if (NBJGenJESDn_branch != 0) {
      NBJGenJESDn_branch->GetEntry(index);
    } else {
      printf("branch NBJGenJESDn_branch does not exist!\n");
      exit(1);
    }
    NBJGenJESDn_isLoaded = true;
  }
  return *NBJGenJESDn_;
}

const vector<int> &VVV0Tree::NLJGenJESDn() {
  if (not NLJGenJESDn_isLoaded) {
    if (NLJGenJESDn_branch != 0) {
      NLJGenJESDn_branch->GetEntry(index);
    } else {
      printf("branch NLJGenJESDn_branch does not exist!\n");
      exit(1);
    }
    NLJGenJESDn_isLoaded = true;
  }
  return *NLJGenJESDn_;
}

const float &VVV0Tree::MVVXJESDn() {
  if (not MVVXJESDn_isLoaded) {
    if (MVVXJESDn_branch != 0) {
      MVVXJESDn_branch->GetEntry(index);
    } else {
      printf("branch MVVXJESDn_branch does not exist!\n");
      exit(1);
    }
    MVVXJESDn_isLoaded = true;
  }
  return MVVXJESDn_;
}

const float &VVV0Tree::PtVVXJESDn() {
  if (not PtVVXJESDn_isLoaded) {
    if (PtVVXJESDn_branch != 0) {
      PtVVXJESDn_branch->GetEntry(index);
    } else {
      printf("branch PtVVXJESDn_branch does not exist!\n");
      exit(1);
    }
    PtVVXJESDn_isLoaded = true;
  }
  return PtVVXJESDn_;
}

const float &VVV0Tree::HTJESDn() {
  if (not HTJESDn_isLoaded) {
    if (HTJESDn_branch != 0) {
      HTJESDn_branch->GetEntry(index);
    } else {
      printf("branch HTJESDn_branch does not exist!\n");
      exit(1);
    }
    HTJESDn_isLoaded = true;
  }
  return HTJESDn_;
}

const float &VVV0Tree::HTJJESDn() {
  if (not HTJJESDn_isLoaded) {
    if (HTJJESDn_branch != 0) {
      HTJJESDn_branch->GetEntry(index);
    } else {
      printf("branch HTJJESDn_branch does not exist!\n");
      exit(1);
    }
    HTJJESDn_isLoaded = true;
  }
  return HTJJESDn_;
}

const float &VVV0Tree::HTFJJESDn() {
  if (not HTFJJESDn_isLoaded) {
    if (HTFJJESDn_branch != 0) {
      HTFJJESDn_branch->GetEntry(index);
    } else {
      printf("branch HTFJJESDn_branch does not exist!\n");
      exit(1);
    }
    HTFJJESDn_isLoaded = true;
  }
  return HTFJJESDn_;
}

const float &VVV0Tree::SumPtFJJESDn() {
  if (not SumPtFJJESDn_isLoaded) {
    if (SumPtFJJESDn_branch != 0) {
      SumPtFJJESDn_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJJESDn_branch does not exist!\n");
      exit(1);
    }
    SumPtFJJESDn_isLoaded = true;
  }
  return SumPtFJJESDn_;
}

const float &VVV0Tree::SumPtJJESDn() {
  if (not SumPtJJESDn_isLoaded) {
    if (SumPtJJESDn_branch != 0) {
      SumPtJJESDn_branch->GetEntry(index);
    } else {
      printf("branch SumPtJJESDn_branch does not exist!\n");
      exit(1);
    }
    SumPtJJESDn_isLoaded = true;
  }
  return SumPtJJESDn_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsJERUp() {
  if (not JsJERUp_isLoaded) {
    if (JsJERUp_branch != 0) {
      JsJERUp_branch->GetEntry(index);
    } else {
      printf("branch JsJERUp_branch does not exist!\n");
      exit(1);
    }
    JsJERUp_isLoaded = true;
  }
  return *JsJERUp_;
}

const int &VVV0Tree::NFJJERUp() {
  if (not NFJJERUp_isLoaded) {
    if (NFJJERUp_branch != 0) {
      NFJJERUp_branch->GetEntry(index);
    } else {
      printf("branch NFJJERUp_branch does not exist!\n");
      exit(1);
    }
    NFJJERUp_isLoaded = true;
  }
  return NFJJERUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0JERUp() {
  if (not FJ0JERUp_isLoaded) {
    if (FJ0JERUp_branch != 0) {
      FJ0JERUp_branch->GetEntry(index);
    } else {
      printf("branch FJ0JERUp_branch does not exist!\n");
      exit(1);
    }
    FJ0JERUp_isLoaded = true;
  }
  return *FJ0JERUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1JERUp() {
  if (not FJ1JERUp_isLoaded) {
    if (FJ1JERUp_branch != 0) {
      FJ1JERUp_branch->GetEntry(index);
    } else {
      printf("branch FJ1JERUp_branch does not exist!\n");
      exit(1);
    }
    FJ1JERUp_isLoaded = true;
  }
  return *FJ1JERUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2JERUp() {
  if (not FJ2JERUp_isLoaded) {
    if (FJ2JERUp_branch != 0) {
      FJ2JERUp_branch->GetEntry(index);
    } else {
      printf("branch FJ2JERUp_branch does not exist!\n");
      exit(1);
    }
    FJ2JERUp_isLoaded = true;
  }
  return *FJ2JERUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3JERUp() {
  if (not FJ3JERUp_isLoaded) {
    if (FJ3JERUp_branch != 0) {
      FJ3JERUp_branch->GetEntry(index);
    } else {
      printf("branch FJ3JERUp_branch does not exist!\n");
      exit(1);
    }
    FJ3JERUp_isLoaded = true;
  }
  return *FJ3JERUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4JERUp() {
  if (not FJ4JERUp_isLoaded) {
    if (FJ4JERUp_branch != 0) {
      FJ4JERUp_branch->GetEntry(index);
    } else {
      printf("branch FJ4JERUp_branch does not exist!\n");
      exit(1);
    }
    FJ4JERUp_isLoaded = true;
  }
  return *FJ4JERUp_;
}

const float &VVV0Tree::VMD0JERUp() {
  if (not VMD0JERUp_isLoaded) {
    if (VMD0JERUp_branch != 0) {
      VMD0JERUp_branch->GetEntry(index);
    } else {
      printf("branch VMD0JERUp_branch does not exist!\n");
      exit(1);
    }
    VMD0JERUp_isLoaded = true;
  }
  return VMD0JERUp_;
}

const float &VVV0Tree::VMD1JERUp() {
  if (not VMD1JERUp_isLoaded) {
    if (VMD1JERUp_branch != 0) {
      VMD1JERUp_branch->GetEntry(index);
    } else {
      printf("branch VMD1JERUp_branch does not exist!\n");
      exit(1);
    }
    VMD1JERUp_isLoaded = true;
  }
  return VMD1JERUp_;
}

const float &VVV0Tree::VMD2JERUp() {
  if (not VMD2JERUp_isLoaded) {
    if (VMD2JERUp_branch != 0) {
      VMD2JERUp_branch->GetEntry(index);
    } else {
      printf("branch VMD2JERUp_branch does not exist!\n");
      exit(1);
    }
    VMD2JERUp_isLoaded = true;
  }
  return VMD2JERUp_;
}

const float &VVV0Tree::VMD3JERUp() {
  if (not VMD3JERUp_isLoaded) {
    if (VMD3JERUp_branch != 0) {
      VMD3JERUp_branch->GetEntry(index);
    } else {
      printf("branch VMD3JERUp_branch does not exist!\n");
      exit(1);
    }
    VMD3JERUp_isLoaded = true;
  }
  return VMD3JERUp_;
}

const float &VVV0Tree::VMD4JERUp() {
  if (not VMD4JERUp_isLoaded) {
    if (VMD4JERUp_branch != 0) {
      VMD4JERUp_branch->GetEntry(index);
    } else {
      printf("branch VMD4JERUp_branch does not exist!\n");
      exit(1);
    }
    VMD4JERUp_isLoaded = true;
  }
  return VMD4JERUp_;
}

const float &VVV0Tree::WMD0JERUp() {
  if (not WMD0JERUp_isLoaded) {
    if (WMD0JERUp_branch != 0) {
      WMD0JERUp_branch->GetEntry(index);
    } else {
      printf("branch WMD0JERUp_branch does not exist!\n");
      exit(1);
    }
    WMD0JERUp_isLoaded = true;
  }
  return WMD0JERUp_;
}

const float &VVV0Tree::WMD1JERUp() {
  if (not WMD1JERUp_isLoaded) {
    if (WMD1JERUp_branch != 0) {
      WMD1JERUp_branch->GetEntry(index);
    } else {
      printf("branch WMD1JERUp_branch does not exist!\n");
      exit(1);
    }
    WMD1JERUp_isLoaded = true;
  }
  return WMD1JERUp_;
}

const float &VVV0Tree::WMD2JERUp() {
  if (not WMD2JERUp_isLoaded) {
    if (WMD2JERUp_branch != 0) {
      WMD2JERUp_branch->GetEntry(index);
    } else {
      printf("branch WMD2JERUp_branch does not exist!\n");
      exit(1);
    }
    WMD2JERUp_isLoaded = true;
  }
  return WMD2JERUp_;
}

const float &VVV0Tree::WMD3JERUp() {
  if (not WMD3JERUp_isLoaded) {
    if (WMD3JERUp_branch != 0) {
      WMD3JERUp_branch->GetEntry(index);
    } else {
      printf("branch WMD3JERUp_branch does not exist!\n");
      exit(1);
    }
    WMD3JERUp_isLoaded = true;
  }
  return WMD3JERUp_;
}

const float &VVV0Tree::WMD4JERUp() {
  if (not WMD4JERUp_isLoaded) {
    if (WMD4JERUp_branch != 0) {
      WMD4JERUp_branch->GetEntry(index);
    } else {
      printf("branch WMD4JERUp_branch does not exist!\n");
      exit(1);
    }
    WMD4JERUp_isLoaded = true;
  }
  return WMD4JERUp_;
}

const int &VVV0Tree::NQGen0JERUp() {
  if (not NQGen0JERUp_isLoaded) {
    if (NQGen0JERUp_branch != 0) {
      NQGen0JERUp_branch->GetEntry(index);
    } else {
      printf("branch NQGen0JERUp_branch does not exist!\n");
      exit(1);
    }
    NQGen0JERUp_isLoaded = true;
  }
  return NQGen0JERUp_;
}

const int &VVV0Tree::NQGen1JERUp() {
  if (not NQGen1JERUp_isLoaded) {
    if (NQGen1JERUp_branch != 0) {
      NQGen1JERUp_branch->GetEntry(index);
    } else {
      printf("branch NQGen1JERUp_branch does not exist!\n");
      exit(1);
    }
    NQGen1JERUp_isLoaded = true;
  }
  return NQGen1JERUp_;
}

const int &VVV0Tree::NQGen2JERUp() {
  if (not NQGen2JERUp_isLoaded) {
    if (NQGen2JERUp_branch != 0) {
      NQGen2JERUp_branch->GetEntry(index);
    } else {
      printf("branch NQGen2JERUp_branch does not exist!\n");
      exit(1);
    }
    NQGen2JERUp_isLoaded = true;
  }
  return NQGen2JERUp_;
}

const int &VVV0Tree::NQGen3JERUp() {
  if (not NQGen3JERUp_isLoaded) {
    if (NQGen3JERUp_branch != 0) {
      NQGen3JERUp_branch->GetEntry(index);
    } else {
      printf("branch NQGen3JERUp_branch does not exist!\n");
      exit(1);
    }
    NQGen3JERUp_isLoaded = true;
  }
  return NQGen3JERUp_;
}

const int &VVV0Tree::NQGen4JERUp() {
  if (not NQGen4JERUp_isLoaded) {
    if (NQGen4JERUp_branch != 0) {
      NQGen4JERUp_branch->GetEntry(index);
    } else {
      printf("branch NQGen4JERUp_branch does not exist!\n");
      exit(1);
    }
    NQGen4JERUp_isLoaded = true;
  }
  return NQGen4JERUp_;
}

const int &VVV0Tree::NBGen0JERUp() {
  if (not NBGen0JERUp_isLoaded) {
    if (NBGen0JERUp_branch != 0) {
      NBGen0JERUp_branch->GetEntry(index);
    } else {
      printf("branch NBGen0JERUp_branch does not exist!\n");
      exit(1);
    }
    NBGen0JERUp_isLoaded = true;
  }
  return NBGen0JERUp_;
}

const int &VVV0Tree::NBGen1JERUp() {
  if (not NBGen1JERUp_isLoaded) {
    if (NBGen1JERUp_branch != 0) {
      NBGen1JERUp_branch->GetEntry(index);
    } else {
      printf("branch NBGen1JERUp_branch does not exist!\n");
      exit(1);
    }
    NBGen1JERUp_isLoaded = true;
  }
  return NBGen1JERUp_;
}

const int &VVV0Tree::NBGen2JERUp() {
  if (not NBGen2JERUp_isLoaded) {
    if (NBGen2JERUp_branch != 0) {
      NBGen2JERUp_branch->GetEntry(index);
    } else {
      printf("branch NBGen2JERUp_branch does not exist!\n");
      exit(1);
    }
    NBGen2JERUp_isLoaded = true;
  }
  return NBGen2JERUp_;
}

const int &VVV0Tree::NBGen3JERUp() {
  if (not NBGen3JERUp_isLoaded) {
    if (NBGen3JERUp_branch != 0) {
      NBGen3JERUp_branch->GetEntry(index);
    } else {
      printf("branch NBGen3JERUp_branch does not exist!\n");
      exit(1);
    }
    NBGen3JERUp_isLoaded = true;
  }
  return NBGen3JERUp_;
}

const int &VVV0Tree::NBGen4JERUp() {
  if (not NBGen4JERUp_isLoaded) {
    if (NBGen4JERUp_branch != 0) {
      NBGen4JERUp_branch->GetEntry(index);
    } else {
      printf("branch NBGen4JERUp_branch does not exist!\n");
      exit(1);
    }
    NBGen4JERUp_isLoaded = true;
  }
  return NBGen4JERUp_;
}

const int &VVV0Tree::NLGen0JERUp() {
  if (not NLGen0JERUp_isLoaded) {
    if (NLGen0JERUp_branch != 0) {
      NLGen0JERUp_branch->GetEntry(index);
    } else {
      printf("branch NLGen0JERUp_branch does not exist!\n");
      exit(1);
    }
    NLGen0JERUp_isLoaded = true;
  }
  return NLGen0JERUp_;
}

const int &VVV0Tree::NLGen1JERUp() {
  if (not NLGen1JERUp_isLoaded) {
    if (NLGen1JERUp_branch != 0) {
      NLGen1JERUp_branch->GetEntry(index);
    } else {
      printf("branch NLGen1JERUp_branch does not exist!\n");
      exit(1);
    }
    NLGen1JERUp_isLoaded = true;
  }
  return NLGen1JERUp_;
}

const int &VVV0Tree::NLGen2JERUp() {
  if (not NLGen2JERUp_isLoaded) {
    if (NLGen2JERUp_branch != 0) {
      NLGen2JERUp_branch->GetEntry(index);
    } else {
      printf("branch NLGen2JERUp_branch does not exist!\n");
      exit(1);
    }
    NLGen2JERUp_isLoaded = true;
  }
  return NLGen2JERUp_;
}

const int &VVV0Tree::NLGen3JERUp() {
  if (not NLGen3JERUp_isLoaded) {
    if (NLGen3JERUp_branch != 0) {
      NLGen3JERUp_branch->GetEntry(index);
    } else {
      printf("branch NLGen3JERUp_branch does not exist!\n");
      exit(1);
    }
    NLGen3JERUp_isLoaded = true;
  }
  return NLGen3JERUp_;
}

const int &VVV0Tree::NLGen4JERUp() {
  if (not NLGen4JERUp_isLoaded) {
    if (NLGen4JERUp_branch != 0) {
      NLGen4JERUp_branch->GetEntry(index);
    } else {
      printf("branch NLGen4JERUp_branch does not exist!\n");
      exit(1);
    }
    NLGen4JERUp_isLoaded = true;
  }
  return NLGen4JERUp_;
}

const int &VVV0Tree::NVQGen0JERUp() {
  if (not NVQGen0JERUp_isLoaded) {
    if (NVQGen0JERUp_branch != 0) {
      NVQGen0JERUp_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0JERUp_branch does not exist!\n");
      exit(1);
    }
    NVQGen0JERUp_isLoaded = true;
  }
  return NVQGen0JERUp_;
}

const int &VVV0Tree::NVQGen1JERUp() {
  if (not NVQGen1JERUp_isLoaded) {
    if (NVQGen1JERUp_branch != 0) {
      NVQGen1JERUp_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1JERUp_branch does not exist!\n");
      exit(1);
    }
    NVQGen1JERUp_isLoaded = true;
  }
  return NVQGen1JERUp_;
}

const int &VVV0Tree::NVQGen2JERUp() {
  if (not NVQGen2JERUp_isLoaded) {
    if (NVQGen2JERUp_branch != 0) {
      NVQGen2JERUp_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2JERUp_branch does not exist!\n");
      exit(1);
    }
    NVQGen2JERUp_isLoaded = true;
  }
  return NVQGen2JERUp_;
}

const int &VVV0Tree::NVQGen3JERUp() {
  if (not NVQGen3JERUp_isLoaded) {
    if (NVQGen3JERUp_branch != 0) {
      NVQGen3JERUp_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3JERUp_branch does not exist!\n");
      exit(1);
    }
    NVQGen3JERUp_isLoaded = true;
  }
  return NVQGen3JERUp_;
}

const int &VVV0Tree::NVQGen4JERUp() {
  if (not NVQGen4JERUp_isLoaded) {
    if (NVQGen4JERUp_branch != 0) {
      NVQGen4JERUp_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4JERUp_branch does not exist!\n");
      exit(1);
    }
    NVQGen4JERUp_isLoaded = true;
  }
  return NVQGen4JERUp_;
}

const int &VVV0Tree::NiFJJERUp() {
  if (not NiFJJERUp_isLoaded) {
    if (NiFJJERUp_branch != 0) {
      NiFJJERUp_branch->GetEntry(index);
    } else {
      printf("branch NiFJJERUp_branch does not exist!\n");
      exit(1);
    }
    NiFJJERUp_isLoaded = true;
  }
  return NiFJJERUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0JERUp() {
  if (not iFJ0JERUp_isLoaded) {
    if (iFJ0JERUp_branch != 0) {
      iFJ0JERUp_branch->GetEntry(index);
    } else {
      printf("branch iFJ0JERUp_branch does not exist!\n");
      exit(1);
    }
    iFJ0JERUp_isLoaded = true;
  }
  return *iFJ0JERUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1JERUp() {
  if (not iFJ1JERUp_isLoaded) {
    if (iFJ1JERUp_branch != 0) {
      iFJ1JERUp_branch->GetEntry(index);
    } else {
      printf("branch iFJ1JERUp_branch does not exist!\n");
      exit(1);
    }
    iFJ1JERUp_isLoaded = true;
  }
  return *iFJ1JERUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2JERUp() {
  if (not iFJ2JERUp_isLoaded) {
    if (iFJ2JERUp_branch != 0) {
      iFJ2JERUp_branch->GetEntry(index);
    } else {
      printf("branch iFJ2JERUp_branch does not exist!\n");
      exit(1);
    }
    iFJ2JERUp_isLoaded = true;
  }
  return *iFJ2JERUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3JERUp() {
  if (not iFJ3JERUp_isLoaded) {
    if (iFJ3JERUp_branch != 0) {
      iFJ3JERUp_branch->GetEntry(index);
    } else {
      printf("branch iFJ3JERUp_branch does not exist!\n");
      exit(1);
    }
    iFJ3JERUp_isLoaded = true;
  }
  return *iFJ3JERUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4JERUp() {
  if (not iFJ4JERUp_isLoaded) {
    if (iFJ4JERUp_branch != 0) {
      iFJ4JERUp_branch->GetEntry(index);
    } else {
      printf("branch iFJ4JERUp_branch does not exist!\n");
      exit(1);
    }
    iFJ4JERUp_isLoaded = true;
  }
  return *iFJ4JERUp_;
}

const float &VVV0Tree::iVMD0JERUp() {
  if (not iVMD0JERUp_isLoaded) {
    if (iVMD0JERUp_branch != 0) {
      iVMD0JERUp_branch->GetEntry(index);
    } else {
      printf("branch iVMD0JERUp_branch does not exist!\n");
      exit(1);
    }
    iVMD0JERUp_isLoaded = true;
  }
  return iVMD0JERUp_;
}

const float &VVV0Tree::iVMD1JERUp() {
  if (not iVMD1JERUp_isLoaded) {
    if (iVMD1JERUp_branch != 0) {
      iVMD1JERUp_branch->GetEntry(index);
    } else {
      printf("branch iVMD1JERUp_branch does not exist!\n");
      exit(1);
    }
    iVMD1JERUp_isLoaded = true;
  }
  return iVMD1JERUp_;
}

const float &VVV0Tree::iVMD2JERUp() {
  if (not iVMD2JERUp_isLoaded) {
    if (iVMD2JERUp_branch != 0) {
      iVMD2JERUp_branch->GetEntry(index);
    } else {
      printf("branch iVMD2JERUp_branch does not exist!\n");
      exit(1);
    }
    iVMD2JERUp_isLoaded = true;
  }
  return iVMD2JERUp_;
}

const float &VVV0Tree::iVMD3JERUp() {
  if (not iVMD3JERUp_isLoaded) {
    if (iVMD3JERUp_branch != 0) {
      iVMD3JERUp_branch->GetEntry(index);
    } else {
      printf("branch iVMD3JERUp_branch does not exist!\n");
      exit(1);
    }
    iVMD3JERUp_isLoaded = true;
  }
  return iVMD3JERUp_;
}

const float &VVV0Tree::iVMD4JERUp() {
  if (not iVMD4JERUp_isLoaded) {
    if (iVMD4JERUp_branch != 0) {
      iVMD4JERUp_branch->GetEntry(index);
    } else {
      printf("branch iVMD4JERUp_branch does not exist!\n");
      exit(1);
    }
    iVMD4JERUp_isLoaded = true;
  }
  return iVMD4JERUp_;
}

const float &VVV0Tree::iWMD0JERUp() {
  if (not iWMD0JERUp_isLoaded) {
    if (iWMD0JERUp_branch != 0) {
      iWMD0JERUp_branch->GetEntry(index);
    } else {
      printf("branch iWMD0JERUp_branch does not exist!\n");
      exit(1);
    }
    iWMD0JERUp_isLoaded = true;
  }
  return iWMD0JERUp_;
}

const float &VVV0Tree::iWMD1JERUp() {
  if (not iWMD1JERUp_isLoaded) {
    if (iWMD1JERUp_branch != 0) {
      iWMD1JERUp_branch->GetEntry(index);
    } else {
      printf("branch iWMD1JERUp_branch does not exist!\n");
      exit(1);
    }
    iWMD1JERUp_isLoaded = true;
  }
  return iWMD1JERUp_;
}

const float &VVV0Tree::iWMD2JERUp() {
  if (not iWMD2JERUp_isLoaded) {
    if (iWMD2JERUp_branch != 0) {
      iWMD2JERUp_branch->GetEntry(index);
    } else {
      printf("branch iWMD2JERUp_branch does not exist!\n");
      exit(1);
    }
    iWMD2JERUp_isLoaded = true;
  }
  return iWMD2JERUp_;
}

const float &VVV0Tree::iWMD3JERUp() {
  if (not iWMD3JERUp_isLoaded) {
    if (iWMD3JERUp_branch != 0) {
      iWMD3JERUp_branch->GetEntry(index);
    } else {
      printf("branch iWMD3JERUp_branch does not exist!\n");
      exit(1);
    }
    iWMD3JERUp_isLoaded = true;
  }
  return iWMD3JERUp_;
}

const float &VVV0Tree::iWMD4JERUp() {
  if (not iWMD4JERUp_isLoaded) {
    if (iWMD4JERUp_branch != 0) {
      iWMD4JERUp_branch->GetEntry(index);
    } else {
      printf("branch iWMD4JERUp_branch does not exist!\n");
      exit(1);
    }
    iWMD4JERUp_isLoaded = true;
  }
  return iWMD4JERUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METJERUp() {
  if (not METJERUp_isLoaded) {
    if (METJERUp_branch != 0) {
      METJERUp_branch->GetEntry(index);
    } else {
      printf("branch METJERUp_branch does not exist!\n");
      exit(1);
    }
    METJERUp_isLoaded = true;
  }
  return *METJERUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NuJERUp() {
  if (not NuJERUp_isLoaded) {
    if (NuJERUp_branch != 0) {
      NuJERUp_branch->GetEntry(index);
    } else {
      printf("branch NuJERUp_branch does not exist!\n");
      exit(1);
    }
    NuJERUp_isLoaded = true;
  }
  return *NuJERUp_;
}

const int &VVV0Tree::NJJERUp() {
  if (not NJJERUp_isLoaded) {
    if (NJJERUp_branch != 0) {
      NJJERUp_branch->GetEntry(index);
    } else {
      printf("branch NJJERUp_branch does not exist!\n");
      exit(1);
    }
    NJJERUp_isLoaded = true;
  }
  return NJJERUp_;
}

const int &VVV0Tree::NbLooseJERUp() {
  if (not NbLooseJERUp_isLoaded) {
    if (NbLooseJERUp_branch != 0) {
      NbLooseJERUp_branch->GetEntry(index);
    } else {
      printf("branch NbLooseJERUp_branch does not exist!\n");
      exit(1);
    }
    NbLooseJERUp_isLoaded = true;
  }
  return NbLooseJERUp_;
}

const int &VVV0Tree::NbMediumJERUp() {
  if (not NbMediumJERUp_isLoaded) {
    if (NbMediumJERUp_branch != 0) {
      NbMediumJERUp_branch->GetEntry(index);
    } else {
      printf("branch NbMediumJERUp_branch does not exist!\n");
      exit(1);
    }
    NbMediumJERUp_isLoaded = true;
  }
  return NbMediumJERUp_;
}

const int &VVV0Tree::NbTightJERUp() {
  if (not NbTightJERUp_isLoaded) {
    if (NbTightJERUp_branch != 0) {
      NbTightJERUp_branch->GetEntry(index);
    } else {
      printf("branch NbTightJERUp_branch does not exist!\n");
      exit(1);
    }
    NbTightJERUp_isLoaded = true;
  }
  return NbTightJERUp_;
}

const int &VVV0Tree::NoORNbLooseJERUp() {
  if (not NoORNbLooseJERUp_isLoaded) {
    if (NoORNbLooseJERUp_branch != 0) {
      NoORNbLooseJERUp_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLooseJERUp_branch does not exist!\n");
      exit(1);
    }
    NoORNbLooseJERUp_isLoaded = true;
  }
  return NoORNbLooseJERUp_;
}

const int &VVV0Tree::NoORNbMediumJERUp() {
  if (not NoORNbMediumJERUp_isLoaded) {
    if (NoORNbMediumJERUp_branch != 0) {
      NoORNbMediumJERUp_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumJERUp_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumJERUp_isLoaded = true;
  }
  return NoORNbMediumJERUp_;
}

const int &VVV0Tree::NoORNbTightJERUp() {
  if (not NoORNbTightJERUp_isLoaded) {
    if (NoORNbTightJERUp_branch != 0) {
      NoORNbTightJERUp_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightJERUp_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightJERUp_isLoaded = true;
  }
  return NoORNbTightJERUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0JERUp() {
  if (not J0JERUp_isLoaded) {
    if (J0JERUp_branch != 0) {
      J0JERUp_branch->GetEntry(index);
    } else {
      printf("branch J0JERUp_branch does not exist!\n");
      exit(1);
    }
    J0JERUp_isLoaded = true;
  }
  return *J0JERUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1JERUp() {
  if (not J1JERUp_isLoaded) {
    if (J1JERUp_branch != 0) {
      J1JERUp_branch->GetEntry(index);
    } else {
      printf("branch J1JERUp_branch does not exist!\n");
      exit(1);
    }
    J1JERUp_isLoaded = true;
  }
  return *J1JERUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2JERUp() {
  if (not J2JERUp_isLoaded) {
    if (J2JERUp_branch != 0) {
      J2JERUp_branch->GetEntry(index);
    } else {
      printf("branch J2JERUp_branch does not exist!\n");
      exit(1);
    }
    J2JERUp_isLoaded = true;
  }
  return *J2JERUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3JERUp() {
  if (not J3JERUp_isLoaded) {
    if (J3JERUp_branch != 0) {
      J3JERUp_branch->GetEntry(index);
    } else {
      printf("branch J3JERUp_branch does not exist!\n");
      exit(1);
    }
    J3JERUp_isLoaded = true;
  }
  return *J3JERUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4JERUp() {
  if (not J4JERUp_isLoaded) {
    if (J4JERUp_branch != 0) {
      J4JERUp_branch->GetEntry(index);
    } else {
      printf("branch J4JERUp_branch does not exist!\n");
      exit(1);
    }
    J4JERUp_isLoaded = true;
  }
  return *J4JERUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5JERUp() {
  if (not J5JERUp_isLoaded) {
    if (J5JERUp_branch != 0) {
      J5JERUp_branch->GetEntry(index);
    } else {
      printf("branch J5JERUp_branch does not exist!\n");
      exit(1);
    }
    J5JERUp_isLoaded = true;
  }
  return *J5JERUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6JERUp() {
  if (not J6JERUp_isLoaded) {
    if (J6JERUp_branch != 0) {
      J6JERUp_branch->GetEntry(index);
    } else {
      printf("branch J6JERUp_branch does not exist!\n");
      exit(1);
    }
    J6JERUp_isLoaded = true;
  }
  return *J6JERUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7JERUp() {
  if (not J7JERUp_isLoaded) {
    if (J7JERUp_branch != 0) {
      J7JERUp_branch->GetEntry(index);
    } else {
      printf("branch J7JERUp_branch does not exist!\n");
      exit(1);
    }
    J7JERUp_isLoaded = true;
  }
  return *J7JERUp_;
}

const vector<int> &VVV0Tree::NQJGenJERUp() {
  if (not NQJGenJERUp_isLoaded) {
    if (NQJGenJERUp_branch != 0) {
      NQJGenJERUp_branch->GetEntry(index);
    } else {
      printf("branch NQJGenJERUp_branch does not exist!\n");
      exit(1);
    }
    NQJGenJERUp_isLoaded = true;
  }
  return *NQJGenJERUp_;
}

const vector<int> &VVV0Tree::NBJGenJERUp() {
  if (not NBJGenJERUp_isLoaded) {
    if (NBJGenJERUp_branch != 0) {
      NBJGenJERUp_branch->GetEntry(index);
    } else {
      printf("branch NBJGenJERUp_branch does not exist!\n");
      exit(1);
    }
    NBJGenJERUp_isLoaded = true;
  }
  return *NBJGenJERUp_;
}

const vector<int> &VVV0Tree::NLJGenJERUp() {
  if (not NLJGenJERUp_isLoaded) {
    if (NLJGenJERUp_branch != 0) {
      NLJGenJERUp_branch->GetEntry(index);
    } else {
      printf("branch NLJGenJERUp_branch does not exist!\n");
      exit(1);
    }
    NLJGenJERUp_isLoaded = true;
  }
  return *NLJGenJERUp_;
}

const float &VVV0Tree::MVVXJERUp() {
  if (not MVVXJERUp_isLoaded) {
    if (MVVXJERUp_branch != 0) {
      MVVXJERUp_branch->GetEntry(index);
    } else {
      printf("branch MVVXJERUp_branch does not exist!\n");
      exit(1);
    }
    MVVXJERUp_isLoaded = true;
  }
  return MVVXJERUp_;
}

const float &VVV0Tree::PtVVXJERUp() {
  if (not PtVVXJERUp_isLoaded) {
    if (PtVVXJERUp_branch != 0) {
      PtVVXJERUp_branch->GetEntry(index);
    } else {
      printf("branch PtVVXJERUp_branch does not exist!\n");
      exit(1);
    }
    PtVVXJERUp_isLoaded = true;
  }
  return PtVVXJERUp_;
}

const float &VVV0Tree::HTJERUp() {
  if (not HTJERUp_isLoaded) {
    if (HTJERUp_branch != 0) {
      HTJERUp_branch->GetEntry(index);
    } else {
      printf("branch HTJERUp_branch does not exist!\n");
      exit(1);
    }
    HTJERUp_isLoaded = true;
  }
  return HTJERUp_;
}

const float &VVV0Tree::HTJJERUp() {
  if (not HTJJERUp_isLoaded) {
    if (HTJJERUp_branch != 0) {
      HTJJERUp_branch->GetEntry(index);
    } else {
      printf("branch HTJJERUp_branch does not exist!\n");
      exit(1);
    }
    HTJJERUp_isLoaded = true;
  }
  return HTJJERUp_;
}

const float &VVV0Tree::HTFJJERUp() {
  if (not HTFJJERUp_isLoaded) {
    if (HTFJJERUp_branch != 0) {
      HTFJJERUp_branch->GetEntry(index);
    } else {
      printf("branch HTFJJERUp_branch does not exist!\n");
      exit(1);
    }
    HTFJJERUp_isLoaded = true;
  }
  return HTFJJERUp_;
}

const float &VVV0Tree::SumPtFJJERUp() {
  if (not SumPtFJJERUp_isLoaded) {
    if (SumPtFJJERUp_branch != 0) {
      SumPtFJJERUp_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJJERUp_branch does not exist!\n");
      exit(1);
    }
    SumPtFJJERUp_isLoaded = true;
  }
  return SumPtFJJERUp_;
}

const float &VVV0Tree::SumPtJJERUp() {
  if (not SumPtJJERUp_isLoaded) {
    if (SumPtJJERUp_branch != 0) {
      SumPtJJERUp_branch->GetEntry(index);
    } else {
      printf("branch SumPtJJERUp_branch does not exist!\n");
      exit(1);
    }
    SumPtJJERUp_isLoaded = true;
  }
  return SumPtJJERUp_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsJERDn() {
  if (not JsJERDn_isLoaded) {
    if (JsJERDn_branch != 0) {
      JsJERDn_branch->GetEntry(index);
    } else {
      printf("branch JsJERDn_branch does not exist!\n");
      exit(1);
    }
    JsJERDn_isLoaded = true;
  }
  return *JsJERDn_;
}

const int &VVV0Tree::NFJJERDn() {
  if (not NFJJERDn_isLoaded) {
    if (NFJJERDn_branch != 0) {
      NFJJERDn_branch->GetEntry(index);
    } else {
      printf("branch NFJJERDn_branch does not exist!\n");
      exit(1);
    }
    NFJJERDn_isLoaded = true;
  }
  return NFJJERDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0JERDn() {
  if (not FJ0JERDn_isLoaded) {
    if (FJ0JERDn_branch != 0) {
      FJ0JERDn_branch->GetEntry(index);
    } else {
      printf("branch FJ0JERDn_branch does not exist!\n");
      exit(1);
    }
    FJ0JERDn_isLoaded = true;
  }
  return *FJ0JERDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1JERDn() {
  if (not FJ1JERDn_isLoaded) {
    if (FJ1JERDn_branch != 0) {
      FJ1JERDn_branch->GetEntry(index);
    } else {
      printf("branch FJ1JERDn_branch does not exist!\n");
      exit(1);
    }
    FJ1JERDn_isLoaded = true;
  }
  return *FJ1JERDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2JERDn() {
  if (not FJ2JERDn_isLoaded) {
    if (FJ2JERDn_branch != 0) {
      FJ2JERDn_branch->GetEntry(index);
    } else {
      printf("branch FJ2JERDn_branch does not exist!\n");
      exit(1);
    }
    FJ2JERDn_isLoaded = true;
  }
  return *FJ2JERDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3JERDn() {
  if (not FJ3JERDn_isLoaded) {
    if (FJ3JERDn_branch != 0) {
      FJ3JERDn_branch->GetEntry(index);
    } else {
      printf("branch FJ3JERDn_branch does not exist!\n");
      exit(1);
    }
    FJ3JERDn_isLoaded = true;
  }
  return *FJ3JERDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4JERDn() {
  if (not FJ4JERDn_isLoaded) {
    if (FJ4JERDn_branch != 0) {
      FJ4JERDn_branch->GetEntry(index);
    } else {
      printf("branch FJ4JERDn_branch does not exist!\n");
      exit(1);
    }
    FJ4JERDn_isLoaded = true;
  }
  return *FJ4JERDn_;
}

const float &VVV0Tree::VMD0JERDn() {
  if (not VMD0JERDn_isLoaded) {
    if (VMD0JERDn_branch != 0) {
      VMD0JERDn_branch->GetEntry(index);
    } else {
      printf("branch VMD0JERDn_branch does not exist!\n");
      exit(1);
    }
    VMD0JERDn_isLoaded = true;
  }
  return VMD0JERDn_;
}

const float &VVV0Tree::VMD1JERDn() {
  if (not VMD1JERDn_isLoaded) {
    if (VMD1JERDn_branch != 0) {
      VMD1JERDn_branch->GetEntry(index);
    } else {
      printf("branch VMD1JERDn_branch does not exist!\n");
      exit(1);
    }
    VMD1JERDn_isLoaded = true;
  }
  return VMD1JERDn_;
}

const float &VVV0Tree::VMD2JERDn() {
  if (not VMD2JERDn_isLoaded) {
    if (VMD2JERDn_branch != 0) {
      VMD2JERDn_branch->GetEntry(index);
    } else {
      printf("branch VMD2JERDn_branch does not exist!\n");
      exit(1);
    }
    VMD2JERDn_isLoaded = true;
  }
  return VMD2JERDn_;
}

const float &VVV0Tree::VMD3JERDn() {
  if (not VMD3JERDn_isLoaded) {
    if (VMD3JERDn_branch != 0) {
      VMD3JERDn_branch->GetEntry(index);
    } else {
      printf("branch VMD3JERDn_branch does not exist!\n");
      exit(1);
    }
    VMD3JERDn_isLoaded = true;
  }
  return VMD3JERDn_;
}

const float &VVV0Tree::VMD4JERDn() {
  if (not VMD4JERDn_isLoaded) {
    if (VMD4JERDn_branch != 0) {
      VMD4JERDn_branch->GetEntry(index);
    } else {
      printf("branch VMD4JERDn_branch does not exist!\n");
      exit(1);
    }
    VMD4JERDn_isLoaded = true;
  }
  return VMD4JERDn_;
}

const float &VVV0Tree::WMD0JERDn() {
  if (not WMD0JERDn_isLoaded) {
    if (WMD0JERDn_branch != 0) {
      WMD0JERDn_branch->GetEntry(index);
    } else {
      printf("branch WMD0JERDn_branch does not exist!\n");
      exit(1);
    }
    WMD0JERDn_isLoaded = true;
  }
  return WMD0JERDn_;
}

const float &VVV0Tree::WMD1JERDn() {
  if (not WMD1JERDn_isLoaded) {
    if (WMD1JERDn_branch != 0) {
      WMD1JERDn_branch->GetEntry(index);
    } else {
      printf("branch WMD1JERDn_branch does not exist!\n");
      exit(1);
    }
    WMD1JERDn_isLoaded = true;
  }
  return WMD1JERDn_;
}

const float &VVV0Tree::WMD2JERDn() {
  if (not WMD2JERDn_isLoaded) {
    if (WMD2JERDn_branch != 0) {
      WMD2JERDn_branch->GetEntry(index);
    } else {
      printf("branch WMD2JERDn_branch does not exist!\n");
      exit(1);
    }
    WMD2JERDn_isLoaded = true;
  }
  return WMD2JERDn_;
}

const float &VVV0Tree::WMD3JERDn() {
  if (not WMD3JERDn_isLoaded) {
    if (WMD3JERDn_branch != 0) {
      WMD3JERDn_branch->GetEntry(index);
    } else {
      printf("branch WMD3JERDn_branch does not exist!\n");
      exit(1);
    }
    WMD3JERDn_isLoaded = true;
  }
  return WMD3JERDn_;
}

const float &VVV0Tree::WMD4JERDn() {
  if (not WMD4JERDn_isLoaded) {
    if (WMD4JERDn_branch != 0) {
      WMD4JERDn_branch->GetEntry(index);
    } else {
      printf("branch WMD4JERDn_branch does not exist!\n");
      exit(1);
    }
    WMD4JERDn_isLoaded = true;
  }
  return WMD4JERDn_;
}

const int &VVV0Tree::NQGen0JERDn() {
  if (not NQGen0JERDn_isLoaded) {
    if (NQGen0JERDn_branch != 0) {
      NQGen0JERDn_branch->GetEntry(index);
    } else {
      printf("branch NQGen0JERDn_branch does not exist!\n");
      exit(1);
    }
    NQGen0JERDn_isLoaded = true;
  }
  return NQGen0JERDn_;
}

const int &VVV0Tree::NQGen1JERDn() {
  if (not NQGen1JERDn_isLoaded) {
    if (NQGen1JERDn_branch != 0) {
      NQGen1JERDn_branch->GetEntry(index);
    } else {
      printf("branch NQGen1JERDn_branch does not exist!\n");
      exit(1);
    }
    NQGen1JERDn_isLoaded = true;
  }
  return NQGen1JERDn_;
}

const int &VVV0Tree::NQGen2JERDn() {
  if (not NQGen2JERDn_isLoaded) {
    if (NQGen2JERDn_branch != 0) {
      NQGen2JERDn_branch->GetEntry(index);
    } else {
      printf("branch NQGen2JERDn_branch does not exist!\n");
      exit(1);
    }
    NQGen2JERDn_isLoaded = true;
  }
  return NQGen2JERDn_;
}

const int &VVV0Tree::NQGen3JERDn() {
  if (not NQGen3JERDn_isLoaded) {
    if (NQGen3JERDn_branch != 0) {
      NQGen3JERDn_branch->GetEntry(index);
    } else {
      printf("branch NQGen3JERDn_branch does not exist!\n");
      exit(1);
    }
    NQGen3JERDn_isLoaded = true;
  }
  return NQGen3JERDn_;
}

const int &VVV0Tree::NQGen4JERDn() {
  if (not NQGen4JERDn_isLoaded) {
    if (NQGen4JERDn_branch != 0) {
      NQGen4JERDn_branch->GetEntry(index);
    } else {
      printf("branch NQGen4JERDn_branch does not exist!\n");
      exit(1);
    }
    NQGen4JERDn_isLoaded = true;
  }
  return NQGen4JERDn_;
}

const int &VVV0Tree::NBGen0JERDn() {
  if (not NBGen0JERDn_isLoaded) {
    if (NBGen0JERDn_branch != 0) {
      NBGen0JERDn_branch->GetEntry(index);
    } else {
      printf("branch NBGen0JERDn_branch does not exist!\n");
      exit(1);
    }
    NBGen0JERDn_isLoaded = true;
  }
  return NBGen0JERDn_;
}

const int &VVV0Tree::NBGen1JERDn() {
  if (not NBGen1JERDn_isLoaded) {
    if (NBGen1JERDn_branch != 0) {
      NBGen1JERDn_branch->GetEntry(index);
    } else {
      printf("branch NBGen1JERDn_branch does not exist!\n");
      exit(1);
    }
    NBGen1JERDn_isLoaded = true;
  }
  return NBGen1JERDn_;
}

const int &VVV0Tree::NBGen2JERDn() {
  if (not NBGen2JERDn_isLoaded) {
    if (NBGen2JERDn_branch != 0) {
      NBGen2JERDn_branch->GetEntry(index);
    } else {
      printf("branch NBGen2JERDn_branch does not exist!\n");
      exit(1);
    }
    NBGen2JERDn_isLoaded = true;
  }
  return NBGen2JERDn_;
}

const int &VVV0Tree::NBGen3JERDn() {
  if (not NBGen3JERDn_isLoaded) {
    if (NBGen3JERDn_branch != 0) {
      NBGen3JERDn_branch->GetEntry(index);
    } else {
      printf("branch NBGen3JERDn_branch does not exist!\n");
      exit(1);
    }
    NBGen3JERDn_isLoaded = true;
  }
  return NBGen3JERDn_;
}

const int &VVV0Tree::NBGen4JERDn() {
  if (not NBGen4JERDn_isLoaded) {
    if (NBGen4JERDn_branch != 0) {
      NBGen4JERDn_branch->GetEntry(index);
    } else {
      printf("branch NBGen4JERDn_branch does not exist!\n");
      exit(1);
    }
    NBGen4JERDn_isLoaded = true;
  }
  return NBGen4JERDn_;
}

const int &VVV0Tree::NLGen0JERDn() {
  if (not NLGen0JERDn_isLoaded) {
    if (NLGen0JERDn_branch != 0) {
      NLGen0JERDn_branch->GetEntry(index);
    } else {
      printf("branch NLGen0JERDn_branch does not exist!\n");
      exit(1);
    }
    NLGen0JERDn_isLoaded = true;
  }
  return NLGen0JERDn_;
}

const int &VVV0Tree::NLGen1JERDn() {
  if (not NLGen1JERDn_isLoaded) {
    if (NLGen1JERDn_branch != 0) {
      NLGen1JERDn_branch->GetEntry(index);
    } else {
      printf("branch NLGen1JERDn_branch does not exist!\n");
      exit(1);
    }
    NLGen1JERDn_isLoaded = true;
  }
  return NLGen1JERDn_;
}

const int &VVV0Tree::NLGen2JERDn() {
  if (not NLGen2JERDn_isLoaded) {
    if (NLGen2JERDn_branch != 0) {
      NLGen2JERDn_branch->GetEntry(index);
    } else {
      printf("branch NLGen2JERDn_branch does not exist!\n");
      exit(1);
    }
    NLGen2JERDn_isLoaded = true;
  }
  return NLGen2JERDn_;
}

const int &VVV0Tree::NLGen3JERDn() {
  if (not NLGen3JERDn_isLoaded) {
    if (NLGen3JERDn_branch != 0) {
      NLGen3JERDn_branch->GetEntry(index);
    } else {
      printf("branch NLGen3JERDn_branch does not exist!\n");
      exit(1);
    }
    NLGen3JERDn_isLoaded = true;
  }
  return NLGen3JERDn_;
}

const int &VVV0Tree::NLGen4JERDn() {
  if (not NLGen4JERDn_isLoaded) {
    if (NLGen4JERDn_branch != 0) {
      NLGen4JERDn_branch->GetEntry(index);
    } else {
      printf("branch NLGen4JERDn_branch does not exist!\n");
      exit(1);
    }
    NLGen4JERDn_isLoaded = true;
  }
  return NLGen4JERDn_;
}

const int &VVV0Tree::NVQGen0JERDn() {
  if (not NVQGen0JERDn_isLoaded) {
    if (NVQGen0JERDn_branch != 0) {
      NVQGen0JERDn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0JERDn_branch does not exist!\n");
      exit(1);
    }
    NVQGen0JERDn_isLoaded = true;
  }
  return NVQGen0JERDn_;
}

const int &VVV0Tree::NVQGen1JERDn() {
  if (not NVQGen1JERDn_isLoaded) {
    if (NVQGen1JERDn_branch != 0) {
      NVQGen1JERDn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1JERDn_branch does not exist!\n");
      exit(1);
    }
    NVQGen1JERDn_isLoaded = true;
  }
  return NVQGen1JERDn_;
}

const int &VVV0Tree::NVQGen2JERDn() {
  if (not NVQGen2JERDn_isLoaded) {
    if (NVQGen2JERDn_branch != 0) {
      NVQGen2JERDn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2JERDn_branch does not exist!\n");
      exit(1);
    }
    NVQGen2JERDn_isLoaded = true;
  }
  return NVQGen2JERDn_;
}

const int &VVV0Tree::NVQGen3JERDn() {
  if (not NVQGen3JERDn_isLoaded) {
    if (NVQGen3JERDn_branch != 0) {
      NVQGen3JERDn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3JERDn_branch does not exist!\n");
      exit(1);
    }
    NVQGen3JERDn_isLoaded = true;
  }
  return NVQGen3JERDn_;
}

const int &VVV0Tree::NVQGen4JERDn() {
  if (not NVQGen4JERDn_isLoaded) {
    if (NVQGen4JERDn_branch != 0) {
      NVQGen4JERDn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4JERDn_branch does not exist!\n");
      exit(1);
    }
    NVQGen4JERDn_isLoaded = true;
  }
  return NVQGen4JERDn_;
}

const int &VVV0Tree::NiFJJERDn() {
  if (not NiFJJERDn_isLoaded) {
    if (NiFJJERDn_branch != 0) {
      NiFJJERDn_branch->GetEntry(index);
    } else {
      printf("branch NiFJJERDn_branch does not exist!\n");
      exit(1);
    }
    NiFJJERDn_isLoaded = true;
  }
  return NiFJJERDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0JERDn() {
  if (not iFJ0JERDn_isLoaded) {
    if (iFJ0JERDn_branch != 0) {
      iFJ0JERDn_branch->GetEntry(index);
    } else {
      printf("branch iFJ0JERDn_branch does not exist!\n");
      exit(1);
    }
    iFJ0JERDn_isLoaded = true;
  }
  return *iFJ0JERDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1JERDn() {
  if (not iFJ1JERDn_isLoaded) {
    if (iFJ1JERDn_branch != 0) {
      iFJ1JERDn_branch->GetEntry(index);
    } else {
      printf("branch iFJ1JERDn_branch does not exist!\n");
      exit(1);
    }
    iFJ1JERDn_isLoaded = true;
  }
  return *iFJ1JERDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2JERDn() {
  if (not iFJ2JERDn_isLoaded) {
    if (iFJ2JERDn_branch != 0) {
      iFJ2JERDn_branch->GetEntry(index);
    } else {
      printf("branch iFJ2JERDn_branch does not exist!\n");
      exit(1);
    }
    iFJ2JERDn_isLoaded = true;
  }
  return *iFJ2JERDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3JERDn() {
  if (not iFJ3JERDn_isLoaded) {
    if (iFJ3JERDn_branch != 0) {
      iFJ3JERDn_branch->GetEntry(index);
    } else {
      printf("branch iFJ3JERDn_branch does not exist!\n");
      exit(1);
    }
    iFJ3JERDn_isLoaded = true;
  }
  return *iFJ3JERDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4JERDn() {
  if (not iFJ4JERDn_isLoaded) {
    if (iFJ4JERDn_branch != 0) {
      iFJ4JERDn_branch->GetEntry(index);
    } else {
      printf("branch iFJ4JERDn_branch does not exist!\n");
      exit(1);
    }
    iFJ4JERDn_isLoaded = true;
  }
  return *iFJ4JERDn_;
}

const float &VVV0Tree::iVMD0JERDn() {
  if (not iVMD0JERDn_isLoaded) {
    if (iVMD0JERDn_branch != 0) {
      iVMD0JERDn_branch->GetEntry(index);
    } else {
      printf("branch iVMD0JERDn_branch does not exist!\n");
      exit(1);
    }
    iVMD0JERDn_isLoaded = true;
  }
  return iVMD0JERDn_;
}

const float &VVV0Tree::iVMD1JERDn() {
  if (not iVMD1JERDn_isLoaded) {
    if (iVMD1JERDn_branch != 0) {
      iVMD1JERDn_branch->GetEntry(index);
    } else {
      printf("branch iVMD1JERDn_branch does not exist!\n");
      exit(1);
    }
    iVMD1JERDn_isLoaded = true;
  }
  return iVMD1JERDn_;
}

const float &VVV0Tree::iVMD2JERDn() {
  if (not iVMD2JERDn_isLoaded) {
    if (iVMD2JERDn_branch != 0) {
      iVMD2JERDn_branch->GetEntry(index);
    } else {
      printf("branch iVMD2JERDn_branch does not exist!\n");
      exit(1);
    }
    iVMD2JERDn_isLoaded = true;
  }
  return iVMD2JERDn_;
}

const float &VVV0Tree::iVMD3JERDn() {
  if (not iVMD3JERDn_isLoaded) {
    if (iVMD3JERDn_branch != 0) {
      iVMD3JERDn_branch->GetEntry(index);
    } else {
      printf("branch iVMD3JERDn_branch does not exist!\n");
      exit(1);
    }
    iVMD3JERDn_isLoaded = true;
  }
  return iVMD3JERDn_;
}

const float &VVV0Tree::iVMD4JERDn() {
  if (not iVMD4JERDn_isLoaded) {
    if (iVMD4JERDn_branch != 0) {
      iVMD4JERDn_branch->GetEntry(index);
    } else {
      printf("branch iVMD4JERDn_branch does not exist!\n");
      exit(1);
    }
    iVMD4JERDn_isLoaded = true;
  }
  return iVMD4JERDn_;
}

const float &VVV0Tree::iWMD0JERDn() {
  if (not iWMD0JERDn_isLoaded) {
    if (iWMD0JERDn_branch != 0) {
      iWMD0JERDn_branch->GetEntry(index);
    } else {
      printf("branch iWMD0JERDn_branch does not exist!\n");
      exit(1);
    }
    iWMD0JERDn_isLoaded = true;
  }
  return iWMD0JERDn_;
}

const float &VVV0Tree::iWMD1JERDn() {
  if (not iWMD1JERDn_isLoaded) {
    if (iWMD1JERDn_branch != 0) {
      iWMD1JERDn_branch->GetEntry(index);
    } else {
      printf("branch iWMD1JERDn_branch does not exist!\n");
      exit(1);
    }
    iWMD1JERDn_isLoaded = true;
  }
  return iWMD1JERDn_;
}

const float &VVV0Tree::iWMD2JERDn() {
  if (not iWMD2JERDn_isLoaded) {
    if (iWMD2JERDn_branch != 0) {
      iWMD2JERDn_branch->GetEntry(index);
    } else {
      printf("branch iWMD2JERDn_branch does not exist!\n");
      exit(1);
    }
    iWMD2JERDn_isLoaded = true;
  }
  return iWMD2JERDn_;
}

const float &VVV0Tree::iWMD3JERDn() {
  if (not iWMD3JERDn_isLoaded) {
    if (iWMD3JERDn_branch != 0) {
      iWMD3JERDn_branch->GetEntry(index);
    } else {
      printf("branch iWMD3JERDn_branch does not exist!\n");
      exit(1);
    }
    iWMD3JERDn_isLoaded = true;
  }
  return iWMD3JERDn_;
}

const float &VVV0Tree::iWMD4JERDn() {
  if (not iWMD4JERDn_isLoaded) {
    if (iWMD4JERDn_branch != 0) {
      iWMD4JERDn_branch->GetEntry(index);
    } else {
      printf("branch iWMD4JERDn_branch does not exist!\n");
      exit(1);
    }
    iWMD4JERDn_isLoaded = true;
  }
  return iWMD4JERDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METJERDn() {
  if (not METJERDn_isLoaded) {
    if (METJERDn_branch != 0) {
      METJERDn_branch->GetEntry(index);
    } else {
      printf("branch METJERDn_branch does not exist!\n");
      exit(1);
    }
    METJERDn_isLoaded = true;
  }
  return *METJERDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NuJERDn() {
  if (not NuJERDn_isLoaded) {
    if (NuJERDn_branch != 0) {
      NuJERDn_branch->GetEntry(index);
    } else {
      printf("branch NuJERDn_branch does not exist!\n");
      exit(1);
    }
    NuJERDn_isLoaded = true;
  }
  return *NuJERDn_;
}

const int &VVV0Tree::NJJERDn() {
  if (not NJJERDn_isLoaded) {
    if (NJJERDn_branch != 0) {
      NJJERDn_branch->GetEntry(index);
    } else {
      printf("branch NJJERDn_branch does not exist!\n");
      exit(1);
    }
    NJJERDn_isLoaded = true;
  }
  return NJJERDn_;
}

const int &VVV0Tree::NbLooseJERDn() {
  if (not NbLooseJERDn_isLoaded) {
    if (NbLooseJERDn_branch != 0) {
      NbLooseJERDn_branch->GetEntry(index);
    } else {
      printf("branch NbLooseJERDn_branch does not exist!\n");
      exit(1);
    }
    NbLooseJERDn_isLoaded = true;
  }
  return NbLooseJERDn_;
}

const int &VVV0Tree::NbMediumJERDn() {
  if (not NbMediumJERDn_isLoaded) {
    if (NbMediumJERDn_branch != 0) {
      NbMediumJERDn_branch->GetEntry(index);
    } else {
      printf("branch NbMediumJERDn_branch does not exist!\n");
      exit(1);
    }
    NbMediumJERDn_isLoaded = true;
  }
  return NbMediumJERDn_;
}

const int &VVV0Tree::NbTightJERDn() {
  if (not NbTightJERDn_isLoaded) {
    if (NbTightJERDn_branch != 0) {
      NbTightJERDn_branch->GetEntry(index);
    } else {
      printf("branch NbTightJERDn_branch does not exist!\n");
      exit(1);
    }
    NbTightJERDn_isLoaded = true;
  }
  return NbTightJERDn_;
}

const int &VVV0Tree::NoORNbLooseJERDn() {
  if (not NoORNbLooseJERDn_isLoaded) {
    if (NoORNbLooseJERDn_branch != 0) {
      NoORNbLooseJERDn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLooseJERDn_branch does not exist!\n");
      exit(1);
    }
    NoORNbLooseJERDn_isLoaded = true;
  }
  return NoORNbLooseJERDn_;
}

const int &VVV0Tree::NoORNbMediumJERDn() {
  if (not NoORNbMediumJERDn_isLoaded) {
    if (NoORNbMediumJERDn_branch != 0) {
      NoORNbMediumJERDn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumJERDn_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumJERDn_isLoaded = true;
  }
  return NoORNbMediumJERDn_;
}

const int &VVV0Tree::NoORNbTightJERDn() {
  if (not NoORNbTightJERDn_isLoaded) {
    if (NoORNbTightJERDn_branch != 0) {
      NoORNbTightJERDn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightJERDn_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightJERDn_isLoaded = true;
  }
  return NoORNbTightJERDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0JERDn() {
  if (not J0JERDn_isLoaded) {
    if (J0JERDn_branch != 0) {
      J0JERDn_branch->GetEntry(index);
    } else {
      printf("branch J0JERDn_branch does not exist!\n");
      exit(1);
    }
    J0JERDn_isLoaded = true;
  }
  return *J0JERDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1JERDn() {
  if (not J1JERDn_isLoaded) {
    if (J1JERDn_branch != 0) {
      J1JERDn_branch->GetEntry(index);
    } else {
      printf("branch J1JERDn_branch does not exist!\n");
      exit(1);
    }
    J1JERDn_isLoaded = true;
  }
  return *J1JERDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2JERDn() {
  if (not J2JERDn_isLoaded) {
    if (J2JERDn_branch != 0) {
      J2JERDn_branch->GetEntry(index);
    } else {
      printf("branch J2JERDn_branch does not exist!\n");
      exit(1);
    }
    J2JERDn_isLoaded = true;
  }
  return *J2JERDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3JERDn() {
  if (not J3JERDn_isLoaded) {
    if (J3JERDn_branch != 0) {
      J3JERDn_branch->GetEntry(index);
    } else {
      printf("branch J3JERDn_branch does not exist!\n");
      exit(1);
    }
    J3JERDn_isLoaded = true;
  }
  return *J3JERDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4JERDn() {
  if (not J4JERDn_isLoaded) {
    if (J4JERDn_branch != 0) {
      J4JERDn_branch->GetEntry(index);
    } else {
      printf("branch J4JERDn_branch does not exist!\n");
      exit(1);
    }
    J4JERDn_isLoaded = true;
  }
  return *J4JERDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5JERDn() {
  if (not J5JERDn_isLoaded) {
    if (J5JERDn_branch != 0) {
      J5JERDn_branch->GetEntry(index);
    } else {
      printf("branch J5JERDn_branch does not exist!\n");
      exit(1);
    }
    J5JERDn_isLoaded = true;
  }
  return *J5JERDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6JERDn() {
  if (not J6JERDn_isLoaded) {
    if (J6JERDn_branch != 0) {
      J6JERDn_branch->GetEntry(index);
    } else {
      printf("branch J6JERDn_branch does not exist!\n");
      exit(1);
    }
    J6JERDn_isLoaded = true;
  }
  return *J6JERDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7JERDn() {
  if (not J7JERDn_isLoaded) {
    if (J7JERDn_branch != 0) {
      J7JERDn_branch->GetEntry(index);
    } else {
      printf("branch J7JERDn_branch does not exist!\n");
      exit(1);
    }
    J7JERDn_isLoaded = true;
  }
  return *J7JERDn_;
}

const vector<int> &VVV0Tree::NQJGenJERDn() {
  if (not NQJGenJERDn_isLoaded) {
    if (NQJGenJERDn_branch != 0) {
      NQJGenJERDn_branch->GetEntry(index);
    } else {
      printf("branch NQJGenJERDn_branch does not exist!\n");
      exit(1);
    }
    NQJGenJERDn_isLoaded = true;
  }
  return *NQJGenJERDn_;
}

const vector<int> &VVV0Tree::NBJGenJERDn() {
  if (not NBJGenJERDn_isLoaded) {
    if (NBJGenJERDn_branch != 0) {
      NBJGenJERDn_branch->GetEntry(index);
    } else {
      printf("branch NBJGenJERDn_branch does not exist!\n");
      exit(1);
    }
    NBJGenJERDn_isLoaded = true;
  }
  return *NBJGenJERDn_;
}

const vector<int> &VVV0Tree::NLJGenJERDn() {
  if (not NLJGenJERDn_isLoaded) {
    if (NLJGenJERDn_branch != 0) {
      NLJGenJERDn_branch->GetEntry(index);
    } else {
      printf("branch NLJGenJERDn_branch does not exist!\n");
      exit(1);
    }
    NLJGenJERDn_isLoaded = true;
  }
  return *NLJGenJERDn_;
}

const float &VVV0Tree::MVVXJERDn() {
  if (not MVVXJERDn_isLoaded) {
    if (MVVXJERDn_branch != 0) {
      MVVXJERDn_branch->GetEntry(index);
    } else {
      printf("branch MVVXJERDn_branch does not exist!\n");
      exit(1);
    }
    MVVXJERDn_isLoaded = true;
  }
  return MVVXJERDn_;
}

const float &VVV0Tree::PtVVXJERDn() {
  if (not PtVVXJERDn_isLoaded) {
    if (PtVVXJERDn_branch != 0) {
      PtVVXJERDn_branch->GetEntry(index);
    } else {
      printf("branch PtVVXJERDn_branch does not exist!\n");
      exit(1);
    }
    PtVVXJERDn_isLoaded = true;
  }
  return PtVVXJERDn_;
}

const float &VVV0Tree::HTJERDn() {
  if (not HTJERDn_isLoaded) {
    if (HTJERDn_branch != 0) {
      HTJERDn_branch->GetEntry(index);
    } else {
      printf("branch HTJERDn_branch does not exist!\n");
      exit(1);
    }
    HTJERDn_isLoaded = true;
  }
  return HTJERDn_;
}

const float &VVV0Tree::HTJJERDn() {
  if (not HTJJERDn_isLoaded) {
    if (HTJJERDn_branch != 0) {
      HTJJERDn_branch->GetEntry(index);
    } else {
      printf("branch HTJJERDn_branch does not exist!\n");
      exit(1);
    }
    HTJJERDn_isLoaded = true;
  }
  return HTJJERDn_;
}

const float &VVV0Tree::HTFJJERDn() {
  if (not HTFJJERDn_isLoaded) {
    if (HTFJJERDn_branch != 0) {
      HTFJJERDn_branch->GetEntry(index);
    } else {
      printf("branch HTFJJERDn_branch does not exist!\n");
      exit(1);
    }
    HTFJJERDn_isLoaded = true;
  }
  return HTFJJERDn_;
}

const float &VVV0Tree::SumPtFJJERDn() {
  if (not SumPtFJJERDn_isLoaded) {
    if (SumPtFJJERDn_branch != 0) {
      SumPtFJJERDn_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJJERDn_branch does not exist!\n");
      exit(1);
    }
    SumPtFJJERDn_isLoaded = true;
  }
  return SumPtFJJERDn_;
}

const float &VVV0Tree::SumPtJJERDn() {
  if (not SumPtJJERDn_isLoaded) {
    if (SumPtJJERDn_branch != 0) {
      SumPtJJERDn_branch->GetEntry(index);
    } else {
      printf("branch SumPtJJERDn_branch does not exist!\n");
      exit(1);
    }
    SumPtJJERDn_isLoaded = true;
  }
  return SumPtJJERDn_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsJMSUp() {
  if (not JsJMSUp_isLoaded) {
    if (JsJMSUp_branch != 0) {
      JsJMSUp_branch->GetEntry(index);
    } else {
      printf("branch JsJMSUp_branch does not exist!\n");
      exit(1);
    }
    JsJMSUp_isLoaded = true;
  }
  return *JsJMSUp_;
}

const int &VVV0Tree::NFJJMSUp() {
  if (not NFJJMSUp_isLoaded) {
    if (NFJJMSUp_branch != 0) {
      NFJJMSUp_branch->GetEntry(index);
    } else {
      printf("branch NFJJMSUp_branch does not exist!\n");
      exit(1);
    }
    NFJJMSUp_isLoaded = true;
  }
  return NFJJMSUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0JMSUp() {
  if (not FJ0JMSUp_isLoaded) {
    if (FJ0JMSUp_branch != 0) {
      FJ0JMSUp_branch->GetEntry(index);
    } else {
      printf("branch FJ0JMSUp_branch does not exist!\n");
      exit(1);
    }
    FJ0JMSUp_isLoaded = true;
  }
  return *FJ0JMSUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1JMSUp() {
  if (not FJ1JMSUp_isLoaded) {
    if (FJ1JMSUp_branch != 0) {
      FJ1JMSUp_branch->GetEntry(index);
    } else {
      printf("branch FJ1JMSUp_branch does not exist!\n");
      exit(1);
    }
    FJ1JMSUp_isLoaded = true;
  }
  return *FJ1JMSUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2JMSUp() {
  if (not FJ2JMSUp_isLoaded) {
    if (FJ2JMSUp_branch != 0) {
      FJ2JMSUp_branch->GetEntry(index);
    } else {
      printf("branch FJ2JMSUp_branch does not exist!\n");
      exit(1);
    }
    FJ2JMSUp_isLoaded = true;
  }
  return *FJ2JMSUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3JMSUp() {
  if (not FJ3JMSUp_isLoaded) {
    if (FJ3JMSUp_branch != 0) {
      FJ3JMSUp_branch->GetEntry(index);
    } else {
      printf("branch FJ3JMSUp_branch does not exist!\n");
      exit(1);
    }
    FJ3JMSUp_isLoaded = true;
  }
  return *FJ3JMSUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4JMSUp() {
  if (not FJ4JMSUp_isLoaded) {
    if (FJ4JMSUp_branch != 0) {
      FJ4JMSUp_branch->GetEntry(index);
    } else {
      printf("branch FJ4JMSUp_branch does not exist!\n");
      exit(1);
    }
    FJ4JMSUp_isLoaded = true;
  }
  return *FJ4JMSUp_;
}

const float &VVV0Tree::VMD0JMSUp() {
  if (not VMD0JMSUp_isLoaded) {
    if (VMD0JMSUp_branch != 0) {
      VMD0JMSUp_branch->GetEntry(index);
    } else {
      printf("branch VMD0JMSUp_branch does not exist!\n");
      exit(1);
    }
    VMD0JMSUp_isLoaded = true;
  }
  return VMD0JMSUp_;
}

const float &VVV0Tree::VMD1JMSUp() {
  if (not VMD1JMSUp_isLoaded) {
    if (VMD1JMSUp_branch != 0) {
      VMD1JMSUp_branch->GetEntry(index);
    } else {
      printf("branch VMD1JMSUp_branch does not exist!\n");
      exit(1);
    }
    VMD1JMSUp_isLoaded = true;
  }
  return VMD1JMSUp_;
}

const float &VVV0Tree::VMD2JMSUp() {
  if (not VMD2JMSUp_isLoaded) {
    if (VMD2JMSUp_branch != 0) {
      VMD2JMSUp_branch->GetEntry(index);
    } else {
      printf("branch VMD2JMSUp_branch does not exist!\n");
      exit(1);
    }
    VMD2JMSUp_isLoaded = true;
  }
  return VMD2JMSUp_;
}

const float &VVV0Tree::VMD3JMSUp() {
  if (not VMD3JMSUp_isLoaded) {
    if (VMD3JMSUp_branch != 0) {
      VMD3JMSUp_branch->GetEntry(index);
    } else {
      printf("branch VMD3JMSUp_branch does not exist!\n");
      exit(1);
    }
    VMD3JMSUp_isLoaded = true;
  }
  return VMD3JMSUp_;
}

const float &VVV0Tree::VMD4JMSUp() {
  if (not VMD4JMSUp_isLoaded) {
    if (VMD4JMSUp_branch != 0) {
      VMD4JMSUp_branch->GetEntry(index);
    } else {
      printf("branch VMD4JMSUp_branch does not exist!\n");
      exit(1);
    }
    VMD4JMSUp_isLoaded = true;
  }
  return VMD4JMSUp_;
}

const float &VVV0Tree::WMD0JMSUp() {
  if (not WMD0JMSUp_isLoaded) {
    if (WMD0JMSUp_branch != 0) {
      WMD0JMSUp_branch->GetEntry(index);
    } else {
      printf("branch WMD0JMSUp_branch does not exist!\n");
      exit(1);
    }
    WMD0JMSUp_isLoaded = true;
  }
  return WMD0JMSUp_;
}

const float &VVV0Tree::WMD1JMSUp() {
  if (not WMD1JMSUp_isLoaded) {
    if (WMD1JMSUp_branch != 0) {
      WMD1JMSUp_branch->GetEntry(index);
    } else {
      printf("branch WMD1JMSUp_branch does not exist!\n");
      exit(1);
    }
    WMD1JMSUp_isLoaded = true;
  }
  return WMD1JMSUp_;
}

const float &VVV0Tree::WMD2JMSUp() {
  if (not WMD2JMSUp_isLoaded) {
    if (WMD2JMSUp_branch != 0) {
      WMD2JMSUp_branch->GetEntry(index);
    } else {
      printf("branch WMD2JMSUp_branch does not exist!\n");
      exit(1);
    }
    WMD2JMSUp_isLoaded = true;
  }
  return WMD2JMSUp_;
}

const float &VVV0Tree::WMD3JMSUp() {
  if (not WMD3JMSUp_isLoaded) {
    if (WMD3JMSUp_branch != 0) {
      WMD3JMSUp_branch->GetEntry(index);
    } else {
      printf("branch WMD3JMSUp_branch does not exist!\n");
      exit(1);
    }
    WMD3JMSUp_isLoaded = true;
  }
  return WMD3JMSUp_;
}

const float &VVV0Tree::WMD4JMSUp() {
  if (not WMD4JMSUp_isLoaded) {
    if (WMD4JMSUp_branch != 0) {
      WMD4JMSUp_branch->GetEntry(index);
    } else {
      printf("branch WMD4JMSUp_branch does not exist!\n");
      exit(1);
    }
    WMD4JMSUp_isLoaded = true;
  }
  return WMD4JMSUp_;
}

const int &VVV0Tree::NQGen0JMSUp() {
  if (not NQGen0JMSUp_isLoaded) {
    if (NQGen0JMSUp_branch != 0) {
      NQGen0JMSUp_branch->GetEntry(index);
    } else {
      printf("branch NQGen0JMSUp_branch does not exist!\n");
      exit(1);
    }
    NQGen0JMSUp_isLoaded = true;
  }
  return NQGen0JMSUp_;
}

const int &VVV0Tree::NQGen1JMSUp() {
  if (not NQGen1JMSUp_isLoaded) {
    if (NQGen1JMSUp_branch != 0) {
      NQGen1JMSUp_branch->GetEntry(index);
    } else {
      printf("branch NQGen1JMSUp_branch does not exist!\n");
      exit(1);
    }
    NQGen1JMSUp_isLoaded = true;
  }
  return NQGen1JMSUp_;
}

const int &VVV0Tree::NQGen2JMSUp() {
  if (not NQGen2JMSUp_isLoaded) {
    if (NQGen2JMSUp_branch != 0) {
      NQGen2JMSUp_branch->GetEntry(index);
    } else {
      printf("branch NQGen2JMSUp_branch does not exist!\n");
      exit(1);
    }
    NQGen2JMSUp_isLoaded = true;
  }
  return NQGen2JMSUp_;
}

const int &VVV0Tree::NQGen3JMSUp() {
  if (not NQGen3JMSUp_isLoaded) {
    if (NQGen3JMSUp_branch != 0) {
      NQGen3JMSUp_branch->GetEntry(index);
    } else {
      printf("branch NQGen3JMSUp_branch does not exist!\n");
      exit(1);
    }
    NQGen3JMSUp_isLoaded = true;
  }
  return NQGen3JMSUp_;
}

const int &VVV0Tree::NQGen4JMSUp() {
  if (not NQGen4JMSUp_isLoaded) {
    if (NQGen4JMSUp_branch != 0) {
      NQGen4JMSUp_branch->GetEntry(index);
    } else {
      printf("branch NQGen4JMSUp_branch does not exist!\n");
      exit(1);
    }
    NQGen4JMSUp_isLoaded = true;
  }
  return NQGen4JMSUp_;
}

const int &VVV0Tree::NBGen0JMSUp() {
  if (not NBGen0JMSUp_isLoaded) {
    if (NBGen0JMSUp_branch != 0) {
      NBGen0JMSUp_branch->GetEntry(index);
    } else {
      printf("branch NBGen0JMSUp_branch does not exist!\n");
      exit(1);
    }
    NBGen0JMSUp_isLoaded = true;
  }
  return NBGen0JMSUp_;
}

const int &VVV0Tree::NBGen1JMSUp() {
  if (not NBGen1JMSUp_isLoaded) {
    if (NBGen1JMSUp_branch != 0) {
      NBGen1JMSUp_branch->GetEntry(index);
    } else {
      printf("branch NBGen1JMSUp_branch does not exist!\n");
      exit(1);
    }
    NBGen1JMSUp_isLoaded = true;
  }
  return NBGen1JMSUp_;
}

const int &VVV0Tree::NBGen2JMSUp() {
  if (not NBGen2JMSUp_isLoaded) {
    if (NBGen2JMSUp_branch != 0) {
      NBGen2JMSUp_branch->GetEntry(index);
    } else {
      printf("branch NBGen2JMSUp_branch does not exist!\n");
      exit(1);
    }
    NBGen2JMSUp_isLoaded = true;
  }
  return NBGen2JMSUp_;
}

const int &VVV0Tree::NBGen3JMSUp() {
  if (not NBGen3JMSUp_isLoaded) {
    if (NBGen3JMSUp_branch != 0) {
      NBGen3JMSUp_branch->GetEntry(index);
    } else {
      printf("branch NBGen3JMSUp_branch does not exist!\n");
      exit(1);
    }
    NBGen3JMSUp_isLoaded = true;
  }
  return NBGen3JMSUp_;
}

const int &VVV0Tree::NBGen4JMSUp() {
  if (not NBGen4JMSUp_isLoaded) {
    if (NBGen4JMSUp_branch != 0) {
      NBGen4JMSUp_branch->GetEntry(index);
    } else {
      printf("branch NBGen4JMSUp_branch does not exist!\n");
      exit(1);
    }
    NBGen4JMSUp_isLoaded = true;
  }
  return NBGen4JMSUp_;
}

const int &VVV0Tree::NLGen0JMSUp() {
  if (not NLGen0JMSUp_isLoaded) {
    if (NLGen0JMSUp_branch != 0) {
      NLGen0JMSUp_branch->GetEntry(index);
    } else {
      printf("branch NLGen0JMSUp_branch does not exist!\n");
      exit(1);
    }
    NLGen0JMSUp_isLoaded = true;
  }
  return NLGen0JMSUp_;
}

const int &VVV0Tree::NLGen1JMSUp() {
  if (not NLGen1JMSUp_isLoaded) {
    if (NLGen1JMSUp_branch != 0) {
      NLGen1JMSUp_branch->GetEntry(index);
    } else {
      printf("branch NLGen1JMSUp_branch does not exist!\n");
      exit(1);
    }
    NLGen1JMSUp_isLoaded = true;
  }
  return NLGen1JMSUp_;
}

const int &VVV0Tree::NLGen2JMSUp() {
  if (not NLGen2JMSUp_isLoaded) {
    if (NLGen2JMSUp_branch != 0) {
      NLGen2JMSUp_branch->GetEntry(index);
    } else {
      printf("branch NLGen2JMSUp_branch does not exist!\n");
      exit(1);
    }
    NLGen2JMSUp_isLoaded = true;
  }
  return NLGen2JMSUp_;
}

const int &VVV0Tree::NLGen3JMSUp() {
  if (not NLGen3JMSUp_isLoaded) {
    if (NLGen3JMSUp_branch != 0) {
      NLGen3JMSUp_branch->GetEntry(index);
    } else {
      printf("branch NLGen3JMSUp_branch does not exist!\n");
      exit(1);
    }
    NLGen3JMSUp_isLoaded = true;
  }
  return NLGen3JMSUp_;
}

const int &VVV0Tree::NLGen4JMSUp() {
  if (not NLGen4JMSUp_isLoaded) {
    if (NLGen4JMSUp_branch != 0) {
      NLGen4JMSUp_branch->GetEntry(index);
    } else {
      printf("branch NLGen4JMSUp_branch does not exist!\n");
      exit(1);
    }
    NLGen4JMSUp_isLoaded = true;
  }
  return NLGen4JMSUp_;
}

const int &VVV0Tree::NVQGen0JMSUp() {
  if (not NVQGen0JMSUp_isLoaded) {
    if (NVQGen0JMSUp_branch != 0) {
      NVQGen0JMSUp_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0JMSUp_branch does not exist!\n");
      exit(1);
    }
    NVQGen0JMSUp_isLoaded = true;
  }
  return NVQGen0JMSUp_;
}

const int &VVV0Tree::NVQGen1JMSUp() {
  if (not NVQGen1JMSUp_isLoaded) {
    if (NVQGen1JMSUp_branch != 0) {
      NVQGen1JMSUp_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1JMSUp_branch does not exist!\n");
      exit(1);
    }
    NVQGen1JMSUp_isLoaded = true;
  }
  return NVQGen1JMSUp_;
}

const int &VVV0Tree::NVQGen2JMSUp() {
  if (not NVQGen2JMSUp_isLoaded) {
    if (NVQGen2JMSUp_branch != 0) {
      NVQGen2JMSUp_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2JMSUp_branch does not exist!\n");
      exit(1);
    }
    NVQGen2JMSUp_isLoaded = true;
  }
  return NVQGen2JMSUp_;
}

const int &VVV0Tree::NVQGen3JMSUp() {
  if (not NVQGen3JMSUp_isLoaded) {
    if (NVQGen3JMSUp_branch != 0) {
      NVQGen3JMSUp_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3JMSUp_branch does not exist!\n");
      exit(1);
    }
    NVQGen3JMSUp_isLoaded = true;
  }
  return NVQGen3JMSUp_;
}

const int &VVV0Tree::NVQGen4JMSUp() {
  if (not NVQGen4JMSUp_isLoaded) {
    if (NVQGen4JMSUp_branch != 0) {
      NVQGen4JMSUp_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4JMSUp_branch does not exist!\n");
      exit(1);
    }
    NVQGen4JMSUp_isLoaded = true;
  }
  return NVQGen4JMSUp_;
}

const int &VVV0Tree::NiFJJMSUp() {
  if (not NiFJJMSUp_isLoaded) {
    if (NiFJJMSUp_branch != 0) {
      NiFJJMSUp_branch->GetEntry(index);
    } else {
      printf("branch NiFJJMSUp_branch does not exist!\n");
      exit(1);
    }
    NiFJJMSUp_isLoaded = true;
  }
  return NiFJJMSUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0JMSUp() {
  if (not iFJ0JMSUp_isLoaded) {
    if (iFJ0JMSUp_branch != 0) {
      iFJ0JMSUp_branch->GetEntry(index);
    } else {
      printf("branch iFJ0JMSUp_branch does not exist!\n");
      exit(1);
    }
    iFJ0JMSUp_isLoaded = true;
  }
  return *iFJ0JMSUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1JMSUp() {
  if (not iFJ1JMSUp_isLoaded) {
    if (iFJ1JMSUp_branch != 0) {
      iFJ1JMSUp_branch->GetEntry(index);
    } else {
      printf("branch iFJ1JMSUp_branch does not exist!\n");
      exit(1);
    }
    iFJ1JMSUp_isLoaded = true;
  }
  return *iFJ1JMSUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2JMSUp() {
  if (not iFJ2JMSUp_isLoaded) {
    if (iFJ2JMSUp_branch != 0) {
      iFJ2JMSUp_branch->GetEntry(index);
    } else {
      printf("branch iFJ2JMSUp_branch does not exist!\n");
      exit(1);
    }
    iFJ2JMSUp_isLoaded = true;
  }
  return *iFJ2JMSUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3JMSUp() {
  if (not iFJ3JMSUp_isLoaded) {
    if (iFJ3JMSUp_branch != 0) {
      iFJ3JMSUp_branch->GetEntry(index);
    } else {
      printf("branch iFJ3JMSUp_branch does not exist!\n");
      exit(1);
    }
    iFJ3JMSUp_isLoaded = true;
  }
  return *iFJ3JMSUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4JMSUp() {
  if (not iFJ4JMSUp_isLoaded) {
    if (iFJ4JMSUp_branch != 0) {
      iFJ4JMSUp_branch->GetEntry(index);
    } else {
      printf("branch iFJ4JMSUp_branch does not exist!\n");
      exit(1);
    }
    iFJ4JMSUp_isLoaded = true;
  }
  return *iFJ4JMSUp_;
}

const float &VVV0Tree::iVMD0JMSUp() {
  if (not iVMD0JMSUp_isLoaded) {
    if (iVMD0JMSUp_branch != 0) {
      iVMD0JMSUp_branch->GetEntry(index);
    } else {
      printf("branch iVMD0JMSUp_branch does not exist!\n");
      exit(1);
    }
    iVMD0JMSUp_isLoaded = true;
  }
  return iVMD0JMSUp_;
}

const float &VVV0Tree::iVMD1JMSUp() {
  if (not iVMD1JMSUp_isLoaded) {
    if (iVMD1JMSUp_branch != 0) {
      iVMD1JMSUp_branch->GetEntry(index);
    } else {
      printf("branch iVMD1JMSUp_branch does not exist!\n");
      exit(1);
    }
    iVMD1JMSUp_isLoaded = true;
  }
  return iVMD1JMSUp_;
}

const float &VVV0Tree::iVMD2JMSUp() {
  if (not iVMD2JMSUp_isLoaded) {
    if (iVMD2JMSUp_branch != 0) {
      iVMD2JMSUp_branch->GetEntry(index);
    } else {
      printf("branch iVMD2JMSUp_branch does not exist!\n");
      exit(1);
    }
    iVMD2JMSUp_isLoaded = true;
  }
  return iVMD2JMSUp_;
}

const float &VVV0Tree::iVMD3JMSUp() {
  if (not iVMD3JMSUp_isLoaded) {
    if (iVMD3JMSUp_branch != 0) {
      iVMD3JMSUp_branch->GetEntry(index);
    } else {
      printf("branch iVMD3JMSUp_branch does not exist!\n");
      exit(1);
    }
    iVMD3JMSUp_isLoaded = true;
  }
  return iVMD3JMSUp_;
}

const float &VVV0Tree::iVMD4JMSUp() {
  if (not iVMD4JMSUp_isLoaded) {
    if (iVMD4JMSUp_branch != 0) {
      iVMD4JMSUp_branch->GetEntry(index);
    } else {
      printf("branch iVMD4JMSUp_branch does not exist!\n");
      exit(1);
    }
    iVMD4JMSUp_isLoaded = true;
  }
  return iVMD4JMSUp_;
}

const float &VVV0Tree::iWMD0JMSUp() {
  if (not iWMD0JMSUp_isLoaded) {
    if (iWMD0JMSUp_branch != 0) {
      iWMD0JMSUp_branch->GetEntry(index);
    } else {
      printf("branch iWMD0JMSUp_branch does not exist!\n");
      exit(1);
    }
    iWMD0JMSUp_isLoaded = true;
  }
  return iWMD0JMSUp_;
}

const float &VVV0Tree::iWMD1JMSUp() {
  if (not iWMD1JMSUp_isLoaded) {
    if (iWMD1JMSUp_branch != 0) {
      iWMD1JMSUp_branch->GetEntry(index);
    } else {
      printf("branch iWMD1JMSUp_branch does not exist!\n");
      exit(1);
    }
    iWMD1JMSUp_isLoaded = true;
  }
  return iWMD1JMSUp_;
}

const float &VVV0Tree::iWMD2JMSUp() {
  if (not iWMD2JMSUp_isLoaded) {
    if (iWMD2JMSUp_branch != 0) {
      iWMD2JMSUp_branch->GetEntry(index);
    } else {
      printf("branch iWMD2JMSUp_branch does not exist!\n");
      exit(1);
    }
    iWMD2JMSUp_isLoaded = true;
  }
  return iWMD2JMSUp_;
}

const float &VVV0Tree::iWMD3JMSUp() {
  if (not iWMD3JMSUp_isLoaded) {
    if (iWMD3JMSUp_branch != 0) {
      iWMD3JMSUp_branch->GetEntry(index);
    } else {
      printf("branch iWMD3JMSUp_branch does not exist!\n");
      exit(1);
    }
    iWMD3JMSUp_isLoaded = true;
  }
  return iWMD3JMSUp_;
}

const float &VVV0Tree::iWMD4JMSUp() {
  if (not iWMD4JMSUp_isLoaded) {
    if (iWMD4JMSUp_branch != 0) {
      iWMD4JMSUp_branch->GetEntry(index);
    } else {
      printf("branch iWMD4JMSUp_branch does not exist!\n");
      exit(1);
    }
    iWMD4JMSUp_isLoaded = true;
  }
  return iWMD4JMSUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METJMSUp() {
  if (not METJMSUp_isLoaded) {
    if (METJMSUp_branch != 0) {
      METJMSUp_branch->GetEntry(index);
    } else {
      printf("branch METJMSUp_branch does not exist!\n");
      exit(1);
    }
    METJMSUp_isLoaded = true;
  }
  return *METJMSUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NuJMSUp() {
  if (not NuJMSUp_isLoaded) {
    if (NuJMSUp_branch != 0) {
      NuJMSUp_branch->GetEntry(index);
    } else {
      printf("branch NuJMSUp_branch does not exist!\n");
      exit(1);
    }
    NuJMSUp_isLoaded = true;
  }
  return *NuJMSUp_;
}

const int &VVV0Tree::NJJMSUp() {
  if (not NJJMSUp_isLoaded) {
    if (NJJMSUp_branch != 0) {
      NJJMSUp_branch->GetEntry(index);
    } else {
      printf("branch NJJMSUp_branch does not exist!\n");
      exit(1);
    }
    NJJMSUp_isLoaded = true;
  }
  return NJJMSUp_;
}

const int &VVV0Tree::NbLooseJMSUp() {
  if (not NbLooseJMSUp_isLoaded) {
    if (NbLooseJMSUp_branch != 0) {
      NbLooseJMSUp_branch->GetEntry(index);
    } else {
      printf("branch NbLooseJMSUp_branch does not exist!\n");
      exit(1);
    }
    NbLooseJMSUp_isLoaded = true;
  }
  return NbLooseJMSUp_;
}

const int &VVV0Tree::NbMediumJMSUp() {
  if (not NbMediumJMSUp_isLoaded) {
    if (NbMediumJMSUp_branch != 0) {
      NbMediumJMSUp_branch->GetEntry(index);
    } else {
      printf("branch NbMediumJMSUp_branch does not exist!\n");
      exit(1);
    }
    NbMediumJMSUp_isLoaded = true;
  }
  return NbMediumJMSUp_;
}

const int &VVV0Tree::NbTightJMSUp() {
  if (not NbTightJMSUp_isLoaded) {
    if (NbTightJMSUp_branch != 0) {
      NbTightJMSUp_branch->GetEntry(index);
    } else {
      printf("branch NbTightJMSUp_branch does not exist!\n");
      exit(1);
    }
    NbTightJMSUp_isLoaded = true;
  }
  return NbTightJMSUp_;
}

const int &VVV0Tree::NoORNbLooseJMSUp() {
  if (not NoORNbLooseJMSUp_isLoaded) {
    if (NoORNbLooseJMSUp_branch != 0) {
      NoORNbLooseJMSUp_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLooseJMSUp_branch does not exist!\n");
      exit(1);
    }
    NoORNbLooseJMSUp_isLoaded = true;
  }
  return NoORNbLooseJMSUp_;
}

const int &VVV0Tree::NoORNbMediumJMSUp() {
  if (not NoORNbMediumJMSUp_isLoaded) {
    if (NoORNbMediumJMSUp_branch != 0) {
      NoORNbMediumJMSUp_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumJMSUp_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumJMSUp_isLoaded = true;
  }
  return NoORNbMediumJMSUp_;
}

const int &VVV0Tree::NoORNbTightJMSUp() {
  if (not NoORNbTightJMSUp_isLoaded) {
    if (NoORNbTightJMSUp_branch != 0) {
      NoORNbTightJMSUp_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightJMSUp_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightJMSUp_isLoaded = true;
  }
  return NoORNbTightJMSUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0JMSUp() {
  if (not J0JMSUp_isLoaded) {
    if (J0JMSUp_branch != 0) {
      J0JMSUp_branch->GetEntry(index);
    } else {
      printf("branch J0JMSUp_branch does not exist!\n");
      exit(1);
    }
    J0JMSUp_isLoaded = true;
  }
  return *J0JMSUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1JMSUp() {
  if (not J1JMSUp_isLoaded) {
    if (J1JMSUp_branch != 0) {
      J1JMSUp_branch->GetEntry(index);
    } else {
      printf("branch J1JMSUp_branch does not exist!\n");
      exit(1);
    }
    J1JMSUp_isLoaded = true;
  }
  return *J1JMSUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2JMSUp() {
  if (not J2JMSUp_isLoaded) {
    if (J2JMSUp_branch != 0) {
      J2JMSUp_branch->GetEntry(index);
    } else {
      printf("branch J2JMSUp_branch does not exist!\n");
      exit(1);
    }
    J2JMSUp_isLoaded = true;
  }
  return *J2JMSUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3JMSUp() {
  if (not J3JMSUp_isLoaded) {
    if (J3JMSUp_branch != 0) {
      J3JMSUp_branch->GetEntry(index);
    } else {
      printf("branch J3JMSUp_branch does not exist!\n");
      exit(1);
    }
    J3JMSUp_isLoaded = true;
  }
  return *J3JMSUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4JMSUp() {
  if (not J4JMSUp_isLoaded) {
    if (J4JMSUp_branch != 0) {
      J4JMSUp_branch->GetEntry(index);
    } else {
      printf("branch J4JMSUp_branch does not exist!\n");
      exit(1);
    }
    J4JMSUp_isLoaded = true;
  }
  return *J4JMSUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5JMSUp() {
  if (not J5JMSUp_isLoaded) {
    if (J5JMSUp_branch != 0) {
      J5JMSUp_branch->GetEntry(index);
    } else {
      printf("branch J5JMSUp_branch does not exist!\n");
      exit(1);
    }
    J5JMSUp_isLoaded = true;
  }
  return *J5JMSUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6JMSUp() {
  if (not J6JMSUp_isLoaded) {
    if (J6JMSUp_branch != 0) {
      J6JMSUp_branch->GetEntry(index);
    } else {
      printf("branch J6JMSUp_branch does not exist!\n");
      exit(1);
    }
    J6JMSUp_isLoaded = true;
  }
  return *J6JMSUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7JMSUp() {
  if (not J7JMSUp_isLoaded) {
    if (J7JMSUp_branch != 0) {
      J7JMSUp_branch->GetEntry(index);
    } else {
      printf("branch J7JMSUp_branch does not exist!\n");
      exit(1);
    }
    J7JMSUp_isLoaded = true;
  }
  return *J7JMSUp_;
}

const vector<int> &VVV0Tree::NQJGenJMSUp() {
  if (not NQJGenJMSUp_isLoaded) {
    if (NQJGenJMSUp_branch != 0) {
      NQJGenJMSUp_branch->GetEntry(index);
    } else {
      printf("branch NQJGenJMSUp_branch does not exist!\n");
      exit(1);
    }
    NQJGenJMSUp_isLoaded = true;
  }
  return *NQJGenJMSUp_;
}

const vector<int> &VVV0Tree::NBJGenJMSUp() {
  if (not NBJGenJMSUp_isLoaded) {
    if (NBJGenJMSUp_branch != 0) {
      NBJGenJMSUp_branch->GetEntry(index);
    } else {
      printf("branch NBJGenJMSUp_branch does not exist!\n");
      exit(1);
    }
    NBJGenJMSUp_isLoaded = true;
  }
  return *NBJGenJMSUp_;
}

const vector<int> &VVV0Tree::NLJGenJMSUp() {
  if (not NLJGenJMSUp_isLoaded) {
    if (NLJGenJMSUp_branch != 0) {
      NLJGenJMSUp_branch->GetEntry(index);
    } else {
      printf("branch NLJGenJMSUp_branch does not exist!\n");
      exit(1);
    }
    NLJGenJMSUp_isLoaded = true;
  }
  return *NLJGenJMSUp_;
}

const float &VVV0Tree::MVVXJMSUp() {
  if (not MVVXJMSUp_isLoaded) {
    if (MVVXJMSUp_branch != 0) {
      MVVXJMSUp_branch->GetEntry(index);
    } else {
      printf("branch MVVXJMSUp_branch does not exist!\n");
      exit(1);
    }
    MVVXJMSUp_isLoaded = true;
  }
  return MVVXJMSUp_;
}

const float &VVV0Tree::PtVVXJMSUp() {
  if (not PtVVXJMSUp_isLoaded) {
    if (PtVVXJMSUp_branch != 0) {
      PtVVXJMSUp_branch->GetEntry(index);
    } else {
      printf("branch PtVVXJMSUp_branch does not exist!\n");
      exit(1);
    }
    PtVVXJMSUp_isLoaded = true;
  }
  return PtVVXJMSUp_;
}

const float &VVV0Tree::HTJMSUp() {
  if (not HTJMSUp_isLoaded) {
    if (HTJMSUp_branch != 0) {
      HTJMSUp_branch->GetEntry(index);
    } else {
      printf("branch HTJMSUp_branch does not exist!\n");
      exit(1);
    }
    HTJMSUp_isLoaded = true;
  }
  return HTJMSUp_;
}

const float &VVV0Tree::HTJJMSUp() {
  if (not HTJJMSUp_isLoaded) {
    if (HTJJMSUp_branch != 0) {
      HTJJMSUp_branch->GetEntry(index);
    } else {
      printf("branch HTJJMSUp_branch does not exist!\n");
      exit(1);
    }
    HTJJMSUp_isLoaded = true;
  }
  return HTJJMSUp_;
}

const float &VVV0Tree::HTFJJMSUp() {
  if (not HTFJJMSUp_isLoaded) {
    if (HTFJJMSUp_branch != 0) {
      HTFJJMSUp_branch->GetEntry(index);
    } else {
      printf("branch HTFJJMSUp_branch does not exist!\n");
      exit(1);
    }
    HTFJJMSUp_isLoaded = true;
  }
  return HTFJJMSUp_;
}

const float &VVV0Tree::SumPtFJJMSUp() {
  if (not SumPtFJJMSUp_isLoaded) {
    if (SumPtFJJMSUp_branch != 0) {
      SumPtFJJMSUp_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJJMSUp_branch does not exist!\n");
      exit(1);
    }
    SumPtFJJMSUp_isLoaded = true;
  }
  return SumPtFJJMSUp_;
}

const float &VVV0Tree::SumPtJJMSUp() {
  if (not SumPtJJMSUp_isLoaded) {
    if (SumPtJJMSUp_branch != 0) {
      SumPtJJMSUp_branch->GetEntry(index);
    } else {
      printf("branch SumPtJJMSUp_branch does not exist!\n");
      exit(1);
    }
    SumPtJJMSUp_isLoaded = true;
  }
  return SumPtJJMSUp_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsJMSDn() {
  if (not JsJMSDn_isLoaded) {
    if (JsJMSDn_branch != 0) {
      JsJMSDn_branch->GetEntry(index);
    } else {
      printf("branch JsJMSDn_branch does not exist!\n");
      exit(1);
    }
    JsJMSDn_isLoaded = true;
  }
  return *JsJMSDn_;
}

const int &VVV0Tree::NFJJMSDn() {
  if (not NFJJMSDn_isLoaded) {
    if (NFJJMSDn_branch != 0) {
      NFJJMSDn_branch->GetEntry(index);
    } else {
      printf("branch NFJJMSDn_branch does not exist!\n");
      exit(1);
    }
    NFJJMSDn_isLoaded = true;
  }
  return NFJJMSDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0JMSDn() {
  if (not FJ0JMSDn_isLoaded) {
    if (FJ0JMSDn_branch != 0) {
      FJ0JMSDn_branch->GetEntry(index);
    } else {
      printf("branch FJ0JMSDn_branch does not exist!\n");
      exit(1);
    }
    FJ0JMSDn_isLoaded = true;
  }
  return *FJ0JMSDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1JMSDn() {
  if (not FJ1JMSDn_isLoaded) {
    if (FJ1JMSDn_branch != 0) {
      FJ1JMSDn_branch->GetEntry(index);
    } else {
      printf("branch FJ1JMSDn_branch does not exist!\n");
      exit(1);
    }
    FJ1JMSDn_isLoaded = true;
  }
  return *FJ1JMSDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2JMSDn() {
  if (not FJ2JMSDn_isLoaded) {
    if (FJ2JMSDn_branch != 0) {
      FJ2JMSDn_branch->GetEntry(index);
    } else {
      printf("branch FJ2JMSDn_branch does not exist!\n");
      exit(1);
    }
    FJ2JMSDn_isLoaded = true;
  }
  return *FJ2JMSDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3JMSDn() {
  if (not FJ3JMSDn_isLoaded) {
    if (FJ3JMSDn_branch != 0) {
      FJ3JMSDn_branch->GetEntry(index);
    } else {
      printf("branch FJ3JMSDn_branch does not exist!\n");
      exit(1);
    }
    FJ3JMSDn_isLoaded = true;
  }
  return *FJ3JMSDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4JMSDn() {
  if (not FJ4JMSDn_isLoaded) {
    if (FJ4JMSDn_branch != 0) {
      FJ4JMSDn_branch->GetEntry(index);
    } else {
      printf("branch FJ4JMSDn_branch does not exist!\n");
      exit(1);
    }
    FJ4JMSDn_isLoaded = true;
  }
  return *FJ4JMSDn_;
}

const float &VVV0Tree::VMD0JMSDn() {
  if (not VMD0JMSDn_isLoaded) {
    if (VMD0JMSDn_branch != 0) {
      VMD0JMSDn_branch->GetEntry(index);
    } else {
      printf("branch VMD0JMSDn_branch does not exist!\n");
      exit(1);
    }
    VMD0JMSDn_isLoaded = true;
  }
  return VMD0JMSDn_;
}

const float &VVV0Tree::VMD1JMSDn() {
  if (not VMD1JMSDn_isLoaded) {
    if (VMD1JMSDn_branch != 0) {
      VMD1JMSDn_branch->GetEntry(index);
    } else {
      printf("branch VMD1JMSDn_branch does not exist!\n");
      exit(1);
    }
    VMD1JMSDn_isLoaded = true;
  }
  return VMD1JMSDn_;
}

const float &VVV0Tree::VMD2JMSDn() {
  if (not VMD2JMSDn_isLoaded) {
    if (VMD2JMSDn_branch != 0) {
      VMD2JMSDn_branch->GetEntry(index);
    } else {
      printf("branch VMD2JMSDn_branch does not exist!\n");
      exit(1);
    }
    VMD2JMSDn_isLoaded = true;
  }
  return VMD2JMSDn_;
}

const float &VVV0Tree::VMD3JMSDn() {
  if (not VMD3JMSDn_isLoaded) {
    if (VMD3JMSDn_branch != 0) {
      VMD3JMSDn_branch->GetEntry(index);
    } else {
      printf("branch VMD3JMSDn_branch does not exist!\n");
      exit(1);
    }
    VMD3JMSDn_isLoaded = true;
  }
  return VMD3JMSDn_;
}

const float &VVV0Tree::VMD4JMSDn() {
  if (not VMD4JMSDn_isLoaded) {
    if (VMD4JMSDn_branch != 0) {
      VMD4JMSDn_branch->GetEntry(index);
    } else {
      printf("branch VMD4JMSDn_branch does not exist!\n");
      exit(1);
    }
    VMD4JMSDn_isLoaded = true;
  }
  return VMD4JMSDn_;
}

const float &VVV0Tree::WMD0JMSDn() {
  if (not WMD0JMSDn_isLoaded) {
    if (WMD0JMSDn_branch != 0) {
      WMD0JMSDn_branch->GetEntry(index);
    } else {
      printf("branch WMD0JMSDn_branch does not exist!\n");
      exit(1);
    }
    WMD0JMSDn_isLoaded = true;
  }
  return WMD0JMSDn_;
}

const float &VVV0Tree::WMD1JMSDn() {
  if (not WMD1JMSDn_isLoaded) {
    if (WMD1JMSDn_branch != 0) {
      WMD1JMSDn_branch->GetEntry(index);
    } else {
      printf("branch WMD1JMSDn_branch does not exist!\n");
      exit(1);
    }
    WMD1JMSDn_isLoaded = true;
  }
  return WMD1JMSDn_;
}

const float &VVV0Tree::WMD2JMSDn() {
  if (not WMD2JMSDn_isLoaded) {
    if (WMD2JMSDn_branch != 0) {
      WMD2JMSDn_branch->GetEntry(index);
    } else {
      printf("branch WMD2JMSDn_branch does not exist!\n");
      exit(1);
    }
    WMD2JMSDn_isLoaded = true;
  }
  return WMD2JMSDn_;
}

const float &VVV0Tree::WMD3JMSDn() {
  if (not WMD3JMSDn_isLoaded) {
    if (WMD3JMSDn_branch != 0) {
      WMD3JMSDn_branch->GetEntry(index);
    } else {
      printf("branch WMD3JMSDn_branch does not exist!\n");
      exit(1);
    }
    WMD3JMSDn_isLoaded = true;
  }
  return WMD3JMSDn_;
}

const float &VVV0Tree::WMD4JMSDn() {
  if (not WMD4JMSDn_isLoaded) {
    if (WMD4JMSDn_branch != 0) {
      WMD4JMSDn_branch->GetEntry(index);
    } else {
      printf("branch WMD4JMSDn_branch does not exist!\n");
      exit(1);
    }
    WMD4JMSDn_isLoaded = true;
  }
  return WMD4JMSDn_;
}

const int &VVV0Tree::NQGen0JMSDn() {
  if (not NQGen0JMSDn_isLoaded) {
    if (NQGen0JMSDn_branch != 0) {
      NQGen0JMSDn_branch->GetEntry(index);
    } else {
      printf("branch NQGen0JMSDn_branch does not exist!\n");
      exit(1);
    }
    NQGen0JMSDn_isLoaded = true;
  }
  return NQGen0JMSDn_;
}

const int &VVV0Tree::NQGen1JMSDn() {
  if (not NQGen1JMSDn_isLoaded) {
    if (NQGen1JMSDn_branch != 0) {
      NQGen1JMSDn_branch->GetEntry(index);
    } else {
      printf("branch NQGen1JMSDn_branch does not exist!\n");
      exit(1);
    }
    NQGen1JMSDn_isLoaded = true;
  }
  return NQGen1JMSDn_;
}

const int &VVV0Tree::NQGen2JMSDn() {
  if (not NQGen2JMSDn_isLoaded) {
    if (NQGen2JMSDn_branch != 0) {
      NQGen2JMSDn_branch->GetEntry(index);
    } else {
      printf("branch NQGen2JMSDn_branch does not exist!\n");
      exit(1);
    }
    NQGen2JMSDn_isLoaded = true;
  }
  return NQGen2JMSDn_;
}

const int &VVV0Tree::NQGen3JMSDn() {
  if (not NQGen3JMSDn_isLoaded) {
    if (NQGen3JMSDn_branch != 0) {
      NQGen3JMSDn_branch->GetEntry(index);
    } else {
      printf("branch NQGen3JMSDn_branch does not exist!\n");
      exit(1);
    }
    NQGen3JMSDn_isLoaded = true;
  }
  return NQGen3JMSDn_;
}

const int &VVV0Tree::NQGen4JMSDn() {
  if (not NQGen4JMSDn_isLoaded) {
    if (NQGen4JMSDn_branch != 0) {
      NQGen4JMSDn_branch->GetEntry(index);
    } else {
      printf("branch NQGen4JMSDn_branch does not exist!\n");
      exit(1);
    }
    NQGen4JMSDn_isLoaded = true;
  }
  return NQGen4JMSDn_;
}

const int &VVV0Tree::NBGen0JMSDn() {
  if (not NBGen0JMSDn_isLoaded) {
    if (NBGen0JMSDn_branch != 0) {
      NBGen0JMSDn_branch->GetEntry(index);
    } else {
      printf("branch NBGen0JMSDn_branch does not exist!\n");
      exit(1);
    }
    NBGen0JMSDn_isLoaded = true;
  }
  return NBGen0JMSDn_;
}

const int &VVV0Tree::NBGen1JMSDn() {
  if (not NBGen1JMSDn_isLoaded) {
    if (NBGen1JMSDn_branch != 0) {
      NBGen1JMSDn_branch->GetEntry(index);
    } else {
      printf("branch NBGen1JMSDn_branch does not exist!\n");
      exit(1);
    }
    NBGen1JMSDn_isLoaded = true;
  }
  return NBGen1JMSDn_;
}

const int &VVV0Tree::NBGen2JMSDn() {
  if (not NBGen2JMSDn_isLoaded) {
    if (NBGen2JMSDn_branch != 0) {
      NBGen2JMSDn_branch->GetEntry(index);
    } else {
      printf("branch NBGen2JMSDn_branch does not exist!\n");
      exit(1);
    }
    NBGen2JMSDn_isLoaded = true;
  }
  return NBGen2JMSDn_;
}

const int &VVV0Tree::NBGen3JMSDn() {
  if (not NBGen3JMSDn_isLoaded) {
    if (NBGen3JMSDn_branch != 0) {
      NBGen3JMSDn_branch->GetEntry(index);
    } else {
      printf("branch NBGen3JMSDn_branch does not exist!\n");
      exit(1);
    }
    NBGen3JMSDn_isLoaded = true;
  }
  return NBGen3JMSDn_;
}

const int &VVV0Tree::NBGen4JMSDn() {
  if (not NBGen4JMSDn_isLoaded) {
    if (NBGen4JMSDn_branch != 0) {
      NBGen4JMSDn_branch->GetEntry(index);
    } else {
      printf("branch NBGen4JMSDn_branch does not exist!\n");
      exit(1);
    }
    NBGen4JMSDn_isLoaded = true;
  }
  return NBGen4JMSDn_;
}

const int &VVV0Tree::NLGen0JMSDn() {
  if (not NLGen0JMSDn_isLoaded) {
    if (NLGen0JMSDn_branch != 0) {
      NLGen0JMSDn_branch->GetEntry(index);
    } else {
      printf("branch NLGen0JMSDn_branch does not exist!\n");
      exit(1);
    }
    NLGen0JMSDn_isLoaded = true;
  }
  return NLGen0JMSDn_;
}

const int &VVV0Tree::NLGen1JMSDn() {
  if (not NLGen1JMSDn_isLoaded) {
    if (NLGen1JMSDn_branch != 0) {
      NLGen1JMSDn_branch->GetEntry(index);
    } else {
      printf("branch NLGen1JMSDn_branch does not exist!\n");
      exit(1);
    }
    NLGen1JMSDn_isLoaded = true;
  }
  return NLGen1JMSDn_;
}

const int &VVV0Tree::NLGen2JMSDn() {
  if (not NLGen2JMSDn_isLoaded) {
    if (NLGen2JMSDn_branch != 0) {
      NLGen2JMSDn_branch->GetEntry(index);
    } else {
      printf("branch NLGen2JMSDn_branch does not exist!\n");
      exit(1);
    }
    NLGen2JMSDn_isLoaded = true;
  }
  return NLGen2JMSDn_;
}

const int &VVV0Tree::NLGen3JMSDn() {
  if (not NLGen3JMSDn_isLoaded) {
    if (NLGen3JMSDn_branch != 0) {
      NLGen3JMSDn_branch->GetEntry(index);
    } else {
      printf("branch NLGen3JMSDn_branch does not exist!\n");
      exit(1);
    }
    NLGen3JMSDn_isLoaded = true;
  }
  return NLGen3JMSDn_;
}

const int &VVV0Tree::NLGen4JMSDn() {
  if (not NLGen4JMSDn_isLoaded) {
    if (NLGen4JMSDn_branch != 0) {
      NLGen4JMSDn_branch->GetEntry(index);
    } else {
      printf("branch NLGen4JMSDn_branch does not exist!\n");
      exit(1);
    }
    NLGen4JMSDn_isLoaded = true;
  }
  return NLGen4JMSDn_;
}

const int &VVV0Tree::NVQGen0JMSDn() {
  if (not NVQGen0JMSDn_isLoaded) {
    if (NVQGen0JMSDn_branch != 0) {
      NVQGen0JMSDn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0JMSDn_branch does not exist!\n");
      exit(1);
    }
    NVQGen0JMSDn_isLoaded = true;
  }
  return NVQGen0JMSDn_;
}

const int &VVV0Tree::NVQGen1JMSDn() {
  if (not NVQGen1JMSDn_isLoaded) {
    if (NVQGen1JMSDn_branch != 0) {
      NVQGen1JMSDn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1JMSDn_branch does not exist!\n");
      exit(1);
    }
    NVQGen1JMSDn_isLoaded = true;
  }
  return NVQGen1JMSDn_;
}

const int &VVV0Tree::NVQGen2JMSDn() {
  if (not NVQGen2JMSDn_isLoaded) {
    if (NVQGen2JMSDn_branch != 0) {
      NVQGen2JMSDn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2JMSDn_branch does not exist!\n");
      exit(1);
    }
    NVQGen2JMSDn_isLoaded = true;
  }
  return NVQGen2JMSDn_;
}

const int &VVV0Tree::NVQGen3JMSDn() {
  if (not NVQGen3JMSDn_isLoaded) {
    if (NVQGen3JMSDn_branch != 0) {
      NVQGen3JMSDn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3JMSDn_branch does not exist!\n");
      exit(1);
    }
    NVQGen3JMSDn_isLoaded = true;
  }
  return NVQGen3JMSDn_;
}

const int &VVV0Tree::NVQGen4JMSDn() {
  if (not NVQGen4JMSDn_isLoaded) {
    if (NVQGen4JMSDn_branch != 0) {
      NVQGen4JMSDn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4JMSDn_branch does not exist!\n");
      exit(1);
    }
    NVQGen4JMSDn_isLoaded = true;
  }
  return NVQGen4JMSDn_;
}

const int &VVV0Tree::NiFJJMSDn() {
  if (not NiFJJMSDn_isLoaded) {
    if (NiFJJMSDn_branch != 0) {
      NiFJJMSDn_branch->GetEntry(index);
    } else {
      printf("branch NiFJJMSDn_branch does not exist!\n");
      exit(1);
    }
    NiFJJMSDn_isLoaded = true;
  }
  return NiFJJMSDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0JMSDn() {
  if (not iFJ0JMSDn_isLoaded) {
    if (iFJ0JMSDn_branch != 0) {
      iFJ0JMSDn_branch->GetEntry(index);
    } else {
      printf("branch iFJ0JMSDn_branch does not exist!\n");
      exit(1);
    }
    iFJ0JMSDn_isLoaded = true;
  }
  return *iFJ0JMSDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1JMSDn() {
  if (not iFJ1JMSDn_isLoaded) {
    if (iFJ1JMSDn_branch != 0) {
      iFJ1JMSDn_branch->GetEntry(index);
    } else {
      printf("branch iFJ1JMSDn_branch does not exist!\n");
      exit(1);
    }
    iFJ1JMSDn_isLoaded = true;
  }
  return *iFJ1JMSDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2JMSDn() {
  if (not iFJ2JMSDn_isLoaded) {
    if (iFJ2JMSDn_branch != 0) {
      iFJ2JMSDn_branch->GetEntry(index);
    } else {
      printf("branch iFJ2JMSDn_branch does not exist!\n");
      exit(1);
    }
    iFJ2JMSDn_isLoaded = true;
  }
  return *iFJ2JMSDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3JMSDn() {
  if (not iFJ3JMSDn_isLoaded) {
    if (iFJ3JMSDn_branch != 0) {
      iFJ3JMSDn_branch->GetEntry(index);
    } else {
      printf("branch iFJ3JMSDn_branch does not exist!\n");
      exit(1);
    }
    iFJ3JMSDn_isLoaded = true;
  }
  return *iFJ3JMSDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4JMSDn() {
  if (not iFJ4JMSDn_isLoaded) {
    if (iFJ4JMSDn_branch != 0) {
      iFJ4JMSDn_branch->GetEntry(index);
    } else {
      printf("branch iFJ4JMSDn_branch does not exist!\n");
      exit(1);
    }
    iFJ4JMSDn_isLoaded = true;
  }
  return *iFJ4JMSDn_;
}

const float &VVV0Tree::iVMD0JMSDn() {
  if (not iVMD0JMSDn_isLoaded) {
    if (iVMD0JMSDn_branch != 0) {
      iVMD0JMSDn_branch->GetEntry(index);
    } else {
      printf("branch iVMD0JMSDn_branch does not exist!\n");
      exit(1);
    }
    iVMD0JMSDn_isLoaded = true;
  }
  return iVMD0JMSDn_;
}

const float &VVV0Tree::iVMD1JMSDn() {
  if (not iVMD1JMSDn_isLoaded) {
    if (iVMD1JMSDn_branch != 0) {
      iVMD1JMSDn_branch->GetEntry(index);
    } else {
      printf("branch iVMD1JMSDn_branch does not exist!\n");
      exit(1);
    }
    iVMD1JMSDn_isLoaded = true;
  }
  return iVMD1JMSDn_;
}

const float &VVV0Tree::iVMD2JMSDn() {
  if (not iVMD2JMSDn_isLoaded) {
    if (iVMD2JMSDn_branch != 0) {
      iVMD2JMSDn_branch->GetEntry(index);
    } else {
      printf("branch iVMD2JMSDn_branch does not exist!\n");
      exit(1);
    }
    iVMD2JMSDn_isLoaded = true;
  }
  return iVMD2JMSDn_;
}

const float &VVV0Tree::iVMD3JMSDn() {
  if (not iVMD3JMSDn_isLoaded) {
    if (iVMD3JMSDn_branch != 0) {
      iVMD3JMSDn_branch->GetEntry(index);
    } else {
      printf("branch iVMD3JMSDn_branch does not exist!\n");
      exit(1);
    }
    iVMD3JMSDn_isLoaded = true;
  }
  return iVMD3JMSDn_;
}

const float &VVV0Tree::iVMD4JMSDn() {
  if (not iVMD4JMSDn_isLoaded) {
    if (iVMD4JMSDn_branch != 0) {
      iVMD4JMSDn_branch->GetEntry(index);
    } else {
      printf("branch iVMD4JMSDn_branch does not exist!\n");
      exit(1);
    }
    iVMD4JMSDn_isLoaded = true;
  }
  return iVMD4JMSDn_;
}

const float &VVV0Tree::iWMD0JMSDn() {
  if (not iWMD0JMSDn_isLoaded) {
    if (iWMD0JMSDn_branch != 0) {
      iWMD0JMSDn_branch->GetEntry(index);
    } else {
      printf("branch iWMD0JMSDn_branch does not exist!\n");
      exit(1);
    }
    iWMD0JMSDn_isLoaded = true;
  }
  return iWMD0JMSDn_;
}

const float &VVV0Tree::iWMD1JMSDn() {
  if (not iWMD1JMSDn_isLoaded) {
    if (iWMD1JMSDn_branch != 0) {
      iWMD1JMSDn_branch->GetEntry(index);
    } else {
      printf("branch iWMD1JMSDn_branch does not exist!\n");
      exit(1);
    }
    iWMD1JMSDn_isLoaded = true;
  }
  return iWMD1JMSDn_;
}

const float &VVV0Tree::iWMD2JMSDn() {
  if (not iWMD2JMSDn_isLoaded) {
    if (iWMD2JMSDn_branch != 0) {
      iWMD2JMSDn_branch->GetEntry(index);
    } else {
      printf("branch iWMD2JMSDn_branch does not exist!\n");
      exit(1);
    }
    iWMD2JMSDn_isLoaded = true;
  }
  return iWMD2JMSDn_;
}

const float &VVV0Tree::iWMD3JMSDn() {
  if (not iWMD3JMSDn_isLoaded) {
    if (iWMD3JMSDn_branch != 0) {
      iWMD3JMSDn_branch->GetEntry(index);
    } else {
      printf("branch iWMD3JMSDn_branch does not exist!\n");
      exit(1);
    }
    iWMD3JMSDn_isLoaded = true;
  }
  return iWMD3JMSDn_;
}

const float &VVV0Tree::iWMD4JMSDn() {
  if (not iWMD4JMSDn_isLoaded) {
    if (iWMD4JMSDn_branch != 0) {
      iWMD4JMSDn_branch->GetEntry(index);
    } else {
      printf("branch iWMD4JMSDn_branch does not exist!\n");
      exit(1);
    }
    iWMD4JMSDn_isLoaded = true;
  }
  return iWMD4JMSDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METJMSDn() {
  if (not METJMSDn_isLoaded) {
    if (METJMSDn_branch != 0) {
      METJMSDn_branch->GetEntry(index);
    } else {
      printf("branch METJMSDn_branch does not exist!\n");
      exit(1);
    }
    METJMSDn_isLoaded = true;
  }
  return *METJMSDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NuJMSDn() {
  if (not NuJMSDn_isLoaded) {
    if (NuJMSDn_branch != 0) {
      NuJMSDn_branch->GetEntry(index);
    } else {
      printf("branch NuJMSDn_branch does not exist!\n");
      exit(1);
    }
    NuJMSDn_isLoaded = true;
  }
  return *NuJMSDn_;
}

const int &VVV0Tree::NJJMSDn() {
  if (not NJJMSDn_isLoaded) {
    if (NJJMSDn_branch != 0) {
      NJJMSDn_branch->GetEntry(index);
    } else {
      printf("branch NJJMSDn_branch does not exist!\n");
      exit(1);
    }
    NJJMSDn_isLoaded = true;
  }
  return NJJMSDn_;
}

const int &VVV0Tree::NbLooseJMSDn() {
  if (not NbLooseJMSDn_isLoaded) {
    if (NbLooseJMSDn_branch != 0) {
      NbLooseJMSDn_branch->GetEntry(index);
    } else {
      printf("branch NbLooseJMSDn_branch does not exist!\n");
      exit(1);
    }
    NbLooseJMSDn_isLoaded = true;
  }
  return NbLooseJMSDn_;
}

const int &VVV0Tree::NbMediumJMSDn() {
  if (not NbMediumJMSDn_isLoaded) {
    if (NbMediumJMSDn_branch != 0) {
      NbMediumJMSDn_branch->GetEntry(index);
    } else {
      printf("branch NbMediumJMSDn_branch does not exist!\n");
      exit(1);
    }
    NbMediumJMSDn_isLoaded = true;
  }
  return NbMediumJMSDn_;
}

const int &VVV0Tree::NbTightJMSDn() {
  if (not NbTightJMSDn_isLoaded) {
    if (NbTightJMSDn_branch != 0) {
      NbTightJMSDn_branch->GetEntry(index);
    } else {
      printf("branch NbTightJMSDn_branch does not exist!\n");
      exit(1);
    }
    NbTightJMSDn_isLoaded = true;
  }
  return NbTightJMSDn_;
}

const int &VVV0Tree::NoORNbLooseJMSDn() {
  if (not NoORNbLooseJMSDn_isLoaded) {
    if (NoORNbLooseJMSDn_branch != 0) {
      NoORNbLooseJMSDn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLooseJMSDn_branch does not exist!\n");
      exit(1);
    }
    NoORNbLooseJMSDn_isLoaded = true;
  }
  return NoORNbLooseJMSDn_;
}

const int &VVV0Tree::NoORNbMediumJMSDn() {
  if (not NoORNbMediumJMSDn_isLoaded) {
    if (NoORNbMediumJMSDn_branch != 0) {
      NoORNbMediumJMSDn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumJMSDn_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumJMSDn_isLoaded = true;
  }
  return NoORNbMediumJMSDn_;
}

const int &VVV0Tree::NoORNbTightJMSDn() {
  if (not NoORNbTightJMSDn_isLoaded) {
    if (NoORNbTightJMSDn_branch != 0) {
      NoORNbTightJMSDn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightJMSDn_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightJMSDn_isLoaded = true;
  }
  return NoORNbTightJMSDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0JMSDn() {
  if (not J0JMSDn_isLoaded) {
    if (J0JMSDn_branch != 0) {
      J0JMSDn_branch->GetEntry(index);
    } else {
      printf("branch J0JMSDn_branch does not exist!\n");
      exit(1);
    }
    J0JMSDn_isLoaded = true;
  }
  return *J0JMSDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1JMSDn() {
  if (not J1JMSDn_isLoaded) {
    if (J1JMSDn_branch != 0) {
      J1JMSDn_branch->GetEntry(index);
    } else {
      printf("branch J1JMSDn_branch does not exist!\n");
      exit(1);
    }
    J1JMSDn_isLoaded = true;
  }
  return *J1JMSDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2JMSDn() {
  if (not J2JMSDn_isLoaded) {
    if (J2JMSDn_branch != 0) {
      J2JMSDn_branch->GetEntry(index);
    } else {
      printf("branch J2JMSDn_branch does not exist!\n");
      exit(1);
    }
    J2JMSDn_isLoaded = true;
  }
  return *J2JMSDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3JMSDn() {
  if (not J3JMSDn_isLoaded) {
    if (J3JMSDn_branch != 0) {
      J3JMSDn_branch->GetEntry(index);
    } else {
      printf("branch J3JMSDn_branch does not exist!\n");
      exit(1);
    }
    J3JMSDn_isLoaded = true;
  }
  return *J3JMSDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4JMSDn() {
  if (not J4JMSDn_isLoaded) {
    if (J4JMSDn_branch != 0) {
      J4JMSDn_branch->GetEntry(index);
    } else {
      printf("branch J4JMSDn_branch does not exist!\n");
      exit(1);
    }
    J4JMSDn_isLoaded = true;
  }
  return *J4JMSDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5JMSDn() {
  if (not J5JMSDn_isLoaded) {
    if (J5JMSDn_branch != 0) {
      J5JMSDn_branch->GetEntry(index);
    } else {
      printf("branch J5JMSDn_branch does not exist!\n");
      exit(1);
    }
    J5JMSDn_isLoaded = true;
  }
  return *J5JMSDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6JMSDn() {
  if (not J6JMSDn_isLoaded) {
    if (J6JMSDn_branch != 0) {
      J6JMSDn_branch->GetEntry(index);
    } else {
      printf("branch J6JMSDn_branch does not exist!\n");
      exit(1);
    }
    J6JMSDn_isLoaded = true;
  }
  return *J6JMSDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7JMSDn() {
  if (not J7JMSDn_isLoaded) {
    if (J7JMSDn_branch != 0) {
      J7JMSDn_branch->GetEntry(index);
    } else {
      printf("branch J7JMSDn_branch does not exist!\n");
      exit(1);
    }
    J7JMSDn_isLoaded = true;
  }
  return *J7JMSDn_;
}

const vector<int> &VVV0Tree::NQJGenJMSDn() {
  if (not NQJGenJMSDn_isLoaded) {
    if (NQJGenJMSDn_branch != 0) {
      NQJGenJMSDn_branch->GetEntry(index);
    } else {
      printf("branch NQJGenJMSDn_branch does not exist!\n");
      exit(1);
    }
    NQJGenJMSDn_isLoaded = true;
  }
  return *NQJGenJMSDn_;
}

const vector<int> &VVV0Tree::NBJGenJMSDn() {
  if (not NBJGenJMSDn_isLoaded) {
    if (NBJGenJMSDn_branch != 0) {
      NBJGenJMSDn_branch->GetEntry(index);
    } else {
      printf("branch NBJGenJMSDn_branch does not exist!\n");
      exit(1);
    }
    NBJGenJMSDn_isLoaded = true;
  }
  return *NBJGenJMSDn_;
}

const vector<int> &VVV0Tree::NLJGenJMSDn() {
  if (not NLJGenJMSDn_isLoaded) {
    if (NLJGenJMSDn_branch != 0) {
      NLJGenJMSDn_branch->GetEntry(index);
    } else {
      printf("branch NLJGenJMSDn_branch does not exist!\n");
      exit(1);
    }
    NLJGenJMSDn_isLoaded = true;
  }
  return *NLJGenJMSDn_;
}

const float &VVV0Tree::MVVXJMSDn() {
  if (not MVVXJMSDn_isLoaded) {
    if (MVVXJMSDn_branch != 0) {
      MVVXJMSDn_branch->GetEntry(index);
    } else {
      printf("branch MVVXJMSDn_branch does not exist!\n");
      exit(1);
    }
    MVVXJMSDn_isLoaded = true;
  }
  return MVVXJMSDn_;
}

const float &VVV0Tree::PtVVXJMSDn() {
  if (not PtVVXJMSDn_isLoaded) {
    if (PtVVXJMSDn_branch != 0) {
      PtVVXJMSDn_branch->GetEntry(index);
    } else {
      printf("branch PtVVXJMSDn_branch does not exist!\n");
      exit(1);
    }
    PtVVXJMSDn_isLoaded = true;
  }
  return PtVVXJMSDn_;
}

const float &VVV0Tree::HTJMSDn() {
  if (not HTJMSDn_isLoaded) {
    if (HTJMSDn_branch != 0) {
      HTJMSDn_branch->GetEntry(index);
    } else {
      printf("branch HTJMSDn_branch does not exist!\n");
      exit(1);
    }
    HTJMSDn_isLoaded = true;
  }
  return HTJMSDn_;
}

const float &VVV0Tree::HTJJMSDn() {
  if (not HTJJMSDn_isLoaded) {
    if (HTJJMSDn_branch != 0) {
      HTJJMSDn_branch->GetEntry(index);
    } else {
      printf("branch HTJJMSDn_branch does not exist!\n");
      exit(1);
    }
    HTJJMSDn_isLoaded = true;
  }
  return HTJJMSDn_;
}

const float &VVV0Tree::HTFJJMSDn() {
  if (not HTFJJMSDn_isLoaded) {
    if (HTFJJMSDn_branch != 0) {
      HTFJJMSDn_branch->GetEntry(index);
    } else {
      printf("branch HTFJJMSDn_branch does not exist!\n");
      exit(1);
    }
    HTFJJMSDn_isLoaded = true;
  }
  return HTFJJMSDn_;
}

const float &VVV0Tree::SumPtFJJMSDn() {
  if (not SumPtFJJMSDn_isLoaded) {
    if (SumPtFJJMSDn_branch != 0) {
      SumPtFJJMSDn_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJJMSDn_branch does not exist!\n");
      exit(1);
    }
    SumPtFJJMSDn_isLoaded = true;
  }
  return SumPtFJJMSDn_;
}

const float &VVV0Tree::SumPtJJMSDn() {
  if (not SumPtJJMSDn_isLoaded) {
    if (SumPtJJMSDn_branch != 0) {
      SumPtJJMSDn_branch->GetEntry(index);
    } else {
      printf("branch SumPtJJMSDn_branch does not exist!\n");
      exit(1);
    }
    SumPtJJMSDn_isLoaded = true;
  }
  return SumPtJJMSDn_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsJMRUp() {
  if (not JsJMRUp_isLoaded) {
    if (JsJMRUp_branch != 0) {
      JsJMRUp_branch->GetEntry(index);
    } else {
      printf("branch JsJMRUp_branch does not exist!\n");
      exit(1);
    }
    JsJMRUp_isLoaded = true;
  }
  return *JsJMRUp_;
}

const int &VVV0Tree::NFJJMRUp() {
  if (not NFJJMRUp_isLoaded) {
    if (NFJJMRUp_branch != 0) {
      NFJJMRUp_branch->GetEntry(index);
    } else {
      printf("branch NFJJMRUp_branch does not exist!\n");
      exit(1);
    }
    NFJJMRUp_isLoaded = true;
  }
  return NFJJMRUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0JMRUp() {
  if (not FJ0JMRUp_isLoaded) {
    if (FJ0JMRUp_branch != 0) {
      FJ0JMRUp_branch->GetEntry(index);
    } else {
      printf("branch FJ0JMRUp_branch does not exist!\n");
      exit(1);
    }
    FJ0JMRUp_isLoaded = true;
  }
  return *FJ0JMRUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1JMRUp() {
  if (not FJ1JMRUp_isLoaded) {
    if (FJ1JMRUp_branch != 0) {
      FJ1JMRUp_branch->GetEntry(index);
    } else {
      printf("branch FJ1JMRUp_branch does not exist!\n");
      exit(1);
    }
    FJ1JMRUp_isLoaded = true;
  }
  return *FJ1JMRUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2JMRUp() {
  if (not FJ2JMRUp_isLoaded) {
    if (FJ2JMRUp_branch != 0) {
      FJ2JMRUp_branch->GetEntry(index);
    } else {
      printf("branch FJ2JMRUp_branch does not exist!\n");
      exit(1);
    }
    FJ2JMRUp_isLoaded = true;
  }
  return *FJ2JMRUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3JMRUp() {
  if (not FJ3JMRUp_isLoaded) {
    if (FJ3JMRUp_branch != 0) {
      FJ3JMRUp_branch->GetEntry(index);
    } else {
      printf("branch FJ3JMRUp_branch does not exist!\n");
      exit(1);
    }
    FJ3JMRUp_isLoaded = true;
  }
  return *FJ3JMRUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4JMRUp() {
  if (not FJ4JMRUp_isLoaded) {
    if (FJ4JMRUp_branch != 0) {
      FJ4JMRUp_branch->GetEntry(index);
    } else {
      printf("branch FJ4JMRUp_branch does not exist!\n");
      exit(1);
    }
    FJ4JMRUp_isLoaded = true;
  }
  return *FJ4JMRUp_;
}

const float &VVV0Tree::VMD0JMRUp() {
  if (not VMD0JMRUp_isLoaded) {
    if (VMD0JMRUp_branch != 0) {
      VMD0JMRUp_branch->GetEntry(index);
    } else {
      printf("branch VMD0JMRUp_branch does not exist!\n");
      exit(1);
    }
    VMD0JMRUp_isLoaded = true;
  }
  return VMD0JMRUp_;
}

const float &VVV0Tree::VMD1JMRUp() {
  if (not VMD1JMRUp_isLoaded) {
    if (VMD1JMRUp_branch != 0) {
      VMD1JMRUp_branch->GetEntry(index);
    } else {
      printf("branch VMD1JMRUp_branch does not exist!\n");
      exit(1);
    }
    VMD1JMRUp_isLoaded = true;
  }
  return VMD1JMRUp_;
}

const float &VVV0Tree::VMD2JMRUp() {
  if (not VMD2JMRUp_isLoaded) {
    if (VMD2JMRUp_branch != 0) {
      VMD2JMRUp_branch->GetEntry(index);
    } else {
      printf("branch VMD2JMRUp_branch does not exist!\n");
      exit(1);
    }
    VMD2JMRUp_isLoaded = true;
  }
  return VMD2JMRUp_;
}

const float &VVV0Tree::VMD3JMRUp() {
  if (not VMD3JMRUp_isLoaded) {
    if (VMD3JMRUp_branch != 0) {
      VMD3JMRUp_branch->GetEntry(index);
    } else {
      printf("branch VMD3JMRUp_branch does not exist!\n");
      exit(1);
    }
    VMD3JMRUp_isLoaded = true;
  }
  return VMD3JMRUp_;
}

const float &VVV0Tree::VMD4JMRUp() {
  if (not VMD4JMRUp_isLoaded) {
    if (VMD4JMRUp_branch != 0) {
      VMD4JMRUp_branch->GetEntry(index);
    } else {
      printf("branch VMD4JMRUp_branch does not exist!\n");
      exit(1);
    }
    VMD4JMRUp_isLoaded = true;
  }
  return VMD4JMRUp_;
}

const float &VVV0Tree::WMD0JMRUp() {
  if (not WMD0JMRUp_isLoaded) {
    if (WMD0JMRUp_branch != 0) {
      WMD0JMRUp_branch->GetEntry(index);
    } else {
      printf("branch WMD0JMRUp_branch does not exist!\n");
      exit(1);
    }
    WMD0JMRUp_isLoaded = true;
  }
  return WMD0JMRUp_;
}

const float &VVV0Tree::WMD1JMRUp() {
  if (not WMD1JMRUp_isLoaded) {
    if (WMD1JMRUp_branch != 0) {
      WMD1JMRUp_branch->GetEntry(index);
    } else {
      printf("branch WMD1JMRUp_branch does not exist!\n");
      exit(1);
    }
    WMD1JMRUp_isLoaded = true;
  }
  return WMD1JMRUp_;
}

const float &VVV0Tree::WMD2JMRUp() {
  if (not WMD2JMRUp_isLoaded) {
    if (WMD2JMRUp_branch != 0) {
      WMD2JMRUp_branch->GetEntry(index);
    } else {
      printf("branch WMD2JMRUp_branch does not exist!\n");
      exit(1);
    }
    WMD2JMRUp_isLoaded = true;
  }
  return WMD2JMRUp_;
}

const float &VVV0Tree::WMD3JMRUp() {
  if (not WMD3JMRUp_isLoaded) {
    if (WMD3JMRUp_branch != 0) {
      WMD3JMRUp_branch->GetEntry(index);
    } else {
      printf("branch WMD3JMRUp_branch does not exist!\n");
      exit(1);
    }
    WMD3JMRUp_isLoaded = true;
  }
  return WMD3JMRUp_;
}

const float &VVV0Tree::WMD4JMRUp() {
  if (not WMD4JMRUp_isLoaded) {
    if (WMD4JMRUp_branch != 0) {
      WMD4JMRUp_branch->GetEntry(index);
    } else {
      printf("branch WMD4JMRUp_branch does not exist!\n");
      exit(1);
    }
    WMD4JMRUp_isLoaded = true;
  }
  return WMD4JMRUp_;
}

const int &VVV0Tree::NQGen0JMRUp() {
  if (not NQGen0JMRUp_isLoaded) {
    if (NQGen0JMRUp_branch != 0) {
      NQGen0JMRUp_branch->GetEntry(index);
    } else {
      printf("branch NQGen0JMRUp_branch does not exist!\n");
      exit(1);
    }
    NQGen0JMRUp_isLoaded = true;
  }
  return NQGen0JMRUp_;
}

const int &VVV0Tree::NQGen1JMRUp() {
  if (not NQGen1JMRUp_isLoaded) {
    if (NQGen1JMRUp_branch != 0) {
      NQGen1JMRUp_branch->GetEntry(index);
    } else {
      printf("branch NQGen1JMRUp_branch does not exist!\n");
      exit(1);
    }
    NQGen1JMRUp_isLoaded = true;
  }
  return NQGen1JMRUp_;
}

const int &VVV0Tree::NQGen2JMRUp() {
  if (not NQGen2JMRUp_isLoaded) {
    if (NQGen2JMRUp_branch != 0) {
      NQGen2JMRUp_branch->GetEntry(index);
    } else {
      printf("branch NQGen2JMRUp_branch does not exist!\n");
      exit(1);
    }
    NQGen2JMRUp_isLoaded = true;
  }
  return NQGen2JMRUp_;
}

const int &VVV0Tree::NQGen3JMRUp() {
  if (not NQGen3JMRUp_isLoaded) {
    if (NQGen3JMRUp_branch != 0) {
      NQGen3JMRUp_branch->GetEntry(index);
    } else {
      printf("branch NQGen3JMRUp_branch does not exist!\n");
      exit(1);
    }
    NQGen3JMRUp_isLoaded = true;
  }
  return NQGen3JMRUp_;
}

const int &VVV0Tree::NQGen4JMRUp() {
  if (not NQGen4JMRUp_isLoaded) {
    if (NQGen4JMRUp_branch != 0) {
      NQGen4JMRUp_branch->GetEntry(index);
    } else {
      printf("branch NQGen4JMRUp_branch does not exist!\n");
      exit(1);
    }
    NQGen4JMRUp_isLoaded = true;
  }
  return NQGen4JMRUp_;
}

const int &VVV0Tree::NBGen0JMRUp() {
  if (not NBGen0JMRUp_isLoaded) {
    if (NBGen0JMRUp_branch != 0) {
      NBGen0JMRUp_branch->GetEntry(index);
    } else {
      printf("branch NBGen0JMRUp_branch does not exist!\n");
      exit(1);
    }
    NBGen0JMRUp_isLoaded = true;
  }
  return NBGen0JMRUp_;
}

const int &VVV0Tree::NBGen1JMRUp() {
  if (not NBGen1JMRUp_isLoaded) {
    if (NBGen1JMRUp_branch != 0) {
      NBGen1JMRUp_branch->GetEntry(index);
    } else {
      printf("branch NBGen1JMRUp_branch does not exist!\n");
      exit(1);
    }
    NBGen1JMRUp_isLoaded = true;
  }
  return NBGen1JMRUp_;
}

const int &VVV0Tree::NBGen2JMRUp() {
  if (not NBGen2JMRUp_isLoaded) {
    if (NBGen2JMRUp_branch != 0) {
      NBGen2JMRUp_branch->GetEntry(index);
    } else {
      printf("branch NBGen2JMRUp_branch does not exist!\n");
      exit(1);
    }
    NBGen2JMRUp_isLoaded = true;
  }
  return NBGen2JMRUp_;
}

const int &VVV0Tree::NBGen3JMRUp() {
  if (not NBGen3JMRUp_isLoaded) {
    if (NBGen3JMRUp_branch != 0) {
      NBGen3JMRUp_branch->GetEntry(index);
    } else {
      printf("branch NBGen3JMRUp_branch does not exist!\n");
      exit(1);
    }
    NBGen3JMRUp_isLoaded = true;
  }
  return NBGen3JMRUp_;
}

const int &VVV0Tree::NBGen4JMRUp() {
  if (not NBGen4JMRUp_isLoaded) {
    if (NBGen4JMRUp_branch != 0) {
      NBGen4JMRUp_branch->GetEntry(index);
    } else {
      printf("branch NBGen4JMRUp_branch does not exist!\n");
      exit(1);
    }
    NBGen4JMRUp_isLoaded = true;
  }
  return NBGen4JMRUp_;
}

const int &VVV0Tree::NLGen0JMRUp() {
  if (not NLGen0JMRUp_isLoaded) {
    if (NLGen0JMRUp_branch != 0) {
      NLGen0JMRUp_branch->GetEntry(index);
    } else {
      printf("branch NLGen0JMRUp_branch does not exist!\n");
      exit(1);
    }
    NLGen0JMRUp_isLoaded = true;
  }
  return NLGen0JMRUp_;
}

const int &VVV0Tree::NLGen1JMRUp() {
  if (not NLGen1JMRUp_isLoaded) {
    if (NLGen1JMRUp_branch != 0) {
      NLGen1JMRUp_branch->GetEntry(index);
    } else {
      printf("branch NLGen1JMRUp_branch does not exist!\n");
      exit(1);
    }
    NLGen1JMRUp_isLoaded = true;
  }
  return NLGen1JMRUp_;
}

const int &VVV0Tree::NLGen2JMRUp() {
  if (not NLGen2JMRUp_isLoaded) {
    if (NLGen2JMRUp_branch != 0) {
      NLGen2JMRUp_branch->GetEntry(index);
    } else {
      printf("branch NLGen2JMRUp_branch does not exist!\n");
      exit(1);
    }
    NLGen2JMRUp_isLoaded = true;
  }
  return NLGen2JMRUp_;
}

const int &VVV0Tree::NLGen3JMRUp() {
  if (not NLGen3JMRUp_isLoaded) {
    if (NLGen3JMRUp_branch != 0) {
      NLGen3JMRUp_branch->GetEntry(index);
    } else {
      printf("branch NLGen3JMRUp_branch does not exist!\n");
      exit(1);
    }
    NLGen3JMRUp_isLoaded = true;
  }
  return NLGen3JMRUp_;
}

const int &VVV0Tree::NLGen4JMRUp() {
  if (not NLGen4JMRUp_isLoaded) {
    if (NLGen4JMRUp_branch != 0) {
      NLGen4JMRUp_branch->GetEntry(index);
    } else {
      printf("branch NLGen4JMRUp_branch does not exist!\n");
      exit(1);
    }
    NLGen4JMRUp_isLoaded = true;
  }
  return NLGen4JMRUp_;
}

const int &VVV0Tree::NVQGen0JMRUp() {
  if (not NVQGen0JMRUp_isLoaded) {
    if (NVQGen0JMRUp_branch != 0) {
      NVQGen0JMRUp_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0JMRUp_branch does not exist!\n");
      exit(1);
    }
    NVQGen0JMRUp_isLoaded = true;
  }
  return NVQGen0JMRUp_;
}

const int &VVV0Tree::NVQGen1JMRUp() {
  if (not NVQGen1JMRUp_isLoaded) {
    if (NVQGen1JMRUp_branch != 0) {
      NVQGen1JMRUp_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1JMRUp_branch does not exist!\n");
      exit(1);
    }
    NVQGen1JMRUp_isLoaded = true;
  }
  return NVQGen1JMRUp_;
}

const int &VVV0Tree::NVQGen2JMRUp() {
  if (not NVQGen2JMRUp_isLoaded) {
    if (NVQGen2JMRUp_branch != 0) {
      NVQGen2JMRUp_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2JMRUp_branch does not exist!\n");
      exit(1);
    }
    NVQGen2JMRUp_isLoaded = true;
  }
  return NVQGen2JMRUp_;
}

const int &VVV0Tree::NVQGen3JMRUp() {
  if (not NVQGen3JMRUp_isLoaded) {
    if (NVQGen3JMRUp_branch != 0) {
      NVQGen3JMRUp_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3JMRUp_branch does not exist!\n");
      exit(1);
    }
    NVQGen3JMRUp_isLoaded = true;
  }
  return NVQGen3JMRUp_;
}

const int &VVV0Tree::NVQGen4JMRUp() {
  if (not NVQGen4JMRUp_isLoaded) {
    if (NVQGen4JMRUp_branch != 0) {
      NVQGen4JMRUp_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4JMRUp_branch does not exist!\n");
      exit(1);
    }
    NVQGen4JMRUp_isLoaded = true;
  }
  return NVQGen4JMRUp_;
}

const int &VVV0Tree::NiFJJMRUp() {
  if (not NiFJJMRUp_isLoaded) {
    if (NiFJJMRUp_branch != 0) {
      NiFJJMRUp_branch->GetEntry(index);
    } else {
      printf("branch NiFJJMRUp_branch does not exist!\n");
      exit(1);
    }
    NiFJJMRUp_isLoaded = true;
  }
  return NiFJJMRUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0JMRUp() {
  if (not iFJ0JMRUp_isLoaded) {
    if (iFJ0JMRUp_branch != 0) {
      iFJ0JMRUp_branch->GetEntry(index);
    } else {
      printf("branch iFJ0JMRUp_branch does not exist!\n");
      exit(1);
    }
    iFJ0JMRUp_isLoaded = true;
  }
  return *iFJ0JMRUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1JMRUp() {
  if (not iFJ1JMRUp_isLoaded) {
    if (iFJ1JMRUp_branch != 0) {
      iFJ1JMRUp_branch->GetEntry(index);
    } else {
      printf("branch iFJ1JMRUp_branch does not exist!\n");
      exit(1);
    }
    iFJ1JMRUp_isLoaded = true;
  }
  return *iFJ1JMRUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2JMRUp() {
  if (not iFJ2JMRUp_isLoaded) {
    if (iFJ2JMRUp_branch != 0) {
      iFJ2JMRUp_branch->GetEntry(index);
    } else {
      printf("branch iFJ2JMRUp_branch does not exist!\n");
      exit(1);
    }
    iFJ2JMRUp_isLoaded = true;
  }
  return *iFJ2JMRUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3JMRUp() {
  if (not iFJ3JMRUp_isLoaded) {
    if (iFJ3JMRUp_branch != 0) {
      iFJ3JMRUp_branch->GetEntry(index);
    } else {
      printf("branch iFJ3JMRUp_branch does not exist!\n");
      exit(1);
    }
    iFJ3JMRUp_isLoaded = true;
  }
  return *iFJ3JMRUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4JMRUp() {
  if (not iFJ4JMRUp_isLoaded) {
    if (iFJ4JMRUp_branch != 0) {
      iFJ4JMRUp_branch->GetEntry(index);
    } else {
      printf("branch iFJ4JMRUp_branch does not exist!\n");
      exit(1);
    }
    iFJ4JMRUp_isLoaded = true;
  }
  return *iFJ4JMRUp_;
}

const float &VVV0Tree::iVMD0JMRUp() {
  if (not iVMD0JMRUp_isLoaded) {
    if (iVMD0JMRUp_branch != 0) {
      iVMD0JMRUp_branch->GetEntry(index);
    } else {
      printf("branch iVMD0JMRUp_branch does not exist!\n");
      exit(1);
    }
    iVMD0JMRUp_isLoaded = true;
  }
  return iVMD0JMRUp_;
}

const float &VVV0Tree::iVMD1JMRUp() {
  if (not iVMD1JMRUp_isLoaded) {
    if (iVMD1JMRUp_branch != 0) {
      iVMD1JMRUp_branch->GetEntry(index);
    } else {
      printf("branch iVMD1JMRUp_branch does not exist!\n");
      exit(1);
    }
    iVMD1JMRUp_isLoaded = true;
  }
  return iVMD1JMRUp_;
}

const float &VVV0Tree::iVMD2JMRUp() {
  if (not iVMD2JMRUp_isLoaded) {
    if (iVMD2JMRUp_branch != 0) {
      iVMD2JMRUp_branch->GetEntry(index);
    } else {
      printf("branch iVMD2JMRUp_branch does not exist!\n");
      exit(1);
    }
    iVMD2JMRUp_isLoaded = true;
  }
  return iVMD2JMRUp_;
}

const float &VVV0Tree::iVMD3JMRUp() {
  if (not iVMD3JMRUp_isLoaded) {
    if (iVMD3JMRUp_branch != 0) {
      iVMD3JMRUp_branch->GetEntry(index);
    } else {
      printf("branch iVMD3JMRUp_branch does not exist!\n");
      exit(1);
    }
    iVMD3JMRUp_isLoaded = true;
  }
  return iVMD3JMRUp_;
}

const float &VVV0Tree::iVMD4JMRUp() {
  if (not iVMD4JMRUp_isLoaded) {
    if (iVMD4JMRUp_branch != 0) {
      iVMD4JMRUp_branch->GetEntry(index);
    } else {
      printf("branch iVMD4JMRUp_branch does not exist!\n");
      exit(1);
    }
    iVMD4JMRUp_isLoaded = true;
  }
  return iVMD4JMRUp_;
}

const float &VVV0Tree::iWMD0JMRUp() {
  if (not iWMD0JMRUp_isLoaded) {
    if (iWMD0JMRUp_branch != 0) {
      iWMD0JMRUp_branch->GetEntry(index);
    } else {
      printf("branch iWMD0JMRUp_branch does not exist!\n");
      exit(1);
    }
    iWMD0JMRUp_isLoaded = true;
  }
  return iWMD0JMRUp_;
}

const float &VVV0Tree::iWMD1JMRUp() {
  if (not iWMD1JMRUp_isLoaded) {
    if (iWMD1JMRUp_branch != 0) {
      iWMD1JMRUp_branch->GetEntry(index);
    } else {
      printf("branch iWMD1JMRUp_branch does not exist!\n");
      exit(1);
    }
    iWMD1JMRUp_isLoaded = true;
  }
  return iWMD1JMRUp_;
}

const float &VVV0Tree::iWMD2JMRUp() {
  if (not iWMD2JMRUp_isLoaded) {
    if (iWMD2JMRUp_branch != 0) {
      iWMD2JMRUp_branch->GetEntry(index);
    } else {
      printf("branch iWMD2JMRUp_branch does not exist!\n");
      exit(1);
    }
    iWMD2JMRUp_isLoaded = true;
  }
  return iWMD2JMRUp_;
}

const float &VVV0Tree::iWMD3JMRUp() {
  if (not iWMD3JMRUp_isLoaded) {
    if (iWMD3JMRUp_branch != 0) {
      iWMD3JMRUp_branch->GetEntry(index);
    } else {
      printf("branch iWMD3JMRUp_branch does not exist!\n");
      exit(1);
    }
    iWMD3JMRUp_isLoaded = true;
  }
  return iWMD3JMRUp_;
}

const float &VVV0Tree::iWMD4JMRUp() {
  if (not iWMD4JMRUp_isLoaded) {
    if (iWMD4JMRUp_branch != 0) {
      iWMD4JMRUp_branch->GetEntry(index);
    } else {
      printf("branch iWMD4JMRUp_branch does not exist!\n");
      exit(1);
    }
    iWMD4JMRUp_isLoaded = true;
  }
  return iWMD4JMRUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METJMRUp() {
  if (not METJMRUp_isLoaded) {
    if (METJMRUp_branch != 0) {
      METJMRUp_branch->GetEntry(index);
    } else {
      printf("branch METJMRUp_branch does not exist!\n");
      exit(1);
    }
    METJMRUp_isLoaded = true;
  }
  return *METJMRUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NuJMRUp() {
  if (not NuJMRUp_isLoaded) {
    if (NuJMRUp_branch != 0) {
      NuJMRUp_branch->GetEntry(index);
    } else {
      printf("branch NuJMRUp_branch does not exist!\n");
      exit(1);
    }
    NuJMRUp_isLoaded = true;
  }
  return *NuJMRUp_;
}

const int &VVV0Tree::NJJMRUp() {
  if (not NJJMRUp_isLoaded) {
    if (NJJMRUp_branch != 0) {
      NJJMRUp_branch->GetEntry(index);
    } else {
      printf("branch NJJMRUp_branch does not exist!\n");
      exit(1);
    }
    NJJMRUp_isLoaded = true;
  }
  return NJJMRUp_;
}

const int &VVV0Tree::NbLooseJMRUp() {
  if (not NbLooseJMRUp_isLoaded) {
    if (NbLooseJMRUp_branch != 0) {
      NbLooseJMRUp_branch->GetEntry(index);
    } else {
      printf("branch NbLooseJMRUp_branch does not exist!\n");
      exit(1);
    }
    NbLooseJMRUp_isLoaded = true;
  }
  return NbLooseJMRUp_;
}

const int &VVV0Tree::NbMediumJMRUp() {
  if (not NbMediumJMRUp_isLoaded) {
    if (NbMediumJMRUp_branch != 0) {
      NbMediumJMRUp_branch->GetEntry(index);
    } else {
      printf("branch NbMediumJMRUp_branch does not exist!\n");
      exit(1);
    }
    NbMediumJMRUp_isLoaded = true;
  }
  return NbMediumJMRUp_;
}

const int &VVV0Tree::NbTightJMRUp() {
  if (not NbTightJMRUp_isLoaded) {
    if (NbTightJMRUp_branch != 0) {
      NbTightJMRUp_branch->GetEntry(index);
    } else {
      printf("branch NbTightJMRUp_branch does not exist!\n");
      exit(1);
    }
    NbTightJMRUp_isLoaded = true;
  }
  return NbTightJMRUp_;
}

const int &VVV0Tree::NoORNbLooseJMRUp() {
  if (not NoORNbLooseJMRUp_isLoaded) {
    if (NoORNbLooseJMRUp_branch != 0) {
      NoORNbLooseJMRUp_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLooseJMRUp_branch does not exist!\n");
      exit(1);
    }
    NoORNbLooseJMRUp_isLoaded = true;
  }
  return NoORNbLooseJMRUp_;
}

const int &VVV0Tree::NoORNbMediumJMRUp() {
  if (not NoORNbMediumJMRUp_isLoaded) {
    if (NoORNbMediumJMRUp_branch != 0) {
      NoORNbMediumJMRUp_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumJMRUp_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumJMRUp_isLoaded = true;
  }
  return NoORNbMediumJMRUp_;
}

const int &VVV0Tree::NoORNbTightJMRUp() {
  if (not NoORNbTightJMRUp_isLoaded) {
    if (NoORNbTightJMRUp_branch != 0) {
      NoORNbTightJMRUp_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightJMRUp_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightJMRUp_isLoaded = true;
  }
  return NoORNbTightJMRUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0JMRUp() {
  if (not J0JMRUp_isLoaded) {
    if (J0JMRUp_branch != 0) {
      J0JMRUp_branch->GetEntry(index);
    } else {
      printf("branch J0JMRUp_branch does not exist!\n");
      exit(1);
    }
    J0JMRUp_isLoaded = true;
  }
  return *J0JMRUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1JMRUp() {
  if (not J1JMRUp_isLoaded) {
    if (J1JMRUp_branch != 0) {
      J1JMRUp_branch->GetEntry(index);
    } else {
      printf("branch J1JMRUp_branch does not exist!\n");
      exit(1);
    }
    J1JMRUp_isLoaded = true;
  }
  return *J1JMRUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2JMRUp() {
  if (not J2JMRUp_isLoaded) {
    if (J2JMRUp_branch != 0) {
      J2JMRUp_branch->GetEntry(index);
    } else {
      printf("branch J2JMRUp_branch does not exist!\n");
      exit(1);
    }
    J2JMRUp_isLoaded = true;
  }
  return *J2JMRUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3JMRUp() {
  if (not J3JMRUp_isLoaded) {
    if (J3JMRUp_branch != 0) {
      J3JMRUp_branch->GetEntry(index);
    } else {
      printf("branch J3JMRUp_branch does not exist!\n");
      exit(1);
    }
    J3JMRUp_isLoaded = true;
  }
  return *J3JMRUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4JMRUp() {
  if (not J4JMRUp_isLoaded) {
    if (J4JMRUp_branch != 0) {
      J4JMRUp_branch->GetEntry(index);
    } else {
      printf("branch J4JMRUp_branch does not exist!\n");
      exit(1);
    }
    J4JMRUp_isLoaded = true;
  }
  return *J4JMRUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5JMRUp() {
  if (not J5JMRUp_isLoaded) {
    if (J5JMRUp_branch != 0) {
      J5JMRUp_branch->GetEntry(index);
    } else {
      printf("branch J5JMRUp_branch does not exist!\n");
      exit(1);
    }
    J5JMRUp_isLoaded = true;
  }
  return *J5JMRUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6JMRUp() {
  if (not J6JMRUp_isLoaded) {
    if (J6JMRUp_branch != 0) {
      J6JMRUp_branch->GetEntry(index);
    } else {
      printf("branch J6JMRUp_branch does not exist!\n");
      exit(1);
    }
    J6JMRUp_isLoaded = true;
  }
  return *J6JMRUp_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7JMRUp() {
  if (not J7JMRUp_isLoaded) {
    if (J7JMRUp_branch != 0) {
      J7JMRUp_branch->GetEntry(index);
    } else {
      printf("branch J7JMRUp_branch does not exist!\n");
      exit(1);
    }
    J7JMRUp_isLoaded = true;
  }
  return *J7JMRUp_;
}

const vector<int> &VVV0Tree::NQJGenJMRUp() {
  if (not NQJGenJMRUp_isLoaded) {
    if (NQJGenJMRUp_branch != 0) {
      NQJGenJMRUp_branch->GetEntry(index);
    } else {
      printf("branch NQJGenJMRUp_branch does not exist!\n");
      exit(1);
    }
    NQJGenJMRUp_isLoaded = true;
  }
  return *NQJGenJMRUp_;
}

const vector<int> &VVV0Tree::NBJGenJMRUp() {
  if (not NBJGenJMRUp_isLoaded) {
    if (NBJGenJMRUp_branch != 0) {
      NBJGenJMRUp_branch->GetEntry(index);
    } else {
      printf("branch NBJGenJMRUp_branch does not exist!\n");
      exit(1);
    }
    NBJGenJMRUp_isLoaded = true;
  }
  return *NBJGenJMRUp_;
}

const vector<int> &VVV0Tree::NLJGenJMRUp() {
  if (not NLJGenJMRUp_isLoaded) {
    if (NLJGenJMRUp_branch != 0) {
      NLJGenJMRUp_branch->GetEntry(index);
    } else {
      printf("branch NLJGenJMRUp_branch does not exist!\n");
      exit(1);
    }
    NLJGenJMRUp_isLoaded = true;
  }
  return *NLJGenJMRUp_;
}

const float &VVV0Tree::MVVXJMRUp() {
  if (not MVVXJMRUp_isLoaded) {
    if (MVVXJMRUp_branch != 0) {
      MVVXJMRUp_branch->GetEntry(index);
    } else {
      printf("branch MVVXJMRUp_branch does not exist!\n");
      exit(1);
    }
    MVVXJMRUp_isLoaded = true;
  }
  return MVVXJMRUp_;
}

const float &VVV0Tree::PtVVXJMRUp() {
  if (not PtVVXJMRUp_isLoaded) {
    if (PtVVXJMRUp_branch != 0) {
      PtVVXJMRUp_branch->GetEntry(index);
    } else {
      printf("branch PtVVXJMRUp_branch does not exist!\n");
      exit(1);
    }
    PtVVXJMRUp_isLoaded = true;
  }
  return PtVVXJMRUp_;
}

const float &VVV0Tree::HTJMRUp() {
  if (not HTJMRUp_isLoaded) {
    if (HTJMRUp_branch != 0) {
      HTJMRUp_branch->GetEntry(index);
    } else {
      printf("branch HTJMRUp_branch does not exist!\n");
      exit(1);
    }
    HTJMRUp_isLoaded = true;
  }
  return HTJMRUp_;
}

const float &VVV0Tree::HTJJMRUp() {
  if (not HTJJMRUp_isLoaded) {
    if (HTJJMRUp_branch != 0) {
      HTJJMRUp_branch->GetEntry(index);
    } else {
      printf("branch HTJJMRUp_branch does not exist!\n");
      exit(1);
    }
    HTJJMRUp_isLoaded = true;
  }
  return HTJJMRUp_;
}

const float &VVV0Tree::HTFJJMRUp() {
  if (not HTFJJMRUp_isLoaded) {
    if (HTFJJMRUp_branch != 0) {
      HTFJJMRUp_branch->GetEntry(index);
    } else {
      printf("branch HTFJJMRUp_branch does not exist!\n");
      exit(1);
    }
    HTFJJMRUp_isLoaded = true;
  }
  return HTFJJMRUp_;
}

const float &VVV0Tree::SumPtFJJMRUp() {
  if (not SumPtFJJMRUp_isLoaded) {
    if (SumPtFJJMRUp_branch != 0) {
      SumPtFJJMRUp_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJJMRUp_branch does not exist!\n");
      exit(1);
    }
    SumPtFJJMRUp_isLoaded = true;
  }
  return SumPtFJJMRUp_;
}

const float &VVV0Tree::SumPtJJMRUp() {
  if (not SumPtJJMRUp_isLoaded) {
    if (SumPtJJMRUp_branch != 0) {
      SumPtJJMRUp_branch->GetEntry(index);
    } else {
      printf("branch SumPtJJMRUp_branch does not exist!\n");
      exit(1);
    }
    SumPtJJMRUp_isLoaded = true;
  }
  return SumPtJJMRUp_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsJMRDn() {
  if (not JsJMRDn_isLoaded) {
    if (JsJMRDn_branch != 0) {
      JsJMRDn_branch->GetEntry(index);
    } else {
      printf("branch JsJMRDn_branch does not exist!\n");
      exit(1);
    }
    JsJMRDn_isLoaded = true;
  }
  return *JsJMRDn_;
}

const int &VVV0Tree::NFJJMRDn() {
  if (not NFJJMRDn_isLoaded) {
    if (NFJJMRDn_branch != 0) {
      NFJJMRDn_branch->GetEntry(index);
    } else {
      printf("branch NFJJMRDn_branch does not exist!\n");
      exit(1);
    }
    NFJJMRDn_isLoaded = true;
  }
  return NFJJMRDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0JMRDn() {
  if (not FJ0JMRDn_isLoaded) {
    if (FJ0JMRDn_branch != 0) {
      FJ0JMRDn_branch->GetEntry(index);
    } else {
      printf("branch FJ0JMRDn_branch does not exist!\n");
      exit(1);
    }
    FJ0JMRDn_isLoaded = true;
  }
  return *FJ0JMRDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1JMRDn() {
  if (not FJ1JMRDn_isLoaded) {
    if (FJ1JMRDn_branch != 0) {
      FJ1JMRDn_branch->GetEntry(index);
    } else {
      printf("branch FJ1JMRDn_branch does not exist!\n");
      exit(1);
    }
    FJ1JMRDn_isLoaded = true;
  }
  return *FJ1JMRDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2JMRDn() {
  if (not FJ2JMRDn_isLoaded) {
    if (FJ2JMRDn_branch != 0) {
      FJ2JMRDn_branch->GetEntry(index);
    } else {
      printf("branch FJ2JMRDn_branch does not exist!\n");
      exit(1);
    }
    FJ2JMRDn_isLoaded = true;
  }
  return *FJ2JMRDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3JMRDn() {
  if (not FJ3JMRDn_isLoaded) {
    if (FJ3JMRDn_branch != 0) {
      FJ3JMRDn_branch->GetEntry(index);
    } else {
      printf("branch FJ3JMRDn_branch does not exist!\n");
      exit(1);
    }
    FJ3JMRDn_isLoaded = true;
  }
  return *FJ3JMRDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4JMRDn() {
  if (not FJ4JMRDn_isLoaded) {
    if (FJ4JMRDn_branch != 0) {
      FJ4JMRDn_branch->GetEntry(index);
    } else {
      printf("branch FJ4JMRDn_branch does not exist!\n");
      exit(1);
    }
    FJ4JMRDn_isLoaded = true;
  }
  return *FJ4JMRDn_;
}

const float &VVV0Tree::VMD0JMRDn() {
  if (not VMD0JMRDn_isLoaded) {
    if (VMD0JMRDn_branch != 0) {
      VMD0JMRDn_branch->GetEntry(index);
    } else {
      printf("branch VMD0JMRDn_branch does not exist!\n");
      exit(1);
    }
    VMD0JMRDn_isLoaded = true;
  }
  return VMD0JMRDn_;
}

const float &VVV0Tree::VMD1JMRDn() {
  if (not VMD1JMRDn_isLoaded) {
    if (VMD1JMRDn_branch != 0) {
      VMD1JMRDn_branch->GetEntry(index);
    } else {
      printf("branch VMD1JMRDn_branch does not exist!\n");
      exit(1);
    }
    VMD1JMRDn_isLoaded = true;
  }
  return VMD1JMRDn_;
}

const float &VVV0Tree::VMD2JMRDn() {
  if (not VMD2JMRDn_isLoaded) {
    if (VMD2JMRDn_branch != 0) {
      VMD2JMRDn_branch->GetEntry(index);
    } else {
      printf("branch VMD2JMRDn_branch does not exist!\n");
      exit(1);
    }
    VMD2JMRDn_isLoaded = true;
  }
  return VMD2JMRDn_;
}

const float &VVV0Tree::VMD3JMRDn() {
  if (not VMD3JMRDn_isLoaded) {
    if (VMD3JMRDn_branch != 0) {
      VMD3JMRDn_branch->GetEntry(index);
    } else {
      printf("branch VMD3JMRDn_branch does not exist!\n");
      exit(1);
    }
    VMD3JMRDn_isLoaded = true;
  }
  return VMD3JMRDn_;
}

const float &VVV0Tree::VMD4JMRDn() {
  if (not VMD4JMRDn_isLoaded) {
    if (VMD4JMRDn_branch != 0) {
      VMD4JMRDn_branch->GetEntry(index);
    } else {
      printf("branch VMD4JMRDn_branch does not exist!\n");
      exit(1);
    }
    VMD4JMRDn_isLoaded = true;
  }
  return VMD4JMRDn_;
}

const float &VVV0Tree::WMD0JMRDn() {
  if (not WMD0JMRDn_isLoaded) {
    if (WMD0JMRDn_branch != 0) {
      WMD0JMRDn_branch->GetEntry(index);
    } else {
      printf("branch WMD0JMRDn_branch does not exist!\n");
      exit(1);
    }
    WMD0JMRDn_isLoaded = true;
  }
  return WMD0JMRDn_;
}

const float &VVV0Tree::WMD1JMRDn() {
  if (not WMD1JMRDn_isLoaded) {
    if (WMD1JMRDn_branch != 0) {
      WMD1JMRDn_branch->GetEntry(index);
    } else {
      printf("branch WMD1JMRDn_branch does not exist!\n");
      exit(1);
    }
    WMD1JMRDn_isLoaded = true;
  }
  return WMD1JMRDn_;
}

const float &VVV0Tree::WMD2JMRDn() {
  if (not WMD2JMRDn_isLoaded) {
    if (WMD2JMRDn_branch != 0) {
      WMD2JMRDn_branch->GetEntry(index);
    } else {
      printf("branch WMD2JMRDn_branch does not exist!\n");
      exit(1);
    }
    WMD2JMRDn_isLoaded = true;
  }
  return WMD2JMRDn_;
}

const float &VVV0Tree::WMD3JMRDn() {
  if (not WMD3JMRDn_isLoaded) {
    if (WMD3JMRDn_branch != 0) {
      WMD3JMRDn_branch->GetEntry(index);
    } else {
      printf("branch WMD3JMRDn_branch does not exist!\n");
      exit(1);
    }
    WMD3JMRDn_isLoaded = true;
  }
  return WMD3JMRDn_;
}

const float &VVV0Tree::WMD4JMRDn() {
  if (not WMD4JMRDn_isLoaded) {
    if (WMD4JMRDn_branch != 0) {
      WMD4JMRDn_branch->GetEntry(index);
    } else {
      printf("branch WMD4JMRDn_branch does not exist!\n");
      exit(1);
    }
    WMD4JMRDn_isLoaded = true;
  }
  return WMD4JMRDn_;
}

const int &VVV0Tree::NQGen0JMRDn() {
  if (not NQGen0JMRDn_isLoaded) {
    if (NQGen0JMRDn_branch != 0) {
      NQGen0JMRDn_branch->GetEntry(index);
    } else {
      printf("branch NQGen0JMRDn_branch does not exist!\n");
      exit(1);
    }
    NQGen0JMRDn_isLoaded = true;
  }
  return NQGen0JMRDn_;
}

const int &VVV0Tree::NQGen1JMRDn() {
  if (not NQGen1JMRDn_isLoaded) {
    if (NQGen1JMRDn_branch != 0) {
      NQGen1JMRDn_branch->GetEntry(index);
    } else {
      printf("branch NQGen1JMRDn_branch does not exist!\n");
      exit(1);
    }
    NQGen1JMRDn_isLoaded = true;
  }
  return NQGen1JMRDn_;
}

const int &VVV0Tree::NQGen2JMRDn() {
  if (not NQGen2JMRDn_isLoaded) {
    if (NQGen2JMRDn_branch != 0) {
      NQGen2JMRDn_branch->GetEntry(index);
    } else {
      printf("branch NQGen2JMRDn_branch does not exist!\n");
      exit(1);
    }
    NQGen2JMRDn_isLoaded = true;
  }
  return NQGen2JMRDn_;
}

const int &VVV0Tree::NQGen3JMRDn() {
  if (not NQGen3JMRDn_isLoaded) {
    if (NQGen3JMRDn_branch != 0) {
      NQGen3JMRDn_branch->GetEntry(index);
    } else {
      printf("branch NQGen3JMRDn_branch does not exist!\n");
      exit(1);
    }
    NQGen3JMRDn_isLoaded = true;
  }
  return NQGen3JMRDn_;
}

const int &VVV0Tree::NQGen4JMRDn() {
  if (not NQGen4JMRDn_isLoaded) {
    if (NQGen4JMRDn_branch != 0) {
      NQGen4JMRDn_branch->GetEntry(index);
    } else {
      printf("branch NQGen4JMRDn_branch does not exist!\n");
      exit(1);
    }
    NQGen4JMRDn_isLoaded = true;
  }
  return NQGen4JMRDn_;
}

const int &VVV0Tree::NBGen0JMRDn() {
  if (not NBGen0JMRDn_isLoaded) {
    if (NBGen0JMRDn_branch != 0) {
      NBGen0JMRDn_branch->GetEntry(index);
    } else {
      printf("branch NBGen0JMRDn_branch does not exist!\n");
      exit(1);
    }
    NBGen0JMRDn_isLoaded = true;
  }
  return NBGen0JMRDn_;
}

const int &VVV0Tree::NBGen1JMRDn() {
  if (not NBGen1JMRDn_isLoaded) {
    if (NBGen1JMRDn_branch != 0) {
      NBGen1JMRDn_branch->GetEntry(index);
    } else {
      printf("branch NBGen1JMRDn_branch does not exist!\n");
      exit(1);
    }
    NBGen1JMRDn_isLoaded = true;
  }
  return NBGen1JMRDn_;
}

const int &VVV0Tree::NBGen2JMRDn() {
  if (not NBGen2JMRDn_isLoaded) {
    if (NBGen2JMRDn_branch != 0) {
      NBGen2JMRDn_branch->GetEntry(index);
    } else {
      printf("branch NBGen2JMRDn_branch does not exist!\n");
      exit(1);
    }
    NBGen2JMRDn_isLoaded = true;
  }
  return NBGen2JMRDn_;
}

const int &VVV0Tree::NBGen3JMRDn() {
  if (not NBGen3JMRDn_isLoaded) {
    if (NBGen3JMRDn_branch != 0) {
      NBGen3JMRDn_branch->GetEntry(index);
    } else {
      printf("branch NBGen3JMRDn_branch does not exist!\n");
      exit(1);
    }
    NBGen3JMRDn_isLoaded = true;
  }
  return NBGen3JMRDn_;
}

const int &VVV0Tree::NBGen4JMRDn() {
  if (not NBGen4JMRDn_isLoaded) {
    if (NBGen4JMRDn_branch != 0) {
      NBGen4JMRDn_branch->GetEntry(index);
    } else {
      printf("branch NBGen4JMRDn_branch does not exist!\n");
      exit(1);
    }
    NBGen4JMRDn_isLoaded = true;
  }
  return NBGen4JMRDn_;
}

const int &VVV0Tree::NLGen0JMRDn() {
  if (not NLGen0JMRDn_isLoaded) {
    if (NLGen0JMRDn_branch != 0) {
      NLGen0JMRDn_branch->GetEntry(index);
    } else {
      printf("branch NLGen0JMRDn_branch does not exist!\n");
      exit(1);
    }
    NLGen0JMRDn_isLoaded = true;
  }
  return NLGen0JMRDn_;
}

const int &VVV0Tree::NLGen1JMRDn() {
  if (not NLGen1JMRDn_isLoaded) {
    if (NLGen1JMRDn_branch != 0) {
      NLGen1JMRDn_branch->GetEntry(index);
    } else {
      printf("branch NLGen1JMRDn_branch does not exist!\n");
      exit(1);
    }
    NLGen1JMRDn_isLoaded = true;
  }
  return NLGen1JMRDn_;
}

const int &VVV0Tree::NLGen2JMRDn() {
  if (not NLGen2JMRDn_isLoaded) {
    if (NLGen2JMRDn_branch != 0) {
      NLGen2JMRDn_branch->GetEntry(index);
    } else {
      printf("branch NLGen2JMRDn_branch does not exist!\n");
      exit(1);
    }
    NLGen2JMRDn_isLoaded = true;
  }
  return NLGen2JMRDn_;
}

const int &VVV0Tree::NLGen3JMRDn() {
  if (not NLGen3JMRDn_isLoaded) {
    if (NLGen3JMRDn_branch != 0) {
      NLGen3JMRDn_branch->GetEntry(index);
    } else {
      printf("branch NLGen3JMRDn_branch does not exist!\n");
      exit(1);
    }
    NLGen3JMRDn_isLoaded = true;
  }
  return NLGen3JMRDn_;
}

const int &VVV0Tree::NLGen4JMRDn() {
  if (not NLGen4JMRDn_isLoaded) {
    if (NLGen4JMRDn_branch != 0) {
      NLGen4JMRDn_branch->GetEntry(index);
    } else {
      printf("branch NLGen4JMRDn_branch does not exist!\n");
      exit(1);
    }
    NLGen4JMRDn_isLoaded = true;
  }
  return NLGen4JMRDn_;
}

const int &VVV0Tree::NVQGen0JMRDn() {
  if (not NVQGen0JMRDn_isLoaded) {
    if (NVQGen0JMRDn_branch != 0) {
      NVQGen0JMRDn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0JMRDn_branch does not exist!\n");
      exit(1);
    }
    NVQGen0JMRDn_isLoaded = true;
  }
  return NVQGen0JMRDn_;
}

const int &VVV0Tree::NVQGen1JMRDn() {
  if (not NVQGen1JMRDn_isLoaded) {
    if (NVQGen1JMRDn_branch != 0) {
      NVQGen1JMRDn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1JMRDn_branch does not exist!\n");
      exit(1);
    }
    NVQGen1JMRDn_isLoaded = true;
  }
  return NVQGen1JMRDn_;
}

const int &VVV0Tree::NVQGen2JMRDn() {
  if (not NVQGen2JMRDn_isLoaded) {
    if (NVQGen2JMRDn_branch != 0) {
      NVQGen2JMRDn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2JMRDn_branch does not exist!\n");
      exit(1);
    }
    NVQGen2JMRDn_isLoaded = true;
  }
  return NVQGen2JMRDn_;
}

const int &VVV0Tree::NVQGen3JMRDn() {
  if (not NVQGen3JMRDn_isLoaded) {
    if (NVQGen3JMRDn_branch != 0) {
      NVQGen3JMRDn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3JMRDn_branch does not exist!\n");
      exit(1);
    }
    NVQGen3JMRDn_isLoaded = true;
  }
  return NVQGen3JMRDn_;
}

const int &VVV0Tree::NVQGen4JMRDn() {
  if (not NVQGen4JMRDn_isLoaded) {
    if (NVQGen4JMRDn_branch != 0) {
      NVQGen4JMRDn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4JMRDn_branch does not exist!\n");
      exit(1);
    }
    NVQGen4JMRDn_isLoaded = true;
  }
  return NVQGen4JMRDn_;
}

const int &VVV0Tree::NiFJJMRDn() {
  if (not NiFJJMRDn_isLoaded) {
    if (NiFJJMRDn_branch != 0) {
      NiFJJMRDn_branch->GetEntry(index);
    } else {
      printf("branch NiFJJMRDn_branch does not exist!\n");
      exit(1);
    }
    NiFJJMRDn_isLoaded = true;
  }
  return NiFJJMRDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0JMRDn() {
  if (not iFJ0JMRDn_isLoaded) {
    if (iFJ0JMRDn_branch != 0) {
      iFJ0JMRDn_branch->GetEntry(index);
    } else {
      printf("branch iFJ0JMRDn_branch does not exist!\n");
      exit(1);
    }
    iFJ0JMRDn_isLoaded = true;
  }
  return *iFJ0JMRDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1JMRDn() {
  if (not iFJ1JMRDn_isLoaded) {
    if (iFJ1JMRDn_branch != 0) {
      iFJ1JMRDn_branch->GetEntry(index);
    } else {
      printf("branch iFJ1JMRDn_branch does not exist!\n");
      exit(1);
    }
    iFJ1JMRDn_isLoaded = true;
  }
  return *iFJ1JMRDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2JMRDn() {
  if (not iFJ2JMRDn_isLoaded) {
    if (iFJ2JMRDn_branch != 0) {
      iFJ2JMRDn_branch->GetEntry(index);
    } else {
      printf("branch iFJ2JMRDn_branch does not exist!\n");
      exit(1);
    }
    iFJ2JMRDn_isLoaded = true;
  }
  return *iFJ2JMRDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3JMRDn() {
  if (not iFJ3JMRDn_isLoaded) {
    if (iFJ3JMRDn_branch != 0) {
      iFJ3JMRDn_branch->GetEntry(index);
    } else {
      printf("branch iFJ3JMRDn_branch does not exist!\n");
      exit(1);
    }
    iFJ3JMRDn_isLoaded = true;
  }
  return *iFJ3JMRDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4JMRDn() {
  if (not iFJ4JMRDn_isLoaded) {
    if (iFJ4JMRDn_branch != 0) {
      iFJ4JMRDn_branch->GetEntry(index);
    } else {
      printf("branch iFJ4JMRDn_branch does not exist!\n");
      exit(1);
    }
    iFJ4JMRDn_isLoaded = true;
  }
  return *iFJ4JMRDn_;
}

const float &VVV0Tree::iVMD0JMRDn() {
  if (not iVMD0JMRDn_isLoaded) {
    if (iVMD0JMRDn_branch != 0) {
      iVMD0JMRDn_branch->GetEntry(index);
    } else {
      printf("branch iVMD0JMRDn_branch does not exist!\n");
      exit(1);
    }
    iVMD0JMRDn_isLoaded = true;
  }
  return iVMD0JMRDn_;
}

const float &VVV0Tree::iVMD1JMRDn() {
  if (not iVMD1JMRDn_isLoaded) {
    if (iVMD1JMRDn_branch != 0) {
      iVMD1JMRDn_branch->GetEntry(index);
    } else {
      printf("branch iVMD1JMRDn_branch does not exist!\n");
      exit(1);
    }
    iVMD1JMRDn_isLoaded = true;
  }
  return iVMD1JMRDn_;
}

const float &VVV0Tree::iVMD2JMRDn() {
  if (not iVMD2JMRDn_isLoaded) {
    if (iVMD2JMRDn_branch != 0) {
      iVMD2JMRDn_branch->GetEntry(index);
    } else {
      printf("branch iVMD2JMRDn_branch does not exist!\n");
      exit(1);
    }
    iVMD2JMRDn_isLoaded = true;
  }
  return iVMD2JMRDn_;
}

const float &VVV0Tree::iVMD3JMRDn() {
  if (not iVMD3JMRDn_isLoaded) {
    if (iVMD3JMRDn_branch != 0) {
      iVMD3JMRDn_branch->GetEntry(index);
    } else {
      printf("branch iVMD3JMRDn_branch does not exist!\n");
      exit(1);
    }
    iVMD3JMRDn_isLoaded = true;
  }
  return iVMD3JMRDn_;
}

const float &VVV0Tree::iVMD4JMRDn() {
  if (not iVMD4JMRDn_isLoaded) {
    if (iVMD4JMRDn_branch != 0) {
      iVMD4JMRDn_branch->GetEntry(index);
    } else {
      printf("branch iVMD4JMRDn_branch does not exist!\n");
      exit(1);
    }
    iVMD4JMRDn_isLoaded = true;
  }
  return iVMD4JMRDn_;
}

const float &VVV0Tree::iWMD0JMRDn() {
  if (not iWMD0JMRDn_isLoaded) {
    if (iWMD0JMRDn_branch != 0) {
      iWMD0JMRDn_branch->GetEntry(index);
    } else {
      printf("branch iWMD0JMRDn_branch does not exist!\n");
      exit(1);
    }
    iWMD0JMRDn_isLoaded = true;
  }
  return iWMD0JMRDn_;
}

const float &VVV0Tree::iWMD1JMRDn() {
  if (not iWMD1JMRDn_isLoaded) {
    if (iWMD1JMRDn_branch != 0) {
      iWMD1JMRDn_branch->GetEntry(index);
    } else {
      printf("branch iWMD1JMRDn_branch does not exist!\n");
      exit(1);
    }
    iWMD1JMRDn_isLoaded = true;
  }
  return iWMD1JMRDn_;
}

const float &VVV0Tree::iWMD2JMRDn() {
  if (not iWMD2JMRDn_isLoaded) {
    if (iWMD2JMRDn_branch != 0) {
      iWMD2JMRDn_branch->GetEntry(index);
    } else {
      printf("branch iWMD2JMRDn_branch does not exist!\n");
      exit(1);
    }
    iWMD2JMRDn_isLoaded = true;
  }
  return iWMD2JMRDn_;
}

const float &VVV0Tree::iWMD3JMRDn() {
  if (not iWMD3JMRDn_isLoaded) {
    if (iWMD3JMRDn_branch != 0) {
      iWMD3JMRDn_branch->GetEntry(index);
    } else {
      printf("branch iWMD3JMRDn_branch does not exist!\n");
      exit(1);
    }
    iWMD3JMRDn_isLoaded = true;
  }
  return iWMD3JMRDn_;
}

const float &VVV0Tree::iWMD4JMRDn() {
  if (not iWMD4JMRDn_isLoaded) {
    if (iWMD4JMRDn_branch != 0) {
      iWMD4JMRDn_branch->GetEntry(index);
    } else {
      printf("branch iWMD4JMRDn_branch does not exist!\n");
      exit(1);
    }
    iWMD4JMRDn_isLoaded = true;
  }
  return iWMD4JMRDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METJMRDn() {
  if (not METJMRDn_isLoaded) {
    if (METJMRDn_branch != 0) {
      METJMRDn_branch->GetEntry(index);
    } else {
      printf("branch METJMRDn_branch does not exist!\n");
      exit(1);
    }
    METJMRDn_isLoaded = true;
  }
  return *METJMRDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NuJMRDn() {
  if (not NuJMRDn_isLoaded) {
    if (NuJMRDn_branch != 0) {
      NuJMRDn_branch->GetEntry(index);
    } else {
      printf("branch NuJMRDn_branch does not exist!\n");
      exit(1);
    }
    NuJMRDn_isLoaded = true;
  }
  return *NuJMRDn_;
}

const int &VVV0Tree::NJJMRDn() {
  if (not NJJMRDn_isLoaded) {
    if (NJJMRDn_branch != 0) {
      NJJMRDn_branch->GetEntry(index);
    } else {
      printf("branch NJJMRDn_branch does not exist!\n");
      exit(1);
    }
    NJJMRDn_isLoaded = true;
  }
  return NJJMRDn_;
}

const int &VVV0Tree::NbLooseJMRDn() {
  if (not NbLooseJMRDn_isLoaded) {
    if (NbLooseJMRDn_branch != 0) {
      NbLooseJMRDn_branch->GetEntry(index);
    } else {
      printf("branch NbLooseJMRDn_branch does not exist!\n");
      exit(1);
    }
    NbLooseJMRDn_isLoaded = true;
  }
  return NbLooseJMRDn_;
}

const int &VVV0Tree::NbMediumJMRDn() {
  if (not NbMediumJMRDn_isLoaded) {
    if (NbMediumJMRDn_branch != 0) {
      NbMediumJMRDn_branch->GetEntry(index);
    } else {
      printf("branch NbMediumJMRDn_branch does not exist!\n");
      exit(1);
    }
    NbMediumJMRDn_isLoaded = true;
  }
  return NbMediumJMRDn_;
}

const int &VVV0Tree::NbTightJMRDn() {
  if (not NbTightJMRDn_isLoaded) {
    if (NbTightJMRDn_branch != 0) {
      NbTightJMRDn_branch->GetEntry(index);
    } else {
      printf("branch NbTightJMRDn_branch does not exist!\n");
      exit(1);
    }
    NbTightJMRDn_isLoaded = true;
  }
  return NbTightJMRDn_;
}

const int &VVV0Tree::NoORNbLooseJMRDn() {
  if (not NoORNbLooseJMRDn_isLoaded) {
    if (NoORNbLooseJMRDn_branch != 0) {
      NoORNbLooseJMRDn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLooseJMRDn_branch does not exist!\n");
      exit(1);
    }
    NoORNbLooseJMRDn_isLoaded = true;
  }
  return NoORNbLooseJMRDn_;
}

const int &VVV0Tree::NoORNbMediumJMRDn() {
  if (not NoORNbMediumJMRDn_isLoaded) {
    if (NoORNbMediumJMRDn_branch != 0) {
      NoORNbMediumJMRDn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumJMRDn_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumJMRDn_isLoaded = true;
  }
  return NoORNbMediumJMRDn_;
}

const int &VVV0Tree::NoORNbTightJMRDn() {
  if (not NoORNbTightJMRDn_isLoaded) {
    if (NoORNbTightJMRDn_branch != 0) {
      NoORNbTightJMRDn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightJMRDn_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightJMRDn_isLoaded = true;
  }
  return NoORNbTightJMRDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0JMRDn() {
  if (not J0JMRDn_isLoaded) {
    if (J0JMRDn_branch != 0) {
      J0JMRDn_branch->GetEntry(index);
    } else {
      printf("branch J0JMRDn_branch does not exist!\n");
      exit(1);
    }
    J0JMRDn_isLoaded = true;
  }
  return *J0JMRDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1JMRDn() {
  if (not J1JMRDn_isLoaded) {
    if (J1JMRDn_branch != 0) {
      J1JMRDn_branch->GetEntry(index);
    } else {
      printf("branch J1JMRDn_branch does not exist!\n");
      exit(1);
    }
    J1JMRDn_isLoaded = true;
  }
  return *J1JMRDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2JMRDn() {
  if (not J2JMRDn_isLoaded) {
    if (J2JMRDn_branch != 0) {
      J2JMRDn_branch->GetEntry(index);
    } else {
      printf("branch J2JMRDn_branch does not exist!\n");
      exit(1);
    }
    J2JMRDn_isLoaded = true;
  }
  return *J2JMRDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3JMRDn() {
  if (not J3JMRDn_isLoaded) {
    if (J3JMRDn_branch != 0) {
      J3JMRDn_branch->GetEntry(index);
    } else {
      printf("branch J3JMRDn_branch does not exist!\n");
      exit(1);
    }
    J3JMRDn_isLoaded = true;
  }
  return *J3JMRDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4JMRDn() {
  if (not J4JMRDn_isLoaded) {
    if (J4JMRDn_branch != 0) {
      J4JMRDn_branch->GetEntry(index);
    } else {
      printf("branch J4JMRDn_branch does not exist!\n");
      exit(1);
    }
    J4JMRDn_isLoaded = true;
  }
  return *J4JMRDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5JMRDn() {
  if (not J5JMRDn_isLoaded) {
    if (J5JMRDn_branch != 0) {
      J5JMRDn_branch->GetEntry(index);
    } else {
      printf("branch J5JMRDn_branch does not exist!\n");
      exit(1);
    }
    J5JMRDn_isLoaded = true;
  }
  return *J5JMRDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6JMRDn() {
  if (not J6JMRDn_isLoaded) {
    if (J6JMRDn_branch != 0) {
      J6JMRDn_branch->GetEntry(index);
    } else {
      printf("branch J6JMRDn_branch does not exist!\n");
      exit(1);
    }
    J6JMRDn_isLoaded = true;
  }
  return *J6JMRDn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7JMRDn() {
  if (not J7JMRDn_isLoaded) {
    if (J7JMRDn_branch != 0) {
      J7JMRDn_branch->GetEntry(index);
    } else {
      printf("branch J7JMRDn_branch does not exist!\n");
      exit(1);
    }
    J7JMRDn_isLoaded = true;
  }
  return *J7JMRDn_;
}

const vector<int> &VVV0Tree::NQJGenJMRDn() {
  if (not NQJGenJMRDn_isLoaded) {
    if (NQJGenJMRDn_branch != 0) {
      NQJGenJMRDn_branch->GetEntry(index);
    } else {
      printf("branch NQJGenJMRDn_branch does not exist!\n");
      exit(1);
    }
    NQJGenJMRDn_isLoaded = true;
  }
  return *NQJGenJMRDn_;
}

const vector<int> &VVV0Tree::NBJGenJMRDn() {
  if (not NBJGenJMRDn_isLoaded) {
    if (NBJGenJMRDn_branch != 0) {
      NBJGenJMRDn_branch->GetEntry(index);
    } else {
      printf("branch NBJGenJMRDn_branch does not exist!\n");
      exit(1);
    }
    NBJGenJMRDn_isLoaded = true;
  }
  return *NBJGenJMRDn_;
}

const vector<int> &VVV0Tree::NLJGenJMRDn() {
  if (not NLJGenJMRDn_isLoaded) {
    if (NLJGenJMRDn_branch != 0) {
      NLJGenJMRDn_branch->GetEntry(index);
    } else {
      printf("branch NLJGenJMRDn_branch does not exist!\n");
      exit(1);
    }
    NLJGenJMRDn_isLoaded = true;
  }
  return *NLJGenJMRDn_;
}

const float &VVV0Tree::MVVXJMRDn() {
  if (not MVVXJMRDn_isLoaded) {
    if (MVVXJMRDn_branch != 0) {
      MVVXJMRDn_branch->GetEntry(index);
    } else {
      printf("branch MVVXJMRDn_branch does not exist!\n");
      exit(1);
    }
    MVVXJMRDn_isLoaded = true;
  }
  return MVVXJMRDn_;
}

const float &VVV0Tree::PtVVXJMRDn() {
  if (not PtVVXJMRDn_isLoaded) {
    if (PtVVXJMRDn_branch != 0) {
      PtVVXJMRDn_branch->GetEntry(index);
    } else {
      printf("branch PtVVXJMRDn_branch does not exist!\n");
      exit(1);
    }
    PtVVXJMRDn_isLoaded = true;
  }
  return PtVVXJMRDn_;
}

const float &VVV0Tree::HTJMRDn() {
  if (not HTJMRDn_isLoaded) {
    if (HTJMRDn_branch != 0) {
      HTJMRDn_branch->GetEntry(index);
    } else {
      printf("branch HTJMRDn_branch does not exist!\n");
      exit(1);
    }
    HTJMRDn_isLoaded = true;
  }
  return HTJMRDn_;
}

const float &VVV0Tree::HTJJMRDn() {
  if (not HTJJMRDn_isLoaded) {
    if (HTJJMRDn_branch != 0) {
      HTJJMRDn_branch->GetEntry(index);
    } else {
      printf("branch HTJJMRDn_branch does not exist!\n");
      exit(1);
    }
    HTJJMRDn_isLoaded = true;
  }
  return HTJJMRDn_;
}

const float &VVV0Tree::HTFJJMRDn() {
  if (not HTFJJMRDn_isLoaded) {
    if (HTFJJMRDn_branch != 0) {
      HTFJJMRDn_branch->GetEntry(index);
    } else {
      printf("branch HTFJJMRDn_branch does not exist!\n");
      exit(1);
    }
    HTFJJMRDn_isLoaded = true;
  }
  return HTFJJMRDn_;
}

const float &VVV0Tree::SumPtFJJMRDn() {
  if (not SumPtFJJMRDn_isLoaded) {
    if (SumPtFJJMRDn_branch != 0) {
      SumPtFJJMRDn_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJJMRDn_branch does not exist!\n");
      exit(1);
    }
    SumPtFJJMRDn_isLoaded = true;
  }
  return SumPtFJJMRDn_;
}

const float &VVV0Tree::SumPtJJMRDn() {
  if (not SumPtJJMRDn_isLoaded) {
    if (SumPtJJMRDn_branch != 0) {
      SumPtJJMRDn_branch->GetEntry(index);
    } else {
      printf("branch SumPtJJMRDn_branch does not exist!\n");
      exit(1);
    }
    SumPtJJMRDn_isLoaded = true;
  }
  return SumPtJJMRDn_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesAbsoluteStatup() {
  if (not JsjesAbsoluteStatup_isLoaded) {
    if (JsjesAbsoluteStatup_branch != 0) {
      JsjesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch JsjesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    JsjesAbsoluteStatup_isLoaded = true;
  }
  return *JsjesAbsoluteStatup_;
}

const int &VVV0Tree::NFJjesAbsoluteStatup() {
  if (not NFJjesAbsoluteStatup_isLoaded) {
    if (NFJjesAbsoluteStatup_branch != 0) {
      NFJjesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch NFJjesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    NFJjesAbsoluteStatup_isLoaded = true;
  }
  return NFJjesAbsoluteStatup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesAbsoluteStatup() {
  if (not FJ0jesAbsoluteStatup_isLoaded) {
    if (FJ0jesAbsoluteStatup_branch != 0) {
      FJ0jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    FJ0jesAbsoluteStatup_isLoaded = true;
  }
  return *FJ0jesAbsoluteStatup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesAbsoluteStatup() {
  if (not FJ1jesAbsoluteStatup_isLoaded) {
    if (FJ1jesAbsoluteStatup_branch != 0) {
      FJ1jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    FJ1jesAbsoluteStatup_isLoaded = true;
  }
  return *FJ1jesAbsoluteStatup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesAbsoluteStatup() {
  if (not FJ2jesAbsoluteStatup_isLoaded) {
    if (FJ2jesAbsoluteStatup_branch != 0) {
      FJ2jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    FJ2jesAbsoluteStatup_isLoaded = true;
  }
  return *FJ2jesAbsoluteStatup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesAbsoluteStatup() {
  if (not FJ3jesAbsoluteStatup_isLoaded) {
    if (FJ3jesAbsoluteStatup_branch != 0) {
      FJ3jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    FJ3jesAbsoluteStatup_isLoaded = true;
  }
  return *FJ3jesAbsoluteStatup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesAbsoluteStatup() {
  if (not FJ4jesAbsoluteStatup_isLoaded) {
    if (FJ4jesAbsoluteStatup_branch != 0) {
      FJ4jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    FJ4jesAbsoluteStatup_isLoaded = true;
  }
  return *FJ4jesAbsoluteStatup_;
}

const float &VVV0Tree::VMD0jesAbsoluteStatup() {
  if (not VMD0jesAbsoluteStatup_isLoaded) {
    if (VMD0jesAbsoluteStatup_branch != 0) {
      VMD0jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    VMD0jesAbsoluteStatup_isLoaded = true;
  }
  return VMD0jesAbsoluteStatup_;
}

const float &VVV0Tree::VMD1jesAbsoluteStatup() {
  if (not VMD1jesAbsoluteStatup_isLoaded) {
    if (VMD1jesAbsoluteStatup_branch != 0) {
      VMD1jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    VMD1jesAbsoluteStatup_isLoaded = true;
  }
  return VMD1jesAbsoluteStatup_;
}

const float &VVV0Tree::VMD2jesAbsoluteStatup() {
  if (not VMD2jesAbsoluteStatup_isLoaded) {
    if (VMD2jesAbsoluteStatup_branch != 0) {
      VMD2jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    VMD2jesAbsoluteStatup_isLoaded = true;
  }
  return VMD2jesAbsoluteStatup_;
}

const float &VVV0Tree::VMD3jesAbsoluteStatup() {
  if (not VMD3jesAbsoluteStatup_isLoaded) {
    if (VMD3jesAbsoluteStatup_branch != 0) {
      VMD3jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    VMD3jesAbsoluteStatup_isLoaded = true;
  }
  return VMD3jesAbsoluteStatup_;
}

const float &VVV0Tree::VMD4jesAbsoluteStatup() {
  if (not VMD4jesAbsoluteStatup_isLoaded) {
    if (VMD4jesAbsoluteStatup_branch != 0) {
      VMD4jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    VMD4jesAbsoluteStatup_isLoaded = true;
  }
  return VMD4jesAbsoluteStatup_;
}

const float &VVV0Tree::WMD0jesAbsoluteStatup() {
  if (not WMD0jesAbsoluteStatup_isLoaded) {
    if (WMD0jesAbsoluteStatup_branch != 0) {
      WMD0jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    WMD0jesAbsoluteStatup_isLoaded = true;
  }
  return WMD0jesAbsoluteStatup_;
}

const float &VVV0Tree::WMD1jesAbsoluteStatup() {
  if (not WMD1jesAbsoluteStatup_isLoaded) {
    if (WMD1jesAbsoluteStatup_branch != 0) {
      WMD1jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    WMD1jesAbsoluteStatup_isLoaded = true;
  }
  return WMD1jesAbsoluteStatup_;
}

const float &VVV0Tree::WMD2jesAbsoluteStatup() {
  if (not WMD2jesAbsoluteStatup_isLoaded) {
    if (WMD2jesAbsoluteStatup_branch != 0) {
      WMD2jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    WMD2jesAbsoluteStatup_isLoaded = true;
  }
  return WMD2jesAbsoluteStatup_;
}

const float &VVV0Tree::WMD3jesAbsoluteStatup() {
  if (not WMD3jesAbsoluteStatup_isLoaded) {
    if (WMD3jesAbsoluteStatup_branch != 0) {
      WMD3jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    WMD3jesAbsoluteStatup_isLoaded = true;
  }
  return WMD3jesAbsoluteStatup_;
}

const float &VVV0Tree::WMD4jesAbsoluteStatup() {
  if (not WMD4jesAbsoluteStatup_isLoaded) {
    if (WMD4jesAbsoluteStatup_branch != 0) {
      WMD4jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    WMD4jesAbsoluteStatup_isLoaded = true;
  }
  return WMD4jesAbsoluteStatup_;
}

const int &VVV0Tree::NQGen0jesAbsoluteStatup() {
  if (not NQGen0jesAbsoluteStatup_isLoaded) {
    if (NQGen0jesAbsoluteStatup_branch != 0) {
      NQGen0jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesAbsoluteStatup_isLoaded = true;
  }
  return NQGen0jesAbsoluteStatup_;
}

const int &VVV0Tree::NQGen1jesAbsoluteStatup() {
  if (not NQGen1jesAbsoluteStatup_isLoaded) {
    if (NQGen1jesAbsoluteStatup_branch != 0) {
      NQGen1jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesAbsoluteStatup_isLoaded = true;
  }
  return NQGen1jesAbsoluteStatup_;
}

const int &VVV0Tree::NQGen2jesAbsoluteStatup() {
  if (not NQGen2jesAbsoluteStatup_isLoaded) {
    if (NQGen2jesAbsoluteStatup_branch != 0) {
      NQGen2jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesAbsoluteStatup_isLoaded = true;
  }
  return NQGen2jesAbsoluteStatup_;
}

const int &VVV0Tree::NQGen3jesAbsoluteStatup() {
  if (not NQGen3jesAbsoluteStatup_isLoaded) {
    if (NQGen3jesAbsoluteStatup_branch != 0) {
      NQGen3jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesAbsoluteStatup_isLoaded = true;
  }
  return NQGen3jesAbsoluteStatup_;
}

const int &VVV0Tree::NQGen4jesAbsoluteStatup() {
  if (not NQGen4jesAbsoluteStatup_isLoaded) {
    if (NQGen4jesAbsoluteStatup_branch != 0) {
      NQGen4jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesAbsoluteStatup_isLoaded = true;
  }
  return NQGen4jesAbsoluteStatup_;
}

const int &VVV0Tree::NBGen0jesAbsoluteStatup() {
  if (not NBGen0jesAbsoluteStatup_isLoaded) {
    if (NBGen0jesAbsoluteStatup_branch != 0) {
      NBGen0jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesAbsoluteStatup_isLoaded = true;
  }
  return NBGen0jesAbsoluteStatup_;
}

const int &VVV0Tree::NBGen1jesAbsoluteStatup() {
  if (not NBGen1jesAbsoluteStatup_isLoaded) {
    if (NBGen1jesAbsoluteStatup_branch != 0) {
      NBGen1jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesAbsoluteStatup_isLoaded = true;
  }
  return NBGen1jesAbsoluteStatup_;
}

const int &VVV0Tree::NBGen2jesAbsoluteStatup() {
  if (not NBGen2jesAbsoluteStatup_isLoaded) {
    if (NBGen2jesAbsoluteStatup_branch != 0) {
      NBGen2jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesAbsoluteStatup_isLoaded = true;
  }
  return NBGen2jesAbsoluteStatup_;
}

const int &VVV0Tree::NBGen3jesAbsoluteStatup() {
  if (not NBGen3jesAbsoluteStatup_isLoaded) {
    if (NBGen3jesAbsoluteStatup_branch != 0) {
      NBGen3jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesAbsoluteStatup_isLoaded = true;
  }
  return NBGen3jesAbsoluteStatup_;
}

const int &VVV0Tree::NBGen4jesAbsoluteStatup() {
  if (not NBGen4jesAbsoluteStatup_isLoaded) {
    if (NBGen4jesAbsoluteStatup_branch != 0) {
      NBGen4jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesAbsoluteStatup_isLoaded = true;
  }
  return NBGen4jesAbsoluteStatup_;
}

const int &VVV0Tree::NLGen0jesAbsoluteStatup() {
  if (not NLGen0jesAbsoluteStatup_isLoaded) {
    if (NLGen0jesAbsoluteStatup_branch != 0) {
      NLGen0jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesAbsoluteStatup_isLoaded = true;
  }
  return NLGen0jesAbsoluteStatup_;
}

const int &VVV0Tree::NLGen1jesAbsoluteStatup() {
  if (not NLGen1jesAbsoluteStatup_isLoaded) {
    if (NLGen1jesAbsoluteStatup_branch != 0) {
      NLGen1jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesAbsoluteStatup_isLoaded = true;
  }
  return NLGen1jesAbsoluteStatup_;
}

const int &VVV0Tree::NLGen2jesAbsoluteStatup() {
  if (not NLGen2jesAbsoluteStatup_isLoaded) {
    if (NLGen2jesAbsoluteStatup_branch != 0) {
      NLGen2jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesAbsoluteStatup_isLoaded = true;
  }
  return NLGen2jesAbsoluteStatup_;
}

const int &VVV0Tree::NLGen3jesAbsoluteStatup() {
  if (not NLGen3jesAbsoluteStatup_isLoaded) {
    if (NLGen3jesAbsoluteStatup_branch != 0) {
      NLGen3jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesAbsoluteStatup_isLoaded = true;
  }
  return NLGen3jesAbsoluteStatup_;
}

const int &VVV0Tree::NLGen4jesAbsoluteStatup() {
  if (not NLGen4jesAbsoluteStatup_isLoaded) {
    if (NLGen4jesAbsoluteStatup_branch != 0) {
      NLGen4jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesAbsoluteStatup_isLoaded = true;
  }
  return NLGen4jesAbsoluteStatup_;
}

const int &VVV0Tree::NVQGen0jesAbsoluteStatup() {
  if (not NVQGen0jesAbsoluteStatup_isLoaded) {
    if (NVQGen0jesAbsoluteStatup_branch != 0) {
      NVQGen0jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesAbsoluteStatup_isLoaded = true;
  }
  return NVQGen0jesAbsoluteStatup_;
}

const int &VVV0Tree::NVQGen1jesAbsoluteStatup() {
  if (not NVQGen1jesAbsoluteStatup_isLoaded) {
    if (NVQGen1jesAbsoluteStatup_branch != 0) {
      NVQGen1jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesAbsoluteStatup_isLoaded = true;
  }
  return NVQGen1jesAbsoluteStatup_;
}

const int &VVV0Tree::NVQGen2jesAbsoluteStatup() {
  if (not NVQGen2jesAbsoluteStatup_isLoaded) {
    if (NVQGen2jesAbsoluteStatup_branch != 0) {
      NVQGen2jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesAbsoluteStatup_isLoaded = true;
  }
  return NVQGen2jesAbsoluteStatup_;
}

const int &VVV0Tree::NVQGen3jesAbsoluteStatup() {
  if (not NVQGen3jesAbsoluteStatup_isLoaded) {
    if (NVQGen3jesAbsoluteStatup_branch != 0) {
      NVQGen3jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesAbsoluteStatup_isLoaded = true;
  }
  return NVQGen3jesAbsoluteStatup_;
}

const int &VVV0Tree::NVQGen4jesAbsoluteStatup() {
  if (not NVQGen4jesAbsoluteStatup_isLoaded) {
    if (NVQGen4jesAbsoluteStatup_branch != 0) {
      NVQGen4jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesAbsoluteStatup_isLoaded = true;
  }
  return NVQGen4jesAbsoluteStatup_;
}

const int &VVV0Tree::NiFJjesAbsoluteStatup() {
  if (not NiFJjesAbsoluteStatup_isLoaded) {
    if (NiFJjesAbsoluteStatup_branch != 0) {
      NiFJjesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    NiFJjesAbsoluteStatup_isLoaded = true;
  }
  return NiFJjesAbsoluteStatup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesAbsoluteStatup() {
  if (not iFJ0jesAbsoluteStatup_isLoaded) {
    if (iFJ0jesAbsoluteStatup_branch != 0) {
      iFJ0jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesAbsoluteStatup_isLoaded = true;
  }
  return *iFJ0jesAbsoluteStatup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesAbsoluteStatup() {
  if (not iFJ1jesAbsoluteStatup_isLoaded) {
    if (iFJ1jesAbsoluteStatup_branch != 0) {
      iFJ1jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesAbsoluteStatup_isLoaded = true;
  }
  return *iFJ1jesAbsoluteStatup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesAbsoluteStatup() {
  if (not iFJ2jesAbsoluteStatup_isLoaded) {
    if (iFJ2jesAbsoluteStatup_branch != 0) {
      iFJ2jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesAbsoluteStatup_isLoaded = true;
  }
  return *iFJ2jesAbsoluteStatup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesAbsoluteStatup() {
  if (not iFJ3jesAbsoluteStatup_isLoaded) {
    if (iFJ3jesAbsoluteStatup_branch != 0) {
      iFJ3jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesAbsoluteStatup_isLoaded = true;
  }
  return *iFJ3jesAbsoluteStatup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesAbsoluteStatup() {
  if (not iFJ4jesAbsoluteStatup_isLoaded) {
    if (iFJ4jesAbsoluteStatup_branch != 0) {
      iFJ4jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesAbsoluteStatup_isLoaded = true;
  }
  return *iFJ4jesAbsoluteStatup_;
}

const float &VVV0Tree::iVMD0jesAbsoluteStatup() {
  if (not iVMD0jesAbsoluteStatup_isLoaded) {
    if (iVMD0jesAbsoluteStatup_branch != 0) {
      iVMD0jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesAbsoluteStatup_isLoaded = true;
  }
  return iVMD0jesAbsoluteStatup_;
}

const float &VVV0Tree::iVMD1jesAbsoluteStatup() {
  if (not iVMD1jesAbsoluteStatup_isLoaded) {
    if (iVMD1jesAbsoluteStatup_branch != 0) {
      iVMD1jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesAbsoluteStatup_isLoaded = true;
  }
  return iVMD1jesAbsoluteStatup_;
}

const float &VVV0Tree::iVMD2jesAbsoluteStatup() {
  if (not iVMD2jesAbsoluteStatup_isLoaded) {
    if (iVMD2jesAbsoluteStatup_branch != 0) {
      iVMD2jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesAbsoluteStatup_isLoaded = true;
  }
  return iVMD2jesAbsoluteStatup_;
}

const float &VVV0Tree::iVMD3jesAbsoluteStatup() {
  if (not iVMD3jesAbsoluteStatup_isLoaded) {
    if (iVMD3jesAbsoluteStatup_branch != 0) {
      iVMD3jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesAbsoluteStatup_isLoaded = true;
  }
  return iVMD3jesAbsoluteStatup_;
}

const float &VVV0Tree::iVMD4jesAbsoluteStatup() {
  if (not iVMD4jesAbsoluteStatup_isLoaded) {
    if (iVMD4jesAbsoluteStatup_branch != 0) {
      iVMD4jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesAbsoluteStatup_isLoaded = true;
  }
  return iVMD4jesAbsoluteStatup_;
}

const float &VVV0Tree::iWMD0jesAbsoluteStatup() {
  if (not iWMD0jesAbsoluteStatup_isLoaded) {
    if (iWMD0jesAbsoluteStatup_branch != 0) {
      iWMD0jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesAbsoluteStatup_isLoaded = true;
  }
  return iWMD0jesAbsoluteStatup_;
}

const float &VVV0Tree::iWMD1jesAbsoluteStatup() {
  if (not iWMD1jesAbsoluteStatup_isLoaded) {
    if (iWMD1jesAbsoluteStatup_branch != 0) {
      iWMD1jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesAbsoluteStatup_isLoaded = true;
  }
  return iWMD1jesAbsoluteStatup_;
}

const float &VVV0Tree::iWMD2jesAbsoluteStatup() {
  if (not iWMD2jesAbsoluteStatup_isLoaded) {
    if (iWMD2jesAbsoluteStatup_branch != 0) {
      iWMD2jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesAbsoluteStatup_isLoaded = true;
  }
  return iWMD2jesAbsoluteStatup_;
}

const float &VVV0Tree::iWMD3jesAbsoluteStatup() {
  if (not iWMD3jesAbsoluteStatup_isLoaded) {
    if (iWMD3jesAbsoluteStatup_branch != 0) {
      iWMD3jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesAbsoluteStatup_isLoaded = true;
  }
  return iWMD3jesAbsoluteStatup_;
}

const float &VVV0Tree::iWMD4jesAbsoluteStatup() {
  if (not iWMD4jesAbsoluteStatup_isLoaded) {
    if (iWMD4jesAbsoluteStatup_branch != 0) {
      iWMD4jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesAbsoluteStatup_isLoaded = true;
  }
  return iWMD4jesAbsoluteStatup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesAbsoluteStatup() {
  if (not METjesAbsoluteStatup_isLoaded) {
    if (METjesAbsoluteStatup_branch != 0) {
      METjesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch METjesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    METjesAbsoluteStatup_isLoaded = true;
  }
  return *METjesAbsoluteStatup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesAbsoluteStatup() {
  if (not NujesAbsoluteStatup_isLoaded) {
    if (NujesAbsoluteStatup_branch != 0) {
      NujesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch NujesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    NujesAbsoluteStatup_isLoaded = true;
  }
  return *NujesAbsoluteStatup_;
}

const int &VVV0Tree::NJjesAbsoluteStatup() {
  if (not NJjesAbsoluteStatup_isLoaded) {
    if (NJjesAbsoluteStatup_branch != 0) {
      NJjesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch NJjesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    NJjesAbsoluteStatup_isLoaded = true;
  }
  return NJjesAbsoluteStatup_;
}

const int &VVV0Tree::NbLoosejesAbsoluteStatup() {
  if (not NbLoosejesAbsoluteStatup_isLoaded) {
    if (NbLoosejesAbsoluteStatup_branch != 0) {
      NbLoosejesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesAbsoluteStatup_isLoaded = true;
  }
  return NbLoosejesAbsoluteStatup_;
}

const int &VVV0Tree::NbMediumjesAbsoluteStatup() {
  if (not NbMediumjesAbsoluteStatup_isLoaded) {
    if (NbMediumjesAbsoluteStatup_branch != 0) {
      NbMediumjesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesAbsoluteStatup_isLoaded = true;
  }
  return NbMediumjesAbsoluteStatup_;
}

const int &VVV0Tree::NbTightjesAbsoluteStatup() {
  if (not NbTightjesAbsoluteStatup_isLoaded) {
    if (NbTightjesAbsoluteStatup_branch != 0) {
      NbTightjesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    NbTightjesAbsoluteStatup_isLoaded = true;
  }
  return NbTightjesAbsoluteStatup_;
}

const int &VVV0Tree::NoORNbLoosejesAbsoluteStatup() {
  if (not NoORNbLoosejesAbsoluteStatup_isLoaded) {
    if (NoORNbLoosejesAbsoluteStatup_branch != 0) {
      NoORNbLoosejesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesAbsoluteStatup_isLoaded = true;
  }
  return NoORNbLoosejesAbsoluteStatup_;
}

const int &VVV0Tree::NoORNbMediumjesAbsoluteStatup() {
  if (not NoORNbMediumjesAbsoluteStatup_isLoaded) {
    if (NoORNbMediumjesAbsoluteStatup_branch != 0) {
      NoORNbMediumjesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesAbsoluteStatup_isLoaded = true;
  }
  return NoORNbMediumjesAbsoluteStatup_;
}

const int &VVV0Tree::NoORNbTightjesAbsoluteStatup() {
  if (not NoORNbTightjesAbsoluteStatup_isLoaded) {
    if (NoORNbTightjesAbsoluteStatup_branch != 0) {
      NoORNbTightjesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesAbsoluteStatup_isLoaded = true;
  }
  return NoORNbTightjesAbsoluteStatup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesAbsoluteStatup() {
  if (not J0jesAbsoluteStatup_isLoaded) {
    if (J0jesAbsoluteStatup_branch != 0) {
      J0jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch J0jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    J0jesAbsoluteStatup_isLoaded = true;
  }
  return *J0jesAbsoluteStatup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesAbsoluteStatup() {
  if (not J1jesAbsoluteStatup_isLoaded) {
    if (J1jesAbsoluteStatup_branch != 0) {
      J1jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch J1jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    J1jesAbsoluteStatup_isLoaded = true;
  }
  return *J1jesAbsoluteStatup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesAbsoluteStatup() {
  if (not J2jesAbsoluteStatup_isLoaded) {
    if (J2jesAbsoluteStatup_branch != 0) {
      J2jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch J2jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    J2jesAbsoluteStatup_isLoaded = true;
  }
  return *J2jesAbsoluteStatup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesAbsoluteStatup() {
  if (not J3jesAbsoluteStatup_isLoaded) {
    if (J3jesAbsoluteStatup_branch != 0) {
      J3jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch J3jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    J3jesAbsoluteStatup_isLoaded = true;
  }
  return *J3jesAbsoluteStatup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesAbsoluteStatup() {
  if (not J4jesAbsoluteStatup_isLoaded) {
    if (J4jesAbsoluteStatup_branch != 0) {
      J4jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch J4jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    J4jesAbsoluteStatup_isLoaded = true;
  }
  return *J4jesAbsoluteStatup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesAbsoluteStatup() {
  if (not J5jesAbsoluteStatup_isLoaded) {
    if (J5jesAbsoluteStatup_branch != 0) {
      J5jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch J5jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    J5jesAbsoluteStatup_isLoaded = true;
  }
  return *J5jesAbsoluteStatup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesAbsoluteStatup() {
  if (not J6jesAbsoluteStatup_isLoaded) {
    if (J6jesAbsoluteStatup_branch != 0) {
      J6jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch J6jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    J6jesAbsoluteStatup_isLoaded = true;
  }
  return *J6jesAbsoluteStatup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesAbsoluteStatup() {
  if (not J7jesAbsoluteStatup_isLoaded) {
    if (J7jesAbsoluteStatup_branch != 0) {
      J7jesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch J7jesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    J7jesAbsoluteStatup_isLoaded = true;
  }
  return *J7jesAbsoluteStatup_;
}

const vector<int> &VVV0Tree::NQJGenjesAbsoluteStatup() {
  if (not NQJGenjesAbsoluteStatup_isLoaded) {
    if (NQJGenjesAbsoluteStatup_branch != 0) {
      NQJGenjesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesAbsoluteStatup_isLoaded = true;
  }
  return *NQJGenjesAbsoluteStatup_;
}

const vector<int> &VVV0Tree::NBJGenjesAbsoluteStatup() {
  if (not NBJGenjesAbsoluteStatup_isLoaded) {
    if (NBJGenjesAbsoluteStatup_branch != 0) {
      NBJGenjesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesAbsoluteStatup_isLoaded = true;
  }
  return *NBJGenjesAbsoluteStatup_;
}

const vector<int> &VVV0Tree::NLJGenjesAbsoluteStatup() {
  if (not NLJGenjesAbsoluteStatup_isLoaded) {
    if (NLJGenjesAbsoluteStatup_branch != 0) {
      NLJGenjesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesAbsoluteStatup_isLoaded = true;
  }
  return *NLJGenjesAbsoluteStatup_;
}

const float &VVV0Tree::MVVXjesAbsoluteStatup() {
  if (not MVVXjesAbsoluteStatup_isLoaded) {
    if (MVVXjesAbsoluteStatup_branch != 0) {
      MVVXjesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    MVVXjesAbsoluteStatup_isLoaded = true;
  }
  return MVVXjesAbsoluteStatup_;
}

const float &VVV0Tree::PtVVXjesAbsoluteStatup() {
  if (not PtVVXjesAbsoluteStatup_isLoaded) {
    if (PtVVXjesAbsoluteStatup_branch != 0) {
      PtVVXjesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesAbsoluteStatup_isLoaded = true;
  }
  return PtVVXjesAbsoluteStatup_;
}

const float &VVV0Tree::HTjesAbsoluteStatup() {
  if (not HTjesAbsoluteStatup_isLoaded) {
    if (HTjesAbsoluteStatup_branch != 0) {
      HTjesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch HTjesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    HTjesAbsoluteStatup_isLoaded = true;
  }
  return HTjesAbsoluteStatup_;
}

const float &VVV0Tree::HTJjesAbsoluteStatup() {
  if (not HTJjesAbsoluteStatup_isLoaded) {
    if (HTJjesAbsoluteStatup_branch != 0) {
      HTJjesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch HTJjesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    HTJjesAbsoluteStatup_isLoaded = true;
  }
  return HTJjesAbsoluteStatup_;
}

const float &VVV0Tree::HTFJjesAbsoluteStatup() {
  if (not HTFJjesAbsoluteStatup_isLoaded) {
    if (HTFJjesAbsoluteStatup_branch != 0) {
      HTFJjesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    HTFJjesAbsoluteStatup_isLoaded = true;
  }
  return HTFJjesAbsoluteStatup_;
}

const float &VVV0Tree::SumPtFJjesAbsoluteStatup() {
  if (not SumPtFJjesAbsoluteStatup_isLoaded) {
    if (SumPtFJjesAbsoluteStatup_branch != 0) {
      SumPtFJjesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesAbsoluteStatup_isLoaded = true;
  }
  return SumPtFJjesAbsoluteStatup_;
}

const float &VVV0Tree::SumPtJjesAbsoluteStatup() {
  if (not SumPtJjesAbsoluteStatup_isLoaded) {
    if (SumPtJjesAbsoluteStatup_branch != 0) {
      SumPtJjesAbsoluteStatup_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesAbsoluteStatup_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesAbsoluteStatup_isLoaded = true;
  }
  return SumPtJjesAbsoluteStatup_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesAbsoluteStatdn() {
  if (not JsjesAbsoluteStatdn_isLoaded) {
    if (JsjesAbsoluteStatdn_branch != 0) {
      JsjesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch JsjesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    JsjesAbsoluteStatdn_isLoaded = true;
  }
  return *JsjesAbsoluteStatdn_;
}

const int &VVV0Tree::NFJjesAbsoluteStatdn() {
  if (not NFJjesAbsoluteStatdn_isLoaded) {
    if (NFJjesAbsoluteStatdn_branch != 0) {
      NFJjesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch NFJjesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    NFJjesAbsoluteStatdn_isLoaded = true;
  }
  return NFJjesAbsoluteStatdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesAbsoluteStatdn() {
  if (not FJ0jesAbsoluteStatdn_isLoaded) {
    if (FJ0jesAbsoluteStatdn_branch != 0) {
      FJ0jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    FJ0jesAbsoluteStatdn_isLoaded = true;
  }
  return *FJ0jesAbsoluteStatdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesAbsoluteStatdn() {
  if (not FJ1jesAbsoluteStatdn_isLoaded) {
    if (FJ1jesAbsoluteStatdn_branch != 0) {
      FJ1jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    FJ1jesAbsoluteStatdn_isLoaded = true;
  }
  return *FJ1jesAbsoluteStatdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesAbsoluteStatdn() {
  if (not FJ2jesAbsoluteStatdn_isLoaded) {
    if (FJ2jesAbsoluteStatdn_branch != 0) {
      FJ2jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    FJ2jesAbsoluteStatdn_isLoaded = true;
  }
  return *FJ2jesAbsoluteStatdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesAbsoluteStatdn() {
  if (not FJ3jesAbsoluteStatdn_isLoaded) {
    if (FJ3jesAbsoluteStatdn_branch != 0) {
      FJ3jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    FJ3jesAbsoluteStatdn_isLoaded = true;
  }
  return *FJ3jesAbsoluteStatdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesAbsoluteStatdn() {
  if (not FJ4jesAbsoluteStatdn_isLoaded) {
    if (FJ4jesAbsoluteStatdn_branch != 0) {
      FJ4jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    FJ4jesAbsoluteStatdn_isLoaded = true;
  }
  return *FJ4jesAbsoluteStatdn_;
}

const float &VVV0Tree::VMD0jesAbsoluteStatdn() {
  if (not VMD0jesAbsoluteStatdn_isLoaded) {
    if (VMD0jesAbsoluteStatdn_branch != 0) {
      VMD0jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    VMD0jesAbsoluteStatdn_isLoaded = true;
  }
  return VMD0jesAbsoluteStatdn_;
}

const float &VVV0Tree::VMD1jesAbsoluteStatdn() {
  if (not VMD1jesAbsoluteStatdn_isLoaded) {
    if (VMD1jesAbsoluteStatdn_branch != 0) {
      VMD1jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    VMD1jesAbsoluteStatdn_isLoaded = true;
  }
  return VMD1jesAbsoluteStatdn_;
}

const float &VVV0Tree::VMD2jesAbsoluteStatdn() {
  if (not VMD2jesAbsoluteStatdn_isLoaded) {
    if (VMD2jesAbsoluteStatdn_branch != 0) {
      VMD2jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    VMD2jesAbsoluteStatdn_isLoaded = true;
  }
  return VMD2jesAbsoluteStatdn_;
}

const float &VVV0Tree::VMD3jesAbsoluteStatdn() {
  if (not VMD3jesAbsoluteStatdn_isLoaded) {
    if (VMD3jesAbsoluteStatdn_branch != 0) {
      VMD3jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    VMD3jesAbsoluteStatdn_isLoaded = true;
  }
  return VMD3jesAbsoluteStatdn_;
}

const float &VVV0Tree::VMD4jesAbsoluteStatdn() {
  if (not VMD4jesAbsoluteStatdn_isLoaded) {
    if (VMD4jesAbsoluteStatdn_branch != 0) {
      VMD4jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    VMD4jesAbsoluteStatdn_isLoaded = true;
  }
  return VMD4jesAbsoluteStatdn_;
}

const float &VVV0Tree::WMD0jesAbsoluteStatdn() {
  if (not WMD0jesAbsoluteStatdn_isLoaded) {
    if (WMD0jesAbsoluteStatdn_branch != 0) {
      WMD0jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    WMD0jesAbsoluteStatdn_isLoaded = true;
  }
  return WMD0jesAbsoluteStatdn_;
}

const float &VVV0Tree::WMD1jesAbsoluteStatdn() {
  if (not WMD1jesAbsoluteStatdn_isLoaded) {
    if (WMD1jesAbsoluteStatdn_branch != 0) {
      WMD1jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    WMD1jesAbsoluteStatdn_isLoaded = true;
  }
  return WMD1jesAbsoluteStatdn_;
}

const float &VVV0Tree::WMD2jesAbsoluteStatdn() {
  if (not WMD2jesAbsoluteStatdn_isLoaded) {
    if (WMD2jesAbsoluteStatdn_branch != 0) {
      WMD2jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    WMD2jesAbsoluteStatdn_isLoaded = true;
  }
  return WMD2jesAbsoluteStatdn_;
}

const float &VVV0Tree::WMD3jesAbsoluteStatdn() {
  if (not WMD3jesAbsoluteStatdn_isLoaded) {
    if (WMD3jesAbsoluteStatdn_branch != 0) {
      WMD3jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    WMD3jesAbsoluteStatdn_isLoaded = true;
  }
  return WMD3jesAbsoluteStatdn_;
}

const float &VVV0Tree::WMD4jesAbsoluteStatdn() {
  if (not WMD4jesAbsoluteStatdn_isLoaded) {
    if (WMD4jesAbsoluteStatdn_branch != 0) {
      WMD4jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    WMD4jesAbsoluteStatdn_isLoaded = true;
  }
  return WMD4jesAbsoluteStatdn_;
}

const int &VVV0Tree::NQGen0jesAbsoluteStatdn() {
  if (not NQGen0jesAbsoluteStatdn_isLoaded) {
    if (NQGen0jesAbsoluteStatdn_branch != 0) {
      NQGen0jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesAbsoluteStatdn_isLoaded = true;
  }
  return NQGen0jesAbsoluteStatdn_;
}

const int &VVV0Tree::NQGen1jesAbsoluteStatdn() {
  if (not NQGen1jesAbsoluteStatdn_isLoaded) {
    if (NQGen1jesAbsoluteStatdn_branch != 0) {
      NQGen1jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesAbsoluteStatdn_isLoaded = true;
  }
  return NQGen1jesAbsoluteStatdn_;
}

const int &VVV0Tree::NQGen2jesAbsoluteStatdn() {
  if (not NQGen2jesAbsoluteStatdn_isLoaded) {
    if (NQGen2jesAbsoluteStatdn_branch != 0) {
      NQGen2jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesAbsoluteStatdn_isLoaded = true;
  }
  return NQGen2jesAbsoluteStatdn_;
}

const int &VVV0Tree::NQGen3jesAbsoluteStatdn() {
  if (not NQGen3jesAbsoluteStatdn_isLoaded) {
    if (NQGen3jesAbsoluteStatdn_branch != 0) {
      NQGen3jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesAbsoluteStatdn_isLoaded = true;
  }
  return NQGen3jesAbsoluteStatdn_;
}

const int &VVV0Tree::NQGen4jesAbsoluteStatdn() {
  if (not NQGen4jesAbsoluteStatdn_isLoaded) {
    if (NQGen4jesAbsoluteStatdn_branch != 0) {
      NQGen4jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesAbsoluteStatdn_isLoaded = true;
  }
  return NQGen4jesAbsoluteStatdn_;
}

const int &VVV0Tree::NBGen0jesAbsoluteStatdn() {
  if (not NBGen0jesAbsoluteStatdn_isLoaded) {
    if (NBGen0jesAbsoluteStatdn_branch != 0) {
      NBGen0jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesAbsoluteStatdn_isLoaded = true;
  }
  return NBGen0jesAbsoluteStatdn_;
}

const int &VVV0Tree::NBGen1jesAbsoluteStatdn() {
  if (not NBGen1jesAbsoluteStatdn_isLoaded) {
    if (NBGen1jesAbsoluteStatdn_branch != 0) {
      NBGen1jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesAbsoluteStatdn_isLoaded = true;
  }
  return NBGen1jesAbsoluteStatdn_;
}

const int &VVV0Tree::NBGen2jesAbsoluteStatdn() {
  if (not NBGen2jesAbsoluteStatdn_isLoaded) {
    if (NBGen2jesAbsoluteStatdn_branch != 0) {
      NBGen2jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesAbsoluteStatdn_isLoaded = true;
  }
  return NBGen2jesAbsoluteStatdn_;
}

const int &VVV0Tree::NBGen3jesAbsoluteStatdn() {
  if (not NBGen3jesAbsoluteStatdn_isLoaded) {
    if (NBGen3jesAbsoluteStatdn_branch != 0) {
      NBGen3jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesAbsoluteStatdn_isLoaded = true;
  }
  return NBGen3jesAbsoluteStatdn_;
}

const int &VVV0Tree::NBGen4jesAbsoluteStatdn() {
  if (not NBGen4jesAbsoluteStatdn_isLoaded) {
    if (NBGen4jesAbsoluteStatdn_branch != 0) {
      NBGen4jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesAbsoluteStatdn_isLoaded = true;
  }
  return NBGen4jesAbsoluteStatdn_;
}

const int &VVV0Tree::NLGen0jesAbsoluteStatdn() {
  if (not NLGen0jesAbsoluteStatdn_isLoaded) {
    if (NLGen0jesAbsoluteStatdn_branch != 0) {
      NLGen0jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesAbsoluteStatdn_isLoaded = true;
  }
  return NLGen0jesAbsoluteStatdn_;
}

const int &VVV0Tree::NLGen1jesAbsoluteStatdn() {
  if (not NLGen1jesAbsoluteStatdn_isLoaded) {
    if (NLGen1jesAbsoluteStatdn_branch != 0) {
      NLGen1jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesAbsoluteStatdn_isLoaded = true;
  }
  return NLGen1jesAbsoluteStatdn_;
}

const int &VVV0Tree::NLGen2jesAbsoluteStatdn() {
  if (not NLGen2jesAbsoluteStatdn_isLoaded) {
    if (NLGen2jesAbsoluteStatdn_branch != 0) {
      NLGen2jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesAbsoluteStatdn_isLoaded = true;
  }
  return NLGen2jesAbsoluteStatdn_;
}

const int &VVV0Tree::NLGen3jesAbsoluteStatdn() {
  if (not NLGen3jesAbsoluteStatdn_isLoaded) {
    if (NLGen3jesAbsoluteStatdn_branch != 0) {
      NLGen3jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesAbsoluteStatdn_isLoaded = true;
  }
  return NLGen3jesAbsoluteStatdn_;
}

const int &VVV0Tree::NLGen4jesAbsoluteStatdn() {
  if (not NLGen4jesAbsoluteStatdn_isLoaded) {
    if (NLGen4jesAbsoluteStatdn_branch != 0) {
      NLGen4jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesAbsoluteStatdn_isLoaded = true;
  }
  return NLGen4jesAbsoluteStatdn_;
}

const int &VVV0Tree::NVQGen0jesAbsoluteStatdn() {
  if (not NVQGen0jesAbsoluteStatdn_isLoaded) {
    if (NVQGen0jesAbsoluteStatdn_branch != 0) {
      NVQGen0jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesAbsoluteStatdn_isLoaded = true;
  }
  return NVQGen0jesAbsoluteStatdn_;
}

const int &VVV0Tree::NVQGen1jesAbsoluteStatdn() {
  if (not NVQGen1jesAbsoluteStatdn_isLoaded) {
    if (NVQGen1jesAbsoluteStatdn_branch != 0) {
      NVQGen1jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesAbsoluteStatdn_isLoaded = true;
  }
  return NVQGen1jesAbsoluteStatdn_;
}

const int &VVV0Tree::NVQGen2jesAbsoluteStatdn() {
  if (not NVQGen2jesAbsoluteStatdn_isLoaded) {
    if (NVQGen2jesAbsoluteStatdn_branch != 0) {
      NVQGen2jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesAbsoluteStatdn_isLoaded = true;
  }
  return NVQGen2jesAbsoluteStatdn_;
}

const int &VVV0Tree::NVQGen3jesAbsoluteStatdn() {
  if (not NVQGen3jesAbsoluteStatdn_isLoaded) {
    if (NVQGen3jesAbsoluteStatdn_branch != 0) {
      NVQGen3jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesAbsoluteStatdn_isLoaded = true;
  }
  return NVQGen3jesAbsoluteStatdn_;
}

const int &VVV0Tree::NVQGen4jesAbsoluteStatdn() {
  if (not NVQGen4jesAbsoluteStatdn_isLoaded) {
    if (NVQGen4jesAbsoluteStatdn_branch != 0) {
      NVQGen4jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesAbsoluteStatdn_isLoaded = true;
  }
  return NVQGen4jesAbsoluteStatdn_;
}

const int &VVV0Tree::NiFJjesAbsoluteStatdn() {
  if (not NiFJjesAbsoluteStatdn_isLoaded) {
    if (NiFJjesAbsoluteStatdn_branch != 0) {
      NiFJjesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    NiFJjesAbsoluteStatdn_isLoaded = true;
  }
  return NiFJjesAbsoluteStatdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesAbsoluteStatdn() {
  if (not iFJ0jesAbsoluteStatdn_isLoaded) {
    if (iFJ0jesAbsoluteStatdn_branch != 0) {
      iFJ0jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesAbsoluteStatdn_isLoaded = true;
  }
  return *iFJ0jesAbsoluteStatdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesAbsoluteStatdn() {
  if (not iFJ1jesAbsoluteStatdn_isLoaded) {
    if (iFJ1jesAbsoluteStatdn_branch != 0) {
      iFJ1jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesAbsoluteStatdn_isLoaded = true;
  }
  return *iFJ1jesAbsoluteStatdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesAbsoluteStatdn() {
  if (not iFJ2jesAbsoluteStatdn_isLoaded) {
    if (iFJ2jesAbsoluteStatdn_branch != 0) {
      iFJ2jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesAbsoluteStatdn_isLoaded = true;
  }
  return *iFJ2jesAbsoluteStatdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesAbsoluteStatdn() {
  if (not iFJ3jesAbsoluteStatdn_isLoaded) {
    if (iFJ3jesAbsoluteStatdn_branch != 0) {
      iFJ3jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesAbsoluteStatdn_isLoaded = true;
  }
  return *iFJ3jesAbsoluteStatdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesAbsoluteStatdn() {
  if (not iFJ4jesAbsoluteStatdn_isLoaded) {
    if (iFJ4jesAbsoluteStatdn_branch != 0) {
      iFJ4jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesAbsoluteStatdn_isLoaded = true;
  }
  return *iFJ4jesAbsoluteStatdn_;
}

const float &VVV0Tree::iVMD0jesAbsoluteStatdn() {
  if (not iVMD0jesAbsoluteStatdn_isLoaded) {
    if (iVMD0jesAbsoluteStatdn_branch != 0) {
      iVMD0jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesAbsoluteStatdn_isLoaded = true;
  }
  return iVMD0jesAbsoluteStatdn_;
}

const float &VVV0Tree::iVMD1jesAbsoluteStatdn() {
  if (not iVMD1jesAbsoluteStatdn_isLoaded) {
    if (iVMD1jesAbsoluteStatdn_branch != 0) {
      iVMD1jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesAbsoluteStatdn_isLoaded = true;
  }
  return iVMD1jesAbsoluteStatdn_;
}

const float &VVV0Tree::iVMD2jesAbsoluteStatdn() {
  if (not iVMD2jesAbsoluteStatdn_isLoaded) {
    if (iVMD2jesAbsoluteStatdn_branch != 0) {
      iVMD2jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesAbsoluteStatdn_isLoaded = true;
  }
  return iVMD2jesAbsoluteStatdn_;
}

const float &VVV0Tree::iVMD3jesAbsoluteStatdn() {
  if (not iVMD3jesAbsoluteStatdn_isLoaded) {
    if (iVMD3jesAbsoluteStatdn_branch != 0) {
      iVMD3jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesAbsoluteStatdn_isLoaded = true;
  }
  return iVMD3jesAbsoluteStatdn_;
}

const float &VVV0Tree::iVMD4jesAbsoluteStatdn() {
  if (not iVMD4jesAbsoluteStatdn_isLoaded) {
    if (iVMD4jesAbsoluteStatdn_branch != 0) {
      iVMD4jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesAbsoluteStatdn_isLoaded = true;
  }
  return iVMD4jesAbsoluteStatdn_;
}

const float &VVV0Tree::iWMD0jesAbsoluteStatdn() {
  if (not iWMD0jesAbsoluteStatdn_isLoaded) {
    if (iWMD0jesAbsoluteStatdn_branch != 0) {
      iWMD0jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesAbsoluteStatdn_isLoaded = true;
  }
  return iWMD0jesAbsoluteStatdn_;
}

const float &VVV0Tree::iWMD1jesAbsoluteStatdn() {
  if (not iWMD1jesAbsoluteStatdn_isLoaded) {
    if (iWMD1jesAbsoluteStatdn_branch != 0) {
      iWMD1jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesAbsoluteStatdn_isLoaded = true;
  }
  return iWMD1jesAbsoluteStatdn_;
}

const float &VVV0Tree::iWMD2jesAbsoluteStatdn() {
  if (not iWMD2jesAbsoluteStatdn_isLoaded) {
    if (iWMD2jesAbsoluteStatdn_branch != 0) {
      iWMD2jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesAbsoluteStatdn_isLoaded = true;
  }
  return iWMD2jesAbsoluteStatdn_;
}

const float &VVV0Tree::iWMD3jesAbsoluteStatdn() {
  if (not iWMD3jesAbsoluteStatdn_isLoaded) {
    if (iWMD3jesAbsoluteStatdn_branch != 0) {
      iWMD3jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesAbsoluteStatdn_isLoaded = true;
  }
  return iWMD3jesAbsoluteStatdn_;
}

const float &VVV0Tree::iWMD4jesAbsoluteStatdn() {
  if (not iWMD4jesAbsoluteStatdn_isLoaded) {
    if (iWMD4jesAbsoluteStatdn_branch != 0) {
      iWMD4jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesAbsoluteStatdn_isLoaded = true;
  }
  return iWMD4jesAbsoluteStatdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesAbsoluteStatdn() {
  if (not METjesAbsoluteStatdn_isLoaded) {
    if (METjesAbsoluteStatdn_branch != 0) {
      METjesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch METjesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    METjesAbsoluteStatdn_isLoaded = true;
  }
  return *METjesAbsoluteStatdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesAbsoluteStatdn() {
  if (not NujesAbsoluteStatdn_isLoaded) {
    if (NujesAbsoluteStatdn_branch != 0) {
      NujesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch NujesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    NujesAbsoluteStatdn_isLoaded = true;
  }
  return *NujesAbsoluteStatdn_;
}

const int &VVV0Tree::NJjesAbsoluteStatdn() {
  if (not NJjesAbsoluteStatdn_isLoaded) {
    if (NJjesAbsoluteStatdn_branch != 0) {
      NJjesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch NJjesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    NJjesAbsoluteStatdn_isLoaded = true;
  }
  return NJjesAbsoluteStatdn_;
}

const int &VVV0Tree::NbLoosejesAbsoluteStatdn() {
  if (not NbLoosejesAbsoluteStatdn_isLoaded) {
    if (NbLoosejesAbsoluteStatdn_branch != 0) {
      NbLoosejesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesAbsoluteStatdn_isLoaded = true;
  }
  return NbLoosejesAbsoluteStatdn_;
}

const int &VVV0Tree::NbMediumjesAbsoluteStatdn() {
  if (not NbMediumjesAbsoluteStatdn_isLoaded) {
    if (NbMediumjesAbsoluteStatdn_branch != 0) {
      NbMediumjesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesAbsoluteStatdn_isLoaded = true;
  }
  return NbMediumjesAbsoluteStatdn_;
}

const int &VVV0Tree::NbTightjesAbsoluteStatdn() {
  if (not NbTightjesAbsoluteStatdn_isLoaded) {
    if (NbTightjesAbsoluteStatdn_branch != 0) {
      NbTightjesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    NbTightjesAbsoluteStatdn_isLoaded = true;
  }
  return NbTightjesAbsoluteStatdn_;
}

const int &VVV0Tree::NoORNbLoosejesAbsoluteStatdn() {
  if (not NoORNbLoosejesAbsoluteStatdn_isLoaded) {
    if (NoORNbLoosejesAbsoluteStatdn_branch != 0) {
      NoORNbLoosejesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesAbsoluteStatdn_isLoaded = true;
  }
  return NoORNbLoosejesAbsoluteStatdn_;
}

const int &VVV0Tree::NoORNbMediumjesAbsoluteStatdn() {
  if (not NoORNbMediumjesAbsoluteStatdn_isLoaded) {
    if (NoORNbMediumjesAbsoluteStatdn_branch != 0) {
      NoORNbMediumjesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesAbsoluteStatdn_isLoaded = true;
  }
  return NoORNbMediumjesAbsoluteStatdn_;
}

const int &VVV0Tree::NoORNbTightjesAbsoluteStatdn() {
  if (not NoORNbTightjesAbsoluteStatdn_isLoaded) {
    if (NoORNbTightjesAbsoluteStatdn_branch != 0) {
      NoORNbTightjesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesAbsoluteStatdn_isLoaded = true;
  }
  return NoORNbTightjesAbsoluteStatdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesAbsoluteStatdn() {
  if (not J0jesAbsoluteStatdn_isLoaded) {
    if (J0jesAbsoluteStatdn_branch != 0) {
      J0jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch J0jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    J0jesAbsoluteStatdn_isLoaded = true;
  }
  return *J0jesAbsoluteStatdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesAbsoluteStatdn() {
  if (not J1jesAbsoluteStatdn_isLoaded) {
    if (J1jesAbsoluteStatdn_branch != 0) {
      J1jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch J1jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    J1jesAbsoluteStatdn_isLoaded = true;
  }
  return *J1jesAbsoluteStatdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesAbsoluteStatdn() {
  if (not J2jesAbsoluteStatdn_isLoaded) {
    if (J2jesAbsoluteStatdn_branch != 0) {
      J2jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch J2jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    J2jesAbsoluteStatdn_isLoaded = true;
  }
  return *J2jesAbsoluteStatdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesAbsoluteStatdn() {
  if (not J3jesAbsoluteStatdn_isLoaded) {
    if (J3jesAbsoluteStatdn_branch != 0) {
      J3jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch J3jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    J3jesAbsoluteStatdn_isLoaded = true;
  }
  return *J3jesAbsoluteStatdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesAbsoluteStatdn() {
  if (not J4jesAbsoluteStatdn_isLoaded) {
    if (J4jesAbsoluteStatdn_branch != 0) {
      J4jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch J4jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    J4jesAbsoluteStatdn_isLoaded = true;
  }
  return *J4jesAbsoluteStatdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesAbsoluteStatdn() {
  if (not J5jesAbsoluteStatdn_isLoaded) {
    if (J5jesAbsoluteStatdn_branch != 0) {
      J5jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch J5jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    J5jesAbsoluteStatdn_isLoaded = true;
  }
  return *J5jesAbsoluteStatdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesAbsoluteStatdn() {
  if (not J6jesAbsoluteStatdn_isLoaded) {
    if (J6jesAbsoluteStatdn_branch != 0) {
      J6jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch J6jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    J6jesAbsoluteStatdn_isLoaded = true;
  }
  return *J6jesAbsoluteStatdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesAbsoluteStatdn() {
  if (not J7jesAbsoluteStatdn_isLoaded) {
    if (J7jesAbsoluteStatdn_branch != 0) {
      J7jesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch J7jesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    J7jesAbsoluteStatdn_isLoaded = true;
  }
  return *J7jesAbsoluteStatdn_;
}

const vector<int> &VVV0Tree::NQJGenjesAbsoluteStatdn() {
  if (not NQJGenjesAbsoluteStatdn_isLoaded) {
    if (NQJGenjesAbsoluteStatdn_branch != 0) {
      NQJGenjesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesAbsoluteStatdn_isLoaded = true;
  }
  return *NQJGenjesAbsoluteStatdn_;
}

const vector<int> &VVV0Tree::NBJGenjesAbsoluteStatdn() {
  if (not NBJGenjesAbsoluteStatdn_isLoaded) {
    if (NBJGenjesAbsoluteStatdn_branch != 0) {
      NBJGenjesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesAbsoluteStatdn_isLoaded = true;
  }
  return *NBJGenjesAbsoluteStatdn_;
}

const vector<int> &VVV0Tree::NLJGenjesAbsoluteStatdn() {
  if (not NLJGenjesAbsoluteStatdn_isLoaded) {
    if (NLJGenjesAbsoluteStatdn_branch != 0) {
      NLJGenjesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesAbsoluteStatdn_isLoaded = true;
  }
  return *NLJGenjesAbsoluteStatdn_;
}

const float &VVV0Tree::MVVXjesAbsoluteStatdn() {
  if (not MVVXjesAbsoluteStatdn_isLoaded) {
    if (MVVXjesAbsoluteStatdn_branch != 0) {
      MVVXjesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    MVVXjesAbsoluteStatdn_isLoaded = true;
  }
  return MVVXjesAbsoluteStatdn_;
}

const float &VVV0Tree::PtVVXjesAbsoluteStatdn() {
  if (not PtVVXjesAbsoluteStatdn_isLoaded) {
    if (PtVVXjesAbsoluteStatdn_branch != 0) {
      PtVVXjesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesAbsoluteStatdn_isLoaded = true;
  }
  return PtVVXjesAbsoluteStatdn_;
}

const float &VVV0Tree::HTjesAbsoluteStatdn() {
  if (not HTjesAbsoluteStatdn_isLoaded) {
    if (HTjesAbsoluteStatdn_branch != 0) {
      HTjesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch HTjesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    HTjesAbsoluteStatdn_isLoaded = true;
  }
  return HTjesAbsoluteStatdn_;
}

const float &VVV0Tree::HTJjesAbsoluteStatdn() {
  if (not HTJjesAbsoluteStatdn_isLoaded) {
    if (HTJjesAbsoluteStatdn_branch != 0) {
      HTJjesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch HTJjesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    HTJjesAbsoluteStatdn_isLoaded = true;
  }
  return HTJjesAbsoluteStatdn_;
}

const float &VVV0Tree::HTFJjesAbsoluteStatdn() {
  if (not HTFJjesAbsoluteStatdn_isLoaded) {
    if (HTFJjesAbsoluteStatdn_branch != 0) {
      HTFJjesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    HTFJjesAbsoluteStatdn_isLoaded = true;
  }
  return HTFJjesAbsoluteStatdn_;
}

const float &VVV0Tree::SumPtFJjesAbsoluteStatdn() {
  if (not SumPtFJjesAbsoluteStatdn_isLoaded) {
    if (SumPtFJjesAbsoluteStatdn_branch != 0) {
      SumPtFJjesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesAbsoluteStatdn_isLoaded = true;
  }
  return SumPtFJjesAbsoluteStatdn_;
}

const float &VVV0Tree::SumPtJjesAbsoluteStatdn() {
  if (not SumPtJjesAbsoluteStatdn_isLoaded) {
    if (SumPtJjesAbsoluteStatdn_branch != 0) {
      SumPtJjesAbsoluteStatdn_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesAbsoluteStatdn_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesAbsoluteStatdn_isLoaded = true;
  }
  return SumPtJjesAbsoluteStatdn_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesAbsoluteScaleup() {
  if (not JsjesAbsoluteScaleup_isLoaded) {
    if (JsjesAbsoluteScaleup_branch != 0) {
      JsjesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch JsjesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    JsjesAbsoluteScaleup_isLoaded = true;
  }
  return *JsjesAbsoluteScaleup_;
}

const int &VVV0Tree::NFJjesAbsoluteScaleup() {
  if (not NFJjesAbsoluteScaleup_isLoaded) {
    if (NFJjesAbsoluteScaleup_branch != 0) {
      NFJjesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch NFJjesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    NFJjesAbsoluteScaleup_isLoaded = true;
  }
  return NFJjesAbsoluteScaleup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesAbsoluteScaleup() {
  if (not FJ0jesAbsoluteScaleup_isLoaded) {
    if (FJ0jesAbsoluteScaleup_branch != 0) {
      FJ0jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    FJ0jesAbsoluteScaleup_isLoaded = true;
  }
  return *FJ0jesAbsoluteScaleup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesAbsoluteScaleup() {
  if (not FJ1jesAbsoluteScaleup_isLoaded) {
    if (FJ1jesAbsoluteScaleup_branch != 0) {
      FJ1jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    FJ1jesAbsoluteScaleup_isLoaded = true;
  }
  return *FJ1jesAbsoluteScaleup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesAbsoluteScaleup() {
  if (not FJ2jesAbsoluteScaleup_isLoaded) {
    if (FJ2jesAbsoluteScaleup_branch != 0) {
      FJ2jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    FJ2jesAbsoluteScaleup_isLoaded = true;
  }
  return *FJ2jesAbsoluteScaleup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesAbsoluteScaleup() {
  if (not FJ3jesAbsoluteScaleup_isLoaded) {
    if (FJ3jesAbsoluteScaleup_branch != 0) {
      FJ3jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    FJ3jesAbsoluteScaleup_isLoaded = true;
  }
  return *FJ3jesAbsoluteScaleup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesAbsoluteScaleup() {
  if (not FJ4jesAbsoluteScaleup_isLoaded) {
    if (FJ4jesAbsoluteScaleup_branch != 0) {
      FJ4jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    FJ4jesAbsoluteScaleup_isLoaded = true;
  }
  return *FJ4jesAbsoluteScaleup_;
}

const float &VVV0Tree::VMD0jesAbsoluteScaleup() {
  if (not VMD0jesAbsoluteScaleup_isLoaded) {
    if (VMD0jesAbsoluteScaleup_branch != 0) {
      VMD0jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    VMD0jesAbsoluteScaleup_isLoaded = true;
  }
  return VMD0jesAbsoluteScaleup_;
}

const float &VVV0Tree::VMD1jesAbsoluteScaleup() {
  if (not VMD1jesAbsoluteScaleup_isLoaded) {
    if (VMD1jesAbsoluteScaleup_branch != 0) {
      VMD1jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    VMD1jesAbsoluteScaleup_isLoaded = true;
  }
  return VMD1jesAbsoluteScaleup_;
}

const float &VVV0Tree::VMD2jesAbsoluteScaleup() {
  if (not VMD2jesAbsoluteScaleup_isLoaded) {
    if (VMD2jesAbsoluteScaleup_branch != 0) {
      VMD2jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    VMD2jesAbsoluteScaleup_isLoaded = true;
  }
  return VMD2jesAbsoluteScaleup_;
}

const float &VVV0Tree::VMD3jesAbsoluteScaleup() {
  if (not VMD3jesAbsoluteScaleup_isLoaded) {
    if (VMD3jesAbsoluteScaleup_branch != 0) {
      VMD3jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    VMD3jesAbsoluteScaleup_isLoaded = true;
  }
  return VMD3jesAbsoluteScaleup_;
}

const float &VVV0Tree::VMD4jesAbsoluteScaleup() {
  if (not VMD4jesAbsoluteScaleup_isLoaded) {
    if (VMD4jesAbsoluteScaleup_branch != 0) {
      VMD4jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    VMD4jesAbsoluteScaleup_isLoaded = true;
  }
  return VMD4jesAbsoluteScaleup_;
}

const float &VVV0Tree::WMD0jesAbsoluteScaleup() {
  if (not WMD0jesAbsoluteScaleup_isLoaded) {
    if (WMD0jesAbsoluteScaleup_branch != 0) {
      WMD0jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    WMD0jesAbsoluteScaleup_isLoaded = true;
  }
  return WMD0jesAbsoluteScaleup_;
}

const float &VVV0Tree::WMD1jesAbsoluteScaleup() {
  if (not WMD1jesAbsoluteScaleup_isLoaded) {
    if (WMD1jesAbsoluteScaleup_branch != 0) {
      WMD1jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    WMD1jesAbsoluteScaleup_isLoaded = true;
  }
  return WMD1jesAbsoluteScaleup_;
}

const float &VVV0Tree::WMD2jesAbsoluteScaleup() {
  if (not WMD2jesAbsoluteScaleup_isLoaded) {
    if (WMD2jesAbsoluteScaleup_branch != 0) {
      WMD2jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    WMD2jesAbsoluteScaleup_isLoaded = true;
  }
  return WMD2jesAbsoluteScaleup_;
}

const float &VVV0Tree::WMD3jesAbsoluteScaleup() {
  if (not WMD3jesAbsoluteScaleup_isLoaded) {
    if (WMD3jesAbsoluteScaleup_branch != 0) {
      WMD3jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    WMD3jesAbsoluteScaleup_isLoaded = true;
  }
  return WMD3jesAbsoluteScaleup_;
}

const float &VVV0Tree::WMD4jesAbsoluteScaleup() {
  if (not WMD4jesAbsoluteScaleup_isLoaded) {
    if (WMD4jesAbsoluteScaleup_branch != 0) {
      WMD4jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    WMD4jesAbsoluteScaleup_isLoaded = true;
  }
  return WMD4jesAbsoluteScaleup_;
}

const int &VVV0Tree::NQGen0jesAbsoluteScaleup() {
  if (not NQGen0jesAbsoluteScaleup_isLoaded) {
    if (NQGen0jesAbsoluteScaleup_branch != 0) {
      NQGen0jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesAbsoluteScaleup_isLoaded = true;
  }
  return NQGen0jesAbsoluteScaleup_;
}

const int &VVV0Tree::NQGen1jesAbsoluteScaleup() {
  if (not NQGen1jesAbsoluteScaleup_isLoaded) {
    if (NQGen1jesAbsoluteScaleup_branch != 0) {
      NQGen1jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesAbsoluteScaleup_isLoaded = true;
  }
  return NQGen1jesAbsoluteScaleup_;
}

const int &VVV0Tree::NQGen2jesAbsoluteScaleup() {
  if (not NQGen2jesAbsoluteScaleup_isLoaded) {
    if (NQGen2jesAbsoluteScaleup_branch != 0) {
      NQGen2jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesAbsoluteScaleup_isLoaded = true;
  }
  return NQGen2jesAbsoluteScaleup_;
}

const int &VVV0Tree::NQGen3jesAbsoluteScaleup() {
  if (not NQGen3jesAbsoluteScaleup_isLoaded) {
    if (NQGen3jesAbsoluteScaleup_branch != 0) {
      NQGen3jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesAbsoluteScaleup_isLoaded = true;
  }
  return NQGen3jesAbsoluteScaleup_;
}

const int &VVV0Tree::NQGen4jesAbsoluteScaleup() {
  if (not NQGen4jesAbsoluteScaleup_isLoaded) {
    if (NQGen4jesAbsoluteScaleup_branch != 0) {
      NQGen4jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesAbsoluteScaleup_isLoaded = true;
  }
  return NQGen4jesAbsoluteScaleup_;
}

const int &VVV0Tree::NBGen0jesAbsoluteScaleup() {
  if (not NBGen0jesAbsoluteScaleup_isLoaded) {
    if (NBGen0jesAbsoluteScaleup_branch != 0) {
      NBGen0jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesAbsoluteScaleup_isLoaded = true;
  }
  return NBGen0jesAbsoluteScaleup_;
}

const int &VVV0Tree::NBGen1jesAbsoluteScaleup() {
  if (not NBGen1jesAbsoluteScaleup_isLoaded) {
    if (NBGen1jesAbsoluteScaleup_branch != 0) {
      NBGen1jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesAbsoluteScaleup_isLoaded = true;
  }
  return NBGen1jesAbsoluteScaleup_;
}

const int &VVV0Tree::NBGen2jesAbsoluteScaleup() {
  if (not NBGen2jesAbsoluteScaleup_isLoaded) {
    if (NBGen2jesAbsoluteScaleup_branch != 0) {
      NBGen2jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesAbsoluteScaleup_isLoaded = true;
  }
  return NBGen2jesAbsoluteScaleup_;
}

const int &VVV0Tree::NBGen3jesAbsoluteScaleup() {
  if (not NBGen3jesAbsoluteScaleup_isLoaded) {
    if (NBGen3jesAbsoluteScaleup_branch != 0) {
      NBGen3jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesAbsoluteScaleup_isLoaded = true;
  }
  return NBGen3jesAbsoluteScaleup_;
}

const int &VVV0Tree::NBGen4jesAbsoluteScaleup() {
  if (not NBGen4jesAbsoluteScaleup_isLoaded) {
    if (NBGen4jesAbsoluteScaleup_branch != 0) {
      NBGen4jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesAbsoluteScaleup_isLoaded = true;
  }
  return NBGen4jesAbsoluteScaleup_;
}

const int &VVV0Tree::NLGen0jesAbsoluteScaleup() {
  if (not NLGen0jesAbsoluteScaleup_isLoaded) {
    if (NLGen0jesAbsoluteScaleup_branch != 0) {
      NLGen0jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesAbsoluteScaleup_isLoaded = true;
  }
  return NLGen0jesAbsoluteScaleup_;
}

const int &VVV0Tree::NLGen1jesAbsoluteScaleup() {
  if (not NLGen1jesAbsoluteScaleup_isLoaded) {
    if (NLGen1jesAbsoluteScaleup_branch != 0) {
      NLGen1jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesAbsoluteScaleup_isLoaded = true;
  }
  return NLGen1jesAbsoluteScaleup_;
}

const int &VVV0Tree::NLGen2jesAbsoluteScaleup() {
  if (not NLGen2jesAbsoluteScaleup_isLoaded) {
    if (NLGen2jesAbsoluteScaleup_branch != 0) {
      NLGen2jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesAbsoluteScaleup_isLoaded = true;
  }
  return NLGen2jesAbsoluteScaleup_;
}

const int &VVV0Tree::NLGen3jesAbsoluteScaleup() {
  if (not NLGen3jesAbsoluteScaleup_isLoaded) {
    if (NLGen3jesAbsoluteScaleup_branch != 0) {
      NLGen3jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesAbsoluteScaleup_isLoaded = true;
  }
  return NLGen3jesAbsoluteScaleup_;
}

const int &VVV0Tree::NLGen4jesAbsoluteScaleup() {
  if (not NLGen4jesAbsoluteScaleup_isLoaded) {
    if (NLGen4jesAbsoluteScaleup_branch != 0) {
      NLGen4jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesAbsoluteScaleup_isLoaded = true;
  }
  return NLGen4jesAbsoluteScaleup_;
}

const int &VVV0Tree::NVQGen0jesAbsoluteScaleup() {
  if (not NVQGen0jesAbsoluteScaleup_isLoaded) {
    if (NVQGen0jesAbsoluteScaleup_branch != 0) {
      NVQGen0jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesAbsoluteScaleup_isLoaded = true;
  }
  return NVQGen0jesAbsoluteScaleup_;
}

const int &VVV0Tree::NVQGen1jesAbsoluteScaleup() {
  if (not NVQGen1jesAbsoluteScaleup_isLoaded) {
    if (NVQGen1jesAbsoluteScaleup_branch != 0) {
      NVQGen1jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesAbsoluteScaleup_isLoaded = true;
  }
  return NVQGen1jesAbsoluteScaleup_;
}

const int &VVV0Tree::NVQGen2jesAbsoluteScaleup() {
  if (not NVQGen2jesAbsoluteScaleup_isLoaded) {
    if (NVQGen2jesAbsoluteScaleup_branch != 0) {
      NVQGen2jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesAbsoluteScaleup_isLoaded = true;
  }
  return NVQGen2jesAbsoluteScaleup_;
}

const int &VVV0Tree::NVQGen3jesAbsoluteScaleup() {
  if (not NVQGen3jesAbsoluteScaleup_isLoaded) {
    if (NVQGen3jesAbsoluteScaleup_branch != 0) {
      NVQGen3jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesAbsoluteScaleup_isLoaded = true;
  }
  return NVQGen3jesAbsoluteScaleup_;
}

const int &VVV0Tree::NVQGen4jesAbsoluteScaleup() {
  if (not NVQGen4jesAbsoluteScaleup_isLoaded) {
    if (NVQGen4jesAbsoluteScaleup_branch != 0) {
      NVQGen4jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesAbsoluteScaleup_isLoaded = true;
  }
  return NVQGen4jesAbsoluteScaleup_;
}

const int &VVV0Tree::NiFJjesAbsoluteScaleup() {
  if (not NiFJjesAbsoluteScaleup_isLoaded) {
    if (NiFJjesAbsoluteScaleup_branch != 0) {
      NiFJjesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    NiFJjesAbsoluteScaleup_isLoaded = true;
  }
  return NiFJjesAbsoluteScaleup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesAbsoluteScaleup() {
  if (not iFJ0jesAbsoluteScaleup_isLoaded) {
    if (iFJ0jesAbsoluteScaleup_branch != 0) {
      iFJ0jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesAbsoluteScaleup_isLoaded = true;
  }
  return *iFJ0jesAbsoluteScaleup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesAbsoluteScaleup() {
  if (not iFJ1jesAbsoluteScaleup_isLoaded) {
    if (iFJ1jesAbsoluteScaleup_branch != 0) {
      iFJ1jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesAbsoluteScaleup_isLoaded = true;
  }
  return *iFJ1jesAbsoluteScaleup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesAbsoluteScaleup() {
  if (not iFJ2jesAbsoluteScaleup_isLoaded) {
    if (iFJ2jesAbsoluteScaleup_branch != 0) {
      iFJ2jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesAbsoluteScaleup_isLoaded = true;
  }
  return *iFJ2jesAbsoluteScaleup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesAbsoluteScaleup() {
  if (not iFJ3jesAbsoluteScaleup_isLoaded) {
    if (iFJ3jesAbsoluteScaleup_branch != 0) {
      iFJ3jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesAbsoluteScaleup_isLoaded = true;
  }
  return *iFJ3jesAbsoluteScaleup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesAbsoluteScaleup() {
  if (not iFJ4jesAbsoluteScaleup_isLoaded) {
    if (iFJ4jesAbsoluteScaleup_branch != 0) {
      iFJ4jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesAbsoluteScaleup_isLoaded = true;
  }
  return *iFJ4jesAbsoluteScaleup_;
}

const float &VVV0Tree::iVMD0jesAbsoluteScaleup() {
  if (not iVMD0jesAbsoluteScaleup_isLoaded) {
    if (iVMD0jesAbsoluteScaleup_branch != 0) {
      iVMD0jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesAbsoluteScaleup_isLoaded = true;
  }
  return iVMD0jesAbsoluteScaleup_;
}

const float &VVV0Tree::iVMD1jesAbsoluteScaleup() {
  if (not iVMD1jesAbsoluteScaleup_isLoaded) {
    if (iVMD1jesAbsoluteScaleup_branch != 0) {
      iVMD1jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesAbsoluteScaleup_isLoaded = true;
  }
  return iVMD1jesAbsoluteScaleup_;
}

const float &VVV0Tree::iVMD2jesAbsoluteScaleup() {
  if (not iVMD2jesAbsoluteScaleup_isLoaded) {
    if (iVMD2jesAbsoluteScaleup_branch != 0) {
      iVMD2jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesAbsoluteScaleup_isLoaded = true;
  }
  return iVMD2jesAbsoluteScaleup_;
}

const float &VVV0Tree::iVMD3jesAbsoluteScaleup() {
  if (not iVMD3jesAbsoluteScaleup_isLoaded) {
    if (iVMD3jesAbsoluteScaleup_branch != 0) {
      iVMD3jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesAbsoluteScaleup_isLoaded = true;
  }
  return iVMD3jesAbsoluteScaleup_;
}

const float &VVV0Tree::iVMD4jesAbsoluteScaleup() {
  if (not iVMD4jesAbsoluteScaleup_isLoaded) {
    if (iVMD4jesAbsoluteScaleup_branch != 0) {
      iVMD4jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesAbsoluteScaleup_isLoaded = true;
  }
  return iVMD4jesAbsoluteScaleup_;
}

const float &VVV0Tree::iWMD0jesAbsoluteScaleup() {
  if (not iWMD0jesAbsoluteScaleup_isLoaded) {
    if (iWMD0jesAbsoluteScaleup_branch != 0) {
      iWMD0jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesAbsoluteScaleup_isLoaded = true;
  }
  return iWMD0jesAbsoluteScaleup_;
}

const float &VVV0Tree::iWMD1jesAbsoluteScaleup() {
  if (not iWMD1jesAbsoluteScaleup_isLoaded) {
    if (iWMD1jesAbsoluteScaleup_branch != 0) {
      iWMD1jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesAbsoluteScaleup_isLoaded = true;
  }
  return iWMD1jesAbsoluteScaleup_;
}

const float &VVV0Tree::iWMD2jesAbsoluteScaleup() {
  if (not iWMD2jesAbsoluteScaleup_isLoaded) {
    if (iWMD2jesAbsoluteScaleup_branch != 0) {
      iWMD2jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesAbsoluteScaleup_isLoaded = true;
  }
  return iWMD2jesAbsoluteScaleup_;
}

const float &VVV0Tree::iWMD3jesAbsoluteScaleup() {
  if (not iWMD3jesAbsoluteScaleup_isLoaded) {
    if (iWMD3jesAbsoluteScaleup_branch != 0) {
      iWMD3jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesAbsoluteScaleup_isLoaded = true;
  }
  return iWMD3jesAbsoluteScaleup_;
}

const float &VVV0Tree::iWMD4jesAbsoluteScaleup() {
  if (not iWMD4jesAbsoluteScaleup_isLoaded) {
    if (iWMD4jesAbsoluteScaleup_branch != 0) {
      iWMD4jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesAbsoluteScaleup_isLoaded = true;
  }
  return iWMD4jesAbsoluteScaleup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesAbsoluteScaleup() {
  if (not METjesAbsoluteScaleup_isLoaded) {
    if (METjesAbsoluteScaleup_branch != 0) {
      METjesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch METjesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    METjesAbsoluteScaleup_isLoaded = true;
  }
  return *METjesAbsoluteScaleup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesAbsoluteScaleup() {
  if (not NujesAbsoluteScaleup_isLoaded) {
    if (NujesAbsoluteScaleup_branch != 0) {
      NujesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch NujesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    NujesAbsoluteScaleup_isLoaded = true;
  }
  return *NujesAbsoluteScaleup_;
}

const int &VVV0Tree::NJjesAbsoluteScaleup() {
  if (not NJjesAbsoluteScaleup_isLoaded) {
    if (NJjesAbsoluteScaleup_branch != 0) {
      NJjesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch NJjesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    NJjesAbsoluteScaleup_isLoaded = true;
  }
  return NJjesAbsoluteScaleup_;
}

const int &VVV0Tree::NbLoosejesAbsoluteScaleup() {
  if (not NbLoosejesAbsoluteScaleup_isLoaded) {
    if (NbLoosejesAbsoluteScaleup_branch != 0) {
      NbLoosejesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesAbsoluteScaleup_isLoaded = true;
  }
  return NbLoosejesAbsoluteScaleup_;
}

const int &VVV0Tree::NbMediumjesAbsoluteScaleup() {
  if (not NbMediumjesAbsoluteScaleup_isLoaded) {
    if (NbMediumjesAbsoluteScaleup_branch != 0) {
      NbMediumjesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesAbsoluteScaleup_isLoaded = true;
  }
  return NbMediumjesAbsoluteScaleup_;
}

const int &VVV0Tree::NbTightjesAbsoluteScaleup() {
  if (not NbTightjesAbsoluteScaleup_isLoaded) {
    if (NbTightjesAbsoluteScaleup_branch != 0) {
      NbTightjesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    NbTightjesAbsoluteScaleup_isLoaded = true;
  }
  return NbTightjesAbsoluteScaleup_;
}

const int &VVV0Tree::NoORNbLoosejesAbsoluteScaleup() {
  if (not NoORNbLoosejesAbsoluteScaleup_isLoaded) {
    if (NoORNbLoosejesAbsoluteScaleup_branch != 0) {
      NoORNbLoosejesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesAbsoluteScaleup_isLoaded = true;
  }
  return NoORNbLoosejesAbsoluteScaleup_;
}

const int &VVV0Tree::NoORNbMediumjesAbsoluteScaleup() {
  if (not NoORNbMediumjesAbsoluteScaleup_isLoaded) {
    if (NoORNbMediumjesAbsoluteScaleup_branch != 0) {
      NoORNbMediumjesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesAbsoluteScaleup_isLoaded = true;
  }
  return NoORNbMediumjesAbsoluteScaleup_;
}

const int &VVV0Tree::NoORNbTightjesAbsoluteScaleup() {
  if (not NoORNbTightjesAbsoluteScaleup_isLoaded) {
    if (NoORNbTightjesAbsoluteScaleup_branch != 0) {
      NoORNbTightjesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesAbsoluteScaleup_isLoaded = true;
  }
  return NoORNbTightjesAbsoluteScaleup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesAbsoluteScaleup() {
  if (not J0jesAbsoluteScaleup_isLoaded) {
    if (J0jesAbsoluteScaleup_branch != 0) {
      J0jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch J0jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    J0jesAbsoluteScaleup_isLoaded = true;
  }
  return *J0jesAbsoluteScaleup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesAbsoluteScaleup() {
  if (not J1jesAbsoluteScaleup_isLoaded) {
    if (J1jesAbsoluteScaleup_branch != 0) {
      J1jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch J1jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    J1jesAbsoluteScaleup_isLoaded = true;
  }
  return *J1jesAbsoluteScaleup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesAbsoluteScaleup() {
  if (not J2jesAbsoluteScaleup_isLoaded) {
    if (J2jesAbsoluteScaleup_branch != 0) {
      J2jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch J2jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    J2jesAbsoluteScaleup_isLoaded = true;
  }
  return *J2jesAbsoluteScaleup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesAbsoluteScaleup() {
  if (not J3jesAbsoluteScaleup_isLoaded) {
    if (J3jesAbsoluteScaleup_branch != 0) {
      J3jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch J3jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    J3jesAbsoluteScaleup_isLoaded = true;
  }
  return *J3jesAbsoluteScaleup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesAbsoluteScaleup() {
  if (not J4jesAbsoluteScaleup_isLoaded) {
    if (J4jesAbsoluteScaleup_branch != 0) {
      J4jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch J4jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    J4jesAbsoluteScaleup_isLoaded = true;
  }
  return *J4jesAbsoluteScaleup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesAbsoluteScaleup() {
  if (not J5jesAbsoluteScaleup_isLoaded) {
    if (J5jesAbsoluteScaleup_branch != 0) {
      J5jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch J5jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    J5jesAbsoluteScaleup_isLoaded = true;
  }
  return *J5jesAbsoluteScaleup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesAbsoluteScaleup() {
  if (not J6jesAbsoluteScaleup_isLoaded) {
    if (J6jesAbsoluteScaleup_branch != 0) {
      J6jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch J6jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    J6jesAbsoluteScaleup_isLoaded = true;
  }
  return *J6jesAbsoluteScaleup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesAbsoluteScaleup() {
  if (not J7jesAbsoluteScaleup_isLoaded) {
    if (J7jesAbsoluteScaleup_branch != 0) {
      J7jesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch J7jesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    J7jesAbsoluteScaleup_isLoaded = true;
  }
  return *J7jesAbsoluteScaleup_;
}

const vector<int> &VVV0Tree::NQJGenjesAbsoluteScaleup() {
  if (not NQJGenjesAbsoluteScaleup_isLoaded) {
    if (NQJGenjesAbsoluteScaleup_branch != 0) {
      NQJGenjesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesAbsoluteScaleup_isLoaded = true;
  }
  return *NQJGenjesAbsoluteScaleup_;
}

const vector<int> &VVV0Tree::NBJGenjesAbsoluteScaleup() {
  if (not NBJGenjesAbsoluteScaleup_isLoaded) {
    if (NBJGenjesAbsoluteScaleup_branch != 0) {
      NBJGenjesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesAbsoluteScaleup_isLoaded = true;
  }
  return *NBJGenjesAbsoluteScaleup_;
}

const vector<int> &VVV0Tree::NLJGenjesAbsoluteScaleup() {
  if (not NLJGenjesAbsoluteScaleup_isLoaded) {
    if (NLJGenjesAbsoluteScaleup_branch != 0) {
      NLJGenjesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesAbsoluteScaleup_isLoaded = true;
  }
  return *NLJGenjesAbsoluteScaleup_;
}

const float &VVV0Tree::MVVXjesAbsoluteScaleup() {
  if (not MVVXjesAbsoluteScaleup_isLoaded) {
    if (MVVXjesAbsoluteScaleup_branch != 0) {
      MVVXjesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    MVVXjesAbsoluteScaleup_isLoaded = true;
  }
  return MVVXjesAbsoluteScaleup_;
}

const float &VVV0Tree::PtVVXjesAbsoluteScaleup() {
  if (not PtVVXjesAbsoluteScaleup_isLoaded) {
    if (PtVVXjesAbsoluteScaleup_branch != 0) {
      PtVVXjesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesAbsoluteScaleup_isLoaded = true;
  }
  return PtVVXjesAbsoluteScaleup_;
}

const float &VVV0Tree::HTjesAbsoluteScaleup() {
  if (not HTjesAbsoluteScaleup_isLoaded) {
    if (HTjesAbsoluteScaleup_branch != 0) {
      HTjesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch HTjesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    HTjesAbsoluteScaleup_isLoaded = true;
  }
  return HTjesAbsoluteScaleup_;
}

const float &VVV0Tree::HTJjesAbsoluteScaleup() {
  if (not HTJjesAbsoluteScaleup_isLoaded) {
    if (HTJjesAbsoluteScaleup_branch != 0) {
      HTJjesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch HTJjesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    HTJjesAbsoluteScaleup_isLoaded = true;
  }
  return HTJjesAbsoluteScaleup_;
}

const float &VVV0Tree::HTFJjesAbsoluteScaleup() {
  if (not HTFJjesAbsoluteScaleup_isLoaded) {
    if (HTFJjesAbsoluteScaleup_branch != 0) {
      HTFJjesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    HTFJjesAbsoluteScaleup_isLoaded = true;
  }
  return HTFJjesAbsoluteScaleup_;
}

const float &VVV0Tree::SumPtFJjesAbsoluteScaleup() {
  if (not SumPtFJjesAbsoluteScaleup_isLoaded) {
    if (SumPtFJjesAbsoluteScaleup_branch != 0) {
      SumPtFJjesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesAbsoluteScaleup_isLoaded = true;
  }
  return SumPtFJjesAbsoluteScaleup_;
}

const float &VVV0Tree::SumPtJjesAbsoluteScaleup() {
  if (not SumPtJjesAbsoluteScaleup_isLoaded) {
    if (SumPtJjesAbsoluteScaleup_branch != 0) {
      SumPtJjesAbsoluteScaleup_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesAbsoluteScaleup_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesAbsoluteScaleup_isLoaded = true;
  }
  return SumPtJjesAbsoluteScaleup_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesAbsoluteScaledn() {
  if (not JsjesAbsoluteScaledn_isLoaded) {
    if (JsjesAbsoluteScaledn_branch != 0) {
      JsjesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch JsjesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    JsjesAbsoluteScaledn_isLoaded = true;
  }
  return *JsjesAbsoluteScaledn_;
}

const int &VVV0Tree::NFJjesAbsoluteScaledn() {
  if (not NFJjesAbsoluteScaledn_isLoaded) {
    if (NFJjesAbsoluteScaledn_branch != 0) {
      NFJjesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch NFJjesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    NFJjesAbsoluteScaledn_isLoaded = true;
  }
  return NFJjesAbsoluteScaledn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesAbsoluteScaledn() {
  if (not FJ0jesAbsoluteScaledn_isLoaded) {
    if (FJ0jesAbsoluteScaledn_branch != 0) {
      FJ0jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    FJ0jesAbsoluteScaledn_isLoaded = true;
  }
  return *FJ0jesAbsoluteScaledn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesAbsoluteScaledn() {
  if (not FJ1jesAbsoluteScaledn_isLoaded) {
    if (FJ1jesAbsoluteScaledn_branch != 0) {
      FJ1jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    FJ1jesAbsoluteScaledn_isLoaded = true;
  }
  return *FJ1jesAbsoluteScaledn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesAbsoluteScaledn() {
  if (not FJ2jesAbsoluteScaledn_isLoaded) {
    if (FJ2jesAbsoluteScaledn_branch != 0) {
      FJ2jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    FJ2jesAbsoluteScaledn_isLoaded = true;
  }
  return *FJ2jesAbsoluteScaledn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesAbsoluteScaledn() {
  if (not FJ3jesAbsoluteScaledn_isLoaded) {
    if (FJ3jesAbsoluteScaledn_branch != 0) {
      FJ3jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    FJ3jesAbsoluteScaledn_isLoaded = true;
  }
  return *FJ3jesAbsoluteScaledn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesAbsoluteScaledn() {
  if (not FJ4jesAbsoluteScaledn_isLoaded) {
    if (FJ4jesAbsoluteScaledn_branch != 0) {
      FJ4jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    FJ4jesAbsoluteScaledn_isLoaded = true;
  }
  return *FJ4jesAbsoluteScaledn_;
}

const float &VVV0Tree::VMD0jesAbsoluteScaledn() {
  if (not VMD0jesAbsoluteScaledn_isLoaded) {
    if (VMD0jesAbsoluteScaledn_branch != 0) {
      VMD0jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    VMD0jesAbsoluteScaledn_isLoaded = true;
  }
  return VMD0jesAbsoluteScaledn_;
}

const float &VVV0Tree::VMD1jesAbsoluteScaledn() {
  if (not VMD1jesAbsoluteScaledn_isLoaded) {
    if (VMD1jesAbsoluteScaledn_branch != 0) {
      VMD1jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    VMD1jesAbsoluteScaledn_isLoaded = true;
  }
  return VMD1jesAbsoluteScaledn_;
}

const float &VVV0Tree::VMD2jesAbsoluteScaledn() {
  if (not VMD2jesAbsoluteScaledn_isLoaded) {
    if (VMD2jesAbsoluteScaledn_branch != 0) {
      VMD2jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    VMD2jesAbsoluteScaledn_isLoaded = true;
  }
  return VMD2jesAbsoluteScaledn_;
}

const float &VVV0Tree::VMD3jesAbsoluteScaledn() {
  if (not VMD3jesAbsoluteScaledn_isLoaded) {
    if (VMD3jesAbsoluteScaledn_branch != 0) {
      VMD3jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    VMD3jesAbsoluteScaledn_isLoaded = true;
  }
  return VMD3jesAbsoluteScaledn_;
}

const float &VVV0Tree::VMD4jesAbsoluteScaledn() {
  if (not VMD4jesAbsoluteScaledn_isLoaded) {
    if (VMD4jesAbsoluteScaledn_branch != 0) {
      VMD4jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    VMD4jesAbsoluteScaledn_isLoaded = true;
  }
  return VMD4jesAbsoluteScaledn_;
}

const float &VVV0Tree::WMD0jesAbsoluteScaledn() {
  if (not WMD0jesAbsoluteScaledn_isLoaded) {
    if (WMD0jesAbsoluteScaledn_branch != 0) {
      WMD0jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    WMD0jesAbsoluteScaledn_isLoaded = true;
  }
  return WMD0jesAbsoluteScaledn_;
}

const float &VVV0Tree::WMD1jesAbsoluteScaledn() {
  if (not WMD1jesAbsoluteScaledn_isLoaded) {
    if (WMD1jesAbsoluteScaledn_branch != 0) {
      WMD1jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    WMD1jesAbsoluteScaledn_isLoaded = true;
  }
  return WMD1jesAbsoluteScaledn_;
}

const float &VVV0Tree::WMD2jesAbsoluteScaledn() {
  if (not WMD2jesAbsoluteScaledn_isLoaded) {
    if (WMD2jesAbsoluteScaledn_branch != 0) {
      WMD2jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    WMD2jesAbsoluteScaledn_isLoaded = true;
  }
  return WMD2jesAbsoluteScaledn_;
}

const float &VVV0Tree::WMD3jesAbsoluteScaledn() {
  if (not WMD3jesAbsoluteScaledn_isLoaded) {
    if (WMD3jesAbsoluteScaledn_branch != 0) {
      WMD3jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    WMD3jesAbsoluteScaledn_isLoaded = true;
  }
  return WMD3jesAbsoluteScaledn_;
}

const float &VVV0Tree::WMD4jesAbsoluteScaledn() {
  if (not WMD4jesAbsoluteScaledn_isLoaded) {
    if (WMD4jesAbsoluteScaledn_branch != 0) {
      WMD4jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    WMD4jesAbsoluteScaledn_isLoaded = true;
  }
  return WMD4jesAbsoluteScaledn_;
}

const int &VVV0Tree::NQGen0jesAbsoluteScaledn() {
  if (not NQGen0jesAbsoluteScaledn_isLoaded) {
    if (NQGen0jesAbsoluteScaledn_branch != 0) {
      NQGen0jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesAbsoluteScaledn_isLoaded = true;
  }
  return NQGen0jesAbsoluteScaledn_;
}

const int &VVV0Tree::NQGen1jesAbsoluteScaledn() {
  if (not NQGen1jesAbsoluteScaledn_isLoaded) {
    if (NQGen1jesAbsoluteScaledn_branch != 0) {
      NQGen1jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesAbsoluteScaledn_isLoaded = true;
  }
  return NQGen1jesAbsoluteScaledn_;
}

const int &VVV0Tree::NQGen2jesAbsoluteScaledn() {
  if (not NQGen2jesAbsoluteScaledn_isLoaded) {
    if (NQGen2jesAbsoluteScaledn_branch != 0) {
      NQGen2jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesAbsoluteScaledn_isLoaded = true;
  }
  return NQGen2jesAbsoluteScaledn_;
}

const int &VVV0Tree::NQGen3jesAbsoluteScaledn() {
  if (not NQGen3jesAbsoluteScaledn_isLoaded) {
    if (NQGen3jesAbsoluteScaledn_branch != 0) {
      NQGen3jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesAbsoluteScaledn_isLoaded = true;
  }
  return NQGen3jesAbsoluteScaledn_;
}

const int &VVV0Tree::NQGen4jesAbsoluteScaledn() {
  if (not NQGen4jesAbsoluteScaledn_isLoaded) {
    if (NQGen4jesAbsoluteScaledn_branch != 0) {
      NQGen4jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesAbsoluteScaledn_isLoaded = true;
  }
  return NQGen4jesAbsoluteScaledn_;
}

const int &VVV0Tree::NBGen0jesAbsoluteScaledn() {
  if (not NBGen0jesAbsoluteScaledn_isLoaded) {
    if (NBGen0jesAbsoluteScaledn_branch != 0) {
      NBGen0jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesAbsoluteScaledn_isLoaded = true;
  }
  return NBGen0jesAbsoluteScaledn_;
}

const int &VVV0Tree::NBGen1jesAbsoluteScaledn() {
  if (not NBGen1jesAbsoluteScaledn_isLoaded) {
    if (NBGen1jesAbsoluteScaledn_branch != 0) {
      NBGen1jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesAbsoluteScaledn_isLoaded = true;
  }
  return NBGen1jesAbsoluteScaledn_;
}

const int &VVV0Tree::NBGen2jesAbsoluteScaledn() {
  if (not NBGen2jesAbsoluteScaledn_isLoaded) {
    if (NBGen2jesAbsoluteScaledn_branch != 0) {
      NBGen2jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesAbsoluteScaledn_isLoaded = true;
  }
  return NBGen2jesAbsoluteScaledn_;
}

const int &VVV0Tree::NBGen3jesAbsoluteScaledn() {
  if (not NBGen3jesAbsoluteScaledn_isLoaded) {
    if (NBGen3jesAbsoluteScaledn_branch != 0) {
      NBGen3jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesAbsoluteScaledn_isLoaded = true;
  }
  return NBGen3jesAbsoluteScaledn_;
}

const int &VVV0Tree::NBGen4jesAbsoluteScaledn() {
  if (not NBGen4jesAbsoluteScaledn_isLoaded) {
    if (NBGen4jesAbsoluteScaledn_branch != 0) {
      NBGen4jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesAbsoluteScaledn_isLoaded = true;
  }
  return NBGen4jesAbsoluteScaledn_;
}

const int &VVV0Tree::NLGen0jesAbsoluteScaledn() {
  if (not NLGen0jesAbsoluteScaledn_isLoaded) {
    if (NLGen0jesAbsoluteScaledn_branch != 0) {
      NLGen0jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesAbsoluteScaledn_isLoaded = true;
  }
  return NLGen0jesAbsoluteScaledn_;
}

const int &VVV0Tree::NLGen1jesAbsoluteScaledn() {
  if (not NLGen1jesAbsoluteScaledn_isLoaded) {
    if (NLGen1jesAbsoluteScaledn_branch != 0) {
      NLGen1jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesAbsoluteScaledn_isLoaded = true;
  }
  return NLGen1jesAbsoluteScaledn_;
}

const int &VVV0Tree::NLGen2jesAbsoluteScaledn() {
  if (not NLGen2jesAbsoluteScaledn_isLoaded) {
    if (NLGen2jesAbsoluteScaledn_branch != 0) {
      NLGen2jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesAbsoluteScaledn_isLoaded = true;
  }
  return NLGen2jesAbsoluteScaledn_;
}

const int &VVV0Tree::NLGen3jesAbsoluteScaledn() {
  if (not NLGen3jesAbsoluteScaledn_isLoaded) {
    if (NLGen3jesAbsoluteScaledn_branch != 0) {
      NLGen3jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesAbsoluteScaledn_isLoaded = true;
  }
  return NLGen3jesAbsoluteScaledn_;
}

const int &VVV0Tree::NLGen4jesAbsoluteScaledn() {
  if (not NLGen4jesAbsoluteScaledn_isLoaded) {
    if (NLGen4jesAbsoluteScaledn_branch != 0) {
      NLGen4jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesAbsoluteScaledn_isLoaded = true;
  }
  return NLGen4jesAbsoluteScaledn_;
}

const int &VVV0Tree::NVQGen0jesAbsoluteScaledn() {
  if (not NVQGen0jesAbsoluteScaledn_isLoaded) {
    if (NVQGen0jesAbsoluteScaledn_branch != 0) {
      NVQGen0jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesAbsoluteScaledn_isLoaded = true;
  }
  return NVQGen0jesAbsoluteScaledn_;
}

const int &VVV0Tree::NVQGen1jesAbsoluteScaledn() {
  if (not NVQGen1jesAbsoluteScaledn_isLoaded) {
    if (NVQGen1jesAbsoluteScaledn_branch != 0) {
      NVQGen1jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesAbsoluteScaledn_isLoaded = true;
  }
  return NVQGen1jesAbsoluteScaledn_;
}

const int &VVV0Tree::NVQGen2jesAbsoluteScaledn() {
  if (not NVQGen2jesAbsoluteScaledn_isLoaded) {
    if (NVQGen2jesAbsoluteScaledn_branch != 0) {
      NVQGen2jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesAbsoluteScaledn_isLoaded = true;
  }
  return NVQGen2jesAbsoluteScaledn_;
}

const int &VVV0Tree::NVQGen3jesAbsoluteScaledn() {
  if (not NVQGen3jesAbsoluteScaledn_isLoaded) {
    if (NVQGen3jesAbsoluteScaledn_branch != 0) {
      NVQGen3jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesAbsoluteScaledn_isLoaded = true;
  }
  return NVQGen3jesAbsoluteScaledn_;
}

const int &VVV0Tree::NVQGen4jesAbsoluteScaledn() {
  if (not NVQGen4jesAbsoluteScaledn_isLoaded) {
    if (NVQGen4jesAbsoluteScaledn_branch != 0) {
      NVQGen4jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesAbsoluteScaledn_isLoaded = true;
  }
  return NVQGen4jesAbsoluteScaledn_;
}

const int &VVV0Tree::NiFJjesAbsoluteScaledn() {
  if (not NiFJjesAbsoluteScaledn_isLoaded) {
    if (NiFJjesAbsoluteScaledn_branch != 0) {
      NiFJjesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    NiFJjesAbsoluteScaledn_isLoaded = true;
  }
  return NiFJjesAbsoluteScaledn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesAbsoluteScaledn() {
  if (not iFJ0jesAbsoluteScaledn_isLoaded) {
    if (iFJ0jesAbsoluteScaledn_branch != 0) {
      iFJ0jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesAbsoluteScaledn_isLoaded = true;
  }
  return *iFJ0jesAbsoluteScaledn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesAbsoluteScaledn() {
  if (not iFJ1jesAbsoluteScaledn_isLoaded) {
    if (iFJ1jesAbsoluteScaledn_branch != 0) {
      iFJ1jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesAbsoluteScaledn_isLoaded = true;
  }
  return *iFJ1jesAbsoluteScaledn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesAbsoluteScaledn() {
  if (not iFJ2jesAbsoluteScaledn_isLoaded) {
    if (iFJ2jesAbsoluteScaledn_branch != 0) {
      iFJ2jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesAbsoluteScaledn_isLoaded = true;
  }
  return *iFJ2jesAbsoluteScaledn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesAbsoluteScaledn() {
  if (not iFJ3jesAbsoluteScaledn_isLoaded) {
    if (iFJ3jesAbsoluteScaledn_branch != 0) {
      iFJ3jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesAbsoluteScaledn_isLoaded = true;
  }
  return *iFJ3jesAbsoluteScaledn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesAbsoluteScaledn() {
  if (not iFJ4jesAbsoluteScaledn_isLoaded) {
    if (iFJ4jesAbsoluteScaledn_branch != 0) {
      iFJ4jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesAbsoluteScaledn_isLoaded = true;
  }
  return *iFJ4jesAbsoluteScaledn_;
}

const float &VVV0Tree::iVMD0jesAbsoluteScaledn() {
  if (not iVMD0jesAbsoluteScaledn_isLoaded) {
    if (iVMD0jesAbsoluteScaledn_branch != 0) {
      iVMD0jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesAbsoluteScaledn_isLoaded = true;
  }
  return iVMD0jesAbsoluteScaledn_;
}

const float &VVV0Tree::iVMD1jesAbsoluteScaledn() {
  if (not iVMD1jesAbsoluteScaledn_isLoaded) {
    if (iVMD1jesAbsoluteScaledn_branch != 0) {
      iVMD1jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesAbsoluteScaledn_isLoaded = true;
  }
  return iVMD1jesAbsoluteScaledn_;
}

const float &VVV0Tree::iVMD2jesAbsoluteScaledn() {
  if (not iVMD2jesAbsoluteScaledn_isLoaded) {
    if (iVMD2jesAbsoluteScaledn_branch != 0) {
      iVMD2jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesAbsoluteScaledn_isLoaded = true;
  }
  return iVMD2jesAbsoluteScaledn_;
}

const float &VVV0Tree::iVMD3jesAbsoluteScaledn() {
  if (not iVMD3jesAbsoluteScaledn_isLoaded) {
    if (iVMD3jesAbsoluteScaledn_branch != 0) {
      iVMD3jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesAbsoluteScaledn_isLoaded = true;
  }
  return iVMD3jesAbsoluteScaledn_;
}

const float &VVV0Tree::iVMD4jesAbsoluteScaledn() {
  if (not iVMD4jesAbsoluteScaledn_isLoaded) {
    if (iVMD4jesAbsoluteScaledn_branch != 0) {
      iVMD4jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesAbsoluteScaledn_isLoaded = true;
  }
  return iVMD4jesAbsoluteScaledn_;
}

const float &VVV0Tree::iWMD0jesAbsoluteScaledn() {
  if (not iWMD0jesAbsoluteScaledn_isLoaded) {
    if (iWMD0jesAbsoluteScaledn_branch != 0) {
      iWMD0jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesAbsoluteScaledn_isLoaded = true;
  }
  return iWMD0jesAbsoluteScaledn_;
}

const float &VVV0Tree::iWMD1jesAbsoluteScaledn() {
  if (not iWMD1jesAbsoluteScaledn_isLoaded) {
    if (iWMD1jesAbsoluteScaledn_branch != 0) {
      iWMD1jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesAbsoluteScaledn_isLoaded = true;
  }
  return iWMD1jesAbsoluteScaledn_;
}

const float &VVV0Tree::iWMD2jesAbsoluteScaledn() {
  if (not iWMD2jesAbsoluteScaledn_isLoaded) {
    if (iWMD2jesAbsoluteScaledn_branch != 0) {
      iWMD2jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesAbsoluteScaledn_isLoaded = true;
  }
  return iWMD2jesAbsoluteScaledn_;
}

const float &VVV0Tree::iWMD3jesAbsoluteScaledn() {
  if (not iWMD3jesAbsoluteScaledn_isLoaded) {
    if (iWMD3jesAbsoluteScaledn_branch != 0) {
      iWMD3jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesAbsoluteScaledn_isLoaded = true;
  }
  return iWMD3jesAbsoluteScaledn_;
}

const float &VVV0Tree::iWMD4jesAbsoluteScaledn() {
  if (not iWMD4jesAbsoluteScaledn_isLoaded) {
    if (iWMD4jesAbsoluteScaledn_branch != 0) {
      iWMD4jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesAbsoluteScaledn_isLoaded = true;
  }
  return iWMD4jesAbsoluteScaledn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesAbsoluteScaledn() {
  if (not METjesAbsoluteScaledn_isLoaded) {
    if (METjesAbsoluteScaledn_branch != 0) {
      METjesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch METjesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    METjesAbsoluteScaledn_isLoaded = true;
  }
  return *METjesAbsoluteScaledn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesAbsoluteScaledn() {
  if (not NujesAbsoluteScaledn_isLoaded) {
    if (NujesAbsoluteScaledn_branch != 0) {
      NujesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch NujesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    NujesAbsoluteScaledn_isLoaded = true;
  }
  return *NujesAbsoluteScaledn_;
}

const int &VVV0Tree::NJjesAbsoluteScaledn() {
  if (not NJjesAbsoluteScaledn_isLoaded) {
    if (NJjesAbsoluteScaledn_branch != 0) {
      NJjesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch NJjesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    NJjesAbsoluteScaledn_isLoaded = true;
  }
  return NJjesAbsoluteScaledn_;
}

const int &VVV0Tree::NbLoosejesAbsoluteScaledn() {
  if (not NbLoosejesAbsoluteScaledn_isLoaded) {
    if (NbLoosejesAbsoluteScaledn_branch != 0) {
      NbLoosejesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesAbsoluteScaledn_isLoaded = true;
  }
  return NbLoosejesAbsoluteScaledn_;
}

const int &VVV0Tree::NbMediumjesAbsoluteScaledn() {
  if (not NbMediumjesAbsoluteScaledn_isLoaded) {
    if (NbMediumjesAbsoluteScaledn_branch != 0) {
      NbMediumjesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesAbsoluteScaledn_isLoaded = true;
  }
  return NbMediumjesAbsoluteScaledn_;
}

const int &VVV0Tree::NbTightjesAbsoluteScaledn() {
  if (not NbTightjesAbsoluteScaledn_isLoaded) {
    if (NbTightjesAbsoluteScaledn_branch != 0) {
      NbTightjesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    NbTightjesAbsoluteScaledn_isLoaded = true;
  }
  return NbTightjesAbsoluteScaledn_;
}

const int &VVV0Tree::NoORNbLoosejesAbsoluteScaledn() {
  if (not NoORNbLoosejesAbsoluteScaledn_isLoaded) {
    if (NoORNbLoosejesAbsoluteScaledn_branch != 0) {
      NoORNbLoosejesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesAbsoluteScaledn_isLoaded = true;
  }
  return NoORNbLoosejesAbsoluteScaledn_;
}

const int &VVV0Tree::NoORNbMediumjesAbsoluteScaledn() {
  if (not NoORNbMediumjesAbsoluteScaledn_isLoaded) {
    if (NoORNbMediumjesAbsoluteScaledn_branch != 0) {
      NoORNbMediumjesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesAbsoluteScaledn_isLoaded = true;
  }
  return NoORNbMediumjesAbsoluteScaledn_;
}

const int &VVV0Tree::NoORNbTightjesAbsoluteScaledn() {
  if (not NoORNbTightjesAbsoluteScaledn_isLoaded) {
    if (NoORNbTightjesAbsoluteScaledn_branch != 0) {
      NoORNbTightjesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesAbsoluteScaledn_isLoaded = true;
  }
  return NoORNbTightjesAbsoluteScaledn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesAbsoluteScaledn() {
  if (not J0jesAbsoluteScaledn_isLoaded) {
    if (J0jesAbsoluteScaledn_branch != 0) {
      J0jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch J0jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    J0jesAbsoluteScaledn_isLoaded = true;
  }
  return *J0jesAbsoluteScaledn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesAbsoluteScaledn() {
  if (not J1jesAbsoluteScaledn_isLoaded) {
    if (J1jesAbsoluteScaledn_branch != 0) {
      J1jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch J1jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    J1jesAbsoluteScaledn_isLoaded = true;
  }
  return *J1jesAbsoluteScaledn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesAbsoluteScaledn() {
  if (not J2jesAbsoluteScaledn_isLoaded) {
    if (J2jesAbsoluteScaledn_branch != 0) {
      J2jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch J2jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    J2jesAbsoluteScaledn_isLoaded = true;
  }
  return *J2jesAbsoluteScaledn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesAbsoluteScaledn() {
  if (not J3jesAbsoluteScaledn_isLoaded) {
    if (J3jesAbsoluteScaledn_branch != 0) {
      J3jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch J3jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    J3jesAbsoluteScaledn_isLoaded = true;
  }
  return *J3jesAbsoluteScaledn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesAbsoluteScaledn() {
  if (not J4jesAbsoluteScaledn_isLoaded) {
    if (J4jesAbsoluteScaledn_branch != 0) {
      J4jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch J4jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    J4jesAbsoluteScaledn_isLoaded = true;
  }
  return *J4jesAbsoluteScaledn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesAbsoluteScaledn() {
  if (not J5jesAbsoluteScaledn_isLoaded) {
    if (J5jesAbsoluteScaledn_branch != 0) {
      J5jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch J5jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    J5jesAbsoluteScaledn_isLoaded = true;
  }
  return *J5jesAbsoluteScaledn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesAbsoluteScaledn() {
  if (not J6jesAbsoluteScaledn_isLoaded) {
    if (J6jesAbsoluteScaledn_branch != 0) {
      J6jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch J6jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    J6jesAbsoluteScaledn_isLoaded = true;
  }
  return *J6jesAbsoluteScaledn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesAbsoluteScaledn() {
  if (not J7jesAbsoluteScaledn_isLoaded) {
    if (J7jesAbsoluteScaledn_branch != 0) {
      J7jesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch J7jesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    J7jesAbsoluteScaledn_isLoaded = true;
  }
  return *J7jesAbsoluteScaledn_;
}

const vector<int> &VVV0Tree::NQJGenjesAbsoluteScaledn() {
  if (not NQJGenjesAbsoluteScaledn_isLoaded) {
    if (NQJGenjesAbsoluteScaledn_branch != 0) {
      NQJGenjesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesAbsoluteScaledn_isLoaded = true;
  }
  return *NQJGenjesAbsoluteScaledn_;
}

const vector<int> &VVV0Tree::NBJGenjesAbsoluteScaledn() {
  if (not NBJGenjesAbsoluteScaledn_isLoaded) {
    if (NBJGenjesAbsoluteScaledn_branch != 0) {
      NBJGenjesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesAbsoluteScaledn_isLoaded = true;
  }
  return *NBJGenjesAbsoluteScaledn_;
}

const vector<int> &VVV0Tree::NLJGenjesAbsoluteScaledn() {
  if (not NLJGenjesAbsoluteScaledn_isLoaded) {
    if (NLJGenjesAbsoluteScaledn_branch != 0) {
      NLJGenjesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesAbsoluteScaledn_isLoaded = true;
  }
  return *NLJGenjesAbsoluteScaledn_;
}

const float &VVV0Tree::MVVXjesAbsoluteScaledn() {
  if (not MVVXjesAbsoluteScaledn_isLoaded) {
    if (MVVXjesAbsoluteScaledn_branch != 0) {
      MVVXjesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    MVVXjesAbsoluteScaledn_isLoaded = true;
  }
  return MVVXjesAbsoluteScaledn_;
}

const float &VVV0Tree::PtVVXjesAbsoluteScaledn() {
  if (not PtVVXjesAbsoluteScaledn_isLoaded) {
    if (PtVVXjesAbsoluteScaledn_branch != 0) {
      PtVVXjesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesAbsoluteScaledn_isLoaded = true;
  }
  return PtVVXjesAbsoluteScaledn_;
}

const float &VVV0Tree::HTjesAbsoluteScaledn() {
  if (not HTjesAbsoluteScaledn_isLoaded) {
    if (HTjesAbsoluteScaledn_branch != 0) {
      HTjesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch HTjesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    HTjesAbsoluteScaledn_isLoaded = true;
  }
  return HTjesAbsoluteScaledn_;
}

const float &VVV0Tree::HTJjesAbsoluteScaledn() {
  if (not HTJjesAbsoluteScaledn_isLoaded) {
    if (HTJjesAbsoluteScaledn_branch != 0) {
      HTJjesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch HTJjesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    HTJjesAbsoluteScaledn_isLoaded = true;
  }
  return HTJjesAbsoluteScaledn_;
}

const float &VVV0Tree::HTFJjesAbsoluteScaledn() {
  if (not HTFJjesAbsoluteScaledn_isLoaded) {
    if (HTFJjesAbsoluteScaledn_branch != 0) {
      HTFJjesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    HTFJjesAbsoluteScaledn_isLoaded = true;
  }
  return HTFJjesAbsoluteScaledn_;
}

const float &VVV0Tree::SumPtFJjesAbsoluteScaledn() {
  if (not SumPtFJjesAbsoluteScaledn_isLoaded) {
    if (SumPtFJjesAbsoluteScaledn_branch != 0) {
      SumPtFJjesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesAbsoluteScaledn_isLoaded = true;
  }
  return SumPtFJjesAbsoluteScaledn_;
}

const float &VVV0Tree::SumPtJjesAbsoluteScaledn() {
  if (not SumPtJjesAbsoluteScaledn_isLoaded) {
    if (SumPtJjesAbsoluteScaledn_branch != 0) {
      SumPtJjesAbsoluteScaledn_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesAbsoluteScaledn_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesAbsoluteScaledn_isLoaded = true;
  }
  return SumPtJjesAbsoluteScaledn_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesAbsoluteMPFBiasup() {
  if (not JsjesAbsoluteMPFBiasup_isLoaded) {
    if (JsjesAbsoluteMPFBiasup_branch != 0) {
      JsjesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch JsjesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    JsjesAbsoluteMPFBiasup_isLoaded = true;
  }
  return *JsjesAbsoluteMPFBiasup_;
}

const int &VVV0Tree::NFJjesAbsoluteMPFBiasup() {
  if (not NFJjesAbsoluteMPFBiasup_isLoaded) {
    if (NFJjesAbsoluteMPFBiasup_branch != 0) {
      NFJjesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch NFJjesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    NFJjesAbsoluteMPFBiasup_isLoaded = true;
  }
  return NFJjesAbsoluteMPFBiasup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesAbsoluteMPFBiasup() {
  if (not FJ0jesAbsoluteMPFBiasup_isLoaded) {
    if (FJ0jesAbsoluteMPFBiasup_branch != 0) {
      FJ0jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    FJ0jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return *FJ0jesAbsoluteMPFBiasup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesAbsoluteMPFBiasup() {
  if (not FJ1jesAbsoluteMPFBiasup_isLoaded) {
    if (FJ1jesAbsoluteMPFBiasup_branch != 0) {
      FJ1jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    FJ1jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return *FJ1jesAbsoluteMPFBiasup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesAbsoluteMPFBiasup() {
  if (not FJ2jesAbsoluteMPFBiasup_isLoaded) {
    if (FJ2jesAbsoluteMPFBiasup_branch != 0) {
      FJ2jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    FJ2jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return *FJ2jesAbsoluteMPFBiasup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesAbsoluteMPFBiasup() {
  if (not FJ3jesAbsoluteMPFBiasup_isLoaded) {
    if (FJ3jesAbsoluteMPFBiasup_branch != 0) {
      FJ3jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    FJ3jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return *FJ3jesAbsoluteMPFBiasup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesAbsoluteMPFBiasup() {
  if (not FJ4jesAbsoluteMPFBiasup_isLoaded) {
    if (FJ4jesAbsoluteMPFBiasup_branch != 0) {
      FJ4jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    FJ4jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return *FJ4jesAbsoluteMPFBiasup_;
}

const float &VVV0Tree::VMD0jesAbsoluteMPFBiasup() {
  if (not VMD0jesAbsoluteMPFBiasup_isLoaded) {
    if (VMD0jesAbsoluteMPFBiasup_branch != 0) {
      VMD0jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    VMD0jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return VMD0jesAbsoluteMPFBiasup_;
}

const float &VVV0Tree::VMD1jesAbsoluteMPFBiasup() {
  if (not VMD1jesAbsoluteMPFBiasup_isLoaded) {
    if (VMD1jesAbsoluteMPFBiasup_branch != 0) {
      VMD1jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    VMD1jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return VMD1jesAbsoluteMPFBiasup_;
}

const float &VVV0Tree::VMD2jesAbsoluteMPFBiasup() {
  if (not VMD2jesAbsoluteMPFBiasup_isLoaded) {
    if (VMD2jesAbsoluteMPFBiasup_branch != 0) {
      VMD2jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    VMD2jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return VMD2jesAbsoluteMPFBiasup_;
}

const float &VVV0Tree::VMD3jesAbsoluteMPFBiasup() {
  if (not VMD3jesAbsoluteMPFBiasup_isLoaded) {
    if (VMD3jesAbsoluteMPFBiasup_branch != 0) {
      VMD3jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    VMD3jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return VMD3jesAbsoluteMPFBiasup_;
}

const float &VVV0Tree::VMD4jesAbsoluteMPFBiasup() {
  if (not VMD4jesAbsoluteMPFBiasup_isLoaded) {
    if (VMD4jesAbsoluteMPFBiasup_branch != 0) {
      VMD4jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    VMD4jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return VMD4jesAbsoluteMPFBiasup_;
}

const float &VVV0Tree::WMD0jesAbsoluteMPFBiasup() {
  if (not WMD0jesAbsoluteMPFBiasup_isLoaded) {
    if (WMD0jesAbsoluteMPFBiasup_branch != 0) {
      WMD0jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    WMD0jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return WMD0jesAbsoluteMPFBiasup_;
}

const float &VVV0Tree::WMD1jesAbsoluteMPFBiasup() {
  if (not WMD1jesAbsoluteMPFBiasup_isLoaded) {
    if (WMD1jesAbsoluteMPFBiasup_branch != 0) {
      WMD1jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    WMD1jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return WMD1jesAbsoluteMPFBiasup_;
}

const float &VVV0Tree::WMD2jesAbsoluteMPFBiasup() {
  if (not WMD2jesAbsoluteMPFBiasup_isLoaded) {
    if (WMD2jesAbsoluteMPFBiasup_branch != 0) {
      WMD2jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    WMD2jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return WMD2jesAbsoluteMPFBiasup_;
}

const float &VVV0Tree::WMD3jesAbsoluteMPFBiasup() {
  if (not WMD3jesAbsoluteMPFBiasup_isLoaded) {
    if (WMD3jesAbsoluteMPFBiasup_branch != 0) {
      WMD3jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    WMD3jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return WMD3jesAbsoluteMPFBiasup_;
}

const float &VVV0Tree::WMD4jesAbsoluteMPFBiasup() {
  if (not WMD4jesAbsoluteMPFBiasup_isLoaded) {
    if (WMD4jesAbsoluteMPFBiasup_branch != 0) {
      WMD4jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    WMD4jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return WMD4jesAbsoluteMPFBiasup_;
}

const int &VVV0Tree::NQGen0jesAbsoluteMPFBiasup() {
  if (not NQGen0jesAbsoluteMPFBiasup_isLoaded) {
    if (NQGen0jesAbsoluteMPFBiasup_branch != 0) {
      NQGen0jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return NQGen0jesAbsoluteMPFBiasup_;
}

const int &VVV0Tree::NQGen1jesAbsoluteMPFBiasup() {
  if (not NQGen1jesAbsoluteMPFBiasup_isLoaded) {
    if (NQGen1jesAbsoluteMPFBiasup_branch != 0) {
      NQGen1jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return NQGen1jesAbsoluteMPFBiasup_;
}

const int &VVV0Tree::NQGen2jesAbsoluteMPFBiasup() {
  if (not NQGen2jesAbsoluteMPFBiasup_isLoaded) {
    if (NQGen2jesAbsoluteMPFBiasup_branch != 0) {
      NQGen2jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return NQGen2jesAbsoluteMPFBiasup_;
}

const int &VVV0Tree::NQGen3jesAbsoluteMPFBiasup() {
  if (not NQGen3jesAbsoluteMPFBiasup_isLoaded) {
    if (NQGen3jesAbsoluteMPFBiasup_branch != 0) {
      NQGen3jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return NQGen3jesAbsoluteMPFBiasup_;
}

const int &VVV0Tree::NQGen4jesAbsoluteMPFBiasup() {
  if (not NQGen4jesAbsoluteMPFBiasup_isLoaded) {
    if (NQGen4jesAbsoluteMPFBiasup_branch != 0) {
      NQGen4jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return NQGen4jesAbsoluteMPFBiasup_;
}

const int &VVV0Tree::NBGen0jesAbsoluteMPFBiasup() {
  if (not NBGen0jesAbsoluteMPFBiasup_isLoaded) {
    if (NBGen0jesAbsoluteMPFBiasup_branch != 0) {
      NBGen0jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return NBGen0jesAbsoluteMPFBiasup_;
}

const int &VVV0Tree::NBGen1jesAbsoluteMPFBiasup() {
  if (not NBGen1jesAbsoluteMPFBiasup_isLoaded) {
    if (NBGen1jesAbsoluteMPFBiasup_branch != 0) {
      NBGen1jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return NBGen1jesAbsoluteMPFBiasup_;
}

const int &VVV0Tree::NBGen2jesAbsoluteMPFBiasup() {
  if (not NBGen2jesAbsoluteMPFBiasup_isLoaded) {
    if (NBGen2jesAbsoluteMPFBiasup_branch != 0) {
      NBGen2jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return NBGen2jesAbsoluteMPFBiasup_;
}

const int &VVV0Tree::NBGen3jesAbsoluteMPFBiasup() {
  if (not NBGen3jesAbsoluteMPFBiasup_isLoaded) {
    if (NBGen3jesAbsoluteMPFBiasup_branch != 0) {
      NBGen3jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return NBGen3jesAbsoluteMPFBiasup_;
}

const int &VVV0Tree::NBGen4jesAbsoluteMPFBiasup() {
  if (not NBGen4jesAbsoluteMPFBiasup_isLoaded) {
    if (NBGen4jesAbsoluteMPFBiasup_branch != 0) {
      NBGen4jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return NBGen4jesAbsoluteMPFBiasup_;
}

const int &VVV0Tree::NLGen0jesAbsoluteMPFBiasup() {
  if (not NLGen0jesAbsoluteMPFBiasup_isLoaded) {
    if (NLGen0jesAbsoluteMPFBiasup_branch != 0) {
      NLGen0jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return NLGen0jesAbsoluteMPFBiasup_;
}

const int &VVV0Tree::NLGen1jesAbsoluteMPFBiasup() {
  if (not NLGen1jesAbsoluteMPFBiasup_isLoaded) {
    if (NLGen1jesAbsoluteMPFBiasup_branch != 0) {
      NLGen1jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return NLGen1jesAbsoluteMPFBiasup_;
}

const int &VVV0Tree::NLGen2jesAbsoluteMPFBiasup() {
  if (not NLGen2jesAbsoluteMPFBiasup_isLoaded) {
    if (NLGen2jesAbsoluteMPFBiasup_branch != 0) {
      NLGen2jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return NLGen2jesAbsoluteMPFBiasup_;
}

const int &VVV0Tree::NLGen3jesAbsoluteMPFBiasup() {
  if (not NLGen3jesAbsoluteMPFBiasup_isLoaded) {
    if (NLGen3jesAbsoluteMPFBiasup_branch != 0) {
      NLGen3jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return NLGen3jesAbsoluteMPFBiasup_;
}

const int &VVV0Tree::NLGen4jesAbsoluteMPFBiasup() {
  if (not NLGen4jesAbsoluteMPFBiasup_isLoaded) {
    if (NLGen4jesAbsoluteMPFBiasup_branch != 0) {
      NLGen4jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return NLGen4jesAbsoluteMPFBiasup_;
}

const int &VVV0Tree::NVQGen0jesAbsoluteMPFBiasup() {
  if (not NVQGen0jesAbsoluteMPFBiasup_isLoaded) {
    if (NVQGen0jesAbsoluteMPFBiasup_branch != 0) {
      NVQGen0jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return NVQGen0jesAbsoluteMPFBiasup_;
}

const int &VVV0Tree::NVQGen1jesAbsoluteMPFBiasup() {
  if (not NVQGen1jesAbsoluteMPFBiasup_isLoaded) {
    if (NVQGen1jesAbsoluteMPFBiasup_branch != 0) {
      NVQGen1jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return NVQGen1jesAbsoluteMPFBiasup_;
}

const int &VVV0Tree::NVQGen2jesAbsoluteMPFBiasup() {
  if (not NVQGen2jesAbsoluteMPFBiasup_isLoaded) {
    if (NVQGen2jesAbsoluteMPFBiasup_branch != 0) {
      NVQGen2jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return NVQGen2jesAbsoluteMPFBiasup_;
}

const int &VVV0Tree::NVQGen3jesAbsoluteMPFBiasup() {
  if (not NVQGen3jesAbsoluteMPFBiasup_isLoaded) {
    if (NVQGen3jesAbsoluteMPFBiasup_branch != 0) {
      NVQGen3jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return NVQGen3jesAbsoluteMPFBiasup_;
}

const int &VVV0Tree::NVQGen4jesAbsoluteMPFBiasup() {
  if (not NVQGen4jesAbsoluteMPFBiasup_isLoaded) {
    if (NVQGen4jesAbsoluteMPFBiasup_branch != 0) {
      NVQGen4jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return NVQGen4jesAbsoluteMPFBiasup_;
}

const int &VVV0Tree::NiFJjesAbsoluteMPFBiasup() {
  if (not NiFJjesAbsoluteMPFBiasup_isLoaded) {
    if (NiFJjesAbsoluteMPFBiasup_branch != 0) {
      NiFJjesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    NiFJjesAbsoluteMPFBiasup_isLoaded = true;
  }
  return NiFJjesAbsoluteMPFBiasup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesAbsoluteMPFBiasup() {
  if (not iFJ0jesAbsoluteMPFBiasup_isLoaded) {
    if (iFJ0jesAbsoluteMPFBiasup_branch != 0) {
      iFJ0jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return *iFJ0jesAbsoluteMPFBiasup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesAbsoluteMPFBiasup() {
  if (not iFJ1jesAbsoluteMPFBiasup_isLoaded) {
    if (iFJ1jesAbsoluteMPFBiasup_branch != 0) {
      iFJ1jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return *iFJ1jesAbsoluteMPFBiasup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesAbsoluteMPFBiasup() {
  if (not iFJ2jesAbsoluteMPFBiasup_isLoaded) {
    if (iFJ2jesAbsoluteMPFBiasup_branch != 0) {
      iFJ2jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return *iFJ2jesAbsoluteMPFBiasup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesAbsoluteMPFBiasup() {
  if (not iFJ3jesAbsoluteMPFBiasup_isLoaded) {
    if (iFJ3jesAbsoluteMPFBiasup_branch != 0) {
      iFJ3jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return *iFJ3jesAbsoluteMPFBiasup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesAbsoluteMPFBiasup() {
  if (not iFJ4jesAbsoluteMPFBiasup_isLoaded) {
    if (iFJ4jesAbsoluteMPFBiasup_branch != 0) {
      iFJ4jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return *iFJ4jesAbsoluteMPFBiasup_;
}

const float &VVV0Tree::iVMD0jesAbsoluteMPFBiasup() {
  if (not iVMD0jesAbsoluteMPFBiasup_isLoaded) {
    if (iVMD0jesAbsoluteMPFBiasup_branch != 0) {
      iVMD0jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return iVMD0jesAbsoluteMPFBiasup_;
}

const float &VVV0Tree::iVMD1jesAbsoluteMPFBiasup() {
  if (not iVMD1jesAbsoluteMPFBiasup_isLoaded) {
    if (iVMD1jesAbsoluteMPFBiasup_branch != 0) {
      iVMD1jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return iVMD1jesAbsoluteMPFBiasup_;
}

const float &VVV0Tree::iVMD2jesAbsoluteMPFBiasup() {
  if (not iVMD2jesAbsoluteMPFBiasup_isLoaded) {
    if (iVMD2jesAbsoluteMPFBiasup_branch != 0) {
      iVMD2jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return iVMD2jesAbsoluteMPFBiasup_;
}

const float &VVV0Tree::iVMD3jesAbsoluteMPFBiasup() {
  if (not iVMD3jesAbsoluteMPFBiasup_isLoaded) {
    if (iVMD3jesAbsoluteMPFBiasup_branch != 0) {
      iVMD3jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return iVMD3jesAbsoluteMPFBiasup_;
}

const float &VVV0Tree::iVMD4jesAbsoluteMPFBiasup() {
  if (not iVMD4jesAbsoluteMPFBiasup_isLoaded) {
    if (iVMD4jesAbsoluteMPFBiasup_branch != 0) {
      iVMD4jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return iVMD4jesAbsoluteMPFBiasup_;
}

const float &VVV0Tree::iWMD0jesAbsoluteMPFBiasup() {
  if (not iWMD0jesAbsoluteMPFBiasup_isLoaded) {
    if (iWMD0jesAbsoluteMPFBiasup_branch != 0) {
      iWMD0jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return iWMD0jesAbsoluteMPFBiasup_;
}

const float &VVV0Tree::iWMD1jesAbsoluteMPFBiasup() {
  if (not iWMD1jesAbsoluteMPFBiasup_isLoaded) {
    if (iWMD1jesAbsoluteMPFBiasup_branch != 0) {
      iWMD1jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return iWMD1jesAbsoluteMPFBiasup_;
}

const float &VVV0Tree::iWMD2jesAbsoluteMPFBiasup() {
  if (not iWMD2jesAbsoluteMPFBiasup_isLoaded) {
    if (iWMD2jesAbsoluteMPFBiasup_branch != 0) {
      iWMD2jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return iWMD2jesAbsoluteMPFBiasup_;
}

const float &VVV0Tree::iWMD3jesAbsoluteMPFBiasup() {
  if (not iWMD3jesAbsoluteMPFBiasup_isLoaded) {
    if (iWMD3jesAbsoluteMPFBiasup_branch != 0) {
      iWMD3jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return iWMD3jesAbsoluteMPFBiasup_;
}

const float &VVV0Tree::iWMD4jesAbsoluteMPFBiasup() {
  if (not iWMD4jesAbsoluteMPFBiasup_isLoaded) {
    if (iWMD4jesAbsoluteMPFBiasup_branch != 0) {
      iWMD4jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return iWMD4jesAbsoluteMPFBiasup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesAbsoluteMPFBiasup() {
  if (not METjesAbsoluteMPFBiasup_isLoaded) {
    if (METjesAbsoluteMPFBiasup_branch != 0) {
      METjesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch METjesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    METjesAbsoluteMPFBiasup_isLoaded = true;
  }
  return *METjesAbsoluteMPFBiasup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesAbsoluteMPFBiasup() {
  if (not NujesAbsoluteMPFBiasup_isLoaded) {
    if (NujesAbsoluteMPFBiasup_branch != 0) {
      NujesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch NujesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    NujesAbsoluteMPFBiasup_isLoaded = true;
  }
  return *NujesAbsoluteMPFBiasup_;
}

const int &VVV0Tree::NJjesAbsoluteMPFBiasup() {
  if (not NJjesAbsoluteMPFBiasup_isLoaded) {
    if (NJjesAbsoluteMPFBiasup_branch != 0) {
      NJjesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch NJjesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    NJjesAbsoluteMPFBiasup_isLoaded = true;
  }
  return NJjesAbsoluteMPFBiasup_;
}

const int &VVV0Tree::NbLoosejesAbsoluteMPFBiasup() {
  if (not NbLoosejesAbsoluteMPFBiasup_isLoaded) {
    if (NbLoosejesAbsoluteMPFBiasup_branch != 0) {
      NbLoosejesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesAbsoluteMPFBiasup_isLoaded = true;
  }
  return NbLoosejesAbsoluteMPFBiasup_;
}

const int &VVV0Tree::NbMediumjesAbsoluteMPFBiasup() {
  if (not NbMediumjesAbsoluteMPFBiasup_isLoaded) {
    if (NbMediumjesAbsoluteMPFBiasup_branch != 0) {
      NbMediumjesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesAbsoluteMPFBiasup_isLoaded = true;
  }
  return NbMediumjesAbsoluteMPFBiasup_;
}

const int &VVV0Tree::NbTightjesAbsoluteMPFBiasup() {
  if (not NbTightjesAbsoluteMPFBiasup_isLoaded) {
    if (NbTightjesAbsoluteMPFBiasup_branch != 0) {
      NbTightjesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    NbTightjesAbsoluteMPFBiasup_isLoaded = true;
  }
  return NbTightjesAbsoluteMPFBiasup_;
}

const int &VVV0Tree::NoORNbLoosejesAbsoluteMPFBiasup() {
  if (not NoORNbLoosejesAbsoluteMPFBiasup_isLoaded) {
    if (NoORNbLoosejesAbsoluteMPFBiasup_branch != 0) {
      NoORNbLoosejesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesAbsoluteMPFBiasup_isLoaded = true;
  }
  return NoORNbLoosejesAbsoluteMPFBiasup_;
}

const int &VVV0Tree::NoORNbMediumjesAbsoluteMPFBiasup() {
  if (not NoORNbMediumjesAbsoluteMPFBiasup_isLoaded) {
    if (NoORNbMediumjesAbsoluteMPFBiasup_branch != 0) {
      NoORNbMediumjesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesAbsoluteMPFBiasup_isLoaded = true;
  }
  return NoORNbMediumjesAbsoluteMPFBiasup_;
}

const int &VVV0Tree::NoORNbTightjesAbsoluteMPFBiasup() {
  if (not NoORNbTightjesAbsoluteMPFBiasup_isLoaded) {
    if (NoORNbTightjesAbsoluteMPFBiasup_branch != 0) {
      NoORNbTightjesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesAbsoluteMPFBiasup_isLoaded = true;
  }
  return NoORNbTightjesAbsoluteMPFBiasup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesAbsoluteMPFBiasup() {
  if (not J0jesAbsoluteMPFBiasup_isLoaded) {
    if (J0jesAbsoluteMPFBiasup_branch != 0) {
      J0jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch J0jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    J0jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return *J0jesAbsoluteMPFBiasup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesAbsoluteMPFBiasup() {
  if (not J1jesAbsoluteMPFBiasup_isLoaded) {
    if (J1jesAbsoluteMPFBiasup_branch != 0) {
      J1jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch J1jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    J1jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return *J1jesAbsoluteMPFBiasup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesAbsoluteMPFBiasup() {
  if (not J2jesAbsoluteMPFBiasup_isLoaded) {
    if (J2jesAbsoluteMPFBiasup_branch != 0) {
      J2jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch J2jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    J2jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return *J2jesAbsoluteMPFBiasup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesAbsoluteMPFBiasup() {
  if (not J3jesAbsoluteMPFBiasup_isLoaded) {
    if (J3jesAbsoluteMPFBiasup_branch != 0) {
      J3jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch J3jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    J3jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return *J3jesAbsoluteMPFBiasup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesAbsoluteMPFBiasup() {
  if (not J4jesAbsoluteMPFBiasup_isLoaded) {
    if (J4jesAbsoluteMPFBiasup_branch != 0) {
      J4jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch J4jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    J4jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return *J4jesAbsoluteMPFBiasup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesAbsoluteMPFBiasup() {
  if (not J5jesAbsoluteMPFBiasup_isLoaded) {
    if (J5jesAbsoluteMPFBiasup_branch != 0) {
      J5jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch J5jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    J5jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return *J5jesAbsoluteMPFBiasup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesAbsoluteMPFBiasup() {
  if (not J6jesAbsoluteMPFBiasup_isLoaded) {
    if (J6jesAbsoluteMPFBiasup_branch != 0) {
      J6jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch J6jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    J6jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return *J6jesAbsoluteMPFBiasup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesAbsoluteMPFBiasup() {
  if (not J7jesAbsoluteMPFBiasup_isLoaded) {
    if (J7jesAbsoluteMPFBiasup_branch != 0) {
      J7jesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch J7jesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    J7jesAbsoluteMPFBiasup_isLoaded = true;
  }
  return *J7jesAbsoluteMPFBiasup_;
}

const vector<int> &VVV0Tree::NQJGenjesAbsoluteMPFBiasup() {
  if (not NQJGenjesAbsoluteMPFBiasup_isLoaded) {
    if (NQJGenjesAbsoluteMPFBiasup_branch != 0) {
      NQJGenjesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesAbsoluteMPFBiasup_isLoaded = true;
  }
  return *NQJGenjesAbsoluteMPFBiasup_;
}

const vector<int> &VVV0Tree::NBJGenjesAbsoluteMPFBiasup() {
  if (not NBJGenjesAbsoluteMPFBiasup_isLoaded) {
    if (NBJGenjesAbsoluteMPFBiasup_branch != 0) {
      NBJGenjesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesAbsoluteMPFBiasup_isLoaded = true;
  }
  return *NBJGenjesAbsoluteMPFBiasup_;
}

const vector<int> &VVV0Tree::NLJGenjesAbsoluteMPFBiasup() {
  if (not NLJGenjesAbsoluteMPFBiasup_isLoaded) {
    if (NLJGenjesAbsoluteMPFBiasup_branch != 0) {
      NLJGenjesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesAbsoluteMPFBiasup_isLoaded = true;
  }
  return *NLJGenjesAbsoluteMPFBiasup_;
}

const float &VVV0Tree::MVVXjesAbsoluteMPFBiasup() {
  if (not MVVXjesAbsoluteMPFBiasup_isLoaded) {
    if (MVVXjesAbsoluteMPFBiasup_branch != 0) {
      MVVXjesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    MVVXjesAbsoluteMPFBiasup_isLoaded = true;
  }
  return MVVXjesAbsoluteMPFBiasup_;
}

const float &VVV0Tree::PtVVXjesAbsoluteMPFBiasup() {
  if (not PtVVXjesAbsoluteMPFBiasup_isLoaded) {
    if (PtVVXjesAbsoluteMPFBiasup_branch != 0) {
      PtVVXjesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesAbsoluteMPFBiasup_isLoaded = true;
  }
  return PtVVXjesAbsoluteMPFBiasup_;
}

const float &VVV0Tree::HTjesAbsoluteMPFBiasup() {
  if (not HTjesAbsoluteMPFBiasup_isLoaded) {
    if (HTjesAbsoluteMPFBiasup_branch != 0) {
      HTjesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch HTjesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    HTjesAbsoluteMPFBiasup_isLoaded = true;
  }
  return HTjesAbsoluteMPFBiasup_;
}

const float &VVV0Tree::HTJjesAbsoluteMPFBiasup() {
  if (not HTJjesAbsoluteMPFBiasup_isLoaded) {
    if (HTJjesAbsoluteMPFBiasup_branch != 0) {
      HTJjesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch HTJjesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    HTJjesAbsoluteMPFBiasup_isLoaded = true;
  }
  return HTJjesAbsoluteMPFBiasup_;
}

const float &VVV0Tree::HTFJjesAbsoluteMPFBiasup() {
  if (not HTFJjesAbsoluteMPFBiasup_isLoaded) {
    if (HTFJjesAbsoluteMPFBiasup_branch != 0) {
      HTFJjesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    HTFJjesAbsoluteMPFBiasup_isLoaded = true;
  }
  return HTFJjesAbsoluteMPFBiasup_;
}

const float &VVV0Tree::SumPtFJjesAbsoluteMPFBiasup() {
  if (not SumPtFJjesAbsoluteMPFBiasup_isLoaded) {
    if (SumPtFJjesAbsoluteMPFBiasup_branch != 0) {
      SumPtFJjesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesAbsoluteMPFBiasup_isLoaded = true;
  }
  return SumPtFJjesAbsoluteMPFBiasup_;
}

const float &VVV0Tree::SumPtJjesAbsoluteMPFBiasup() {
  if (not SumPtJjesAbsoluteMPFBiasup_isLoaded) {
    if (SumPtJjesAbsoluteMPFBiasup_branch != 0) {
      SumPtJjesAbsoluteMPFBiasup_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesAbsoluteMPFBiasup_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesAbsoluteMPFBiasup_isLoaded = true;
  }
  return SumPtJjesAbsoluteMPFBiasup_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesAbsoluteMPFBiasdn() {
  if (not JsjesAbsoluteMPFBiasdn_isLoaded) {
    if (JsjesAbsoluteMPFBiasdn_branch != 0) {
      JsjesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch JsjesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    JsjesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return *JsjesAbsoluteMPFBiasdn_;
}

const int &VVV0Tree::NFJjesAbsoluteMPFBiasdn() {
  if (not NFJjesAbsoluteMPFBiasdn_isLoaded) {
    if (NFJjesAbsoluteMPFBiasdn_branch != 0) {
      NFJjesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch NFJjesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    NFJjesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return NFJjesAbsoluteMPFBiasdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesAbsoluteMPFBiasdn() {
  if (not FJ0jesAbsoluteMPFBiasdn_isLoaded) {
    if (FJ0jesAbsoluteMPFBiasdn_branch != 0) {
      FJ0jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    FJ0jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return *FJ0jesAbsoluteMPFBiasdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesAbsoluteMPFBiasdn() {
  if (not FJ1jesAbsoluteMPFBiasdn_isLoaded) {
    if (FJ1jesAbsoluteMPFBiasdn_branch != 0) {
      FJ1jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    FJ1jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return *FJ1jesAbsoluteMPFBiasdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesAbsoluteMPFBiasdn() {
  if (not FJ2jesAbsoluteMPFBiasdn_isLoaded) {
    if (FJ2jesAbsoluteMPFBiasdn_branch != 0) {
      FJ2jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    FJ2jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return *FJ2jesAbsoluteMPFBiasdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesAbsoluteMPFBiasdn() {
  if (not FJ3jesAbsoluteMPFBiasdn_isLoaded) {
    if (FJ3jesAbsoluteMPFBiasdn_branch != 0) {
      FJ3jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    FJ3jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return *FJ3jesAbsoluteMPFBiasdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesAbsoluteMPFBiasdn() {
  if (not FJ4jesAbsoluteMPFBiasdn_isLoaded) {
    if (FJ4jesAbsoluteMPFBiasdn_branch != 0) {
      FJ4jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    FJ4jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return *FJ4jesAbsoluteMPFBiasdn_;
}

const float &VVV0Tree::VMD0jesAbsoluteMPFBiasdn() {
  if (not VMD0jesAbsoluteMPFBiasdn_isLoaded) {
    if (VMD0jesAbsoluteMPFBiasdn_branch != 0) {
      VMD0jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    VMD0jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return VMD0jesAbsoluteMPFBiasdn_;
}

const float &VVV0Tree::VMD1jesAbsoluteMPFBiasdn() {
  if (not VMD1jesAbsoluteMPFBiasdn_isLoaded) {
    if (VMD1jesAbsoluteMPFBiasdn_branch != 0) {
      VMD1jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    VMD1jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return VMD1jesAbsoluteMPFBiasdn_;
}

const float &VVV0Tree::VMD2jesAbsoluteMPFBiasdn() {
  if (not VMD2jesAbsoluteMPFBiasdn_isLoaded) {
    if (VMD2jesAbsoluteMPFBiasdn_branch != 0) {
      VMD2jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    VMD2jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return VMD2jesAbsoluteMPFBiasdn_;
}

const float &VVV0Tree::VMD3jesAbsoluteMPFBiasdn() {
  if (not VMD3jesAbsoluteMPFBiasdn_isLoaded) {
    if (VMD3jesAbsoluteMPFBiasdn_branch != 0) {
      VMD3jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    VMD3jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return VMD3jesAbsoluteMPFBiasdn_;
}

const float &VVV0Tree::VMD4jesAbsoluteMPFBiasdn() {
  if (not VMD4jesAbsoluteMPFBiasdn_isLoaded) {
    if (VMD4jesAbsoluteMPFBiasdn_branch != 0) {
      VMD4jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    VMD4jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return VMD4jesAbsoluteMPFBiasdn_;
}

const float &VVV0Tree::WMD0jesAbsoluteMPFBiasdn() {
  if (not WMD0jesAbsoluteMPFBiasdn_isLoaded) {
    if (WMD0jesAbsoluteMPFBiasdn_branch != 0) {
      WMD0jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    WMD0jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return WMD0jesAbsoluteMPFBiasdn_;
}

const float &VVV0Tree::WMD1jesAbsoluteMPFBiasdn() {
  if (not WMD1jesAbsoluteMPFBiasdn_isLoaded) {
    if (WMD1jesAbsoluteMPFBiasdn_branch != 0) {
      WMD1jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    WMD1jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return WMD1jesAbsoluteMPFBiasdn_;
}

const float &VVV0Tree::WMD2jesAbsoluteMPFBiasdn() {
  if (not WMD2jesAbsoluteMPFBiasdn_isLoaded) {
    if (WMD2jesAbsoluteMPFBiasdn_branch != 0) {
      WMD2jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    WMD2jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return WMD2jesAbsoluteMPFBiasdn_;
}

const float &VVV0Tree::WMD3jesAbsoluteMPFBiasdn() {
  if (not WMD3jesAbsoluteMPFBiasdn_isLoaded) {
    if (WMD3jesAbsoluteMPFBiasdn_branch != 0) {
      WMD3jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    WMD3jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return WMD3jesAbsoluteMPFBiasdn_;
}

const float &VVV0Tree::WMD4jesAbsoluteMPFBiasdn() {
  if (not WMD4jesAbsoluteMPFBiasdn_isLoaded) {
    if (WMD4jesAbsoluteMPFBiasdn_branch != 0) {
      WMD4jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    WMD4jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return WMD4jesAbsoluteMPFBiasdn_;
}

const int &VVV0Tree::NQGen0jesAbsoluteMPFBiasdn() {
  if (not NQGen0jesAbsoluteMPFBiasdn_isLoaded) {
    if (NQGen0jesAbsoluteMPFBiasdn_branch != 0) {
      NQGen0jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return NQGen0jesAbsoluteMPFBiasdn_;
}

const int &VVV0Tree::NQGen1jesAbsoluteMPFBiasdn() {
  if (not NQGen1jesAbsoluteMPFBiasdn_isLoaded) {
    if (NQGen1jesAbsoluteMPFBiasdn_branch != 0) {
      NQGen1jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return NQGen1jesAbsoluteMPFBiasdn_;
}

const int &VVV0Tree::NQGen2jesAbsoluteMPFBiasdn() {
  if (not NQGen2jesAbsoluteMPFBiasdn_isLoaded) {
    if (NQGen2jesAbsoluteMPFBiasdn_branch != 0) {
      NQGen2jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return NQGen2jesAbsoluteMPFBiasdn_;
}

const int &VVV0Tree::NQGen3jesAbsoluteMPFBiasdn() {
  if (not NQGen3jesAbsoluteMPFBiasdn_isLoaded) {
    if (NQGen3jesAbsoluteMPFBiasdn_branch != 0) {
      NQGen3jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return NQGen3jesAbsoluteMPFBiasdn_;
}

const int &VVV0Tree::NQGen4jesAbsoluteMPFBiasdn() {
  if (not NQGen4jesAbsoluteMPFBiasdn_isLoaded) {
    if (NQGen4jesAbsoluteMPFBiasdn_branch != 0) {
      NQGen4jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return NQGen4jesAbsoluteMPFBiasdn_;
}

const int &VVV0Tree::NBGen0jesAbsoluteMPFBiasdn() {
  if (not NBGen0jesAbsoluteMPFBiasdn_isLoaded) {
    if (NBGen0jesAbsoluteMPFBiasdn_branch != 0) {
      NBGen0jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return NBGen0jesAbsoluteMPFBiasdn_;
}

const int &VVV0Tree::NBGen1jesAbsoluteMPFBiasdn() {
  if (not NBGen1jesAbsoluteMPFBiasdn_isLoaded) {
    if (NBGen1jesAbsoluteMPFBiasdn_branch != 0) {
      NBGen1jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return NBGen1jesAbsoluteMPFBiasdn_;
}

const int &VVV0Tree::NBGen2jesAbsoluteMPFBiasdn() {
  if (not NBGen2jesAbsoluteMPFBiasdn_isLoaded) {
    if (NBGen2jesAbsoluteMPFBiasdn_branch != 0) {
      NBGen2jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return NBGen2jesAbsoluteMPFBiasdn_;
}

const int &VVV0Tree::NBGen3jesAbsoluteMPFBiasdn() {
  if (not NBGen3jesAbsoluteMPFBiasdn_isLoaded) {
    if (NBGen3jesAbsoluteMPFBiasdn_branch != 0) {
      NBGen3jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return NBGen3jesAbsoluteMPFBiasdn_;
}

const int &VVV0Tree::NBGen4jesAbsoluteMPFBiasdn() {
  if (not NBGen4jesAbsoluteMPFBiasdn_isLoaded) {
    if (NBGen4jesAbsoluteMPFBiasdn_branch != 0) {
      NBGen4jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return NBGen4jesAbsoluteMPFBiasdn_;
}

const int &VVV0Tree::NLGen0jesAbsoluteMPFBiasdn() {
  if (not NLGen0jesAbsoluteMPFBiasdn_isLoaded) {
    if (NLGen0jesAbsoluteMPFBiasdn_branch != 0) {
      NLGen0jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return NLGen0jesAbsoluteMPFBiasdn_;
}

const int &VVV0Tree::NLGen1jesAbsoluteMPFBiasdn() {
  if (not NLGen1jesAbsoluteMPFBiasdn_isLoaded) {
    if (NLGen1jesAbsoluteMPFBiasdn_branch != 0) {
      NLGen1jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return NLGen1jesAbsoluteMPFBiasdn_;
}

const int &VVV0Tree::NLGen2jesAbsoluteMPFBiasdn() {
  if (not NLGen2jesAbsoluteMPFBiasdn_isLoaded) {
    if (NLGen2jesAbsoluteMPFBiasdn_branch != 0) {
      NLGen2jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return NLGen2jesAbsoluteMPFBiasdn_;
}

const int &VVV0Tree::NLGen3jesAbsoluteMPFBiasdn() {
  if (not NLGen3jesAbsoluteMPFBiasdn_isLoaded) {
    if (NLGen3jesAbsoluteMPFBiasdn_branch != 0) {
      NLGen3jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return NLGen3jesAbsoluteMPFBiasdn_;
}

const int &VVV0Tree::NLGen4jesAbsoluteMPFBiasdn() {
  if (not NLGen4jesAbsoluteMPFBiasdn_isLoaded) {
    if (NLGen4jesAbsoluteMPFBiasdn_branch != 0) {
      NLGen4jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return NLGen4jesAbsoluteMPFBiasdn_;
}

const int &VVV0Tree::NVQGen0jesAbsoluteMPFBiasdn() {
  if (not NVQGen0jesAbsoluteMPFBiasdn_isLoaded) {
    if (NVQGen0jesAbsoluteMPFBiasdn_branch != 0) {
      NVQGen0jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return NVQGen0jesAbsoluteMPFBiasdn_;
}

const int &VVV0Tree::NVQGen1jesAbsoluteMPFBiasdn() {
  if (not NVQGen1jesAbsoluteMPFBiasdn_isLoaded) {
    if (NVQGen1jesAbsoluteMPFBiasdn_branch != 0) {
      NVQGen1jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return NVQGen1jesAbsoluteMPFBiasdn_;
}

const int &VVV0Tree::NVQGen2jesAbsoluteMPFBiasdn() {
  if (not NVQGen2jesAbsoluteMPFBiasdn_isLoaded) {
    if (NVQGen2jesAbsoluteMPFBiasdn_branch != 0) {
      NVQGen2jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return NVQGen2jesAbsoluteMPFBiasdn_;
}

const int &VVV0Tree::NVQGen3jesAbsoluteMPFBiasdn() {
  if (not NVQGen3jesAbsoluteMPFBiasdn_isLoaded) {
    if (NVQGen3jesAbsoluteMPFBiasdn_branch != 0) {
      NVQGen3jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return NVQGen3jesAbsoluteMPFBiasdn_;
}

const int &VVV0Tree::NVQGen4jesAbsoluteMPFBiasdn() {
  if (not NVQGen4jesAbsoluteMPFBiasdn_isLoaded) {
    if (NVQGen4jesAbsoluteMPFBiasdn_branch != 0) {
      NVQGen4jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return NVQGen4jesAbsoluteMPFBiasdn_;
}

const int &VVV0Tree::NiFJjesAbsoluteMPFBiasdn() {
  if (not NiFJjesAbsoluteMPFBiasdn_isLoaded) {
    if (NiFJjesAbsoluteMPFBiasdn_branch != 0) {
      NiFJjesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    NiFJjesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return NiFJjesAbsoluteMPFBiasdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesAbsoluteMPFBiasdn() {
  if (not iFJ0jesAbsoluteMPFBiasdn_isLoaded) {
    if (iFJ0jesAbsoluteMPFBiasdn_branch != 0) {
      iFJ0jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return *iFJ0jesAbsoluteMPFBiasdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesAbsoluteMPFBiasdn() {
  if (not iFJ1jesAbsoluteMPFBiasdn_isLoaded) {
    if (iFJ1jesAbsoluteMPFBiasdn_branch != 0) {
      iFJ1jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return *iFJ1jesAbsoluteMPFBiasdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesAbsoluteMPFBiasdn() {
  if (not iFJ2jesAbsoluteMPFBiasdn_isLoaded) {
    if (iFJ2jesAbsoluteMPFBiasdn_branch != 0) {
      iFJ2jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return *iFJ2jesAbsoluteMPFBiasdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesAbsoluteMPFBiasdn() {
  if (not iFJ3jesAbsoluteMPFBiasdn_isLoaded) {
    if (iFJ3jesAbsoluteMPFBiasdn_branch != 0) {
      iFJ3jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return *iFJ3jesAbsoluteMPFBiasdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesAbsoluteMPFBiasdn() {
  if (not iFJ4jesAbsoluteMPFBiasdn_isLoaded) {
    if (iFJ4jesAbsoluteMPFBiasdn_branch != 0) {
      iFJ4jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return *iFJ4jesAbsoluteMPFBiasdn_;
}

const float &VVV0Tree::iVMD0jesAbsoluteMPFBiasdn() {
  if (not iVMD0jesAbsoluteMPFBiasdn_isLoaded) {
    if (iVMD0jesAbsoluteMPFBiasdn_branch != 0) {
      iVMD0jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return iVMD0jesAbsoluteMPFBiasdn_;
}

const float &VVV0Tree::iVMD1jesAbsoluteMPFBiasdn() {
  if (not iVMD1jesAbsoluteMPFBiasdn_isLoaded) {
    if (iVMD1jesAbsoluteMPFBiasdn_branch != 0) {
      iVMD1jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return iVMD1jesAbsoluteMPFBiasdn_;
}

const float &VVV0Tree::iVMD2jesAbsoluteMPFBiasdn() {
  if (not iVMD2jesAbsoluteMPFBiasdn_isLoaded) {
    if (iVMD2jesAbsoluteMPFBiasdn_branch != 0) {
      iVMD2jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return iVMD2jesAbsoluteMPFBiasdn_;
}

const float &VVV0Tree::iVMD3jesAbsoluteMPFBiasdn() {
  if (not iVMD3jesAbsoluteMPFBiasdn_isLoaded) {
    if (iVMD3jesAbsoluteMPFBiasdn_branch != 0) {
      iVMD3jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return iVMD3jesAbsoluteMPFBiasdn_;
}

const float &VVV0Tree::iVMD4jesAbsoluteMPFBiasdn() {
  if (not iVMD4jesAbsoluteMPFBiasdn_isLoaded) {
    if (iVMD4jesAbsoluteMPFBiasdn_branch != 0) {
      iVMD4jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return iVMD4jesAbsoluteMPFBiasdn_;
}

const float &VVV0Tree::iWMD0jesAbsoluteMPFBiasdn() {
  if (not iWMD0jesAbsoluteMPFBiasdn_isLoaded) {
    if (iWMD0jesAbsoluteMPFBiasdn_branch != 0) {
      iWMD0jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return iWMD0jesAbsoluteMPFBiasdn_;
}

const float &VVV0Tree::iWMD1jesAbsoluteMPFBiasdn() {
  if (not iWMD1jesAbsoluteMPFBiasdn_isLoaded) {
    if (iWMD1jesAbsoluteMPFBiasdn_branch != 0) {
      iWMD1jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return iWMD1jesAbsoluteMPFBiasdn_;
}

const float &VVV0Tree::iWMD2jesAbsoluteMPFBiasdn() {
  if (not iWMD2jesAbsoluteMPFBiasdn_isLoaded) {
    if (iWMD2jesAbsoluteMPFBiasdn_branch != 0) {
      iWMD2jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return iWMD2jesAbsoluteMPFBiasdn_;
}

const float &VVV0Tree::iWMD3jesAbsoluteMPFBiasdn() {
  if (not iWMD3jesAbsoluteMPFBiasdn_isLoaded) {
    if (iWMD3jesAbsoluteMPFBiasdn_branch != 0) {
      iWMD3jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return iWMD3jesAbsoluteMPFBiasdn_;
}

const float &VVV0Tree::iWMD4jesAbsoluteMPFBiasdn() {
  if (not iWMD4jesAbsoluteMPFBiasdn_isLoaded) {
    if (iWMD4jesAbsoluteMPFBiasdn_branch != 0) {
      iWMD4jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return iWMD4jesAbsoluteMPFBiasdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesAbsoluteMPFBiasdn() {
  if (not METjesAbsoluteMPFBiasdn_isLoaded) {
    if (METjesAbsoluteMPFBiasdn_branch != 0) {
      METjesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch METjesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    METjesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return *METjesAbsoluteMPFBiasdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesAbsoluteMPFBiasdn() {
  if (not NujesAbsoluteMPFBiasdn_isLoaded) {
    if (NujesAbsoluteMPFBiasdn_branch != 0) {
      NujesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch NujesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    NujesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return *NujesAbsoluteMPFBiasdn_;
}

const int &VVV0Tree::NJjesAbsoluteMPFBiasdn() {
  if (not NJjesAbsoluteMPFBiasdn_isLoaded) {
    if (NJjesAbsoluteMPFBiasdn_branch != 0) {
      NJjesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch NJjesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    NJjesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return NJjesAbsoluteMPFBiasdn_;
}

const int &VVV0Tree::NbLoosejesAbsoluteMPFBiasdn() {
  if (not NbLoosejesAbsoluteMPFBiasdn_isLoaded) {
    if (NbLoosejesAbsoluteMPFBiasdn_branch != 0) {
      NbLoosejesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return NbLoosejesAbsoluteMPFBiasdn_;
}

const int &VVV0Tree::NbMediumjesAbsoluteMPFBiasdn() {
  if (not NbMediumjesAbsoluteMPFBiasdn_isLoaded) {
    if (NbMediumjesAbsoluteMPFBiasdn_branch != 0) {
      NbMediumjesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return NbMediumjesAbsoluteMPFBiasdn_;
}

const int &VVV0Tree::NbTightjesAbsoluteMPFBiasdn() {
  if (not NbTightjesAbsoluteMPFBiasdn_isLoaded) {
    if (NbTightjesAbsoluteMPFBiasdn_branch != 0) {
      NbTightjesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    NbTightjesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return NbTightjesAbsoluteMPFBiasdn_;
}

const int &VVV0Tree::NoORNbLoosejesAbsoluteMPFBiasdn() {
  if (not NoORNbLoosejesAbsoluteMPFBiasdn_isLoaded) {
    if (NoORNbLoosejesAbsoluteMPFBiasdn_branch != 0) {
      NoORNbLoosejesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return NoORNbLoosejesAbsoluteMPFBiasdn_;
}

const int &VVV0Tree::NoORNbMediumjesAbsoluteMPFBiasdn() {
  if (not NoORNbMediumjesAbsoluteMPFBiasdn_isLoaded) {
    if (NoORNbMediumjesAbsoluteMPFBiasdn_branch != 0) {
      NoORNbMediumjesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return NoORNbMediumjesAbsoluteMPFBiasdn_;
}

const int &VVV0Tree::NoORNbTightjesAbsoluteMPFBiasdn() {
  if (not NoORNbTightjesAbsoluteMPFBiasdn_isLoaded) {
    if (NoORNbTightjesAbsoluteMPFBiasdn_branch != 0) {
      NoORNbTightjesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return NoORNbTightjesAbsoluteMPFBiasdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesAbsoluteMPFBiasdn() {
  if (not J0jesAbsoluteMPFBiasdn_isLoaded) {
    if (J0jesAbsoluteMPFBiasdn_branch != 0) {
      J0jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch J0jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    J0jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return *J0jesAbsoluteMPFBiasdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesAbsoluteMPFBiasdn() {
  if (not J1jesAbsoluteMPFBiasdn_isLoaded) {
    if (J1jesAbsoluteMPFBiasdn_branch != 0) {
      J1jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch J1jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    J1jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return *J1jesAbsoluteMPFBiasdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesAbsoluteMPFBiasdn() {
  if (not J2jesAbsoluteMPFBiasdn_isLoaded) {
    if (J2jesAbsoluteMPFBiasdn_branch != 0) {
      J2jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch J2jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    J2jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return *J2jesAbsoluteMPFBiasdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesAbsoluteMPFBiasdn() {
  if (not J3jesAbsoluteMPFBiasdn_isLoaded) {
    if (J3jesAbsoluteMPFBiasdn_branch != 0) {
      J3jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch J3jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    J3jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return *J3jesAbsoluteMPFBiasdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesAbsoluteMPFBiasdn() {
  if (not J4jesAbsoluteMPFBiasdn_isLoaded) {
    if (J4jesAbsoluteMPFBiasdn_branch != 0) {
      J4jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch J4jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    J4jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return *J4jesAbsoluteMPFBiasdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesAbsoluteMPFBiasdn() {
  if (not J5jesAbsoluteMPFBiasdn_isLoaded) {
    if (J5jesAbsoluteMPFBiasdn_branch != 0) {
      J5jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch J5jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    J5jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return *J5jesAbsoluteMPFBiasdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesAbsoluteMPFBiasdn() {
  if (not J6jesAbsoluteMPFBiasdn_isLoaded) {
    if (J6jesAbsoluteMPFBiasdn_branch != 0) {
      J6jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch J6jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    J6jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return *J6jesAbsoluteMPFBiasdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesAbsoluteMPFBiasdn() {
  if (not J7jesAbsoluteMPFBiasdn_isLoaded) {
    if (J7jesAbsoluteMPFBiasdn_branch != 0) {
      J7jesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch J7jesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    J7jesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return *J7jesAbsoluteMPFBiasdn_;
}

const vector<int> &VVV0Tree::NQJGenjesAbsoluteMPFBiasdn() {
  if (not NQJGenjesAbsoluteMPFBiasdn_isLoaded) {
    if (NQJGenjesAbsoluteMPFBiasdn_branch != 0) {
      NQJGenjesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return *NQJGenjesAbsoluteMPFBiasdn_;
}

const vector<int> &VVV0Tree::NBJGenjesAbsoluteMPFBiasdn() {
  if (not NBJGenjesAbsoluteMPFBiasdn_isLoaded) {
    if (NBJGenjesAbsoluteMPFBiasdn_branch != 0) {
      NBJGenjesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return *NBJGenjesAbsoluteMPFBiasdn_;
}

const vector<int> &VVV0Tree::NLJGenjesAbsoluteMPFBiasdn() {
  if (not NLJGenjesAbsoluteMPFBiasdn_isLoaded) {
    if (NLJGenjesAbsoluteMPFBiasdn_branch != 0) {
      NLJGenjesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return *NLJGenjesAbsoluteMPFBiasdn_;
}

const float &VVV0Tree::MVVXjesAbsoluteMPFBiasdn() {
  if (not MVVXjesAbsoluteMPFBiasdn_isLoaded) {
    if (MVVXjesAbsoluteMPFBiasdn_branch != 0) {
      MVVXjesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    MVVXjesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return MVVXjesAbsoluteMPFBiasdn_;
}

const float &VVV0Tree::PtVVXjesAbsoluteMPFBiasdn() {
  if (not PtVVXjesAbsoluteMPFBiasdn_isLoaded) {
    if (PtVVXjesAbsoluteMPFBiasdn_branch != 0) {
      PtVVXjesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return PtVVXjesAbsoluteMPFBiasdn_;
}

const float &VVV0Tree::HTjesAbsoluteMPFBiasdn() {
  if (not HTjesAbsoluteMPFBiasdn_isLoaded) {
    if (HTjesAbsoluteMPFBiasdn_branch != 0) {
      HTjesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch HTjesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    HTjesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return HTjesAbsoluteMPFBiasdn_;
}

const float &VVV0Tree::HTJjesAbsoluteMPFBiasdn() {
  if (not HTJjesAbsoluteMPFBiasdn_isLoaded) {
    if (HTJjesAbsoluteMPFBiasdn_branch != 0) {
      HTJjesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch HTJjesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    HTJjesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return HTJjesAbsoluteMPFBiasdn_;
}

const float &VVV0Tree::HTFJjesAbsoluteMPFBiasdn() {
  if (not HTFJjesAbsoluteMPFBiasdn_isLoaded) {
    if (HTFJjesAbsoluteMPFBiasdn_branch != 0) {
      HTFJjesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    HTFJjesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return HTFJjesAbsoluteMPFBiasdn_;
}

const float &VVV0Tree::SumPtFJjesAbsoluteMPFBiasdn() {
  if (not SumPtFJjesAbsoluteMPFBiasdn_isLoaded) {
    if (SumPtFJjesAbsoluteMPFBiasdn_branch != 0) {
      SumPtFJjesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return SumPtFJjesAbsoluteMPFBiasdn_;
}

const float &VVV0Tree::SumPtJjesAbsoluteMPFBiasdn() {
  if (not SumPtJjesAbsoluteMPFBiasdn_isLoaded) {
    if (SumPtJjesAbsoluteMPFBiasdn_branch != 0) {
      SumPtJjesAbsoluteMPFBiasdn_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesAbsoluteMPFBiasdn_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesAbsoluteMPFBiasdn_isLoaded = true;
  }
  return SumPtJjesAbsoluteMPFBiasdn_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesFragmentationup() {
  if (not JsjesFragmentationup_isLoaded) {
    if (JsjesFragmentationup_branch != 0) {
      JsjesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch JsjesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    JsjesFragmentationup_isLoaded = true;
  }
  return *JsjesFragmentationup_;
}

const int &VVV0Tree::NFJjesFragmentationup() {
  if (not NFJjesFragmentationup_isLoaded) {
    if (NFJjesFragmentationup_branch != 0) {
      NFJjesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch NFJjesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    NFJjesFragmentationup_isLoaded = true;
  }
  return NFJjesFragmentationup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesFragmentationup() {
  if (not FJ0jesFragmentationup_isLoaded) {
    if (FJ0jesFragmentationup_branch != 0) {
      FJ0jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    FJ0jesFragmentationup_isLoaded = true;
  }
  return *FJ0jesFragmentationup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesFragmentationup() {
  if (not FJ1jesFragmentationup_isLoaded) {
    if (FJ1jesFragmentationup_branch != 0) {
      FJ1jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    FJ1jesFragmentationup_isLoaded = true;
  }
  return *FJ1jesFragmentationup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesFragmentationup() {
  if (not FJ2jesFragmentationup_isLoaded) {
    if (FJ2jesFragmentationup_branch != 0) {
      FJ2jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    FJ2jesFragmentationup_isLoaded = true;
  }
  return *FJ2jesFragmentationup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesFragmentationup() {
  if (not FJ3jesFragmentationup_isLoaded) {
    if (FJ3jesFragmentationup_branch != 0) {
      FJ3jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    FJ3jesFragmentationup_isLoaded = true;
  }
  return *FJ3jesFragmentationup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesFragmentationup() {
  if (not FJ4jesFragmentationup_isLoaded) {
    if (FJ4jesFragmentationup_branch != 0) {
      FJ4jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    FJ4jesFragmentationup_isLoaded = true;
  }
  return *FJ4jesFragmentationup_;
}

const float &VVV0Tree::VMD0jesFragmentationup() {
  if (not VMD0jesFragmentationup_isLoaded) {
    if (VMD0jesFragmentationup_branch != 0) {
      VMD0jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    VMD0jesFragmentationup_isLoaded = true;
  }
  return VMD0jesFragmentationup_;
}

const float &VVV0Tree::VMD1jesFragmentationup() {
  if (not VMD1jesFragmentationup_isLoaded) {
    if (VMD1jesFragmentationup_branch != 0) {
      VMD1jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    VMD1jesFragmentationup_isLoaded = true;
  }
  return VMD1jesFragmentationup_;
}

const float &VVV0Tree::VMD2jesFragmentationup() {
  if (not VMD2jesFragmentationup_isLoaded) {
    if (VMD2jesFragmentationup_branch != 0) {
      VMD2jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    VMD2jesFragmentationup_isLoaded = true;
  }
  return VMD2jesFragmentationup_;
}

const float &VVV0Tree::VMD3jesFragmentationup() {
  if (not VMD3jesFragmentationup_isLoaded) {
    if (VMD3jesFragmentationup_branch != 0) {
      VMD3jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    VMD3jesFragmentationup_isLoaded = true;
  }
  return VMD3jesFragmentationup_;
}

const float &VVV0Tree::VMD4jesFragmentationup() {
  if (not VMD4jesFragmentationup_isLoaded) {
    if (VMD4jesFragmentationup_branch != 0) {
      VMD4jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    VMD4jesFragmentationup_isLoaded = true;
  }
  return VMD4jesFragmentationup_;
}

const float &VVV0Tree::WMD0jesFragmentationup() {
  if (not WMD0jesFragmentationup_isLoaded) {
    if (WMD0jesFragmentationup_branch != 0) {
      WMD0jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    WMD0jesFragmentationup_isLoaded = true;
  }
  return WMD0jesFragmentationup_;
}

const float &VVV0Tree::WMD1jesFragmentationup() {
  if (not WMD1jesFragmentationup_isLoaded) {
    if (WMD1jesFragmentationup_branch != 0) {
      WMD1jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    WMD1jesFragmentationup_isLoaded = true;
  }
  return WMD1jesFragmentationup_;
}

const float &VVV0Tree::WMD2jesFragmentationup() {
  if (not WMD2jesFragmentationup_isLoaded) {
    if (WMD2jesFragmentationup_branch != 0) {
      WMD2jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    WMD2jesFragmentationup_isLoaded = true;
  }
  return WMD2jesFragmentationup_;
}

const float &VVV0Tree::WMD3jesFragmentationup() {
  if (not WMD3jesFragmentationup_isLoaded) {
    if (WMD3jesFragmentationup_branch != 0) {
      WMD3jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    WMD3jesFragmentationup_isLoaded = true;
  }
  return WMD3jesFragmentationup_;
}

const float &VVV0Tree::WMD4jesFragmentationup() {
  if (not WMD4jesFragmentationup_isLoaded) {
    if (WMD4jesFragmentationup_branch != 0) {
      WMD4jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    WMD4jesFragmentationup_isLoaded = true;
  }
  return WMD4jesFragmentationup_;
}

const int &VVV0Tree::NQGen0jesFragmentationup() {
  if (not NQGen0jesFragmentationup_isLoaded) {
    if (NQGen0jesFragmentationup_branch != 0) {
      NQGen0jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesFragmentationup_isLoaded = true;
  }
  return NQGen0jesFragmentationup_;
}

const int &VVV0Tree::NQGen1jesFragmentationup() {
  if (not NQGen1jesFragmentationup_isLoaded) {
    if (NQGen1jesFragmentationup_branch != 0) {
      NQGen1jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesFragmentationup_isLoaded = true;
  }
  return NQGen1jesFragmentationup_;
}

const int &VVV0Tree::NQGen2jesFragmentationup() {
  if (not NQGen2jesFragmentationup_isLoaded) {
    if (NQGen2jesFragmentationup_branch != 0) {
      NQGen2jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesFragmentationup_isLoaded = true;
  }
  return NQGen2jesFragmentationup_;
}

const int &VVV0Tree::NQGen3jesFragmentationup() {
  if (not NQGen3jesFragmentationup_isLoaded) {
    if (NQGen3jesFragmentationup_branch != 0) {
      NQGen3jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesFragmentationup_isLoaded = true;
  }
  return NQGen3jesFragmentationup_;
}

const int &VVV0Tree::NQGen4jesFragmentationup() {
  if (not NQGen4jesFragmentationup_isLoaded) {
    if (NQGen4jesFragmentationup_branch != 0) {
      NQGen4jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesFragmentationup_isLoaded = true;
  }
  return NQGen4jesFragmentationup_;
}

const int &VVV0Tree::NBGen0jesFragmentationup() {
  if (not NBGen0jesFragmentationup_isLoaded) {
    if (NBGen0jesFragmentationup_branch != 0) {
      NBGen0jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesFragmentationup_isLoaded = true;
  }
  return NBGen0jesFragmentationup_;
}

const int &VVV0Tree::NBGen1jesFragmentationup() {
  if (not NBGen1jesFragmentationup_isLoaded) {
    if (NBGen1jesFragmentationup_branch != 0) {
      NBGen1jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesFragmentationup_isLoaded = true;
  }
  return NBGen1jesFragmentationup_;
}

const int &VVV0Tree::NBGen2jesFragmentationup() {
  if (not NBGen2jesFragmentationup_isLoaded) {
    if (NBGen2jesFragmentationup_branch != 0) {
      NBGen2jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesFragmentationup_isLoaded = true;
  }
  return NBGen2jesFragmentationup_;
}

const int &VVV0Tree::NBGen3jesFragmentationup() {
  if (not NBGen3jesFragmentationup_isLoaded) {
    if (NBGen3jesFragmentationup_branch != 0) {
      NBGen3jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesFragmentationup_isLoaded = true;
  }
  return NBGen3jesFragmentationup_;
}

const int &VVV0Tree::NBGen4jesFragmentationup() {
  if (not NBGen4jesFragmentationup_isLoaded) {
    if (NBGen4jesFragmentationup_branch != 0) {
      NBGen4jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesFragmentationup_isLoaded = true;
  }
  return NBGen4jesFragmentationup_;
}

const int &VVV0Tree::NLGen0jesFragmentationup() {
  if (not NLGen0jesFragmentationup_isLoaded) {
    if (NLGen0jesFragmentationup_branch != 0) {
      NLGen0jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesFragmentationup_isLoaded = true;
  }
  return NLGen0jesFragmentationup_;
}

const int &VVV0Tree::NLGen1jesFragmentationup() {
  if (not NLGen1jesFragmentationup_isLoaded) {
    if (NLGen1jesFragmentationup_branch != 0) {
      NLGen1jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesFragmentationup_isLoaded = true;
  }
  return NLGen1jesFragmentationup_;
}

const int &VVV0Tree::NLGen2jesFragmentationup() {
  if (not NLGen2jesFragmentationup_isLoaded) {
    if (NLGen2jesFragmentationup_branch != 0) {
      NLGen2jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesFragmentationup_isLoaded = true;
  }
  return NLGen2jesFragmentationup_;
}

const int &VVV0Tree::NLGen3jesFragmentationup() {
  if (not NLGen3jesFragmentationup_isLoaded) {
    if (NLGen3jesFragmentationup_branch != 0) {
      NLGen3jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesFragmentationup_isLoaded = true;
  }
  return NLGen3jesFragmentationup_;
}

const int &VVV0Tree::NLGen4jesFragmentationup() {
  if (not NLGen4jesFragmentationup_isLoaded) {
    if (NLGen4jesFragmentationup_branch != 0) {
      NLGen4jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesFragmentationup_isLoaded = true;
  }
  return NLGen4jesFragmentationup_;
}

const int &VVV0Tree::NVQGen0jesFragmentationup() {
  if (not NVQGen0jesFragmentationup_isLoaded) {
    if (NVQGen0jesFragmentationup_branch != 0) {
      NVQGen0jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesFragmentationup_isLoaded = true;
  }
  return NVQGen0jesFragmentationup_;
}

const int &VVV0Tree::NVQGen1jesFragmentationup() {
  if (not NVQGen1jesFragmentationup_isLoaded) {
    if (NVQGen1jesFragmentationup_branch != 0) {
      NVQGen1jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesFragmentationup_isLoaded = true;
  }
  return NVQGen1jesFragmentationup_;
}

const int &VVV0Tree::NVQGen2jesFragmentationup() {
  if (not NVQGen2jesFragmentationup_isLoaded) {
    if (NVQGen2jesFragmentationup_branch != 0) {
      NVQGen2jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesFragmentationup_isLoaded = true;
  }
  return NVQGen2jesFragmentationup_;
}

const int &VVV0Tree::NVQGen3jesFragmentationup() {
  if (not NVQGen3jesFragmentationup_isLoaded) {
    if (NVQGen3jesFragmentationup_branch != 0) {
      NVQGen3jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesFragmentationup_isLoaded = true;
  }
  return NVQGen3jesFragmentationup_;
}

const int &VVV0Tree::NVQGen4jesFragmentationup() {
  if (not NVQGen4jesFragmentationup_isLoaded) {
    if (NVQGen4jesFragmentationup_branch != 0) {
      NVQGen4jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesFragmentationup_isLoaded = true;
  }
  return NVQGen4jesFragmentationup_;
}

const int &VVV0Tree::NiFJjesFragmentationup() {
  if (not NiFJjesFragmentationup_isLoaded) {
    if (NiFJjesFragmentationup_branch != 0) {
      NiFJjesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    NiFJjesFragmentationup_isLoaded = true;
  }
  return NiFJjesFragmentationup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesFragmentationup() {
  if (not iFJ0jesFragmentationup_isLoaded) {
    if (iFJ0jesFragmentationup_branch != 0) {
      iFJ0jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesFragmentationup_isLoaded = true;
  }
  return *iFJ0jesFragmentationup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesFragmentationup() {
  if (not iFJ1jesFragmentationup_isLoaded) {
    if (iFJ1jesFragmentationup_branch != 0) {
      iFJ1jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesFragmentationup_isLoaded = true;
  }
  return *iFJ1jesFragmentationup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesFragmentationup() {
  if (not iFJ2jesFragmentationup_isLoaded) {
    if (iFJ2jesFragmentationup_branch != 0) {
      iFJ2jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesFragmentationup_isLoaded = true;
  }
  return *iFJ2jesFragmentationup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesFragmentationup() {
  if (not iFJ3jesFragmentationup_isLoaded) {
    if (iFJ3jesFragmentationup_branch != 0) {
      iFJ3jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesFragmentationup_isLoaded = true;
  }
  return *iFJ3jesFragmentationup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesFragmentationup() {
  if (not iFJ4jesFragmentationup_isLoaded) {
    if (iFJ4jesFragmentationup_branch != 0) {
      iFJ4jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesFragmentationup_isLoaded = true;
  }
  return *iFJ4jesFragmentationup_;
}

const float &VVV0Tree::iVMD0jesFragmentationup() {
  if (not iVMD0jesFragmentationup_isLoaded) {
    if (iVMD0jesFragmentationup_branch != 0) {
      iVMD0jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesFragmentationup_isLoaded = true;
  }
  return iVMD0jesFragmentationup_;
}

const float &VVV0Tree::iVMD1jesFragmentationup() {
  if (not iVMD1jesFragmentationup_isLoaded) {
    if (iVMD1jesFragmentationup_branch != 0) {
      iVMD1jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesFragmentationup_isLoaded = true;
  }
  return iVMD1jesFragmentationup_;
}

const float &VVV0Tree::iVMD2jesFragmentationup() {
  if (not iVMD2jesFragmentationup_isLoaded) {
    if (iVMD2jesFragmentationup_branch != 0) {
      iVMD2jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesFragmentationup_isLoaded = true;
  }
  return iVMD2jesFragmentationup_;
}

const float &VVV0Tree::iVMD3jesFragmentationup() {
  if (not iVMD3jesFragmentationup_isLoaded) {
    if (iVMD3jesFragmentationup_branch != 0) {
      iVMD3jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesFragmentationup_isLoaded = true;
  }
  return iVMD3jesFragmentationup_;
}

const float &VVV0Tree::iVMD4jesFragmentationup() {
  if (not iVMD4jesFragmentationup_isLoaded) {
    if (iVMD4jesFragmentationup_branch != 0) {
      iVMD4jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesFragmentationup_isLoaded = true;
  }
  return iVMD4jesFragmentationup_;
}

const float &VVV0Tree::iWMD0jesFragmentationup() {
  if (not iWMD0jesFragmentationup_isLoaded) {
    if (iWMD0jesFragmentationup_branch != 0) {
      iWMD0jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesFragmentationup_isLoaded = true;
  }
  return iWMD0jesFragmentationup_;
}

const float &VVV0Tree::iWMD1jesFragmentationup() {
  if (not iWMD1jesFragmentationup_isLoaded) {
    if (iWMD1jesFragmentationup_branch != 0) {
      iWMD1jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesFragmentationup_isLoaded = true;
  }
  return iWMD1jesFragmentationup_;
}

const float &VVV0Tree::iWMD2jesFragmentationup() {
  if (not iWMD2jesFragmentationup_isLoaded) {
    if (iWMD2jesFragmentationup_branch != 0) {
      iWMD2jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesFragmentationup_isLoaded = true;
  }
  return iWMD2jesFragmentationup_;
}

const float &VVV0Tree::iWMD3jesFragmentationup() {
  if (not iWMD3jesFragmentationup_isLoaded) {
    if (iWMD3jesFragmentationup_branch != 0) {
      iWMD3jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesFragmentationup_isLoaded = true;
  }
  return iWMD3jesFragmentationup_;
}

const float &VVV0Tree::iWMD4jesFragmentationup() {
  if (not iWMD4jesFragmentationup_isLoaded) {
    if (iWMD4jesFragmentationup_branch != 0) {
      iWMD4jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesFragmentationup_isLoaded = true;
  }
  return iWMD4jesFragmentationup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesFragmentationup() {
  if (not METjesFragmentationup_isLoaded) {
    if (METjesFragmentationup_branch != 0) {
      METjesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch METjesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    METjesFragmentationup_isLoaded = true;
  }
  return *METjesFragmentationup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesFragmentationup() {
  if (not NujesFragmentationup_isLoaded) {
    if (NujesFragmentationup_branch != 0) {
      NujesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch NujesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    NujesFragmentationup_isLoaded = true;
  }
  return *NujesFragmentationup_;
}

const int &VVV0Tree::NJjesFragmentationup() {
  if (not NJjesFragmentationup_isLoaded) {
    if (NJjesFragmentationup_branch != 0) {
      NJjesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch NJjesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    NJjesFragmentationup_isLoaded = true;
  }
  return NJjesFragmentationup_;
}

const int &VVV0Tree::NbLoosejesFragmentationup() {
  if (not NbLoosejesFragmentationup_isLoaded) {
    if (NbLoosejesFragmentationup_branch != 0) {
      NbLoosejesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesFragmentationup_isLoaded = true;
  }
  return NbLoosejesFragmentationup_;
}

const int &VVV0Tree::NbMediumjesFragmentationup() {
  if (not NbMediumjesFragmentationup_isLoaded) {
    if (NbMediumjesFragmentationup_branch != 0) {
      NbMediumjesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesFragmentationup_isLoaded = true;
  }
  return NbMediumjesFragmentationup_;
}

const int &VVV0Tree::NbTightjesFragmentationup() {
  if (not NbTightjesFragmentationup_isLoaded) {
    if (NbTightjesFragmentationup_branch != 0) {
      NbTightjesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    NbTightjesFragmentationup_isLoaded = true;
  }
  return NbTightjesFragmentationup_;
}

const int &VVV0Tree::NoORNbLoosejesFragmentationup() {
  if (not NoORNbLoosejesFragmentationup_isLoaded) {
    if (NoORNbLoosejesFragmentationup_branch != 0) {
      NoORNbLoosejesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesFragmentationup_isLoaded = true;
  }
  return NoORNbLoosejesFragmentationup_;
}

const int &VVV0Tree::NoORNbMediumjesFragmentationup() {
  if (not NoORNbMediumjesFragmentationup_isLoaded) {
    if (NoORNbMediumjesFragmentationup_branch != 0) {
      NoORNbMediumjesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesFragmentationup_isLoaded = true;
  }
  return NoORNbMediumjesFragmentationup_;
}

const int &VVV0Tree::NoORNbTightjesFragmentationup() {
  if (not NoORNbTightjesFragmentationup_isLoaded) {
    if (NoORNbTightjesFragmentationup_branch != 0) {
      NoORNbTightjesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesFragmentationup_isLoaded = true;
  }
  return NoORNbTightjesFragmentationup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesFragmentationup() {
  if (not J0jesFragmentationup_isLoaded) {
    if (J0jesFragmentationup_branch != 0) {
      J0jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch J0jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    J0jesFragmentationup_isLoaded = true;
  }
  return *J0jesFragmentationup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesFragmentationup() {
  if (not J1jesFragmentationup_isLoaded) {
    if (J1jesFragmentationup_branch != 0) {
      J1jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch J1jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    J1jesFragmentationup_isLoaded = true;
  }
  return *J1jesFragmentationup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesFragmentationup() {
  if (not J2jesFragmentationup_isLoaded) {
    if (J2jesFragmentationup_branch != 0) {
      J2jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch J2jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    J2jesFragmentationup_isLoaded = true;
  }
  return *J2jesFragmentationup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesFragmentationup() {
  if (not J3jesFragmentationup_isLoaded) {
    if (J3jesFragmentationup_branch != 0) {
      J3jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch J3jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    J3jesFragmentationup_isLoaded = true;
  }
  return *J3jesFragmentationup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesFragmentationup() {
  if (not J4jesFragmentationup_isLoaded) {
    if (J4jesFragmentationup_branch != 0) {
      J4jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch J4jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    J4jesFragmentationup_isLoaded = true;
  }
  return *J4jesFragmentationup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesFragmentationup() {
  if (not J5jesFragmentationup_isLoaded) {
    if (J5jesFragmentationup_branch != 0) {
      J5jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch J5jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    J5jesFragmentationup_isLoaded = true;
  }
  return *J5jesFragmentationup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesFragmentationup() {
  if (not J6jesFragmentationup_isLoaded) {
    if (J6jesFragmentationup_branch != 0) {
      J6jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch J6jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    J6jesFragmentationup_isLoaded = true;
  }
  return *J6jesFragmentationup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesFragmentationup() {
  if (not J7jesFragmentationup_isLoaded) {
    if (J7jesFragmentationup_branch != 0) {
      J7jesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch J7jesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    J7jesFragmentationup_isLoaded = true;
  }
  return *J7jesFragmentationup_;
}

const vector<int> &VVV0Tree::NQJGenjesFragmentationup() {
  if (not NQJGenjesFragmentationup_isLoaded) {
    if (NQJGenjesFragmentationup_branch != 0) {
      NQJGenjesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesFragmentationup_isLoaded = true;
  }
  return *NQJGenjesFragmentationup_;
}

const vector<int> &VVV0Tree::NBJGenjesFragmentationup() {
  if (not NBJGenjesFragmentationup_isLoaded) {
    if (NBJGenjesFragmentationup_branch != 0) {
      NBJGenjesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesFragmentationup_isLoaded = true;
  }
  return *NBJGenjesFragmentationup_;
}

const vector<int> &VVV0Tree::NLJGenjesFragmentationup() {
  if (not NLJGenjesFragmentationup_isLoaded) {
    if (NLJGenjesFragmentationup_branch != 0) {
      NLJGenjesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesFragmentationup_isLoaded = true;
  }
  return *NLJGenjesFragmentationup_;
}

const float &VVV0Tree::MVVXjesFragmentationup() {
  if (not MVVXjesFragmentationup_isLoaded) {
    if (MVVXjesFragmentationup_branch != 0) {
      MVVXjesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    MVVXjesFragmentationup_isLoaded = true;
  }
  return MVVXjesFragmentationup_;
}

const float &VVV0Tree::PtVVXjesFragmentationup() {
  if (not PtVVXjesFragmentationup_isLoaded) {
    if (PtVVXjesFragmentationup_branch != 0) {
      PtVVXjesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesFragmentationup_isLoaded = true;
  }
  return PtVVXjesFragmentationup_;
}

const float &VVV0Tree::HTjesFragmentationup() {
  if (not HTjesFragmentationup_isLoaded) {
    if (HTjesFragmentationup_branch != 0) {
      HTjesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch HTjesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    HTjesFragmentationup_isLoaded = true;
  }
  return HTjesFragmentationup_;
}

const float &VVV0Tree::HTJjesFragmentationup() {
  if (not HTJjesFragmentationup_isLoaded) {
    if (HTJjesFragmentationup_branch != 0) {
      HTJjesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch HTJjesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    HTJjesFragmentationup_isLoaded = true;
  }
  return HTJjesFragmentationup_;
}

const float &VVV0Tree::HTFJjesFragmentationup() {
  if (not HTFJjesFragmentationup_isLoaded) {
    if (HTFJjesFragmentationup_branch != 0) {
      HTFJjesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    HTFJjesFragmentationup_isLoaded = true;
  }
  return HTFJjesFragmentationup_;
}

const float &VVV0Tree::SumPtFJjesFragmentationup() {
  if (not SumPtFJjesFragmentationup_isLoaded) {
    if (SumPtFJjesFragmentationup_branch != 0) {
      SumPtFJjesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesFragmentationup_isLoaded = true;
  }
  return SumPtFJjesFragmentationup_;
}

const float &VVV0Tree::SumPtJjesFragmentationup() {
  if (not SumPtJjesFragmentationup_isLoaded) {
    if (SumPtJjesFragmentationup_branch != 0) {
      SumPtJjesFragmentationup_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesFragmentationup_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesFragmentationup_isLoaded = true;
  }
  return SumPtJjesFragmentationup_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesFragmentationdn() {
  if (not JsjesFragmentationdn_isLoaded) {
    if (JsjesFragmentationdn_branch != 0) {
      JsjesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch JsjesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    JsjesFragmentationdn_isLoaded = true;
  }
  return *JsjesFragmentationdn_;
}

const int &VVV0Tree::NFJjesFragmentationdn() {
  if (not NFJjesFragmentationdn_isLoaded) {
    if (NFJjesFragmentationdn_branch != 0) {
      NFJjesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch NFJjesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    NFJjesFragmentationdn_isLoaded = true;
  }
  return NFJjesFragmentationdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesFragmentationdn() {
  if (not FJ0jesFragmentationdn_isLoaded) {
    if (FJ0jesFragmentationdn_branch != 0) {
      FJ0jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    FJ0jesFragmentationdn_isLoaded = true;
  }
  return *FJ0jesFragmentationdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesFragmentationdn() {
  if (not FJ1jesFragmentationdn_isLoaded) {
    if (FJ1jesFragmentationdn_branch != 0) {
      FJ1jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    FJ1jesFragmentationdn_isLoaded = true;
  }
  return *FJ1jesFragmentationdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesFragmentationdn() {
  if (not FJ2jesFragmentationdn_isLoaded) {
    if (FJ2jesFragmentationdn_branch != 0) {
      FJ2jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    FJ2jesFragmentationdn_isLoaded = true;
  }
  return *FJ2jesFragmentationdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesFragmentationdn() {
  if (not FJ3jesFragmentationdn_isLoaded) {
    if (FJ3jesFragmentationdn_branch != 0) {
      FJ3jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    FJ3jesFragmentationdn_isLoaded = true;
  }
  return *FJ3jesFragmentationdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesFragmentationdn() {
  if (not FJ4jesFragmentationdn_isLoaded) {
    if (FJ4jesFragmentationdn_branch != 0) {
      FJ4jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    FJ4jesFragmentationdn_isLoaded = true;
  }
  return *FJ4jesFragmentationdn_;
}

const float &VVV0Tree::VMD0jesFragmentationdn() {
  if (not VMD0jesFragmentationdn_isLoaded) {
    if (VMD0jesFragmentationdn_branch != 0) {
      VMD0jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    VMD0jesFragmentationdn_isLoaded = true;
  }
  return VMD0jesFragmentationdn_;
}

const float &VVV0Tree::VMD1jesFragmentationdn() {
  if (not VMD1jesFragmentationdn_isLoaded) {
    if (VMD1jesFragmentationdn_branch != 0) {
      VMD1jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    VMD1jesFragmentationdn_isLoaded = true;
  }
  return VMD1jesFragmentationdn_;
}

const float &VVV0Tree::VMD2jesFragmentationdn() {
  if (not VMD2jesFragmentationdn_isLoaded) {
    if (VMD2jesFragmentationdn_branch != 0) {
      VMD2jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    VMD2jesFragmentationdn_isLoaded = true;
  }
  return VMD2jesFragmentationdn_;
}

const float &VVV0Tree::VMD3jesFragmentationdn() {
  if (not VMD3jesFragmentationdn_isLoaded) {
    if (VMD3jesFragmentationdn_branch != 0) {
      VMD3jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    VMD3jesFragmentationdn_isLoaded = true;
  }
  return VMD3jesFragmentationdn_;
}

const float &VVV0Tree::VMD4jesFragmentationdn() {
  if (not VMD4jesFragmentationdn_isLoaded) {
    if (VMD4jesFragmentationdn_branch != 0) {
      VMD4jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    VMD4jesFragmentationdn_isLoaded = true;
  }
  return VMD4jesFragmentationdn_;
}

const float &VVV0Tree::WMD0jesFragmentationdn() {
  if (not WMD0jesFragmentationdn_isLoaded) {
    if (WMD0jesFragmentationdn_branch != 0) {
      WMD0jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    WMD0jesFragmentationdn_isLoaded = true;
  }
  return WMD0jesFragmentationdn_;
}

const float &VVV0Tree::WMD1jesFragmentationdn() {
  if (not WMD1jesFragmentationdn_isLoaded) {
    if (WMD1jesFragmentationdn_branch != 0) {
      WMD1jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    WMD1jesFragmentationdn_isLoaded = true;
  }
  return WMD1jesFragmentationdn_;
}

const float &VVV0Tree::WMD2jesFragmentationdn() {
  if (not WMD2jesFragmentationdn_isLoaded) {
    if (WMD2jesFragmentationdn_branch != 0) {
      WMD2jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    WMD2jesFragmentationdn_isLoaded = true;
  }
  return WMD2jesFragmentationdn_;
}

const float &VVV0Tree::WMD3jesFragmentationdn() {
  if (not WMD3jesFragmentationdn_isLoaded) {
    if (WMD3jesFragmentationdn_branch != 0) {
      WMD3jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    WMD3jesFragmentationdn_isLoaded = true;
  }
  return WMD3jesFragmentationdn_;
}

const float &VVV0Tree::WMD4jesFragmentationdn() {
  if (not WMD4jesFragmentationdn_isLoaded) {
    if (WMD4jesFragmentationdn_branch != 0) {
      WMD4jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    WMD4jesFragmentationdn_isLoaded = true;
  }
  return WMD4jesFragmentationdn_;
}

const int &VVV0Tree::NQGen0jesFragmentationdn() {
  if (not NQGen0jesFragmentationdn_isLoaded) {
    if (NQGen0jesFragmentationdn_branch != 0) {
      NQGen0jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesFragmentationdn_isLoaded = true;
  }
  return NQGen0jesFragmentationdn_;
}

const int &VVV0Tree::NQGen1jesFragmentationdn() {
  if (not NQGen1jesFragmentationdn_isLoaded) {
    if (NQGen1jesFragmentationdn_branch != 0) {
      NQGen1jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesFragmentationdn_isLoaded = true;
  }
  return NQGen1jesFragmentationdn_;
}

const int &VVV0Tree::NQGen2jesFragmentationdn() {
  if (not NQGen2jesFragmentationdn_isLoaded) {
    if (NQGen2jesFragmentationdn_branch != 0) {
      NQGen2jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesFragmentationdn_isLoaded = true;
  }
  return NQGen2jesFragmentationdn_;
}

const int &VVV0Tree::NQGen3jesFragmentationdn() {
  if (not NQGen3jesFragmentationdn_isLoaded) {
    if (NQGen3jesFragmentationdn_branch != 0) {
      NQGen3jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesFragmentationdn_isLoaded = true;
  }
  return NQGen3jesFragmentationdn_;
}

const int &VVV0Tree::NQGen4jesFragmentationdn() {
  if (not NQGen4jesFragmentationdn_isLoaded) {
    if (NQGen4jesFragmentationdn_branch != 0) {
      NQGen4jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesFragmentationdn_isLoaded = true;
  }
  return NQGen4jesFragmentationdn_;
}

const int &VVV0Tree::NBGen0jesFragmentationdn() {
  if (not NBGen0jesFragmentationdn_isLoaded) {
    if (NBGen0jesFragmentationdn_branch != 0) {
      NBGen0jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesFragmentationdn_isLoaded = true;
  }
  return NBGen0jesFragmentationdn_;
}

const int &VVV0Tree::NBGen1jesFragmentationdn() {
  if (not NBGen1jesFragmentationdn_isLoaded) {
    if (NBGen1jesFragmentationdn_branch != 0) {
      NBGen1jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesFragmentationdn_isLoaded = true;
  }
  return NBGen1jesFragmentationdn_;
}

const int &VVV0Tree::NBGen2jesFragmentationdn() {
  if (not NBGen2jesFragmentationdn_isLoaded) {
    if (NBGen2jesFragmentationdn_branch != 0) {
      NBGen2jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesFragmentationdn_isLoaded = true;
  }
  return NBGen2jesFragmentationdn_;
}

const int &VVV0Tree::NBGen3jesFragmentationdn() {
  if (not NBGen3jesFragmentationdn_isLoaded) {
    if (NBGen3jesFragmentationdn_branch != 0) {
      NBGen3jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesFragmentationdn_isLoaded = true;
  }
  return NBGen3jesFragmentationdn_;
}

const int &VVV0Tree::NBGen4jesFragmentationdn() {
  if (not NBGen4jesFragmentationdn_isLoaded) {
    if (NBGen4jesFragmentationdn_branch != 0) {
      NBGen4jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesFragmentationdn_isLoaded = true;
  }
  return NBGen4jesFragmentationdn_;
}

const int &VVV0Tree::NLGen0jesFragmentationdn() {
  if (not NLGen0jesFragmentationdn_isLoaded) {
    if (NLGen0jesFragmentationdn_branch != 0) {
      NLGen0jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesFragmentationdn_isLoaded = true;
  }
  return NLGen0jesFragmentationdn_;
}

const int &VVV0Tree::NLGen1jesFragmentationdn() {
  if (not NLGen1jesFragmentationdn_isLoaded) {
    if (NLGen1jesFragmentationdn_branch != 0) {
      NLGen1jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesFragmentationdn_isLoaded = true;
  }
  return NLGen1jesFragmentationdn_;
}

const int &VVV0Tree::NLGen2jesFragmentationdn() {
  if (not NLGen2jesFragmentationdn_isLoaded) {
    if (NLGen2jesFragmentationdn_branch != 0) {
      NLGen2jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesFragmentationdn_isLoaded = true;
  }
  return NLGen2jesFragmentationdn_;
}

const int &VVV0Tree::NLGen3jesFragmentationdn() {
  if (not NLGen3jesFragmentationdn_isLoaded) {
    if (NLGen3jesFragmentationdn_branch != 0) {
      NLGen3jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesFragmentationdn_isLoaded = true;
  }
  return NLGen3jesFragmentationdn_;
}

const int &VVV0Tree::NLGen4jesFragmentationdn() {
  if (not NLGen4jesFragmentationdn_isLoaded) {
    if (NLGen4jesFragmentationdn_branch != 0) {
      NLGen4jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesFragmentationdn_isLoaded = true;
  }
  return NLGen4jesFragmentationdn_;
}

const int &VVV0Tree::NVQGen0jesFragmentationdn() {
  if (not NVQGen0jesFragmentationdn_isLoaded) {
    if (NVQGen0jesFragmentationdn_branch != 0) {
      NVQGen0jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesFragmentationdn_isLoaded = true;
  }
  return NVQGen0jesFragmentationdn_;
}

const int &VVV0Tree::NVQGen1jesFragmentationdn() {
  if (not NVQGen1jesFragmentationdn_isLoaded) {
    if (NVQGen1jesFragmentationdn_branch != 0) {
      NVQGen1jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesFragmentationdn_isLoaded = true;
  }
  return NVQGen1jesFragmentationdn_;
}

const int &VVV0Tree::NVQGen2jesFragmentationdn() {
  if (not NVQGen2jesFragmentationdn_isLoaded) {
    if (NVQGen2jesFragmentationdn_branch != 0) {
      NVQGen2jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesFragmentationdn_isLoaded = true;
  }
  return NVQGen2jesFragmentationdn_;
}

const int &VVV0Tree::NVQGen3jesFragmentationdn() {
  if (not NVQGen3jesFragmentationdn_isLoaded) {
    if (NVQGen3jesFragmentationdn_branch != 0) {
      NVQGen3jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesFragmentationdn_isLoaded = true;
  }
  return NVQGen3jesFragmentationdn_;
}

const int &VVV0Tree::NVQGen4jesFragmentationdn() {
  if (not NVQGen4jesFragmentationdn_isLoaded) {
    if (NVQGen4jesFragmentationdn_branch != 0) {
      NVQGen4jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesFragmentationdn_isLoaded = true;
  }
  return NVQGen4jesFragmentationdn_;
}

const int &VVV0Tree::NiFJjesFragmentationdn() {
  if (not NiFJjesFragmentationdn_isLoaded) {
    if (NiFJjesFragmentationdn_branch != 0) {
      NiFJjesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    NiFJjesFragmentationdn_isLoaded = true;
  }
  return NiFJjesFragmentationdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesFragmentationdn() {
  if (not iFJ0jesFragmentationdn_isLoaded) {
    if (iFJ0jesFragmentationdn_branch != 0) {
      iFJ0jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesFragmentationdn_isLoaded = true;
  }
  return *iFJ0jesFragmentationdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesFragmentationdn() {
  if (not iFJ1jesFragmentationdn_isLoaded) {
    if (iFJ1jesFragmentationdn_branch != 0) {
      iFJ1jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesFragmentationdn_isLoaded = true;
  }
  return *iFJ1jesFragmentationdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesFragmentationdn() {
  if (not iFJ2jesFragmentationdn_isLoaded) {
    if (iFJ2jesFragmentationdn_branch != 0) {
      iFJ2jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesFragmentationdn_isLoaded = true;
  }
  return *iFJ2jesFragmentationdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesFragmentationdn() {
  if (not iFJ3jesFragmentationdn_isLoaded) {
    if (iFJ3jesFragmentationdn_branch != 0) {
      iFJ3jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesFragmentationdn_isLoaded = true;
  }
  return *iFJ3jesFragmentationdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesFragmentationdn() {
  if (not iFJ4jesFragmentationdn_isLoaded) {
    if (iFJ4jesFragmentationdn_branch != 0) {
      iFJ4jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesFragmentationdn_isLoaded = true;
  }
  return *iFJ4jesFragmentationdn_;
}

const float &VVV0Tree::iVMD0jesFragmentationdn() {
  if (not iVMD0jesFragmentationdn_isLoaded) {
    if (iVMD0jesFragmentationdn_branch != 0) {
      iVMD0jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesFragmentationdn_isLoaded = true;
  }
  return iVMD0jesFragmentationdn_;
}

const float &VVV0Tree::iVMD1jesFragmentationdn() {
  if (not iVMD1jesFragmentationdn_isLoaded) {
    if (iVMD1jesFragmentationdn_branch != 0) {
      iVMD1jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesFragmentationdn_isLoaded = true;
  }
  return iVMD1jesFragmentationdn_;
}

const float &VVV0Tree::iVMD2jesFragmentationdn() {
  if (not iVMD2jesFragmentationdn_isLoaded) {
    if (iVMD2jesFragmentationdn_branch != 0) {
      iVMD2jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesFragmentationdn_isLoaded = true;
  }
  return iVMD2jesFragmentationdn_;
}

const float &VVV0Tree::iVMD3jesFragmentationdn() {
  if (not iVMD3jesFragmentationdn_isLoaded) {
    if (iVMD3jesFragmentationdn_branch != 0) {
      iVMD3jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesFragmentationdn_isLoaded = true;
  }
  return iVMD3jesFragmentationdn_;
}

const float &VVV0Tree::iVMD4jesFragmentationdn() {
  if (not iVMD4jesFragmentationdn_isLoaded) {
    if (iVMD4jesFragmentationdn_branch != 0) {
      iVMD4jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesFragmentationdn_isLoaded = true;
  }
  return iVMD4jesFragmentationdn_;
}

const float &VVV0Tree::iWMD0jesFragmentationdn() {
  if (not iWMD0jesFragmentationdn_isLoaded) {
    if (iWMD0jesFragmentationdn_branch != 0) {
      iWMD0jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesFragmentationdn_isLoaded = true;
  }
  return iWMD0jesFragmentationdn_;
}

const float &VVV0Tree::iWMD1jesFragmentationdn() {
  if (not iWMD1jesFragmentationdn_isLoaded) {
    if (iWMD1jesFragmentationdn_branch != 0) {
      iWMD1jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesFragmentationdn_isLoaded = true;
  }
  return iWMD1jesFragmentationdn_;
}

const float &VVV0Tree::iWMD2jesFragmentationdn() {
  if (not iWMD2jesFragmentationdn_isLoaded) {
    if (iWMD2jesFragmentationdn_branch != 0) {
      iWMD2jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesFragmentationdn_isLoaded = true;
  }
  return iWMD2jesFragmentationdn_;
}

const float &VVV0Tree::iWMD3jesFragmentationdn() {
  if (not iWMD3jesFragmentationdn_isLoaded) {
    if (iWMD3jesFragmentationdn_branch != 0) {
      iWMD3jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesFragmentationdn_isLoaded = true;
  }
  return iWMD3jesFragmentationdn_;
}

const float &VVV0Tree::iWMD4jesFragmentationdn() {
  if (not iWMD4jesFragmentationdn_isLoaded) {
    if (iWMD4jesFragmentationdn_branch != 0) {
      iWMD4jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesFragmentationdn_isLoaded = true;
  }
  return iWMD4jesFragmentationdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesFragmentationdn() {
  if (not METjesFragmentationdn_isLoaded) {
    if (METjesFragmentationdn_branch != 0) {
      METjesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch METjesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    METjesFragmentationdn_isLoaded = true;
  }
  return *METjesFragmentationdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesFragmentationdn() {
  if (not NujesFragmentationdn_isLoaded) {
    if (NujesFragmentationdn_branch != 0) {
      NujesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch NujesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    NujesFragmentationdn_isLoaded = true;
  }
  return *NujesFragmentationdn_;
}

const int &VVV0Tree::NJjesFragmentationdn() {
  if (not NJjesFragmentationdn_isLoaded) {
    if (NJjesFragmentationdn_branch != 0) {
      NJjesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch NJjesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    NJjesFragmentationdn_isLoaded = true;
  }
  return NJjesFragmentationdn_;
}

const int &VVV0Tree::NbLoosejesFragmentationdn() {
  if (not NbLoosejesFragmentationdn_isLoaded) {
    if (NbLoosejesFragmentationdn_branch != 0) {
      NbLoosejesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesFragmentationdn_isLoaded = true;
  }
  return NbLoosejesFragmentationdn_;
}

const int &VVV0Tree::NbMediumjesFragmentationdn() {
  if (not NbMediumjesFragmentationdn_isLoaded) {
    if (NbMediumjesFragmentationdn_branch != 0) {
      NbMediumjesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesFragmentationdn_isLoaded = true;
  }
  return NbMediumjesFragmentationdn_;
}

const int &VVV0Tree::NbTightjesFragmentationdn() {
  if (not NbTightjesFragmentationdn_isLoaded) {
    if (NbTightjesFragmentationdn_branch != 0) {
      NbTightjesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    NbTightjesFragmentationdn_isLoaded = true;
  }
  return NbTightjesFragmentationdn_;
}

const int &VVV0Tree::NoORNbLoosejesFragmentationdn() {
  if (not NoORNbLoosejesFragmentationdn_isLoaded) {
    if (NoORNbLoosejesFragmentationdn_branch != 0) {
      NoORNbLoosejesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesFragmentationdn_isLoaded = true;
  }
  return NoORNbLoosejesFragmentationdn_;
}

const int &VVV0Tree::NoORNbMediumjesFragmentationdn() {
  if (not NoORNbMediumjesFragmentationdn_isLoaded) {
    if (NoORNbMediumjesFragmentationdn_branch != 0) {
      NoORNbMediumjesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesFragmentationdn_isLoaded = true;
  }
  return NoORNbMediumjesFragmentationdn_;
}

const int &VVV0Tree::NoORNbTightjesFragmentationdn() {
  if (not NoORNbTightjesFragmentationdn_isLoaded) {
    if (NoORNbTightjesFragmentationdn_branch != 0) {
      NoORNbTightjesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesFragmentationdn_isLoaded = true;
  }
  return NoORNbTightjesFragmentationdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesFragmentationdn() {
  if (not J0jesFragmentationdn_isLoaded) {
    if (J0jesFragmentationdn_branch != 0) {
      J0jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch J0jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    J0jesFragmentationdn_isLoaded = true;
  }
  return *J0jesFragmentationdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesFragmentationdn() {
  if (not J1jesFragmentationdn_isLoaded) {
    if (J1jesFragmentationdn_branch != 0) {
      J1jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch J1jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    J1jesFragmentationdn_isLoaded = true;
  }
  return *J1jesFragmentationdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesFragmentationdn() {
  if (not J2jesFragmentationdn_isLoaded) {
    if (J2jesFragmentationdn_branch != 0) {
      J2jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch J2jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    J2jesFragmentationdn_isLoaded = true;
  }
  return *J2jesFragmentationdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesFragmentationdn() {
  if (not J3jesFragmentationdn_isLoaded) {
    if (J3jesFragmentationdn_branch != 0) {
      J3jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch J3jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    J3jesFragmentationdn_isLoaded = true;
  }
  return *J3jesFragmentationdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesFragmentationdn() {
  if (not J4jesFragmentationdn_isLoaded) {
    if (J4jesFragmentationdn_branch != 0) {
      J4jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch J4jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    J4jesFragmentationdn_isLoaded = true;
  }
  return *J4jesFragmentationdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesFragmentationdn() {
  if (not J5jesFragmentationdn_isLoaded) {
    if (J5jesFragmentationdn_branch != 0) {
      J5jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch J5jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    J5jesFragmentationdn_isLoaded = true;
  }
  return *J5jesFragmentationdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesFragmentationdn() {
  if (not J6jesFragmentationdn_isLoaded) {
    if (J6jesFragmentationdn_branch != 0) {
      J6jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch J6jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    J6jesFragmentationdn_isLoaded = true;
  }
  return *J6jesFragmentationdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesFragmentationdn() {
  if (not J7jesFragmentationdn_isLoaded) {
    if (J7jesFragmentationdn_branch != 0) {
      J7jesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch J7jesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    J7jesFragmentationdn_isLoaded = true;
  }
  return *J7jesFragmentationdn_;
}

const vector<int> &VVV0Tree::NQJGenjesFragmentationdn() {
  if (not NQJGenjesFragmentationdn_isLoaded) {
    if (NQJGenjesFragmentationdn_branch != 0) {
      NQJGenjesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesFragmentationdn_isLoaded = true;
  }
  return *NQJGenjesFragmentationdn_;
}

const vector<int> &VVV0Tree::NBJGenjesFragmentationdn() {
  if (not NBJGenjesFragmentationdn_isLoaded) {
    if (NBJGenjesFragmentationdn_branch != 0) {
      NBJGenjesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesFragmentationdn_isLoaded = true;
  }
  return *NBJGenjesFragmentationdn_;
}

const vector<int> &VVV0Tree::NLJGenjesFragmentationdn() {
  if (not NLJGenjesFragmentationdn_isLoaded) {
    if (NLJGenjesFragmentationdn_branch != 0) {
      NLJGenjesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesFragmentationdn_isLoaded = true;
  }
  return *NLJGenjesFragmentationdn_;
}

const float &VVV0Tree::MVVXjesFragmentationdn() {
  if (not MVVXjesFragmentationdn_isLoaded) {
    if (MVVXjesFragmentationdn_branch != 0) {
      MVVXjesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    MVVXjesFragmentationdn_isLoaded = true;
  }
  return MVVXjesFragmentationdn_;
}

const float &VVV0Tree::PtVVXjesFragmentationdn() {
  if (not PtVVXjesFragmentationdn_isLoaded) {
    if (PtVVXjesFragmentationdn_branch != 0) {
      PtVVXjesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesFragmentationdn_isLoaded = true;
  }
  return PtVVXjesFragmentationdn_;
}

const float &VVV0Tree::HTjesFragmentationdn() {
  if (not HTjesFragmentationdn_isLoaded) {
    if (HTjesFragmentationdn_branch != 0) {
      HTjesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch HTjesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    HTjesFragmentationdn_isLoaded = true;
  }
  return HTjesFragmentationdn_;
}

const float &VVV0Tree::HTJjesFragmentationdn() {
  if (not HTJjesFragmentationdn_isLoaded) {
    if (HTJjesFragmentationdn_branch != 0) {
      HTJjesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch HTJjesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    HTJjesFragmentationdn_isLoaded = true;
  }
  return HTJjesFragmentationdn_;
}

const float &VVV0Tree::HTFJjesFragmentationdn() {
  if (not HTFJjesFragmentationdn_isLoaded) {
    if (HTFJjesFragmentationdn_branch != 0) {
      HTFJjesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    HTFJjesFragmentationdn_isLoaded = true;
  }
  return HTFJjesFragmentationdn_;
}

const float &VVV0Tree::SumPtFJjesFragmentationdn() {
  if (not SumPtFJjesFragmentationdn_isLoaded) {
    if (SumPtFJjesFragmentationdn_branch != 0) {
      SumPtFJjesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesFragmentationdn_isLoaded = true;
  }
  return SumPtFJjesFragmentationdn_;
}

const float &VVV0Tree::SumPtJjesFragmentationdn() {
  if (not SumPtJjesFragmentationdn_isLoaded) {
    if (SumPtJjesFragmentationdn_branch != 0) {
      SumPtJjesFragmentationdn_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesFragmentationdn_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesFragmentationdn_isLoaded = true;
  }
  return SumPtJjesFragmentationdn_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesSinglePionECALup() {
  if (not JsjesSinglePionECALup_isLoaded) {
    if (JsjesSinglePionECALup_branch != 0) {
      JsjesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch JsjesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    JsjesSinglePionECALup_isLoaded = true;
  }
  return *JsjesSinglePionECALup_;
}

const int &VVV0Tree::NFJjesSinglePionECALup() {
  if (not NFJjesSinglePionECALup_isLoaded) {
    if (NFJjesSinglePionECALup_branch != 0) {
      NFJjesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch NFJjesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    NFJjesSinglePionECALup_isLoaded = true;
  }
  return NFJjesSinglePionECALup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesSinglePionECALup() {
  if (not FJ0jesSinglePionECALup_isLoaded) {
    if (FJ0jesSinglePionECALup_branch != 0) {
      FJ0jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    FJ0jesSinglePionECALup_isLoaded = true;
  }
  return *FJ0jesSinglePionECALup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesSinglePionECALup() {
  if (not FJ1jesSinglePionECALup_isLoaded) {
    if (FJ1jesSinglePionECALup_branch != 0) {
      FJ1jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    FJ1jesSinglePionECALup_isLoaded = true;
  }
  return *FJ1jesSinglePionECALup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesSinglePionECALup() {
  if (not FJ2jesSinglePionECALup_isLoaded) {
    if (FJ2jesSinglePionECALup_branch != 0) {
      FJ2jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    FJ2jesSinglePionECALup_isLoaded = true;
  }
  return *FJ2jesSinglePionECALup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesSinglePionECALup() {
  if (not FJ3jesSinglePionECALup_isLoaded) {
    if (FJ3jesSinglePionECALup_branch != 0) {
      FJ3jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    FJ3jesSinglePionECALup_isLoaded = true;
  }
  return *FJ3jesSinglePionECALup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesSinglePionECALup() {
  if (not FJ4jesSinglePionECALup_isLoaded) {
    if (FJ4jesSinglePionECALup_branch != 0) {
      FJ4jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    FJ4jesSinglePionECALup_isLoaded = true;
  }
  return *FJ4jesSinglePionECALup_;
}

const float &VVV0Tree::VMD0jesSinglePionECALup() {
  if (not VMD0jesSinglePionECALup_isLoaded) {
    if (VMD0jesSinglePionECALup_branch != 0) {
      VMD0jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    VMD0jesSinglePionECALup_isLoaded = true;
  }
  return VMD0jesSinglePionECALup_;
}

const float &VVV0Tree::VMD1jesSinglePionECALup() {
  if (not VMD1jesSinglePionECALup_isLoaded) {
    if (VMD1jesSinglePionECALup_branch != 0) {
      VMD1jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    VMD1jesSinglePionECALup_isLoaded = true;
  }
  return VMD1jesSinglePionECALup_;
}

const float &VVV0Tree::VMD2jesSinglePionECALup() {
  if (not VMD2jesSinglePionECALup_isLoaded) {
    if (VMD2jesSinglePionECALup_branch != 0) {
      VMD2jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    VMD2jesSinglePionECALup_isLoaded = true;
  }
  return VMD2jesSinglePionECALup_;
}

const float &VVV0Tree::VMD3jesSinglePionECALup() {
  if (not VMD3jesSinglePionECALup_isLoaded) {
    if (VMD3jesSinglePionECALup_branch != 0) {
      VMD3jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    VMD3jesSinglePionECALup_isLoaded = true;
  }
  return VMD3jesSinglePionECALup_;
}

const float &VVV0Tree::VMD4jesSinglePionECALup() {
  if (not VMD4jesSinglePionECALup_isLoaded) {
    if (VMD4jesSinglePionECALup_branch != 0) {
      VMD4jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    VMD4jesSinglePionECALup_isLoaded = true;
  }
  return VMD4jesSinglePionECALup_;
}

const float &VVV0Tree::WMD0jesSinglePionECALup() {
  if (not WMD0jesSinglePionECALup_isLoaded) {
    if (WMD0jesSinglePionECALup_branch != 0) {
      WMD0jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    WMD0jesSinglePionECALup_isLoaded = true;
  }
  return WMD0jesSinglePionECALup_;
}

const float &VVV0Tree::WMD1jesSinglePionECALup() {
  if (not WMD1jesSinglePionECALup_isLoaded) {
    if (WMD1jesSinglePionECALup_branch != 0) {
      WMD1jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    WMD1jesSinglePionECALup_isLoaded = true;
  }
  return WMD1jesSinglePionECALup_;
}

const float &VVV0Tree::WMD2jesSinglePionECALup() {
  if (not WMD2jesSinglePionECALup_isLoaded) {
    if (WMD2jesSinglePionECALup_branch != 0) {
      WMD2jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    WMD2jesSinglePionECALup_isLoaded = true;
  }
  return WMD2jesSinglePionECALup_;
}

const float &VVV0Tree::WMD3jesSinglePionECALup() {
  if (not WMD3jesSinglePionECALup_isLoaded) {
    if (WMD3jesSinglePionECALup_branch != 0) {
      WMD3jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    WMD3jesSinglePionECALup_isLoaded = true;
  }
  return WMD3jesSinglePionECALup_;
}

const float &VVV0Tree::WMD4jesSinglePionECALup() {
  if (not WMD4jesSinglePionECALup_isLoaded) {
    if (WMD4jesSinglePionECALup_branch != 0) {
      WMD4jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    WMD4jesSinglePionECALup_isLoaded = true;
  }
  return WMD4jesSinglePionECALup_;
}

const int &VVV0Tree::NQGen0jesSinglePionECALup() {
  if (not NQGen0jesSinglePionECALup_isLoaded) {
    if (NQGen0jesSinglePionECALup_branch != 0) {
      NQGen0jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesSinglePionECALup_isLoaded = true;
  }
  return NQGen0jesSinglePionECALup_;
}

const int &VVV0Tree::NQGen1jesSinglePionECALup() {
  if (not NQGen1jesSinglePionECALup_isLoaded) {
    if (NQGen1jesSinglePionECALup_branch != 0) {
      NQGen1jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesSinglePionECALup_isLoaded = true;
  }
  return NQGen1jesSinglePionECALup_;
}

const int &VVV0Tree::NQGen2jesSinglePionECALup() {
  if (not NQGen2jesSinglePionECALup_isLoaded) {
    if (NQGen2jesSinglePionECALup_branch != 0) {
      NQGen2jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesSinglePionECALup_isLoaded = true;
  }
  return NQGen2jesSinglePionECALup_;
}

const int &VVV0Tree::NQGen3jesSinglePionECALup() {
  if (not NQGen3jesSinglePionECALup_isLoaded) {
    if (NQGen3jesSinglePionECALup_branch != 0) {
      NQGen3jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesSinglePionECALup_isLoaded = true;
  }
  return NQGen3jesSinglePionECALup_;
}

const int &VVV0Tree::NQGen4jesSinglePionECALup() {
  if (not NQGen4jesSinglePionECALup_isLoaded) {
    if (NQGen4jesSinglePionECALup_branch != 0) {
      NQGen4jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesSinglePionECALup_isLoaded = true;
  }
  return NQGen4jesSinglePionECALup_;
}

const int &VVV0Tree::NBGen0jesSinglePionECALup() {
  if (not NBGen0jesSinglePionECALup_isLoaded) {
    if (NBGen0jesSinglePionECALup_branch != 0) {
      NBGen0jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesSinglePionECALup_isLoaded = true;
  }
  return NBGen0jesSinglePionECALup_;
}

const int &VVV0Tree::NBGen1jesSinglePionECALup() {
  if (not NBGen1jesSinglePionECALup_isLoaded) {
    if (NBGen1jesSinglePionECALup_branch != 0) {
      NBGen1jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesSinglePionECALup_isLoaded = true;
  }
  return NBGen1jesSinglePionECALup_;
}

const int &VVV0Tree::NBGen2jesSinglePionECALup() {
  if (not NBGen2jesSinglePionECALup_isLoaded) {
    if (NBGen2jesSinglePionECALup_branch != 0) {
      NBGen2jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesSinglePionECALup_isLoaded = true;
  }
  return NBGen2jesSinglePionECALup_;
}

const int &VVV0Tree::NBGen3jesSinglePionECALup() {
  if (not NBGen3jesSinglePionECALup_isLoaded) {
    if (NBGen3jesSinglePionECALup_branch != 0) {
      NBGen3jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesSinglePionECALup_isLoaded = true;
  }
  return NBGen3jesSinglePionECALup_;
}

const int &VVV0Tree::NBGen4jesSinglePionECALup() {
  if (not NBGen4jesSinglePionECALup_isLoaded) {
    if (NBGen4jesSinglePionECALup_branch != 0) {
      NBGen4jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesSinglePionECALup_isLoaded = true;
  }
  return NBGen4jesSinglePionECALup_;
}

const int &VVV0Tree::NLGen0jesSinglePionECALup() {
  if (not NLGen0jesSinglePionECALup_isLoaded) {
    if (NLGen0jesSinglePionECALup_branch != 0) {
      NLGen0jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesSinglePionECALup_isLoaded = true;
  }
  return NLGen0jesSinglePionECALup_;
}

const int &VVV0Tree::NLGen1jesSinglePionECALup() {
  if (not NLGen1jesSinglePionECALup_isLoaded) {
    if (NLGen1jesSinglePionECALup_branch != 0) {
      NLGen1jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesSinglePionECALup_isLoaded = true;
  }
  return NLGen1jesSinglePionECALup_;
}

const int &VVV0Tree::NLGen2jesSinglePionECALup() {
  if (not NLGen2jesSinglePionECALup_isLoaded) {
    if (NLGen2jesSinglePionECALup_branch != 0) {
      NLGen2jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesSinglePionECALup_isLoaded = true;
  }
  return NLGen2jesSinglePionECALup_;
}

const int &VVV0Tree::NLGen3jesSinglePionECALup() {
  if (not NLGen3jesSinglePionECALup_isLoaded) {
    if (NLGen3jesSinglePionECALup_branch != 0) {
      NLGen3jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesSinglePionECALup_isLoaded = true;
  }
  return NLGen3jesSinglePionECALup_;
}

const int &VVV0Tree::NLGen4jesSinglePionECALup() {
  if (not NLGen4jesSinglePionECALup_isLoaded) {
    if (NLGen4jesSinglePionECALup_branch != 0) {
      NLGen4jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesSinglePionECALup_isLoaded = true;
  }
  return NLGen4jesSinglePionECALup_;
}

const int &VVV0Tree::NVQGen0jesSinglePionECALup() {
  if (not NVQGen0jesSinglePionECALup_isLoaded) {
    if (NVQGen0jesSinglePionECALup_branch != 0) {
      NVQGen0jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesSinglePionECALup_isLoaded = true;
  }
  return NVQGen0jesSinglePionECALup_;
}

const int &VVV0Tree::NVQGen1jesSinglePionECALup() {
  if (not NVQGen1jesSinglePionECALup_isLoaded) {
    if (NVQGen1jesSinglePionECALup_branch != 0) {
      NVQGen1jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesSinglePionECALup_isLoaded = true;
  }
  return NVQGen1jesSinglePionECALup_;
}

const int &VVV0Tree::NVQGen2jesSinglePionECALup() {
  if (not NVQGen2jesSinglePionECALup_isLoaded) {
    if (NVQGen2jesSinglePionECALup_branch != 0) {
      NVQGen2jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesSinglePionECALup_isLoaded = true;
  }
  return NVQGen2jesSinglePionECALup_;
}

const int &VVV0Tree::NVQGen3jesSinglePionECALup() {
  if (not NVQGen3jesSinglePionECALup_isLoaded) {
    if (NVQGen3jesSinglePionECALup_branch != 0) {
      NVQGen3jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesSinglePionECALup_isLoaded = true;
  }
  return NVQGen3jesSinglePionECALup_;
}

const int &VVV0Tree::NVQGen4jesSinglePionECALup() {
  if (not NVQGen4jesSinglePionECALup_isLoaded) {
    if (NVQGen4jesSinglePionECALup_branch != 0) {
      NVQGen4jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesSinglePionECALup_isLoaded = true;
  }
  return NVQGen4jesSinglePionECALup_;
}

const int &VVV0Tree::NiFJjesSinglePionECALup() {
  if (not NiFJjesSinglePionECALup_isLoaded) {
    if (NiFJjesSinglePionECALup_branch != 0) {
      NiFJjesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    NiFJjesSinglePionECALup_isLoaded = true;
  }
  return NiFJjesSinglePionECALup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesSinglePionECALup() {
  if (not iFJ0jesSinglePionECALup_isLoaded) {
    if (iFJ0jesSinglePionECALup_branch != 0) {
      iFJ0jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesSinglePionECALup_isLoaded = true;
  }
  return *iFJ0jesSinglePionECALup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesSinglePionECALup() {
  if (not iFJ1jesSinglePionECALup_isLoaded) {
    if (iFJ1jesSinglePionECALup_branch != 0) {
      iFJ1jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesSinglePionECALup_isLoaded = true;
  }
  return *iFJ1jesSinglePionECALup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesSinglePionECALup() {
  if (not iFJ2jesSinglePionECALup_isLoaded) {
    if (iFJ2jesSinglePionECALup_branch != 0) {
      iFJ2jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesSinglePionECALup_isLoaded = true;
  }
  return *iFJ2jesSinglePionECALup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesSinglePionECALup() {
  if (not iFJ3jesSinglePionECALup_isLoaded) {
    if (iFJ3jesSinglePionECALup_branch != 0) {
      iFJ3jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesSinglePionECALup_isLoaded = true;
  }
  return *iFJ3jesSinglePionECALup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesSinglePionECALup() {
  if (not iFJ4jesSinglePionECALup_isLoaded) {
    if (iFJ4jesSinglePionECALup_branch != 0) {
      iFJ4jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesSinglePionECALup_isLoaded = true;
  }
  return *iFJ4jesSinglePionECALup_;
}

const float &VVV0Tree::iVMD0jesSinglePionECALup() {
  if (not iVMD0jesSinglePionECALup_isLoaded) {
    if (iVMD0jesSinglePionECALup_branch != 0) {
      iVMD0jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesSinglePionECALup_isLoaded = true;
  }
  return iVMD0jesSinglePionECALup_;
}

const float &VVV0Tree::iVMD1jesSinglePionECALup() {
  if (not iVMD1jesSinglePionECALup_isLoaded) {
    if (iVMD1jesSinglePionECALup_branch != 0) {
      iVMD1jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesSinglePionECALup_isLoaded = true;
  }
  return iVMD1jesSinglePionECALup_;
}

const float &VVV0Tree::iVMD2jesSinglePionECALup() {
  if (not iVMD2jesSinglePionECALup_isLoaded) {
    if (iVMD2jesSinglePionECALup_branch != 0) {
      iVMD2jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesSinglePionECALup_isLoaded = true;
  }
  return iVMD2jesSinglePionECALup_;
}

const float &VVV0Tree::iVMD3jesSinglePionECALup() {
  if (not iVMD3jesSinglePionECALup_isLoaded) {
    if (iVMD3jesSinglePionECALup_branch != 0) {
      iVMD3jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesSinglePionECALup_isLoaded = true;
  }
  return iVMD3jesSinglePionECALup_;
}

const float &VVV0Tree::iVMD4jesSinglePionECALup() {
  if (not iVMD4jesSinglePionECALup_isLoaded) {
    if (iVMD4jesSinglePionECALup_branch != 0) {
      iVMD4jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesSinglePionECALup_isLoaded = true;
  }
  return iVMD4jesSinglePionECALup_;
}

const float &VVV0Tree::iWMD0jesSinglePionECALup() {
  if (not iWMD0jesSinglePionECALup_isLoaded) {
    if (iWMD0jesSinglePionECALup_branch != 0) {
      iWMD0jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesSinglePionECALup_isLoaded = true;
  }
  return iWMD0jesSinglePionECALup_;
}

const float &VVV0Tree::iWMD1jesSinglePionECALup() {
  if (not iWMD1jesSinglePionECALup_isLoaded) {
    if (iWMD1jesSinglePionECALup_branch != 0) {
      iWMD1jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesSinglePionECALup_isLoaded = true;
  }
  return iWMD1jesSinglePionECALup_;
}

const float &VVV0Tree::iWMD2jesSinglePionECALup() {
  if (not iWMD2jesSinglePionECALup_isLoaded) {
    if (iWMD2jesSinglePionECALup_branch != 0) {
      iWMD2jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesSinglePionECALup_isLoaded = true;
  }
  return iWMD2jesSinglePionECALup_;
}

const float &VVV0Tree::iWMD3jesSinglePionECALup() {
  if (not iWMD3jesSinglePionECALup_isLoaded) {
    if (iWMD3jesSinglePionECALup_branch != 0) {
      iWMD3jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesSinglePionECALup_isLoaded = true;
  }
  return iWMD3jesSinglePionECALup_;
}

const float &VVV0Tree::iWMD4jesSinglePionECALup() {
  if (not iWMD4jesSinglePionECALup_isLoaded) {
    if (iWMD4jesSinglePionECALup_branch != 0) {
      iWMD4jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesSinglePionECALup_isLoaded = true;
  }
  return iWMD4jesSinglePionECALup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesSinglePionECALup() {
  if (not METjesSinglePionECALup_isLoaded) {
    if (METjesSinglePionECALup_branch != 0) {
      METjesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch METjesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    METjesSinglePionECALup_isLoaded = true;
  }
  return *METjesSinglePionECALup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesSinglePionECALup() {
  if (not NujesSinglePionECALup_isLoaded) {
    if (NujesSinglePionECALup_branch != 0) {
      NujesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch NujesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    NujesSinglePionECALup_isLoaded = true;
  }
  return *NujesSinglePionECALup_;
}

const int &VVV0Tree::NJjesSinglePionECALup() {
  if (not NJjesSinglePionECALup_isLoaded) {
    if (NJjesSinglePionECALup_branch != 0) {
      NJjesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch NJjesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    NJjesSinglePionECALup_isLoaded = true;
  }
  return NJjesSinglePionECALup_;
}

const int &VVV0Tree::NbLoosejesSinglePionECALup() {
  if (not NbLoosejesSinglePionECALup_isLoaded) {
    if (NbLoosejesSinglePionECALup_branch != 0) {
      NbLoosejesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesSinglePionECALup_isLoaded = true;
  }
  return NbLoosejesSinglePionECALup_;
}

const int &VVV0Tree::NbMediumjesSinglePionECALup() {
  if (not NbMediumjesSinglePionECALup_isLoaded) {
    if (NbMediumjesSinglePionECALup_branch != 0) {
      NbMediumjesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesSinglePionECALup_isLoaded = true;
  }
  return NbMediumjesSinglePionECALup_;
}

const int &VVV0Tree::NbTightjesSinglePionECALup() {
  if (not NbTightjesSinglePionECALup_isLoaded) {
    if (NbTightjesSinglePionECALup_branch != 0) {
      NbTightjesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    NbTightjesSinglePionECALup_isLoaded = true;
  }
  return NbTightjesSinglePionECALup_;
}

const int &VVV0Tree::NoORNbLoosejesSinglePionECALup() {
  if (not NoORNbLoosejesSinglePionECALup_isLoaded) {
    if (NoORNbLoosejesSinglePionECALup_branch != 0) {
      NoORNbLoosejesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesSinglePionECALup_isLoaded = true;
  }
  return NoORNbLoosejesSinglePionECALup_;
}

const int &VVV0Tree::NoORNbMediumjesSinglePionECALup() {
  if (not NoORNbMediumjesSinglePionECALup_isLoaded) {
    if (NoORNbMediumjesSinglePionECALup_branch != 0) {
      NoORNbMediumjesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesSinglePionECALup_isLoaded = true;
  }
  return NoORNbMediumjesSinglePionECALup_;
}

const int &VVV0Tree::NoORNbTightjesSinglePionECALup() {
  if (not NoORNbTightjesSinglePionECALup_isLoaded) {
    if (NoORNbTightjesSinglePionECALup_branch != 0) {
      NoORNbTightjesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesSinglePionECALup_isLoaded = true;
  }
  return NoORNbTightjesSinglePionECALup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesSinglePionECALup() {
  if (not J0jesSinglePionECALup_isLoaded) {
    if (J0jesSinglePionECALup_branch != 0) {
      J0jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch J0jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    J0jesSinglePionECALup_isLoaded = true;
  }
  return *J0jesSinglePionECALup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesSinglePionECALup() {
  if (not J1jesSinglePionECALup_isLoaded) {
    if (J1jesSinglePionECALup_branch != 0) {
      J1jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch J1jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    J1jesSinglePionECALup_isLoaded = true;
  }
  return *J1jesSinglePionECALup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesSinglePionECALup() {
  if (not J2jesSinglePionECALup_isLoaded) {
    if (J2jesSinglePionECALup_branch != 0) {
      J2jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch J2jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    J2jesSinglePionECALup_isLoaded = true;
  }
  return *J2jesSinglePionECALup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesSinglePionECALup() {
  if (not J3jesSinglePionECALup_isLoaded) {
    if (J3jesSinglePionECALup_branch != 0) {
      J3jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch J3jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    J3jesSinglePionECALup_isLoaded = true;
  }
  return *J3jesSinglePionECALup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesSinglePionECALup() {
  if (not J4jesSinglePionECALup_isLoaded) {
    if (J4jesSinglePionECALup_branch != 0) {
      J4jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch J4jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    J4jesSinglePionECALup_isLoaded = true;
  }
  return *J4jesSinglePionECALup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesSinglePionECALup() {
  if (not J5jesSinglePionECALup_isLoaded) {
    if (J5jesSinglePionECALup_branch != 0) {
      J5jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch J5jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    J5jesSinglePionECALup_isLoaded = true;
  }
  return *J5jesSinglePionECALup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesSinglePionECALup() {
  if (not J6jesSinglePionECALup_isLoaded) {
    if (J6jesSinglePionECALup_branch != 0) {
      J6jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch J6jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    J6jesSinglePionECALup_isLoaded = true;
  }
  return *J6jesSinglePionECALup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesSinglePionECALup() {
  if (not J7jesSinglePionECALup_isLoaded) {
    if (J7jesSinglePionECALup_branch != 0) {
      J7jesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch J7jesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    J7jesSinglePionECALup_isLoaded = true;
  }
  return *J7jesSinglePionECALup_;
}

const vector<int> &VVV0Tree::NQJGenjesSinglePionECALup() {
  if (not NQJGenjesSinglePionECALup_isLoaded) {
    if (NQJGenjesSinglePionECALup_branch != 0) {
      NQJGenjesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesSinglePionECALup_isLoaded = true;
  }
  return *NQJGenjesSinglePionECALup_;
}

const vector<int> &VVV0Tree::NBJGenjesSinglePionECALup() {
  if (not NBJGenjesSinglePionECALup_isLoaded) {
    if (NBJGenjesSinglePionECALup_branch != 0) {
      NBJGenjesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesSinglePionECALup_isLoaded = true;
  }
  return *NBJGenjesSinglePionECALup_;
}

const vector<int> &VVV0Tree::NLJGenjesSinglePionECALup() {
  if (not NLJGenjesSinglePionECALup_isLoaded) {
    if (NLJGenjesSinglePionECALup_branch != 0) {
      NLJGenjesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesSinglePionECALup_isLoaded = true;
  }
  return *NLJGenjesSinglePionECALup_;
}

const float &VVV0Tree::MVVXjesSinglePionECALup() {
  if (not MVVXjesSinglePionECALup_isLoaded) {
    if (MVVXjesSinglePionECALup_branch != 0) {
      MVVXjesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    MVVXjesSinglePionECALup_isLoaded = true;
  }
  return MVVXjesSinglePionECALup_;
}

const float &VVV0Tree::PtVVXjesSinglePionECALup() {
  if (not PtVVXjesSinglePionECALup_isLoaded) {
    if (PtVVXjesSinglePionECALup_branch != 0) {
      PtVVXjesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesSinglePionECALup_isLoaded = true;
  }
  return PtVVXjesSinglePionECALup_;
}

const float &VVV0Tree::HTjesSinglePionECALup() {
  if (not HTjesSinglePionECALup_isLoaded) {
    if (HTjesSinglePionECALup_branch != 0) {
      HTjesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch HTjesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    HTjesSinglePionECALup_isLoaded = true;
  }
  return HTjesSinglePionECALup_;
}

const float &VVV0Tree::HTJjesSinglePionECALup() {
  if (not HTJjesSinglePionECALup_isLoaded) {
    if (HTJjesSinglePionECALup_branch != 0) {
      HTJjesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch HTJjesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    HTJjesSinglePionECALup_isLoaded = true;
  }
  return HTJjesSinglePionECALup_;
}

const float &VVV0Tree::HTFJjesSinglePionECALup() {
  if (not HTFJjesSinglePionECALup_isLoaded) {
    if (HTFJjesSinglePionECALup_branch != 0) {
      HTFJjesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    HTFJjesSinglePionECALup_isLoaded = true;
  }
  return HTFJjesSinglePionECALup_;
}

const float &VVV0Tree::SumPtFJjesSinglePionECALup() {
  if (not SumPtFJjesSinglePionECALup_isLoaded) {
    if (SumPtFJjesSinglePionECALup_branch != 0) {
      SumPtFJjesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesSinglePionECALup_isLoaded = true;
  }
  return SumPtFJjesSinglePionECALup_;
}

const float &VVV0Tree::SumPtJjesSinglePionECALup() {
  if (not SumPtJjesSinglePionECALup_isLoaded) {
    if (SumPtJjesSinglePionECALup_branch != 0) {
      SumPtJjesSinglePionECALup_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesSinglePionECALup_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesSinglePionECALup_isLoaded = true;
  }
  return SumPtJjesSinglePionECALup_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesSinglePionECALdn() {
  if (not JsjesSinglePionECALdn_isLoaded) {
    if (JsjesSinglePionECALdn_branch != 0) {
      JsjesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch JsjesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    JsjesSinglePionECALdn_isLoaded = true;
  }
  return *JsjesSinglePionECALdn_;
}

const int &VVV0Tree::NFJjesSinglePionECALdn() {
  if (not NFJjesSinglePionECALdn_isLoaded) {
    if (NFJjesSinglePionECALdn_branch != 0) {
      NFJjesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch NFJjesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    NFJjesSinglePionECALdn_isLoaded = true;
  }
  return NFJjesSinglePionECALdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesSinglePionECALdn() {
  if (not FJ0jesSinglePionECALdn_isLoaded) {
    if (FJ0jesSinglePionECALdn_branch != 0) {
      FJ0jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    FJ0jesSinglePionECALdn_isLoaded = true;
  }
  return *FJ0jesSinglePionECALdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesSinglePionECALdn() {
  if (not FJ1jesSinglePionECALdn_isLoaded) {
    if (FJ1jesSinglePionECALdn_branch != 0) {
      FJ1jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    FJ1jesSinglePionECALdn_isLoaded = true;
  }
  return *FJ1jesSinglePionECALdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesSinglePionECALdn() {
  if (not FJ2jesSinglePionECALdn_isLoaded) {
    if (FJ2jesSinglePionECALdn_branch != 0) {
      FJ2jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    FJ2jesSinglePionECALdn_isLoaded = true;
  }
  return *FJ2jesSinglePionECALdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesSinglePionECALdn() {
  if (not FJ3jesSinglePionECALdn_isLoaded) {
    if (FJ3jesSinglePionECALdn_branch != 0) {
      FJ3jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    FJ3jesSinglePionECALdn_isLoaded = true;
  }
  return *FJ3jesSinglePionECALdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesSinglePionECALdn() {
  if (not FJ4jesSinglePionECALdn_isLoaded) {
    if (FJ4jesSinglePionECALdn_branch != 0) {
      FJ4jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    FJ4jesSinglePionECALdn_isLoaded = true;
  }
  return *FJ4jesSinglePionECALdn_;
}

const float &VVV0Tree::VMD0jesSinglePionECALdn() {
  if (not VMD0jesSinglePionECALdn_isLoaded) {
    if (VMD0jesSinglePionECALdn_branch != 0) {
      VMD0jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    VMD0jesSinglePionECALdn_isLoaded = true;
  }
  return VMD0jesSinglePionECALdn_;
}

const float &VVV0Tree::VMD1jesSinglePionECALdn() {
  if (not VMD1jesSinglePionECALdn_isLoaded) {
    if (VMD1jesSinglePionECALdn_branch != 0) {
      VMD1jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    VMD1jesSinglePionECALdn_isLoaded = true;
  }
  return VMD1jesSinglePionECALdn_;
}

const float &VVV0Tree::VMD2jesSinglePionECALdn() {
  if (not VMD2jesSinglePionECALdn_isLoaded) {
    if (VMD2jesSinglePionECALdn_branch != 0) {
      VMD2jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    VMD2jesSinglePionECALdn_isLoaded = true;
  }
  return VMD2jesSinglePionECALdn_;
}

const float &VVV0Tree::VMD3jesSinglePionECALdn() {
  if (not VMD3jesSinglePionECALdn_isLoaded) {
    if (VMD3jesSinglePionECALdn_branch != 0) {
      VMD3jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    VMD3jesSinglePionECALdn_isLoaded = true;
  }
  return VMD3jesSinglePionECALdn_;
}

const float &VVV0Tree::VMD4jesSinglePionECALdn() {
  if (not VMD4jesSinglePionECALdn_isLoaded) {
    if (VMD4jesSinglePionECALdn_branch != 0) {
      VMD4jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    VMD4jesSinglePionECALdn_isLoaded = true;
  }
  return VMD4jesSinglePionECALdn_;
}

const float &VVV0Tree::WMD0jesSinglePionECALdn() {
  if (not WMD0jesSinglePionECALdn_isLoaded) {
    if (WMD0jesSinglePionECALdn_branch != 0) {
      WMD0jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    WMD0jesSinglePionECALdn_isLoaded = true;
  }
  return WMD0jesSinglePionECALdn_;
}

const float &VVV0Tree::WMD1jesSinglePionECALdn() {
  if (not WMD1jesSinglePionECALdn_isLoaded) {
    if (WMD1jesSinglePionECALdn_branch != 0) {
      WMD1jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    WMD1jesSinglePionECALdn_isLoaded = true;
  }
  return WMD1jesSinglePionECALdn_;
}

const float &VVV0Tree::WMD2jesSinglePionECALdn() {
  if (not WMD2jesSinglePionECALdn_isLoaded) {
    if (WMD2jesSinglePionECALdn_branch != 0) {
      WMD2jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    WMD2jesSinglePionECALdn_isLoaded = true;
  }
  return WMD2jesSinglePionECALdn_;
}

const float &VVV0Tree::WMD3jesSinglePionECALdn() {
  if (not WMD3jesSinglePionECALdn_isLoaded) {
    if (WMD3jesSinglePionECALdn_branch != 0) {
      WMD3jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    WMD3jesSinglePionECALdn_isLoaded = true;
  }
  return WMD3jesSinglePionECALdn_;
}

const float &VVV0Tree::WMD4jesSinglePionECALdn() {
  if (not WMD4jesSinglePionECALdn_isLoaded) {
    if (WMD4jesSinglePionECALdn_branch != 0) {
      WMD4jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    WMD4jesSinglePionECALdn_isLoaded = true;
  }
  return WMD4jesSinglePionECALdn_;
}

const int &VVV0Tree::NQGen0jesSinglePionECALdn() {
  if (not NQGen0jesSinglePionECALdn_isLoaded) {
    if (NQGen0jesSinglePionECALdn_branch != 0) {
      NQGen0jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesSinglePionECALdn_isLoaded = true;
  }
  return NQGen0jesSinglePionECALdn_;
}

const int &VVV0Tree::NQGen1jesSinglePionECALdn() {
  if (not NQGen1jesSinglePionECALdn_isLoaded) {
    if (NQGen1jesSinglePionECALdn_branch != 0) {
      NQGen1jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesSinglePionECALdn_isLoaded = true;
  }
  return NQGen1jesSinglePionECALdn_;
}

const int &VVV0Tree::NQGen2jesSinglePionECALdn() {
  if (not NQGen2jesSinglePionECALdn_isLoaded) {
    if (NQGen2jesSinglePionECALdn_branch != 0) {
      NQGen2jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesSinglePionECALdn_isLoaded = true;
  }
  return NQGen2jesSinglePionECALdn_;
}

const int &VVV0Tree::NQGen3jesSinglePionECALdn() {
  if (not NQGen3jesSinglePionECALdn_isLoaded) {
    if (NQGen3jesSinglePionECALdn_branch != 0) {
      NQGen3jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesSinglePionECALdn_isLoaded = true;
  }
  return NQGen3jesSinglePionECALdn_;
}

const int &VVV0Tree::NQGen4jesSinglePionECALdn() {
  if (not NQGen4jesSinglePionECALdn_isLoaded) {
    if (NQGen4jesSinglePionECALdn_branch != 0) {
      NQGen4jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesSinglePionECALdn_isLoaded = true;
  }
  return NQGen4jesSinglePionECALdn_;
}

const int &VVV0Tree::NBGen0jesSinglePionECALdn() {
  if (not NBGen0jesSinglePionECALdn_isLoaded) {
    if (NBGen0jesSinglePionECALdn_branch != 0) {
      NBGen0jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesSinglePionECALdn_isLoaded = true;
  }
  return NBGen0jesSinglePionECALdn_;
}

const int &VVV0Tree::NBGen1jesSinglePionECALdn() {
  if (not NBGen1jesSinglePionECALdn_isLoaded) {
    if (NBGen1jesSinglePionECALdn_branch != 0) {
      NBGen1jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesSinglePionECALdn_isLoaded = true;
  }
  return NBGen1jesSinglePionECALdn_;
}

const int &VVV0Tree::NBGen2jesSinglePionECALdn() {
  if (not NBGen2jesSinglePionECALdn_isLoaded) {
    if (NBGen2jesSinglePionECALdn_branch != 0) {
      NBGen2jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesSinglePionECALdn_isLoaded = true;
  }
  return NBGen2jesSinglePionECALdn_;
}

const int &VVV0Tree::NBGen3jesSinglePionECALdn() {
  if (not NBGen3jesSinglePionECALdn_isLoaded) {
    if (NBGen3jesSinglePionECALdn_branch != 0) {
      NBGen3jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesSinglePionECALdn_isLoaded = true;
  }
  return NBGen3jesSinglePionECALdn_;
}

const int &VVV0Tree::NBGen4jesSinglePionECALdn() {
  if (not NBGen4jesSinglePionECALdn_isLoaded) {
    if (NBGen4jesSinglePionECALdn_branch != 0) {
      NBGen4jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesSinglePionECALdn_isLoaded = true;
  }
  return NBGen4jesSinglePionECALdn_;
}

const int &VVV0Tree::NLGen0jesSinglePionECALdn() {
  if (not NLGen0jesSinglePionECALdn_isLoaded) {
    if (NLGen0jesSinglePionECALdn_branch != 0) {
      NLGen0jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesSinglePionECALdn_isLoaded = true;
  }
  return NLGen0jesSinglePionECALdn_;
}

const int &VVV0Tree::NLGen1jesSinglePionECALdn() {
  if (not NLGen1jesSinglePionECALdn_isLoaded) {
    if (NLGen1jesSinglePionECALdn_branch != 0) {
      NLGen1jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesSinglePionECALdn_isLoaded = true;
  }
  return NLGen1jesSinglePionECALdn_;
}

const int &VVV0Tree::NLGen2jesSinglePionECALdn() {
  if (not NLGen2jesSinglePionECALdn_isLoaded) {
    if (NLGen2jesSinglePionECALdn_branch != 0) {
      NLGen2jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesSinglePionECALdn_isLoaded = true;
  }
  return NLGen2jesSinglePionECALdn_;
}

const int &VVV0Tree::NLGen3jesSinglePionECALdn() {
  if (not NLGen3jesSinglePionECALdn_isLoaded) {
    if (NLGen3jesSinglePionECALdn_branch != 0) {
      NLGen3jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesSinglePionECALdn_isLoaded = true;
  }
  return NLGen3jesSinglePionECALdn_;
}

const int &VVV0Tree::NLGen4jesSinglePionECALdn() {
  if (not NLGen4jesSinglePionECALdn_isLoaded) {
    if (NLGen4jesSinglePionECALdn_branch != 0) {
      NLGen4jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesSinglePionECALdn_isLoaded = true;
  }
  return NLGen4jesSinglePionECALdn_;
}

const int &VVV0Tree::NVQGen0jesSinglePionECALdn() {
  if (not NVQGen0jesSinglePionECALdn_isLoaded) {
    if (NVQGen0jesSinglePionECALdn_branch != 0) {
      NVQGen0jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesSinglePionECALdn_isLoaded = true;
  }
  return NVQGen0jesSinglePionECALdn_;
}

const int &VVV0Tree::NVQGen1jesSinglePionECALdn() {
  if (not NVQGen1jesSinglePionECALdn_isLoaded) {
    if (NVQGen1jesSinglePionECALdn_branch != 0) {
      NVQGen1jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesSinglePionECALdn_isLoaded = true;
  }
  return NVQGen1jesSinglePionECALdn_;
}

const int &VVV0Tree::NVQGen2jesSinglePionECALdn() {
  if (not NVQGen2jesSinglePionECALdn_isLoaded) {
    if (NVQGen2jesSinglePionECALdn_branch != 0) {
      NVQGen2jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesSinglePionECALdn_isLoaded = true;
  }
  return NVQGen2jesSinglePionECALdn_;
}

const int &VVV0Tree::NVQGen3jesSinglePionECALdn() {
  if (not NVQGen3jesSinglePionECALdn_isLoaded) {
    if (NVQGen3jesSinglePionECALdn_branch != 0) {
      NVQGen3jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesSinglePionECALdn_isLoaded = true;
  }
  return NVQGen3jesSinglePionECALdn_;
}

const int &VVV0Tree::NVQGen4jesSinglePionECALdn() {
  if (not NVQGen4jesSinglePionECALdn_isLoaded) {
    if (NVQGen4jesSinglePionECALdn_branch != 0) {
      NVQGen4jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesSinglePionECALdn_isLoaded = true;
  }
  return NVQGen4jesSinglePionECALdn_;
}

const int &VVV0Tree::NiFJjesSinglePionECALdn() {
  if (not NiFJjesSinglePionECALdn_isLoaded) {
    if (NiFJjesSinglePionECALdn_branch != 0) {
      NiFJjesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    NiFJjesSinglePionECALdn_isLoaded = true;
  }
  return NiFJjesSinglePionECALdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesSinglePionECALdn() {
  if (not iFJ0jesSinglePionECALdn_isLoaded) {
    if (iFJ0jesSinglePionECALdn_branch != 0) {
      iFJ0jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesSinglePionECALdn_isLoaded = true;
  }
  return *iFJ0jesSinglePionECALdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesSinglePionECALdn() {
  if (not iFJ1jesSinglePionECALdn_isLoaded) {
    if (iFJ1jesSinglePionECALdn_branch != 0) {
      iFJ1jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesSinglePionECALdn_isLoaded = true;
  }
  return *iFJ1jesSinglePionECALdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesSinglePionECALdn() {
  if (not iFJ2jesSinglePionECALdn_isLoaded) {
    if (iFJ2jesSinglePionECALdn_branch != 0) {
      iFJ2jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesSinglePionECALdn_isLoaded = true;
  }
  return *iFJ2jesSinglePionECALdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesSinglePionECALdn() {
  if (not iFJ3jesSinglePionECALdn_isLoaded) {
    if (iFJ3jesSinglePionECALdn_branch != 0) {
      iFJ3jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesSinglePionECALdn_isLoaded = true;
  }
  return *iFJ3jesSinglePionECALdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesSinglePionECALdn() {
  if (not iFJ4jesSinglePionECALdn_isLoaded) {
    if (iFJ4jesSinglePionECALdn_branch != 0) {
      iFJ4jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesSinglePionECALdn_isLoaded = true;
  }
  return *iFJ4jesSinglePionECALdn_;
}

const float &VVV0Tree::iVMD0jesSinglePionECALdn() {
  if (not iVMD0jesSinglePionECALdn_isLoaded) {
    if (iVMD0jesSinglePionECALdn_branch != 0) {
      iVMD0jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesSinglePionECALdn_isLoaded = true;
  }
  return iVMD0jesSinglePionECALdn_;
}

const float &VVV0Tree::iVMD1jesSinglePionECALdn() {
  if (not iVMD1jesSinglePionECALdn_isLoaded) {
    if (iVMD1jesSinglePionECALdn_branch != 0) {
      iVMD1jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesSinglePionECALdn_isLoaded = true;
  }
  return iVMD1jesSinglePionECALdn_;
}

const float &VVV0Tree::iVMD2jesSinglePionECALdn() {
  if (not iVMD2jesSinglePionECALdn_isLoaded) {
    if (iVMD2jesSinglePionECALdn_branch != 0) {
      iVMD2jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesSinglePionECALdn_isLoaded = true;
  }
  return iVMD2jesSinglePionECALdn_;
}

const float &VVV0Tree::iVMD3jesSinglePionECALdn() {
  if (not iVMD3jesSinglePionECALdn_isLoaded) {
    if (iVMD3jesSinglePionECALdn_branch != 0) {
      iVMD3jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesSinglePionECALdn_isLoaded = true;
  }
  return iVMD3jesSinglePionECALdn_;
}

const float &VVV0Tree::iVMD4jesSinglePionECALdn() {
  if (not iVMD4jesSinglePionECALdn_isLoaded) {
    if (iVMD4jesSinglePionECALdn_branch != 0) {
      iVMD4jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesSinglePionECALdn_isLoaded = true;
  }
  return iVMD4jesSinglePionECALdn_;
}

const float &VVV0Tree::iWMD0jesSinglePionECALdn() {
  if (not iWMD0jesSinglePionECALdn_isLoaded) {
    if (iWMD0jesSinglePionECALdn_branch != 0) {
      iWMD0jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesSinglePionECALdn_isLoaded = true;
  }
  return iWMD0jesSinglePionECALdn_;
}

const float &VVV0Tree::iWMD1jesSinglePionECALdn() {
  if (not iWMD1jesSinglePionECALdn_isLoaded) {
    if (iWMD1jesSinglePionECALdn_branch != 0) {
      iWMD1jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesSinglePionECALdn_isLoaded = true;
  }
  return iWMD1jesSinglePionECALdn_;
}

const float &VVV0Tree::iWMD2jesSinglePionECALdn() {
  if (not iWMD2jesSinglePionECALdn_isLoaded) {
    if (iWMD2jesSinglePionECALdn_branch != 0) {
      iWMD2jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesSinglePionECALdn_isLoaded = true;
  }
  return iWMD2jesSinglePionECALdn_;
}

const float &VVV0Tree::iWMD3jesSinglePionECALdn() {
  if (not iWMD3jesSinglePionECALdn_isLoaded) {
    if (iWMD3jesSinglePionECALdn_branch != 0) {
      iWMD3jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesSinglePionECALdn_isLoaded = true;
  }
  return iWMD3jesSinglePionECALdn_;
}

const float &VVV0Tree::iWMD4jesSinglePionECALdn() {
  if (not iWMD4jesSinglePionECALdn_isLoaded) {
    if (iWMD4jesSinglePionECALdn_branch != 0) {
      iWMD4jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesSinglePionECALdn_isLoaded = true;
  }
  return iWMD4jesSinglePionECALdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesSinglePionECALdn() {
  if (not METjesSinglePionECALdn_isLoaded) {
    if (METjesSinglePionECALdn_branch != 0) {
      METjesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch METjesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    METjesSinglePionECALdn_isLoaded = true;
  }
  return *METjesSinglePionECALdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesSinglePionECALdn() {
  if (not NujesSinglePionECALdn_isLoaded) {
    if (NujesSinglePionECALdn_branch != 0) {
      NujesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch NujesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    NujesSinglePionECALdn_isLoaded = true;
  }
  return *NujesSinglePionECALdn_;
}

const int &VVV0Tree::NJjesSinglePionECALdn() {
  if (not NJjesSinglePionECALdn_isLoaded) {
    if (NJjesSinglePionECALdn_branch != 0) {
      NJjesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch NJjesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    NJjesSinglePionECALdn_isLoaded = true;
  }
  return NJjesSinglePionECALdn_;
}

const int &VVV0Tree::NbLoosejesSinglePionECALdn() {
  if (not NbLoosejesSinglePionECALdn_isLoaded) {
    if (NbLoosejesSinglePionECALdn_branch != 0) {
      NbLoosejesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesSinglePionECALdn_isLoaded = true;
  }
  return NbLoosejesSinglePionECALdn_;
}

const int &VVV0Tree::NbMediumjesSinglePionECALdn() {
  if (not NbMediumjesSinglePionECALdn_isLoaded) {
    if (NbMediumjesSinglePionECALdn_branch != 0) {
      NbMediumjesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesSinglePionECALdn_isLoaded = true;
  }
  return NbMediumjesSinglePionECALdn_;
}

const int &VVV0Tree::NbTightjesSinglePionECALdn() {
  if (not NbTightjesSinglePionECALdn_isLoaded) {
    if (NbTightjesSinglePionECALdn_branch != 0) {
      NbTightjesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    NbTightjesSinglePionECALdn_isLoaded = true;
  }
  return NbTightjesSinglePionECALdn_;
}

const int &VVV0Tree::NoORNbLoosejesSinglePionECALdn() {
  if (not NoORNbLoosejesSinglePionECALdn_isLoaded) {
    if (NoORNbLoosejesSinglePionECALdn_branch != 0) {
      NoORNbLoosejesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesSinglePionECALdn_isLoaded = true;
  }
  return NoORNbLoosejesSinglePionECALdn_;
}

const int &VVV0Tree::NoORNbMediumjesSinglePionECALdn() {
  if (not NoORNbMediumjesSinglePionECALdn_isLoaded) {
    if (NoORNbMediumjesSinglePionECALdn_branch != 0) {
      NoORNbMediumjesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesSinglePionECALdn_isLoaded = true;
  }
  return NoORNbMediumjesSinglePionECALdn_;
}

const int &VVV0Tree::NoORNbTightjesSinglePionECALdn() {
  if (not NoORNbTightjesSinglePionECALdn_isLoaded) {
    if (NoORNbTightjesSinglePionECALdn_branch != 0) {
      NoORNbTightjesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesSinglePionECALdn_isLoaded = true;
  }
  return NoORNbTightjesSinglePionECALdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesSinglePionECALdn() {
  if (not J0jesSinglePionECALdn_isLoaded) {
    if (J0jesSinglePionECALdn_branch != 0) {
      J0jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch J0jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    J0jesSinglePionECALdn_isLoaded = true;
  }
  return *J0jesSinglePionECALdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesSinglePionECALdn() {
  if (not J1jesSinglePionECALdn_isLoaded) {
    if (J1jesSinglePionECALdn_branch != 0) {
      J1jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch J1jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    J1jesSinglePionECALdn_isLoaded = true;
  }
  return *J1jesSinglePionECALdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesSinglePionECALdn() {
  if (not J2jesSinglePionECALdn_isLoaded) {
    if (J2jesSinglePionECALdn_branch != 0) {
      J2jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch J2jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    J2jesSinglePionECALdn_isLoaded = true;
  }
  return *J2jesSinglePionECALdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesSinglePionECALdn() {
  if (not J3jesSinglePionECALdn_isLoaded) {
    if (J3jesSinglePionECALdn_branch != 0) {
      J3jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch J3jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    J3jesSinglePionECALdn_isLoaded = true;
  }
  return *J3jesSinglePionECALdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesSinglePionECALdn() {
  if (not J4jesSinglePionECALdn_isLoaded) {
    if (J4jesSinglePionECALdn_branch != 0) {
      J4jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch J4jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    J4jesSinglePionECALdn_isLoaded = true;
  }
  return *J4jesSinglePionECALdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesSinglePionECALdn() {
  if (not J5jesSinglePionECALdn_isLoaded) {
    if (J5jesSinglePionECALdn_branch != 0) {
      J5jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch J5jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    J5jesSinglePionECALdn_isLoaded = true;
  }
  return *J5jesSinglePionECALdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesSinglePionECALdn() {
  if (not J6jesSinglePionECALdn_isLoaded) {
    if (J6jesSinglePionECALdn_branch != 0) {
      J6jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch J6jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    J6jesSinglePionECALdn_isLoaded = true;
  }
  return *J6jesSinglePionECALdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesSinglePionECALdn() {
  if (not J7jesSinglePionECALdn_isLoaded) {
    if (J7jesSinglePionECALdn_branch != 0) {
      J7jesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch J7jesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    J7jesSinglePionECALdn_isLoaded = true;
  }
  return *J7jesSinglePionECALdn_;
}

const vector<int> &VVV0Tree::NQJGenjesSinglePionECALdn() {
  if (not NQJGenjesSinglePionECALdn_isLoaded) {
    if (NQJGenjesSinglePionECALdn_branch != 0) {
      NQJGenjesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesSinglePionECALdn_isLoaded = true;
  }
  return *NQJGenjesSinglePionECALdn_;
}

const vector<int> &VVV0Tree::NBJGenjesSinglePionECALdn() {
  if (not NBJGenjesSinglePionECALdn_isLoaded) {
    if (NBJGenjesSinglePionECALdn_branch != 0) {
      NBJGenjesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesSinglePionECALdn_isLoaded = true;
  }
  return *NBJGenjesSinglePionECALdn_;
}

const vector<int> &VVV0Tree::NLJGenjesSinglePionECALdn() {
  if (not NLJGenjesSinglePionECALdn_isLoaded) {
    if (NLJGenjesSinglePionECALdn_branch != 0) {
      NLJGenjesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesSinglePionECALdn_isLoaded = true;
  }
  return *NLJGenjesSinglePionECALdn_;
}

const float &VVV0Tree::MVVXjesSinglePionECALdn() {
  if (not MVVXjesSinglePionECALdn_isLoaded) {
    if (MVVXjesSinglePionECALdn_branch != 0) {
      MVVXjesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    MVVXjesSinglePionECALdn_isLoaded = true;
  }
  return MVVXjesSinglePionECALdn_;
}

const float &VVV0Tree::PtVVXjesSinglePionECALdn() {
  if (not PtVVXjesSinglePionECALdn_isLoaded) {
    if (PtVVXjesSinglePionECALdn_branch != 0) {
      PtVVXjesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesSinglePionECALdn_isLoaded = true;
  }
  return PtVVXjesSinglePionECALdn_;
}

const float &VVV0Tree::HTjesSinglePionECALdn() {
  if (not HTjesSinglePionECALdn_isLoaded) {
    if (HTjesSinglePionECALdn_branch != 0) {
      HTjesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch HTjesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    HTjesSinglePionECALdn_isLoaded = true;
  }
  return HTjesSinglePionECALdn_;
}

const float &VVV0Tree::HTJjesSinglePionECALdn() {
  if (not HTJjesSinglePionECALdn_isLoaded) {
    if (HTJjesSinglePionECALdn_branch != 0) {
      HTJjesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch HTJjesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    HTJjesSinglePionECALdn_isLoaded = true;
  }
  return HTJjesSinglePionECALdn_;
}

const float &VVV0Tree::HTFJjesSinglePionECALdn() {
  if (not HTFJjesSinglePionECALdn_isLoaded) {
    if (HTFJjesSinglePionECALdn_branch != 0) {
      HTFJjesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    HTFJjesSinglePionECALdn_isLoaded = true;
  }
  return HTFJjesSinglePionECALdn_;
}

const float &VVV0Tree::SumPtFJjesSinglePionECALdn() {
  if (not SumPtFJjesSinglePionECALdn_isLoaded) {
    if (SumPtFJjesSinglePionECALdn_branch != 0) {
      SumPtFJjesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesSinglePionECALdn_isLoaded = true;
  }
  return SumPtFJjesSinglePionECALdn_;
}

const float &VVV0Tree::SumPtJjesSinglePionECALdn() {
  if (not SumPtJjesSinglePionECALdn_isLoaded) {
    if (SumPtJjesSinglePionECALdn_branch != 0) {
      SumPtJjesSinglePionECALdn_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesSinglePionECALdn_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesSinglePionECALdn_isLoaded = true;
  }
  return SumPtJjesSinglePionECALdn_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesSinglePionHCALup() {
  if (not JsjesSinglePionHCALup_isLoaded) {
    if (JsjesSinglePionHCALup_branch != 0) {
      JsjesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch JsjesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    JsjesSinglePionHCALup_isLoaded = true;
  }
  return *JsjesSinglePionHCALup_;
}

const int &VVV0Tree::NFJjesSinglePionHCALup() {
  if (not NFJjesSinglePionHCALup_isLoaded) {
    if (NFJjesSinglePionHCALup_branch != 0) {
      NFJjesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch NFJjesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    NFJjesSinglePionHCALup_isLoaded = true;
  }
  return NFJjesSinglePionHCALup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesSinglePionHCALup() {
  if (not FJ0jesSinglePionHCALup_isLoaded) {
    if (FJ0jesSinglePionHCALup_branch != 0) {
      FJ0jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    FJ0jesSinglePionHCALup_isLoaded = true;
  }
  return *FJ0jesSinglePionHCALup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesSinglePionHCALup() {
  if (not FJ1jesSinglePionHCALup_isLoaded) {
    if (FJ1jesSinglePionHCALup_branch != 0) {
      FJ1jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    FJ1jesSinglePionHCALup_isLoaded = true;
  }
  return *FJ1jesSinglePionHCALup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesSinglePionHCALup() {
  if (not FJ2jesSinglePionHCALup_isLoaded) {
    if (FJ2jesSinglePionHCALup_branch != 0) {
      FJ2jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    FJ2jesSinglePionHCALup_isLoaded = true;
  }
  return *FJ2jesSinglePionHCALup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesSinglePionHCALup() {
  if (not FJ3jesSinglePionHCALup_isLoaded) {
    if (FJ3jesSinglePionHCALup_branch != 0) {
      FJ3jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    FJ3jesSinglePionHCALup_isLoaded = true;
  }
  return *FJ3jesSinglePionHCALup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesSinglePionHCALup() {
  if (not FJ4jesSinglePionHCALup_isLoaded) {
    if (FJ4jesSinglePionHCALup_branch != 0) {
      FJ4jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    FJ4jesSinglePionHCALup_isLoaded = true;
  }
  return *FJ4jesSinglePionHCALup_;
}

const float &VVV0Tree::VMD0jesSinglePionHCALup() {
  if (not VMD0jesSinglePionHCALup_isLoaded) {
    if (VMD0jesSinglePionHCALup_branch != 0) {
      VMD0jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    VMD0jesSinglePionHCALup_isLoaded = true;
  }
  return VMD0jesSinglePionHCALup_;
}

const float &VVV0Tree::VMD1jesSinglePionHCALup() {
  if (not VMD1jesSinglePionHCALup_isLoaded) {
    if (VMD1jesSinglePionHCALup_branch != 0) {
      VMD1jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    VMD1jesSinglePionHCALup_isLoaded = true;
  }
  return VMD1jesSinglePionHCALup_;
}

const float &VVV0Tree::VMD2jesSinglePionHCALup() {
  if (not VMD2jesSinglePionHCALup_isLoaded) {
    if (VMD2jesSinglePionHCALup_branch != 0) {
      VMD2jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    VMD2jesSinglePionHCALup_isLoaded = true;
  }
  return VMD2jesSinglePionHCALup_;
}

const float &VVV0Tree::VMD3jesSinglePionHCALup() {
  if (not VMD3jesSinglePionHCALup_isLoaded) {
    if (VMD3jesSinglePionHCALup_branch != 0) {
      VMD3jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    VMD3jesSinglePionHCALup_isLoaded = true;
  }
  return VMD3jesSinglePionHCALup_;
}

const float &VVV0Tree::VMD4jesSinglePionHCALup() {
  if (not VMD4jesSinglePionHCALup_isLoaded) {
    if (VMD4jesSinglePionHCALup_branch != 0) {
      VMD4jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    VMD4jesSinglePionHCALup_isLoaded = true;
  }
  return VMD4jesSinglePionHCALup_;
}

const float &VVV0Tree::WMD0jesSinglePionHCALup() {
  if (not WMD0jesSinglePionHCALup_isLoaded) {
    if (WMD0jesSinglePionHCALup_branch != 0) {
      WMD0jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    WMD0jesSinglePionHCALup_isLoaded = true;
  }
  return WMD0jesSinglePionHCALup_;
}

const float &VVV0Tree::WMD1jesSinglePionHCALup() {
  if (not WMD1jesSinglePionHCALup_isLoaded) {
    if (WMD1jesSinglePionHCALup_branch != 0) {
      WMD1jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    WMD1jesSinglePionHCALup_isLoaded = true;
  }
  return WMD1jesSinglePionHCALup_;
}

const float &VVV0Tree::WMD2jesSinglePionHCALup() {
  if (not WMD2jesSinglePionHCALup_isLoaded) {
    if (WMD2jesSinglePionHCALup_branch != 0) {
      WMD2jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    WMD2jesSinglePionHCALup_isLoaded = true;
  }
  return WMD2jesSinglePionHCALup_;
}

const float &VVV0Tree::WMD3jesSinglePionHCALup() {
  if (not WMD3jesSinglePionHCALup_isLoaded) {
    if (WMD3jesSinglePionHCALup_branch != 0) {
      WMD3jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    WMD3jesSinglePionHCALup_isLoaded = true;
  }
  return WMD3jesSinglePionHCALup_;
}

const float &VVV0Tree::WMD4jesSinglePionHCALup() {
  if (not WMD4jesSinglePionHCALup_isLoaded) {
    if (WMD4jesSinglePionHCALup_branch != 0) {
      WMD4jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    WMD4jesSinglePionHCALup_isLoaded = true;
  }
  return WMD4jesSinglePionHCALup_;
}

const int &VVV0Tree::NQGen0jesSinglePionHCALup() {
  if (not NQGen0jesSinglePionHCALup_isLoaded) {
    if (NQGen0jesSinglePionHCALup_branch != 0) {
      NQGen0jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesSinglePionHCALup_isLoaded = true;
  }
  return NQGen0jesSinglePionHCALup_;
}

const int &VVV0Tree::NQGen1jesSinglePionHCALup() {
  if (not NQGen1jesSinglePionHCALup_isLoaded) {
    if (NQGen1jesSinglePionHCALup_branch != 0) {
      NQGen1jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesSinglePionHCALup_isLoaded = true;
  }
  return NQGen1jesSinglePionHCALup_;
}

const int &VVV0Tree::NQGen2jesSinglePionHCALup() {
  if (not NQGen2jesSinglePionHCALup_isLoaded) {
    if (NQGen2jesSinglePionHCALup_branch != 0) {
      NQGen2jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesSinglePionHCALup_isLoaded = true;
  }
  return NQGen2jesSinglePionHCALup_;
}

const int &VVV0Tree::NQGen3jesSinglePionHCALup() {
  if (not NQGen3jesSinglePionHCALup_isLoaded) {
    if (NQGen3jesSinglePionHCALup_branch != 0) {
      NQGen3jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesSinglePionHCALup_isLoaded = true;
  }
  return NQGen3jesSinglePionHCALup_;
}

const int &VVV0Tree::NQGen4jesSinglePionHCALup() {
  if (not NQGen4jesSinglePionHCALup_isLoaded) {
    if (NQGen4jesSinglePionHCALup_branch != 0) {
      NQGen4jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesSinglePionHCALup_isLoaded = true;
  }
  return NQGen4jesSinglePionHCALup_;
}

const int &VVV0Tree::NBGen0jesSinglePionHCALup() {
  if (not NBGen0jesSinglePionHCALup_isLoaded) {
    if (NBGen0jesSinglePionHCALup_branch != 0) {
      NBGen0jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesSinglePionHCALup_isLoaded = true;
  }
  return NBGen0jesSinglePionHCALup_;
}

const int &VVV0Tree::NBGen1jesSinglePionHCALup() {
  if (not NBGen1jesSinglePionHCALup_isLoaded) {
    if (NBGen1jesSinglePionHCALup_branch != 0) {
      NBGen1jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesSinglePionHCALup_isLoaded = true;
  }
  return NBGen1jesSinglePionHCALup_;
}

const int &VVV0Tree::NBGen2jesSinglePionHCALup() {
  if (not NBGen2jesSinglePionHCALup_isLoaded) {
    if (NBGen2jesSinglePionHCALup_branch != 0) {
      NBGen2jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesSinglePionHCALup_isLoaded = true;
  }
  return NBGen2jesSinglePionHCALup_;
}

const int &VVV0Tree::NBGen3jesSinglePionHCALup() {
  if (not NBGen3jesSinglePionHCALup_isLoaded) {
    if (NBGen3jesSinglePionHCALup_branch != 0) {
      NBGen3jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesSinglePionHCALup_isLoaded = true;
  }
  return NBGen3jesSinglePionHCALup_;
}

const int &VVV0Tree::NBGen4jesSinglePionHCALup() {
  if (not NBGen4jesSinglePionHCALup_isLoaded) {
    if (NBGen4jesSinglePionHCALup_branch != 0) {
      NBGen4jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesSinglePionHCALup_isLoaded = true;
  }
  return NBGen4jesSinglePionHCALup_;
}

const int &VVV0Tree::NLGen0jesSinglePionHCALup() {
  if (not NLGen0jesSinglePionHCALup_isLoaded) {
    if (NLGen0jesSinglePionHCALup_branch != 0) {
      NLGen0jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesSinglePionHCALup_isLoaded = true;
  }
  return NLGen0jesSinglePionHCALup_;
}

const int &VVV0Tree::NLGen1jesSinglePionHCALup() {
  if (not NLGen1jesSinglePionHCALup_isLoaded) {
    if (NLGen1jesSinglePionHCALup_branch != 0) {
      NLGen1jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesSinglePionHCALup_isLoaded = true;
  }
  return NLGen1jesSinglePionHCALup_;
}

const int &VVV0Tree::NLGen2jesSinglePionHCALup() {
  if (not NLGen2jesSinglePionHCALup_isLoaded) {
    if (NLGen2jesSinglePionHCALup_branch != 0) {
      NLGen2jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesSinglePionHCALup_isLoaded = true;
  }
  return NLGen2jesSinglePionHCALup_;
}

const int &VVV0Tree::NLGen3jesSinglePionHCALup() {
  if (not NLGen3jesSinglePionHCALup_isLoaded) {
    if (NLGen3jesSinglePionHCALup_branch != 0) {
      NLGen3jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesSinglePionHCALup_isLoaded = true;
  }
  return NLGen3jesSinglePionHCALup_;
}

const int &VVV0Tree::NLGen4jesSinglePionHCALup() {
  if (not NLGen4jesSinglePionHCALup_isLoaded) {
    if (NLGen4jesSinglePionHCALup_branch != 0) {
      NLGen4jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesSinglePionHCALup_isLoaded = true;
  }
  return NLGen4jesSinglePionHCALup_;
}

const int &VVV0Tree::NVQGen0jesSinglePionHCALup() {
  if (not NVQGen0jesSinglePionHCALup_isLoaded) {
    if (NVQGen0jesSinglePionHCALup_branch != 0) {
      NVQGen0jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesSinglePionHCALup_isLoaded = true;
  }
  return NVQGen0jesSinglePionHCALup_;
}

const int &VVV0Tree::NVQGen1jesSinglePionHCALup() {
  if (not NVQGen1jesSinglePionHCALup_isLoaded) {
    if (NVQGen1jesSinglePionHCALup_branch != 0) {
      NVQGen1jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesSinglePionHCALup_isLoaded = true;
  }
  return NVQGen1jesSinglePionHCALup_;
}

const int &VVV0Tree::NVQGen2jesSinglePionHCALup() {
  if (not NVQGen2jesSinglePionHCALup_isLoaded) {
    if (NVQGen2jesSinglePionHCALup_branch != 0) {
      NVQGen2jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesSinglePionHCALup_isLoaded = true;
  }
  return NVQGen2jesSinglePionHCALup_;
}

const int &VVV0Tree::NVQGen3jesSinglePionHCALup() {
  if (not NVQGen3jesSinglePionHCALup_isLoaded) {
    if (NVQGen3jesSinglePionHCALup_branch != 0) {
      NVQGen3jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesSinglePionHCALup_isLoaded = true;
  }
  return NVQGen3jesSinglePionHCALup_;
}

const int &VVV0Tree::NVQGen4jesSinglePionHCALup() {
  if (not NVQGen4jesSinglePionHCALup_isLoaded) {
    if (NVQGen4jesSinglePionHCALup_branch != 0) {
      NVQGen4jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesSinglePionHCALup_isLoaded = true;
  }
  return NVQGen4jesSinglePionHCALup_;
}

const int &VVV0Tree::NiFJjesSinglePionHCALup() {
  if (not NiFJjesSinglePionHCALup_isLoaded) {
    if (NiFJjesSinglePionHCALup_branch != 0) {
      NiFJjesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    NiFJjesSinglePionHCALup_isLoaded = true;
  }
  return NiFJjesSinglePionHCALup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesSinglePionHCALup() {
  if (not iFJ0jesSinglePionHCALup_isLoaded) {
    if (iFJ0jesSinglePionHCALup_branch != 0) {
      iFJ0jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesSinglePionHCALup_isLoaded = true;
  }
  return *iFJ0jesSinglePionHCALup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesSinglePionHCALup() {
  if (not iFJ1jesSinglePionHCALup_isLoaded) {
    if (iFJ1jesSinglePionHCALup_branch != 0) {
      iFJ1jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesSinglePionHCALup_isLoaded = true;
  }
  return *iFJ1jesSinglePionHCALup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesSinglePionHCALup() {
  if (not iFJ2jesSinglePionHCALup_isLoaded) {
    if (iFJ2jesSinglePionHCALup_branch != 0) {
      iFJ2jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesSinglePionHCALup_isLoaded = true;
  }
  return *iFJ2jesSinglePionHCALup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesSinglePionHCALup() {
  if (not iFJ3jesSinglePionHCALup_isLoaded) {
    if (iFJ3jesSinglePionHCALup_branch != 0) {
      iFJ3jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesSinglePionHCALup_isLoaded = true;
  }
  return *iFJ3jesSinglePionHCALup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesSinglePionHCALup() {
  if (not iFJ4jesSinglePionHCALup_isLoaded) {
    if (iFJ4jesSinglePionHCALup_branch != 0) {
      iFJ4jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesSinglePionHCALup_isLoaded = true;
  }
  return *iFJ4jesSinglePionHCALup_;
}

const float &VVV0Tree::iVMD0jesSinglePionHCALup() {
  if (not iVMD0jesSinglePionHCALup_isLoaded) {
    if (iVMD0jesSinglePionHCALup_branch != 0) {
      iVMD0jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesSinglePionHCALup_isLoaded = true;
  }
  return iVMD0jesSinglePionHCALup_;
}

const float &VVV0Tree::iVMD1jesSinglePionHCALup() {
  if (not iVMD1jesSinglePionHCALup_isLoaded) {
    if (iVMD1jesSinglePionHCALup_branch != 0) {
      iVMD1jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesSinglePionHCALup_isLoaded = true;
  }
  return iVMD1jesSinglePionHCALup_;
}

const float &VVV0Tree::iVMD2jesSinglePionHCALup() {
  if (not iVMD2jesSinglePionHCALup_isLoaded) {
    if (iVMD2jesSinglePionHCALup_branch != 0) {
      iVMD2jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesSinglePionHCALup_isLoaded = true;
  }
  return iVMD2jesSinglePionHCALup_;
}

const float &VVV0Tree::iVMD3jesSinglePionHCALup() {
  if (not iVMD3jesSinglePionHCALup_isLoaded) {
    if (iVMD3jesSinglePionHCALup_branch != 0) {
      iVMD3jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesSinglePionHCALup_isLoaded = true;
  }
  return iVMD3jesSinglePionHCALup_;
}

const float &VVV0Tree::iVMD4jesSinglePionHCALup() {
  if (not iVMD4jesSinglePionHCALup_isLoaded) {
    if (iVMD4jesSinglePionHCALup_branch != 0) {
      iVMD4jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesSinglePionHCALup_isLoaded = true;
  }
  return iVMD4jesSinglePionHCALup_;
}

const float &VVV0Tree::iWMD0jesSinglePionHCALup() {
  if (not iWMD0jesSinglePionHCALup_isLoaded) {
    if (iWMD0jesSinglePionHCALup_branch != 0) {
      iWMD0jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesSinglePionHCALup_isLoaded = true;
  }
  return iWMD0jesSinglePionHCALup_;
}

const float &VVV0Tree::iWMD1jesSinglePionHCALup() {
  if (not iWMD1jesSinglePionHCALup_isLoaded) {
    if (iWMD1jesSinglePionHCALup_branch != 0) {
      iWMD1jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesSinglePionHCALup_isLoaded = true;
  }
  return iWMD1jesSinglePionHCALup_;
}

const float &VVV0Tree::iWMD2jesSinglePionHCALup() {
  if (not iWMD2jesSinglePionHCALup_isLoaded) {
    if (iWMD2jesSinglePionHCALup_branch != 0) {
      iWMD2jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesSinglePionHCALup_isLoaded = true;
  }
  return iWMD2jesSinglePionHCALup_;
}

const float &VVV0Tree::iWMD3jesSinglePionHCALup() {
  if (not iWMD3jesSinglePionHCALup_isLoaded) {
    if (iWMD3jesSinglePionHCALup_branch != 0) {
      iWMD3jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesSinglePionHCALup_isLoaded = true;
  }
  return iWMD3jesSinglePionHCALup_;
}

const float &VVV0Tree::iWMD4jesSinglePionHCALup() {
  if (not iWMD4jesSinglePionHCALup_isLoaded) {
    if (iWMD4jesSinglePionHCALup_branch != 0) {
      iWMD4jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesSinglePionHCALup_isLoaded = true;
  }
  return iWMD4jesSinglePionHCALup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesSinglePionHCALup() {
  if (not METjesSinglePionHCALup_isLoaded) {
    if (METjesSinglePionHCALup_branch != 0) {
      METjesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch METjesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    METjesSinglePionHCALup_isLoaded = true;
  }
  return *METjesSinglePionHCALup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesSinglePionHCALup() {
  if (not NujesSinglePionHCALup_isLoaded) {
    if (NujesSinglePionHCALup_branch != 0) {
      NujesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch NujesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    NujesSinglePionHCALup_isLoaded = true;
  }
  return *NujesSinglePionHCALup_;
}

const int &VVV0Tree::NJjesSinglePionHCALup() {
  if (not NJjesSinglePionHCALup_isLoaded) {
    if (NJjesSinglePionHCALup_branch != 0) {
      NJjesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch NJjesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    NJjesSinglePionHCALup_isLoaded = true;
  }
  return NJjesSinglePionHCALup_;
}

const int &VVV0Tree::NbLoosejesSinglePionHCALup() {
  if (not NbLoosejesSinglePionHCALup_isLoaded) {
    if (NbLoosejesSinglePionHCALup_branch != 0) {
      NbLoosejesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesSinglePionHCALup_isLoaded = true;
  }
  return NbLoosejesSinglePionHCALup_;
}

const int &VVV0Tree::NbMediumjesSinglePionHCALup() {
  if (not NbMediumjesSinglePionHCALup_isLoaded) {
    if (NbMediumjesSinglePionHCALup_branch != 0) {
      NbMediumjesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesSinglePionHCALup_isLoaded = true;
  }
  return NbMediumjesSinglePionHCALup_;
}

const int &VVV0Tree::NbTightjesSinglePionHCALup() {
  if (not NbTightjesSinglePionHCALup_isLoaded) {
    if (NbTightjesSinglePionHCALup_branch != 0) {
      NbTightjesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    NbTightjesSinglePionHCALup_isLoaded = true;
  }
  return NbTightjesSinglePionHCALup_;
}

const int &VVV0Tree::NoORNbLoosejesSinglePionHCALup() {
  if (not NoORNbLoosejesSinglePionHCALup_isLoaded) {
    if (NoORNbLoosejesSinglePionHCALup_branch != 0) {
      NoORNbLoosejesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesSinglePionHCALup_isLoaded = true;
  }
  return NoORNbLoosejesSinglePionHCALup_;
}

const int &VVV0Tree::NoORNbMediumjesSinglePionHCALup() {
  if (not NoORNbMediumjesSinglePionHCALup_isLoaded) {
    if (NoORNbMediumjesSinglePionHCALup_branch != 0) {
      NoORNbMediumjesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesSinglePionHCALup_isLoaded = true;
  }
  return NoORNbMediumjesSinglePionHCALup_;
}

const int &VVV0Tree::NoORNbTightjesSinglePionHCALup() {
  if (not NoORNbTightjesSinglePionHCALup_isLoaded) {
    if (NoORNbTightjesSinglePionHCALup_branch != 0) {
      NoORNbTightjesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesSinglePionHCALup_isLoaded = true;
  }
  return NoORNbTightjesSinglePionHCALup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesSinglePionHCALup() {
  if (not J0jesSinglePionHCALup_isLoaded) {
    if (J0jesSinglePionHCALup_branch != 0) {
      J0jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch J0jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    J0jesSinglePionHCALup_isLoaded = true;
  }
  return *J0jesSinglePionHCALup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesSinglePionHCALup() {
  if (not J1jesSinglePionHCALup_isLoaded) {
    if (J1jesSinglePionHCALup_branch != 0) {
      J1jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch J1jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    J1jesSinglePionHCALup_isLoaded = true;
  }
  return *J1jesSinglePionHCALup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesSinglePionHCALup() {
  if (not J2jesSinglePionHCALup_isLoaded) {
    if (J2jesSinglePionHCALup_branch != 0) {
      J2jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch J2jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    J2jesSinglePionHCALup_isLoaded = true;
  }
  return *J2jesSinglePionHCALup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesSinglePionHCALup() {
  if (not J3jesSinglePionHCALup_isLoaded) {
    if (J3jesSinglePionHCALup_branch != 0) {
      J3jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch J3jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    J3jesSinglePionHCALup_isLoaded = true;
  }
  return *J3jesSinglePionHCALup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesSinglePionHCALup() {
  if (not J4jesSinglePionHCALup_isLoaded) {
    if (J4jesSinglePionHCALup_branch != 0) {
      J4jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch J4jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    J4jesSinglePionHCALup_isLoaded = true;
  }
  return *J4jesSinglePionHCALup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesSinglePionHCALup() {
  if (not J5jesSinglePionHCALup_isLoaded) {
    if (J5jesSinglePionHCALup_branch != 0) {
      J5jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch J5jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    J5jesSinglePionHCALup_isLoaded = true;
  }
  return *J5jesSinglePionHCALup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesSinglePionHCALup() {
  if (not J6jesSinglePionHCALup_isLoaded) {
    if (J6jesSinglePionHCALup_branch != 0) {
      J6jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch J6jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    J6jesSinglePionHCALup_isLoaded = true;
  }
  return *J6jesSinglePionHCALup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesSinglePionHCALup() {
  if (not J7jesSinglePionHCALup_isLoaded) {
    if (J7jesSinglePionHCALup_branch != 0) {
      J7jesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch J7jesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    J7jesSinglePionHCALup_isLoaded = true;
  }
  return *J7jesSinglePionHCALup_;
}

const vector<int> &VVV0Tree::NQJGenjesSinglePionHCALup() {
  if (not NQJGenjesSinglePionHCALup_isLoaded) {
    if (NQJGenjesSinglePionHCALup_branch != 0) {
      NQJGenjesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesSinglePionHCALup_isLoaded = true;
  }
  return *NQJGenjesSinglePionHCALup_;
}

const vector<int> &VVV0Tree::NBJGenjesSinglePionHCALup() {
  if (not NBJGenjesSinglePionHCALup_isLoaded) {
    if (NBJGenjesSinglePionHCALup_branch != 0) {
      NBJGenjesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesSinglePionHCALup_isLoaded = true;
  }
  return *NBJGenjesSinglePionHCALup_;
}

const vector<int> &VVV0Tree::NLJGenjesSinglePionHCALup() {
  if (not NLJGenjesSinglePionHCALup_isLoaded) {
    if (NLJGenjesSinglePionHCALup_branch != 0) {
      NLJGenjesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesSinglePionHCALup_isLoaded = true;
  }
  return *NLJGenjesSinglePionHCALup_;
}

const float &VVV0Tree::MVVXjesSinglePionHCALup() {
  if (not MVVXjesSinglePionHCALup_isLoaded) {
    if (MVVXjesSinglePionHCALup_branch != 0) {
      MVVXjesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    MVVXjesSinglePionHCALup_isLoaded = true;
  }
  return MVVXjesSinglePionHCALup_;
}

const float &VVV0Tree::PtVVXjesSinglePionHCALup() {
  if (not PtVVXjesSinglePionHCALup_isLoaded) {
    if (PtVVXjesSinglePionHCALup_branch != 0) {
      PtVVXjesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesSinglePionHCALup_isLoaded = true;
  }
  return PtVVXjesSinglePionHCALup_;
}

const float &VVV0Tree::HTjesSinglePionHCALup() {
  if (not HTjesSinglePionHCALup_isLoaded) {
    if (HTjesSinglePionHCALup_branch != 0) {
      HTjesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch HTjesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    HTjesSinglePionHCALup_isLoaded = true;
  }
  return HTjesSinglePionHCALup_;
}

const float &VVV0Tree::HTJjesSinglePionHCALup() {
  if (not HTJjesSinglePionHCALup_isLoaded) {
    if (HTJjesSinglePionHCALup_branch != 0) {
      HTJjesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch HTJjesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    HTJjesSinglePionHCALup_isLoaded = true;
  }
  return HTJjesSinglePionHCALup_;
}

const float &VVV0Tree::HTFJjesSinglePionHCALup() {
  if (not HTFJjesSinglePionHCALup_isLoaded) {
    if (HTFJjesSinglePionHCALup_branch != 0) {
      HTFJjesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    HTFJjesSinglePionHCALup_isLoaded = true;
  }
  return HTFJjesSinglePionHCALup_;
}

const float &VVV0Tree::SumPtFJjesSinglePionHCALup() {
  if (not SumPtFJjesSinglePionHCALup_isLoaded) {
    if (SumPtFJjesSinglePionHCALup_branch != 0) {
      SumPtFJjesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesSinglePionHCALup_isLoaded = true;
  }
  return SumPtFJjesSinglePionHCALup_;
}

const float &VVV0Tree::SumPtJjesSinglePionHCALup() {
  if (not SumPtJjesSinglePionHCALup_isLoaded) {
    if (SumPtJjesSinglePionHCALup_branch != 0) {
      SumPtJjesSinglePionHCALup_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesSinglePionHCALup_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesSinglePionHCALup_isLoaded = true;
  }
  return SumPtJjesSinglePionHCALup_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesSinglePionHCALdn() {
  if (not JsjesSinglePionHCALdn_isLoaded) {
    if (JsjesSinglePionHCALdn_branch != 0) {
      JsjesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch JsjesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    JsjesSinglePionHCALdn_isLoaded = true;
  }
  return *JsjesSinglePionHCALdn_;
}

const int &VVV0Tree::NFJjesSinglePionHCALdn() {
  if (not NFJjesSinglePionHCALdn_isLoaded) {
    if (NFJjesSinglePionHCALdn_branch != 0) {
      NFJjesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch NFJjesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    NFJjesSinglePionHCALdn_isLoaded = true;
  }
  return NFJjesSinglePionHCALdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesSinglePionHCALdn() {
  if (not FJ0jesSinglePionHCALdn_isLoaded) {
    if (FJ0jesSinglePionHCALdn_branch != 0) {
      FJ0jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    FJ0jesSinglePionHCALdn_isLoaded = true;
  }
  return *FJ0jesSinglePionHCALdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesSinglePionHCALdn() {
  if (not FJ1jesSinglePionHCALdn_isLoaded) {
    if (FJ1jesSinglePionHCALdn_branch != 0) {
      FJ1jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    FJ1jesSinglePionHCALdn_isLoaded = true;
  }
  return *FJ1jesSinglePionHCALdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesSinglePionHCALdn() {
  if (not FJ2jesSinglePionHCALdn_isLoaded) {
    if (FJ2jesSinglePionHCALdn_branch != 0) {
      FJ2jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    FJ2jesSinglePionHCALdn_isLoaded = true;
  }
  return *FJ2jesSinglePionHCALdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesSinglePionHCALdn() {
  if (not FJ3jesSinglePionHCALdn_isLoaded) {
    if (FJ3jesSinglePionHCALdn_branch != 0) {
      FJ3jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    FJ3jesSinglePionHCALdn_isLoaded = true;
  }
  return *FJ3jesSinglePionHCALdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesSinglePionHCALdn() {
  if (not FJ4jesSinglePionHCALdn_isLoaded) {
    if (FJ4jesSinglePionHCALdn_branch != 0) {
      FJ4jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    FJ4jesSinglePionHCALdn_isLoaded = true;
  }
  return *FJ4jesSinglePionHCALdn_;
}

const float &VVV0Tree::VMD0jesSinglePionHCALdn() {
  if (not VMD0jesSinglePionHCALdn_isLoaded) {
    if (VMD0jesSinglePionHCALdn_branch != 0) {
      VMD0jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    VMD0jesSinglePionHCALdn_isLoaded = true;
  }
  return VMD0jesSinglePionHCALdn_;
}

const float &VVV0Tree::VMD1jesSinglePionHCALdn() {
  if (not VMD1jesSinglePionHCALdn_isLoaded) {
    if (VMD1jesSinglePionHCALdn_branch != 0) {
      VMD1jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    VMD1jesSinglePionHCALdn_isLoaded = true;
  }
  return VMD1jesSinglePionHCALdn_;
}

const float &VVV0Tree::VMD2jesSinglePionHCALdn() {
  if (not VMD2jesSinglePionHCALdn_isLoaded) {
    if (VMD2jesSinglePionHCALdn_branch != 0) {
      VMD2jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    VMD2jesSinglePionHCALdn_isLoaded = true;
  }
  return VMD2jesSinglePionHCALdn_;
}

const float &VVV0Tree::VMD3jesSinglePionHCALdn() {
  if (not VMD3jesSinglePionHCALdn_isLoaded) {
    if (VMD3jesSinglePionHCALdn_branch != 0) {
      VMD3jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    VMD3jesSinglePionHCALdn_isLoaded = true;
  }
  return VMD3jesSinglePionHCALdn_;
}

const float &VVV0Tree::VMD4jesSinglePionHCALdn() {
  if (not VMD4jesSinglePionHCALdn_isLoaded) {
    if (VMD4jesSinglePionHCALdn_branch != 0) {
      VMD4jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    VMD4jesSinglePionHCALdn_isLoaded = true;
  }
  return VMD4jesSinglePionHCALdn_;
}

const float &VVV0Tree::WMD0jesSinglePionHCALdn() {
  if (not WMD0jesSinglePionHCALdn_isLoaded) {
    if (WMD0jesSinglePionHCALdn_branch != 0) {
      WMD0jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    WMD0jesSinglePionHCALdn_isLoaded = true;
  }
  return WMD0jesSinglePionHCALdn_;
}

const float &VVV0Tree::WMD1jesSinglePionHCALdn() {
  if (not WMD1jesSinglePionHCALdn_isLoaded) {
    if (WMD1jesSinglePionHCALdn_branch != 0) {
      WMD1jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    WMD1jesSinglePionHCALdn_isLoaded = true;
  }
  return WMD1jesSinglePionHCALdn_;
}

const float &VVV0Tree::WMD2jesSinglePionHCALdn() {
  if (not WMD2jesSinglePionHCALdn_isLoaded) {
    if (WMD2jesSinglePionHCALdn_branch != 0) {
      WMD2jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    WMD2jesSinglePionHCALdn_isLoaded = true;
  }
  return WMD2jesSinglePionHCALdn_;
}

const float &VVV0Tree::WMD3jesSinglePionHCALdn() {
  if (not WMD3jesSinglePionHCALdn_isLoaded) {
    if (WMD3jesSinglePionHCALdn_branch != 0) {
      WMD3jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    WMD3jesSinglePionHCALdn_isLoaded = true;
  }
  return WMD3jesSinglePionHCALdn_;
}

const float &VVV0Tree::WMD4jesSinglePionHCALdn() {
  if (not WMD4jesSinglePionHCALdn_isLoaded) {
    if (WMD4jesSinglePionHCALdn_branch != 0) {
      WMD4jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    WMD4jesSinglePionHCALdn_isLoaded = true;
  }
  return WMD4jesSinglePionHCALdn_;
}

const int &VVV0Tree::NQGen0jesSinglePionHCALdn() {
  if (not NQGen0jesSinglePionHCALdn_isLoaded) {
    if (NQGen0jesSinglePionHCALdn_branch != 0) {
      NQGen0jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesSinglePionHCALdn_isLoaded = true;
  }
  return NQGen0jesSinglePionHCALdn_;
}

const int &VVV0Tree::NQGen1jesSinglePionHCALdn() {
  if (not NQGen1jesSinglePionHCALdn_isLoaded) {
    if (NQGen1jesSinglePionHCALdn_branch != 0) {
      NQGen1jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesSinglePionHCALdn_isLoaded = true;
  }
  return NQGen1jesSinglePionHCALdn_;
}

const int &VVV0Tree::NQGen2jesSinglePionHCALdn() {
  if (not NQGen2jesSinglePionHCALdn_isLoaded) {
    if (NQGen2jesSinglePionHCALdn_branch != 0) {
      NQGen2jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesSinglePionHCALdn_isLoaded = true;
  }
  return NQGen2jesSinglePionHCALdn_;
}

const int &VVV0Tree::NQGen3jesSinglePionHCALdn() {
  if (not NQGen3jesSinglePionHCALdn_isLoaded) {
    if (NQGen3jesSinglePionHCALdn_branch != 0) {
      NQGen3jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesSinglePionHCALdn_isLoaded = true;
  }
  return NQGen3jesSinglePionHCALdn_;
}

const int &VVV0Tree::NQGen4jesSinglePionHCALdn() {
  if (not NQGen4jesSinglePionHCALdn_isLoaded) {
    if (NQGen4jesSinglePionHCALdn_branch != 0) {
      NQGen4jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesSinglePionHCALdn_isLoaded = true;
  }
  return NQGen4jesSinglePionHCALdn_;
}

const int &VVV0Tree::NBGen0jesSinglePionHCALdn() {
  if (not NBGen0jesSinglePionHCALdn_isLoaded) {
    if (NBGen0jesSinglePionHCALdn_branch != 0) {
      NBGen0jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesSinglePionHCALdn_isLoaded = true;
  }
  return NBGen0jesSinglePionHCALdn_;
}

const int &VVV0Tree::NBGen1jesSinglePionHCALdn() {
  if (not NBGen1jesSinglePionHCALdn_isLoaded) {
    if (NBGen1jesSinglePionHCALdn_branch != 0) {
      NBGen1jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesSinglePionHCALdn_isLoaded = true;
  }
  return NBGen1jesSinglePionHCALdn_;
}

const int &VVV0Tree::NBGen2jesSinglePionHCALdn() {
  if (not NBGen2jesSinglePionHCALdn_isLoaded) {
    if (NBGen2jesSinglePionHCALdn_branch != 0) {
      NBGen2jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesSinglePionHCALdn_isLoaded = true;
  }
  return NBGen2jesSinglePionHCALdn_;
}

const int &VVV0Tree::NBGen3jesSinglePionHCALdn() {
  if (not NBGen3jesSinglePionHCALdn_isLoaded) {
    if (NBGen3jesSinglePionHCALdn_branch != 0) {
      NBGen3jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesSinglePionHCALdn_isLoaded = true;
  }
  return NBGen3jesSinglePionHCALdn_;
}

const int &VVV0Tree::NBGen4jesSinglePionHCALdn() {
  if (not NBGen4jesSinglePionHCALdn_isLoaded) {
    if (NBGen4jesSinglePionHCALdn_branch != 0) {
      NBGen4jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesSinglePionHCALdn_isLoaded = true;
  }
  return NBGen4jesSinglePionHCALdn_;
}

const int &VVV0Tree::NLGen0jesSinglePionHCALdn() {
  if (not NLGen0jesSinglePionHCALdn_isLoaded) {
    if (NLGen0jesSinglePionHCALdn_branch != 0) {
      NLGen0jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesSinglePionHCALdn_isLoaded = true;
  }
  return NLGen0jesSinglePionHCALdn_;
}

const int &VVV0Tree::NLGen1jesSinglePionHCALdn() {
  if (not NLGen1jesSinglePionHCALdn_isLoaded) {
    if (NLGen1jesSinglePionHCALdn_branch != 0) {
      NLGen1jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesSinglePionHCALdn_isLoaded = true;
  }
  return NLGen1jesSinglePionHCALdn_;
}

const int &VVV0Tree::NLGen2jesSinglePionHCALdn() {
  if (not NLGen2jesSinglePionHCALdn_isLoaded) {
    if (NLGen2jesSinglePionHCALdn_branch != 0) {
      NLGen2jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesSinglePionHCALdn_isLoaded = true;
  }
  return NLGen2jesSinglePionHCALdn_;
}

const int &VVV0Tree::NLGen3jesSinglePionHCALdn() {
  if (not NLGen3jesSinglePionHCALdn_isLoaded) {
    if (NLGen3jesSinglePionHCALdn_branch != 0) {
      NLGen3jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesSinglePionHCALdn_isLoaded = true;
  }
  return NLGen3jesSinglePionHCALdn_;
}

const int &VVV0Tree::NLGen4jesSinglePionHCALdn() {
  if (not NLGen4jesSinglePionHCALdn_isLoaded) {
    if (NLGen4jesSinglePionHCALdn_branch != 0) {
      NLGen4jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesSinglePionHCALdn_isLoaded = true;
  }
  return NLGen4jesSinglePionHCALdn_;
}

const int &VVV0Tree::NVQGen0jesSinglePionHCALdn() {
  if (not NVQGen0jesSinglePionHCALdn_isLoaded) {
    if (NVQGen0jesSinglePionHCALdn_branch != 0) {
      NVQGen0jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesSinglePionHCALdn_isLoaded = true;
  }
  return NVQGen0jesSinglePionHCALdn_;
}

const int &VVV0Tree::NVQGen1jesSinglePionHCALdn() {
  if (not NVQGen1jesSinglePionHCALdn_isLoaded) {
    if (NVQGen1jesSinglePionHCALdn_branch != 0) {
      NVQGen1jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesSinglePionHCALdn_isLoaded = true;
  }
  return NVQGen1jesSinglePionHCALdn_;
}

const int &VVV0Tree::NVQGen2jesSinglePionHCALdn() {
  if (not NVQGen2jesSinglePionHCALdn_isLoaded) {
    if (NVQGen2jesSinglePionHCALdn_branch != 0) {
      NVQGen2jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesSinglePionHCALdn_isLoaded = true;
  }
  return NVQGen2jesSinglePionHCALdn_;
}

const int &VVV0Tree::NVQGen3jesSinglePionHCALdn() {
  if (not NVQGen3jesSinglePionHCALdn_isLoaded) {
    if (NVQGen3jesSinglePionHCALdn_branch != 0) {
      NVQGen3jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesSinglePionHCALdn_isLoaded = true;
  }
  return NVQGen3jesSinglePionHCALdn_;
}

const int &VVV0Tree::NVQGen4jesSinglePionHCALdn() {
  if (not NVQGen4jesSinglePionHCALdn_isLoaded) {
    if (NVQGen4jesSinglePionHCALdn_branch != 0) {
      NVQGen4jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesSinglePionHCALdn_isLoaded = true;
  }
  return NVQGen4jesSinglePionHCALdn_;
}

const int &VVV0Tree::NiFJjesSinglePionHCALdn() {
  if (not NiFJjesSinglePionHCALdn_isLoaded) {
    if (NiFJjesSinglePionHCALdn_branch != 0) {
      NiFJjesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    NiFJjesSinglePionHCALdn_isLoaded = true;
  }
  return NiFJjesSinglePionHCALdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesSinglePionHCALdn() {
  if (not iFJ0jesSinglePionHCALdn_isLoaded) {
    if (iFJ0jesSinglePionHCALdn_branch != 0) {
      iFJ0jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesSinglePionHCALdn_isLoaded = true;
  }
  return *iFJ0jesSinglePionHCALdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesSinglePionHCALdn() {
  if (not iFJ1jesSinglePionHCALdn_isLoaded) {
    if (iFJ1jesSinglePionHCALdn_branch != 0) {
      iFJ1jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesSinglePionHCALdn_isLoaded = true;
  }
  return *iFJ1jesSinglePionHCALdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesSinglePionHCALdn() {
  if (not iFJ2jesSinglePionHCALdn_isLoaded) {
    if (iFJ2jesSinglePionHCALdn_branch != 0) {
      iFJ2jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesSinglePionHCALdn_isLoaded = true;
  }
  return *iFJ2jesSinglePionHCALdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesSinglePionHCALdn() {
  if (not iFJ3jesSinglePionHCALdn_isLoaded) {
    if (iFJ3jesSinglePionHCALdn_branch != 0) {
      iFJ3jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesSinglePionHCALdn_isLoaded = true;
  }
  return *iFJ3jesSinglePionHCALdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesSinglePionHCALdn() {
  if (not iFJ4jesSinglePionHCALdn_isLoaded) {
    if (iFJ4jesSinglePionHCALdn_branch != 0) {
      iFJ4jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesSinglePionHCALdn_isLoaded = true;
  }
  return *iFJ4jesSinglePionHCALdn_;
}

const float &VVV0Tree::iVMD0jesSinglePionHCALdn() {
  if (not iVMD0jesSinglePionHCALdn_isLoaded) {
    if (iVMD0jesSinglePionHCALdn_branch != 0) {
      iVMD0jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesSinglePionHCALdn_isLoaded = true;
  }
  return iVMD0jesSinglePionHCALdn_;
}

const float &VVV0Tree::iVMD1jesSinglePionHCALdn() {
  if (not iVMD1jesSinglePionHCALdn_isLoaded) {
    if (iVMD1jesSinglePionHCALdn_branch != 0) {
      iVMD1jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesSinglePionHCALdn_isLoaded = true;
  }
  return iVMD1jesSinglePionHCALdn_;
}

const float &VVV0Tree::iVMD2jesSinglePionHCALdn() {
  if (not iVMD2jesSinglePionHCALdn_isLoaded) {
    if (iVMD2jesSinglePionHCALdn_branch != 0) {
      iVMD2jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesSinglePionHCALdn_isLoaded = true;
  }
  return iVMD2jesSinglePionHCALdn_;
}

const float &VVV0Tree::iVMD3jesSinglePionHCALdn() {
  if (not iVMD3jesSinglePionHCALdn_isLoaded) {
    if (iVMD3jesSinglePionHCALdn_branch != 0) {
      iVMD3jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesSinglePionHCALdn_isLoaded = true;
  }
  return iVMD3jesSinglePionHCALdn_;
}

const float &VVV0Tree::iVMD4jesSinglePionHCALdn() {
  if (not iVMD4jesSinglePionHCALdn_isLoaded) {
    if (iVMD4jesSinglePionHCALdn_branch != 0) {
      iVMD4jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesSinglePionHCALdn_isLoaded = true;
  }
  return iVMD4jesSinglePionHCALdn_;
}

const float &VVV0Tree::iWMD0jesSinglePionHCALdn() {
  if (not iWMD0jesSinglePionHCALdn_isLoaded) {
    if (iWMD0jesSinglePionHCALdn_branch != 0) {
      iWMD0jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesSinglePionHCALdn_isLoaded = true;
  }
  return iWMD0jesSinglePionHCALdn_;
}

const float &VVV0Tree::iWMD1jesSinglePionHCALdn() {
  if (not iWMD1jesSinglePionHCALdn_isLoaded) {
    if (iWMD1jesSinglePionHCALdn_branch != 0) {
      iWMD1jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesSinglePionHCALdn_isLoaded = true;
  }
  return iWMD1jesSinglePionHCALdn_;
}

const float &VVV0Tree::iWMD2jesSinglePionHCALdn() {
  if (not iWMD2jesSinglePionHCALdn_isLoaded) {
    if (iWMD2jesSinglePionHCALdn_branch != 0) {
      iWMD2jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesSinglePionHCALdn_isLoaded = true;
  }
  return iWMD2jesSinglePionHCALdn_;
}

const float &VVV0Tree::iWMD3jesSinglePionHCALdn() {
  if (not iWMD3jesSinglePionHCALdn_isLoaded) {
    if (iWMD3jesSinglePionHCALdn_branch != 0) {
      iWMD3jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesSinglePionHCALdn_isLoaded = true;
  }
  return iWMD3jesSinglePionHCALdn_;
}

const float &VVV0Tree::iWMD4jesSinglePionHCALdn() {
  if (not iWMD4jesSinglePionHCALdn_isLoaded) {
    if (iWMD4jesSinglePionHCALdn_branch != 0) {
      iWMD4jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesSinglePionHCALdn_isLoaded = true;
  }
  return iWMD4jesSinglePionHCALdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesSinglePionHCALdn() {
  if (not METjesSinglePionHCALdn_isLoaded) {
    if (METjesSinglePionHCALdn_branch != 0) {
      METjesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch METjesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    METjesSinglePionHCALdn_isLoaded = true;
  }
  return *METjesSinglePionHCALdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesSinglePionHCALdn() {
  if (not NujesSinglePionHCALdn_isLoaded) {
    if (NujesSinglePionHCALdn_branch != 0) {
      NujesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch NujesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    NujesSinglePionHCALdn_isLoaded = true;
  }
  return *NujesSinglePionHCALdn_;
}

const int &VVV0Tree::NJjesSinglePionHCALdn() {
  if (not NJjesSinglePionHCALdn_isLoaded) {
    if (NJjesSinglePionHCALdn_branch != 0) {
      NJjesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch NJjesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    NJjesSinglePionHCALdn_isLoaded = true;
  }
  return NJjesSinglePionHCALdn_;
}

const int &VVV0Tree::NbLoosejesSinglePionHCALdn() {
  if (not NbLoosejesSinglePionHCALdn_isLoaded) {
    if (NbLoosejesSinglePionHCALdn_branch != 0) {
      NbLoosejesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesSinglePionHCALdn_isLoaded = true;
  }
  return NbLoosejesSinglePionHCALdn_;
}

const int &VVV0Tree::NbMediumjesSinglePionHCALdn() {
  if (not NbMediumjesSinglePionHCALdn_isLoaded) {
    if (NbMediumjesSinglePionHCALdn_branch != 0) {
      NbMediumjesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesSinglePionHCALdn_isLoaded = true;
  }
  return NbMediumjesSinglePionHCALdn_;
}

const int &VVV0Tree::NbTightjesSinglePionHCALdn() {
  if (not NbTightjesSinglePionHCALdn_isLoaded) {
    if (NbTightjesSinglePionHCALdn_branch != 0) {
      NbTightjesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    NbTightjesSinglePionHCALdn_isLoaded = true;
  }
  return NbTightjesSinglePionHCALdn_;
}

const int &VVV0Tree::NoORNbLoosejesSinglePionHCALdn() {
  if (not NoORNbLoosejesSinglePionHCALdn_isLoaded) {
    if (NoORNbLoosejesSinglePionHCALdn_branch != 0) {
      NoORNbLoosejesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesSinglePionHCALdn_isLoaded = true;
  }
  return NoORNbLoosejesSinglePionHCALdn_;
}

const int &VVV0Tree::NoORNbMediumjesSinglePionHCALdn() {
  if (not NoORNbMediumjesSinglePionHCALdn_isLoaded) {
    if (NoORNbMediumjesSinglePionHCALdn_branch != 0) {
      NoORNbMediumjesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesSinglePionHCALdn_isLoaded = true;
  }
  return NoORNbMediumjesSinglePionHCALdn_;
}

const int &VVV0Tree::NoORNbTightjesSinglePionHCALdn() {
  if (not NoORNbTightjesSinglePionHCALdn_isLoaded) {
    if (NoORNbTightjesSinglePionHCALdn_branch != 0) {
      NoORNbTightjesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesSinglePionHCALdn_isLoaded = true;
  }
  return NoORNbTightjesSinglePionHCALdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesSinglePionHCALdn() {
  if (not J0jesSinglePionHCALdn_isLoaded) {
    if (J0jesSinglePionHCALdn_branch != 0) {
      J0jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch J0jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    J0jesSinglePionHCALdn_isLoaded = true;
  }
  return *J0jesSinglePionHCALdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesSinglePionHCALdn() {
  if (not J1jesSinglePionHCALdn_isLoaded) {
    if (J1jesSinglePionHCALdn_branch != 0) {
      J1jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch J1jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    J1jesSinglePionHCALdn_isLoaded = true;
  }
  return *J1jesSinglePionHCALdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesSinglePionHCALdn() {
  if (not J2jesSinglePionHCALdn_isLoaded) {
    if (J2jesSinglePionHCALdn_branch != 0) {
      J2jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch J2jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    J2jesSinglePionHCALdn_isLoaded = true;
  }
  return *J2jesSinglePionHCALdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesSinglePionHCALdn() {
  if (not J3jesSinglePionHCALdn_isLoaded) {
    if (J3jesSinglePionHCALdn_branch != 0) {
      J3jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch J3jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    J3jesSinglePionHCALdn_isLoaded = true;
  }
  return *J3jesSinglePionHCALdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesSinglePionHCALdn() {
  if (not J4jesSinglePionHCALdn_isLoaded) {
    if (J4jesSinglePionHCALdn_branch != 0) {
      J4jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch J4jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    J4jesSinglePionHCALdn_isLoaded = true;
  }
  return *J4jesSinglePionHCALdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesSinglePionHCALdn() {
  if (not J5jesSinglePionHCALdn_isLoaded) {
    if (J5jesSinglePionHCALdn_branch != 0) {
      J5jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch J5jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    J5jesSinglePionHCALdn_isLoaded = true;
  }
  return *J5jesSinglePionHCALdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesSinglePionHCALdn() {
  if (not J6jesSinglePionHCALdn_isLoaded) {
    if (J6jesSinglePionHCALdn_branch != 0) {
      J6jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch J6jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    J6jesSinglePionHCALdn_isLoaded = true;
  }
  return *J6jesSinglePionHCALdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesSinglePionHCALdn() {
  if (not J7jesSinglePionHCALdn_isLoaded) {
    if (J7jesSinglePionHCALdn_branch != 0) {
      J7jesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch J7jesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    J7jesSinglePionHCALdn_isLoaded = true;
  }
  return *J7jesSinglePionHCALdn_;
}

const vector<int> &VVV0Tree::NQJGenjesSinglePionHCALdn() {
  if (not NQJGenjesSinglePionHCALdn_isLoaded) {
    if (NQJGenjesSinglePionHCALdn_branch != 0) {
      NQJGenjesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesSinglePionHCALdn_isLoaded = true;
  }
  return *NQJGenjesSinglePionHCALdn_;
}

const vector<int> &VVV0Tree::NBJGenjesSinglePionHCALdn() {
  if (not NBJGenjesSinglePionHCALdn_isLoaded) {
    if (NBJGenjesSinglePionHCALdn_branch != 0) {
      NBJGenjesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesSinglePionHCALdn_isLoaded = true;
  }
  return *NBJGenjesSinglePionHCALdn_;
}

const vector<int> &VVV0Tree::NLJGenjesSinglePionHCALdn() {
  if (not NLJGenjesSinglePionHCALdn_isLoaded) {
    if (NLJGenjesSinglePionHCALdn_branch != 0) {
      NLJGenjesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesSinglePionHCALdn_isLoaded = true;
  }
  return *NLJGenjesSinglePionHCALdn_;
}

const float &VVV0Tree::MVVXjesSinglePionHCALdn() {
  if (not MVVXjesSinglePionHCALdn_isLoaded) {
    if (MVVXjesSinglePionHCALdn_branch != 0) {
      MVVXjesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    MVVXjesSinglePionHCALdn_isLoaded = true;
  }
  return MVVXjesSinglePionHCALdn_;
}

const float &VVV0Tree::PtVVXjesSinglePionHCALdn() {
  if (not PtVVXjesSinglePionHCALdn_isLoaded) {
    if (PtVVXjesSinglePionHCALdn_branch != 0) {
      PtVVXjesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesSinglePionHCALdn_isLoaded = true;
  }
  return PtVVXjesSinglePionHCALdn_;
}

const float &VVV0Tree::HTjesSinglePionHCALdn() {
  if (not HTjesSinglePionHCALdn_isLoaded) {
    if (HTjesSinglePionHCALdn_branch != 0) {
      HTjesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch HTjesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    HTjesSinglePionHCALdn_isLoaded = true;
  }
  return HTjesSinglePionHCALdn_;
}

const float &VVV0Tree::HTJjesSinglePionHCALdn() {
  if (not HTJjesSinglePionHCALdn_isLoaded) {
    if (HTJjesSinglePionHCALdn_branch != 0) {
      HTJjesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch HTJjesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    HTJjesSinglePionHCALdn_isLoaded = true;
  }
  return HTJjesSinglePionHCALdn_;
}

const float &VVV0Tree::HTFJjesSinglePionHCALdn() {
  if (not HTFJjesSinglePionHCALdn_isLoaded) {
    if (HTFJjesSinglePionHCALdn_branch != 0) {
      HTFJjesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    HTFJjesSinglePionHCALdn_isLoaded = true;
  }
  return HTFJjesSinglePionHCALdn_;
}

const float &VVV0Tree::SumPtFJjesSinglePionHCALdn() {
  if (not SumPtFJjesSinglePionHCALdn_isLoaded) {
    if (SumPtFJjesSinglePionHCALdn_branch != 0) {
      SumPtFJjesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesSinglePionHCALdn_isLoaded = true;
  }
  return SumPtFJjesSinglePionHCALdn_;
}

const float &VVV0Tree::SumPtJjesSinglePionHCALdn() {
  if (not SumPtJjesSinglePionHCALdn_isLoaded) {
    if (SumPtJjesSinglePionHCALdn_branch != 0) {
      SumPtJjesSinglePionHCALdn_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesSinglePionHCALdn_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesSinglePionHCALdn_isLoaded = true;
  }
  return SumPtJjesSinglePionHCALdn_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesFlavorQCDup() {
  if (not JsjesFlavorQCDup_isLoaded) {
    if (JsjesFlavorQCDup_branch != 0) {
      JsjesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch JsjesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    JsjesFlavorQCDup_isLoaded = true;
  }
  return *JsjesFlavorQCDup_;
}

const int &VVV0Tree::NFJjesFlavorQCDup() {
  if (not NFJjesFlavorQCDup_isLoaded) {
    if (NFJjesFlavorQCDup_branch != 0) {
      NFJjesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch NFJjesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    NFJjesFlavorQCDup_isLoaded = true;
  }
  return NFJjesFlavorQCDup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesFlavorQCDup() {
  if (not FJ0jesFlavorQCDup_isLoaded) {
    if (FJ0jesFlavorQCDup_branch != 0) {
      FJ0jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    FJ0jesFlavorQCDup_isLoaded = true;
  }
  return *FJ0jesFlavorQCDup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesFlavorQCDup() {
  if (not FJ1jesFlavorQCDup_isLoaded) {
    if (FJ1jesFlavorQCDup_branch != 0) {
      FJ1jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    FJ1jesFlavorQCDup_isLoaded = true;
  }
  return *FJ1jesFlavorQCDup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesFlavorQCDup() {
  if (not FJ2jesFlavorQCDup_isLoaded) {
    if (FJ2jesFlavorQCDup_branch != 0) {
      FJ2jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    FJ2jesFlavorQCDup_isLoaded = true;
  }
  return *FJ2jesFlavorQCDup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesFlavorQCDup() {
  if (not FJ3jesFlavorQCDup_isLoaded) {
    if (FJ3jesFlavorQCDup_branch != 0) {
      FJ3jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    FJ3jesFlavorQCDup_isLoaded = true;
  }
  return *FJ3jesFlavorQCDup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesFlavorQCDup() {
  if (not FJ4jesFlavorQCDup_isLoaded) {
    if (FJ4jesFlavorQCDup_branch != 0) {
      FJ4jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    FJ4jesFlavorQCDup_isLoaded = true;
  }
  return *FJ4jesFlavorQCDup_;
}

const float &VVV0Tree::VMD0jesFlavorQCDup() {
  if (not VMD0jesFlavorQCDup_isLoaded) {
    if (VMD0jesFlavorQCDup_branch != 0) {
      VMD0jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    VMD0jesFlavorQCDup_isLoaded = true;
  }
  return VMD0jesFlavorQCDup_;
}

const float &VVV0Tree::VMD1jesFlavorQCDup() {
  if (not VMD1jesFlavorQCDup_isLoaded) {
    if (VMD1jesFlavorQCDup_branch != 0) {
      VMD1jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    VMD1jesFlavorQCDup_isLoaded = true;
  }
  return VMD1jesFlavorQCDup_;
}

const float &VVV0Tree::VMD2jesFlavorQCDup() {
  if (not VMD2jesFlavorQCDup_isLoaded) {
    if (VMD2jesFlavorQCDup_branch != 0) {
      VMD2jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    VMD2jesFlavorQCDup_isLoaded = true;
  }
  return VMD2jesFlavorQCDup_;
}

const float &VVV0Tree::VMD3jesFlavorQCDup() {
  if (not VMD3jesFlavorQCDup_isLoaded) {
    if (VMD3jesFlavorQCDup_branch != 0) {
      VMD3jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    VMD3jesFlavorQCDup_isLoaded = true;
  }
  return VMD3jesFlavorQCDup_;
}

const float &VVV0Tree::VMD4jesFlavorQCDup() {
  if (not VMD4jesFlavorQCDup_isLoaded) {
    if (VMD4jesFlavorQCDup_branch != 0) {
      VMD4jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    VMD4jesFlavorQCDup_isLoaded = true;
  }
  return VMD4jesFlavorQCDup_;
}

const float &VVV0Tree::WMD0jesFlavorQCDup() {
  if (not WMD0jesFlavorQCDup_isLoaded) {
    if (WMD0jesFlavorQCDup_branch != 0) {
      WMD0jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    WMD0jesFlavorQCDup_isLoaded = true;
  }
  return WMD0jesFlavorQCDup_;
}

const float &VVV0Tree::WMD1jesFlavorQCDup() {
  if (not WMD1jesFlavorQCDup_isLoaded) {
    if (WMD1jesFlavorQCDup_branch != 0) {
      WMD1jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    WMD1jesFlavorQCDup_isLoaded = true;
  }
  return WMD1jesFlavorQCDup_;
}

const float &VVV0Tree::WMD2jesFlavorQCDup() {
  if (not WMD2jesFlavorQCDup_isLoaded) {
    if (WMD2jesFlavorQCDup_branch != 0) {
      WMD2jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    WMD2jesFlavorQCDup_isLoaded = true;
  }
  return WMD2jesFlavorQCDup_;
}

const float &VVV0Tree::WMD3jesFlavorQCDup() {
  if (not WMD3jesFlavorQCDup_isLoaded) {
    if (WMD3jesFlavorQCDup_branch != 0) {
      WMD3jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    WMD3jesFlavorQCDup_isLoaded = true;
  }
  return WMD3jesFlavorQCDup_;
}

const float &VVV0Tree::WMD4jesFlavorQCDup() {
  if (not WMD4jesFlavorQCDup_isLoaded) {
    if (WMD4jesFlavorQCDup_branch != 0) {
      WMD4jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    WMD4jesFlavorQCDup_isLoaded = true;
  }
  return WMD4jesFlavorQCDup_;
}

const int &VVV0Tree::NQGen0jesFlavorQCDup() {
  if (not NQGen0jesFlavorQCDup_isLoaded) {
    if (NQGen0jesFlavorQCDup_branch != 0) {
      NQGen0jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesFlavorQCDup_isLoaded = true;
  }
  return NQGen0jesFlavorQCDup_;
}

const int &VVV0Tree::NQGen1jesFlavorQCDup() {
  if (not NQGen1jesFlavorQCDup_isLoaded) {
    if (NQGen1jesFlavorQCDup_branch != 0) {
      NQGen1jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesFlavorQCDup_isLoaded = true;
  }
  return NQGen1jesFlavorQCDup_;
}

const int &VVV0Tree::NQGen2jesFlavorQCDup() {
  if (not NQGen2jesFlavorQCDup_isLoaded) {
    if (NQGen2jesFlavorQCDup_branch != 0) {
      NQGen2jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesFlavorQCDup_isLoaded = true;
  }
  return NQGen2jesFlavorQCDup_;
}

const int &VVV0Tree::NQGen3jesFlavorQCDup() {
  if (not NQGen3jesFlavorQCDup_isLoaded) {
    if (NQGen3jesFlavorQCDup_branch != 0) {
      NQGen3jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesFlavorQCDup_isLoaded = true;
  }
  return NQGen3jesFlavorQCDup_;
}

const int &VVV0Tree::NQGen4jesFlavorQCDup() {
  if (not NQGen4jesFlavorQCDup_isLoaded) {
    if (NQGen4jesFlavorQCDup_branch != 0) {
      NQGen4jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesFlavorQCDup_isLoaded = true;
  }
  return NQGen4jesFlavorQCDup_;
}

const int &VVV0Tree::NBGen0jesFlavorQCDup() {
  if (not NBGen0jesFlavorQCDup_isLoaded) {
    if (NBGen0jesFlavorQCDup_branch != 0) {
      NBGen0jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesFlavorQCDup_isLoaded = true;
  }
  return NBGen0jesFlavorQCDup_;
}

const int &VVV0Tree::NBGen1jesFlavorQCDup() {
  if (not NBGen1jesFlavorQCDup_isLoaded) {
    if (NBGen1jesFlavorQCDup_branch != 0) {
      NBGen1jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesFlavorQCDup_isLoaded = true;
  }
  return NBGen1jesFlavorQCDup_;
}

const int &VVV0Tree::NBGen2jesFlavorQCDup() {
  if (not NBGen2jesFlavorQCDup_isLoaded) {
    if (NBGen2jesFlavorQCDup_branch != 0) {
      NBGen2jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesFlavorQCDup_isLoaded = true;
  }
  return NBGen2jesFlavorQCDup_;
}

const int &VVV0Tree::NBGen3jesFlavorQCDup() {
  if (not NBGen3jesFlavorQCDup_isLoaded) {
    if (NBGen3jesFlavorQCDup_branch != 0) {
      NBGen3jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesFlavorQCDup_isLoaded = true;
  }
  return NBGen3jesFlavorQCDup_;
}

const int &VVV0Tree::NBGen4jesFlavorQCDup() {
  if (not NBGen4jesFlavorQCDup_isLoaded) {
    if (NBGen4jesFlavorQCDup_branch != 0) {
      NBGen4jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesFlavorQCDup_isLoaded = true;
  }
  return NBGen4jesFlavorQCDup_;
}

const int &VVV0Tree::NLGen0jesFlavorQCDup() {
  if (not NLGen0jesFlavorQCDup_isLoaded) {
    if (NLGen0jesFlavorQCDup_branch != 0) {
      NLGen0jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesFlavorQCDup_isLoaded = true;
  }
  return NLGen0jesFlavorQCDup_;
}

const int &VVV0Tree::NLGen1jesFlavorQCDup() {
  if (not NLGen1jesFlavorQCDup_isLoaded) {
    if (NLGen1jesFlavorQCDup_branch != 0) {
      NLGen1jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesFlavorQCDup_isLoaded = true;
  }
  return NLGen1jesFlavorQCDup_;
}

const int &VVV0Tree::NLGen2jesFlavorQCDup() {
  if (not NLGen2jesFlavorQCDup_isLoaded) {
    if (NLGen2jesFlavorQCDup_branch != 0) {
      NLGen2jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesFlavorQCDup_isLoaded = true;
  }
  return NLGen2jesFlavorQCDup_;
}

const int &VVV0Tree::NLGen3jesFlavorQCDup() {
  if (not NLGen3jesFlavorQCDup_isLoaded) {
    if (NLGen3jesFlavorQCDup_branch != 0) {
      NLGen3jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesFlavorQCDup_isLoaded = true;
  }
  return NLGen3jesFlavorQCDup_;
}

const int &VVV0Tree::NLGen4jesFlavorQCDup() {
  if (not NLGen4jesFlavorQCDup_isLoaded) {
    if (NLGen4jesFlavorQCDup_branch != 0) {
      NLGen4jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesFlavorQCDup_isLoaded = true;
  }
  return NLGen4jesFlavorQCDup_;
}

const int &VVV0Tree::NVQGen0jesFlavorQCDup() {
  if (not NVQGen0jesFlavorQCDup_isLoaded) {
    if (NVQGen0jesFlavorQCDup_branch != 0) {
      NVQGen0jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesFlavorQCDup_isLoaded = true;
  }
  return NVQGen0jesFlavorQCDup_;
}

const int &VVV0Tree::NVQGen1jesFlavorQCDup() {
  if (not NVQGen1jesFlavorQCDup_isLoaded) {
    if (NVQGen1jesFlavorQCDup_branch != 0) {
      NVQGen1jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesFlavorQCDup_isLoaded = true;
  }
  return NVQGen1jesFlavorQCDup_;
}

const int &VVV0Tree::NVQGen2jesFlavorQCDup() {
  if (not NVQGen2jesFlavorQCDup_isLoaded) {
    if (NVQGen2jesFlavorQCDup_branch != 0) {
      NVQGen2jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesFlavorQCDup_isLoaded = true;
  }
  return NVQGen2jesFlavorQCDup_;
}

const int &VVV0Tree::NVQGen3jesFlavorQCDup() {
  if (not NVQGen3jesFlavorQCDup_isLoaded) {
    if (NVQGen3jesFlavorQCDup_branch != 0) {
      NVQGen3jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesFlavorQCDup_isLoaded = true;
  }
  return NVQGen3jesFlavorQCDup_;
}

const int &VVV0Tree::NVQGen4jesFlavorQCDup() {
  if (not NVQGen4jesFlavorQCDup_isLoaded) {
    if (NVQGen4jesFlavorQCDup_branch != 0) {
      NVQGen4jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesFlavorQCDup_isLoaded = true;
  }
  return NVQGen4jesFlavorQCDup_;
}

const int &VVV0Tree::NiFJjesFlavorQCDup() {
  if (not NiFJjesFlavorQCDup_isLoaded) {
    if (NiFJjesFlavorQCDup_branch != 0) {
      NiFJjesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    NiFJjesFlavorQCDup_isLoaded = true;
  }
  return NiFJjesFlavorQCDup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesFlavorQCDup() {
  if (not iFJ0jesFlavorQCDup_isLoaded) {
    if (iFJ0jesFlavorQCDup_branch != 0) {
      iFJ0jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesFlavorQCDup_isLoaded = true;
  }
  return *iFJ0jesFlavorQCDup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesFlavorQCDup() {
  if (not iFJ1jesFlavorQCDup_isLoaded) {
    if (iFJ1jesFlavorQCDup_branch != 0) {
      iFJ1jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesFlavorQCDup_isLoaded = true;
  }
  return *iFJ1jesFlavorQCDup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesFlavorQCDup() {
  if (not iFJ2jesFlavorQCDup_isLoaded) {
    if (iFJ2jesFlavorQCDup_branch != 0) {
      iFJ2jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesFlavorQCDup_isLoaded = true;
  }
  return *iFJ2jesFlavorQCDup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesFlavorQCDup() {
  if (not iFJ3jesFlavorQCDup_isLoaded) {
    if (iFJ3jesFlavorQCDup_branch != 0) {
      iFJ3jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesFlavorQCDup_isLoaded = true;
  }
  return *iFJ3jesFlavorQCDup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesFlavorQCDup() {
  if (not iFJ4jesFlavorQCDup_isLoaded) {
    if (iFJ4jesFlavorQCDup_branch != 0) {
      iFJ4jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesFlavorQCDup_isLoaded = true;
  }
  return *iFJ4jesFlavorQCDup_;
}

const float &VVV0Tree::iVMD0jesFlavorQCDup() {
  if (not iVMD0jesFlavorQCDup_isLoaded) {
    if (iVMD0jesFlavorQCDup_branch != 0) {
      iVMD0jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesFlavorQCDup_isLoaded = true;
  }
  return iVMD0jesFlavorQCDup_;
}

const float &VVV0Tree::iVMD1jesFlavorQCDup() {
  if (not iVMD1jesFlavorQCDup_isLoaded) {
    if (iVMD1jesFlavorQCDup_branch != 0) {
      iVMD1jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesFlavorQCDup_isLoaded = true;
  }
  return iVMD1jesFlavorQCDup_;
}

const float &VVV0Tree::iVMD2jesFlavorQCDup() {
  if (not iVMD2jesFlavorQCDup_isLoaded) {
    if (iVMD2jesFlavorQCDup_branch != 0) {
      iVMD2jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesFlavorQCDup_isLoaded = true;
  }
  return iVMD2jesFlavorQCDup_;
}

const float &VVV0Tree::iVMD3jesFlavorQCDup() {
  if (not iVMD3jesFlavorQCDup_isLoaded) {
    if (iVMD3jesFlavorQCDup_branch != 0) {
      iVMD3jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesFlavorQCDup_isLoaded = true;
  }
  return iVMD3jesFlavorQCDup_;
}

const float &VVV0Tree::iVMD4jesFlavorQCDup() {
  if (not iVMD4jesFlavorQCDup_isLoaded) {
    if (iVMD4jesFlavorQCDup_branch != 0) {
      iVMD4jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesFlavorQCDup_isLoaded = true;
  }
  return iVMD4jesFlavorQCDup_;
}

const float &VVV0Tree::iWMD0jesFlavorQCDup() {
  if (not iWMD0jesFlavorQCDup_isLoaded) {
    if (iWMD0jesFlavorQCDup_branch != 0) {
      iWMD0jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesFlavorQCDup_isLoaded = true;
  }
  return iWMD0jesFlavorQCDup_;
}

const float &VVV0Tree::iWMD1jesFlavorQCDup() {
  if (not iWMD1jesFlavorQCDup_isLoaded) {
    if (iWMD1jesFlavorQCDup_branch != 0) {
      iWMD1jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesFlavorQCDup_isLoaded = true;
  }
  return iWMD1jesFlavorQCDup_;
}

const float &VVV0Tree::iWMD2jesFlavorQCDup() {
  if (not iWMD2jesFlavorQCDup_isLoaded) {
    if (iWMD2jesFlavorQCDup_branch != 0) {
      iWMD2jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesFlavorQCDup_isLoaded = true;
  }
  return iWMD2jesFlavorQCDup_;
}

const float &VVV0Tree::iWMD3jesFlavorQCDup() {
  if (not iWMD3jesFlavorQCDup_isLoaded) {
    if (iWMD3jesFlavorQCDup_branch != 0) {
      iWMD3jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesFlavorQCDup_isLoaded = true;
  }
  return iWMD3jesFlavorQCDup_;
}

const float &VVV0Tree::iWMD4jesFlavorQCDup() {
  if (not iWMD4jesFlavorQCDup_isLoaded) {
    if (iWMD4jesFlavorQCDup_branch != 0) {
      iWMD4jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesFlavorQCDup_isLoaded = true;
  }
  return iWMD4jesFlavorQCDup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesFlavorQCDup() {
  if (not METjesFlavorQCDup_isLoaded) {
    if (METjesFlavorQCDup_branch != 0) {
      METjesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch METjesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    METjesFlavorQCDup_isLoaded = true;
  }
  return *METjesFlavorQCDup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesFlavorQCDup() {
  if (not NujesFlavorQCDup_isLoaded) {
    if (NujesFlavorQCDup_branch != 0) {
      NujesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch NujesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    NujesFlavorQCDup_isLoaded = true;
  }
  return *NujesFlavorQCDup_;
}

const int &VVV0Tree::NJjesFlavorQCDup() {
  if (not NJjesFlavorQCDup_isLoaded) {
    if (NJjesFlavorQCDup_branch != 0) {
      NJjesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch NJjesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    NJjesFlavorQCDup_isLoaded = true;
  }
  return NJjesFlavorQCDup_;
}

const int &VVV0Tree::NbLoosejesFlavorQCDup() {
  if (not NbLoosejesFlavorQCDup_isLoaded) {
    if (NbLoosejesFlavorQCDup_branch != 0) {
      NbLoosejesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesFlavorQCDup_isLoaded = true;
  }
  return NbLoosejesFlavorQCDup_;
}

const int &VVV0Tree::NbMediumjesFlavorQCDup() {
  if (not NbMediumjesFlavorQCDup_isLoaded) {
    if (NbMediumjesFlavorQCDup_branch != 0) {
      NbMediumjesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesFlavorQCDup_isLoaded = true;
  }
  return NbMediumjesFlavorQCDup_;
}

const int &VVV0Tree::NbTightjesFlavorQCDup() {
  if (not NbTightjesFlavorQCDup_isLoaded) {
    if (NbTightjesFlavorQCDup_branch != 0) {
      NbTightjesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    NbTightjesFlavorQCDup_isLoaded = true;
  }
  return NbTightjesFlavorQCDup_;
}

const int &VVV0Tree::NoORNbLoosejesFlavorQCDup() {
  if (not NoORNbLoosejesFlavorQCDup_isLoaded) {
    if (NoORNbLoosejesFlavorQCDup_branch != 0) {
      NoORNbLoosejesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesFlavorQCDup_isLoaded = true;
  }
  return NoORNbLoosejesFlavorQCDup_;
}

const int &VVV0Tree::NoORNbMediumjesFlavorQCDup() {
  if (not NoORNbMediumjesFlavorQCDup_isLoaded) {
    if (NoORNbMediumjesFlavorQCDup_branch != 0) {
      NoORNbMediumjesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesFlavorQCDup_isLoaded = true;
  }
  return NoORNbMediumjesFlavorQCDup_;
}

const int &VVV0Tree::NoORNbTightjesFlavorQCDup() {
  if (not NoORNbTightjesFlavorQCDup_isLoaded) {
    if (NoORNbTightjesFlavorQCDup_branch != 0) {
      NoORNbTightjesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesFlavorQCDup_isLoaded = true;
  }
  return NoORNbTightjesFlavorQCDup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesFlavorQCDup() {
  if (not J0jesFlavorQCDup_isLoaded) {
    if (J0jesFlavorQCDup_branch != 0) {
      J0jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch J0jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    J0jesFlavorQCDup_isLoaded = true;
  }
  return *J0jesFlavorQCDup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesFlavorQCDup() {
  if (not J1jesFlavorQCDup_isLoaded) {
    if (J1jesFlavorQCDup_branch != 0) {
      J1jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch J1jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    J1jesFlavorQCDup_isLoaded = true;
  }
  return *J1jesFlavorQCDup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesFlavorQCDup() {
  if (not J2jesFlavorQCDup_isLoaded) {
    if (J2jesFlavorQCDup_branch != 0) {
      J2jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch J2jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    J2jesFlavorQCDup_isLoaded = true;
  }
  return *J2jesFlavorQCDup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesFlavorQCDup() {
  if (not J3jesFlavorQCDup_isLoaded) {
    if (J3jesFlavorQCDup_branch != 0) {
      J3jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch J3jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    J3jesFlavorQCDup_isLoaded = true;
  }
  return *J3jesFlavorQCDup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesFlavorQCDup() {
  if (not J4jesFlavorQCDup_isLoaded) {
    if (J4jesFlavorQCDup_branch != 0) {
      J4jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch J4jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    J4jesFlavorQCDup_isLoaded = true;
  }
  return *J4jesFlavorQCDup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesFlavorQCDup() {
  if (not J5jesFlavorQCDup_isLoaded) {
    if (J5jesFlavorQCDup_branch != 0) {
      J5jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch J5jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    J5jesFlavorQCDup_isLoaded = true;
  }
  return *J5jesFlavorQCDup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesFlavorQCDup() {
  if (not J6jesFlavorQCDup_isLoaded) {
    if (J6jesFlavorQCDup_branch != 0) {
      J6jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch J6jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    J6jesFlavorQCDup_isLoaded = true;
  }
  return *J6jesFlavorQCDup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesFlavorQCDup() {
  if (not J7jesFlavorQCDup_isLoaded) {
    if (J7jesFlavorQCDup_branch != 0) {
      J7jesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch J7jesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    J7jesFlavorQCDup_isLoaded = true;
  }
  return *J7jesFlavorQCDup_;
}

const vector<int> &VVV0Tree::NQJGenjesFlavorQCDup() {
  if (not NQJGenjesFlavorQCDup_isLoaded) {
    if (NQJGenjesFlavorQCDup_branch != 0) {
      NQJGenjesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesFlavorQCDup_isLoaded = true;
  }
  return *NQJGenjesFlavorQCDup_;
}

const vector<int> &VVV0Tree::NBJGenjesFlavorQCDup() {
  if (not NBJGenjesFlavorQCDup_isLoaded) {
    if (NBJGenjesFlavorQCDup_branch != 0) {
      NBJGenjesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesFlavorQCDup_isLoaded = true;
  }
  return *NBJGenjesFlavorQCDup_;
}

const vector<int> &VVV0Tree::NLJGenjesFlavorQCDup() {
  if (not NLJGenjesFlavorQCDup_isLoaded) {
    if (NLJGenjesFlavorQCDup_branch != 0) {
      NLJGenjesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesFlavorQCDup_isLoaded = true;
  }
  return *NLJGenjesFlavorQCDup_;
}

const float &VVV0Tree::MVVXjesFlavorQCDup() {
  if (not MVVXjesFlavorQCDup_isLoaded) {
    if (MVVXjesFlavorQCDup_branch != 0) {
      MVVXjesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    MVVXjesFlavorQCDup_isLoaded = true;
  }
  return MVVXjesFlavorQCDup_;
}

const float &VVV0Tree::PtVVXjesFlavorQCDup() {
  if (not PtVVXjesFlavorQCDup_isLoaded) {
    if (PtVVXjesFlavorQCDup_branch != 0) {
      PtVVXjesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesFlavorQCDup_isLoaded = true;
  }
  return PtVVXjesFlavorQCDup_;
}

const float &VVV0Tree::HTjesFlavorQCDup() {
  if (not HTjesFlavorQCDup_isLoaded) {
    if (HTjesFlavorQCDup_branch != 0) {
      HTjesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch HTjesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    HTjesFlavorQCDup_isLoaded = true;
  }
  return HTjesFlavorQCDup_;
}

const float &VVV0Tree::HTJjesFlavorQCDup() {
  if (not HTJjesFlavorQCDup_isLoaded) {
    if (HTJjesFlavorQCDup_branch != 0) {
      HTJjesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch HTJjesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    HTJjesFlavorQCDup_isLoaded = true;
  }
  return HTJjesFlavorQCDup_;
}

const float &VVV0Tree::HTFJjesFlavorQCDup() {
  if (not HTFJjesFlavorQCDup_isLoaded) {
    if (HTFJjesFlavorQCDup_branch != 0) {
      HTFJjesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    HTFJjesFlavorQCDup_isLoaded = true;
  }
  return HTFJjesFlavorQCDup_;
}

const float &VVV0Tree::SumPtFJjesFlavorQCDup() {
  if (not SumPtFJjesFlavorQCDup_isLoaded) {
    if (SumPtFJjesFlavorQCDup_branch != 0) {
      SumPtFJjesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesFlavorQCDup_isLoaded = true;
  }
  return SumPtFJjesFlavorQCDup_;
}

const float &VVV0Tree::SumPtJjesFlavorQCDup() {
  if (not SumPtJjesFlavorQCDup_isLoaded) {
    if (SumPtJjesFlavorQCDup_branch != 0) {
      SumPtJjesFlavorQCDup_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesFlavorQCDup_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesFlavorQCDup_isLoaded = true;
  }
  return SumPtJjesFlavorQCDup_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesFlavorQCDdn() {
  if (not JsjesFlavorQCDdn_isLoaded) {
    if (JsjesFlavorQCDdn_branch != 0) {
      JsjesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch JsjesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    JsjesFlavorQCDdn_isLoaded = true;
  }
  return *JsjesFlavorQCDdn_;
}

const int &VVV0Tree::NFJjesFlavorQCDdn() {
  if (not NFJjesFlavorQCDdn_isLoaded) {
    if (NFJjesFlavorQCDdn_branch != 0) {
      NFJjesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch NFJjesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    NFJjesFlavorQCDdn_isLoaded = true;
  }
  return NFJjesFlavorQCDdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesFlavorQCDdn() {
  if (not FJ0jesFlavorQCDdn_isLoaded) {
    if (FJ0jesFlavorQCDdn_branch != 0) {
      FJ0jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    FJ0jesFlavorQCDdn_isLoaded = true;
  }
  return *FJ0jesFlavorQCDdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesFlavorQCDdn() {
  if (not FJ1jesFlavorQCDdn_isLoaded) {
    if (FJ1jesFlavorQCDdn_branch != 0) {
      FJ1jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    FJ1jesFlavorQCDdn_isLoaded = true;
  }
  return *FJ1jesFlavorQCDdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesFlavorQCDdn() {
  if (not FJ2jesFlavorQCDdn_isLoaded) {
    if (FJ2jesFlavorQCDdn_branch != 0) {
      FJ2jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    FJ2jesFlavorQCDdn_isLoaded = true;
  }
  return *FJ2jesFlavorQCDdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesFlavorQCDdn() {
  if (not FJ3jesFlavorQCDdn_isLoaded) {
    if (FJ3jesFlavorQCDdn_branch != 0) {
      FJ3jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    FJ3jesFlavorQCDdn_isLoaded = true;
  }
  return *FJ3jesFlavorQCDdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesFlavorQCDdn() {
  if (not FJ4jesFlavorQCDdn_isLoaded) {
    if (FJ4jesFlavorQCDdn_branch != 0) {
      FJ4jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    FJ4jesFlavorQCDdn_isLoaded = true;
  }
  return *FJ4jesFlavorQCDdn_;
}

const float &VVV0Tree::VMD0jesFlavorQCDdn() {
  if (not VMD0jesFlavorQCDdn_isLoaded) {
    if (VMD0jesFlavorQCDdn_branch != 0) {
      VMD0jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    VMD0jesFlavorQCDdn_isLoaded = true;
  }
  return VMD0jesFlavorQCDdn_;
}

const float &VVV0Tree::VMD1jesFlavorQCDdn() {
  if (not VMD1jesFlavorQCDdn_isLoaded) {
    if (VMD1jesFlavorQCDdn_branch != 0) {
      VMD1jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    VMD1jesFlavorQCDdn_isLoaded = true;
  }
  return VMD1jesFlavorQCDdn_;
}

const float &VVV0Tree::VMD2jesFlavorQCDdn() {
  if (not VMD2jesFlavorQCDdn_isLoaded) {
    if (VMD2jesFlavorQCDdn_branch != 0) {
      VMD2jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    VMD2jesFlavorQCDdn_isLoaded = true;
  }
  return VMD2jesFlavorQCDdn_;
}

const float &VVV0Tree::VMD3jesFlavorQCDdn() {
  if (not VMD3jesFlavorQCDdn_isLoaded) {
    if (VMD3jesFlavorQCDdn_branch != 0) {
      VMD3jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    VMD3jesFlavorQCDdn_isLoaded = true;
  }
  return VMD3jesFlavorQCDdn_;
}

const float &VVV0Tree::VMD4jesFlavorQCDdn() {
  if (not VMD4jesFlavorQCDdn_isLoaded) {
    if (VMD4jesFlavorQCDdn_branch != 0) {
      VMD4jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    VMD4jesFlavorQCDdn_isLoaded = true;
  }
  return VMD4jesFlavorQCDdn_;
}

const float &VVV0Tree::WMD0jesFlavorQCDdn() {
  if (not WMD0jesFlavorQCDdn_isLoaded) {
    if (WMD0jesFlavorQCDdn_branch != 0) {
      WMD0jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    WMD0jesFlavorQCDdn_isLoaded = true;
  }
  return WMD0jesFlavorQCDdn_;
}

const float &VVV0Tree::WMD1jesFlavorQCDdn() {
  if (not WMD1jesFlavorQCDdn_isLoaded) {
    if (WMD1jesFlavorQCDdn_branch != 0) {
      WMD1jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    WMD1jesFlavorQCDdn_isLoaded = true;
  }
  return WMD1jesFlavorQCDdn_;
}

const float &VVV0Tree::WMD2jesFlavorQCDdn() {
  if (not WMD2jesFlavorQCDdn_isLoaded) {
    if (WMD2jesFlavorQCDdn_branch != 0) {
      WMD2jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    WMD2jesFlavorQCDdn_isLoaded = true;
  }
  return WMD2jesFlavorQCDdn_;
}

const float &VVV0Tree::WMD3jesFlavorQCDdn() {
  if (not WMD3jesFlavorQCDdn_isLoaded) {
    if (WMD3jesFlavorQCDdn_branch != 0) {
      WMD3jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    WMD3jesFlavorQCDdn_isLoaded = true;
  }
  return WMD3jesFlavorQCDdn_;
}

const float &VVV0Tree::WMD4jesFlavorQCDdn() {
  if (not WMD4jesFlavorQCDdn_isLoaded) {
    if (WMD4jesFlavorQCDdn_branch != 0) {
      WMD4jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    WMD4jesFlavorQCDdn_isLoaded = true;
  }
  return WMD4jesFlavorQCDdn_;
}

const int &VVV0Tree::NQGen0jesFlavorQCDdn() {
  if (not NQGen0jesFlavorQCDdn_isLoaded) {
    if (NQGen0jesFlavorQCDdn_branch != 0) {
      NQGen0jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesFlavorQCDdn_isLoaded = true;
  }
  return NQGen0jesFlavorQCDdn_;
}

const int &VVV0Tree::NQGen1jesFlavorQCDdn() {
  if (not NQGen1jesFlavorQCDdn_isLoaded) {
    if (NQGen1jesFlavorQCDdn_branch != 0) {
      NQGen1jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesFlavorQCDdn_isLoaded = true;
  }
  return NQGen1jesFlavorQCDdn_;
}

const int &VVV0Tree::NQGen2jesFlavorQCDdn() {
  if (not NQGen2jesFlavorQCDdn_isLoaded) {
    if (NQGen2jesFlavorQCDdn_branch != 0) {
      NQGen2jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesFlavorQCDdn_isLoaded = true;
  }
  return NQGen2jesFlavorQCDdn_;
}

const int &VVV0Tree::NQGen3jesFlavorQCDdn() {
  if (not NQGen3jesFlavorQCDdn_isLoaded) {
    if (NQGen3jesFlavorQCDdn_branch != 0) {
      NQGen3jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesFlavorQCDdn_isLoaded = true;
  }
  return NQGen3jesFlavorQCDdn_;
}

const int &VVV0Tree::NQGen4jesFlavorQCDdn() {
  if (not NQGen4jesFlavorQCDdn_isLoaded) {
    if (NQGen4jesFlavorQCDdn_branch != 0) {
      NQGen4jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesFlavorQCDdn_isLoaded = true;
  }
  return NQGen4jesFlavorQCDdn_;
}

const int &VVV0Tree::NBGen0jesFlavorQCDdn() {
  if (not NBGen0jesFlavorQCDdn_isLoaded) {
    if (NBGen0jesFlavorQCDdn_branch != 0) {
      NBGen0jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesFlavorQCDdn_isLoaded = true;
  }
  return NBGen0jesFlavorQCDdn_;
}

const int &VVV0Tree::NBGen1jesFlavorQCDdn() {
  if (not NBGen1jesFlavorQCDdn_isLoaded) {
    if (NBGen1jesFlavorQCDdn_branch != 0) {
      NBGen1jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesFlavorQCDdn_isLoaded = true;
  }
  return NBGen1jesFlavorQCDdn_;
}

const int &VVV0Tree::NBGen2jesFlavorQCDdn() {
  if (not NBGen2jesFlavorQCDdn_isLoaded) {
    if (NBGen2jesFlavorQCDdn_branch != 0) {
      NBGen2jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesFlavorQCDdn_isLoaded = true;
  }
  return NBGen2jesFlavorQCDdn_;
}

const int &VVV0Tree::NBGen3jesFlavorQCDdn() {
  if (not NBGen3jesFlavorQCDdn_isLoaded) {
    if (NBGen3jesFlavorQCDdn_branch != 0) {
      NBGen3jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesFlavorQCDdn_isLoaded = true;
  }
  return NBGen3jesFlavorQCDdn_;
}

const int &VVV0Tree::NBGen4jesFlavorQCDdn() {
  if (not NBGen4jesFlavorQCDdn_isLoaded) {
    if (NBGen4jesFlavorQCDdn_branch != 0) {
      NBGen4jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesFlavorQCDdn_isLoaded = true;
  }
  return NBGen4jesFlavorQCDdn_;
}

const int &VVV0Tree::NLGen0jesFlavorQCDdn() {
  if (not NLGen0jesFlavorQCDdn_isLoaded) {
    if (NLGen0jesFlavorQCDdn_branch != 0) {
      NLGen0jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesFlavorQCDdn_isLoaded = true;
  }
  return NLGen0jesFlavorQCDdn_;
}

const int &VVV0Tree::NLGen1jesFlavorQCDdn() {
  if (not NLGen1jesFlavorQCDdn_isLoaded) {
    if (NLGen1jesFlavorQCDdn_branch != 0) {
      NLGen1jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesFlavorQCDdn_isLoaded = true;
  }
  return NLGen1jesFlavorQCDdn_;
}

const int &VVV0Tree::NLGen2jesFlavorQCDdn() {
  if (not NLGen2jesFlavorQCDdn_isLoaded) {
    if (NLGen2jesFlavorQCDdn_branch != 0) {
      NLGen2jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesFlavorQCDdn_isLoaded = true;
  }
  return NLGen2jesFlavorQCDdn_;
}

const int &VVV0Tree::NLGen3jesFlavorQCDdn() {
  if (not NLGen3jesFlavorQCDdn_isLoaded) {
    if (NLGen3jesFlavorQCDdn_branch != 0) {
      NLGen3jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesFlavorQCDdn_isLoaded = true;
  }
  return NLGen3jesFlavorQCDdn_;
}

const int &VVV0Tree::NLGen4jesFlavorQCDdn() {
  if (not NLGen4jesFlavorQCDdn_isLoaded) {
    if (NLGen4jesFlavorQCDdn_branch != 0) {
      NLGen4jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesFlavorQCDdn_isLoaded = true;
  }
  return NLGen4jesFlavorQCDdn_;
}

const int &VVV0Tree::NVQGen0jesFlavorQCDdn() {
  if (not NVQGen0jesFlavorQCDdn_isLoaded) {
    if (NVQGen0jesFlavorQCDdn_branch != 0) {
      NVQGen0jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesFlavorQCDdn_isLoaded = true;
  }
  return NVQGen0jesFlavorQCDdn_;
}

const int &VVV0Tree::NVQGen1jesFlavorQCDdn() {
  if (not NVQGen1jesFlavorQCDdn_isLoaded) {
    if (NVQGen1jesFlavorQCDdn_branch != 0) {
      NVQGen1jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesFlavorQCDdn_isLoaded = true;
  }
  return NVQGen1jesFlavorQCDdn_;
}

const int &VVV0Tree::NVQGen2jesFlavorQCDdn() {
  if (not NVQGen2jesFlavorQCDdn_isLoaded) {
    if (NVQGen2jesFlavorQCDdn_branch != 0) {
      NVQGen2jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesFlavorQCDdn_isLoaded = true;
  }
  return NVQGen2jesFlavorQCDdn_;
}

const int &VVV0Tree::NVQGen3jesFlavorQCDdn() {
  if (not NVQGen3jesFlavorQCDdn_isLoaded) {
    if (NVQGen3jesFlavorQCDdn_branch != 0) {
      NVQGen3jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesFlavorQCDdn_isLoaded = true;
  }
  return NVQGen3jesFlavorQCDdn_;
}

const int &VVV0Tree::NVQGen4jesFlavorQCDdn() {
  if (not NVQGen4jesFlavorQCDdn_isLoaded) {
    if (NVQGen4jesFlavorQCDdn_branch != 0) {
      NVQGen4jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesFlavorQCDdn_isLoaded = true;
  }
  return NVQGen4jesFlavorQCDdn_;
}

const int &VVV0Tree::NiFJjesFlavorQCDdn() {
  if (not NiFJjesFlavorQCDdn_isLoaded) {
    if (NiFJjesFlavorQCDdn_branch != 0) {
      NiFJjesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    NiFJjesFlavorQCDdn_isLoaded = true;
  }
  return NiFJjesFlavorQCDdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesFlavorQCDdn() {
  if (not iFJ0jesFlavorQCDdn_isLoaded) {
    if (iFJ0jesFlavorQCDdn_branch != 0) {
      iFJ0jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesFlavorQCDdn_isLoaded = true;
  }
  return *iFJ0jesFlavorQCDdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesFlavorQCDdn() {
  if (not iFJ1jesFlavorQCDdn_isLoaded) {
    if (iFJ1jesFlavorQCDdn_branch != 0) {
      iFJ1jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesFlavorQCDdn_isLoaded = true;
  }
  return *iFJ1jesFlavorQCDdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesFlavorQCDdn() {
  if (not iFJ2jesFlavorQCDdn_isLoaded) {
    if (iFJ2jesFlavorQCDdn_branch != 0) {
      iFJ2jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesFlavorQCDdn_isLoaded = true;
  }
  return *iFJ2jesFlavorQCDdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesFlavorQCDdn() {
  if (not iFJ3jesFlavorQCDdn_isLoaded) {
    if (iFJ3jesFlavorQCDdn_branch != 0) {
      iFJ3jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesFlavorQCDdn_isLoaded = true;
  }
  return *iFJ3jesFlavorQCDdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesFlavorQCDdn() {
  if (not iFJ4jesFlavorQCDdn_isLoaded) {
    if (iFJ4jesFlavorQCDdn_branch != 0) {
      iFJ4jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesFlavorQCDdn_isLoaded = true;
  }
  return *iFJ4jesFlavorQCDdn_;
}

const float &VVV0Tree::iVMD0jesFlavorQCDdn() {
  if (not iVMD0jesFlavorQCDdn_isLoaded) {
    if (iVMD0jesFlavorQCDdn_branch != 0) {
      iVMD0jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesFlavorQCDdn_isLoaded = true;
  }
  return iVMD0jesFlavorQCDdn_;
}

const float &VVV0Tree::iVMD1jesFlavorQCDdn() {
  if (not iVMD1jesFlavorQCDdn_isLoaded) {
    if (iVMD1jesFlavorQCDdn_branch != 0) {
      iVMD1jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesFlavorQCDdn_isLoaded = true;
  }
  return iVMD1jesFlavorQCDdn_;
}

const float &VVV0Tree::iVMD2jesFlavorQCDdn() {
  if (not iVMD2jesFlavorQCDdn_isLoaded) {
    if (iVMD2jesFlavorQCDdn_branch != 0) {
      iVMD2jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesFlavorQCDdn_isLoaded = true;
  }
  return iVMD2jesFlavorQCDdn_;
}

const float &VVV0Tree::iVMD3jesFlavorQCDdn() {
  if (not iVMD3jesFlavorQCDdn_isLoaded) {
    if (iVMD3jesFlavorQCDdn_branch != 0) {
      iVMD3jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesFlavorQCDdn_isLoaded = true;
  }
  return iVMD3jesFlavorQCDdn_;
}

const float &VVV0Tree::iVMD4jesFlavorQCDdn() {
  if (not iVMD4jesFlavorQCDdn_isLoaded) {
    if (iVMD4jesFlavorQCDdn_branch != 0) {
      iVMD4jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesFlavorQCDdn_isLoaded = true;
  }
  return iVMD4jesFlavorQCDdn_;
}

const float &VVV0Tree::iWMD0jesFlavorQCDdn() {
  if (not iWMD0jesFlavorQCDdn_isLoaded) {
    if (iWMD0jesFlavorQCDdn_branch != 0) {
      iWMD0jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesFlavorQCDdn_isLoaded = true;
  }
  return iWMD0jesFlavorQCDdn_;
}

const float &VVV0Tree::iWMD1jesFlavorQCDdn() {
  if (not iWMD1jesFlavorQCDdn_isLoaded) {
    if (iWMD1jesFlavorQCDdn_branch != 0) {
      iWMD1jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesFlavorQCDdn_isLoaded = true;
  }
  return iWMD1jesFlavorQCDdn_;
}

const float &VVV0Tree::iWMD2jesFlavorQCDdn() {
  if (not iWMD2jesFlavorQCDdn_isLoaded) {
    if (iWMD2jesFlavorQCDdn_branch != 0) {
      iWMD2jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesFlavorQCDdn_isLoaded = true;
  }
  return iWMD2jesFlavorQCDdn_;
}

const float &VVV0Tree::iWMD3jesFlavorQCDdn() {
  if (not iWMD3jesFlavorQCDdn_isLoaded) {
    if (iWMD3jesFlavorQCDdn_branch != 0) {
      iWMD3jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesFlavorQCDdn_isLoaded = true;
  }
  return iWMD3jesFlavorQCDdn_;
}

const float &VVV0Tree::iWMD4jesFlavorQCDdn() {
  if (not iWMD4jesFlavorQCDdn_isLoaded) {
    if (iWMD4jesFlavorQCDdn_branch != 0) {
      iWMD4jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesFlavorQCDdn_isLoaded = true;
  }
  return iWMD4jesFlavorQCDdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesFlavorQCDdn() {
  if (not METjesFlavorQCDdn_isLoaded) {
    if (METjesFlavorQCDdn_branch != 0) {
      METjesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch METjesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    METjesFlavorQCDdn_isLoaded = true;
  }
  return *METjesFlavorQCDdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesFlavorQCDdn() {
  if (not NujesFlavorQCDdn_isLoaded) {
    if (NujesFlavorQCDdn_branch != 0) {
      NujesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch NujesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    NujesFlavorQCDdn_isLoaded = true;
  }
  return *NujesFlavorQCDdn_;
}

const int &VVV0Tree::NJjesFlavorQCDdn() {
  if (not NJjesFlavorQCDdn_isLoaded) {
    if (NJjesFlavorQCDdn_branch != 0) {
      NJjesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch NJjesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    NJjesFlavorQCDdn_isLoaded = true;
  }
  return NJjesFlavorQCDdn_;
}

const int &VVV0Tree::NbLoosejesFlavorQCDdn() {
  if (not NbLoosejesFlavorQCDdn_isLoaded) {
    if (NbLoosejesFlavorQCDdn_branch != 0) {
      NbLoosejesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesFlavorQCDdn_isLoaded = true;
  }
  return NbLoosejesFlavorQCDdn_;
}

const int &VVV0Tree::NbMediumjesFlavorQCDdn() {
  if (not NbMediumjesFlavorQCDdn_isLoaded) {
    if (NbMediumjesFlavorQCDdn_branch != 0) {
      NbMediumjesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesFlavorQCDdn_isLoaded = true;
  }
  return NbMediumjesFlavorQCDdn_;
}

const int &VVV0Tree::NbTightjesFlavorQCDdn() {
  if (not NbTightjesFlavorQCDdn_isLoaded) {
    if (NbTightjesFlavorQCDdn_branch != 0) {
      NbTightjesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    NbTightjesFlavorQCDdn_isLoaded = true;
  }
  return NbTightjesFlavorQCDdn_;
}

const int &VVV0Tree::NoORNbLoosejesFlavorQCDdn() {
  if (not NoORNbLoosejesFlavorQCDdn_isLoaded) {
    if (NoORNbLoosejesFlavorQCDdn_branch != 0) {
      NoORNbLoosejesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesFlavorQCDdn_isLoaded = true;
  }
  return NoORNbLoosejesFlavorQCDdn_;
}

const int &VVV0Tree::NoORNbMediumjesFlavorQCDdn() {
  if (not NoORNbMediumjesFlavorQCDdn_isLoaded) {
    if (NoORNbMediumjesFlavorQCDdn_branch != 0) {
      NoORNbMediumjesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesFlavorQCDdn_isLoaded = true;
  }
  return NoORNbMediumjesFlavorQCDdn_;
}

const int &VVV0Tree::NoORNbTightjesFlavorQCDdn() {
  if (not NoORNbTightjesFlavorQCDdn_isLoaded) {
    if (NoORNbTightjesFlavorQCDdn_branch != 0) {
      NoORNbTightjesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesFlavorQCDdn_isLoaded = true;
  }
  return NoORNbTightjesFlavorQCDdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesFlavorQCDdn() {
  if (not J0jesFlavorQCDdn_isLoaded) {
    if (J0jesFlavorQCDdn_branch != 0) {
      J0jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch J0jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    J0jesFlavorQCDdn_isLoaded = true;
  }
  return *J0jesFlavorQCDdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesFlavorQCDdn() {
  if (not J1jesFlavorQCDdn_isLoaded) {
    if (J1jesFlavorQCDdn_branch != 0) {
      J1jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch J1jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    J1jesFlavorQCDdn_isLoaded = true;
  }
  return *J1jesFlavorQCDdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesFlavorQCDdn() {
  if (not J2jesFlavorQCDdn_isLoaded) {
    if (J2jesFlavorQCDdn_branch != 0) {
      J2jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch J2jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    J2jesFlavorQCDdn_isLoaded = true;
  }
  return *J2jesFlavorQCDdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesFlavorQCDdn() {
  if (not J3jesFlavorQCDdn_isLoaded) {
    if (J3jesFlavorQCDdn_branch != 0) {
      J3jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch J3jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    J3jesFlavorQCDdn_isLoaded = true;
  }
  return *J3jesFlavorQCDdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesFlavorQCDdn() {
  if (not J4jesFlavorQCDdn_isLoaded) {
    if (J4jesFlavorQCDdn_branch != 0) {
      J4jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch J4jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    J4jesFlavorQCDdn_isLoaded = true;
  }
  return *J4jesFlavorQCDdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesFlavorQCDdn() {
  if (not J5jesFlavorQCDdn_isLoaded) {
    if (J5jesFlavorQCDdn_branch != 0) {
      J5jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch J5jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    J5jesFlavorQCDdn_isLoaded = true;
  }
  return *J5jesFlavorQCDdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesFlavorQCDdn() {
  if (not J6jesFlavorQCDdn_isLoaded) {
    if (J6jesFlavorQCDdn_branch != 0) {
      J6jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch J6jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    J6jesFlavorQCDdn_isLoaded = true;
  }
  return *J6jesFlavorQCDdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesFlavorQCDdn() {
  if (not J7jesFlavorQCDdn_isLoaded) {
    if (J7jesFlavorQCDdn_branch != 0) {
      J7jesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch J7jesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    J7jesFlavorQCDdn_isLoaded = true;
  }
  return *J7jesFlavorQCDdn_;
}

const vector<int> &VVV0Tree::NQJGenjesFlavorQCDdn() {
  if (not NQJGenjesFlavorQCDdn_isLoaded) {
    if (NQJGenjesFlavorQCDdn_branch != 0) {
      NQJGenjesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesFlavorQCDdn_isLoaded = true;
  }
  return *NQJGenjesFlavorQCDdn_;
}

const vector<int> &VVV0Tree::NBJGenjesFlavorQCDdn() {
  if (not NBJGenjesFlavorQCDdn_isLoaded) {
    if (NBJGenjesFlavorQCDdn_branch != 0) {
      NBJGenjesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesFlavorQCDdn_isLoaded = true;
  }
  return *NBJGenjesFlavorQCDdn_;
}

const vector<int> &VVV0Tree::NLJGenjesFlavorQCDdn() {
  if (not NLJGenjesFlavorQCDdn_isLoaded) {
    if (NLJGenjesFlavorQCDdn_branch != 0) {
      NLJGenjesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesFlavorQCDdn_isLoaded = true;
  }
  return *NLJGenjesFlavorQCDdn_;
}

const float &VVV0Tree::MVVXjesFlavorQCDdn() {
  if (not MVVXjesFlavorQCDdn_isLoaded) {
    if (MVVXjesFlavorQCDdn_branch != 0) {
      MVVXjesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    MVVXjesFlavorQCDdn_isLoaded = true;
  }
  return MVVXjesFlavorQCDdn_;
}

const float &VVV0Tree::PtVVXjesFlavorQCDdn() {
  if (not PtVVXjesFlavorQCDdn_isLoaded) {
    if (PtVVXjesFlavorQCDdn_branch != 0) {
      PtVVXjesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesFlavorQCDdn_isLoaded = true;
  }
  return PtVVXjesFlavorQCDdn_;
}

const float &VVV0Tree::HTjesFlavorQCDdn() {
  if (not HTjesFlavorQCDdn_isLoaded) {
    if (HTjesFlavorQCDdn_branch != 0) {
      HTjesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch HTjesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    HTjesFlavorQCDdn_isLoaded = true;
  }
  return HTjesFlavorQCDdn_;
}

const float &VVV0Tree::HTJjesFlavorQCDdn() {
  if (not HTJjesFlavorQCDdn_isLoaded) {
    if (HTJjesFlavorQCDdn_branch != 0) {
      HTJjesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch HTJjesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    HTJjesFlavorQCDdn_isLoaded = true;
  }
  return HTJjesFlavorQCDdn_;
}

const float &VVV0Tree::HTFJjesFlavorQCDdn() {
  if (not HTFJjesFlavorQCDdn_isLoaded) {
    if (HTFJjesFlavorQCDdn_branch != 0) {
      HTFJjesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    HTFJjesFlavorQCDdn_isLoaded = true;
  }
  return HTFJjesFlavorQCDdn_;
}

const float &VVV0Tree::SumPtFJjesFlavorQCDdn() {
  if (not SumPtFJjesFlavorQCDdn_isLoaded) {
    if (SumPtFJjesFlavorQCDdn_branch != 0) {
      SumPtFJjesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesFlavorQCDdn_isLoaded = true;
  }
  return SumPtFJjesFlavorQCDdn_;
}

const float &VVV0Tree::SumPtJjesFlavorQCDdn() {
  if (not SumPtJjesFlavorQCDdn_isLoaded) {
    if (SumPtJjesFlavorQCDdn_branch != 0) {
      SumPtJjesFlavorQCDdn_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesFlavorQCDdn_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesFlavorQCDdn_isLoaded = true;
  }
  return SumPtJjesFlavorQCDdn_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesTimePtEtaup() {
  if (not JsjesTimePtEtaup_isLoaded) {
    if (JsjesTimePtEtaup_branch != 0) {
      JsjesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch JsjesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    JsjesTimePtEtaup_isLoaded = true;
  }
  return *JsjesTimePtEtaup_;
}

const int &VVV0Tree::NFJjesTimePtEtaup() {
  if (not NFJjesTimePtEtaup_isLoaded) {
    if (NFJjesTimePtEtaup_branch != 0) {
      NFJjesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch NFJjesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    NFJjesTimePtEtaup_isLoaded = true;
  }
  return NFJjesTimePtEtaup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesTimePtEtaup() {
  if (not FJ0jesTimePtEtaup_isLoaded) {
    if (FJ0jesTimePtEtaup_branch != 0) {
      FJ0jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    FJ0jesTimePtEtaup_isLoaded = true;
  }
  return *FJ0jesTimePtEtaup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesTimePtEtaup() {
  if (not FJ1jesTimePtEtaup_isLoaded) {
    if (FJ1jesTimePtEtaup_branch != 0) {
      FJ1jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    FJ1jesTimePtEtaup_isLoaded = true;
  }
  return *FJ1jesTimePtEtaup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesTimePtEtaup() {
  if (not FJ2jesTimePtEtaup_isLoaded) {
    if (FJ2jesTimePtEtaup_branch != 0) {
      FJ2jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    FJ2jesTimePtEtaup_isLoaded = true;
  }
  return *FJ2jesTimePtEtaup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesTimePtEtaup() {
  if (not FJ3jesTimePtEtaup_isLoaded) {
    if (FJ3jesTimePtEtaup_branch != 0) {
      FJ3jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    FJ3jesTimePtEtaup_isLoaded = true;
  }
  return *FJ3jesTimePtEtaup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesTimePtEtaup() {
  if (not FJ4jesTimePtEtaup_isLoaded) {
    if (FJ4jesTimePtEtaup_branch != 0) {
      FJ4jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    FJ4jesTimePtEtaup_isLoaded = true;
  }
  return *FJ4jesTimePtEtaup_;
}

const float &VVV0Tree::VMD0jesTimePtEtaup() {
  if (not VMD0jesTimePtEtaup_isLoaded) {
    if (VMD0jesTimePtEtaup_branch != 0) {
      VMD0jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    VMD0jesTimePtEtaup_isLoaded = true;
  }
  return VMD0jesTimePtEtaup_;
}

const float &VVV0Tree::VMD1jesTimePtEtaup() {
  if (not VMD1jesTimePtEtaup_isLoaded) {
    if (VMD1jesTimePtEtaup_branch != 0) {
      VMD1jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    VMD1jesTimePtEtaup_isLoaded = true;
  }
  return VMD1jesTimePtEtaup_;
}

const float &VVV0Tree::VMD2jesTimePtEtaup() {
  if (not VMD2jesTimePtEtaup_isLoaded) {
    if (VMD2jesTimePtEtaup_branch != 0) {
      VMD2jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    VMD2jesTimePtEtaup_isLoaded = true;
  }
  return VMD2jesTimePtEtaup_;
}

const float &VVV0Tree::VMD3jesTimePtEtaup() {
  if (not VMD3jesTimePtEtaup_isLoaded) {
    if (VMD3jesTimePtEtaup_branch != 0) {
      VMD3jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    VMD3jesTimePtEtaup_isLoaded = true;
  }
  return VMD3jesTimePtEtaup_;
}

const float &VVV0Tree::VMD4jesTimePtEtaup() {
  if (not VMD4jesTimePtEtaup_isLoaded) {
    if (VMD4jesTimePtEtaup_branch != 0) {
      VMD4jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    VMD4jesTimePtEtaup_isLoaded = true;
  }
  return VMD4jesTimePtEtaup_;
}

const float &VVV0Tree::WMD0jesTimePtEtaup() {
  if (not WMD0jesTimePtEtaup_isLoaded) {
    if (WMD0jesTimePtEtaup_branch != 0) {
      WMD0jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    WMD0jesTimePtEtaup_isLoaded = true;
  }
  return WMD0jesTimePtEtaup_;
}

const float &VVV0Tree::WMD1jesTimePtEtaup() {
  if (not WMD1jesTimePtEtaup_isLoaded) {
    if (WMD1jesTimePtEtaup_branch != 0) {
      WMD1jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    WMD1jesTimePtEtaup_isLoaded = true;
  }
  return WMD1jesTimePtEtaup_;
}

const float &VVV0Tree::WMD2jesTimePtEtaup() {
  if (not WMD2jesTimePtEtaup_isLoaded) {
    if (WMD2jesTimePtEtaup_branch != 0) {
      WMD2jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    WMD2jesTimePtEtaup_isLoaded = true;
  }
  return WMD2jesTimePtEtaup_;
}

const float &VVV0Tree::WMD3jesTimePtEtaup() {
  if (not WMD3jesTimePtEtaup_isLoaded) {
    if (WMD3jesTimePtEtaup_branch != 0) {
      WMD3jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    WMD3jesTimePtEtaup_isLoaded = true;
  }
  return WMD3jesTimePtEtaup_;
}

const float &VVV0Tree::WMD4jesTimePtEtaup() {
  if (not WMD4jesTimePtEtaup_isLoaded) {
    if (WMD4jesTimePtEtaup_branch != 0) {
      WMD4jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    WMD4jesTimePtEtaup_isLoaded = true;
  }
  return WMD4jesTimePtEtaup_;
}

const int &VVV0Tree::NQGen0jesTimePtEtaup() {
  if (not NQGen0jesTimePtEtaup_isLoaded) {
    if (NQGen0jesTimePtEtaup_branch != 0) {
      NQGen0jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesTimePtEtaup_isLoaded = true;
  }
  return NQGen0jesTimePtEtaup_;
}

const int &VVV0Tree::NQGen1jesTimePtEtaup() {
  if (not NQGen1jesTimePtEtaup_isLoaded) {
    if (NQGen1jesTimePtEtaup_branch != 0) {
      NQGen1jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesTimePtEtaup_isLoaded = true;
  }
  return NQGen1jesTimePtEtaup_;
}

const int &VVV0Tree::NQGen2jesTimePtEtaup() {
  if (not NQGen2jesTimePtEtaup_isLoaded) {
    if (NQGen2jesTimePtEtaup_branch != 0) {
      NQGen2jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesTimePtEtaup_isLoaded = true;
  }
  return NQGen2jesTimePtEtaup_;
}

const int &VVV0Tree::NQGen3jesTimePtEtaup() {
  if (not NQGen3jesTimePtEtaup_isLoaded) {
    if (NQGen3jesTimePtEtaup_branch != 0) {
      NQGen3jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesTimePtEtaup_isLoaded = true;
  }
  return NQGen3jesTimePtEtaup_;
}

const int &VVV0Tree::NQGen4jesTimePtEtaup() {
  if (not NQGen4jesTimePtEtaup_isLoaded) {
    if (NQGen4jesTimePtEtaup_branch != 0) {
      NQGen4jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesTimePtEtaup_isLoaded = true;
  }
  return NQGen4jesTimePtEtaup_;
}

const int &VVV0Tree::NBGen0jesTimePtEtaup() {
  if (not NBGen0jesTimePtEtaup_isLoaded) {
    if (NBGen0jesTimePtEtaup_branch != 0) {
      NBGen0jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesTimePtEtaup_isLoaded = true;
  }
  return NBGen0jesTimePtEtaup_;
}

const int &VVV0Tree::NBGen1jesTimePtEtaup() {
  if (not NBGen1jesTimePtEtaup_isLoaded) {
    if (NBGen1jesTimePtEtaup_branch != 0) {
      NBGen1jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesTimePtEtaup_isLoaded = true;
  }
  return NBGen1jesTimePtEtaup_;
}

const int &VVV0Tree::NBGen2jesTimePtEtaup() {
  if (not NBGen2jesTimePtEtaup_isLoaded) {
    if (NBGen2jesTimePtEtaup_branch != 0) {
      NBGen2jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesTimePtEtaup_isLoaded = true;
  }
  return NBGen2jesTimePtEtaup_;
}

const int &VVV0Tree::NBGen3jesTimePtEtaup() {
  if (not NBGen3jesTimePtEtaup_isLoaded) {
    if (NBGen3jesTimePtEtaup_branch != 0) {
      NBGen3jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesTimePtEtaup_isLoaded = true;
  }
  return NBGen3jesTimePtEtaup_;
}

const int &VVV0Tree::NBGen4jesTimePtEtaup() {
  if (not NBGen4jesTimePtEtaup_isLoaded) {
    if (NBGen4jesTimePtEtaup_branch != 0) {
      NBGen4jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesTimePtEtaup_isLoaded = true;
  }
  return NBGen4jesTimePtEtaup_;
}

const int &VVV0Tree::NLGen0jesTimePtEtaup() {
  if (not NLGen0jesTimePtEtaup_isLoaded) {
    if (NLGen0jesTimePtEtaup_branch != 0) {
      NLGen0jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesTimePtEtaup_isLoaded = true;
  }
  return NLGen0jesTimePtEtaup_;
}

const int &VVV0Tree::NLGen1jesTimePtEtaup() {
  if (not NLGen1jesTimePtEtaup_isLoaded) {
    if (NLGen1jesTimePtEtaup_branch != 0) {
      NLGen1jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesTimePtEtaup_isLoaded = true;
  }
  return NLGen1jesTimePtEtaup_;
}

const int &VVV0Tree::NLGen2jesTimePtEtaup() {
  if (not NLGen2jesTimePtEtaup_isLoaded) {
    if (NLGen2jesTimePtEtaup_branch != 0) {
      NLGen2jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesTimePtEtaup_isLoaded = true;
  }
  return NLGen2jesTimePtEtaup_;
}

const int &VVV0Tree::NLGen3jesTimePtEtaup() {
  if (not NLGen3jesTimePtEtaup_isLoaded) {
    if (NLGen3jesTimePtEtaup_branch != 0) {
      NLGen3jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesTimePtEtaup_isLoaded = true;
  }
  return NLGen3jesTimePtEtaup_;
}

const int &VVV0Tree::NLGen4jesTimePtEtaup() {
  if (not NLGen4jesTimePtEtaup_isLoaded) {
    if (NLGen4jesTimePtEtaup_branch != 0) {
      NLGen4jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesTimePtEtaup_isLoaded = true;
  }
  return NLGen4jesTimePtEtaup_;
}

const int &VVV0Tree::NVQGen0jesTimePtEtaup() {
  if (not NVQGen0jesTimePtEtaup_isLoaded) {
    if (NVQGen0jesTimePtEtaup_branch != 0) {
      NVQGen0jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesTimePtEtaup_isLoaded = true;
  }
  return NVQGen0jesTimePtEtaup_;
}

const int &VVV0Tree::NVQGen1jesTimePtEtaup() {
  if (not NVQGen1jesTimePtEtaup_isLoaded) {
    if (NVQGen1jesTimePtEtaup_branch != 0) {
      NVQGen1jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesTimePtEtaup_isLoaded = true;
  }
  return NVQGen1jesTimePtEtaup_;
}

const int &VVV0Tree::NVQGen2jesTimePtEtaup() {
  if (not NVQGen2jesTimePtEtaup_isLoaded) {
    if (NVQGen2jesTimePtEtaup_branch != 0) {
      NVQGen2jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesTimePtEtaup_isLoaded = true;
  }
  return NVQGen2jesTimePtEtaup_;
}

const int &VVV0Tree::NVQGen3jesTimePtEtaup() {
  if (not NVQGen3jesTimePtEtaup_isLoaded) {
    if (NVQGen3jesTimePtEtaup_branch != 0) {
      NVQGen3jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesTimePtEtaup_isLoaded = true;
  }
  return NVQGen3jesTimePtEtaup_;
}

const int &VVV0Tree::NVQGen4jesTimePtEtaup() {
  if (not NVQGen4jesTimePtEtaup_isLoaded) {
    if (NVQGen4jesTimePtEtaup_branch != 0) {
      NVQGen4jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesTimePtEtaup_isLoaded = true;
  }
  return NVQGen4jesTimePtEtaup_;
}

const int &VVV0Tree::NiFJjesTimePtEtaup() {
  if (not NiFJjesTimePtEtaup_isLoaded) {
    if (NiFJjesTimePtEtaup_branch != 0) {
      NiFJjesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    NiFJjesTimePtEtaup_isLoaded = true;
  }
  return NiFJjesTimePtEtaup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesTimePtEtaup() {
  if (not iFJ0jesTimePtEtaup_isLoaded) {
    if (iFJ0jesTimePtEtaup_branch != 0) {
      iFJ0jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesTimePtEtaup_isLoaded = true;
  }
  return *iFJ0jesTimePtEtaup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesTimePtEtaup() {
  if (not iFJ1jesTimePtEtaup_isLoaded) {
    if (iFJ1jesTimePtEtaup_branch != 0) {
      iFJ1jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesTimePtEtaup_isLoaded = true;
  }
  return *iFJ1jesTimePtEtaup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesTimePtEtaup() {
  if (not iFJ2jesTimePtEtaup_isLoaded) {
    if (iFJ2jesTimePtEtaup_branch != 0) {
      iFJ2jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesTimePtEtaup_isLoaded = true;
  }
  return *iFJ2jesTimePtEtaup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesTimePtEtaup() {
  if (not iFJ3jesTimePtEtaup_isLoaded) {
    if (iFJ3jesTimePtEtaup_branch != 0) {
      iFJ3jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesTimePtEtaup_isLoaded = true;
  }
  return *iFJ3jesTimePtEtaup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesTimePtEtaup() {
  if (not iFJ4jesTimePtEtaup_isLoaded) {
    if (iFJ4jesTimePtEtaup_branch != 0) {
      iFJ4jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesTimePtEtaup_isLoaded = true;
  }
  return *iFJ4jesTimePtEtaup_;
}

const float &VVV0Tree::iVMD0jesTimePtEtaup() {
  if (not iVMD0jesTimePtEtaup_isLoaded) {
    if (iVMD0jesTimePtEtaup_branch != 0) {
      iVMD0jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesTimePtEtaup_isLoaded = true;
  }
  return iVMD0jesTimePtEtaup_;
}

const float &VVV0Tree::iVMD1jesTimePtEtaup() {
  if (not iVMD1jesTimePtEtaup_isLoaded) {
    if (iVMD1jesTimePtEtaup_branch != 0) {
      iVMD1jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesTimePtEtaup_isLoaded = true;
  }
  return iVMD1jesTimePtEtaup_;
}

const float &VVV0Tree::iVMD2jesTimePtEtaup() {
  if (not iVMD2jesTimePtEtaup_isLoaded) {
    if (iVMD2jesTimePtEtaup_branch != 0) {
      iVMD2jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesTimePtEtaup_isLoaded = true;
  }
  return iVMD2jesTimePtEtaup_;
}

const float &VVV0Tree::iVMD3jesTimePtEtaup() {
  if (not iVMD3jesTimePtEtaup_isLoaded) {
    if (iVMD3jesTimePtEtaup_branch != 0) {
      iVMD3jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesTimePtEtaup_isLoaded = true;
  }
  return iVMD3jesTimePtEtaup_;
}

const float &VVV0Tree::iVMD4jesTimePtEtaup() {
  if (not iVMD4jesTimePtEtaup_isLoaded) {
    if (iVMD4jesTimePtEtaup_branch != 0) {
      iVMD4jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesTimePtEtaup_isLoaded = true;
  }
  return iVMD4jesTimePtEtaup_;
}

const float &VVV0Tree::iWMD0jesTimePtEtaup() {
  if (not iWMD0jesTimePtEtaup_isLoaded) {
    if (iWMD0jesTimePtEtaup_branch != 0) {
      iWMD0jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesTimePtEtaup_isLoaded = true;
  }
  return iWMD0jesTimePtEtaup_;
}

const float &VVV0Tree::iWMD1jesTimePtEtaup() {
  if (not iWMD1jesTimePtEtaup_isLoaded) {
    if (iWMD1jesTimePtEtaup_branch != 0) {
      iWMD1jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesTimePtEtaup_isLoaded = true;
  }
  return iWMD1jesTimePtEtaup_;
}

const float &VVV0Tree::iWMD2jesTimePtEtaup() {
  if (not iWMD2jesTimePtEtaup_isLoaded) {
    if (iWMD2jesTimePtEtaup_branch != 0) {
      iWMD2jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesTimePtEtaup_isLoaded = true;
  }
  return iWMD2jesTimePtEtaup_;
}

const float &VVV0Tree::iWMD3jesTimePtEtaup() {
  if (not iWMD3jesTimePtEtaup_isLoaded) {
    if (iWMD3jesTimePtEtaup_branch != 0) {
      iWMD3jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesTimePtEtaup_isLoaded = true;
  }
  return iWMD3jesTimePtEtaup_;
}

const float &VVV0Tree::iWMD4jesTimePtEtaup() {
  if (not iWMD4jesTimePtEtaup_isLoaded) {
    if (iWMD4jesTimePtEtaup_branch != 0) {
      iWMD4jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesTimePtEtaup_isLoaded = true;
  }
  return iWMD4jesTimePtEtaup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesTimePtEtaup() {
  if (not METjesTimePtEtaup_isLoaded) {
    if (METjesTimePtEtaup_branch != 0) {
      METjesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch METjesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    METjesTimePtEtaup_isLoaded = true;
  }
  return *METjesTimePtEtaup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesTimePtEtaup() {
  if (not NujesTimePtEtaup_isLoaded) {
    if (NujesTimePtEtaup_branch != 0) {
      NujesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch NujesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    NujesTimePtEtaup_isLoaded = true;
  }
  return *NujesTimePtEtaup_;
}

const int &VVV0Tree::NJjesTimePtEtaup() {
  if (not NJjesTimePtEtaup_isLoaded) {
    if (NJjesTimePtEtaup_branch != 0) {
      NJjesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch NJjesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    NJjesTimePtEtaup_isLoaded = true;
  }
  return NJjesTimePtEtaup_;
}

const int &VVV0Tree::NbLoosejesTimePtEtaup() {
  if (not NbLoosejesTimePtEtaup_isLoaded) {
    if (NbLoosejesTimePtEtaup_branch != 0) {
      NbLoosejesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesTimePtEtaup_isLoaded = true;
  }
  return NbLoosejesTimePtEtaup_;
}

const int &VVV0Tree::NbMediumjesTimePtEtaup() {
  if (not NbMediumjesTimePtEtaup_isLoaded) {
    if (NbMediumjesTimePtEtaup_branch != 0) {
      NbMediumjesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesTimePtEtaup_isLoaded = true;
  }
  return NbMediumjesTimePtEtaup_;
}

const int &VVV0Tree::NbTightjesTimePtEtaup() {
  if (not NbTightjesTimePtEtaup_isLoaded) {
    if (NbTightjesTimePtEtaup_branch != 0) {
      NbTightjesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    NbTightjesTimePtEtaup_isLoaded = true;
  }
  return NbTightjesTimePtEtaup_;
}

const int &VVV0Tree::NoORNbLoosejesTimePtEtaup() {
  if (not NoORNbLoosejesTimePtEtaup_isLoaded) {
    if (NoORNbLoosejesTimePtEtaup_branch != 0) {
      NoORNbLoosejesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesTimePtEtaup_isLoaded = true;
  }
  return NoORNbLoosejesTimePtEtaup_;
}

const int &VVV0Tree::NoORNbMediumjesTimePtEtaup() {
  if (not NoORNbMediumjesTimePtEtaup_isLoaded) {
    if (NoORNbMediumjesTimePtEtaup_branch != 0) {
      NoORNbMediumjesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesTimePtEtaup_isLoaded = true;
  }
  return NoORNbMediumjesTimePtEtaup_;
}

const int &VVV0Tree::NoORNbTightjesTimePtEtaup() {
  if (not NoORNbTightjesTimePtEtaup_isLoaded) {
    if (NoORNbTightjesTimePtEtaup_branch != 0) {
      NoORNbTightjesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesTimePtEtaup_isLoaded = true;
  }
  return NoORNbTightjesTimePtEtaup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesTimePtEtaup() {
  if (not J0jesTimePtEtaup_isLoaded) {
    if (J0jesTimePtEtaup_branch != 0) {
      J0jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch J0jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    J0jesTimePtEtaup_isLoaded = true;
  }
  return *J0jesTimePtEtaup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesTimePtEtaup() {
  if (not J1jesTimePtEtaup_isLoaded) {
    if (J1jesTimePtEtaup_branch != 0) {
      J1jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch J1jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    J1jesTimePtEtaup_isLoaded = true;
  }
  return *J1jesTimePtEtaup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesTimePtEtaup() {
  if (not J2jesTimePtEtaup_isLoaded) {
    if (J2jesTimePtEtaup_branch != 0) {
      J2jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch J2jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    J2jesTimePtEtaup_isLoaded = true;
  }
  return *J2jesTimePtEtaup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesTimePtEtaup() {
  if (not J3jesTimePtEtaup_isLoaded) {
    if (J3jesTimePtEtaup_branch != 0) {
      J3jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch J3jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    J3jesTimePtEtaup_isLoaded = true;
  }
  return *J3jesTimePtEtaup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesTimePtEtaup() {
  if (not J4jesTimePtEtaup_isLoaded) {
    if (J4jesTimePtEtaup_branch != 0) {
      J4jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch J4jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    J4jesTimePtEtaup_isLoaded = true;
  }
  return *J4jesTimePtEtaup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesTimePtEtaup() {
  if (not J5jesTimePtEtaup_isLoaded) {
    if (J5jesTimePtEtaup_branch != 0) {
      J5jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch J5jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    J5jesTimePtEtaup_isLoaded = true;
  }
  return *J5jesTimePtEtaup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesTimePtEtaup() {
  if (not J6jesTimePtEtaup_isLoaded) {
    if (J6jesTimePtEtaup_branch != 0) {
      J6jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch J6jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    J6jesTimePtEtaup_isLoaded = true;
  }
  return *J6jesTimePtEtaup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesTimePtEtaup() {
  if (not J7jesTimePtEtaup_isLoaded) {
    if (J7jesTimePtEtaup_branch != 0) {
      J7jesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch J7jesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    J7jesTimePtEtaup_isLoaded = true;
  }
  return *J7jesTimePtEtaup_;
}

const vector<int> &VVV0Tree::NQJGenjesTimePtEtaup() {
  if (not NQJGenjesTimePtEtaup_isLoaded) {
    if (NQJGenjesTimePtEtaup_branch != 0) {
      NQJGenjesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesTimePtEtaup_isLoaded = true;
  }
  return *NQJGenjesTimePtEtaup_;
}

const vector<int> &VVV0Tree::NBJGenjesTimePtEtaup() {
  if (not NBJGenjesTimePtEtaup_isLoaded) {
    if (NBJGenjesTimePtEtaup_branch != 0) {
      NBJGenjesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesTimePtEtaup_isLoaded = true;
  }
  return *NBJGenjesTimePtEtaup_;
}

const vector<int> &VVV0Tree::NLJGenjesTimePtEtaup() {
  if (not NLJGenjesTimePtEtaup_isLoaded) {
    if (NLJGenjesTimePtEtaup_branch != 0) {
      NLJGenjesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesTimePtEtaup_isLoaded = true;
  }
  return *NLJGenjesTimePtEtaup_;
}

const float &VVV0Tree::MVVXjesTimePtEtaup() {
  if (not MVVXjesTimePtEtaup_isLoaded) {
    if (MVVXjesTimePtEtaup_branch != 0) {
      MVVXjesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    MVVXjesTimePtEtaup_isLoaded = true;
  }
  return MVVXjesTimePtEtaup_;
}

const float &VVV0Tree::PtVVXjesTimePtEtaup() {
  if (not PtVVXjesTimePtEtaup_isLoaded) {
    if (PtVVXjesTimePtEtaup_branch != 0) {
      PtVVXjesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesTimePtEtaup_isLoaded = true;
  }
  return PtVVXjesTimePtEtaup_;
}

const float &VVV0Tree::HTjesTimePtEtaup() {
  if (not HTjesTimePtEtaup_isLoaded) {
    if (HTjesTimePtEtaup_branch != 0) {
      HTjesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch HTjesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    HTjesTimePtEtaup_isLoaded = true;
  }
  return HTjesTimePtEtaup_;
}

const float &VVV0Tree::HTJjesTimePtEtaup() {
  if (not HTJjesTimePtEtaup_isLoaded) {
    if (HTJjesTimePtEtaup_branch != 0) {
      HTJjesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch HTJjesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    HTJjesTimePtEtaup_isLoaded = true;
  }
  return HTJjesTimePtEtaup_;
}

const float &VVV0Tree::HTFJjesTimePtEtaup() {
  if (not HTFJjesTimePtEtaup_isLoaded) {
    if (HTFJjesTimePtEtaup_branch != 0) {
      HTFJjesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    HTFJjesTimePtEtaup_isLoaded = true;
  }
  return HTFJjesTimePtEtaup_;
}

const float &VVV0Tree::SumPtFJjesTimePtEtaup() {
  if (not SumPtFJjesTimePtEtaup_isLoaded) {
    if (SumPtFJjesTimePtEtaup_branch != 0) {
      SumPtFJjesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesTimePtEtaup_isLoaded = true;
  }
  return SumPtFJjesTimePtEtaup_;
}

const float &VVV0Tree::SumPtJjesTimePtEtaup() {
  if (not SumPtJjesTimePtEtaup_isLoaded) {
    if (SumPtJjesTimePtEtaup_branch != 0) {
      SumPtJjesTimePtEtaup_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesTimePtEtaup_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesTimePtEtaup_isLoaded = true;
  }
  return SumPtJjesTimePtEtaup_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesTimePtEtadn() {
  if (not JsjesTimePtEtadn_isLoaded) {
    if (JsjesTimePtEtadn_branch != 0) {
      JsjesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch JsjesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    JsjesTimePtEtadn_isLoaded = true;
  }
  return *JsjesTimePtEtadn_;
}

const int &VVV0Tree::NFJjesTimePtEtadn() {
  if (not NFJjesTimePtEtadn_isLoaded) {
    if (NFJjesTimePtEtadn_branch != 0) {
      NFJjesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch NFJjesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    NFJjesTimePtEtadn_isLoaded = true;
  }
  return NFJjesTimePtEtadn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesTimePtEtadn() {
  if (not FJ0jesTimePtEtadn_isLoaded) {
    if (FJ0jesTimePtEtadn_branch != 0) {
      FJ0jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    FJ0jesTimePtEtadn_isLoaded = true;
  }
  return *FJ0jesTimePtEtadn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesTimePtEtadn() {
  if (not FJ1jesTimePtEtadn_isLoaded) {
    if (FJ1jesTimePtEtadn_branch != 0) {
      FJ1jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    FJ1jesTimePtEtadn_isLoaded = true;
  }
  return *FJ1jesTimePtEtadn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesTimePtEtadn() {
  if (not FJ2jesTimePtEtadn_isLoaded) {
    if (FJ2jesTimePtEtadn_branch != 0) {
      FJ2jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    FJ2jesTimePtEtadn_isLoaded = true;
  }
  return *FJ2jesTimePtEtadn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesTimePtEtadn() {
  if (not FJ3jesTimePtEtadn_isLoaded) {
    if (FJ3jesTimePtEtadn_branch != 0) {
      FJ3jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    FJ3jesTimePtEtadn_isLoaded = true;
  }
  return *FJ3jesTimePtEtadn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesTimePtEtadn() {
  if (not FJ4jesTimePtEtadn_isLoaded) {
    if (FJ4jesTimePtEtadn_branch != 0) {
      FJ4jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    FJ4jesTimePtEtadn_isLoaded = true;
  }
  return *FJ4jesTimePtEtadn_;
}

const float &VVV0Tree::VMD0jesTimePtEtadn() {
  if (not VMD0jesTimePtEtadn_isLoaded) {
    if (VMD0jesTimePtEtadn_branch != 0) {
      VMD0jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    VMD0jesTimePtEtadn_isLoaded = true;
  }
  return VMD0jesTimePtEtadn_;
}

const float &VVV0Tree::VMD1jesTimePtEtadn() {
  if (not VMD1jesTimePtEtadn_isLoaded) {
    if (VMD1jesTimePtEtadn_branch != 0) {
      VMD1jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    VMD1jesTimePtEtadn_isLoaded = true;
  }
  return VMD1jesTimePtEtadn_;
}

const float &VVV0Tree::VMD2jesTimePtEtadn() {
  if (not VMD2jesTimePtEtadn_isLoaded) {
    if (VMD2jesTimePtEtadn_branch != 0) {
      VMD2jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    VMD2jesTimePtEtadn_isLoaded = true;
  }
  return VMD2jesTimePtEtadn_;
}

const float &VVV0Tree::VMD3jesTimePtEtadn() {
  if (not VMD3jesTimePtEtadn_isLoaded) {
    if (VMD3jesTimePtEtadn_branch != 0) {
      VMD3jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    VMD3jesTimePtEtadn_isLoaded = true;
  }
  return VMD3jesTimePtEtadn_;
}

const float &VVV0Tree::VMD4jesTimePtEtadn() {
  if (not VMD4jesTimePtEtadn_isLoaded) {
    if (VMD4jesTimePtEtadn_branch != 0) {
      VMD4jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    VMD4jesTimePtEtadn_isLoaded = true;
  }
  return VMD4jesTimePtEtadn_;
}

const float &VVV0Tree::WMD0jesTimePtEtadn() {
  if (not WMD0jesTimePtEtadn_isLoaded) {
    if (WMD0jesTimePtEtadn_branch != 0) {
      WMD0jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    WMD0jesTimePtEtadn_isLoaded = true;
  }
  return WMD0jesTimePtEtadn_;
}

const float &VVV0Tree::WMD1jesTimePtEtadn() {
  if (not WMD1jesTimePtEtadn_isLoaded) {
    if (WMD1jesTimePtEtadn_branch != 0) {
      WMD1jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    WMD1jesTimePtEtadn_isLoaded = true;
  }
  return WMD1jesTimePtEtadn_;
}

const float &VVV0Tree::WMD2jesTimePtEtadn() {
  if (not WMD2jesTimePtEtadn_isLoaded) {
    if (WMD2jesTimePtEtadn_branch != 0) {
      WMD2jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    WMD2jesTimePtEtadn_isLoaded = true;
  }
  return WMD2jesTimePtEtadn_;
}

const float &VVV0Tree::WMD3jesTimePtEtadn() {
  if (not WMD3jesTimePtEtadn_isLoaded) {
    if (WMD3jesTimePtEtadn_branch != 0) {
      WMD3jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    WMD3jesTimePtEtadn_isLoaded = true;
  }
  return WMD3jesTimePtEtadn_;
}

const float &VVV0Tree::WMD4jesTimePtEtadn() {
  if (not WMD4jesTimePtEtadn_isLoaded) {
    if (WMD4jesTimePtEtadn_branch != 0) {
      WMD4jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    WMD4jesTimePtEtadn_isLoaded = true;
  }
  return WMD4jesTimePtEtadn_;
}

const int &VVV0Tree::NQGen0jesTimePtEtadn() {
  if (not NQGen0jesTimePtEtadn_isLoaded) {
    if (NQGen0jesTimePtEtadn_branch != 0) {
      NQGen0jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesTimePtEtadn_isLoaded = true;
  }
  return NQGen0jesTimePtEtadn_;
}

const int &VVV0Tree::NQGen1jesTimePtEtadn() {
  if (not NQGen1jesTimePtEtadn_isLoaded) {
    if (NQGen1jesTimePtEtadn_branch != 0) {
      NQGen1jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesTimePtEtadn_isLoaded = true;
  }
  return NQGen1jesTimePtEtadn_;
}

const int &VVV0Tree::NQGen2jesTimePtEtadn() {
  if (not NQGen2jesTimePtEtadn_isLoaded) {
    if (NQGen2jesTimePtEtadn_branch != 0) {
      NQGen2jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesTimePtEtadn_isLoaded = true;
  }
  return NQGen2jesTimePtEtadn_;
}

const int &VVV0Tree::NQGen3jesTimePtEtadn() {
  if (not NQGen3jesTimePtEtadn_isLoaded) {
    if (NQGen3jesTimePtEtadn_branch != 0) {
      NQGen3jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesTimePtEtadn_isLoaded = true;
  }
  return NQGen3jesTimePtEtadn_;
}

const int &VVV0Tree::NQGen4jesTimePtEtadn() {
  if (not NQGen4jesTimePtEtadn_isLoaded) {
    if (NQGen4jesTimePtEtadn_branch != 0) {
      NQGen4jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesTimePtEtadn_isLoaded = true;
  }
  return NQGen4jesTimePtEtadn_;
}

const int &VVV0Tree::NBGen0jesTimePtEtadn() {
  if (not NBGen0jesTimePtEtadn_isLoaded) {
    if (NBGen0jesTimePtEtadn_branch != 0) {
      NBGen0jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesTimePtEtadn_isLoaded = true;
  }
  return NBGen0jesTimePtEtadn_;
}

const int &VVV0Tree::NBGen1jesTimePtEtadn() {
  if (not NBGen1jesTimePtEtadn_isLoaded) {
    if (NBGen1jesTimePtEtadn_branch != 0) {
      NBGen1jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesTimePtEtadn_isLoaded = true;
  }
  return NBGen1jesTimePtEtadn_;
}

const int &VVV0Tree::NBGen2jesTimePtEtadn() {
  if (not NBGen2jesTimePtEtadn_isLoaded) {
    if (NBGen2jesTimePtEtadn_branch != 0) {
      NBGen2jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesTimePtEtadn_isLoaded = true;
  }
  return NBGen2jesTimePtEtadn_;
}

const int &VVV0Tree::NBGen3jesTimePtEtadn() {
  if (not NBGen3jesTimePtEtadn_isLoaded) {
    if (NBGen3jesTimePtEtadn_branch != 0) {
      NBGen3jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesTimePtEtadn_isLoaded = true;
  }
  return NBGen3jesTimePtEtadn_;
}

const int &VVV0Tree::NBGen4jesTimePtEtadn() {
  if (not NBGen4jesTimePtEtadn_isLoaded) {
    if (NBGen4jesTimePtEtadn_branch != 0) {
      NBGen4jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesTimePtEtadn_isLoaded = true;
  }
  return NBGen4jesTimePtEtadn_;
}

const int &VVV0Tree::NLGen0jesTimePtEtadn() {
  if (not NLGen0jesTimePtEtadn_isLoaded) {
    if (NLGen0jesTimePtEtadn_branch != 0) {
      NLGen0jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesTimePtEtadn_isLoaded = true;
  }
  return NLGen0jesTimePtEtadn_;
}

const int &VVV0Tree::NLGen1jesTimePtEtadn() {
  if (not NLGen1jesTimePtEtadn_isLoaded) {
    if (NLGen1jesTimePtEtadn_branch != 0) {
      NLGen1jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesTimePtEtadn_isLoaded = true;
  }
  return NLGen1jesTimePtEtadn_;
}

const int &VVV0Tree::NLGen2jesTimePtEtadn() {
  if (not NLGen2jesTimePtEtadn_isLoaded) {
    if (NLGen2jesTimePtEtadn_branch != 0) {
      NLGen2jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesTimePtEtadn_isLoaded = true;
  }
  return NLGen2jesTimePtEtadn_;
}

const int &VVV0Tree::NLGen3jesTimePtEtadn() {
  if (not NLGen3jesTimePtEtadn_isLoaded) {
    if (NLGen3jesTimePtEtadn_branch != 0) {
      NLGen3jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesTimePtEtadn_isLoaded = true;
  }
  return NLGen3jesTimePtEtadn_;
}

const int &VVV0Tree::NLGen4jesTimePtEtadn() {
  if (not NLGen4jesTimePtEtadn_isLoaded) {
    if (NLGen4jesTimePtEtadn_branch != 0) {
      NLGen4jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesTimePtEtadn_isLoaded = true;
  }
  return NLGen4jesTimePtEtadn_;
}

const int &VVV0Tree::NVQGen0jesTimePtEtadn() {
  if (not NVQGen0jesTimePtEtadn_isLoaded) {
    if (NVQGen0jesTimePtEtadn_branch != 0) {
      NVQGen0jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesTimePtEtadn_isLoaded = true;
  }
  return NVQGen0jesTimePtEtadn_;
}

const int &VVV0Tree::NVQGen1jesTimePtEtadn() {
  if (not NVQGen1jesTimePtEtadn_isLoaded) {
    if (NVQGen1jesTimePtEtadn_branch != 0) {
      NVQGen1jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesTimePtEtadn_isLoaded = true;
  }
  return NVQGen1jesTimePtEtadn_;
}

const int &VVV0Tree::NVQGen2jesTimePtEtadn() {
  if (not NVQGen2jesTimePtEtadn_isLoaded) {
    if (NVQGen2jesTimePtEtadn_branch != 0) {
      NVQGen2jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesTimePtEtadn_isLoaded = true;
  }
  return NVQGen2jesTimePtEtadn_;
}

const int &VVV0Tree::NVQGen3jesTimePtEtadn() {
  if (not NVQGen3jesTimePtEtadn_isLoaded) {
    if (NVQGen3jesTimePtEtadn_branch != 0) {
      NVQGen3jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesTimePtEtadn_isLoaded = true;
  }
  return NVQGen3jesTimePtEtadn_;
}

const int &VVV0Tree::NVQGen4jesTimePtEtadn() {
  if (not NVQGen4jesTimePtEtadn_isLoaded) {
    if (NVQGen4jesTimePtEtadn_branch != 0) {
      NVQGen4jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesTimePtEtadn_isLoaded = true;
  }
  return NVQGen4jesTimePtEtadn_;
}

const int &VVV0Tree::NiFJjesTimePtEtadn() {
  if (not NiFJjesTimePtEtadn_isLoaded) {
    if (NiFJjesTimePtEtadn_branch != 0) {
      NiFJjesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    NiFJjesTimePtEtadn_isLoaded = true;
  }
  return NiFJjesTimePtEtadn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesTimePtEtadn() {
  if (not iFJ0jesTimePtEtadn_isLoaded) {
    if (iFJ0jesTimePtEtadn_branch != 0) {
      iFJ0jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesTimePtEtadn_isLoaded = true;
  }
  return *iFJ0jesTimePtEtadn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesTimePtEtadn() {
  if (not iFJ1jesTimePtEtadn_isLoaded) {
    if (iFJ1jesTimePtEtadn_branch != 0) {
      iFJ1jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesTimePtEtadn_isLoaded = true;
  }
  return *iFJ1jesTimePtEtadn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesTimePtEtadn() {
  if (not iFJ2jesTimePtEtadn_isLoaded) {
    if (iFJ2jesTimePtEtadn_branch != 0) {
      iFJ2jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesTimePtEtadn_isLoaded = true;
  }
  return *iFJ2jesTimePtEtadn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesTimePtEtadn() {
  if (not iFJ3jesTimePtEtadn_isLoaded) {
    if (iFJ3jesTimePtEtadn_branch != 0) {
      iFJ3jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesTimePtEtadn_isLoaded = true;
  }
  return *iFJ3jesTimePtEtadn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesTimePtEtadn() {
  if (not iFJ4jesTimePtEtadn_isLoaded) {
    if (iFJ4jesTimePtEtadn_branch != 0) {
      iFJ4jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesTimePtEtadn_isLoaded = true;
  }
  return *iFJ4jesTimePtEtadn_;
}

const float &VVV0Tree::iVMD0jesTimePtEtadn() {
  if (not iVMD0jesTimePtEtadn_isLoaded) {
    if (iVMD0jesTimePtEtadn_branch != 0) {
      iVMD0jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesTimePtEtadn_isLoaded = true;
  }
  return iVMD0jesTimePtEtadn_;
}

const float &VVV0Tree::iVMD1jesTimePtEtadn() {
  if (not iVMD1jesTimePtEtadn_isLoaded) {
    if (iVMD1jesTimePtEtadn_branch != 0) {
      iVMD1jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesTimePtEtadn_isLoaded = true;
  }
  return iVMD1jesTimePtEtadn_;
}

const float &VVV0Tree::iVMD2jesTimePtEtadn() {
  if (not iVMD2jesTimePtEtadn_isLoaded) {
    if (iVMD2jesTimePtEtadn_branch != 0) {
      iVMD2jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesTimePtEtadn_isLoaded = true;
  }
  return iVMD2jesTimePtEtadn_;
}

const float &VVV0Tree::iVMD3jesTimePtEtadn() {
  if (not iVMD3jesTimePtEtadn_isLoaded) {
    if (iVMD3jesTimePtEtadn_branch != 0) {
      iVMD3jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesTimePtEtadn_isLoaded = true;
  }
  return iVMD3jesTimePtEtadn_;
}

const float &VVV0Tree::iVMD4jesTimePtEtadn() {
  if (not iVMD4jesTimePtEtadn_isLoaded) {
    if (iVMD4jesTimePtEtadn_branch != 0) {
      iVMD4jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesTimePtEtadn_isLoaded = true;
  }
  return iVMD4jesTimePtEtadn_;
}

const float &VVV0Tree::iWMD0jesTimePtEtadn() {
  if (not iWMD0jesTimePtEtadn_isLoaded) {
    if (iWMD0jesTimePtEtadn_branch != 0) {
      iWMD0jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesTimePtEtadn_isLoaded = true;
  }
  return iWMD0jesTimePtEtadn_;
}

const float &VVV0Tree::iWMD1jesTimePtEtadn() {
  if (not iWMD1jesTimePtEtadn_isLoaded) {
    if (iWMD1jesTimePtEtadn_branch != 0) {
      iWMD1jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesTimePtEtadn_isLoaded = true;
  }
  return iWMD1jesTimePtEtadn_;
}

const float &VVV0Tree::iWMD2jesTimePtEtadn() {
  if (not iWMD2jesTimePtEtadn_isLoaded) {
    if (iWMD2jesTimePtEtadn_branch != 0) {
      iWMD2jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesTimePtEtadn_isLoaded = true;
  }
  return iWMD2jesTimePtEtadn_;
}

const float &VVV0Tree::iWMD3jesTimePtEtadn() {
  if (not iWMD3jesTimePtEtadn_isLoaded) {
    if (iWMD3jesTimePtEtadn_branch != 0) {
      iWMD3jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesTimePtEtadn_isLoaded = true;
  }
  return iWMD3jesTimePtEtadn_;
}

const float &VVV0Tree::iWMD4jesTimePtEtadn() {
  if (not iWMD4jesTimePtEtadn_isLoaded) {
    if (iWMD4jesTimePtEtadn_branch != 0) {
      iWMD4jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesTimePtEtadn_isLoaded = true;
  }
  return iWMD4jesTimePtEtadn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesTimePtEtadn() {
  if (not METjesTimePtEtadn_isLoaded) {
    if (METjesTimePtEtadn_branch != 0) {
      METjesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch METjesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    METjesTimePtEtadn_isLoaded = true;
  }
  return *METjesTimePtEtadn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesTimePtEtadn() {
  if (not NujesTimePtEtadn_isLoaded) {
    if (NujesTimePtEtadn_branch != 0) {
      NujesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch NujesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    NujesTimePtEtadn_isLoaded = true;
  }
  return *NujesTimePtEtadn_;
}

const int &VVV0Tree::NJjesTimePtEtadn() {
  if (not NJjesTimePtEtadn_isLoaded) {
    if (NJjesTimePtEtadn_branch != 0) {
      NJjesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch NJjesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    NJjesTimePtEtadn_isLoaded = true;
  }
  return NJjesTimePtEtadn_;
}

const int &VVV0Tree::NbLoosejesTimePtEtadn() {
  if (not NbLoosejesTimePtEtadn_isLoaded) {
    if (NbLoosejesTimePtEtadn_branch != 0) {
      NbLoosejesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesTimePtEtadn_isLoaded = true;
  }
  return NbLoosejesTimePtEtadn_;
}

const int &VVV0Tree::NbMediumjesTimePtEtadn() {
  if (not NbMediumjesTimePtEtadn_isLoaded) {
    if (NbMediumjesTimePtEtadn_branch != 0) {
      NbMediumjesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesTimePtEtadn_isLoaded = true;
  }
  return NbMediumjesTimePtEtadn_;
}

const int &VVV0Tree::NbTightjesTimePtEtadn() {
  if (not NbTightjesTimePtEtadn_isLoaded) {
    if (NbTightjesTimePtEtadn_branch != 0) {
      NbTightjesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    NbTightjesTimePtEtadn_isLoaded = true;
  }
  return NbTightjesTimePtEtadn_;
}

const int &VVV0Tree::NoORNbLoosejesTimePtEtadn() {
  if (not NoORNbLoosejesTimePtEtadn_isLoaded) {
    if (NoORNbLoosejesTimePtEtadn_branch != 0) {
      NoORNbLoosejesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesTimePtEtadn_isLoaded = true;
  }
  return NoORNbLoosejesTimePtEtadn_;
}

const int &VVV0Tree::NoORNbMediumjesTimePtEtadn() {
  if (not NoORNbMediumjesTimePtEtadn_isLoaded) {
    if (NoORNbMediumjesTimePtEtadn_branch != 0) {
      NoORNbMediumjesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesTimePtEtadn_isLoaded = true;
  }
  return NoORNbMediumjesTimePtEtadn_;
}

const int &VVV0Tree::NoORNbTightjesTimePtEtadn() {
  if (not NoORNbTightjesTimePtEtadn_isLoaded) {
    if (NoORNbTightjesTimePtEtadn_branch != 0) {
      NoORNbTightjesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesTimePtEtadn_isLoaded = true;
  }
  return NoORNbTightjesTimePtEtadn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesTimePtEtadn() {
  if (not J0jesTimePtEtadn_isLoaded) {
    if (J0jesTimePtEtadn_branch != 0) {
      J0jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch J0jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    J0jesTimePtEtadn_isLoaded = true;
  }
  return *J0jesTimePtEtadn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesTimePtEtadn() {
  if (not J1jesTimePtEtadn_isLoaded) {
    if (J1jesTimePtEtadn_branch != 0) {
      J1jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch J1jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    J1jesTimePtEtadn_isLoaded = true;
  }
  return *J1jesTimePtEtadn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesTimePtEtadn() {
  if (not J2jesTimePtEtadn_isLoaded) {
    if (J2jesTimePtEtadn_branch != 0) {
      J2jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch J2jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    J2jesTimePtEtadn_isLoaded = true;
  }
  return *J2jesTimePtEtadn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesTimePtEtadn() {
  if (not J3jesTimePtEtadn_isLoaded) {
    if (J3jesTimePtEtadn_branch != 0) {
      J3jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch J3jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    J3jesTimePtEtadn_isLoaded = true;
  }
  return *J3jesTimePtEtadn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesTimePtEtadn() {
  if (not J4jesTimePtEtadn_isLoaded) {
    if (J4jesTimePtEtadn_branch != 0) {
      J4jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch J4jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    J4jesTimePtEtadn_isLoaded = true;
  }
  return *J4jesTimePtEtadn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesTimePtEtadn() {
  if (not J5jesTimePtEtadn_isLoaded) {
    if (J5jesTimePtEtadn_branch != 0) {
      J5jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch J5jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    J5jesTimePtEtadn_isLoaded = true;
  }
  return *J5jesTimePtEtadn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesTimePtEtadn() {
  if (not J6jesTimePtEtadn_isLoaded) {
    if (J6jesTimePtEtadn_branch != 0) {
      J6jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch J6jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    J6jesTimePtEtadn_isLoaded = true;
  }
  return *J6jesTimePtEtadn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesTimePtEtadn() {
  if (not J7jesTimePtEtadn_isLoaded) {
    if (J7jesTimePtEtadn_branch != 0) {
      J7jesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch J7jesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    J7jesTimePtEtadn_isLoaded = true;
  }
  return *J7jesTimePtEtadn_;
}

const vector<int> &VVV0Tree::NQJGenjesTimePtEtadn() {
  if (not NQJGenjesTimePtEtadn_isLoaded) {
    if (NQJGenjesTimePtEtadn_branch != 0) {
      NQJGenjesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesTimePtEtadn_isLoaded = true;
  }
  return *NQJGenjesTimePtEtadn_;
}

const vector<int> &VVV0Tree::NBJGenjesTimePtEtadn() {
  if (not NBJGenjesTimePtEtadn_isLoaded) {
    if (NBJGenjesTimePtEtadn_branch != 0) {
      NBJGenjesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesTimePtEtadn_isLoaded = true;
  }
  return *NBJGenjesTimePtEtadn_;
}

const vector<int> &VVV0Tree::NLJGenjesTimePtEtadn() {
  if (not NLJGenjesTimePtEtadn_isLoaded) {
    if (NLJGenjesTimePtEtadn_branch != 0) {
      NLJGenjesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesTimePtEtadn_isLoaded = true;
  }
  return *NLJGenjesTimePtEtadn_;
}

const float &VVV0Tree::MVVXjesTimePtEtadn() {
  if (not MVVXjesTimePtEtadn_isLoaded) {
    if (MVVXjesTimePtEtadn_branch != 0) {
      MVVXjesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    MVVXjesTimePtEtadn_isLoaded = true;
  }
  return MVVXjesTimePtEtadn_;
}

const float &VVV0Tree::PtVVXjesTimePtEtadn() {
  if (not PtVVXjesTimePtEtadn_isLoaded) {
    if (PtVVXjesTimePtEtadn_branch != 0) {
      PtVVXjesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesTimePtEtadn_isLoaded = true;
  }
  return PtVVXjesTimePtEtadn_;
}

const float &VVV0Tree::HTjesTimePtEtadn() {
  if (not HTjesTimePtEtadn_isLoaded) {
    if (HTjesTimePtEtadn_branch != 0) {
      HTjesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch HTjesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    HTjesTimePtEtadn_isLoaded = true;
  }
  return HTjesTimePtEtadn_;
}

const float &VVV0Tree::HTJjesTimePtEtadn() {
  if (not HTJjesTimePtEtadn_isLoaded) {
    if (HTJjesTimePtEtadn_branch != 0) {
      HTJjesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch HTJjesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    HTJjesTimePtEtadn_isLoaded = true;
  }
  return HTJjesTimePtEtadn_;
}

const float &VVV0Tree::HTFJjesTimePtEtadn() {
  if (not HTFJjesTimePtEtadn_isLoaded) {
    if (HTFJjesTimePtEtadn_branch != 0) {
      HTFJjesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    HTFJjesTimePtEtadn_isLoaded = true;
  }
  return HTFJjesTimePtEtadn_;
}

const float &VVV0Tree::SumPtFJjesTimePtEtadn() {
  if (not SumPtFJjesTimePtEtadn_isLoaded) {
    if (SumPtFJjesTimePtEtadn_branch != 0) {
      SumPtFJjesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesTimePtEtadn_isLoaded = true;
  }
  return SumPtFJjesTimePtEtadn_;
}

const float &VVV0Tree::SumPtJjesTimePtEtadn() {
  if (not SumPtJjesTimePtEtadn_isLoaded) {
    if (SumPtJjesTimePtEtadn_branch != 0) {
      SumPtJjesTimePtEtadn_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesTimePtEtadn_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesTimePtEtadn_isLoaded = true;
  }
  return SumPtJjesTimePtEtadn_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesRelativeJEREC1up() {
  if (not JsjesRelativeJEREC1up_isLoaded) {
    if (JsjesRelativeJEREC1up_branch != 0) {
      JsjesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch JsjesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    JsjesRelativeJEREC1up_isLoaded = true;
  }
  return *JsjesRelativeJEREC1up_;
}

const int &VVV0Tree::NFJjesRelativeJEREC1up() {
  if (not NFJjesRelativeJEREC1up_isLoaded) {
    if (NFJjesRelativeJEREC1up_branch != 0) {
      NFJjesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch NFJjesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    NFJjesRelativeJEREC1up_isLoaded = true;
  }
  return NFJjesRelativeJEREC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesRelativeJEREC1up() {
  if (not FJ0jesRelativeJEREC1up_isLoaded) {
    if (FJ0jesRelativeJEREC1up_branch != 0) {
      FJ0jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    FJ0jesRelativeJEREC1up_isLoaded = true;
  }
  return *FJ0jesRelativeJEREC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesRelativeJEREC1up() {
  if (not FJ1jesRelativeJEREC1up_isLoaded) {
    if (FJ1jesRelativeJEREC1up_branch != 0) {
      FJ1jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    FJ1jesRelativeJEREC1up_isLoaded = true;
  }
  return *FJ1jesRelativeJEREC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesRelativeJEREC1up() {
  if (not FJ2jesRelativeJEREC1up_isLoaded) {
    if (FJ2jesRelativeJEREC1up_branch != 0) {
      FJ2jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    FJ2jesRelativeJEREC1up_isLoaded = true;
  }
  return *FJ2jesRelativeJEREC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesRelativeJEREC1up() {
  if (not FJ3jesRelativeJEREC1up_isLoaded) {
    if (FJ3jesRelativeJEREC1up_branch != 0) {
      FJ3jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    FJ3jesRelativeJEREC1up_isLoaded = true;
  }
  return *FJ3jesRelativeJEREC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesRelativeJEREC1up() {
  if (not FJ4jesRelativeJEREC1up_isLoaded) {
    if (FJ4jesRelativeJEREC1up_branch != 0) {
      FJ4jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    FJ4jesRelativeJEREC1up_isLoaded = true;
  }
  return *FJ4jesRelativeJEREC1up_;
}

const float &VVV0Tree::VMD0jesRelativeJEREC1up() {
  if (not VMD0jesRelativeJEREC1up_isLoaded) {
    if (VMD0jesRelativeJEREC1up_branch != 0) {
      VMD0jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    VMD0jesRelativeJEREC1up_isLoaded = true;
  }
  return VMD0jesRelativeJEREC1up_;
}

const float &VVV0Tree::VMD1jesRelativeJEREC1up() {
  if (not VMD1jesRelativeJEREC1up_isLoaded) {
    if (VMD1jesRelativeJEREC1up_branch != 0) {
      VMD1jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    VMD1jesRelativeJEREC1up_isLoaded = true;
  }
  return VMD1jesRelativeJEREC1up_;
}

const float &VVV0Tree::VMD2jesRelativeJEREC1up() {
  if (not VMD2jesRelativeJEREC1up_isLoaded) {
    if (VMD2jesRelativeJEREC1up_branch != 0) {
      VMD2jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    VMD2jesRelativeJEREC1up_isLoaded = true;
  }
  return VMD2jesRelativeJEREC1up_;
}

const float &VVV0Tree::VMD3jesRelativeJEREC1up() {
  if (not VMD3jesRelativeJEREC1up_isLoaded) {
    if (VMD3jesRelativeJEREC1up_branch != 0) {
      VMD3jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    VMD3jesRelativeJEREC1up_isLoaded = true;
  }
  return VMD3jesRelativeJEREC1up_;
}

const float &VVV0Tree::VMD4jesRelativeJEREC1up() {
  if (not VMD4jesRelativeJEREC1up_isLoaded) {
    if (VMD4jesRelativeJEREC1up_branch != 0) {
      VMD4jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    VMD4jesRelativeJEREC1up_isLoaded = true;
  }
  return VMD4jesRelativeJEREC1up_;
}

const float &VVV0Tree::WMD0jesRelativeJEREC1up() {
  if (not WMD0jesRelativeJEREC1up_isLoaded) {
    if (WMD0jesRelativeJEREC1up_branch != 0) {
      WMD0jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    WMD0jesRelativeJEREC1up_isLoaded = true;
  }
  return WMD0jesRelativeJEREC1up_;
}

const float &VVV0Tree::WMD1jesRelativeJEREC1up() {
  if (not WMD1jesRelativeJEREC1up_isLoaded) {
    if (WMD1jesRelativeJEREC1up_branch != 0) {
      WMD1jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    WMD1jesRelativeJEREC1up_isLoaded = true;
  }
  return WMD1jesRelativeJEREC1up_;
}

const float &VVV0Tree::WMD2jesRelativeJEREC1up() {
  if (not WMD2jesRelativeJEREC1up_isLoaded) {
    if (WMD2jesRelativeJEREC1up_branch != 0) {
      WMD2jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    WMD2jesRelativeJEREC1up_isLoaded = true;
  }
  return WMD2jesRelativeJEREC1up_;
}

const float &VVV0Tree::WMD3jesRelativeJEREC1up() {
  if (not WMD3jesRelativeJEREC1up_isLoaded) {
    if (WMD3jesRelativeJEREC1up_branch != 0) {
      WMD3jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    WMD3jesRelativeJEREC1up_isLoaded = true;
  }
  return WMD3jesRelativeJEREC1up_;
}

const float &VVV0Tree::WMD4jesRelativeJEREC1up() {
  if (not WMD4jesRelativeJEREC1up_isLoaded) {
    if (WMD4jesRelativeJEREC1up_branch != 0) {
      WMD4jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    WMD4jesRelativeJEREC1up_isLoaded = true;
  }
  return WMD4jesRelativeJEREC1up_;
}

const int &VVV0Tree::NQGen0jesRelativeJEREC1up() {
  if (not NQGen0jesRelativeJEREC1up_isLoaded) {
    if (NQGen0jesRelativeJEREC1up_branch != 0) {
      NQGen0jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesRelativeJEREC1up_isLoaded = true;
  }
  return NQGen0jesRelativeJEREC1up_;
}

const int &VVV0Tree::NQGen1jesRelativeJEREC1up() {
  if (not NQGen1jesRelativeJEREC1up_isLoaded) {
    if (NQGen1jesRelativeJEREC1up_branch != 0) {
      NQGen1jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesRelativeJEREC1up_isLoaded = true;
  }
  return NQGen1jesRelativeJEREC1up_;
}

const int &VVV0Tree::NQGen2jesRelativeJEREC1up() {
  if (not NQGen2jesRelativeJEREC1up_isLoaded) {
    if (NQGen2jesRelativeJEREC1up_branch != 0) {
      NQGen2jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesRelativeJEREC1up_isLoaded = true;
  }
  return NQGen2jesRelativeJEREC1up_;
}

const int &VVV0Tree::NQGen3jesRelativeJEREC1up() {
  if (not NQGen3jesRelativeJEREC1up_isLoaded) {
    if (NQGen3jesRelativeJEREC1up_branch != 0) {
      NQGen3jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesRelativeJEREC1up_isLoaded = true;
  }
  return NQGen3jesRelativeJEREC1up_;
}

const int &VVV0Tree::NQGen4jesRelativeJEREC1up() {
  if (not NQGen4jesRelativeJEREC1up_isLoaded) {
    if (NQGen4jesRelativeJEREC1up_branch != 0) {
      NQGen4jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesRelativeJEREC1up_isLoaded = true;
  }
  return NQGen4jesRelativeJEREC1up_;
}

const int &VVV0Tree::NBGen0jesRelativeJEREC1up() {
  if (not NBGen0jesRelativeJEREC1up_isLoaded) {
    if (NBGen0jesRelativeJEREC1up_branch != 0) {
      NBGen0jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesRelativeJEREC1up_isLoaded = true;
  }
  return NBGen0jesRelativeJEREC1up_;
}

const int &VVV0Tree::NBGen1jesRelativeJEREC1up() {
  if (not NBGen1jesRelativeJEREC1up_isLoaded) {
    if (NBGen1jesRelativeJEREC1up_branch != 0) {
      NBGen1jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesRelativeJEREC1up_isLoaded = true;
  }
  return NBGen1jesRelativeJEREC1up_;
}

const int &VVV0Tree::NBGen2jesRelativeJEREC1up() {
  if (not NBGen2jesRelativeJEREC1up_isLoaded) {
    if (NBGen2jesRelativeJEREC1up_branch != 0) {
      NBGen2jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesRelativeJEREC1up_isLoaded = true;
  }
  return NBGen2jesRelativeJEREC1up_;
}

const int &VVV0Tree::NBGen3jesRelativeJEREC1up() {
  if (not NBGen3jesRelativeJEREC1up_isLoaded) {
    if (NBGen3jesRelativeJEREC1up_branch != 0) {
      NBGen3jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesRelativeJEREC1up_isLoaded = true;
  }
  return NBGen3jesRelativeJEREC1up_;
}

const int &VVV0Tree::NBGen4jesRelativeJEREC1up() {
  if (not NBGen4jesRelativeJEREC1up_isLoaded) {
    if (NBGen4jesRelativeJEREC1up_branch != 0) {
      NBGen4jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesRelativeJEREC1up_isLoaded = true;
  }
  return NBGen4jesRelativeJEREC1up_;
}

const int &VVV0Tree::NLGen0jesRelativeJEREC1up() {
  if (not NLGen0jesRelativeJEREC1up_isLoaded) {
    if (NLGen0jesRelativeJEREC1up_branch != 0) {
      NLGen0jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesRelativeJEREC1up_isLoaded = true;
  }
  return NLGen0jesRelativeJEREC1up_;
}

const int &VVV0Tree::NLGen1jesRelativeJEREC1up() {
  if (not NLGen1jesRelativeJEREC1up_isLoaded) {
    if (NLGen1jesRelativeJEREC1up_branch != 0) {
      NLGen1jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesRelativeJEREC1up_isLoaded = true;
  }
  return NLGen1jesRelativeJEREC1up_;
}

const int &VVV0Tree::NLGen2jesRelativeJEREC1up() {
  if (not NLGen2jesRelativeJEREC1up_isLoaded) {
    if (NLGen2jesRelativeJEREC1up_branch != 0) {
      NLGen2jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesRelativeJEREC1up_isLoaded = true;
  }
  return NLGen2jesRelativeJEREC1up_;
}

const int &VVV0Tree::NLGen3jesRelativeJEREC1up() {
  if (not NLGen3jesRelativeJEREC1up_isLoaded) {
    if (NLGen3jesRelativeJEREC1up_branch != 0) {
      NLGen3jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesRelativeJEREC1up_isLoaded = true;
  }
  return NLGen3jesRelativeJEREC1up_;
}

const int &VVV0Tree::NLGen4jesRelativeJEREC1up() {
  if (not NLGen4jesRelativeJEREC1up_isLoaded) {
    if (NLGen4jesRelativeJEREC1up_branch != 0) {
      NLGen4jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesRelativeJEREC1up_isLoaded = true;
  }
  return NLGen4jesRelativeJEREC1up_;
}

const int &VVV0Tree::NVQGen0jesRelativeJEREC1up() {
  if (not NVQGen0jesRelativeJEREC1up_isLoaded) {
    if (NVQGen0jesRelativeJEREC1up_branch != 0) {
      NVQGen0jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesRelativeJEREC1up_isLoaded = true;
  }
  return NVQGen0jesRelativeJEREC1up_;
}

const int &VVV0Tree::NVQGen1jesRelativeJEREC1up() {
  if (not NVQGen1jesRelativeJEREC1up_isLoaded) {
    if (NVQGen1jesRelativeJEREC1up_branch != 0) {
      NVQGen1jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesRelativeJEREC1up_isLoaded = true;
  }
  return NVQGen1jesRelativeJEREC1up_;
}

const int &VVV0Tree::NVQGen2jesRelativeJEREC1up() {
  if (not NVQGen2jesRelativeJEREC1up_isLoaded) {
    if (NVQGen2jesRelativeJEREC1up_branch != 0) {
      NVQGen2jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesRelativeJEREC1up_isLoaded = true;
  }
  return NVQGen2jesRelativeJEREC1up_;
}

const int &VVV0Tree::NVQGen3jesRelativeJEREC1up() {
  if (not NVQGen3jesRelativeJEREC1up_isLoaded) {
    if (NVQGen3jesRelativeJEREC1up_branch != 0) {
      NVQGen3jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesRelativeJEREC1up_isLoaded = true;
  }
  return NVQGen3jesRelativeJEREC1up_;
}

const int &VVV0Tree::NVQGen4jesRelativeJEREC1up() {
  if (not NVQGen4jesRelativeJEREC1up_isLoaded) {
    if (NVQGen4jesRelativeJEREC1up_branch != 0) {
      NVQGen4jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesRelativeJEREC1up_isLoaded = true;
  }
  return NVQGen4jesRelativeJEREC1up_;
}

const int &VVV0Tree::NiFJjesRelativeJEREC1up() {
  if (not NiFJjesRelativeJEREC1up_isLoaded) {
    if (NiFJjesRelativeJEREC1up_branch != 0) {
      NiFJjesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    NiFJjesRelativeJEREC1up_isLoaded = true;
  }
  return NiFJjesRelativeJEREC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesRelativeJEREC1up() {
  if (not iFJ0jesRelativeJEREC1up_isLoaded) {
    if (iFJ0jesRelativeJEREC1up_branch != 0) {
      iFJ0jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesRelativeJEREC1up_isLoaded = true;
  }
  return *iFJ0jesRelativeJEREC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesRelativeJEREC1up() {
  if (not iFJ1jesRelativeJEREC1up_isLoaded) {
    if (iFJ1jesRelativeJEREC1up_branch != 0) {
      iFJ1jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesRelativeJEREC1up_isLoaded = true;
  }
  return *iFJ1jesRelativeJEREC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesRelativeJEREC1up() {
  if (not iFJ2jesRelativeJEREC1up_isLoaded) {
    if (iFJ2jesRelativeJEREC1up_branch != 0) {
      iFJ2jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesRelativeJEREC1up_isLoaded = true;
  }
  return *iFJ2jesRelativeJEREC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesRelativeJEREC1up() {
  if (not iFJ3jesRelativeJEREC1up_isLoaded) {
    if (iFJ3jesRelativeJEREC1up_branch != 0) {
      iFJ3jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesRelativeJEREC1up_isLoaded = true;
  }
  return *iFJ3jesRelativeJEREC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesRelativeJEREC1up() {
  if (not iFJ4jesRelativeJEREC1up_isLoaded) {
    if (iFJ4jesRelativeJEREC1up_branch != 0) {
      iFJ4jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesRelativeJEREC1up_isLoaded = true;
  }
  return *iFJ4jesRelativeJEREC1up_;
}

const float &VVV0Tree::iVMD0jesRelativeJEREC1up() {
  if (not iVMD0jesRelativeJEREC1up_isLoaded) {
    if (iVMD0jesRelativeJEREC1up_branch != 0) {
      iVMD0jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesRelativeJEREC1up_isLoaded = true;
  }
  return iVMD0jesRelativeJEREC1up_;
}

const float &VVV0Tree::iVMD1jesRelativeJEREC1up() {
  if (not iVMD1jesRelativeJEREC1up_isLoaded) {
    if (iVMD1jesRelativeJEREC1up_branch != 0) {
      iVMD1jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesRelativeJEREC1up_isLoaded = true;
  }
  return iVMD1jesRelativeJEREC1up_;
}

const float &VVV0Tree::iVMD2jesRelativeJEREC1up() {
  if (not iVMD2jesRelativeJEREC1up_isLoaded) {
    if (iVMD2jesRelativeJEREC1up_branch != 0) {
      iVMD2jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesRelativeJEREC1up_isLoaded = true;
  }
  return iVMD2jesRelativeJEREC1up_;
}

const float &VVV0Tree::iVMD3jesRelativeJEREC1up() {
  if (not iVMD3jesRelativeJEREC1up_isLoaded) {
    if (iVMD3jesRelativeJEREC1up_branch != 0) {
      iVMD3jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesRelativeJEREC1up_isLoaded = true;
  }
  return iVMD3jesRelativeJEREC1up_;
}

const float &VVV0Tree::iVMD4jesRelativeJEREC1up() {
  if (not iVMD4jesRelativeJEREC1up_isLoaded) {
    if (iVMD4jesRelativeJEREC1up_branch != 0) {
      iVMD4jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesRelativeJEREC1up_isLoaded = true;
  }
  return iVMD4jesRelativeJEREC1up_;
}

const float &VVV0Tree::iWMD0jesRelativeJEREC1up() {
  if (not iWMD0jesRelativeJEREC1up_isLoaded) {
    if (iWMD0jesRelativeJEREC1up_branch != 0) {
      iWMD0jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesRelativeJEREC1up_isLoaded = true;
  }
  return iWMD0jesRelativeJEREC1up_;
}

const float &VVV0Tree::iWMD1jesRelativeJEREC1up() {
  if (not iWMD1jesRelativeJEREC1up_isLoaded) {
    if (iWMD1jesRelativeJEREC1up_branch != 0) {
      iWMD1jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesRelativeJEREC1up_isLoaded = true;
  }
  return iWMD1jesRelativeJEREC1up_;
}

const float &VVV0Tree::iWMD2jesRelativeJEREC1up() {
  if (not iWMD2jesRelativeJEREC1up_isLoaded) {
    if (iWMD2jesRelativeJEREC1up_branch != 0) {
      iWMD2jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesRelativeJEREC1up_isLoaded = true;
  }
  return iWMD2jesRelativeJEREC1up_;
}

const float &VVV0Tree::iWMD3jesRelativeJEREC1up() {
  if (not iWMD3jesRelativeJEREC1up_isLoaded) {
    if (iWMD3jesRelativeJEREC1up_branch != 0) {
      iWMD3jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesRelativeJEREC1up_isLoaded = true;
  }
  return iWMD3jesRelativeJEREC1up_;
}

const float &VVV0Tree::iWMD4jesRelativeJEREC1up() {
  if (not iWMD4jesRelativeJEREC1up_isLoaded) {
    if (iWMD4jesRelativeJEREC1up_branch != 0) {
      iWMD4jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesRelativeJEREC1up_isLoaded = true;
  }
  return iWMD4jesRelativeJEREC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesRelativeJEREC1up() {
  if (not METjesRelativeJEREC1up_isLoaded) {
    if (METjesRelativeJEREC1up_branch != 0) {
      METjesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch METjesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    METjesRelativeJEREC1up_isLoaded = true;
  }
  return *METjesRelativeJEREC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesRelativeJEREC1up() {
  if (not NujesRelativeJEREC1up_isLoaded) {
    if (NujesRelativeJEREC1up_branch != 0) {
      NujesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch NujesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    NujesRelativeJEREC1up_isLoaded = true;
  }
  return *NujesRelativeJEREC1up_;
}

const int &VVV0Tree::NJjesRelativeJEREC1up() {
  if (not NJjesRelativeJEREC1up_isLoaded) {
    if (NJjesRelativeJEREC1up_branch != 0) {
      NJjesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch NJjesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    NJjesRelativeJEREC1up_isLoaded = true;
  }
  return NJjesRelativeJEREC1up_;
}

const int &VVV0Tree::NbLoosejesRelativeJEREC1up() {
  if (not NbLoosejesRelativeJEREC1up_isLoaded) {
    if (NbLoosejesRelativeJEREC1up_branch != 0) {
      NbLoosejesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesRelativeJEREC1up_isLoaded = true;
  }
  return NbLoosejesRelativeJEREC1up_;
}

const int &VVV0Tree::NbMediumjesRelativeJEREC1up() {
  if (not NbMediumjesRelativeJEREC1up_isLoaded) {
    if (NbMediumjesRelativeJEREC1up_branch != 0) {
      NbMediumjesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesRelativeJEREC1up_isLoaded = true;
  }
  return NbMediumjesRelativeJEREC1up_;
}

const int &VVV0Tree::NbTightjesRelativeJEREC1up() {
  if (not NbTightjesRelativeJEREC1up_isLoaded) {
    if (NbTightjesRelativeJEREC1up_branch != 0) {
      NbTightjesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    NbTightjesRelativeJEREC1up_isLoaded = true;
  }
  return NbTightjesRelativeJEREC1up_;
}

const int &VVV0Tree::NoORNbLoosejesRelativeJEREC1up() {
  if (not NoORNbLoosejesRelativeJEREC1up_isLoaded) {
    if (NoORNbLoosejesRelativeJEREC1up_branch != 0) {
      NoORNbLoosejesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesRelativeJEREC1up_isLoaded = true;
  }
  return NoORNbLoosejesRelativeJEREC1up_;
}

const int &VVV0Tree::NoORNbMediumjesRelativeJEREC1up() {
  if (not NoORNbMediumjesRelativeJEREC1up_isLoaded) {
    if (NoORNbMediumjesRelativeJEREC1up_branch != 0) {
      NoORNbMediumjesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesRelativeJEREC1up_isLoaded = true;
  }
  return NoORNbMediumjesRelativeJEREC1up_;
}

const int &VVV0Tree::NoORNbTightjesRelativeJEREC1up() {
  if (not NoORNbTightjesRelativeJEREC1up_isLoaded) {
    if (NoORNbTightjesRelativeJEREC1up_branch != 0) {
      NoORNbTightjesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesRelativeJEREC1up_isLoaded = true;
  }
  return NoORNbTightjesRelativeJEREC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesRelativeJEREC1up() {
  if (not J0jesRelativeJEREC1up_isLoaded) {
    if (J0jesRelativeJEREC1up_branch != 0) {
      J0jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch J0jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    J0jesRelativeJEREC1up_isLoaded = true;
  }
  return *J0jesRelativeJEREC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesRelativeJEREC1up() {
  if (not J1jesRelativeJEREC1up_isLoaded) {
    if (J1jesRelativeJEREC1up_branch != 0) {
      J1jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch J1jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    J1jesRelativeJEREC1up_isLoaded = true;
  }
  return *J1jesRelativeJEREC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesRelativeJEREC1up() {
  if (not J2jesRelativeJEREC1up_isLoaded) {
    if (J2jesRelativeJEREC1up_branch != 0) {
      J2jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch J2jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    J2jesRelativeJEREC1up_isLoaded = true;
  }
  return *J2jesRelativeJEREC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesRelativeJEREC1up() {
  if (not J3jesRelativeJEREC1up_isLoaded) {
    if (J3jesRelativeJEREC1up_branch != 0) {
      J3jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch J3jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    J3jesRelativeJEREC1up_isLoaded = true;
  }
  return *J3jesRelativeJEREC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesRelativeJEREC1up() {
  if (not J4jesRelativeJEREC1up_isLoaded) {
    if (J4jesRelativeJEREC1up_branch != 0) {
      J4jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch J4jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    J4jesRelativeJEREC1up_isLoaded = true;
  }
  return *J4jesRelativeJEREC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesRelativeJEREC1up() {
  if (not J5jesRelativeJEREC1up_isLoaded) {
    if (J5jesRelativeJEREC1up_branch != 0) {
      J5jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch J5jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    J5jesRelativeJEREC1up_isLoaded = true;
  }
  return *J5jesRelativeJEREC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesRelativeJEREC1up() {
  if (not J6jesRelativeJEREC1up_isLoaded) {
    if (J6jesRelativeJEREC1up_branch != 0) {
      J6jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch J6jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    J6jesRelativeJEREC1up_isLoaded = true;
  }
  return *J6jesRelativeJEREC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesRelativeJEREC1up() {
  if (not J7jesRelativeJEREC1up_isLoaded) {
    if (J7jesRelativeJEREC1up_branch != 0) {
      J7jesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch J7jesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    J7jesRelativeJEREC1up_isLoaded = true;
  }
  return *J7jesRelativeJEREC1up_;
}

const vector<int> &VVV0Tree::NQJGenjesRelativeJEREC1up() {
  if (not NQJGenjesRelativeJEREC1up_isLoaded) {
    if (NQJGenjesRelativeJEREC1up_branch != 0) {
      NQJGenjesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesRelativeJEREC1up_isLoaded = true;
  }
  return *NQJGenjesRelativeJEREC1up_;
}

const vector<int> &VVV0Tree::NBJGenjesRelativeJEREC1up() {
  if (not NBJGenjesRelativeJEREC1up_isLoaded) {
    if (NBJGenjesRelativeJEREC1up_branch != 0) {
      NBJGenjesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesRelativeJEREC1up_isLoaded = true;
  }
  return *NBJGenjesRelativeJEREC1up_;
}

const vector<int> &VVV0Tree::NLJGenjesRelativeJEREC1up() {
  if (not NLJGenjesRelativeJEREC1up_isLoaded) {
    if (NLJGenjesRelativeJEREC1up_branch != 0) {
      NLJGenjesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesRelativeJEREC1up_isLoaded = true;
  }
  return *NLJGenjesRelativeJEREC1up_;
}

const float &VVV0Tree::MVVXjesRelativeJEREC1up() {
  if (not MVVXjesRelativeJEREC1up_isLoaded) {
    if (MVVXjesRelativeJEREC1up_branch != 0) {
      MVVXjesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    MVVXjesRelativeJEREC1up_isLoaded = true;
  }
  return MVVXjesRelativeJEREC1up_;
}

const float &VVV0Tree::PtVVXjesRelativeJEREC1up() {
  if (not PtVVXjesRelativeJEREC1up_isLoaded) {
    if (PtVVXjesRelativeJEREC1up_branch != 0) {
      PtVVXjesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesRelativeJEREC1up_isLoaded = true;
  }
  return PtVVXjesRelativeJEREC1up_;
}

const float &VVV0Tree::HTjesRelativeJEREC1up() {
  if (not HTjesRelativeJEREC1up_isLoaded) {
    if (HTjesRelativeJEREC1up_branch != 0) {
      HTjesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch HTjesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    HTjesRelativeJEREC1up_isLoaded = true;
  }
  return HTjesRelativeJEREC1up_;
}

const float &VVV0Tree::HTJjesRelativeJEREC1up() {
  if (not HTJjesRelativeJEREC1up_isLoaded) {
    if (HTJjesRelativeJEREC1up_branch != 0) {
      HTJjesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch HTJjesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    HTJjesRelativeJEREC1up_isLoaded = true;
  }
  return HTJjesRelativeJEREC1up_;
}

const float &VVV0Tree::HTFJjesRelativeJEREC1up() {
  if (not HTFJjesRelativeJEREC1up_isLoaded) {
    if (HTFJjesRelativeJEREC1up_branch != 0) {
      HTFJjesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    HTFJjesRelativeJEREC1up_isLoaded = true;
  }
  return HTFJjesRelativeJEREC1up_;
}

const float &VVV0Tree::SumPtFJjesRelativeJEREC1up() {
  if (not SumPtFJjesRelativeJEREC1up_isLoaded) {
    if (SumPtFJjesRelativeJEREC1up_branch != 0) {
      SumPtFJjesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesRelativeJEREC1up_isLoaded = true;
  }
  return SumPtFJjesRelativeJEREC1up_;
}

const float &VVV0Tree::SumPtJjesRelativeJEREC1up() {
  if (not SumPtJjesRelativeJEREC1up_isLoaded) {
    if (SumPtJjesRelativeJEREC1up_branch != 0) {
      SumPtJjesRelativeJEREC1up_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesRelativeJEREC1up_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesRelativeJEREC1up_isLoaded = true;
  }
  return SumPtJjesRelativeJEREC1up_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesRelativeJEREC1dn() {
  if (not JsjesRelativeJEREC1dn_isLoaded) {
    if (JsjesRelativeJEREC1dn_branch != 0) {
      JsjesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch JsjesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    JsjesRelativeJEREC1dn_isLoaded = true;
  }
  return *JsjesRelativeJEREC1dn_;
}

const int &VVV0Tree::NFJjesRelativeJEREC1dn() {
  if (not NFJjesRelativeJEREC1dn_isLoaded) {
    if (NFJjesRelativeJEREC1dn_branch != 0) {
      NFJjesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch NFJjesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    NFJjesRelativeJEREC1dn_isLoaded = true;
  }
  return NFJjesRelativeJEREC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesRelativeJEREC1dn() {
  if (not FJ0jesRelativeJEREC1dn_isLoaded) {
    if (FJ0jesRelativeJEREC1dn_branch != 0) {
      FJ0jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    FJ0jesRelativeJEREC1dn_isLoaded = true;
  }
  return *FJ0jesRelativeJEREC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesRelativeJEREC1dn() {
  if (not FJ1jesRelativeJEREC1dn_isLoaded) {
    if (FJ1jesRelativeJEREC1dn_branch != 0) {
      FJ1jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    FJ1jesRelativeJEREC1dn_isLoaded = true;
  }
  return *FJ1jesRelativeJEREC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesRelativeJEREC1dn() {
  if (not FJ2jesRelativeJEREC1dn_isLoaded) {
    if (FJ2jesRelativeJEREC1dn_branch != 0) {
      FJ2jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    FJ2jesRelativeJEREC1dn_isLoaded = true;
  }
  return *FJ2jesRelativeJEREC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesRelativeJEREC1dn() {
  if (not FJ3jesRelativeJEREC1dn_isLoaded) {
    if (FJ3jesRelativeJEREC1dn_branch != 0) {
      FJ3jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    FJ3jesRelativeJEREC1dn_isLoaded = true;
  }
  return *FJ3jesRelativeJEREC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesRelativeJEREC1dn() {
  if (not FJ4jesRelativeJEREC1dn_isLoaded) {
    if (FJ4jesRelativeJEREC1dn_branch != 0) {
      FJ4jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    FJ4jesRelativeJEREC1dn_isLoaded = true;
  }
  return *FJ4jesRelativeJEREC1dn_;
}

const float &VVV0Tree::VMD0jesRelativeJEREC1dn() {
  if (not VMD0jesRelativeJEREC1dn_isLoaded) {
    if (VMD0jesRelativeJEREC1dn_branch != 0) {
      VMD0jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    VMD0jesRelativeJEREC1dn_isLoaded = true;
  }
  return VMD0jesRelativeJEREC1dn_;
}

const float &VVV0Tree::VMD1jesRelativeJEREC1dn() {
  if (not VMD1jesRelativeJEREC1dn_isLoaded) {
    if (VMD1jesRelativeJEREC1dn_branch != 0) {
      VMD1jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    VMD1jesRelativeJEREC1dn_isLoaded = true;
  }
  return VMD1jesRelativeJEREC1dn_;
}

const float &VVV0Tree::VMD2jesRelativeJEREC1dn() {
  if (not VMD2jesRelativeJEREC1dn_isLoaded) {
    if (VMD2jesRelativeJEREC1dn_branch != 0) {
      VMD2jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    VMD2jesRelativeJEREC1dn_isLoaded = true;
  }
  return VMD2jesRelativeJEREC1dn_;
}

const float &VVV0Tree::VMD3jesRelativeJEREC1dn() {
  if (not VMD3jesRelativeJEREC1dn_isLoaded) {
    if (VMD3jesRelativeJEREC1dn_branch != 0) {
      VMD3jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    VMD3jesRelativeJEREC1dn_isLoaded = true;
  }
  return VMD3jesRelativeJEREC1dn_;
}

const float &VVV0Tree::VMD4jesRelativeJEREC1dn() {
  if (not VMD4jesRelativeJEREC1dn_isLoaded) {
    if (VMD4jesRelativeJEREC1dn_branch != 0) {
      VMD4jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    VMD4jesRelativeJEREC1dn_isLoaded = true;
  }
  return VMD4jesRelativeJEREC1dn_;
}

const float &VVV0Tree::WMD0jesRelativeJEREC1dn() {
  if (not WMD0jesRelativeJEREC1dn_isLoaded) {
    if (WMD0jesRelativeJEREC1dn_branch != 0) {
      WMD0jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    WMD0jesRelativeJEREC1dn_isLoaded = true;
  }
  return WMD0jesRelativeJEREC1dn_;
}

const float &VVV0Tree::WMD1jesRelativeJEREC1dn() {
  if (not WMD1jesRelativeJEREC1dn_isLoaded) {
    if (WMD1jesRelativeJEREC1dn_branch != 0) {
      WMD1jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    WMD1jesRelativeJEREC1dn_isLoaded = true;
  }
  return WMD1jesRelativeJEREC1dn_;
}

const float &VVV0Tree::WMD2jesRelativeJEREC1dn() {
  if (not WMD2jesRelativeJEREC1dn_isLoaded) {
    if (WMD2jesRelativeJEREC1dn_branch != 0) {
      WMD2jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    WMD2jesRelativeJEREC1dn_isLoaded = true;
  }
  return WMD2jesRelativeJEREC1dn_;
}

const float &VVV0Tree::WMD3jesRelativeJEREC1dn() {
  if (not WMD3jesRelativeJEREC1dn_isLoaded) {
    if (WMD3jesRelativeJEREC1dn_branch != 0) {
      WMD3jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    WMD3jesRelativeJEREC1dn_isLoaded = true;
  }
  return WMD3jesRelativeJEREC1dn_;
}

const float &VVV0Tree::WMD4jesRelativeJEREC1dn() {
  if (not WMD4jesRelativeJEREC1dn_isLoaded) {
    if (WMD4jesRelativeJEREC1dn_branch != 0) {
      WMD4jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    WMD4jesRelativeJEREC1dn_isLoaded = true;
  }
  return WMD4jesRelativeJEREC1dn_;
}

const int &VVV0Tree::NQGen0jesRelativeJEREC1dn() {
  if (not NQGen0jesRelativeJEREC1dn_isLoaded) {
    if (NQGen0jesRelativeJEREC1dn_branch != 0) {
      NQGen0jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesRelativeJEREC1dn_isLoaded = true;
  }
  return NQGen0jesRelativeJEREC1dn_;
}

const int &VVV0Tree::NQGen1jesRelativeJEREC1dn() {
  if (not NQGen1jesRelativeJEREC1dn_isLoaded) {
    if (NQGen1jesRelativeJEREC1dn_branch != 0) {
      NQGen1jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesRelativeJEREC1dn_isLoaded = true;
  }
  return NQGen1jesRelativeJEREC1dn_;
}

const int &VVV0Tree::NQGen2jesRelativeJEREC1dn() {
  if (not NQGen2jesRelativeJEREC1dn_isLoaded) {
    if (NQGen2jesRelativeJEREC1dn_branch != 0) {
      NQGen2jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesRelativeJEREC1dn_isLoaded = true;
  }
  return NQGen2jesRelativeJEREC1dn_;
}

const int &VVV0Tree::NQGen3jesRelativeJEREC1dn() {
  if (not NQGen3jesRelativeJEREC1dn_isLoaded) {
    if (NQGen3jesRelativeJEREC1dn_branch != 0) {
      NQGen3jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesRelativeJEREC1dn_isLoaded = true;
  }
  return NQGen3jesRelativeJEREC1dn_;
}

const int &VVV0Tree::NQGen4jesRelativeJEREC1dn() {
  if (not NQGen4jesRelativeJEREC1dn_isLoaded) {
    if (NQGen4jesRelativeJEREC1dn_branch != 0) {
      NQGen4jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesRelativeJEREC1dn_isLoaded = true;
  }
  return NQGen4jesRelativeJEREC1dn_;
}

const int &VVV0Tree::NBGen0jesRelativeJEREC1dn() {
  if (not NBGen0jesRelativeJEREC1dn_isLoaded) {
    if (NBGen0jesRelativeJEREC1dn_branch != 0) {
      NBGen0jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesRelativeJEREC1dn_isLoaded = true;
  }
  return NBGen0jesRelativeJEREC1dn_;
}

const int &VVV0Tree::NBGen1jesRelativeJEREC1dn() {
  if (not NBGen1jesRelativeJEREC1dn_isLoaded) {
    if (NBGen1jesRelativeJEREC1dn_branch != 0) {
      NBGen1jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesRelativeJEREC1dn_isLoaded = true;
  }
  return NBGen1jesRelativeJEREC1dn_;
}

const int &VVV0Tree::NBGen2jesRelativeJEREC1dn() {
  if (not NBGen2jesRelativeJEREC1dn_isLoaded) {
    if (NBGen2jesRelativeJEREC1dn_branch != 0) {
      NBGen2jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesRelativeJEREC1dn_isLoaded = true;
  }
  return NBGen2jesRelativeJEREC1dn_;
}

const int &VVV0Tree::NBGen3jesRelativeJEREC1dn() {
  if (not NBGen3jesRelativeJEREC1dn_isLoaded) {
    if (NBGen3jesRelativeJEREC1dn_branch != 0) {
      NBGen3jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesRelativeJEREC1dn_isLoaded = true;
  }
  return NBGen3jesRelativeJEREC1dn_;
}

const int &VVV0Tree::NBGen4jesRelativeJEREC1dn() {
  if (not NBGen4jesRelativeJEREC1dn_isLoaded) {
    if (NBGen4jesRelativeJEREC1dn_branch != 0) {
      NBGen4jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesRelativeJEREC1dn_isLoaded = true;
  }
  return NBGen4jesRelativeJEREC1dn_;
}

const int &VVV0Tree::NLGen0jesRelativeJEREC1dn() {
  if (not NLGen0jesRelativeJEREC1dn_isLoaded) {
    if (NLGen0jesRelativeJEREC1dn_branch != 0) {
      NLGen0jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesRelativeJEREC1dn_isLoaded = true;
  }
  return NLGen0jesRelativeJEREC1dn_;
}

const int &VVV0Tree::NLGen1jesRelativeJEREC1dn() {
  if (not NLGen1jesRelativeJEREC1dn_isLoaded) {
    if (NLGen1jesRelativeJEREC1dn_branch != 0) {
      NLGen1jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesRelativeJEREC1dn_isLoaded = true;
  }
  return NLGen1jesRelativeJEREC1dn_;
}

const int &VVV0Tree::NLGen2jesRelativeJEREC1dn() {
  if (not NLGen2jesRelativeJEREC1dn_isLoaded) {
    if (NLGen2jesRelativeJEREC1dn_branch != 0) {
      NLGen2jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesRelativeJEREC1dn_isLoaded = true;
  }
  return NLGen2jesRelativeJEREC1dn_;
}

const int &VVV0Tree::NLGen3jesRelativeJEREC1dn() {
  if (not NLGen3jesRelativeJEREC1dn_isLoaded) {
    if (NLGen3jesRelativeJEREC1dn_branch != 0) {
      NLGen3jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesRelativeJEREC1dn_isLoaded = true;
  }
  return NLGen3jesRelativeJEREC1dn_;
}

const int &VVV0Tree::NLGen4jesRelativeJEREC1dn() {
  if (not NLGen4jesRelativeJEREC1dn_isLoaded) {
    if (NLGen4jesRelativeJEREC1dn_branch != 0) {
      NLGen4jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesRelativeJEREC1dn_isLoaded = true;
  }
  return NLGen4jesRelativeJEREC1dn_;
}

const int &VVV0Tree::NVQGen0jesRelativeJEREC1dn() {
  if (not NVQGen0jesRelativeJEREC1dn_isLoaded) {
    if (NVQGen0jesRelativeJEREC1dn_branch != 0) {
      NVQGen0jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesRelativeJEREC1dn_isLoaded = true;
  }
  return NVQGen0jesRelativeJEREC1dn_;
}

const int &VVV0Tree::NVQGen1jesRelativeJEREC1dn() {
  if (not NVQGen1jesRelativeJEREC1dn_isLoaded) {
    if (NVQGen1jesRelativeJEREC1dn_branch != 0) {
      NVQGen1jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesRelativeJEREC1dn_isLoaded = true;
  }
  return NVQGen1jesRelativeJEREC1dn_;
}

const int &VVV0Tree::NVQGen2jesRelativeJEREC1dn() {
  if (not NVQGen2jesRelativeJEREC1dn_isLoaded) {
    if (NVQGen2jesRelativeJEREC1dn_branch != 0) {
      NVQGen2jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesRelativeJEREC1dn_isLoaded = true;
  }
  return NVQGen2jesRelativeJEREC1dn_;
}

const int &VVV0Tree::NVQGen3jesRelativeJEREC1dn() {
  if (not NVQGen3jesRelativeJEREC1dn_isLoaded) {
    if (NVQGen3jesRelativeJEREC1dn_branch != 0) {
      NVQGen3jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesRelativeJEREC1dn_isLoaded = true;
  }
  return NVQGen3jesRelativeJEREC1dn_;
}

const int &VVV0Tree::NVQGen4jesRelativeJEREC1dn() {
  if (not NVQGen4jesRelativeJEREC1dn_isLoaded) {
    if (NVQGen4jesRelativeJEREC1dn_branch != 0) {
      NVQGen4jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesRelativeJEREC1dn_isLoaded = true;
  }
  return NVQGen4jesRelativeJEREC1dn_;
}

const int &VVV0Tree::NiFJjesRelativeJEREC1dn() {
  if (not NiFJjesRelativeJEREC1dn_isLoaded) {
    if (NiFJjesRelativeJEREC1dn_branch != 0) {
      NiFJjesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    NiFJjesRelativeJEREC1dn_isLoaded = true;
  }
  return NiFJjesRelativeJEREC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesRelativeJEREC1dn() {
  if (not iFJ0jesRelativeJEREC1dn_isLoaded) {
    if (iFJ0jesRelativeJEREC1dn_branch != 0) {
      iFJ0jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesRelativeJEREC1dn_isLoaded = true;
  }
  return *iFJ0jesRelativeJEREC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesRelativeJEREC1dn() {
  if (not iFJ1jesRelativeJEREC1dn_isLoaded) {
    if (iFJ1jesRelativeJEREC1dn_branch != 0) {
      iFJ1jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesRelativeJEREC1dn_isLoaded = true;
  }
  return *iFJ1jesRelativeJEREC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesRelativeJEREC1dn() {
  if (not iFJ2jesRelativeJEREC1dn_isLoaded) {
    if (iFJ2jesRelativeJEREC1dn_branch != 0) {
      iFJ2jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesRelativeJEREC1dn_isLoaded = true;
  }
  return *iFJ2jesRelativeJEREC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesRelativeJEREC1dn() {
  if (not iFJ3jesRelativeJEREC1dn_isLoaded) {
    if (iFJ3jesRelativeJEREC1dn_branch != 0) {
      iFJ3jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesRelativeJEREC1dn_isLoaded = true;
  }
  return *iFJ3jesRelativeJEREC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesRelativeJEREC1dn() {
  if (not iFJ4jesRelativeJEREC1dn_isLoaded) {
    if (iFJ4jesRelativeJEREC1dn_branch != 0) {
      iFJ4jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesRelativeJEREC1dn_isLoaded = true;
  }
  return *iFJ4jesRelativeJEREC1dn_;
}

const float &VVV0Tree::iVMD0jesRelativeJEREC1dn() {
  if (not iVMD0jesRelativeJEREC1dn_isLoaded) {
    if (iVMD0jesRelativeJEREC1dn_branch != 0) {
      iVMD0jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesRelativeJEREC1dn_isLoaded = true;
  }
  return iVMD0jesRelativeJEREC1dn_;
}

const float &VVV0Tree::iVMD1jesRelativeJEREC1dn() {
  if (not iVMD1jesRelativeJEREC1dn_isLoaded) {
    if (iVMD1jesRelativeJEREC1dn_branch != 0) {
      iVMD1jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesRelativeJEREC1dn_isLoaded = true;
  }
  return iVMD1jesRelativeJEREC1dn_;
}

const float &VVV0Tree::iVMD2jesRelativeJEREC1dn() {
  if (not iVMD2jesRelativeJEREC1dn_isLoaded) {
    if (iVMD2jesRelativeJEREC1dn_branch != 0) {
      iVMD2jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesRelativeJEREC1dn_isLoaded = true;
  }
  return iVMD2jesRelativeJEREC1dn_;
}

const float &VVV0Tree::iVMD3jesRelativeJEREC1dn() {
  if (not iVMD3jesRelativeJEREC1dn_isLoaded) {
    if (iVMD3jesRelativeJEREC1dn_branch != 0) {
      iVMD3jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesRelativeJEREC1dn_isLoaded = true;
  }
  return iVMD3jesRelativeJEREC1dn_;
}

const float &VVV0Tree::iVMD4jesRelativeJEREC1dn() {
  if (not iVMD4jesRelativeJEREC1dn_isLoaded) {
    if (iVMD4jesRelativeJEREC1dn_branch != 0) {
      iVMD4jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesRelativeJEREC1dn_isLoaded = true;
  }
  return iVMD4jesRelativeJEREC1dn_;
}

const float &VVV0Tree::iWMD0jesRelativeJEREC1dn() {
  if (not iWMD0jesRelativeJEREC1dn_isLoaded) {
    if (iWMD0jesRelativeJEREC1dn_branch != 0) {
      iWMD0jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesRelativeJEREC1dn_isLoaded = true;
  }
  return iWMD0jesRelativeJEREC1dn_;
}

const float &VVV0Tree::iWMD1jesRelativeJEREC1dn() {
  if (not iWMD1jesRelativeJEREC1dn_isLoaded) {
    if (iWMD1jesRelativeJEREC1dn_branch != 0) {
      iWMD1jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesRelativeJEREC1dn_isLoaded = true;
  }
  return iWMD1jesRelativeJEREC1dn_;
}

const float &VVV0Tree::iWMD2jesRelativeJEREC1dn() {
  if (not iWMD2jesRelativeJEREC1dn_isLoaded) {
    if (iWMD2jesRelativeJEREC1dn_branch != 0) {
      iWMD2jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesRelativeJEREC1dn_isLoaded = true;
  }
  return iWMD2jesRelativeJEREC1dn_;
}

const float &VVV0Tree::iWMD3jesRelativeJEREC1dn() {
  if (not iWMD3jesRelativeJEREC1dn_isLoaded) {
    if (iWMD3jesRelativeJEREC1dn_branch != 0) {
      iWMD3jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesRelativeJEREC1dn_isLoaded = true;
  }
  return iWMD3jesRelativeJEREC1dn_;
}

const float &VVV0Tree::iWMD4jesRelativeJEREC1dn() {
  if (not iWMD4jesRelativeJEREC1dn_isLoaded) {
    if (iWMD4jesRelativeJEREC1dn_branch != 0) {
      iWMD4jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesRelativeJEREC1dn_isLoaded = true;
  }
  return iWMD4jesRelativeJEREC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesRelativeJEREC1dn() {
  if (not METjesRelativeJEREC1dn_isLoaded) {
    if (METjesRelativeJEREC1dn_branch != 0) {
      METjesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch METjesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    METjesRelativeJEREC1dn_isLoaded = true;
  }
  return *METjesRelativeJEREC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesRelativeJEREC1dn() {
  if (not NujesRelativeJEREC1dn_isLoaded) {
    if (NujesRelativeJEREC1dn_branch != 0) {
      NujesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch NujesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    NujesRelativeJEREC1dn_isLoaded = true;
  }
  return *NujesRelativeJEREC1dn_;
}

const int &VVV0Tree::NJjesRelativeJEREC1dn() {
  if (not NJjesRelativeJEREC1dn_isLoaded) {
    if (NJjesRelativeJEREC1dn_branch != 0) {
      NJjesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch NJjesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    NJjesRelativeJEREC1dn_isLoaded = true;
  }
  return NJjesRelativeJEREC1dn_;
}

const int &VVV0Tree::NbLoosejesRelativeJEREC1dn() {
  if (not NbLoosejesRelativeJEREC1dn_isLoaded) {
    if (NbLoosejesRelativeJEREC1dn_branch != 0) {
      NbLoosejesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesRelativeJEREC1dn_isLoaded = true;
  }
  return NbLoosejesRelativeJEREC1dn_;
}

const int &VVV0Tree::NbMediumjesRelativeJEREC1dn() {
  if (not NbMediumjesRelativeJEREC1dn_isLoaded) {
    if (NbMediumjesRelativeJEREC1dn_branch != 0) {
      NbMediumjesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesRelativeJEREC1dn_isLoaded = true;
  }
  return NbMediumjesRelativeJEREC1dn_;
}

const int &VVV0Tree::NbTightjesRelativeJEREC1dn() {
  if (not NbTightjesRelativeJEREC1dn_isLoaded) {
    if (NbTightjesRelativeJEREC1dn_branch != 0) {
      NbTightjesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    NbTightjesRelativeJEREC1dn_isLoaded = true;
  }
  return NbTightjesRelativeJEREC1dn_;
}

const int &VVV0Tree::NoORNbLoosejesRelativeJEREC1dn() {
  if (not NoORNbLoosejesRelativeJEREC1dn_isLoaded) {
    if (NoORNbLoosejesRelativeJEREC1dn_branch != 0) {
      NoORNbLoosejesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesRelativeJEREC1dn_isLoaded = true;
  }
  return NoORNbLoosejesRelativeJEREC1dn_;
}

const int &VVV0Tree::NoORNbMediumjesRelativeJEREC1dn() {
  if (not NoORNbMediumjesRelativeJEREC1dn_isLoaded) {
    if (NoORNbMediumjesRelativeJEREC1dn_branch != 0) {
      NoORNbMediumjesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesRelativeJEREC1dn_isLoaded = true;
  }
  return NoORNbMediumjesRelativeJEREC1dn_;
}

const int &VVV0Tree::NoORNbTightjesRelativeJEREC1dn() {
  if (not NoORNbTightjesRelativeJEREC1dn_isLoaded) {
    if (NoORNbTightjesRelativeJEREC1dn_branch != 0) {
      NoORNbTightjesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesRelativeJEREC1dn_isLoaded = true;
  }
  return NoORNbTightjesRelativeJEREC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesRelativeJEREC1dn() {
  if (not J0jesRelativeJEREC1dn_isLoaded) {
    if (J0jesRelativeJEREC1dn_branch != 0) {
      J0jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch J0jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    J0jesRelativeJEREC1dn_isLoaded = true;
  }
  return *J0jesRelativeJEREC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesRelativeJEREC1dn() {
  if (not J1jesRelativeJEREC1dn_isLoaded) {
    if (J1jesRelativeJEREC1dn_branch != 0) {
      J1jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch J1jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    J1jesRelativeJEREC1dn_isLoaded = true;
  }
  return *J1jesRelativeJEREC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesRelativeJEREC1dn() {
  if (not J2jesRelativeJEREC1dn_isLoaded) {
    if (J2jesRelativeJEREC1dn_branch != 0) {
      J2jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch J2jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    J2jesRelativeJEREC1dn_isLoaded = true;
  }
  return *J2jesRelativeJEREC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesRelativeJEREC1dn() {
  if (not J3jesRelativeJEREC1dn_isLoaded) {
    if (J3jesRelativeJEREC1dn_branch != 0) {
      J3jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch J3jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    J3jesRelativeJEREC1dn_isLoaded = true;
  }
  return *J3jesRelativeJEREC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesRelativeJEREC1dn() {
  if (not J4jesRelativeJEREC1dn_isLoaded) {
    if (J4jesRelativeJEREC1dn_branch != 0) {
      J4jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch J4jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    J4jesRelativeJEREC1dn_isLoaded = true;
  }
  return *J4jesRelativeJEREC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesRelativeJEREC1dn() {
  if (not J5jesRelativeJEREC1dn_isLoaded) {
    if (J5jesRelativeJEREC1dn_branch != 0) {
      J5jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch J5jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    J5jesRelativeJEREC1dn_isLoaded = true;
  }
  return *J5jesRelativeJEREC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesRelativeJEREC1dn() {
  if (not J6jesRelativeJEREC1dn_isLoaded) {
    if (J6jesRelativeJEREC1dn_branch != 0) {
      J6jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch J6jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    J6jesRelativeJEREC1dn_isLoaded = true;
  }
  return *J6jesRelativeJEREC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesRelativeJEREC1dn() {
  if (not J7jesRelativeJEREC1dn_isLoaded) {
    if (J7jesRelativeJEREC1dn_branch != 0) {
      J7jesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch J7jesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    J7jesRelativeJEREC1dn_isLoaded = true;
  }
  return *J7jesRelativeJEREC1dn_;
}

const vector<int> &VVV0Tree::NQJGenjesRelativeJEREC1dn() {
  if (not NQJGenjesRelativeJEREC1dn_isLoaded) {
    if (NQJGenjesRelativeJEREC1dn_branch != 0) {
      NQJGenjesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesRelativeJEREC1dn_isLoaded = true;
  }
  return *NQJGenjesRelativeJEREC1dn_;
}

const vector<int> &VVV0Tree::NBJGenjesRelativeJEREC1dn() {
  if (not NBJGenjesRelativeJEREC1dn_isLoaded) {
    if (NBJGenjesRelativeJEREC1dn_branch != 0) {
      NBJGenjesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesRelativeJEREC1dn_isLoaded = true;
  }
  return *NBJGenjesRelativeJEREC1dn_;
}

const vector<int> &VVV0Tree::NLJGenjesRelativeJEREC1dn() {
  if (not NLJGenjesRelativeJEREC1dn_isLoaded) {
    if (NLJGenjesRelativeJEREC1dn_branch != 0) {
      NLJGenjesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesRelativeJEREC1dn_isLoaded = true;
  }
  return *NLJGenjesRelativeJEREC1dn_;
}

const float &VVV0Tree::MVVXjesRelativeJEREC1dn() {
  if (not MVVXjesRelativeJEREC1dn_isLoaded) {
    if (MVVXjesRelativeJEREC1dn_branch != 0) {
      MVVXjesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    MVVXjesRelativeJEREC1dn_isLoaded = true;
  }
  return MVVXjesRelativeJEREC1dn_;
}

const float &VVV0Tree::PtVVXjesRelativeJEREC1dn() {
  if (not PtVVXjesRelativeJEREC1dn_isLoaded) {
    if (PtVVXjesRelativeJEREC1dn_branch != 0) {
      PtVVXjesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesRelativeJEREC1dn_isLoaded = true;
  }
  return PtVVXjesRelativeJEREC1dn_;
}

const float &VVV0Tree::HTjesRelativeJEREC1dn() {
  if (not HTjesRelativeJEREC1dn_isLoaded) {
    if (HTjesRelativeJEREC1dn_branch != 0) {
      HTjesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch HTjesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    HTjesRelativeJEREC1dn_isLoaded = true;
  }
  return HTjesRelativeJEREC1dn_;
}

const float &VVV0Tree::HTJjesRelativeJEREC1dn() {
  if (not HTJjesRelativeJEREC1dn_isLoaded) {
    if (HTJjesRelativeJEREC1dn_branch != 0) {
      HTJjesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch HTJjesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    HTJjesRelativeJEREC1dn_isLoaded = true;
  }
  return HTJjesRelativeJEREC1dn_;
}

const float &VVV0Tree::HTFJjesRelativeJEREC1dn() {
  if (not HTFJjesRelativeJEREC1dn_isLoaded) {
    if (HTFJjesRelativeJEREC1dn_branch != 0) {
      HTFJjesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    HTFJjesRelativeJEREC1dn_isLoaded = true;
  }
  return HTFJjesRelativeJEREC1dn_;
}

const float &VVV0Tree::SumPtFJjesRelativeJEREC1dn() {
  if (not SumPtFJjesRelativeJEREC1dn_isLoaded) {
    if (SumPtFJjesRelativeJEREC1dn_branch != 0) {
      SumPtFJjesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesRelativeJEREC1dn_isLoaded = true;
  }
  return SumPtFJjesRelativeJEREC1dn_;
}

const float &VVV0Tree::SumPtJjesRelativeJEREC1dn() {
  if (not SumPtJjesRelativeJEREC1dn_isLoaded) {
    if (SumPtJjesRelativeJEREC1dn_branch != 0) {
      SumPtJjesRelativeJEREC1dn_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesRelativeJEREC1dn_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesRelativeJEREC1dn_isLoaded = true;
  }
  return SumPtJjesRelativeJEREC1dn_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesRelativeJEREC2up() {
  if (not JsjesRelativeJEREC2up_isLoaded) {
    if (JsjesRelativeJEREC2up_branch != 0) {
      JsjesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch JsjesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    JsjesRelativeJEREC2up_isLoaded = true;
  }
  return *JsjesRelativeJEREC2up_;
}

const int &VVV0Tree::NFJjesRelativeJEREC2up() {
  if (not NFJjesRelativeJEREC2up_isLoaded) {
    if (NFJjesRelativeJEREC2up_branch != 0) {
      NFJjesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch NFJjesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    NFJjesRelativeJEREC2up_isLoaded = true;
  }
  return NFJjesRelativeJEREC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesRelativeJEREC2up() {
  if (not FJ0jesRelativeJEREC2up_isLoaded) {
    if (FJ0jesRelativeJEREC2up_branch != 0) {
      FJ0jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    FJ0jesRelativeJEREC2up_isLoaded = true;
  }
  return *FJ0jesRelativeJEREC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesRelativeJEREC2up() {
  if (not FJ1jesRelativeJEREC2up_isLoaded) {
    if (FJ1jesRelativeJEREC2up_branch != 0) {
      FJ1jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    FJ1jesRelativeJEREC2up_isLoaded = true;
  }
  return *FJ1jesRelativeJEREC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesRelativeJEREC2up() {
  if (not FJ2jesRelativeJEREC2up_isLoaded) {
    if (FJ2jesRelativeJEREC2up_branch != 0) {
      FJ2jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    FJ2jesRelativeJEREC2up_isLoaded = true;
  }
  return *FJ2jesRelativeJEREC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesRelativeJEREC2up() {
  if (not FJ3jesRelativeJEREC2up_isLoaded) {
    if (FJ3jesRelativeJEREC2up_branch != 0) {
      FJ3jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    FJ3jesRelativeJEREC2up_isLoaded = true;
  }
  return *FJ3jesRelativeJEREC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesRelativeJEREC2up() {
  if (not FJ4jesRelativeJEREC2up_isLoaded) {
    if (FJ4jesRelativeJEREC2up_branch != 0) {
      FJ4jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    FJ4jesRelativeJEREC2up_isLoaded = true;
  }
  return *FJ4jesRelativeJEREC2up_;
}

const float &VVV0Tree::VMD0jesRelativeJEREC2up() {
  if (not VMD0jesRelativeJEREC2up_isLoaded) {
    if (VMD0jesRelativeJEREC2up_branch != 0) {
      VMD0jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    VMD0jesRelativeJEREC2up_isLoaded = true;
  }
  return VMD0jesRelativeJEREC2up_;
}

const float &VVV0Tree::VMD1jesRelativeJEREC2up() {
  if (not VMD1jesRelativeJEREC2up_isLoaded) {
    if (VMD1jesRelativeJEREC2up_branch != 0) {
      VMD1jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    VMD1jesRelativeJEREC2up_isLoaded = true;
  }
  return VMD1jesRelativeJEREC2up_;
}

const float &VVV0Tree::VMD2jesRelativeJEREC2up() {
  if (not VMD2jesRelativeJEREC2up_isLoaded) {
    if (VMD2jesRelativeJEREC2up_branch != 0) {
      VMD2jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    VMD2jesRelativeJEREC2up_isLoaded = true;
  }
  return VMD2jesRelativeJEREC2up_;
}

const float &VVV0Tree::VMD3jesRelativeJEREC2up() {
  if (not VMD3jesRelativeJEREC2up_isLoaded) {
    if (VMD3jesRelativeJEREC2up_branch != 0) {
      VMD3jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    VMD3jesRelativeJEREC2up_isLoaded = true;
  }
  return VMD3jesRelativeJEREC2up_;
}

const float &VVV0Tree::VMD4jesRelativeJEREC2up() {
  if (not VMD4jesRelativeJEREC2up_isLoaded) {
    if (VMD4jesRelativeJEREC2up_branch != 0) {
      VMD4jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    VMD4jesRelativeJEREC2up_isLoaded = true;
  }
  return VMD4jesRelativeJEREC2up_;
}

const float &VVV0Tree::WMD0jesRelativeJEREC2up() {
  if (not WMD0jesRelativeJEREC2up_isLoaded) {
    if (WMD0jesRelativeJEREC2up_branch != 0) {
      WMD0jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    WMD0jesRelativeJEREC2up_isLoaded = true;
  }
  return WMD0jesRelativeJEREC2up_;
}

const float &VVV0Tree::WMD1jesRelativeJEREC2up() {
  if (not WMD1jesRelativeJEREC2up_isLoaded) {
    if (WMD1jesRelativeJEREC2up_branch != 0) {
      WMD1jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    WMD1jesRelativeJEREC2up_isLoaded = true;
  }
  return WMD1jesRelativeJEREC2up_;
}

const float &VVV0Tree::WMD2jesRelativeJEREC2up() {
  if (not WMD2jesRelativeJEREC2up_isLoaded) {
    if (WMD2jesRelativeJEREC2up_branch != 0) {
      WMD2jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    WMD2jesRelativeJEREC2up_isLoaded = true;
  }
  return WMD2jesRelativeJEREC2up_;
}

const float &VVV0Tree::WMD3jesRelativeJEREC2up() {
  if (not WMD3jesRelativeJEREC2up_isLoaded) {
    if (WMD3jesRelativeJEREC2up_branch != 0) {
      WMD3jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    WMD3jesRelativeJEREC2up_isLoaded = true;
  }
  return WMD3jesRelativeJEREC2up_;
}

const float &VVV0Tree::WMD4jesRelativeJEREC2up() {
  if (not WMD4jesRelativeJEREC2up_isLoaded) {
    if (WMD4jesRelativeJEREC2up_branch != 0) {
      WMD4jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    WMD4jesRelativeJEREC2up_isLoaded = true;
  }
  return WMD4jesRelativeJEREC2up_;
}

const int &VVV0Tree::NQGen0jesRelativeJEREC2up() {
  if (not NQGen0jesRelativeJEREC2up_isLoaded) {
    if (NQGen0jesRelativeJEREC2up_branch != 0) {
      NQGen0jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesRelativeJEREC2up_isLoaded = true;
  }
  return NQGen0jesRelativeJEREC2up_;
}

const int &VVV0Tree::NQGen1jesRelativeJEREC2up() {
  if (not NQGen1jesRelativeJEREC2up_isLoaded) {
    if (NQGen1jesRelativeJEREC2up_branch != 0) {
      NQGen1jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesRelativeJEREC2up_isLoaded = true;
  }
  return NQGen1jesRelativeJEREC2up_;
}

const int &VVV0Tree::NQGen2jesRelativeJEREC2up() {
  if (not NQGen2jesRelativeJEREC2up_isLoaded) {
    if (NQGen2jesRelativeJEREC2up_branch != 0) {
      NQGen2jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesRelativeJEREC2up_isLoaded = true;
  }
  return NQGen2jesRelativeJEREC2up_;
}

const int &VVV0Tree::NQGen3jesRelativeJEREC2up() {
  if (not NQGen3jesRelativeJEREC2up_isLoaded) {
    if (NQGen3jesRelativeJEREC2up_branch != 0) {
      NQGen3jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesRelativeJEREC2up_isLoaded = true;
  }
  return NQGen3jesRelativeJEREC2up_;
}

const int &VVV0Tree::NQGen4jesRelativeJEREC2up() {
  if (not NQGen4jesRelativeJEREC2up_isLoaded) {
    if (NQGen4jesRelativeJEREC2up_branch != 0) {
      NQGen4jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesRelativeJEREC2up_isLoaded = true;
  }
  return NQGen4jesRelativeJEREC2up_;
}

const int &VVV0Tree::NBGen0jesRelativeJEREC2up() {
  if (not NBGen0jesRelativeJEREC2up_isLoaded) {
    if (NBGen0jesRelativeJEREC2up_branch != 0) {
      NBGen0jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesRelativeJEREC2up_isLoaded = true;
  }
  return NBGen0jesRelativeJEREC2up_;
}

const int &VVV0Tree::NBGen1jesRelativeJEREC2up() {
  if (not NBGen1jesRelativeJEREC2up_isLoaded) {
    if (NBGen1jesRelativeJEREC2up_branch != 0) {
      NBGen1jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesRelativeJEREC2up_isLoaded = true;
  }
  return NBGen1jesRelativeJEREC2up_;
}

const int &VVV0Tree::NBGen2jesRelativeJEREC2up() {
  if (not NBGen2jesRelativeJEREC2up_isLoaded) {
    if (NBGen2jesRelativeJEREC2up_branch != 0) {
      NBGen2jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesRelativeJEREC2up_isLoaded = true;
  }
  return NBGen2jesRelativeJEREC2up_;
}

const int &VVV0Tree::NBGen3jesRelativeJEREC2up() {
  if (not NBGen3jesRelativeJEREC2up_isLoaded) {
    if (NBGen3jesRelativeJEREC2up_branch != 0) {
      NBGen3jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesRelativeJEREC2up_isLoaded = true;
  }
  return NBGen3jesRelativeJEREC2up_;
}

const int &VVV0Tree::NBGen4jesRelativeJEREC2up() {
  if (not NBGen4jesRelativeJEREC2up_isLoaded) {
    if (NBGen4jesRelativeJEREC2up_branch != 0) {
      NBGen4jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesRelativeJEREC2up_isLoaded = true;
  }
  return NBGen4jesRelativeJEREC2up_;
}

const int &VVV0Tree::NLGen0jesRelativeJEREC2up() {
  if (not NLGen0jesRelativeJEREC2up_isLoaded) {
    if (NLGen0jesRelativeJEREC2up_branch != 0) {
      NLGen0jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesRelativeJEREC2up_isLoaded = true;
  }
  return NLGen0jesRelativeJEREC2up_;
}

const int &VVV0Tree::NLGen1jesRelativeJEREC2up() {
  if (not NLGen1jesRelativeJEREC2up_isLoaded) {
    if (NLGen1jesRelativeJEREC2up_branch != 0) {
      NLGen1jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesRelativeJEREC2up_isLoaded = true;
  }
  return NLGen1jesRelativeJEREC2up_;
}

const int &VVV0Tree::NLGen2jesRelativeJEREC2up() {
  if (not NLGen2jesRelativeJEREC2up_isLoaded) {
    if (NLGen2jesRelativeJEREC2up_branch != 0) {
      NLGen2jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesRelativeJEREC2up_isLoaded = true;
  }
  return NLGen2jesRelativeJEREC2up_;
}

const int &VVV0Tree::NLGen3jesRelativeJEREC2up() {
  if (not NLGen3jesRelativeJEREC2up_isLoaded) {
    if (NLGen3jesRelativeJEREC2up_branch != 0) {
      NLGen3jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesRelativeJEREC2up_isLoaded = true;
  }
  return NLGen3jesRelativeJEREC2up_;
}

const int &VVV0Tree::NLGen4jesRelativeJEREC2up() {
  if (not NLGen4jesRelativeJEREC2up_isLoaded) {
    if (NLGen4jesRelativeJEREC2up_branch != 0) {
      NLGen4jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesRelativeJEREC2up_isLoaded = true;
  }
  return NLGen4jesRelativeJEREC2up_;
}

const int &VVV0Tree::NVQGen0jesRelativeJEREC2up() {
  if (not NVQGen0jesRelativeJEREC2up_isLoaded) {
    if (NVQGen0jesRelativeJEREC2up_branch != 0) {
      NVQGen0jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesRelativeJEREC2up_isLoaded = true;
  }
  return NVQGen0jesRelativeJEREC2up_;
}

const int &VVV0Tree::NVQGen1jesRelativeJEREC2up() {
  if (not NVQGen1jesRelativeJEREC2up_isLoaded) {
    if (NVQGen1jesRelativeJEREC2up_branch != 0) {
      NVQGen1jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesRelativeJEREC2up_isLoaded = true;
  }
  return NVQGen1jesRelativeJEREC2up_;
}

const int &VVV0Tree::NVQGen2jesRelativeJEREC2up() {
  if (not NVQGen2jesRelativeJEREC2up_isLoaded) {
    if (NVQGen2jesRelativeJEREC2up_branch != 0) {
      NVQGen2jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesRelativeJEREC2up_isLoaded = true;
  }
  return NVQGen2jesRelativeJEREC2up_;
}

const int &VVV0Tree::NVQGen3jesRelativeJEREC2up() {
  if (not NVQGen3jesRelativeJEREC2up_isLoaded) {
    if (NVQGen3jesRelativeJEREC2up_branch != 0) {
      NVQGen3jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesRelativeJEREC2up_isLoaded = true;
  }
  return NVQGen3jesRelativeJEREC2up_;
}

const int &VVV0Tree::NVQGen4jesRelativeJEREC2up() {
  if (not NVQGen4jesRelativeJEREC2up_isLoaded) {
    if (NVQGen4jesRelativeJEREC2up_branch != 0) {
      NVQGen4jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesRelativeJEREC2up_isLoaded = true;
  }
  return NVQGen4jesRelativeJEREC2up_;
}

const int &VVV0Tree::NiFJjesRelativeJEREC2up() {
  if (not NiFJjesRelativeJEREC2up_isLoaded) {
    if (NiFJjesRelativeJEREC2up_branch != 0) {
      NiFJjesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    NiFJjesRelativeJEREC2up_isLoaded = true;
  }
  return NiFJjesRelativeJEREC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesRelativeJEREC2up() {
  if (not iFJ0jesRelativeJEREC2up_isLoaded) {
    if (iFJ0jesRelativeJEREC2up_branch != 0) {
      iFJ0jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesRelativeJEREC2up_isLoaded = true;
  }
  return *iFJ0jesRelativeJEREC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesRelativeJEREC2up() {
  if (not iFJ1jesRelativeJEREC2up_isLoaded) {
    if (iFJ1jesRelativeJEREC2up_branch != 0) {
      iFJ1jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesRelativeJEREC2up_isLoaded = true;
  }
  return *iFJ1jesRelativeJEREC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesRelativeJEREC2up() {
  if (not iFJ2jesRelativeJEREC2up_isLoaded) {
    if (iFJ2jesRelativeJEREC2up_branch != 0) {
      iFJ2jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesRelativeJEREC2up_isLoaded = true;
  }
  return *iFJ2jesRelativeJEREC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesRelativeJEREC2up() {
  if (not iFJ3jesRelativeJEREC2up_isLoaded) {
    if (iFJ3jesRelativeJEREC2up_branch != 0) {
      iFJ3jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesRelativeJEREC2up_isLoaded = true;
  }
  return *iFJ3jesRelativeJEREC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesRelativeJEREC2up() {
  if (not iFJ4jesRelativeJEREC2up_isLoaded) {
    if (iFJ4jesRelativeJEREC2up_branch != 0) {
      iFJ4jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesRelativeJEREC2up_isLoaded = true;
  }
  return *iFJ4jesRelativeJEREC2up_;
}

const float &VVV0Tree::iVMD0jesRelativeJEREC2up() {
  if (not iVMD0jesRelativeJEREC2up_isLoaded) {
    if (iVMD0jesRelativeJEREC2up_branch != 0) {
      iVMD0jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesRelativeJEREC2up_isLoaded = true;
  }
  return iVMD0jesRelativeJEREC2up_;
}

const float &VVV0Tree::iVMD1jesRelativeJEREC2up() {
  if (not iVMD1jesRelativeJEREC2up_isLoaded) {
    if (iVMD1jesRelativeJEREC2up_branch != 0) {
      iVMD1jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesRelativeJEREC2up_isLoaded = true;
  }
  return iVMD1jesRelativeJEREC2up_;
}

const float &VVV0Tree::iVMD2jesRelativeJEREC2up() {
  if (not iVMD2jesRelativeJEREC2up_isLoaded) {
    if (iVMD2jesRelativeJEREC2up_branch != 0) {
      iVMD2jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesRelativeJEREC2up_isLoaded = true;
  }
  return iVMD2jesRelativeJEREC2up_;
}

const float &VVV0Tree::iVMD3jesRelativeJEREC2up() {
  if (not iVMD3jesRelativeJEREC2up_isLoaded) {
    if (iVMD3jesRelativeJEREC2up_branch != 0) {
      iVMD3jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesRelativeJEREC2up_isLoaded = true;
  }
  return iVMD3jesRelativeJEREC2up_;
}

const float &VVV0Tree::iVMD4jesRelativeJEREC2up() {
  if (not iVMD4jesRelativeJEREC2up_isLoaded) {
    if (iVMD4jesRelativeJEREC2up_branch != 0) {
      iVMD4jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesRelativeJEREC2up_isLoaded = true;
  }
  return iVMD4jesRelativeJEREC2up_;
}

const float &VVV0Tree::iWMD0jesRelativeJEREC2up() {
  if (not iWMD0jesRelativeJEREC2up_isLoaded) {
    if (iWMD0jesRelativeJEREC2up_branch != 0) {
      iWMD0jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesRelativeJEREC2up_isLoaded = true;
  }
  return iWMD0jesRelativeJEREC2up_;
}

const float &VVV0Tree::iWMD1jesRelativeJEREC2up() {
  if (not iWMD1jesRelativeJEREC2up_isLoaded) {
    if (iWMD1jesRelativeJEREC2up_branch != 0) {
      iWMD1jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesRelativeJEREC2up_isLoaded = true;
  }
  return iWMD1jesRelativeJEREC2up_;
}

const float &VVV0Tree::iWMD2jesRelativeJEREC2up() {
  if (not iWMD2jesRelativeJEREC2up_isLoaded) {
    if (iWMD2jesRelativeJEREC2up_branch != 0) {
      iWMD2jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesRelativeJEREC2up_isLoaded = true;
  }
  return iWMD2jesRelativeJEREC2up_;
}

const float &VVV0Tree::iWMD3jesRelativeJEREC2up() {
  if (not iWMD3jesRelativeJEREC2up_isLoaded) {
    if (iWMD3jesRelativeJEREC2up_branch != 0) {
      iWMD3jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesRelativeJEREC2up_isLoaded = true;
  }
  return iWMD3jesRelativeJEREC2up_;
}

const float &VVV0Tree::iWMD4jesRelativeJEREC2up() {
  if (not iWMD4jesRelativeJEREC2up_isLoaded) {
    if (iWMD4jesRelativeJEREC2up_branch != 0) {
      iWMD4jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesRelativeJEREC2up_isLoaded = true;
  }
  return iWMD4jesRelativeJEREC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesRelativeJEREC2up() {
  if (not METjesRelativeJEREC2up_isLoaded) {
    if (METjesRelativeJEREC2up_branch != 0) {
      METjesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch METjesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    METjesRelativeJEREC2up_isLoaded = true;
  }
  return *METjesRelativeJEREC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesRelativeJEREC2up() {
  if (not NujesRelativeJEREC2up_isLoaded) {
    if (NujesRelativeJEREC2up_branch != 0) {
      NujesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch NujesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    NujesRelativeJEREC2up_isLoaded = true;
  }
  return *NujesRelativeJEREC2up_;
}

const int &VVV0Tree::NJjesRelativeJEREC2up() {
  if (not NJjesRelativeJEREC2up_isLoaded) {
    if (NJjesRelativeJEREC2up_branch != 0) {
      NJjesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch NJjesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    NJjesRelativeJEREC2up_isLoaded = true;
  }
  return NJjesRelativeJEREC2up_;
}

const int &VVV0Tree::NbLoosejesRelativeJEREC2up() {
  if (not NbLoosejesRelativeJEREC2up_isLoaded) {
    if (NbLoosejesRelativeJEREC2up_branch != 0) {
      NbLoosejesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesRelativeJEREC2up_isLoaded = true;
  }
  return NbLoosejesRelativeJEREC2up_;
}

const int &VVV0Tree::NbMediumjesRelativeJEREC2up() {
  if (not NbMediumjesRelativeJEREC2up_isLoaded) {
    if (NbMediumjesRelativeJEREC2up_branch != 0) {
      NbMediumjesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesRelativeJEREC2up_isLoaded = true;
  }
  return NbMediumjesRelativeJEREC2up_;
}

const int &VVV0Tree::NbTightjesRelativeJEREC2up() {
  if (not NbTightjesRelativeJEREC2up_isLoaded) {
    if (NbTightjesRelativeJEREC2up_branch != 0) {
      NbTightjesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    NbTightjesRelativeJEREC2up_isLoaded = true;
  }
  return NbTightjesRelativeJEREC2up_;
}

const int &VVV0Tree::NoORNbLoosejesRelativeJEREC2up() {
  if (not NoORNbLoosejesRelativeJEREC2up_isLoaded) {
    if (NoORNbLoosejesRelativeJEREC2up_branch != 0) {
      NoORNbLoosejesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesRelativeJEREC2up_isLoaded = true;
  }
  return NoORNbLoosejesRelativeJEREC2up_;
}

const int &VVV0Tree::NoORNbMediumjesRelativeJEREC2up() {
  if (not NoORNbMediumjesRelativeJEREC2up_isLoaded) {
    if (NoORNbMediumjesRelativeJEREC2up_branch != 0) {
      NoORNbMediumjesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesRelativeJEREC2up_isLoaded = true;
  }
  return NoORNbMediumjesRelativeJEREC2up_;
}

const int &VVV0Tree::NoORNbTightjesRelativeJEREC2up() {
  if (not NoORNbTightjesRelativeJEREC2up_isLoaded) {
    if (NoORNbTightjesRelativeJEREC2up_branch != 0) {
      NoORNbTightjesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesRelativeJEREC2up_isLoaded = true;
  }
  return NoORNbTightjesRelativeJEREC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesRelativeJEREC2up() {
  if (not J0jesRelativeJEREC2up_isLoaded) {
    if (J0jesRelativeJEREC2up_branch != 0) {
      J0jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch J0jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    J0jesRelativeJEREC2up_isLoaded = true;
  }
  return *J0jesRelativeJEREC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesRelativeJEREC2up() {
  if (not J1jesRelativeJEREC2up_isLoaded) {
    if (J1jesRelativeJEREC2up_branch != 0) {
      J1jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch J1jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    J1jesRelativeJEREC2up_isLoaded = true;
  }
  return *J1jesRelativeJEREC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesRelativeJEREC2up() {
  if (not J2jesRelativeJEREC2up_isLoaded) {
    if (J2jesRelativeJEREC2up_branch != 0) {
      J2jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch J2jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    J2jesRelativeJEREC2up_isLoaded = true;
  }
  return *J2jesRelativeJEREC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesRelativeJEREC2up() {
  if (not J3jesRelativeJEREC2up_isLoaded) {
    if (J3jesRelativeJEREC2up_branch != 0) {
      J3jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch J3jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    J3jesRelativeJEREC2up_isLoaded = true;
  }
  return *J3jesRelativeJEREC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesRelativeJEREC2up() {
  if (not J4jesRelativeJEREC2up_isLoaded) {
    if (J4jesRelativeJEREC2up_branch != 0) {
      J4jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch J4jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    J4jesRelativeJEREC2up_isLoaded = true;
  }
  return *J4jesRelativeJEREC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesRelativeJEREC2up() {
  if (not J5jesRelativeJEREC2up_isLoaded) {
    if (J5jesRelativeJEREC2up_branch != 0) {
      J5jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch J5jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    J5jesRelativeJEREC2up_isLoaded = true;
  }
  return *J5jesRelativeJEREC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesRelativeJEREC2up() {
  if (not J6jesRelativeJEREC2up_isLoaded) {
    if (J6jesRelativeJEREC2up_branch != 0) {
      J6jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch J6jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    J6jesRelativeJEREC2up_isLoaded = true;
  }
  return *J6jesRelativeJEREC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesRelativeJEREC2up() {
  if (not J7jesRelativeJEREC2up_isLoaded) {
    if (J7jesRelativeJEREC2up_branch != 0) {
      J7jesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch J7jesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    J7jesRelativeJEREC2up_isLoaded = true;
  }
  return *J7jesRelativeJEREC2up_;
}

const vector<int> &VVV0Tree::NQJGenjesRelativeJEREC2up() {
  if (not NQJGenjesRelativeJEREC2up_isLoaded) {
    if (NQJGenjesRelativeJEREC2up_branch != 0) {
      NQJGenjesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesRelativeJEREC2up_isLoaded = true;
  }
  return *NQJGenjesRelativeJEREC2up_;
}

const vector<int> &VVV0Tree::NBJGenjesRelativeJEREC2up() {
  if (not NBJGenjesRelativeJEREC2up_isLoaded) {
    if (NBJGenjesRelativeJEREC2up_branch != 0) {
      NBJGenjesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesRelativeJEREC2up_isLoaded = true;
  }
  return *NBJGenjesRelativeJEREC2up_;
}

const vector<int> &VVV0Tree::NLJGenjesRelativeJEREC2up() {
  if (not NLJGenjesRelativeJEREC2up_isLoaded) {
    if (NLJGenjesRelativeJEREC2up_branch != 0) {
      NLJGenjesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesRelativeJEREC2up_isLoaded = true;
  }
  return *NLJGenjesRelativeJEREC2up_;
}

const float &VVV0Tree::MVVXjesRelativeJEREC2up() {
  if (not MVVXjesRelativeJEREC2up_isLoaded) {
    if (MVVXjesRelativeJEREC2up_branch != 0) {
      MVVXjesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    MVVXjesRelativeJEREC2up_isLoaded = true;
  }
  return MVVXjesRelativeJEREC2up_;
}

const float &VVV0Tree::PtVVXjesRelativeJEREC2up() {
  if (not PtVVXjesRelativeJEREC2up_isLoaded) {
    if (PtVVXjesRelativeJEREC2up_branch != 0) {
      PtVVXjesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesRelativeJEREC2up_isLoaded = true;
  }
  return PtVVXjesRelativeJEREC2up_;
}

const float &VVV0Tree::HTjesRelativeJEREC2up() {
  if (not HTjesRelativeJEREC2up_isLoaded) {
    if (HTjesRelativeJEREC2up_branch != 0) {
      HTjesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch HTjesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    HTjesRelativeJEREC2up_isLoaded = true;
  }
  return HTjesRelativeJEREC2up_;
}

const float &VVV0Tree::HTJjesRelativeJEREC2up() {
  if (not HTJjesRelativeJEREC2up_isLoaded) {
    if (HTJjesRelativeJEREC2up_branch != 0) {
      HTJjesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch HTJjesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    HTJjesRelativeJEREC2up_isLoaded = true;
  }
  return HTJjesRelativeJEREC2up_;
}

const float &VVV0Tree::HTFJjesRelativeJEREC2up() {
  if (not HTFJjesRelativeJEREC2up_isLoaded) {
    if (HTFJjesRelativeJEREC2up_branch != 0) {
      HTFJjesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    HTFJjesRelativeJEREC2up_isLoaded = true;
  }
  return HTFJjesRelativeJEREC2up_;
}

const float &VVV0Tree::SumPtFJjesRelativeJEREC2up() {
  if (not SumPtFJjesRelativeJEREC2up_isLoaded) {
    if (SumPtFJjesRelativeJEREC2up_branch != 0) {
      SumPtFJjesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesRelativeJEREC2up_isLoaded = true;
  }
  return SumPtFJjesRelativeJEREC2up_;
}

const float &VVV0Tree::SumPtJjesRelativeJEREC2up() {
  if (not SumPtJjesRelativeJEREC2up_isLoaded) {
    if (SumPtJjesRelativeJEREC2up_branch != 0) {
      SumPtJjesRelativeJEREC2up_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesRelativeJEREC2up_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesRelativeJEREC2up_isLoaded = true;
  }
  return SumPtJjesRelativeJEREC2up_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesRelativeJEREC2dn() {
  if (not JsjesRelativeJEREC2dn_isLoaded) {
    if (JsjesRelativeJEREC2dn_branch != 0) {
      JsjesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch JsjesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    JsjesRelativeJEREC2dn_isLoaded = true;
  }
  return *JsjesRelativeJEREC2dn_;
}

const int &VVV0Tree::NFJjesRelativeJEREC2dn() {
  if (not NFJjesRelativeJEREC2dn_isLoaded) {
    if (NFJjesRelativeJEREC2dn_branch != 0) {
      NFJjesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch NFJjesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    NFJjesRelativeJEREC2dn_isLoaded = true;
  }
  return NFJjesRelativeJEREC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesRelativeJEREC2dn() {
  if (not FJ0jesRelativeJEREC2dn_isLoaded) {
    if (FJ0jesRelativeJEREC2dn_branch != 0) {
      FJ0jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    FJ0jesRelativeJEREC2dn_isLoaded = true;
  }
  return *FJ0jesRelativeJEREC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesRelativeJEREC2dn() {
  if (not FJ1jesRelativeJEREC2dn_isLoaded) {
    if (FJ1jesRelativeJEREC2dn_branch != 0) {
      FJ1jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    FJ1jesRelativeJEREC2dn_isLoaded = true;
  }
  return *FJ1jesRelativeJEREC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesRelativeJEREC2dn() {
  if (not FJ2jesRelativeJEREC2dn_isLoaded) {
    if (FJ2jesRelativeJEREC2dn_branch != 0) {
      FJ2jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    FJ2jesRelativeJEREC2dn_isLoaded = true;
  }
  return *FJ2jesRelativeJEREC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesRelativeJEREC2dn() {
  if (not FJ3jesRelativeJEREC2dn_isLoaded) {
    if (FJ3jesRelativeJEREC2dn_branch != 0) {
      FJ3jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    FJ3jesRelativeJEREC2dn_isLoaded = true;
  }
  return *FJ3jesRelativeJEREC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesRelativeJEREC2dn() {
  if (not FJ4jesRelativeJEREC2dn_isLoaded) {
    if (FJ4jesRelativeJEREC2dn_branch != 0) {
      FJ4jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    FJ4jesRelativeJEREC2dn_isLoaded = true;
  }
  return *FJ4jesRelativeJEREC2dn_;
}

const float &VVV0Tree::VMD0jesRelativeJEREC2dn() {
  if (not VMD0jesRelativeJEREC2dn_isLoaded) {
    if (VMD0jesRelativeJEREC2dn_branch != 0) {
      VMD0jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    VMD0jesRelativeJEREC2dn_isLoaded = true;
  }
  return VMD0jesRelativeJEREC2dn_;
}

const float &VVV0Tree::VMD1jesRelativeJEREC2dn() {
  if (not VMD1jesRelativeJEREC2dn_isLoaded) {
    if (VMD1jesRelativeJEREC2dn_branch != 0) {
      VMD1jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    VMD1jesRelativeJEREC2dn_isLoaded = true;
  }
  return VMD1jesRelativeJEREC2dn_;
}

const float &VVV0Tree::VMD2jesRelativeJEREC2dn() {
  if (not VMD2jesRelativeJEREC2dn_isLoaded) {
    if (VMD2jesRelativeJEREC2dn_branch != 0) {
      VMD2jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    VMD2jesRelativeJEREC2dn_isLoaded = true;
  }
  return VMD2jesRelativeJEREC2dn_;
}

const float &VVV0Tree::VMD3jesRelativeJEREC2dn() {
  if (not VMD3jesRelativeJEREC2dn_isLoaded) {
    if (VMD3jesRelativeJEREC2dn_branch != 0) {
      VMD3jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    VMD3jesRelativeJEREC2dn_isLoaded = true;
  }
  return VMD3jesRelativeJEREC2dn_;
}

const float &VVV0Tree::VMD4jesRelativeJEREC2dn() {
  if (not VMD4jesRelativeJEREC2dn_isLoaded) {
    if (VMD4jesRelativeJEREC2dn_branch != 0) {
      VMD4jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    VMD4jesRelativeJEREC2dn_isLoaded = true;
  }
  return VMD4jesRelativeJEREC2dn_;
}

const float &VVV0Tree::WMD0jesRelativeJEREC2dn() {
  if (not WMD0jesRelativeJEREC2dn_isLoaded) {
    if (WMD0jesRelativeJEREC2dn_branch != 0) {
      WMD0jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    WMD0jesRelativeJEREC2dn_isLoaded = true;
  }
  return WMD0jesRelativeJEREC2dn_;
}

const float &VVV0Tree::WMD1jesRelativeJEREC2dn() {
  if (not WMD1jesRelativeJEREC2dn_isLoaded) {
    if (WMD1jesRelativeJEREC2dn_branch != 0) {
      WMD1jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    WMD1jesRelativeJEREC2dn_isLoaded = true;
  }
  return WMD1jesRelativeJEREC2dn_;
}

const float &VVV0Tree::WMD2jesRelativeJEREC2dn() {
  if (not WMD2jesRelativeJEREC2dn_isLoaded) {
    if (WMD2jesRelativeJEREC2dn_branch != 0) {
      WMD2jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    WMD2jesRelativeJEREC2dn_isLoaded = true;
  }
  return WMD2jesRelativeJEREC2dn_;
}

const float &VVV0Tree::WMD3jesRelativeJEREC2dn() {
  if (not WMD3jesRelativeJEREC2dn_isLoaded) {
    if (WMD3jesRelativeJEREC2dn_branch != 0) {
      WMD3jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    WMD3jesRelativeJEREC2dn_isLoaded = true;
  }
  return WMD3jesRelativeJEREC2dn_;
}

const float &VVV0Tree::WMD4jesRelativeJEREC2dn() {
  if (not WMD4jesRelativeJEREC2dn_isLoaded) {
    if (WMD4jesRelativeJEREC2dn_branch != 0) {
      WMD4jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    WMD4jesRelativeJEREC2dn_isLoaded = true;
  }
  return WMD4jesRelativeJEREC2dn_;
}

const int &VVV0Tree::NQGen0jesRelativeJEREC2dn() {
  if (not NQGen0jesRelativeJEREC2dn_isLoaded) {
    if (NQGen0jesRelativeJEREC2dn_branch != 0) {
      NQGen0jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesRelativeJEREC2dn_isLoaded = true;
  }
  return NQGen0jesRelativeJEREC2dn_;
}

const int &VVV0Tree::NQGen1jesRelativeJEREC2dn() {
  if (not NQGen1jesRelativeJEREC2dn_isLoaded) {
    if (NQGen1jesRelativeJEREC2dn_branch != 0) {
      NQGen1jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesRelativeJEREC2dn_isLoaded = true;
  }
  return NQGen1jesRelativeJEREC2dn_;
}

const int &VVV0Tree::NQGen2jesRelativeJEREC2dn() {
  if (not NQGen2jesRelativeJEREC2dn_isLoaded) {
    if (NQGen2jesRelativeJEREC2dn_branch != 0) {
      NQGen2jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesRelativeJEREC2dn_isLoaded = true;
  }
  return NQGen2jesRelativeJEREC2dn_;
}

const int &VVV0Tree::NQGen3jesRelativeJEREC2dn() {
  if (not NQGen3jesRelativeJEREC2dn_isLoaded) {
    if (NQGen3jesRelativeJEREC2dn_branch != 0) {
      NQGen3jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesRelativeJEREC2dn_isLoaded = true;
  }
  return NQGen3jesRelativeJEREC2dn_;
}

const int &VVV0Tree::NQGen4jesRelativeJEREC2dn() {
  if (not NQGen4jesRelativeJEREC2dn_isLoaded) {
    if (NQGen4jesRelativeJEREC2dn_branch != 0) {
      NQGen4jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesRelativeJEREC2dn_isLoaded = true;
  }
  return NQGen4jesRelativeJEREC2dn_;
}

const int &VVV0Tree::NBGen0jesRelativeJEREC2dn() {
  if (not NBGen0jesRelativeJEREC2dn_isLoaded) {
    if (NBGen0jesRelativeJEREC2dn_branch != 0) {
      NBGen0jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesRelativeJEREC2dn_isLoaded = true;
  }
  return NBGen0jesRelativeJEREC2dn_;
}

const int &VVV0Tree::NBGen1jesRelativeJEREC2dn() {
  if (not NBGen1jesRelativeJEREC2dn_isLoaded) {
    if (NBGen1jesRelativeJEREC2dn_branch != 0) {
      NBGen1jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesRelativeJEREC2dn_isLoaded = true;
  }
  return NBGen1jesRelativeJEREC2dn_;
}

const int &VVV0Tree::NBGen2jesRelativeJEREC2dn() {
  if (not NBGen2jesRelativeJEREC2dn_isLoaded) {
    if (NBGen2jesRelativeJEREC2dn_branch != 0) {
      NBGen2jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesRelativeJEREC2dn_isLoaded = true;
  }
  return NBGen2jesRelativeJEREC2dn_;
}

const int &VVV0Tree::NBGen3jesRelativeJEREC2dn() {
  if (not NBGen3jesRelativeJEREC2dn_isLoaded) {
    if (NBGen3jesRelativeJEREC2dn_branch != 0) {
      NBGen3jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesRelativeJEREC2dn_isLoaded = true;
  }
  return NBGen3jesRelativeJEREC2dn_;
}

const int &VVV0Tree::NBGen4jesRelativeJEREC2dn() {
  if (not NBGen4jesRelativeJEREC2dn_isLoaded) {
    if (NBGen4jesRelativeJEREC2dn_branch != 0) {
      NBGen4jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesRelativeJEREC2dn_isLoaded = true;
  }
  return NBGen4jesRelativeJEREC2dn_;
}

const int &VVV0Tree::NLGen0jesRelativeJEREC2dn() {
  if (not NLGen0jesRelativeJEREC2dn_isLoaded) {
    if (NLGen0jesRelativeJEREC2dn_branch != 0) {
      NLGen0jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesRelativeJEREC2dn_isLoaded = true;
  }
  return NLGen0jesRelativeJEREC2dn_;
}

const int &VVV0Tree::NLGen1jesRelativeJEREC2dn() {
  if (not NLGen1jesRelativeJEREC2dn_isLoaded) {
    if (NLGen1jesRelativeJEREC2dn_branch != 0) {
      NLGen1jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesRelativeJEREC2dn_isLoaded = true;
  }
  return NLGen1jesRelativeJEREC2dn_;
}

const int &VVV0Tree::NLGen2jesRelativeJEREC2dn() {
  if (not NLGen2jesRelativeJEREC2dn_isLoaded) {
    if (NLGen2jesRelativeJEREC2dn_branch != 0) {
      NLGen2jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesRelativeJEREC2dn_isLoaded = true;
  }
  return NLGen2jesRelativeJEREC2dn_;
}

const int &VVV0Tree::NLGen3jesRelativeJEREC2dn() {
  if (not NLGen3jesRelativeJEREC2dn_isLoaded) {
    if (NLGen3jesRelativeJEREC2dn_branch != 0) {
      NLGen3jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesRelativeJEREC2dn_isLoaded = true;
  }
  return NLGen3jesRelativeJEREC2dn_;
}

const int &VVV0Tree::NLGen4jesRelativeJEREC2dn() {
  if (not NLGen4jesRelativeJEREC2dn_isLoaded) {
    if (NLGen4jesRelativeJEREC2dn_branch != 0) {
      NLGen4jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesRelativeJEREC2dn_isLoaded = true;
  }
  return NLGen4jesRelativeJEREC2dn_;
}

const int &VVV0Tree::NVQGen0jesRelativeJEREC2dn() {
  if (not NVQGen0jesRelativeJEREC2dn_isLoaded) {
    if (NVQGen0jesRelativeJEREC2dn_branch != 0) {
      NVQGen0jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesRelativeJEREC2dn_isLoaded = true;
  }
  return NVQGen0jesRelativeJEREC2dn_;
}

const int &VVV0Tree::NVQGen1jesRelativeJEREC2dn() {
  if (not NVQGen1jesRelativeJEREC2dn_isLoaded) {
    if (NVQGen1jesRelativeJEREC2dn_branch != 0) {
      NVQGen1jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesRelativeJEREC2dn_isLoaded = true;
  }
  return NVQGen1jesRelativeJEREC2dn_;
}

const int &VVV0Tree::NVQGen2jesRelativeJEREC2dn() {
  if (not NVQGen2jesRelativeJEREC2dn_isLoaded) {
    if (NVQGen2jesRelativeJEREC2dn_branch != 0) {
      NVQGen2jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesRelativeJEREC2dn_isLoaded = true;
  }
  return NVQGen2jesRelativeJEREC2dn_;
}

const int &VVV0Tree::NVQGen3jesRelativeJEREC2dn() {
  if (not NVQGen3jesRelativeJEREC2dn_isLoaded) {
    if (NVQGen3jesRelativeJEREC2dn_branch != 0) {
      NVQGen3jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesRelativeJEREC2dn_isLoaded = true;
  }
  return NVQGen3jesRelativeJEREC2dn_;
}

const int &VVV0Tree::NVQGen4jesRelativeJEREC2dn() {
  if (not NVQGen4jesRelativeJEREC2dn_isLoaded) {
    if (NVQGen4jesRelativeJEREC2dn_branch != 0) {
      NVQGen4jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesRelativeJEREC2dn_isLoaded = true;
  }
  return NVQGen4jesRelativeJEREC2dn_;
}

const int &VVV0Tree::NiFJjesRelativeJEREC2dn() {
  if (not NiFJjesRelativeJEREC2dn_isLoaded) {
    if (NiFJjesRelativeJEREC2dn_branch != 0) {
      NiFJjesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    NiFJjesRelativeJEREC2dn_isLoaded = true;
  }
  return NiFJjesRelativeJEREC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesRelativeJEREC2dn() {
  if (not iFJ0jesRelativeJEREC2dn_isLoaded) {
    if (iFJ0jesRelativeJEREC2dn_branch != 0) {
      iFJ0jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesRelativeJEREC2dn_isLoaded = true;
  }
  return *iFJ0jesRelativeJEREC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesRelativeJEREC2dn() {
  if (not iFJ1jesRelativeJEREC2dn_isLoaded) {
    if (iFJ1jesRelativeJEREC2dn_branch != 0) {
      iFJ1jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesRelativeJEREC2dn_isLoaded = true;
  }
  return *iFJ1jesRelativeJEREC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesRelativeJEREC2dn() {
  if (not iFJ2jesRelativeJEREC2dn_isLoaded) {
    if (iFJ2jesRelativeJEREC2dn_branch != 0) {
      iFJ2jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesRelativeJEREC2dn_isLoaded = true;
  }
  return *iFJ2jesRelativeJEREC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesRelativeJEREC2dn() {
  if (not iFJ3jesRelativeJEREC2dn_isLoaded) {
    if (iFJ3jesRelativeJEREC2dn_branch != 0) {
      iFJ3jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesRelativeJEREC2dn_isLoaded = true;
  }
  return *iFJ3jesRelativeJEREC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesRelativeJEREC2dn() {
  if (not iFJ4jesRelativeJEREC2dn_isLoaded) {
    if (iFJ4jesRelativeJEREC2dn_branch != 0) {
      iFJ4jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesRelativeJEREC2dn_isLoaded = true;
  }
  return *iFJ4jesRelativeJEREC2dn_;
}

const float &VVV0Tree::iVMD0jesRelativeJEREC2dn() {
  if (not iVMD0jesRelativeJEREC2dn_isLoaded) {
    if (iVMD0jesRelativeJEREC2dn_branch != 0) {
      iVMD0jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesRelativeJEREC2dn_isLoaded = true;
  }
  return iVMD0jesRelativeJEREC2dn_;
}

const float &VVV0Tree::iVMD1jesRelativeJEREC2dn() {
  if (not iVMD1jesRelativeJEREC2dn_isLoaded) {
    if (iVMD1jesRelativeJEREC2dn_branch != 0) {
      iVMD1jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesRelativeJEREC2dn_isLoaded = true;
  }
  return iVMD1jesRelativeJEREC2dn_;
}

const float &VVV0Tree::iVMD2jesRelativeJEREC2dn() {
  if (not iVMD2jesRelativeJEREC2dn_isLoaded) {
    if (iVMD2jesRelativeJEREC2dn_branch != 0) {
      iVMD2jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesRelativeJEREC2dn_isLoaded = true;
  }
  return iVMD2jesRelativeJEREC2dn_;
}

const float &VVV0Tree::iVMD3jesRelativeJEREC2dn() {
  if (not iVMD3jesRelativeJEREC2dn_isLoaded) {
    if (iVMD3jesRelativeJEREC2dn_branch != 0) {
      iVMD3jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesRelativeJEREC2dn_isLoaded = true;
  }
  return iVMD3jesRelativeJEREC2dn_;
}

const float &VVV0Tree::iVMD4jesRelativeJEREC2dn() {
  if (not iVMD4jesRelativeJEREC2dn_isLoaded) {
    if (iVMD4jesRelativeJEREC2dn_branch != 0) {
      iVMD4jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesRelativeJEREC2dn_isLoaded = true;
  }
  return iVMD4jesRelativeJEREC2dn_;
}

const float &VVV0Tree::iWMD0jesRelativeJEREC2dn() {
  if (not iWMD0jesRelativeJEREC2dn_isLoaded) {
    if (iWMD0jesRelativeJEREC2dn_branch != 0) {
      iWMD0jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesRelativeJEREC2dn_isLoaded = true;
  }
  return iWMD0jesRelativeJEREC2dn_;
}

const float &VVV0Tree::iWMD1jesRelativeJEREC2dn() {
  if (not iWMD1jesRelativeJEREC2dn_isLoaded) {
    if (iWMD1jesRelativeJEREC2dn_branch != 0) {
      iWMD1jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesRelativeJEREC2dn_isLoaded = true;
  }
  return iWMD1jesRelativeJEREC2dn_;
}

const float &VVV0Tree::iWMD2jesRelativeJEREC2dn() {
  if (not iWMD2jesRelativeJEREC2dn_isLoaded) {
    if (iWMD2jesRelativeJEREC2dn_branch != 0) {
      iWMD2jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesRelativeJEREC2dn_isLoaded = true;
  }
  return iWMD2jesRelativeJEREC2dn_;
}

const float &VVV0Tree::iWMD3jesRelativeJEREC2dn() {
  if (not iWMD3jesRelativeJEREC2dn_isLoaded) {
    if (iWMD3jesRelativeJEREC2dn_branch != 0) {
      iWMD3jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesRelativeJEREC2dn_isLoaded = true;
  }
  return iWMD3jesRelativeJEREC2dn_;
}

const float &VVV0Tree::iWMD4jesRelativeJEREC2dn() {
  if (not iWMD4jesRelativeJEREC2dn_isLoaded) {
    if (iWMD4jesRelativeJEREC2dn_branch != 0) {
      iWMD4jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesRelativeJEREC2dn_isLoaded = true;
  }
  return iWMD4jesRelativeJEREC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesRelativeJEREC2dn() {
  if (not METjesRelativeJEREC2dn_isLoaded) {
    if (METjesRelativeJEREC2dn_branch != 0) {
      METjesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch METjesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    METjesRelativeJEREC2dn_isLoaded = true;
  }
  return *METjesRelativeJEREC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesRelativeJEREC2dn() {
  if (not NujesRelativeJEREC2dn_isLoaded) {
    if (NujesRelativeJEREC2dn_branch != 0) {
      NujesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch NujesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    NujesRelativeJEREC2dn_isLoaded = true;
  }
  return *NujesRelativeJEREC2dn_;
}

const int &VVV0Tree::NJjesRelativeJEREC2dn() {
  if (not NJjesRelativeJEREC2dn_isLoaded) {
    if (NJjesRelativeJEREC2dn_branch != 0) {
      NJjesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch NJjesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    NJjesRelativeJEREC2dn_isLoaded = true;
  }
  return NJjesRelativeJEREC2dn_;
}

const int &VVV0Tree::NbLoosejesRelativeJEREC2dn() {
  if (not NbLoosejesRelativeJEREC2dn_isLoaded) {
    if (NbLoosejesRelativeJEREC2dn_branch != 0) {
      NbLoosejesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesRelativeJEREC2dn_isLoaded = true;
  }
  return NbLoosejesRelativeJEREC2dn_;
}

const int &VVV0Tree::NbMediumjesRelativeJEREC2dn() {
  if (not NbMediumjesRelativeJEREC2dn_isLoaded) {
    if (NbMediumjesRelativeJEREC2dn_branch != 0) {
      NbMediumjesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesRelativeJEREC2dn_isLoaded = true;
  }
  return NbMediumjesRelativeJEREC2dn_;
}

const int &VVV0Tree::NbTightjesRelativeJEREC2dn() {
  if (not NbTightjesRelativeJEREC2dn_isLoaded) {
    if (NbTightjesRelativeJEREC2dn_branch != 0) {
      NbTightjesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    NbTightjesRelativeJEREC2dn_isLoaded = true;
  }
  return NbTightjesRelativeJEREC2dn_;
}

const int &VVV0Tree::NoORNbLoosejesRelativeJEREC2dn() {
  if (not NoORNbLoosejesRelativeJEREC2dn_isLoaded) {
    if (NoORNbLoosejesRelativeJEREC2dn_branch != 0) {
      NoORNbLoosejesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesRelativeJEREC2dn_isLoaded = true;
  }
  return NoORNbLoosejesRelativeJEREC2dn_;
}

const int &VVV0Tree::NoORNbMediumjesRelativeJEREC2dn() {
  if (not NoORNbMediumjesRelativeJEREC2dn_isLoaded) {
    if (NoORNbMediumjesRelativeJEREC2dn_branch != 0) {
      NoORNbMediumjesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesRelativeJEREC2dn_isLoaded = true;
  }
  return NoORNbMediumjesRelativeJEREC2dn_;
}

const int &VVV0Tree::NoORNbTightjesRelativeJEREC2dn() {
  if (not NoORNbTightjesRelativeJEREC2dn_isLoaded) {
    if (NoORNbTightjesRelativeJEREC2dn_branch != 0) {
      NoORNbTightjesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesRelativeJEREC2dn_isLoaded = true;
  }
  return NoORNbTightjesRelativeJEREC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesRelativeJEREC2dn() {
  if (not J0jesRelativeJEREC2dn_isLoaded) {
    if (J0jesRelativeJEREC2dn_branch != 0) {
      J0jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch J0jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    J0jesRelativeJEREC2dn_isLoaded = true;
  }
  return *J0jesRelativeJEREC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesRelativeJEREC2dn() {
  if (not J1jesRelativeJEREC2dn_isLoaded) {
    if (J1jesRelativeJEREC2dn_branch != 0) {
      J1jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch J1jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    J1jesRelativeJEREC2dn_isLoaded = true;
  }
  return *J1jesRelativeJEREC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesRelativeJEREC2dn() {
  if (not J2jesRelativeJEREC2dn_isLoaded) {
    if (J2jesRelativeJEREC2dn_branch != 0) {
      J2jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch J2jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    J2jesRelativeJEREC2dn_isLoaded = true;
  }
  return *J2jesRelativeJEREC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesRelativeJEREC2dn() {
  if (not J3jesRelativeJEREC2dn_isLoaded) {
    if (J3jesRelativeJEREC2dn_branch != 0) {
      J3jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch J3jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    J3jesRelativeJEREC2dn_isLoaded = true;
  }
  return *J3jesRelativeJEREC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesRelativeJEREC2dn() {
  if (not J4jesRelativeJEREC2dn_isLoaded) {
    if (J4jesRelativeJEREC2dn_branch != 0) {
      J4jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch J4jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    J4jesRelativeJEREC2dn_isLoaded = true;
  }
  return *J4jesRelativeJEREC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesRelativeJEREC2dn() {
  if (not J5jesRelativeJEREC2dn_isLoaded) {
    if (J5jesRelativeJEREC2dn_branch != 0) {
      J5jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch J5jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    J5jesRelativeJEREC2dn_isLoaded = true;
  }
  return *J5jesRelativeJEREC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesRelativeJEREC2dn() {
  if (not J6jesRelativeJEREC2dn_isLoaded) {
    if (J6jesRelativeJEREC2dn_branch != 0) {
      J6jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch J6jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    J6jesRelativeJEREC2dn_isLoaded = true;
  }
  return *J6jesRelativeJEREC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesRelativeJEREC2dn() {
  if (not J7jesRelativeJEREC2dn_isLoaded) {
    if (J7jesRelativeJEREC2dn_branch != 0) {
      J7jesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch J7jesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    J7jesRelativeJEREC2dn_isLoaded = true;
  }
  return *J7jesRelativeJEREC2dn_;
}

const vector<int> &VVV0Tree::NQJGenjesRelativeJEREC2dn() {
  if (not NQJGenjesRelativeJEREC2dn_isLoaded) {
    if (NQJGenjesRelativeJEREC2dn_branch != 0) {
      NQJGenjesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesRelativeJEREC2dn_isLoaded = true;
  }
  return *NQJGenjesRelativeJEREC2dn_;
}

const vector<int> &VVV0Tree::NBJGenjesRelativeJEREC2dn() {
  if (not NBJGenjesRelativeJEREC2dn_isLoaded) {
    if (NBJGenjesRelativeJEREC2dn_branch != 0) {
      NBJGenjesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesRelativeJEREC2dn_isLoaded = true;
  }
  return *NBJGenjesRelativeJEREC2dn_;
}

const vector<int> &VVV0Tree::NLJGenjesRelativeJEREC2dn() {
  if (not NLJGenjesRelativeJEREC2dn_isLoaded) {
    if (NLJGenjesRelativeJEREC2dn_branch != 0) {
      NLJGenjesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesRelativeJEREC2dn_isLoaded = true;
  }
  return *NLJGenjesRelativeJEREC2dn_;
}

const float &VVV0Tree::MVVXjesRelativeJEREC2dn() {
  if (not MVVXjesRelativeJEREC2dn_isLoaded) {
    if (MVVXjesRelativeJEREC2dn_branch != 0) {
      MVVXjesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    MVVXjesRelativeJEREC2dn_isLoaded = true;
  }
  return MVVXjesRelativeJEREC2dn_;
}

const float &VVV0Tree::PtVVXjesRelativeJEREC2dn() {
  if (not PtVVXjesRelativeJEREC2dn_isLoaded) {
    if (PtVVXjesRelativeJEREC2dn_branch != 0) {
      PtVVXjesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesRelativeJEREC2dn_isLoaded = true;
  }
  return PtVVXjesRelativeJEREC2dn_;
}

const float &VVV0Tree::HTjesRelativeJEREC2dn() {
  if (not HTjesRelativeJEREC2dn_isLoaded) {
    if (HTjesRelativeJEREC2dn_branch != 0) {
      HTjesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch HTjesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    HTjesRelativeJEREC2dn_isLoaded = true;
  }
  return HTjesRelativeJEREC2dn_;
}

const float &VVV0Tree::HTJjesRelativeJEREC2dn() {
  if (not HTJjesRelativeJEREC2dn_isLoaded) {
    if (HTJjesRelativeJEREC2dn_branch != 0) {
      HTJjesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch HTJjesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    HTJjesRelativeJEREC2dn_isLoaded = true;
  }
  return HTJjesRelativeJEREC2dn_;
}

const float &VVV0Tree::HTFJjesRelativeJEREC2dn() {
  if (not HTFJjesRelativeJEREC2dn_isLoaded) {
    if (HTFJjesRelativeJEREC2dn_branch != 0) {
      HTFJjesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    HTFJjesRelativeJEREC2dn_isLoaded = true;
  }
  return HTFJjesRelativeJEREC2dn_;
}

const float &VVV0Tree::SumPtFJjesRelativeJEREC2dn() {
  if (not SumPtFJjesRelativeJEREC2dn_isLoaded) {
    if (SumPtFJjesRelativeJEREC2dn_branch != 0) {
      SumPtFJjesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesRelativeJEREC2dn_isLoaded = true;
  }
  return SumPtFJjesRelativeJEREC2dn_;
}

const float &VVV0Tree::SumPtJjesRelativeJEREC2dn() {
  if (not SumPtJjesRelativeJEREC2dn_isLoaded) {
    if (SumPtJjesRelativeJEREC2dn_branch != 0) {
      SumPtJjesRelativeJEREC2dn_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesRelativeJEREC2dn_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesRelativeJEREC2dn_isLoaded = true;
  }
  return SumPtJjesRelativeJEREC2dn_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesRelativeJERHFup() {
  if (not JsjesRelativeJERHFup_isLoaded) {
    if (JsjesRelativeJERHFup_branch != 0) {
      JsjesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch JsjesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    JsjesRelativeJERHFup_isLoaded = true;
  }
  return *JsjesRelativeJERHFup_;
}

const int &VVV0Tree::NFJjesRelativeJERHFup() {
  if (not NFJjesRelativeJERHFup_isLoaded) {
    if (NFJjesRelativeJERHFup_branch != 0) {
      NFJjesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch NFJjesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    NFJjesRelativeJERHFup_isLoaded = true;
  }
  return NFJjesRelativeJERHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesRelativeJERHFup() {
  if (not FJ0jesRelativeJERHFup_isLoaded) {
    if (FJ0jesRelativeJERHFup_branch != 0) {
      FJ0jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    FJ0jesRelativeJERHFup_isLoaded = true;
  }
  return *FJ0jesRelativeJERHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesRelativeJERHFup() {
  if (not FJ1jesRelativeJERHFup_isLoaded) {
    if (FJ1jesRelativeJERHFup_branch != 0) {
      FJ1jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    FJ1jesRelativeJERHFup_isLoaded = true;
  }
  return *FJ1jesRelativeJERHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesRelativeJERHFup() {
  if (not FJ2jesRelativeJERHFup_isLoaded) {
    if (FJ2jesRelativeJERHFup_branch != 0) {
      FJ2jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    FJ2jesRelativeJERHFup_isLoaded = true;
  }
  return *FJ2jesRelativeJERHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesRelativeJERHFup() {
  if (not FJ3jesRelativeJERHFup_isLoaded) {
    if (FJ3jesRelativeJERHFup_branch != 0) {
      FJ3jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    FJ3jesRelativeJERHFup_isLoaded = true;
  }
  return *FJ3jesRelativeJERHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesRelativeJERHFup() {
  if (not FJ4jesRelativeJERHFup_isLoaded) {
    if (FJ4jesRelativeJERHFup_branch != 0) {
      FJ4jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    FJ4jesRelativeJERHFup_isLoaded = true;
  }
  return *FJ4jesRelativeJERHFup_;
}

const float &VVV0Tree::VMD0jesRelativeJERHFup() {
  if (not VMD0jesRelativeJERHFup_isLoaded) {
    if (VMD0jesRelativeJERHFup_branch != 0) {
      VMD0jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    VMD0jesRelativeJERHFup_isLoaded = true;
  }
  return VMD0jesRelativeJERHFup_;
}

const float &VVV0Tree::VMD1jesRelativeJERHFup() {
  if (not VMD1jesRelativeJERHFup_isLoaded) {
    if (VMD1jesRelativeJERHFup_branch != 0) {
      VMD1jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    VMD1jesRelativeJERHFup_isLoaded = true;
  }
  return VMD1jesRelativeJERHFup_;
}

const float &VVV0Tree::VMD2jesRelativeJERHFup() {
  if (not VMD2jesRelativeJERHFup_isLoaded) {
    if (VMD2jesRelativeJERHFup_branch != 0) {
      VMD2jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    VMD2jesRelativeJERHFup_isLoaded = true;
  }
  return VMD2jesRelativeJERHFup_;
}

const float &VVV0Tree::VMD3jesRelativeJERHFup() {
  if (not VMD3jesRelativeJERHFup_isLoaded) {
    if (VMD3jesRelativeJERHFup_branch != 0) {
      VMD3jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    VMD3jesRelativeJERHFup_isLoaded = true;
  }
  return VMD3jesRelativeJERHFup_;
}

const float &VVV0Tree::VMD4jesRelativeJERHFup() {
  if (not VMD4jesRelativeJERHFup_isLoaded) {
    if (VMD4jesRelativeJERHFup_branch != 0) {
      VMD4jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    VMD4jesRelativeJERHFup_isLoaded = true;
  }
  return VMD4jesRelativeJERHFup_;
}

const float &VVV0Tree::WMD0jesRelativeJERHFup() {
  if (not WMD0jesRelativeJERHFup_isLoaded) {
    if (WMD0jesRelativeJERHFup_branch != 0) {
      WMD0jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    WMD0jesRelativeJERHFup_isLoaded = true;
  }
  return WMD0jesRelativeJERHFup_;
}

const float &VVV0Tree::WMD1jesRelativeJERHFup() {
  if (not WMD1jesRelativeJERHFup_isLoaded) {
    if (WMD1jesRelativeJERHFup_branch != 0) {
      WMD1jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    WMD1jesRelativeJERHFup_isLoaded = true;
  }
  return WMD1jesRelativeJERHFup_;
}

const float &VVV0Tree::WMD2jesRelativeJERHFup() {
  if (not WMD2jesRelativeJERHFup_isLoaded) {
    if (WMD2jesRelativeJERHFup_branch != 0) {
      WMD2jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    WMD2jesRelativeJERHFup_isLoaded = true;
  }
  return WMD2jesRelativeJERHFup_;
}

const float &VVV0Tree::WMD3jesRelativeJERHFup() {
  if (not WMD3jesRelativeJERHFup_isLoaded) {
    if (WMD3jesRelativeJERHFup_branch != 0) {
      WMD3jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    WMD3jesRelativeJERHFup_isLoaded = true;
  }
  return WMD3jesRelativeJERHFup_;
}

const float &VVV0Tree::WMD4jesRelativeJERHFup() {
  if (not WMD4jesRelativeJERHFup_isLoaded) {
    if (WMD4jesRelativeJERHFup_branch != 0) {
      WMD4jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    WMD4jesRelativeJERHFup_isLoaded = true;
  }
  return WMD4jesRelativeJERHFup_;
}

const int &VVV0Tree::NQGen0jesRelativeJERHFup() {
  if (not NQGen0jesRelativeJERHFup_isLoaded) {
    if (NQGen0jesRelativeJERHFup_branch != 0) {
      NQGen0jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesRelativeJERHFup_isLoaded = true;
  }
  return NQGen0jesRelativeJERHFup_;
}

const int &VVV0Tree::NQGen1jesRelativeJERHFup() {
  if (not NQGen1jesRelativeJERHFup_isLoaded) {
    if (NQGen1jesRelativeJERHFup_branch != 0) {
      NQGen1jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesRelativeJERHFup_isLoaded = true;
  }
  return NQGen1jesRelativeJERHFup_;
}

const int &VVV0Tree::NQGen2jesRelativeJERHFup() {
  if (not NQGen2jesRelativeJERHFup_isLoaded) {
    if (NQGen2jesRelativeJERHFup_branch != 0) {
      NQGen2jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesRelativeJERHFup_isLoaded = true;
  }
  return NQGen2jesRelativeJERHFup_;
}

const int &VVV0Tree::NQGen3jesRelativeJERHFup() {
  if (not NQGen3jesRelativeJERHFup_isLoaded) {
    if (NQGen3jesRelativeJERHFup_branch != 0) {
      NQGen3jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesRelativeJERHFup_isLoaded = true;
  }
  return NQGen3jesRelativeJERHFup_;
}

const int &VVV0Tree::NQGen4jesRelativeJERHFup() {
  if (not NQGen4jesRelativeJERHFup_isLoaded) {
    if (NQGen4jesRelativeJERHFup_branch != 0) {
      NQGen4jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesRelativeJERHFup_isLoaded = true;
  }
  return NQGen4jesRelativeJERHFup_;
}

const int &VVV0Tree::NBGen0jesRelativeJERHFup() {
  if (not NBGen0jesRelativeJERHFup_isLoaded) {
    if (NBGen0jesRelativeJERHFup_branch != 0) {
      NBGen0jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesRelativeJERHFup_isLoaded = true;
  }
  return NBGen0jesRelativeJERHFup_;
}

const int &VVV0Tree::NBGen1jesRelativeJERHFup() {
  if (not NBGen1jesRelativeJERHFup_isLoaded) {
    if (NBGen1jesRelativeJERHFup_branch != 0) {
      NBGen1jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesRelativeJERHFup_isLoaded = true;
  }
  return NBGen1jesRelativeJERHFup_;
}

const int &VVV0Tree::NBGen2jesRelativeJERHFup() {
  if (not NBGen2jesRelativeJERHFup_isLoaded) {
    if (NBGen2jesRelativeJERHFup_branch != 0) {
      NBGen2jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesRelativeJERHFup_isLoaded = true;
  }
  return NBGen2jesRelativeJERHFup_;
}

const int &VVV0Tree::NBGen3jesRelativeJERHFup() {
  if (not NBGen3jesRelativeJERHFup_isLoaded) {
    if (NBGen3jesRelativeJERHFup_branch != 0) {
      NBGen3jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesRelativeJERHFup_isLoaded = true;
  }
  return NBGen3jesRelativeJERHFup_;
}

const int &VVV0Tree::NBGen4jesRelativeJERHFup() {
  if (not NBGen4jesRelativeJERHFup_isLoaded) {
    if (NBGen4jesRelativeJERHFup_branch != 0) {
      NBGen4jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesRelativeJERHFup_isLoaded = true;
  }
  return NBGen4jesRelativeJERHFup_;
}

const int &VVV0Tree::NLGen0jesRelativeJERHFup() {
  if (not NLGen0jesRelativeJERHFup_isLoaded) {
    if (NLGen0jesRelativeJERHFup_branch != 0) {
      NLGen0jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesRelativeJERHFup_isLoaded = true;
  }
  return NLGen0jesRelativeJERHFup_;
}

const int &VVV0Tree::NLGen1jesRelativeJERHFup() {
  if (not NLGen1jesRelativeJERHFup_isLoaded) {
    if (NLGen1jesRelativeJERHFup_branch != 0) {
      NLGen1jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesRelativeJERHFup_isLoaded = true;
  }
  return NLGen1jesRelativeJERHFup_;
}

const int &VVV0Tree::NLGen2jesRelativeJERHFup() {
  if (not NLGen2jesRelativeJERHFup_isLoaded) {
    if (NLGen2jesRelativeJERHFup_branch != 0) {
      NLGen2jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesRelativeJERHFup_isLoaded = true;
  }
  return NLGen2jesRelativeJERHFup_;
}

const int &VVV0Tree::NLGen3jesRelativeJERHFup() {
  if (not NLGen3jesRelativeJERHFup_isLoaded) {
    if (NLGen3jesRelativeJERHFup_branch != 0) {
      NLGen3jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesRelativeJERHFup_isLoaded = true;
  }
  return NLGen3jesRelativeJERHFup_;
}

const int &VVV0Tree::NLGen4jesRelativeJERHFup() {
  if (not NLGen4jesRelativeJERHFup_isLoaded) {
    if (NLGen4jesRelativeJERHFup_branch != 0) {
      NLGen4jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesRelativeJERHFup_isLoaded = true;
  }
  return NLGen4jesRelativeJERHFup_;
}

const int &VVV0Tree::NVQGen0jesRelativeJERHFup() {
  if (not NVQGen0jesRelativeJERHFup_isLoaded) {
    if (NVQGen0jesRelativeJERHFup_branch != 0) {
      NVQGen0jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesRelativeJERHFup_isLoaded = true;
  }
  return NVQGen0jesRelativeJERHFup_;
}

const int &VVV0Tree::NVQGen1jesRelativeJERHFup() {
  if (not NVQGen1jesRelativeJERHFup_isLoaded) {
    if (NVQGen1jesRelativeJERHFup_branch != 0) {
      NVQGen1jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesRelativeJERHFup_isLoaded = true;
  }
  return NVQGen1jesRelativeJERHFup_;
}

const int &VVV0Tree::NVQGen2jesRelativeJERHFup() {
  if (not NVQGen2jesRelativeJERHFup_isLoaded) {
    if (NVQGen2jesRelativeJERHFup_branch != 0) {
      NVQGen2jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesRelativeJERHFup_isLoaded = true;
  }
  return NVQGen2jesRelativeJERHFup_;
}

const int &VVV0Tree::NVQGen3jesRelativeJERHFup() {
  if (not NVQGen3jesRelativeJERHFup_isLoaded) {
    if (NVQGen3jesRelativeJERHFup_branch != 0) {
      NVQGen3jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesRelativeJERHFup_isLoaded = true;
  }
  return NVQGen3jesRelativeJERHFup_;
}

const int &VVV0Tree::NVQGen4jesRelativeJERHFup() {
  if (not NVQGen4jesRelativeJERHFup_isLoaded) {
    if (NVQGen4jesRelativeJERHFup_branch != 0) {
      NVQGen4jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesRelativeJERHFup_isLoaded = true;
  }
  return NVQGen4jesRelativeJERHFup_;
}

const int &VVV0Tree::NiFJjesRelativeJERHFup() {
  if (not NiFJjesRelativeJERHFup_isLoaded) {
    if (NiFJjesRelativeJERHFup_branch != 0) {
      NiFJjesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    NiFJjesRelativeJERHFup_isLoaded = true;
  }
  return NiFJjesRelativeJERHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesRelativeJERHFup() {
  if (not iFJ0jesRelativeJERHFup_isLoaded) {
    if (iFJ0jesRelativeJERHFup_branch != 0) {
      iFJ0jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesRelativeJERHFup_isLoaded = true;
  }
  return *iFJ0jesRelativeJERHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesRelativeJERHFup() {
  if (not iFJ1jesRelativeJERHFup_isLoaded) {
    if (iFJ1jesRelativeJERHFup_branch != 0) {
      iFJ1jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesRelativeJERHFup_isLoaded = true;
  }
  return *iFJ1jesRelativeJERHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesRelativeJERHFup() {
  if (not iFJ2jesRelativeJERHFup_isLoaded) {
    if (iFJ2jesRelativeJERHFup_branch != 0) {
      iFJ2jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesRelativeJERHFup_isLoaded = true;
  }
  return *iFJ2jesRelativeJERHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesRelativeJERHFup() {
  if (not iFJ3jesRelativeJERHFup_isLoaded) {
    if (iFJ3jesRelativeJERHFup_branch != 0) {
      iFJ3jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesRelativeJERHFup_isLoaded = true;
  }
  return *iFJ3jesRelativeJERHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesRelativeJERHFup() {
  if (not iFJ4jesRelativeJERHFup_isLoaded) {
    if (iFJ4jesRelativeJERHFup_branch != 0) {
      iFJ4jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesRelativeJERHFup_isLoaded = true;
  }
  return *iFJ4jesRelativeJERHFup_;
}

const float &VVV0Tree::iVMD0jesRelativeJERHFup() {
  if (not iVMD0jesRelativeJERHFup_isLoaded) {
    if (iVMD0jesRelativeJERHFup_branch != 0) {
      iVMD0jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesRelativeJERHFup_isLoaded = true;
  }
  return iVMD0jesRelativeJERHFup_;
}

const float &VVV0Tree::iVMD1jesRelativeJERHFup() {
  if (not iVMD1jesRelativeJERHFup_isLoaded) {
    if (iVMD1jesRelativeJERHFup_branch != 0) {
      iVMD1jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesRelativeJERHFup_isLoaded = true;
  }
  return iVMD1jesRelativeJERHFup_;
}

const float &VVV0Tree::iVMD2jesRelativeJERHFup() {
  if (not iVMD2jesRelativeJERHFup_isLoaded) {
    if (iVMD2jesRelativeJERHFup_branch != 0) {
      iVMD2jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesRelativeJERHFup_isLoaded = true;
  }
  return iVMD2jesRelativeJERHFup_;
}

const float &VVV0Tree::iVMD3jesRelativeJERHFup() {
  if (not iVMD3jesRelativeJERHFup_isLoaded) {
    if (iVMD3jesRelativeJERHFup_branch != 0) {
      iVMD3jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesRelativeJERHFup_isLoaded = true;
  }
  return iVMD3jesRelativeJERHFup_;
}

const float &VVV0Tree::iVMD4jesRelativeJERHFup() {
  if (not iVMD4jesRelativeJERHFup_isLoaded) {
    if (iVMD4jesRelativeJERHFup_branch != 0) {
      iVMD4jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesRelativeJERHFup_isLoaded = true;
  }
  return iVMD4jesRelativeJERHFup_;
}

const float &VVV0Tree::iWMD0jesRelativeJERHFup() {
  if (not iWMD0jesRelativeJERHFup_isLoaded) {
    if (iWMD0jesRelativeJERHFup_branch != 0) {
      iWMD0jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesRelativeJERHFup_isLoaded = true;
  }
  return iWMD0jesRelativeJERHFup_;
}

const float &VVV0Tree::iWMD1jesRelativeJERHFup() {
  if (not iWMD1jesRelativeJERHFup_isLoaded) {
    if (iWMD1jesRelativeJERHFup_branch != 0) {
      iWMD1jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesRelativeJERHFup_isLoaded = true;
  }
  return iWMD1jesRelativeJERHFup_;
}

const float &VVV0Tree::iWMD2jesRelativeJERHFup() {
  if (not iWMD2jesRelativeJERHFup_isLoaded) {
    if (iWMD2jesRelativeJERHFup_branch != 0) {
      iWMD2jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesRelativeJERHFup_isLoaded = true;
  }
  return iWMD2jesRelativeJERHFup_;
}

const float &VVV0Tree::iWMD3jesRelativeJERHFup() {
  if (not iWMD3jesRelativeJERHFup_isLoaded) {
    if (iWMD3jesRelativeJERHFup_branch != 0) {
      iWMD3jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesRelativeJERHFup_isLoaded = true;
  }
  return iWMD3jesRelativeJERHFup_;
}

const float &VVV0Tree::iWMD4jesRelativeJERHFup() {
  if (not iWMD4jesRelativeJERHFup_isLoaded) {
    if (iWMD4jesRelativeJERHFup_branch != 0) {
      iWMD4jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesRelativeJERHFup_isLoaded = true;
  }
  return iWMD4jesRelativeJERHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesRelativeJERHFup() {
  if (not METjesRelativeJERHFup_isLoaded) {
    if (METjesRelativeJERHFup_branch != 0) {
      METjesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch METjesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    METjesRelativeJERHFup_isLoaded = true;
  }
  return *METjesRelativeJERHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesRelativeJERHFup() {
  if (not NujesRelativeJERHFup_isLoaded) {
    if (NujesRelativeJERHFup_branch != 0) {
      NujesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch NujesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    NujesRelativeJERHFup_isLoaded = true;
  }
  return *NujesRelativeJERHFup_;
}

const int &VVV0Tree::NJjesRelativeJERHFup() {
  if (not NJjesRelativeJERHFup_isLoaded) {
    if (NJjesRelativeJERHFup_branch != 0) {
      NJjesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch NJjesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    NJjesRelativeJERHFup_isLoaded = true;
  }
  return NJjesRelativeJERHFup_;
}

const int &VVV0Tree::NbLoosejesRelativeJERHFup() {
  if (not NbLoosejesRelativeJERHFup_isLoaded) {
    if (NbLoosejesRelativeJERHFup_branch != 0) {
      NbLoosejesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesRelativeJERHFup_isLoaded = true;
  }
  return NbLoosejesRelativeJERHFup_;
}

const int &VVV0Tree::NbMediumjesRelativeJERHFup() {
  if (not NbMediumjesRelativeJERHFup_isLoaded) {
    if (NbMediumjesRelativeJERHFup_branch != 0) {
      NbMediumjesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesRelativeJERHFup_isLoaded = true;
  }
  return NbMediumjesRelativeJERHFup_;
}

const int &VVV0Tree::NbTightjesRelativeJERHFup() {
  if (not NbTightjesRelativeJERHFup_isLoaded) {
    if (NbTightjesRelativeJERHFup_branch != 0) {
      NbTightjesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    NbTightjesRelativeJERHFup_isLoaded = true;
  }
  return NbTightjesRelativeJERHFup_;
}

const int &VVV0Tree::NoORNbLoosejesRelativeJERHFup() {
  if (not NoORNbLoosejesRelativeJERHFup_isLoaded) {
    if (NoORNbLoosejesRelativeJERHFup_branch != 0) {
      NoORNbLoosejesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesRelativeJERHFup_isLoaded = true;
  }
  return NoORNbLoosejesRelativeJERHFup_;
}

const int &VVV0Tree::NoORNbMediumjesRelativeJERHFup() {
  if (not NoORNbMediumjesRelativeJERHFup_isLoaded) {
    if (NoORNbMediumjesRelativeJERHFup_branch != 0) {
      NoORNbMediumjesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesRelativeJERHFup_isLoaded = true;
  }
  return NoORNbMediumjesRelativeJERHFup_;
}

const int &VVV0Tree::NoORNbTightjesRelativeJERHFup() {
  if (not NoORNbTightjesRelativeJERHFup_isLoaded) {
    if (NoORNbTightjesRelativeJERHFup_branch != 0) {
      NoORNbTightjesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesRelativeJERHFup_isLoaded = true;
  }
  return NoORNbTightjesRelativeJERHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesRelativeJERHFup() {
  if (not J0jesRelativeJERHFup_isLoaded) {
    if (J0jesRelativeJERHFup_branch != 0) {
      J0jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch J0jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    J0jesRelativeJERHFup_isLoaded = true;
  }
  return *J0jesRelativeJERHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesRelativeJERHFup() {
  if (not J1jesRelativeJERHFup_isLoaded) {
    if (J1jesRelativeJERHFup_branch != 0) {
      J1jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch J1jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    J1jesRelativeJERHFup_isLoaded = true;
  }
  return *J1jesRelativeJERHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesRelativeJERHFup() {
  if (not J2jesRelativeJERHFup_isLoaded) {
    if (J2jesRelativeJERHFup_branch != 0) {
      J2jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch J2jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    J2jesRelativeJERHFup_isLoaded = true;
  }
  return *J2jesRelativeJERHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesRelativeJERHFup() {
  if (not J3jesRelativeJERHFup_isLoaded) {
    if (J3jesRelativeJERHFup_branch != 0) {
      J3jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch J3jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    J3jesRelativeJERHFup_isLoaded = true;
  }
  return *J3jesRelativeJERHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesRelativeJERHFup() {
  if (not J4jesRelativeJERHFup_isLoaded) {
    if (J4jesRelativeJERHFup_branch != 0) {
      J4jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch J4jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    J4jesRelativeJERHFup_isLoaded = true;
  }
  return *J4jesRelativeJERHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesRelativeJERHFup() {
  if (not J5jesRelativeJERHFup_isLoaded) {
    if (J5jesRelativeJERHFup_branch != 0) {
      J5jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch J5jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    J5jesRelativeJERHFup_isLoaded = true;
  }
  return *J5jesRelativeJERHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesRelativeJERHFup() {
  if (not J6jesRelativeJERHFup_isLoaded) {
    if (J6jesRelativeJERHFup_branch != 0) {
      J6jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch J6jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    J6jesRelativeJERHFup_isLoaded = true;
  }
  return *J6jesRelativeJERHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesRelativeJERHFup() {
  if (not J7jesRelativeJERHFup_isLoaded) {
    if (J7jesRelativeJERHFup_branch != 0) {
      J7jesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch J7jesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    J7jesRelativeJERHFup_isLoaded = true;
  }
  return *J7jesRelativeJERHFup_;
}

const vector<int> &VVV0Tree::NQJGenjesRelativeJERHFup() {
  if (not NQJGenjesRelativeJERHFup_isLoaded) {
    if (NQJGenjesRelativeJERHFup_branch != 0) {
      NQJGenjesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesRelativeJERHFup_isLoaded = true;
  }
  return *NQJGenjesRelativeJERHFup_;
}

const vector<int> &VVV0Tree::NBJGenjesRelativeJERHFup() {
  if (not NBJGenjesRelativeJERHFup_isLoaded) {
    if (NBJGenjesRelativeJERHFup_branch != 0) {
      NBJGenjesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesRelativeJERHFup_isLoaded = true;
  }
  return *NBJGenjesRelativeJERHFup_;
}

const vector<int> &VVV0Tree::NLJGenjesRelativeJERHFup() {
  if (not NLJGenjesRelativeJERHFup_isLoaded) {
    if (NLJGenjesRelativeJERHFup_branch != 0) {
      NLJGenjesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesRelativeJERHFup_isLoaded = true;
  }
  return *NLJGenjesRelativeJERHFup_;
}

const float &VVV0Tree::MVVXjesRelativeJERHFup() {
  if (not MVVXjesRelativeJERHFup_isLoaded) {
    if (MVVXjesRelativeJERHFup_branch != 0) {
      MVVXjesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    MVVXjesRelativeJERHFup_isLoaded = true;
  }
  return MVVXjesRelativeJERHFup_;
}

const float &VVV0Tree::PtVVXjesRelativeJERHFup() {
  if (not PtVVXjesRelativeJERHFup_isLoaded) {
    if (PtVVXjesRelativeJERHFup_branch != 0) {
      PtVVXjesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesRelativeJERHFup_isLoaded = true;
  }
  return PtVVXjesRelativeJERHFup_;
}

const float &VVV0Tree::HTjesRelativeJERHFup() {
  if (not HTjesRelativeJERHFup_isLoaded) {
    if (HTjesRelativeJERHFup_branch != 0) {
      HTjesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch HTjesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    HTjesRelativeJERHFup_isLoaded = true;
  }
  return HTjesRelativeJERHFup_;
}

const float &VVV0Tree::HTJjesRelativeJERHFup() {
  if (not HTJjesRelativeJERHFup_isLoaded) {
    if (HTJjesRelativeJERHFup_branch != 0) {
      HTJjesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch HTJjesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    HTJjesRelativeJERHFup_isLoaded = true;
  }
  return HTJjesRelativeJERHFup_;
}

const float &VVV0Tree::HTFJjesRelativeJERHFup() {
  if (not HTFJjesRelativeJERHFup_isLoaded) {
    if (HTFJjesRelativeJERHFup_branch != 0) {
      HTFJjesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    HTFJjesRelativeJERHFup_isLoaded = true;
  }
  return HTFJjesRelativeJERHFup_;
}

const float &VVV0Tree::SumPtFJjesRelativeJERHFup() {
  if (not SumPtFJjesRelativeJERHFup_isLoaded) {
    if (SumPtFJjesRelativeJERHFup_branch != 0) {
      SumPtFJjesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesRelativeJERHFup_isLoaded = true;
  }
  return SumPtFJjesRelativeJERHFup_;
}

const float &VVV0Tree::SumPtJjesRelativeJERHFup() {
  if (not SumPtJjesRelativeJERHFup_isLoaded) {
    if (SumPtJjesRelativeJERHFup_branch != 0) {
      SumPtJjesRelativeJERHFup_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesRelativeJERHFup_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesRelativeJERHFup_isLoaded = true;
  }
  return SumPtJjesRelativeJERHFup_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesRelativeJERHFdn() {
  if (not JsjesRelativeJERHFdn_isLoaded) {
    if (JsjesRelativeJERHFdn_branch != 0) {
      JsjesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch JsjesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    JsjesRelativeJERHFdn_isLoaded = true;
  }
  return *JsjesRelativeJERHFdn_;
}

const int &VVV0Tree::NFJjesRelativeJERHFdn() {
  if (not NFJjesRelativeJERHFdn_isLoaded) {
    if (NFJjesRelativeJERHFdn_branch != 0) {
      NFJjesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch NFJjesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    NFJjesRelativeJERHFdn_isLoaded = true;
  }
  return NFJjesRelativeJERHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesRelativeJERHFdn() {
  if (not FJ0jesRelativeJERHFdn_isLoaded) {
    if (FJ0jesRelativeJERHFdn_branch != 0) {
      FJ0jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    FJ0jesRelativeJERHFdn_isLoaded = true;
  }
  return *FJ0jesRelativeJERHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesRelativeJERHFdn() {
  if (not FJ1jesRelativeJERHFdn_isLoaded) {
    if (FJ1jesRelativeJERHFdn_branch != 0) {
      FJ1jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    FJ1jesRelativeJERHFdn_isLoaded = true;
  }
  return *FJ1jesRelativeJERHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesRelativeJERHFdn() {
  if (not FJ2jesRelativeJERHFdn_isLoaded) {
    if (FJ2jesRelativeJERHFdn_branch != 0) {
      FJ2jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    FJ2jesRelativeJERHFdn_isLoaded = true;
  }
  return *FJ2jesRelativeJERHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesRelativeJERHFdn() {
  if (not FJ3jesRelativeJERHFdn_isLoaded) {
    if (FJ3jesRelativeJERHFdn_branch != 0) {
      FJ3jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    FJ3jesRelativeJERHFdn_isLoaded = true;
  }
  return *FJ3jesRelativeJERHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesRelativeJERHFdn() {
  if (not FJ4jesRelativeJERHFdn_isLoaded) {
    if (FJ4jesRelativeJERHFdn_branch != 0) {
      FJ4jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    FJ4jesRelativeJERHFdn_isLoaded = true;
  }
  return *FJ4jesRelativeJERHFdn_;
}

const float &VVV0Tree::VMD0jesRelativeJERHFdn() {
  if (not VMD0jesRelativeJERHFdn_isLoaded) {
    if (VMD0jesRelativeJERHFdn_branch != 0) {
      VMD0jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    VMD0jesRelativeJERHFdn_isLoaded = true;
  }
  return VMD0jesRelativeJERHFdn_;
}

const float &VVV0Tree::VMD1jesRelativeJERHFdn() {
  if (not VMD1jesRelativeJERHFdn_isLoaded) {
    if (VMD1jesRelativeJERHFdn_branch != 0) {
      VMD1jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    VMD1jesRelativeJERHFdn_isLoaded = true;
  }
  return VMD1jesRelativeJERHFdn_;
}

const float &VVV0Tree::VMD2jesRelativeJERHFdn() {
  if (not VMD2jesRelativeJERHFdn_isLoaded) {
    if (VMD2jesRelativeJERHFdn_branch != 0) {
      VMD2jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    VMD2jesRelativeJERHFdn_isLoaded = true;
  }
  return VMD2jesRelativeJERHFdn_;
}

const float &VVV0Tree::VMD3jesRelativeJERHFdn() {
  if (not VMD3jesRelativeJERHFdn_isLoaded) {
    if (VMD3jesRelativeJERHFdn_branch != 0) {
      VMD3jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    VMD3jesRelativeJERHFdn_isLoaded = true;
  }
  return VMD3jesRelativeJERHFdn_;
}

const float &VVV0Tree::VMD4jesRelativeJERHFdn() {
  if (not VMD4jesRelativeJERHFdn_isLoaded) {
    if (VMD4jesRelativeJERHFdn_branch != 0) {
      VMD4jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    VMD4jesRelativeJERHFdn_isLoaded = true;
  }
  return VMD4jesRelativeJERHFdn_;
}

const float &VVV0Tree::WMD0jesRelativeJERHFdn() {
  if (not WMD0jesRelativeJERHFdn_isLoaded) {
    if (WMD0jesRelativeJERHFdn_branch != 0) {
      WMD0jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    WMD0jesRelativeJERHFdn_isLoaded = true;
  }
  return WMD0jesRelativeJERHFdn_;
}

const float &VVV0Tree::WMD1jesRelativeJERHFdn() {
  if (not WMD1jesRelativeJERHFdn_isLoaded) {
    if (WMD1jesRelativeJERHFdn_branch != 0) {
      WMD1jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    WMD1jesRelativeJERHFdn_isLoaded = true;
  }
  return WMD1jesRelativeJERHFdn_;
}

const float &VVV0Tree::WMD2jesRelativeJERHFdn() {
  if (not WMD2jesRelativeJERHFdn_isLoaded) {
    if (WMD2jesRelativeJERHFdn_branch != 0) {
      WMD2jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    WMD2jesRelativeJERHFdn_isLoaded = true;
  }
  return WMD2jesRelativeJERHFdn_;
}

const float &VVV0Tree::WMD3jesRelativeJERHFdn() {
  if (not WMD3jesRelativeJERHFdn_isLoaded) {
    if (WMD3jesRelativeJERHFdn_branch != 0) {
      WMD3jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    WMD3jesRelativeJERHFdn_isLoaded = true;
  }
  return WMD3jesRelativeJERHFdn_;
}

const float &VVV0Tree::WMD4jesRelativeJERHFdn() {
  if (not WMD4jesRelativeJERHFdn_isLoaded) {
    if (WMD4jesRelativeJERHFdn_branch != 0) {
      WMD4jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    WMD4jesRelativeJERHFdn_isLoaded = true;
  }
  return WMD4jesRelativeJERHFdn_;
}

const int &VVV0Tree::NQGen0jesRelativeJERHFdn() {
  if (not NQGen0jesRelativeJERHFdn_isLoaded) {
    if (NQGen0jesRelativeJERHFdn_branch != 0) {
      NQGen0jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesRelativeJERHFdn_isLoaded = true;
  }
  return NQGen0jesRelativeJERHFdn_;
}

const int &VVV0Tree::NQGen1jesRelativeJERHFdn() {
  if (not NQGen1jesRelativeJERHFdn_isLoaded) {
    if (NQGen1jesRelativeJERHFdn_branch != 0) {
      NQGen1jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesRelativeJERHFdn_isLoaded = true;
  }
  return NQGen1jesRelativeJERHFdn_;
}

const int &VVV0Tree::NQGen2jesRelativeJERHFdn() {
  if (not NQGen2jesRelativeJERHFdn_isLoaded) {
    if (NQGen2jesRelativeJERHFdn_branch != 0) {
      NQGen2jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesRelativeJERHFdn_isLoaded = true;
  }
  return NQGen2jesRelativeJERHFdn_;
}

const int &VVV0Tree::NQGen3jesRelativeJERHFdn() {
  if (not NQGen3jesRelativeJERHFdn_isLoaded) {
    if (NQGen3jesRelativeJERHFdn_branch != 0) {
      NQGen3jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesRelativeJERHFdn_isLoaded = true;
  }
  return NQGen3jesRelativeJERHFdn_;
}

const int &VVV0Tree::NQGen4jesRelativeJERHFdn() {
  if (not NQGen4jesRelativeJERHFdn_isLoaded) {
    if (NQGen4jesRelativeJERHFdn_branch != 0) {
      NQGen4jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesRelativeJERHFdn_isLoaded = true;
  }
  return NQGen4jesRelativeJERHFdn_;
}

const int &VVV0Tree::NBGen0jesRelativeJERHFdn() {
  if (not NBGen0jesRelativeJERHFdn_isLoaded) {
    if (NBGen0jesRelativeJERHFdn_branch != 0) {
      NBGen0jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesRelativeJERHFdn_isLoaded = true;
  }
  return NBGen0jesRelativeJERHFdn_;
}

const int &VVV0Tree::NBGen1jesRelativeJERHFdn() {
  if (not NBGen1jesRelativeJERHFdn_isLoaded) {
    if (NBGen1jesRelativeJERHFdn_branch != 0) {
      NBGen1jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesRelativeJERHFdn_isLoaded = true;
  }
  return NBGen1jesRelativeJERHFdn_;
}

const int &VVV0Tree::NBGen2jesRelativeJERHFdn() {
  if (not NBGen2jesRelativeJERHFdn_isLoaded) {
    if (NBGen2jesRelativeJERHFdn_branch != 0) {
      NBGen2jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesRelativeJERHFdn_isLoaded = true;
  }
  return NBGen2jesRelativeJERHFdn_;
}

const int &VVV0Tree::NBGen3jesRelativeJERHFdn() {
  if (not NBGen3jesRelativeJERHFdn_isLoaded) {
    if (NBGen3jesRelativeJERHFdn_branch != 0) {
      NBGen3jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesRelativeJERHFdn_isLoaded = true;
  }
  return NBGen3jesRelativeJERHFdn_;
}

const int &VVV0Tree::NBGen4jesRelativeJERHFdn() {
  if (not NBGen4jesRelativeJERHFdn_isLoaded) {
    if (NBGen4jesRelativeJERHFdn_branch != 0) {
      NBGen4jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesRelativeJERHFdn_isLoaded = true;
  }
  return NBGen4jesRelativeJERHFdn_;
}

const int &VVV0Tree::NLGen0jesRelativeJERHFdn() {
  if (not NLGen0jesRelativeJERHFdn_isLoaded) {
    if (NLGen0jesRelativeJERHFdn_branch != 0) {
      NLGen0jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesRelativeJERHFdn_isLoaded = true;
  }
  return NLGen0jesRelativeJERHFdn_;
}

const int &VVV0Tree::NLGen1jesRelativeJERHFdn() {
  if (not NLGen1jesRelativeJERHFdn_isLoaded) {
    if (NLGen1jesRelativeJERHFdn_branch != 0) {
      NLGen1jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesRelativeJERHFdn_isLoaded = true;
  }
  return NLGen1jesRelativeJERHFdn_;
}

const int &VVV0Tree::NLGen2jesRelativeJERHFdn() {
  if (not NLGen2jesRelativeJERHFdn_isLoaded) {
    if (NLGen2jesRelativeJERHFdn_branch != 0) {
      NLGen2jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesRelativeJERHFdn_isLoaded = true;
  }
  return NLGen2jesRelativeJERHFdn_;
}

const int &VVV0Tree::NLGen3jesRelativeJERHFdn() {
  if (not NLGen3jesRelativeJERHFdn_isLoaded) {
    if (NLGen3jesRelativeJERHFdn_branch != 0) {
      NLGen3jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesRelativeJERHFdn_isLoaded = true;
  }
  return NLGen3jesRelativeJERHFdn_;
}

const int &VVV0Tree::NLGen4jesRelativeJERHFdn() {
  if (not NLGen4jesRelativeJERHFdn_isLoaded) {
    if (NLGen4jesRelativeJERHFdn_branch != 0) {
      NLGen4jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesRelativeJERHFdn_isLoaded = true;
  }
  return NLGen4jesRelativeJERHFdn_;
}

const int &VVV0Tree::NVQGen0jesRelativeJERHFdn() {
  if (not NVQGen0jesRelativeJERHFdn_isLoaded) {
    if (NVQGen0jesRelativeJERHFdn_branch != 0) {
      NVQGen0jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesRelativeJERHFdn_isLoaded = true;
  }
  return NVQGen0jesRelativeJERHFdn_;
}

const int &VVV0Tree::NVQGen1jesRelativeJERHFdn() {
  if (not NVQGen1jesRelativeJERHFdn_isLoaded) {
    if (NVQGen1jesRelativeJERHFdn_branch != 0) {
      NVQGen1jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesRelativeJERHFdn_isLoaded = true;
  }
  return NVQGen1jesRelativeJERHFdn_;
}

const int &VVV0Tree::NVQGen2jesRelativeJERHFdn() {
  if (not NVQGen2jesRelativeJERHFdn_isLoaded) {
    if (NVQGen2jesRelativeJERHFdn_branch != 0) {
      NVQGen2jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesRelativeJERHFdn_isLoaded = true;
  }
  return NVQGen2jesRelativeJERHFdn_;
}

const int &VVV0Tree::NVQGen3jesRelativeJERHFdn() {
  if (not NVQGen3jesRelativeJERHFdn_isLoaded) {
    if (NVQGen3jesRelativeJERHFdn_branch != 0) {
      NVQGen3jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesRelativeJERHFdn_isLoaded = true;
  }
  return NVQGen3jesRelativeJERHFdn_;
}

const int &VVV0Tree::NVQGen4jesRelativeJERHFdn() {
  if (not NVQGen4jesRelativeJERHFdn_isLoaded) {
    if (NVQGen4jesRelativeJERHFdn_branch != 0) {
      NVQGen4jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesRelativeJERHFdn_isLoaded = true;
  }
  return NVQGen4jesRelativeJERHFdn_;
}

const int &VVV0Tree::NiFJjesRelativeJERHFdn() {
  if (not NiFJjesRelativeJERHFdn_isLoaded) {
    if (NiFJjesRelativeJERHFdn_branch != 0) {
      NiFJjesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    NiFJjesRelativeJERHFdn_isLoaded = true;
  }
  return NiFJjesRelativeJERHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesRelativeJERHFdn() {
  if (not iFJ0jesRelativeJERHFdn_isLoaded) {
    if (iFJ0jesRelativeJERHFdn_branch != 0) {
      iFJ0jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesRelativeJERHFdn_isLoaded = true;
  }
  return *iFJ0jesRelativeJERHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesRelativeJERHFdn() {
  if (not iFJ1jesRelativeJERHFdn_isLoaded) {
    if (iFJ1jesRelativeJERHFdn_branch != 0) {
      iFJ1jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesRelativeJERHFdn_isLoaded = true;
  }
  return *iFJ1jesRelativeJERHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesRelativeJERHFdn() {
  if (not iFJ2jesRelativeJERHFdn_isLoaded) {
    if (iFJ2jesRelativeJERHFdn_branch != 0) {
      iFJ2jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesRelativeJERHFdn_isLoaded = true;
  }
  return *iFJ2jesRelativeJERHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesRelativeJERHFdn() {
  if (not iFJ3jesRelativeJERHFdn_isLoaded) {
    if (iFJ3jesRelativeJERHFdn_branch != 0) {
      iFJ3jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesRelativeJERHFdn_isLoaded = true;
  }
  return *iFJ3jesRelativeJERHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesRelativeJERHFdn() {
  if (not iFJ4jesRelativeJERHFdn_isLoaded) {
    if (iFJ4jesRelativeJERHFdn_branch != 0) {
      iFJ4jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesRelativeJERHFdn_isLoaded = true;
  }
  return *iFJ4jesRelativeJERHFdn_;
}

const float &VVV0Tree::iVMD0jesRelativeJERHFdn() {
  if (not iVMD0jesRelativeJERHFdn_isLoaded) {
    if (iVMD0jesRelativeJERHFdn_branch != 0) {
      iVMD0jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesRelativeJERHFdn_isLoaded = true;
  }
  return iVMD0jesRelativeJERHFdn_;
}

const float &VVV0Tree::iVMD1jesRelativeJERHFdn() {
  if (not iVMD1jesRelativeJERHFdn_isLoaded) {
    if (iVMD1jesRelativeJERHFdn_branch != 0) {
      iVMD1jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesRelativeJERHFdn_isLoaded = true;
  }
  return iVMD1jesRelativeJERHFdn_;
}

const float &VVV0Tree::iVMD2jesRelativeJERHFdn() {
  if (not iVMD2jesRelativeJERHFdn_isLoaded) {
    if (iVMD2jesRelativeJERHFdn_branch != 0) {
      iVMD2jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesRelativeJERHFdn_isLoaded = true;
  }
  return iVMD2jesRelativeJERHFdn_;
}

const float &VVV0Tree::iVMD3jesRelativeJERHFdn() {
  if (not iVMD3jesRelativeJERHFdn_isLoaded) {
    if (iVMD3jesRelativeJERHFdn_branch != 0) {
      iVMD3jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesRelativeJERHFdn_isLoaded = true;
  }
  return iVMD3jesRelativeJERHFdn_;
}

const float &VVV0Tree::iVMD4jesRelativeJERHFdn() {
  if (not iVMD4jesRelativeJERHFdn_isLoaded) {
    if (iVMD4jesRelativeJERHFdn_branch != 0) {
      iVMD4jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesRelativeJERHFdn_isLoaded = true;
  }
  return iVMD4jesRelativeJERHFdn_;
}

const float &VVV0Tree::iWMD0jesRelativeJERHFdn() {
  if (not iWMD0jesRelativeJERHFdn_isLoaded) {
    if (iWMD0jesRelativeJERHFdn_branch != 0) {
      iWMD0jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesRelativeJERHFdn_isLoaded = true;
  }
  return iWMD0jesRelativeJERHFdn_;
}

const float &VVV0Tree::iWMD1jesRelativeJERHFdn() {
  if (not iWMD1jesRelativeJERHFdn_isLoaded) {
    if (iWMD1jesRelativeJERHFdn_branch != 0) {
      iWMD1jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesRelativeJERHFdn_isLoaded = true;
  }
  return iWMD1jesRelativeJERHFdn_;
}

const float &VVV0Tree::iWMD2jesRelativeJERHFdn() {
  if (not iWMD2jesRelativeJERHFdn_isLoaded) {
    if (iWMD2jesRelativeJERHFdn_branch != 0) {
      iWMD2jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesRelativeJERHFdn_isLoaded = true;
  }
  return iWMD2jesRelativeJERHFdn_;
}

const float &VVV0Tree::iWMD3jesRelativeJERHFdn() {
  if (not iWMD3jesRelativeJERHFdn_isLoaded) {
    if (iWMD3jesRelativeJERHFdn_branch != 0) {
      iWMD3jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesRelativeJERHFdn_isLoaded = true;
  }
  return iWMD3jesRelativeJERHFdn_;
}

const float &VVV0Tree::iWMD4jesRelativeJERHFdn() {
  if (not iWMD4jesRelativeJERHFdn_isLoaded) {
    if (iWMD4jesRelativeJERHFdn_branch != 0) {
      iWMD4jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesRelativeJERHFdn_isLoaded = true;
  }
  return iWMD4jesRelativeJERHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesRelativeJERHFdn() {
  if (not METjesRelativeJERHFdn_isLoaded) {
    if (METjesRelativeJERHFdn_branch != 0) {
      METjesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch METjesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    METjesRelativeJERHFdn_isLoaded = true;
  }
  return *METjesRelativeJERHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesRelativeJERHFdn() {
  if (not NujesRelativeJERHFdn_isLoaded) {
    if (NujesRelativeJERHFdn_branch != 0) {
      NujesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch NujesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    NujesRelativeJERHFdn_isLoaded = true;
  }
  return *NujesRelativeJERHFdn_;
}

const int &VVV0Tree::NJjesRelativeJERHFdn() {
  if (not NJjesRelativeJERHFdn_isLoaded) {
    if (NJjesRelativeJERHFdn_branch != 0) {
      NJjesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch NJjesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    NJjesRelativeJERHFdn_isLoaded = true;
  }
  return NJjesRelativeJERHFdn_;
}

const int &VVV0Tree::NbLoosejesRelativeJERHFdn() {
  if (not NbLoosejesRelativeJERHFdn_isLoaded) {
    if (NbLoosejesRelativeJERHFdn_branch != 0) {
      NbLoosejesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesRelativeJERHFdn_isLoaded = true;
  }
  return NbLoosejesRelativeJERHFdn_;
}

const int &VVV0Tree::NbMediumjesRelativeJERHFdn() {
  if (not NbMediumjesRelativeJERHFdn_isLoaded) {
    if (NbMediumjesRelativeJERHFdn_branch != 0) {
      NbMediumjesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesRelativeJERHFdn_isLoaded = true;
  }
  return NbMediumjesRelativeJERHFdn_;
}

const int &VVV0Tree::NbTightjesRelativeJERHFdn() {
  if (not NbTightjesRelativeJERHFdn_isLoaded) {
    if (NbTightjesRelativeJERHFdn_branch != 0) {
      NbTightjesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    NbTightjesRelativeJERHFdn_isLoaded = true;
  }
  return NbTightjesRelativeJERHFdn_;
}

const int &VVV0Tree::NoORNbLoosejesRelativeJERHFdn() {
  if (not NoORNbLoosejesRelativeJERHFdn_isLoaded) {
    if (NoORNbLoosejesRelativeJERHFdn_branch != 0) {
      NoORNbLoosejesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesRelativeJERHFdn_isLoaded = true;
  }
  return NoORNbLoosejesRelativeJERHFdn_;
}

const int &VVV0Tree::NoORNbMediumjesRelativeJERHFdn() {
  if (not NoORNbMediumjesRelativeJERHFdn_isLoaded) {
    if (NoORNbMediumjesRelativeJERHFdn_branch != 0) {
      NoORNbMediumjesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesRelativeJERHFdn_isLoaded = true;
  }
  return NoORNbMediumjesRelativeJERHFdn_;
}

const int &VVV0Tree::NoORNbTightjesRelativeJERHFdn() {
  if (not NoORNbTightjesRelativeJERHFdn_isLoaded) {
    if (NoORNbTightjesRelativeJERHFdn_branch != 0) {
      NoORNbTightjesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesRelativeJERHFdn_isLoaded = true;
  }
  return NoORNbTightjesRelativeJERHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesRelativeJERHFdn() {
  if (not J0jesRelativeJERHFdn_isLoaded) {
    if (J0jesRelativeJERHFdn_branch != 0) {
      J0jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch J0jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    J0jesRelativeJERHFdn_isLoaded = true;
  }
  return *J0jesRelativeJERHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesRelativeJERHFdn() {
  if (not J1jesRelativeJERHFdn_isLoaded) {
    if (J1jesRelativeJERHFdn_branch != 0) {
      J1jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch J1jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    J1jesRelativeJERHFdn_isLoaded = true;
  }
  return *J1jesRelativeJERHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesRelativeJERHFdn() {
  if (not J2jesRelativeJERHFdn_isLoaded) {
    if (J2jesRelativeJERHFdn_branch != 0) {
      J2jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch J2jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    J2jesRelativeJERHFdn_isLoaded = true;
  }
  return *J2jesRelativeJERHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesRelativeJERHFdn() {
  if (not J3jesRelativeJERHFdn_isLoaded) {
    if (J3jesRelativeJERHFdn_branch != 0) {
      J3jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch J3jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    J3jesRelativeJERHFdn_isLoaded = true;
  }
  return *J3jesRelativeJERHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesRelativeJERHFdn() {
  if (not J4jesRelativeJERHFdn_isLoaded) {
    if (J4jesRelativeJERHFdn_branch != 0) {
      J4jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch J4jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    J4jesRelativeJERHFdn_isLoaded = true;
  }
  return *J4jesRelativeJERHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesRelativeJERHFdn() {
  if (not J5jesRelativeJERHFdn_isLoaded) {
    if (J5jesRelativeJERHFdn_branch != 0) {
      J5jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch J5jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    J5jesRelativeJERHFdn_isLoaded = true;
  }
  return *J5jesRelativeJERHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesRelativeJERHFdn() {
  if (not J6jesRelativeJERHFdn_isLoaded) {
    if (J6jesRelativeJERHFdn_branch != 0) {
      J6jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch J6jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    J6jesRelativeJERHFdn_isLoaded = true;
  }
  return *J6jesRelativeJERHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesRelativeJERHFdn() {
  if (not J7jesRelativeJERHFdn_isLoaded) {
    if (J7jesRelativeJERHFdn_branch != 0) {
      J7jesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch J7jesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    J7jesRelativeJERHFdn_isLoaded = true;
  }
  return *J7jesRelativeJERHFdn_;
}

const vector<int> &VVV0Tree::NQJGenjesRelativeJERHFdn() {
  if (not NQJGenjesRelativeJERHFdn_isLoaded) {
    if (NQJGenjesRelativeJERHFdn_branch != 0) {
      NQJGenjesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesRelativeJERHFdn_isLoaded = true;
  }
  return *NQJGenjesRelativeJERHFdn_;
}

const vector<int> &VVV0Tree::NBJGenjesRelativeJERHFdn() {
  if (not NBJGenjesRelativeJERHFdn_isLoaded) {
    if (NBJGenjesRelativeJERHFdn_branch != 0) {
      NBJGenjesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesRelativeJERHFdn_isLoaded = true;
  }
  return *NBJGenjesRelativeJERHFdn_;
}

const vector<int> &VVV0Tree::NLJGenjesRelativeJERHFdn() {
  if (not NLJGenjesRelativeJERHFdn_isLoaded) {
    if (NLJGenjesRelativeJERHFdn_branch != 0) {
      NLJGenjesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesRelativeJERHFdn_isLoaded = true;
  }
  return *NLJGenjesRelativeJERHFdn_;
}

const float &VVV0Tree::MVVXjesRelativeJERHFdn() {
  if (not MVVXjesRelativeJERHFdn_isLoaded) {
    if (MVVXjesRelativeJERHFdn_branch != 0) {
      MVVXjesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    MVVXjesRelativeJERHFdn_isLoaded = true;
  }
  return MVVXjesRelativeJERHFdn_;
}

const float &VVV0Tree::PtVVXjesRelativeJERHFdn() {
  if (not PtVVXjesRelativeJERHFdn_isLoaded) {
    if (PtVVXjesRelativeJERHFdn_branch != 0) {
      PtVVXjesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesRelativeJERHFdn_isLoaded = true;
  }
  return PtVVXjesRelativeJERHFdn_;
}

const float &VVV0Tree::HTjesRelativeJERHFdn() {
  if (not HTjesRelativeJERHFdn_isLoaded) {
    if (HTjesRelativeJERHFdn_branch != 0) {
      HTjesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch HTjesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    HTjesRelativeJERHFdn_isLoaded = true;
  }
  return HTjesRelativeJERHFdn_;
}

const float &VVV0Tree::HTJjesRelativeJERHFdn() {
  if (not HTJjesRelativeJERHFdn_isLoaded) {
    if (HTJjesRelativeJERHFdn_branch != 0) {
      HTJjesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch HTJjesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    HTJjesRelativeJERHFdn_isLoaded = true;
  }
  return HTJjesRelativeJERHFdn_;
}

const float &VVV0Tree::HTFJjesRelativeJERHFdn() {
  if (not HTFJjesRelativeJERHFdn_isLoaded) {
    if (HTFJjesRelativeJERHFdn_branch != 0) {
      HTFJjesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    HTFJjesRelativeJERHFdn_isLoaded = true;
  }
  return HTFJjesRelativeJERHFdn_;
}

const float &VVV0Tree::SumPtFJjesRelativeJERHFdn() {
  if (not SumPtFJjesRelativeJERHFdn_isLoaded) {
    if (SumPtFJjesRelativeJERHFdn_branch != 0) {
      SumPtFJjesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesRelativeJERHFdn_isLoaded = true;
  }
  return SumPtFJjesRelativeJERHFdn_;
}

const float &VVV0Tree::SumPtJjesRelativeJERHFdn() {
  if (not SumPtJjesRelativeJERHFdn_isLoaded) {
    if (SumPtJjesRelativeJERHFdn_branch != 0) {
      SumPtJjesRelativeJERHFdn_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesRelativeJERHFdn_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesRelativeJERHFdn_isLoaded = true;
  }
  return SumPtJjesRelativeJERHFdn_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesRelativePtBBup() {
  if (not JsjesRelativePtBBup_isLoaded) {
    if (JsjesRelativePtBBup_branch != 0) {
      JsjesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch JsjesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    JsjesRelativePtBBup_isLoaded = true;
  }
  return *JsjesRelativePtBBup_;
}

const int &VVV0Tree::NFJjesRelativePtBBup() {
  if (not NFJjesRelativePtBBup_isLoaded) {
    if (NFJjesRelativePtBBup_branch != 0) {
      NFJjesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch NFJjesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    NFJjesRelativePtBBup_isLoaded = true;
  }
  return NFJjesRelativePtBBup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesRelativePtBBup() {
  if (not FJ0jesRelativePtBBup_isLoaded) {
    if (FJ0jesRelativePtBBup_branch != 0) {
      FJ0jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    FJ0jesRelativePtBBup_isLoaded = true;
  }
  return *FJ0jesRelativePtBBup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesRelativePtBBup() {
  if (not FJ1jesRelativePtBBup_isLoaded) {
    if (FJ1jesRelativePtBBup_branch != 0) {
      FJ1jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    FJ1jesRelativePtBBup_isLoaded = true;
  }
  return *FJ1jesRelativePtBBup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesRelativePtBBup() {
  if (not FJ2jesRelativePtBBup_isLoaded) {
    if (FJ2jesRelativePtBBup_branch != 0) {
      FJ2jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    FJ2jesRelativePtBBup_isLoaded = true;
  }
  return *FJ2jesRelativePtBBup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesRelativePtBBup() {
  if (not FJ3jesRelativePtBBup_isLoaded) {
    if (FJ3jesRelativePtBBup_branch != 0) {
      FJ3jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    FJ3jesRelativePtBBup_isLoaded = true;
  }
  return *FJ3jesRelativePtBBup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesRelativePtBBup() {
  if (not FJ4jesRelativePtBBup_isLoaded) {
    if (FJ4jesRelativePtBBup_branch != 0) {
      FJ4jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    FJ4jesRelativePtBBup_isLoaded = true;
  }
  return *FJ4jesRelativePtBBup_;
}

const float &VVV0Tree::VMD0jesRelativePtBBup() {
  if (not VMD0jesRelativePtBBup_isLoaded) {
    if (VMD0jesRelativePtBBup_branch != 0) {
      VMD0jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    VMD0jesRelativePtBBup_isLoaded = true;
  }
  return VMD0jesRelativePtBBup_;
}

const float &VVV0Tree::VMD1jesRelativePtBBup() {
  if (not VMD1jesRelativePtBBup_isLoaded) {
    if (VMD1jesRelativePtBBup_branch != 0) {
      VMD1jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    VMD1jesRelativePtBBup_isLoaded = true;
  }
  return VMD1jesRelativePtBBup_;
}

const float &VVV0Tree::VMD2jesRelativePtBBup() {
  if (not VMD2jesRelativePtBBup_isLoaded) {
    if (VMD2jesRelativePtBBup_branch != 0) {
      VMD2jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    VMD2jesRelativePtBBup_isLoaded = true;
  }
  return VMD2jesRelativePtBBup_;
}

const float &VVV0Tree::VMD3jesRelativePtBBup() {
  if (not VMD3jesRelativePtBBup_isLoaded) {
    if (VMD3jesRelativePtBBup_branch != 0) {
      VMD3jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    VMD3jesRelativePtBBup_isLoaded = true;
  }
  return VMD3jesRelativePtBBup_;
}

const float &VVV0Tree::VMD4jesRelativePtBBup() {
  if (not VMD4jesRelativePtBBup_isLoaded) {
    if (VMD4jesRelativePtBBup_branch != 0) {
      VMD4jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    VMD4jesRelativePtBBup_isLoaded = true;
  }
  return VMD4jesRelativePtBBup_;
}

const float &VVV0Tree::WMD0jesRelativePtBBup() {
  if (not WMD0jesRelativePtBBup_isLoaded) {
    if (WMD0jesRelativePtBBup_branch != 0) {
      WMD0jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    WMD0jesRelativePtBBup_isLoaded = true;
  }
  return WMD0jesRelativePtBBup_;
}

const float &VVV0Tree::WMD1jesRelativePtBBup() {
  if (not WMD1jesRelativePtBBup_isLoaded) {
    if (WMD1jesRelativePtBBup_branch != 0) {
      WMD1jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    WMD1jesRelativePtBBup_isLoaded = true;
  }
  return WMD1jesRelativePtBBup_;
}

const float &VVV0Tree::WMD2jesRelativePtBBup() {
  if (not WMD2jesRelativePtBBup_isLoaded) {
    if (WMD2jesRelativePtBBup_branch != 0) {
      WMD2jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    WMD2jesRelativePtBBup_isLoaded = true;
  }
  return WMD2jesRelativePtBBup_;
}

const float &VVV0Tree::WMD3jesRelativePtBBup() {
  if (not WMD3jesRelativePtBBup_isLoaded) {
    if (WMD3jesRelativePtBBup_branch != 0) {
      WMD3jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    WMD3jesRelativePtBBup_isLoaded = true;
  }
  return WMD3jesRelativePtBBup_;
}

const float &VVV0Tree::WMD4jesRelativePtBBup() {
  if (not WMD4jesRelativePtBBup_isLoaded) {
    if (WMD4jesRelativePtBBup_branch != 0) {
      WMD4jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    WMD4jesRelativePtBBup_isLoaded = true;
  }
  return WMD4jesRelativePtBBup_;
}

const int &VVV0Tree::NQGen0jesRelativePtBBup() {
  if (not NQGen0jesRelativePtBBup_isLoaded) {
    if (NQGen0jesRelativePtBBup_branch != 0) {
      NQGen0jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesRelativePtBBup_isLoaded = true;
  }
  return NQGen0jesRelativePtBBup_;
}

const int &VVV0Tree::NQGen1jesRelativePtBBup() {
  if (not NQGen1jesRelativePtBBup_isLoaded) {
    if (NQGen1jesRelativePtBBup_branch != 0) {
      NQGen1jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesRelativePtBBup_isLoaded = true;
  }
  return NQGen1jesRelativePtBBup_;
}

const int &VVV0Tree::NQGen2jesRelativePtBBup() {
  if (not NQGen2jesRelativePtBBup_isLoaded) {
    if (NQGen2jesRelativePtBBup_branch != 0) {
      NQGen2jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesRelativePtBBup_isLoaded = true;
  }
  return NQGen2jesRelativePtBBup_;
}

const int &VVV0Tree::NQGen3jesRelativePtBBup() {
  if (not NQGen3jesRelativePtBBup_isLoaded) {
    if (NQGen3jesRelativePtBBup_branch != 0) {
      NQGen3jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesRelativePtBBup_isLoaded = true;
  }
  return NQGen3jesRelativePtBBup_;
}

const int &VVV0Tree::NQGen4jesRelativePtBBup() {
  if (not NQGen4jesRelativePtBBup_isLoaded) {
    if (NQGen4jesRelativePtBBup_branch != 0) {
      NQGen4jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesRelativePtBBup_isLoaded = true;
  }
  return NQGen4jesRelativePtBBup_;
}

const int &VVV0Tree::NBGen0jesRelativePtBBup() {
  if (not NBGen0jesRelativePtBBup_isLoaded) {
    if (NBGen0jesRelativePtBBup_branch != 0) {
      NBGen0jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesRelativePtBBup_isLoaded = true;
  }
  return NBGen0jesRelativePtBBup_;
}

const int &VVV0Tree::NBGen1jesRelativePtBBup() {
  if (not NBGen1jesRelativePtBBup_isLoaded) {
    if (NBGen1jesRelativePtBBup_branch != 0) {
      NBGen1jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesRelativePtBBup_isLoaded = true;
  }
  return NBGen1jesRelativePtBBup_;
}

const int &VVV0Tree::NBGen2jesRelativePtBBup() {
  if (not NBGen2jesRelativePtBBup_isLoaded) {
    if (NBGen2jesRelativePtBBup_branch != 0) {
      NBGen2jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesRelativePtBBup_isLoaded = true;
  }
  return NBGen2jesRelativePtBBup_;
}

const int &VVV0Tree::NBGen3jesRelativePtBBup() {
  if (not NBGen3jesRelativePtBBup_isLoaded) {
    if (NBGen3jesRelativePtBBup_branch != 0) {
      NBGen3jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesRelativePtBBup_isLoaded = true;
  }
  return NBGen3jesRelativePtBBup_;
}

const int &VVV0Tree::NBGen4jesRelativePtBBup() {
  if (not NBGen4jesRelativePtBBup_isLoaded) {
    if (NBGen4jesRelativePtBBup_branch != 0) {
      NBGen4jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesRelativePtBBup_isLoaded = true;
  }
  return NBGen4jesRelativePtBBup_;
}

const int &VVV0Tree::NLGen0jesRelativePtBBup() {
  if (not NLGen0jesRelativePtBBup_isLoaded) {
    if (NLGen0jesRelativePtBBup_branch != 0) {
      NLGen0jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesRelativePtBBup_isLoaded = true;
  }
  return NLGen0jesRelativePtBBup_;
}

const int &VVV0Tree::NLGen1jesRelativePtBBup() {
  if (not NLGen1jesRelativePtBBup_isLoaded) {
    if (NLGen1jesRelativePtBBup_branch != 0) {
      NLGen1jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesRelativePtBBup_isLoaded = true;
  }
  return NLGen1jesRelativePtBBup_;
}

const int &VVV0Tree::NLGen2jesRelativePtBBup() {
  if (not NLGen2jesRelativePtBBup_isLoaded) {
    if (NLGen2jesRelativePtBBup_branch != 0) {
      NLGen2jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesRelativePtBBup_isLoaded = true;
  }
  return NLGen2jesRelativePtBBup_;
}

const int &VVV0Tree::NLGen3jesRelativePtBBup() {
  if (not NLGen3jesRelativePtBBup_isLoaded) {
    if (NLGen3jesRelativePtBBup_branch != 0) {
      NLGen3jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesRelativePtBBup_isLoaded = true;
  }
  return NLGen3jesRelativePtBBup_;
}

const int &VVV0Tree::NLGen4jesRelativePtBBup() {
  if (not NLGen4jesRelativePtBBup_isLoaded) {
    if (NLGen4jesRelativePtBBup_branch != 0) {
      NLGen4jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesRelativePtBBup_isLoaded = true;
  }
  return NLGen4jesRelativePtBBup_;
}

const int &VVV0Tree::NVQGen0jesRelativePtBBup() {
  if (not NVQGen0jesRelativePtBBup_isLoaded) {
    if (NVQGen0jesRelativePtBBup_branch != 0) {
      NVQGen0jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesRelativePtBBup_isLoaded = true;
  }
  return NVQGen0jesRelativePtBBup_;
}

const int &VVV0Tree::NVQGen1jesRelativePtBBup() {
  if (not NVQGen1jesRelativePtBBup_isLoaded) {
    if (NVQGen1jesRelativePtBBup_branch != 0) {
      NVQGen1jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesRelativePtBBup_isLoaded = true;
  }
  return NVQGen1jesRelativePtBBup_;
}

const int &VVV0Tree::NVQGen2jesRelativePtBBup() {
  if (not NVQGen2jesRelativePtBBup_isLoaded) {
    if (NVQGen2jesRelativePtBBup_branch != 0) {
      NVQGen2jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesRelativePtBBup_isLoaded = true;
  }
  return NVQGen2jesRelativePtBBup_;
}

const int &VVV0Tree::NVQGen3jesRelativePtBBup() {
  if (not NVQGen3jesRelativePtBBup_isLoaded) {
    if (NVQGen3jesRelativePtBBup_branch != 0) {
      NVQGen3jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesRelativePtBBup_isLoaded = true;
  }
  return NVQGen3jesRelativePtBBup_;
}

const int &VVV0Tree::NVQGen4jesRelativePtBBup() {
  if (not NVQGen4jesRelativePtBBup_isLoaded) {
    if (NVQGen4jesRelativePtBBup_branch != 0) {
      NVQGen4jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesRelativePtBBup_isLoaded = true;
  }
  return NVQGen4jesRelativePtBBup_;
}

const int &VVV0Tree::NiFJjesRelativePtBBup() {
  if (not NiFJjesRelativePtBBup_isLoaded) {
    if (NiFJjesRelativePtBBup_branch != 0) {
      NiFJjesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    NiFJjesRelativePtBBup_isLoaded = true;
  }
  return NiFJjesRelativePtBBup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesRelativePtBBup() {
  if (not iFJ0jesRelativePtBBup_isLoaded) {
    if (iFJ0jesRelativePtBBup_branch != 0) {
      iFJ0jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesRelativePtBBup_isLoaded = true;
  }
  return *iFJ0jesRelativePtBBup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesRelativePtBBup() {
  if (not iFJ1jesRelativePtBBup_isLoaded) {
    if (iFJ1jesRelativePtBBup_branch != 0) {
      iFJ1jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesRelativePtBBup_isLoaded = true;
  }
  return *iFJ1jesRelativePtBBup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesRelativePtBBup() {
  if (not iFJ2jesRelativePtBBup_isLoaded) {
    if (iFJ2jesRelativePtBBup_branch != 0) {
      iFJ2jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesRelativePtBBup_isLoaded = true;
  }
  return *iFJ2jesRelativePtBBup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesRelativePtBBup() {
  if (not iFJ3jesRelativePtBBup_isLoaded) {
    if (iFJ3jesRelativePtBBup_branch != 0) {
      iFJ3jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesRelativePtBBup_isLoaded = true;
  }
  return *iFJ3jesRelativePtBBup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesRelativePtBBup() {
  if (not iFJ4jesRelativePtBBup_isLoaded) {
    if (iFJ4jesRelativePtBBup_branch != 0) {
      iFJ4jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesRelativePtBBup_isLoaded = true;
  }
  return *iFJ4jesRelativePtBBup_;
}

const float &VVV0Tree::iVMD0jesRelativePtBBup() {
  if (not iVMD0jesRelativePtBBup_isLoaded) {
    if (iVMD0jesRelativePtBBup_branch != 0) {
      iVMD0jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesRelativePtBBup_isLoaded = true;
  }
  return iVMD0jesRelativePtBBup_;
}

const float &VVV0Tree::iVMD1jesRelativePtBBup() {
  if (not iVMD1jesRelativePtBBup_isLoaded) {
    if (iVMD1jesRelativePtBBup_branch != 0) {
      iVMD1jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesRelativePtBBup_isLoaded = true;
  }
  return iVMD1jesRelativePtBBup_;
}

const float &VVV0Tree::iVMD2jesRelativePtBBup() {
  if (not iVMD2jesRelativePtBBup_isLoaded) {
    if (iVMD2jesRelativePtBBup_branch != 0) {
      iVMD2jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesRelativePtBBup_isLoaded = true;
  }
  return iVMD2jesRelativePtBBup_;
}

const float &VVV0Tree::iVMD3jesRelativePtBBup() {
  if (not iVMD3jesRelativePtBBup_isLoaded) {
    if (iVMD3jesRelativePtBBup_branch != 0) {
      iVMD3jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesRelativePtBBup_isLoaded = true;
  }
  return iVMD3jesRelativePtBBup_;
}

const float &VVV0Tree::iVMD4jesRelativePtBBup() {
  if (not iVMD4jesRelativePtBBup_isLoaded) {
    if (iVMD4jesRelativePtBBup_branch != 0) {
      iVMD4jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesRelativePtBBup_isLoaded = true;
  }
  return iVMD4jesRelativePtBBup_;
}

const float &VVV0Tree::iWMD0jesRelativePtBBup() {
  if (not iWMD0jesRelativePtBBup_isLoaded) {
    if (iWMD0jesRelativePtBBup_branch != 0) {
      iWMD0jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesRelativePtBBup_isLoaded = true;
  }
  return iWMD0jesRelativePtBBup_;
}

const float &VVV0Tree::iWMD1jesRelativePtBBup() {
  if (not iWMD1jesRelativePtBBup_isLoaded) {
    if (iWMD1jesRelativePtBBup_branch != 0) {
      iWMD1jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesRelativePtBBup_isLoaded = true;
  }
  return iWMD1jesRelativePtBBup_;
}

const float &VVV0Tree::iWMD2jesRelativePtBBup() {
  if (not iWMD2jesRelativePtBBup_isLoaded) {
    if (iWMD2jesRelativePtBBup_branch != 0) {
      iWMD2jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesRelativePtBBup_isLoaded = true;
  }
  return iWMD2jesRelativePtBBup_;
}

const float &VVV0Tree::iWMD3jesRelativePtBBup() {
  if (not iWMD3jesRelativePtBBup_isLoaded) {
    if (iWMD3jesRelativePtBBup_branch != 0) {
      iWMD3jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesRelativePtBBup_isLoaded = true;
  }
  return iWMD3jesRelativePtBBup_;
}

const float &VVV0Tree::iWMD4jesRelativePtBBup() {
  if (not iWMD4jesRelativePtBBup_isLoaded) {
    if (iWMD4jesRelativePtBBup_branch != 0) {
      iWMD4jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesRelativePtBBup_isLoaded = true;
  }
  return iWMD4jesRelativePtBBup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesRelativePtBBup() {
  if (not METjesRelativePtBBup_isLoaded) {
    if (METjesRelativePtBBup_branch != 0) {
      METjesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch METjesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    METjesRelativePtBBup_isLoaded = true;
  }
  return *METjesRelativePtBBup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesRelativePtBBup() {
  if (not NujesRelativePtBBup_isLoaded) {
    if (NujesRelativePtBBup_branch != 0) {
      NujesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch NujesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    NujesRelativePtBBup_isLoaded = true;
  }
  return *NujesRelativePtBBup_;
}

const int &VVV0Tree::NJjesRelativePtBBup() {
  if (not NJjesRelativePtBBup_isLoaded) {
    if (NJjesRelativePtBBup_branch != 0) {
      NJjesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch NJjesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    NJjesRelativePtBBup_isLoaded = true;
  }
  return NJjesRelativePtBBup_;
}

const int &VVV0Tree::NbLoosejesRelativePtBBup() {
  if (not NbLoosejesRelativePtBBup_isLoaded) {
    if (NbLoosejesRelativePtBBup_branch != 0) {
      NbLoosejesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesRelativePtBBup_isLoaded = true;
  }
  return NbLoosejesRelativePtBBup_;
}

const int &VVV0Tree::NbMediumjesRelativePtBBup() {
  if (not NbMediumjesRelativePtBBup_isLoaded) {
    if (NbMediumjesRelativePtBBup_branch != 0) {
      NbMediumjesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesRelativePtBBup_isLoaded = true;
  }
  return NbMediumjesRelativePtBBup_;
}

const int &VVV0Tree::NbTightjesRelativePtBBup() {
  if (not NbTightjesRelativePtBBup_isLoaded) {
    if (NbTightjesRelativePtBBup_branch != 0) {
      NbTightjesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    NbTightjesRelativePtBBup_isLoaded = true;
  }
  return NbTightjesRelativePtBBup_;
}

const int &VVV0Tree::NoORNbLoosejesRelativePtBBup() {
  if (not NoORNbLoosejesRelativePtBBup_isLoaded) {
    if (NoORNbLoosejesRelativePtBBup_branch != 0) {
      NoORNbLoosejesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesRelativePtBBup_isLoaded = true;
  }
  return NoORNbLoosejesRelativePtBBup_;
}

const int &VVV0Tree::NoORNbMediumjesRelativePtBBup() {
  if (not NoORNbMediumjesRelativePtBBup_isLoaded) {
    if (NoORNbMediumjesRelativePtBBup_branch != 0) {
      NoORNbMediumjesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesRelativePtBBup_isLoaded = true;
  }
  return NoORNbMediumjesRelativePtBBup_;
}

const int &VVV0Tree::NoORNbTightjesRelativePtBBup() {
  if (not NoORNbTightjesRelativePtBBup_isLoaded) {
    if (NoORNbTightjesRelativePtBBup_branch != 0) {
      NoORNbTightjesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesRelativePtBBup_isLoaded = true;
  }
  return NoORNbTightjesRelativePtBBup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesRelativePtBBup() {
  if (not J0jesRelativePtBBup_isLoaded) {
    if (J0jesRelativePtBBup_branch != 0) {
      J0jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch J0jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    J0jesRelativePtBBup_isLoaded = true;
  }
  return *J0jesRelativePtBBup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesRelativePtBBup() {
  if (not J1jesRelativePtBBup_isLoaded) {
    if (J1jesRelativePtBBup_branch != 0) {
      J1jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch J1jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    J1jesRelativePtBBup_isLoaded = true;
  }
  return *J1jesRelativePtBBup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesRelativePtBBup() {
  if (not J2jesRelativePtBBup_isLoaded) {
    if (J2jesRelativePtBBup_branch != 0) {
      J2jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch J2jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    J2jesRelativePtBBup_isLoaded = true;
  }
  return *J2jesRelativePtBBup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesRelativePtBBup() {
  if (not J3jesRelativePtBBup_isLoaded) {
    if (J3jesRelativePtBBup_branch != 0) {
      J3jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch J3jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    J3jesRelativePtBBup_isLoaded = true;
  }
  return *J3jesRelativePtBBup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesRelativePtBBup() {
  if (not J4jesRelativePtBBup_isLoaded) {
    if (J4jesRelativePtBBup_branch != 0) {
      J4jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch J4jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    J4jesRelativePtBBup_isLoaded = true;
  }
  return *J4jesRelativePtBBup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesRelativePtBBup() {
  if (not J5jesRelativePtBBup_isLoaded) {
    if (J5jesRelativePtBBup_branch != 0) {
      J5jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch J5jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    J5jesRelativePtBBup_isLoaded = true;
  }
  return *J5jesRelativePtBBup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesRelativePtBBup() {
  if (not J6jesRelativePtBBup_isLoaded) {
    if (J6jesRelativePtBBup_branch != 0) {
      J6jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch J6jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    J6jesRelativePtBBup_isLoaded = true;
  }
  return *J6jesRelativePtBBup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesRelativePtBBup() {
  if (not J7jesRelativePtBBup_isLoaded) {
    if (J7jesRelativePtBBup_branch != 0) {
      J7jesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch J7jesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    J7jesRelativePtBBup_isLoaded = true;
  }
  return *J7jesRelativePtBBup_;
}

const vector<int> &VVV0Tree::NQJGenjesRelativePtBBup() {
  if (not NQJGenjesRelativePtBBup_isLoaded) {
    if (NQJGenjesRelativePtBBup_branch != 0) {
      NQJGenjesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesRelativePtBBup_isLoaded = true;
  }
  return *NQJGenjesRelativePtBBup_;
}

const vector<int> &VVV0Tree::NBJGenjesRelativePtBBup() {
  if (not NBJGenjesRelativePtBBup_isLoaded) {
    if (NBJGenjesRelativePtBBup_branch != 0) {
      NBJGenjesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesRelativePtBBup_isLoaded = true;
  }
  return *NBJGenjesRelativePtBBup_;
}

const vector<int> &VVV0Tree::NLJGenjesRelativePtBBup() {
  if (not NLJGenjesRelativePtBBup_isLoaded) {
    if (NLJGenjesRelativePtBBup_branch != 0) {
      NLJGenjesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesRelativePtBBup_isLoaded = true;
  }
  return *NLJGenjesRelativePtBBup_;
}

const float &VVV0Tree::MVVXjesRelativePtBBup() {
  if (not MVVXjesRelativePtBBup_isLoaded) {
    if (MVVXjesRelativePtBBup_branch != 0) {
      MVVXjesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    MVVXjesRelativePtBBup_isLoaded = true;
  }
  return MVVXjesRelativePtBBup_;
}

const float &VVV0Tree::PtVVXjesRelativePtBBup() {
  if (not PtVVXjesRelativePtBBup_isLoaded) {
    if (PtVVXjesRelativePtBBup_branch != 0) {
      PtVVXjesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesRelativePtBBup_isLoaded = true;
  }
  return PtVVXjesRelativePtBBup_;
}

const float &VVV0Tree::HTjesRelativePtBBup() {
  if (not HTjesRelativePtBBup_isLoaded) {
    if (HTjesRelativePtBBup_branch != 0) {
      HTjesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch HTjesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    HTjesRelativePtBBup_isLoaded = true;
  }
  return HTjesRelativePtBBup_;
}

const float &VVV0Tree::HTJjesRelativePtBBup() {
  if (not HTJjesRelativePtBBup_isLoaded) {
    if (HTJjesRelativePtBBup_branch != 0) {
      HTJjesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch HTJjesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    HTJjesRelativePtBBup_isLoaded = true;
  }
  return HTJjesRelativePtBBup_;
}

const float &VVV0Tree::HTFJjesRelativePtBBup() {
  if (not HTFJjesRelativePtBBup_isLoaded) {
    if (HTFJjesRelativePtBBup_branch != 0) {
      HTFJjesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    HTFJjesRelativePtBBup_isLoaded = true;
  }
  return HTFJjesRelativePtBBup_;
}

const float &VVV0Tree::SumPtFJjesRelativePtBBup() {
  if (not SumPtFJjesRelativePtBBup_isLoaded) {
    if (SumPtFJjesRelativePtBBup_branch != 0) {
      SumPtFJjesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesRelativePtBBup_isLoaded = true;
  }
  return SumPtFJjesRelativePtBBup_;
}

const float &VVV0Tree::SumPtJjesRelativePtBBup() {
  if (not SumPtJjesRelativePtBBup_isLoaded) {
    if (SumPtJjesRelativePtBBup_branch != 0) {
      SumPtJjesRelativePtBBup_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesRelativePtBBup_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesRelativePtBBup_isLoaded = true;
  }
  return SumPtJjesRelativePtBBup_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesRelativePtBBdn() {
  if (not JsjesRelativePtBBdn_isLoaded) {
    if (JsjesRelativePtBBdn_branch != 0) {
      JsjesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch JsjesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    JsjesRelativePtBBdn_isLoaded = true;
  }
  return *JsjesRelativePtBBdn_;
}

const int &VVV0Tree::NFJjesRelativePtBBdn() {
  if (not NFJjesRelativePtBBdn_isLoaded) {
    if (NFJjesRelativePtBBdn_branch != 0) {
      NFJjesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NFJjesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    NFJjesRelativePtBBdn_isLoaded = true;
  }
  return NFJjesRelativePtBBdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesRelativePtBBdn() {
  if (not FJ0jesRelativePtBBdn_isLoaded) {
    if (FJ0jesRelativePtBBdn_branch != 0) {
      FJ0jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    FJ0jesRelativePtBBdn_isLoaded = true;
  }
  return *FJ0jesRelativePtBBdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesRelativePtBBdn() {
  if (not FJ1jesRelativePtBBdn_isLoaded) {
    if (FJ1jesRelativePtBBdn_branch != 0) {
      FJ1jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    FJ1jesRelativePtBBdn_isLoaded = true;
  }
  return *FJ1jesRelativePtBBdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesRelativePtBBdn() {
  if (not FJ2jesRelativePtBBdn_isLoaded) {
    if (FJ2jesRelativePtBBdn_branch != 0) {
      FJ2jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    FJ2jesRelativePtBBdn_isLoaded = true;
  }
  return *FJ2jesRelativePtBBdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesRelativePtBBdn() {
  if (not FJ3jesRelativePtBBdn_isLoaded) {
    if (FJ3jesRelativePtBBdn_branch != 0) {
      FJ3jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    FJ3jesRelativePtBBdn_isLoaded = true;
  }
  return *FJ3jesRelativePtBBdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesRelativePtBBdn() {
  if (not FJ4jesRelativePtBBdn_isLoaded) {
    if (FJ4jesRelativePtBBdn_branch != 0) {
      FJ4jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    FJ4jesRelativePtBBdn_isLoaded = true;
  }
  return *FJ4jesRelativePtBBdn_;
}

const float &VVV0Tree::VMD0jesRelativePtBBdn() {
  if (not VMD0jesRelativePtBBdn_isLoaded) {
    if (VMD0jesRelativePtBBdn_branch != 0) {
      VMD0jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    VMD0jesRelativePtBBdn_isLoaded = true;
  }
  return VMD0jesRelativePtBBdn_;
}

const float &VVV0Tree::VMD1jesRelativePtBBdn() {
  if (not VMD1jesRelativePtBBdn_isLoaded) {
    if (VMD1jesRelativePtBBdn_branch != 0) {
      VMD1jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    VMD1jesRelativePtBBdn_isLoaded = true;
  }
  return VMD1jesRelativePtBBdn_;
}

const float &VVV0Tree::VMD2jesRelativePtBBdn() {
  if (not VMD2jesRelativePtBBdn_isLoaded) {
    if (VMD2jesRelativePtBBdn_branch != 0) {
      VMD2jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    VMD2jesRelativePtBBdn_isLoaded = true;
  }
  return VMD2jesRelativePtBBdn_;
}

const float &VVV0Tree::VMD3jesRelativePtBBdn() {
  if (not VMD3jesRelativePtBBdn_isLoaded) {
    if (VMD3jesRelativePtBBdn_branch != 0) {
      VMD3jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    VMD3jesRelativePtBBdn_isLoaded = true;
  }
  return VMD3jesRelativePtBBdn_;
}

const float &VVV0Tree::VMD4jesRelativePtBBdn() {
  if (not VMD4jesRelativePtBBdn_isLoaded) {
    if (VMD4jesRelativePtBBdn_branch != 0) {
      VMD4jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    VMD4jesRelativePtBBdn_isLoaded = true;
  }
  return VMD4jesRelativePtBBdn_;
}

const float &VVV0Tree::WMD0jesRelativePtBBdn() {
  if (not WMD0jesRelativePtBBdn_isLoaded) {
    if (WMD0jesRelativePtBBdn_branch != 0) {
      WMD0jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    WMD0jesRelativePtBBdn_isLoaded = true;
  }
  return WMD0jesRelativePtBBdn_;
}

const float &VVV0Tree::WMD1jesRelativePtBBdn() {
  if (not WMD1jesRelativePtBBdn_isLoaded) {
    if (WMD1jesRelativePtBBdn_branch != 0) {
      WMD1jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    WMD1jesRelativePtBBdn_isLoaded = true;
  }
  return WMD1jesRelativePtBBdn_;
}

const float &VVV0Tree::WMD2jesRelativePtBBdn() {
  if (not WMD2jesRelativePtBBdn_isLoaded) {
    if (WMD2jesRelativePtBBdn_branch != 0) {
      WMD2jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    WMD2jesRelativePtBBdn_isLoaded = true;
  }
  return WMD2jesRelativePtBBdn_;
}

const float &VVV0Tree::WMD3jesRelativePtBBdn() {
  if (not WMD3jesRelativePtBBdn_isLoaded) {
    if (WMD3jesRelativePtBBdn_branch != 0) {
      WMD3jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    WMD3jesRelativePtBBdn_isLoaded = true;
  }
  return WMD3jesRelativePtBBdn_;
}

const float &VVV0Tree::WMD4jesRelativePtBBdn() {
  if (not WMD4jesRelativePtBBdn_isLoaded) {
    if (WMD4jesRelativePtBBdn_branch != 0) {
      WMD4jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    WMD4jesRelativePtBBdn_isLoaded = true;
  }
  return WMD4jesRelativePtBBdn_;
}

const int &VVV0Tree::NQGen0jesRelativePtBBdn() {
  if (not NQGen0jesRelativePtBBdn_isLoaded) {
    if (NQGen0jesRelativePtBBdn_branch != 0) {
      NQGen0jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesRelativePtBBdn_isLoaded = true;
  }
  return NQGen0jesRelativePtBBdn_;
}

const int &VVV0Tree::NQGen1jesRelativePtBBdn() {
  if (not NQGen1jesRelativePtBBdn_isLoaded) {
    if (NQGen1jesRelativePtBBdn_branch != 0) {
      NQGen1jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesRelativePtBBdn_isLoaded = true;
  }
  return NQGen1jesRelativePtBBdn_;
}

const int &VVV0Tree::NQGen2jesRelativePtBBdn() {
  if (not NQGen2jesRelativePtBBdn_isLoaded) {
    if (NQGen2jesRelativePtBBdn_branch != 0) {
      NQGen2jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesRelativePtBBdn_isLoaded = true;
  }
  return NQGen2jesRelativePtBBdn_;
}

const int &VVV0Tree::NQGen3jesRelativePtBBdn() {
  if (not NQGen3jesRelativePtBBdn_isLoaded) {
    if (NQGen3jesRelativePtBBdn_branch != 0) {
      NQGen3jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesRelativePtBBdn_isLoaded = true;
  }
  return NQGen3jesRelativePtBBdn_;
}

const int &VVV0Tree::NQGen4jesRelativePtBBdn() {
  if (not NQGen4jesRelativePtBBdn_isLoaded) {
    if (NQGen4jesRelativePtBBdn_branch != 0) {
      NQGen4jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesRelativePtBBdn_isLoaded = true;
  }
  return NQGen4jesRelativePtBBdn_;
}

const int &VVV0Tree::NBGen0jesRelativePtBBdn() {
  if (not NBGen0jesRelativePtBBdn_isLoaded) {
    if (NBGen0jesRelativePtBBdn_branch != 0) {
      NBGen0jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesRelativePtBBdn_isLoaded = true;
  }
  return NBGen0jesRelativePtBBdn_;
}

const int &VVV0Tree::NBGen1jesRelativePtBBdn() {
  if (not NBGen1jesRelativePtBBdn_isLoaded) {
    if (NBGen1jesRelativePtBBdn_branch != 0) {
      NBGen1jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesRelativePtBBdn_isLoaded = true;
  }
  return NBGen1jesRelativePtBBdn_;
}

const int &VVV0Tree::NBGen2jesRelativePtBBdn() {
  if (not NBGen2jesRelativePtBBdn_isLoaded) {
    if (NBGen2jesRelativePtBBdn_branch != 0) {
      NBGen2jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesRelativePtBBdn_isLoaded = true;
  }
  return NBGen2jesRelativePtBBdn_;
}

const int &VVV0Tree::NBGen3jesRelativePtBBdn() {
  if (not NBGen3jesRelativePtBBdn_isLoaded) {
    if (NBGen3jesRelativePtBBdn_branch != 0) {
      NBGen3jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesRelativePtBBdn_isLoaded = true;
  }
  return NBGen3jesRelativePtBBdn_;
}

const int &VVV0Tree::NBGen4jesRelativePtBBdn() {
  if (not NBGen4jesRelativePtBBdn_isLoaded) {
    if (NBGen4jesRelativePtBBdn_branch != 0) {
      NBGen4jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesRelativePtBBdn_isLoaded = true;
  }
  return NBGen4jesRelativePtBBdn_;
}

const int &VVV0Tree::NLGen0jesRelativePtBBdn() {
  if (not NLGen0jesRelativePtBBdn_isLoaded) {
    if (NLGen0jesRelativePtBBdn_branch != 0) {
      NLGen0jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesRelativePtBBdn_isLoaded = true;
  }
  return NLGen0jesRelativePtBBdn_;
}

const int &VVV0Tree::NLGen1jesRelativePtBBdn() {
  if (not NLGen1jesRelativePtBBdn_isLoaded) {
    if (NLGen1jesRelativePtBBdn_branch != 0) {
      NLGen1jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesRelativePtBBdn_isLoaded = true;
  }
  return NLGen1jesRelativePtBBdn_;
}

const int &VVV0Tree::NLGen2jesRelativePtBBdn() {
  if (not NLGen2jesRelativePtBBdn_isLoaded) {
    if (NLGen2jesRelativePtBBdn_branch != 0) {
      NLGen2jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesRelativePtBBdn_isLoaded = true;
  }
  return NLGen2jesRelativePtBBdn_;
}

const int &VVV0Tree::NLGen3jesRelativePtBBdn() {
  if (not NLGen3jesRelativePtBBdn_isLoaded) {
    if (NLGen3jesRelativePtBBdn_branch != 0) {
      NLGen3jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesRelativePtBBdn_isLoaded = true;
  }
  return NLGen3jesRelativePtBBdn_;
}

const int &VVV0Tree::NLGen4jesRelativePtBBdn() {
  if (not NLGen4jesRelativePtBBdn_isLoaded) {
    if (NLGen4jesRelativePtBBdn_branch != 0) {
      NLGen4jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesRelativePtBBdn_isLoaded = true;
  }
  return NLGen4jesRelativePtBBdn_;
}

const int &VVV0Tree::NVQGen0jesRelativePtBBdn() {
  if (not NVQGen0jesRelativePtBBdn_isLoaded) {
    if (NVQGen0jesRelativePtBBdn_branch != 0) {
      NVQGen0jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesRelativePtBBdn_isLoaded = true;
  }
  return NVQGen0jesRelativePtBBdn_;
}

const int &VVV0Tree::NVQGen1jesRelativePtBBdn() {
  if (not NVQGen1jesRelativePtBBdn_isLoaded) {
    if (NVQGen1jesRelativePtBBdn_branch != 0) {
      NVQGen1jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesRelativePtBBdn_isLoaded = true;
  }
  return NVQGen1jesRelativePtBBdn_;
}

const int &VVV0Tree::NVQGen2jesRelativePtBBdn() {
  if (not NVQGen2jesRelativePtBBdn_isLoaded) {
    if (NVQGen2jesRelativePtBBdn_branch != 0) {
      NVQGen2jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesRelativePtBBdn_isLoaded = true;
  }
  return NVQGen2jesRelativePtBBdn_;
}

const int &VVV0Tree::NVQGen3jesRelativePtBBdn() {
  if (not NVQGen3jesRelativePtBBdn_isLoaded) {
    if (NVQGen3jesRelativePtBBdn_branch != 0) {
      NVQGen3jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesRelativePtBBdn_isLoaded = true;
  }
  return NVQGen3jesRelativePtBBdn_;
}

const int &VVV0Tree::NVQGen4jesRelativePtBBdn() {
  if (not NVQGen4jesRelativePtBBdn_isLoaded) {
    if (NVQGen4jesRelativePtBBdn_branch != 0) {
      NVQGen4jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesRelativePtBBdn_isLoaded = true;
  }
  return NVQGen4jesRelativePtBBdn_;
}

const int &VVV0Tree::NiFJjesRelativePtBBdn() {
  if (not NiFJjesRelativePtBBdn_isLoaded) {
    if (NiFJjesRelativePtBBdn_branch != 0) {
      NiFJjesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    NiFJjesRelativePtBBdn_isLoaded = true;
  }
  return NiFJjesRelativePtBBdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesRelativePtBBdn() {
  if (not iFJ0jesRelativePtBBdn_isLoaded) {
    if (iFJ0jesRelativePtBBdn_branch != 0) {
      iFJ0jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesRelativePtBBdn_isLoaded = true;
  }
  return *iFJ0jesRelativePtBBdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesRelativePtBBdn() {
  if (not iFJ1jesRelativePtBBdn_isLoaded) {
    if (iFJ1jesRelativePtBBdn_branch != 0) {
      iFJ1jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesRelativePtBBdn_isLoaded = true;
  }
  return *iFJ1jesRelativePtBBdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesRelativePtBBdn() {
  if (not iFJ2jesRelativePtBBdn_isLoaded) {
    if (iFJ2jesRelativePtBBdn_branch != 0) {
      iFJ2jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesRelativePtBBdn_isLoaded = true;
  }
  return *iFJ2jesRelativePtBBdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesRelativePtBBdn() {
  if (not iFJ3jesRelativePtBBdn_isLoaded) {
    if (iFJ3jesRelativePtBBdn_branch != 0) {
      iFJ3jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesRelativePtBBdn_isLoaded = true;
  }
  return *iFJ3jesRelativePtBBdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesRelativePtBBdn() {
  if (not iFJ4jesRelativePtBBdn_isLoaded) {
    if (iFJ4jesRelativePtBBdn_branch != 0) {
      iFJ4jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesRelativePtBBdn_isLoaded = true;
  }
  return *iFJ4jesRelativePtBBdn_;
}

const float &VVV0Tree::iVMD0jesRelativePtBBdn() {
  if (not iVMD0jesRelativePtBBdn_isLoaded) {
    if (iVMD0jesRelativePtBBdn_branch != 0) {
      iVMD0jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesRelativePtBBdn_isLoaded = true;
  }
  return iVMD0jesRelativePtBBdn_;
}

const float &VVV0Tree::iVMD1jesRelativePtBBdn() {
  if (not iVMD1jesRelativePtBBdn_isLoaded) {
    if (iVMD1jesRelativePtBBdn_branch != 0) {
      iVMD1jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesRelativePtBBdn_isLoaded = true;
  }
  return iVMD1jesRelativePtBBdn_;
}

const float &VVV0Tree::iVMD2jesRelativePtBBdn() {
  if (not iVMD2jesRelativePtBBdn_isLoaded) {
    if (iVMD2jesRelativePtBBdn_branch != 0) {
      iVMD2jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesRelativePtBBdn_isLoaded = true;
  }
  return iVMD2jesRelativePtBBdn_;
}

const float &VVV0Tree::iVMD3jesRelativePtBBdn() {
  if (not iVMD3jesRelativePtBBdn_isLoaded) {
    if (iVMD3jesRelativePtBBdn_branch != 0) {
      iVMD3jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesRelativePtBBdn_isLoaded = true;
  }
  return iVMD3jesRelativePtBBdn_;
}

const float &VVV0Tree::iVMD4jesRelativePtBBdn() {
  if (not iVMD4jesRelativePtBBdn_isLoaded) {
    if (iVMD4jesRelativePtBBdn_branch != 0) {
      iVMD4jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesRelativePtBBdn_isLoaded = true;
  }
  return iVMD4jesRelativePtBBdn_;
}

const float &VVV0Tree::iWMD0jesRelativePtBBdn() {
  if (not iWMD0jesRelativePtBBdn_isLoaded) {
    if (iWMD0jesRelativePtBBdn_branch != 0) {
      iWMD0jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesRelativePtBBdn_isLoaded = true;
  }
  return iWMD0jesRelativePtBBdn_;
}

const float &VVV0Tree::iWMD1jesRelativePtBBdn() {
  if (not iWMD1jesRelativePtBBdn_isLoaded) {
    if (iWMD1jesRelativePtBBdn_branch != 0) {
      iWMD1jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesRelativePtBBdn_isLoaded = true;
  }
  return iWMD1jesRelativePtBBdn_;
}

const float &VVV0Tree::iWMD2jesRelativePtBBdn() {
  if (not iWMD2jesRelativePtBBdn_isLoaded) {
    if (iWMD2jesRelativePtBBdn_branch != 0) {
      iWMD2jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesRelativePtBBdn_isLoaded = true;
  }
  return iWMD2jesRelativePtBBdn_;
}

const float &VVV0Tree::iWMD3jesRelativePtBBdn() {
  if (not iWMD3jesRelativePtBBdn_isLoaded) {
    if (iWMD3jesRelativePtBBdn_branch != 0) {
      iWMD3jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesRelativePtBBdn_isLoaded = true;
  }
  return iWMD3jesRelativePtBBdn_;
}

const float &VVV0Tree::iWMD4jesRelativePtBBdn() {
  if (not iWMD4jesRelativePtBBdn_isLoaded) {
    if (iWMD4jesRelativePtBBdn_branch != 0) {
      iWMD4jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesRelativePtBBdn_isLoaded = true;
  }
  return iWMD4jesRelativePtBBdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesRelativePtBBdn() {
  if (not METjesRelativePtBBdn_isLoaded) {
    if (METjesRelativePtBBdn_branch != 0) {
      METjesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch METjesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    METjesRelativePtBBdn_isLoaded = true;
  }
  return *METjesRelativePtBBdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesRelativePtBBdn() {
  if (not NujesRelativePtBBdn_isLoaded) {
    if (NujesRelativePtBBdn_branch != 0) {
      NujesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NujesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    NujesRelativePtBBdn_isLoaded = true;
  }
  return *NujesRelativePtBBdn_;
}

const int &VVV0Tree::NJjesRelativePtBBdn() {
  if (not NJjesRelativePtBBdn_isLoaded) {
    if (NJjesRelativePtBBdn_branch != 0) {
      NJjesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NJjesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    NJjesRelativePtBBdn_isLoaded = true;
  }
  return NJjesRelativePtBBdn_;
}

const int &VVV0Tree::NbLoosejesRelativePtBBdn() {
  if (not NbLoosejesRelativePtBBdn_isLoaded) {
    if (NbLoosejesRelativePtBBdn_branch != 0) {
      NbLoosejesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesRelativePtBBdn_isLoaded = true;
  }
  return NbLoosejesRelativePtBBdn_;
}

const int &VVV0Tree::NbMediumjesRelativePtBBdn() {
  if (not NbMediumjesRelativePtBBdn_isLoaded) {
    if (NbMediumjesRelativePtBBdn_branch != 0) {
      NbMediumjesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesRelativePtBBdn_isLoaded = true;
  }
  return NbMediumjesRelativePtBBdn_;
}

const int &VVV0Tree::NbTightjesRelativePtBBdn() {
  if (not NbTightjesRelativePtBBdn_isLoaded) {
    if (NbTightjesRelativePtBBdn_branch != 0) {
      NbTightjesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    NbTightjesRelativePtBBdn_isLoaded = true;
  }
  return NbTightjesRelativePtBBdn_;
}

const int &VVV0Tree::NoORNbLoosejesRelativePtBBdn() {
  if (not NoORNbLoosejesRelativePtBBdn_isLoaded) {
    if (NoORNbLoosejesRelativePtBBdn_branch != 0) {
      NoORNbLoosejesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesRelativePtBBdn_isLoaded = true;
  }
  return NoORNbLoosejesRelativePtBBdn_;
}

const int &VVV0Tree::NoORNbMediumjesRelativePtBBdn() {
  if (not NoORNbMediumjesRelativePtBBdn_isLoaded) {
    if (NoORNbMediumjesRelativePtBBdn_branch != 0) {
      NoORNbMediumjesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesRelativePtBBdn_isLoaded = true;
  }
  return NoORNbMediumjesRelativePtBBdn_;
}

const int &VVV0Tree::NoORNbTightjesRelativePtBBdn() {
  if (not NoORNbTightjesRelativePtBBdn_isLoaded) {
    if (NoORNbTightjesRelativePtBBdn_branch != 0) {
      NoORNbTightjesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesRelativePtBBdn_isLoaded = true;
  }
  return NoORNbTightjesRelativePtBBdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesRelativePtBBdn() {
  if (not J0jesRelativePtBBdn_isLoaded) {
    if (J0jesRelativePtBBdn_branch != 0) {
      J0jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch J0jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    J0jesRelativePtBBdn_isLoaded = true;
  }
  return *J0jesRelativePtBBdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesRelativePtBBdn() {
  if (not J1jesRelativePtBBdn_isLoaded) {
    if (J1jesRelativePtBBdn_branch != 0) {
      J1jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch J1jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    J1jesRelativePtBBdn_isLoaded = true;
  }
  return *J1jesRelativePtBBdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesRelativePtBBdn() {
  if (not J2jesRelativePtBBdn_isLoaded) {
    if (J2jesRelativePtBBdn_branch != 0) {
      J2jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch J2jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    J2jesRelativePtBBdn_isLoaded = true;
  }
  return *J2jesRelativePtBBdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesRelativePtBBdn() {
  if (not J3jesRelativePtBBdn_isLoaded) {
    if (J3jesRelativePtBBdn_branch != 0) {
      J3jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch J3jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    J3jesRelativePtBBdn_isLoaded = true;
  }
  return *J3jesRelativePtBBdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesRelativePtBBdn() {
  if (not J4jesRelativePtBBdn_isLoaded) {
    if (J4jesRelativePtBBdn_branch != 0) {
      J4jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch J4jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    J4jesRelativePtBBdn_isLoaded = true;
  }
  return *J4jesRelativePtBBdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesRelativePtBBdn() {
  if (not J5jesRelativePtBBdn_isLoaded) {
    if (J5jesRelativePtBBdn_branch != 0) {
      J5jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch J5jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    J5jesRelativePtBBdn_isLoaded = true;
  }
  return *J5jesRelativePtBBdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesRelativePtBBdn() {
  if (not J6jesRelativePtBBdn_isLoaded) {
    if (J6jesRelativePtBBdn_branch != 0) {
      J6jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch J6jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    J6jesRelativePtBBdn_isLoaded = true;
  }
  return *J6jesRelativePtBBdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesRelativePtBBdn() {
  if (not J7jesRelativePtBBdn_isLoaded) {
    if (J7jesRelativePtBBdn_branch != 0) {
      J7jesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch J7jesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    J7jesRelativePtBBdn_isLoaded = true;
  }
  return *J7jesRelativePtBBdn_;
}

const vector<int> &VVV0Tree::NQJGenjesRelativePtBBdn() {
  if (not NQJGenjesRelativePtBBdn_isLoaded) {
    if (NQJGenjesRelativePtBBdn_branch != 0) {
      NQJGenjesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesRelativePtBBdn_isLoaded = true;
  }
  return *NQJGenjesRelativePtBBdn_;
}

const vector<int> &VVV0Tree::NBJGenjesRelativePtBBdn() {
  if (not NBJGenjesRelativePtBBdn_isLoaded) {
    if (NBJGenjesRelativePtBBdn_branch != 0) {
      NBJGenjesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesRelativePtBBdn_isLoaded = true;
  }
  return *NBJGenjesRelativePtBBdn_;
}

const vector<int> &VVV0Tree::NLJGenjesRelativePtBBdn() {
  if (not NLJGenjesRelativePtBBdn_isLoaded) {
    if (NLJGenjesRelativePtBBdn_branch != 0) {
      NLJGenjesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesRelativePtBBdn_isLoaded = true;
  }
  return *NLJGenjesRelativePtBBdn_;
}

const float &VVV0Tree::MVVXjesRelativePtBBdn() {
  if (not MVVXjesRelativePtBBdn_isLoaded) {
    if (MVVXjesRelativePtBBdn_branch != 0) {
      MVVXjesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    MVVXjesRelativePtBBdn_isLoaded = true;
  }
  return MVVXjesRelativePtBBdn_;
}

const float &VVV0Tree::PtVVXjesRelativePtBBdn() {
  if (not PtVVXjesRelativePtBBdn_isLoaded) {
    if (PtVVXjesRelativePtBBdn_branch != 0) {
      PtVVXjesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesRelativePtBBdn_isLoaded = true;
  }
  return PtVVXjesRelativePtBBdn_;
}

const float &VVV0Tree::HTjesRelativePtBBdn() {
  if (not HTjesRelativePtBBdn_isLoaded) {
    if (HTjesRelativePtBBdn_branch != 0) {
      HTjesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch HTjesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    HTjesRelativePtBBdn_isLoaded = true;
  }
  return HTjesRelativePtBBdn_;
}

const float &VVV0Tree::HTJjesRelativePtBBdn() {
  if (not HTJjesRelativePtBBdn_isLoaded) {
    if (HTJjesRelativePtBBdn_branch != 0) {
      HTJjesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch HTJjesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    HTJjesRelativePtBBdn_isLoaded = true;
  }
  return HTJjesRelativePtBBdn_;
}

const float &VVV0Tree::HTFJjesRelativePtBBdn() {
  if (not HTFJjesRelativePtBBdn_isLoaded) {
    if (HTFJjesRelativePtBBdn_branch != 0) {
      HTFJjesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    HTFJjesRelativePtBBdn_isLoaded = true;
  }
  return HTFJjesRelativePtBBdn_;
}

const float &VVV0Tree::SumPtFJjesRelativePtBBdn() {
  if (not SumPtFJjesRelativePtBBdn_isLoaded) {
    if (SumPtFJjesRelativePtBBdn_branch != 0) {
      SumPtFJjesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesRelativePtBBdn_isLoaded = true;
  }
  return SumPtFJjesRelativePtBBdn_;
}

const float &VVV0Tree::SumPtJjesRelativePtBBdn() {
  if (not SumPtJjesRelativePtBBdn_isLoaded) {
    if (SumPtJjesRelativePtBBdn_branch != 0) {
      SumPtJjesRelativePtBBdn_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesRelativePtBBdn_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesRelativePtBBdn_isLoaded = true;
  }
  return SumPtJjesRelativePtBBdn_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesRelativePtEC1up() {
  if (not JsjesRelativePtEC1up_isLoaded) {
    if (JsjesRelativePtEC1up_branch != 0) {
      JsjesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch JsjesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    JsjesRelativePtEC1up_isLoaded = true;
  }
  return *JsjesRelativePtEC1up_;
}

const int &VVV0Tree::NFJjesRelativePtEC1up() {
  if (not NFJjesRelativePtEC1up_isLoaded) {
    if (NFJjesRelativePtEC1up_branch != 0) {
      NFJjesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NFJjesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    NFJjesRelativePtEC1up_isLoaded = true;
  }
  return NFJjesRelativePtEC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesRelativePtEC1up() {
  if (not FJ0jesRelativePtEC1up_isLoaded) {
    if (FJ0jesRelativePtEC1up_branch != 0) {
      FJ0jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    FJ0jesRelativePtEC1up_isLoaded = true;
  }
  return *FJ0jesRelativePtEC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesRelativePtEC1up() {
  if (not FJ1jesRelativePtEC1up_isLoaded) {
    if (FJ1jesRelativePtEC1up_branch != 0) {
      FJ1jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    FJ1jesRelativePtEC1up_isLoaded = true;
  }
  return *FJ1jesRelativePtEC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesRelativePtEC1up() {
  if (not FJ2jesRelativePtEC1up_isLoaded) {
    if (FJ2jesRelativePtEC1up_branch != 0) {
      FJ2jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    FJ2jesRelativePtEC1up_isLoaded = true;
  }
  return *FJ2jesRelativePtEC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesRelativePtEC1up() {
  if (not FJ3jesRelativePtEC1up_isLoaded) {
    if (FJ3jesRelativePtEC1up_branch != 0) {
      FJ3jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    FJ3jesRelativePtEC1up_isLoaded = true;
  }
  return *FJ3jesRelativePtEC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesRelativePtEC1up() {
  if (not FJ4jesRelativePtEC1up_isLoaded) {
    if (FJ4jesRelativePtEC1up_branch != 0) {
      FJ4jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    FJ4jesRelativePtEC1up_isLoaded = true;
  }
  return *FJ4jesRelativePtEC1up_;
}

const float &VVV0Tree::VMD0jesRelativePtEC1up() {
  if (not VMD0jesRelativePtEC1up_isLoaded) {
    if (VMD0jesRelativePtEC1up_branch != 0) {
      VMD0jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    VMD0jesRelativePtEC1up_isLoaded = true;
  }
  return VMD0jesRelativePtEC1up_;
}

const float &VVV0Tree::VMD1jesRelativePtEC1up() {
  if (not VMD1jesRelativePtEC1up_isLoaded) {
    if (VMD1jesRelativePtEC1up_branch != 0) {
      VMD1jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    VMD1jesRelativePtEC1up_isLoaded = true;
  }
  return VMD1jesRelativePtEC1up_;
}

const float &VVV0Tree::VMD2jesRelativePtEC1up() {
  if (not VMD2jesRelativePtEC1up_isLoaded) {
    if (VMD2jesRelativePtEC1up_branch != 0) {
      VMD2jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    VMD2jesRelativePtEC1up_isLoaded = true;
  }
  return VMD2jesRelativePtEC1up_;
}

const float &VVV0Tree::VMD3jesRelativePtEC1up() {
  if (not VMD3jesRelativePtEC1up_isLoaded) {
    if (VMD3jesRelativePtEC1up_branch != 0) {
      VMD3jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    VMD3jesRelativePtEC1up_isLoaded = true;
  }
  return VMD3jesRelativePtEC1up_;
}

const float &VVV0Tree::VMD4jesRelativePtEC1up() {
  if (not VMD4jesRelativePtEC1up_isLoaded) {
    if (VMD4jesRelativePtEC1up_branch != 0) {
      VMD4jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    VMD4jesRelativePtEC1up_isLoaded = true;
  }
  return VMD4jesRelativePtEC1up_;
}

const float &VVV0Tree::WMD0jesRelativePtEC1up() {
  if (not WMD0jesRelativePtEC1up_isLoaded) {
    if (WMD0jesRelativePtEC1up_branch != 0) {
      WMD0jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    WMD0jesRelativePtEC1up_isLoaded = true;
  }
  return WMD0jesRelativePtEC1up_;
}

const float &VVV0Tree::WMD1jesRelativePtEC1up() {
  if (not WMD1jesRelativePtEC1up_isLoaded) {
    if (WMD1jesRelativePtEC1up_branch != 0) {
      WMD1jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    WMD1jesRelativePtEC1up_isLoaded = true;
  }
  return WMD1jesRelativePtEC1up_;
}

const float &VVV0Tree::WMD2jesRelativePtEC1up() {
  if (not WMD2jesRelativePtEC1up_isLoaded) {
    if (WMD2jesRelativePtEC1up_branch != 0) {
      WMD2jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    WMD2jesRelativePtEC1up_isLoaded = true;
  }
  return WMD2jesRelativePtEC1up_;
}

const float &VVV0Tree::WMD3jesRelativePtEC1up() {
  if (not WMD3jesRelativePtEC1up_isLoaded) {
    if (WMD3jesRelativePtEC1up_branch != 0) {
      WMD3jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    WMD3jesRelativePtEC1up_isLoaded = true;
  }
  return WMD3jesRelativePtEC1up_;
}

const float &VVV0Tree::WMD4jesRelativePtEC1up() {
  if (not WMD4jesRelativePtEC1up_isLoaded) {
    if (WMD4jesRelativePtEC1up_branch != 0) {
      WMD4jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    WMD4jesRelativePtEC1up_isLoaded = true;
  }
  return WMD4jesRelativePtEC1up_;
}

const int &VVV0Tree::NQGen0jesRelativePtEC1up() {
  if (not NQGen0jesRelativePtEC1up_isLoaded) {
    if (NQGen0jesRelativePtEC1up_branch != 0) {
      NQGen0jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesRelativePtEC1up_isLoaded = true;
  }
  return NQGen0jesRelativePtEC1up_;
}

const int &VVV0Tree::NQGen1jesRelativePtEC1up() {
  if (not NQGen1jesRelativePtEC1up_isLoaded) {
    if (NQGen1jesRelativePtEC1up_branch != 0) {
      NQGen1jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesRelativePtEC1up_isLoaded = true;
  }
  return NQGen1jesRelativePtEC1up_;
}

const int &VVV0Tree::NQGen2jesRelativePtEC1up() {
  if (not NQGen2jesRelativePtEC1up_isLoaded) {
    if (NQGen2jesRelativePtEC1up_branch != 0) {
      NQGen2jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesRelativePtEC1up_isLoaded = true;
  }
  return NQGen2jesRelativePtEC1up_;
}

const int &VVV0Tree::NQGen3jesRelativePtEC1up() {
  if (not NQGen3jesRelativePtEC1up_isLoaded) {
    if (NQGen3jesRelativePtEC1up_branch != 0) {
      NQGen3jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesRelativePtEC1up_isLoaded = true;
  }
  return NQGen3jesRelativePtEC1up_;
}

const int &VVV0Tree::NQGen4jesRelativePtEC1up() {
  if (not NQGen4jesRelativePtEC1up_isLoaded) {
    if (NQGen4jesRelativePtEC1up_branch != 0) {
      NQGen4jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesRelativePtEC1up_isLoaded = true;
  }
  return NQGen4jesRelativePtEC1up_;
}

const int &VVV0Tree::NBGen0jesRelativePtEC1up() {
  if (not NBGen0jesRelativePtEC1up_isLoaded) {
    if (NBGen0jesRelativePtEC1up_branch != 0) {
      NBGen0jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesRelativePtEC1up_isLoaded = true;
  }
  return NBGen0jesRelativePtEC1up_;
}

const int &VVV0Tree::NBGen1jesRelativePtEC1up() {
  if (not NBGen1jesRelativePtEC1up_isLoaded) {
    if (NBGen1jesRelativePtEC1up_branch != 0) {
      NBGen1jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesRelativePtEC1up_isLoaded = true;
  }
  return NBGen1jesRelativePtEC1up_;
}

const int &VVV0Tree::NBGen2jesRelativePtEC1up() {
  if (not NBGen2jesRelativePtEC1up_isLoaded) {
    if (NBGen2jesRelativePtEC1up_branch != 0) {
      NBGen2jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesRelativePtEC1up_isLoaded = true;
  }
  return NBGen2jesRelativePtEC1up_;
}

const int &VVV0Tree::NBGen3jesRelativePtEC1up() {
  if (not NBGen3jesRelativePtEC1up_isLoaded) {
    if (NBGen3jesRelativePtEC1up_branch != 0) {
      NBGen3jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesRelativePtEC1up_isLoaded = true;
  }
  return NBGen3jesRelativePtEC1up_;
}

const int &VVV0Tree::NBGen4jesRelativePtEC1up() {
  if (not NBGen4jesRelativePtEC1up_isLoaded) {
    if (NBGen4jesRelativePtEC1up_branch != 0) {
      NBGen4jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesRelativePtEC1up_isLoaded = true;
  }
  return NBGen4jesRelativePtEC1up_;
}

const int &VVV0Tree::NLGen0jesRelativePtEC1up() {
  if (not NLGen0jesRelativePtEC1up_isLoaded) {
    if (NLGen0jesRelativePtEC1up_branch != 0) {
      NLGen0jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesRelativePtEC1up_isLoaded = true;
  }
  return NLGen0jesRelativePtEC1up_;
}

const int &VVV0Tree::NLGen1jesRelativePtEC1up() {
  if (not NLGen1jesRelativePtEC1up_isLoaded) {
    if (NLGen1jesRelativePtEC1up_branch != 0) {
      NLGen1jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesRelativePtEC1up_isLoaded = true;
  }
  return NLGen1jesRelativePtEC1up_;
}

const int &VVV0Tree::NLGen2jesRelativePtEC1up() {
  if (not NLGen2jesRelativePtEC1up_isLoaded) {
    if (NLGen2jesRelativePtEC1up_branch != 0) {
      NLGen2jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesRelativePtEC1up_isLoaded = true;
  }
  return NLGen2jesRelativePtEC1up_;
}

const int &VVV0Tree::NLGen3jesRelativePtEC1up() {
  if (not NLGen3jesRelativePtEC1up_isLoaded) {
    if (NLGen3jesRelativePtEC1up_branch != 0) {
      NLGen3jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesRelativePtEC1up_isLoaded = true;
  }
  return NLGen3jesRelativePtEC1up_;
}

const int &VVV0Tree::NLGen4jesRelativePtEC1up() {
  if (not NLGen4jesRelativePtEC1up_isLoaded) {
    if (NLGen4jesRelativePtEC1up_branch != 0) {
      NLGen4jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesRelativePtEC1up_isLoaded = true;
  }
  return NLGen4jesRelativePtEC1up_;
}

const int &VVV0Tree::NVQGen0jesRelativePtEC1up() {
  if (not NVQGen0jesRelativePtEC1up_isLoaded) {
    if (NVQGen0jesRelativePtEC1up_branch != 0) {
      NVQGen0jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesRelativePtEC1up_isLoaded = true;
  }
  return NVQGen0jesRelativePtEC1up_;
}

const int &VVV0Tree::NVQGen1jesRelativePtEC1up() {
  if (not NVQGen1jesRelativePtEC1up_isLoaded) {
    if (NVQGen1jesRelativePtEC1up_branch != 0) {
      NVQGen1jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesRelativePtEC1up_isLoaded = true;
  }
  return NVQGen1jesRelativePtEC1up_;
}

const int &VVV0Tree::NVQGen2jesRelativePtEC1up() {
  if (not NVQGen2jesRelativePtEC1up_isLoaded) {
    if (NVQGen2jesRelativePtEC1up_branch != 0) {
      NVQGen2jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesRelativePtEC1up_isLoaded = true;
  }
  return NVQGen2jesRelativePtEC1up_;
}

const int &VVV0Tree::NVQGen3jesRelativePtEC1up() {
  if (not NVQGen3jesRelativePtEC1up_isLoaded) {
    if (NVQGen3jesRelativePtEC1up_branch != 0) {
      NVQGen3jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesRelativePtEC1up_isLoaded = true;
  }
  return NVQGen3jesRelativePtEC1up_;
}

const int &VVV0Tree::NVQGen4jesRelativePtEC1up() {
  if (not NVQGen4jesRelativePtEC1up_isLoaded) {
    if (NVQGen4jesRelativePtEC1up_branch != 0) {
      NVQGen4jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesRelativePtEC1up_isLoaded = true;
  }
  return NVQGen4jesRelativePtEC1up_;
}

const int &VVV0Tree::NiFJjesRelativePtEC1up() {
  if (not NiFJjesRelativePtEC1up_isLoaded) {
    if (NiFJjesRelativePtEC1up_branch != 0) {
      NiFJjesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    NiFJjesRelativePtEC1up_isLoaded = true;
  }
  return NiFJjesRelativePtEC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesRelativePtEC1up() {
  if (not iFJ0jesRelativePtEC1up_isLoaded) {
    if (iFJ0jesRelativePtEC1up_branch != 0) {
      iFJ0jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesRelativePtEC1up_isLoaded = true;
  }
  return *iFJ0jesRelativePtEC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesRelativePtEC1up() {
  if (not iFJ1jesRelativePtEC1up_isLoaded) {
    if (iFJ1jesRelativePtEC1up_branch != 0) {
      iFJ1jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesRelativePtEC1up_isLoaded = true;
  }
  return *iFJ1jesRelativePtEC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesRelativePtEC1up() {
  if (not iFJ2jesRelativePtEC1up_isLoaded) {
    if (iFJ2jesRelativePtEC1up_branch != 0) {
      iFJ2jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesRelativePtEC1up_isLoaded = true;
  }
  return *iFJ2jesRelativePtEC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesRelativePtEC1up() {
  if (not iFJ3jesRelativePtEC1up_isLoaded) {
    if (iFJ3jesRelativePtEC1up_branch != 0) {
      iFJ3jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesRelativePtEC1up_isLoaded = true;
  }
  return *iFJ3jesRelativePtEC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesRelativePtEC1up() {
  if (not iFJ4jesRelativePtEC1up_isLoaded) {
    if (iFJ4jesRelativePtEC1up_branch != 0) {
      iFJ4jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesRelativePtEC1up_isLoaded = true;
  }
  return *iFJ4jesRelativePtEC1up_;
}

const float &VVV0Tree::iVMD0jesRelativePtEC1up() {
  if (not iVMD0jesRelativePtEC1up_isLoaded) {
    if (iVMD0jesRelativePtEC1up_branch != 0) {
      iVMD0jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesRelativePtEC1up_isLoaded = true;
  }
  return iVMD0jesRelativePtEC1up_;
}

const float &VVV0Tree::iVMD1jesRelativePtEC1up() {
  if (not iVMD1jesRelativePtEC1up_isLoaded) {
    if (iVMD1jesRelativePtEC1up_branch != 0) {
      iVMD1jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesRelativePtEC1up_isLoaded = true;
  }
  return iVMD1jesRelativePtEC1up_;
}

const float &VVV0Tree::iVMD2jesRelativePtEC1up() {
  if (not iVMD2jesRelativePtEC1up_isLoaded) {
    if (iVMD2jesRelativePtEC1up_branch != 0) {
      iVMD2jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesRelativePtEC1up_isLoaded = true;
  }
  return iVMD2jesRelativePtEC1up_;
}

const float &VVV0Tree::iVMD3jesRelativePtEC1up() {
  if (not iVMD3jesRelativePtEC1up_isLoaded) {
    if (iVMD3jesRelativePtEC1up_branch != 0) {
      iVMD3jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesRelativePtEC1up_isLoaded = true;
  }
  return iVMD3jesRelativePtEC1up_;
}

const float &VVV0Tree::iVMD4jesRelativePtEC1up() {
  if (not iVMD4jesRelativePtEC1up_isLoaded) {
    if (iVMD4jesRelativePtEC1up_branch != 0) {
      iVMD4jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesRelativePtEC1up_isLoaded = true;
  }
  return iVMD4jesRelativePtEC1up_;
}

const float &VVV0Tree::iWMD0jesRelativePtEC1up() {
  if (not iWMD0jesRelativePtEC1up_isLoaded) {
    if (iWMD0jesRelativePtEC1up_branch != 0) {
      iWMD0jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesRelativePtEC1up_isLoaded = true;
  }
  return iWMD0jesRelativePtEC1up_;
}

const float &VVV0Tree::iWMD1jesRelativePtEC1up() {
  if (not iWMD1jesRelativePtEC1up_isLoaded) {
    if (iWMD1jesRelativePtEC1up_branch != 0) {
      iWMD1jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesRelativePtEC1up_isLoaded = true;
  }
  return iWMD1jesRelativePtEC1up_;
}

const float &VVV0Tree::iWMD2jesRelativePtEC1up() {
  if (not iWMD2jesRelativePtEC1up_isLoaded) {
    if (iWMD2jesRelativePtEC1up_branch != 0) {
      iWMD2jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesRelativePtEC1up_isLoaded = true;
  }
  return iWMD2jesRelativePtEC1up_;
}

const float &VVV0Tree::iWMD3jesRelativePtEC1up() {
  if (not iWMD3jesRelativePtEC1up_isLoaded) {
    if (iWMD3jesRelativePtEC1up_branch != 0) {
      iWMD3jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesRelativePtEC1up_isLoaded = true;
  }
  return iWMD3jesRelativePtEC1up_;
}

const float &VVV0Tree::iWMD4jesRelativePtEC1up() {
  if (not iWMD4jesRelativePtEC1up_isLoaded) {
    if (iWMD4jesRelativePtEC1up_branch != 0) {
      iWMD4jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesRelativePtEC1up_isLoaded = true;
  }
  return iWMD4jesRelativePtEC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesRelativePtEC1up() {
  if (not METjesRelativePtEC1up_isLoaded) {
    if (METjesRelativePtEC1up_branch != 0) {
      METjesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch METjesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    METjesRelativePtEC1up_isLoaded = true;
  }
  return *METjesRelativePtEC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesRelativePtEC1up() {
  if (not NujesRelativePtEC1up_isLoaded) {
    if (NujesRelativePtEC1up_branch != 0) {
      NujesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NujesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    NujesRelativePtEC1up_isLoaded = true;
  }
  return *NujesRelativePtEC1up_;
}

const int &VVV0Tree::NJjesRelativePtEC1up() {
  if (not NJjesRelativePtEC1up_isLoaded) {
    if (NJjesRelativePtEC1up_branch != 0) {
      NJjesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NJjesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    NJjesRelativePtEC1up_isLoaded = true;
  }
  return NJjesRelativePtEC1up_;
}

const int &VVV0Tree::NbLoosejesRelativePtEC1up() {
  if (not NbLoosejesRelativePtEC1up_isLoaded) {
    if (NbLoosejesRelativePtEC1up_branch != 0) {
      NbLoosejesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesRelativePtEC1up_isLoaded = true;
  }
  return NbLoosejesRelativePtEC1up_;
}

const int &VVV0Tree::NbMediumjesRelativePtEC1up() {
  if (not NbMediumjesRelativePtEC1up_isLoaded) {
    if (NbMediumjesRelativePtEC1up_branch != 0) {
      NbMediumjesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesRelativePtEC1up_isLoaded = true;
  }
  return NbMediumjesRelativePtEC1up_;
}

const int &VVV0Tree::NbTightjesRelativePtEC1up() {
  if (not NbTightjesRelativePtEC1up_isLoaded) {
    if (NbTightjesRelativePtEC1up_branch != 0) {
      NbTightjesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    NbTightjesRelativePtEC1up_isLoaded = true;
  }
  return NbTightjesRelativePtEC1up_;
}

const int &VVV0Tree::NoORNbLoosejesRelativePtEC1up() {
  if (not NoORNbLoosejesRelativePtEC1up_isLoaded) {
    if (NoORNbLoosejesRelativePtEC1up_branch != 0) {
      NoORNbLoosejesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesRelativePtEC1up_isLoaded = true;
  }
  return NoORNbLoosejesRelativePtEC1up_;
}

const int &VVV0Tree::NoORNbMediumjesRelativePtEC1up() {
  if (not NoORNbMediumjesRelativePtEC1up_isLoaded) {
    if (NoORNbMediumjesRelativePtEC1up_branch != 0) {
      NoORNbMediumjesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesRelativePtEC1up_isLoaded = true;
  }
  return NoORNbMediumjesRelativePtEC1up_;
}

const int &VVV0Tree::NoORNbTightjesRelativePtEC1up() {
  if (not NoORNbTightjesRelativePtEC1up_isLoaded) {
    if (NoORNbTightjesRelativePtEC1up_branch != 0) {
      NoORNbTightjesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesRelativePtEC1up_isLoaded = true;
  }
  return NoORNbTightjesRelativePtEC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesRelativePtEC1up() {
  if (not J0jesRelativePtEC1up_isLoaded) {
    if (J0jesRelativePtEC1up_branch != 0) {
      J0jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch J0jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    J0jesRelativePtEC1up_isLoaded = true;
  }
  return *J0jesRelativePtEC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesRelativePtEC1up() {
  if (not J1jesRelativePtEC1up_isLoaded) {
    if (J1jesRelativePtEC1up_branch != 0) {
      J1jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch J1jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    J1jesRelativePtEC1up_isLoaded = true;
  }
  return *J1jesRelativePtEC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesRelativePtEC1up() {
  if (not J2jesRelativePtEC1up_isLoaded) {
    if (J2jesRelativePtEC1up_branch != 0) {
      J2jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch J2jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    J2jesRelativePtEC1up_isLoaded = true;
  }
  return *J2jesRelativePtEC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesRelativePtEC1up() {
  if (not J3jesRelativePtEC1up_isLoaded) {
    if (J3jesRelativePtEC1up_branch != 0) {
      J3jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch J3jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    J3jesRelativePtEC1up_isLoaded = true;
  }
  return *J3jesRelativePtEC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesRelativePtEC1up() {
  if (not J4jesRelativePtEC1up_isLoaded) {
    if (J4jesRelativePtEC1up_branch != 0) {
      J4jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch J4jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    J4jesRelativePtEC1up_isLoaded = true;
  }
  return *J4jesRelativePtEC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesRelativePtEC1up() {
  if (not J5jesRelativePtEC1up_isLoaded) {
    if (J5jesRelativePtEC1up_branch != 0) {
      J5jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch J5jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    J5jesRelativePtEC1up_isLoaded = true;
  }
  return *J5jesRelativePtEC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesRelativePtEC1up() {
  if (not J6jesRelativePtEC1up_isLoaded) {
    if (J6jesRelativePtEC1up_branch != 0) {
      J6jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch J6jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    J6jesRelativePtEC1up_isLoaded = true;
  }
  return *J6jesRelativePtEC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesRelativePtEC1up() {
  if (not J7jesRelativePtEC1up_isLoaded) {
    if (J7jesRelativePtEC1up_branch != 0) {
      J7jesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch J7jesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    J7jesRelativePtEC1up_isLoaded = true;
  }
  return *J7jesRelativePtEC1up_;
}

const vector<int> &VVV0Tree::NQJGenjesRelativePtEC1up() {
  if (not NQJGenjesRelativePtEC1up_isLoaded) {
    if (NQJGenjesRelativePtEC1up_branch != 0) {
      NQJGenjesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesRelativePtEC1up_isLoaded = true;
  }
  return *NQJGenjesRelativePtEC1up_;
}

const vector<int> &VVV0Tree::NBJGenjesRelativePtEC1up() {
  if (not NBJGenjesRelativePtEC1up_isLoaded) {
    if (NBJGenjesRelativePtEC1up_branch != 0) {
      NBJGenjesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesRelativePtEC1up_isLoaded = true;
  }
  return *NBJGenjesRelativePtEC1up_;
}

const vector<int> &VVV0Tree::NLJGenjesRelativePtEC1up() {
  if (not NLJGenjesRelativePtEC1up_isLoaded) {
    if (NLJGenjesRelativePtEC1up_branch != 0) {
      NLJGenjesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesRelativePtEC1up_isLoaded = true;
  }
  return *NLJGenjesRelativePtEC1up_;
}

const float &VVV0Tree::MVVXjesRelativePtEC1up() {
  if (not MVVXjesRelativePtEC1up_isLoaded) {
    if (MVVXjesRelativePtEC1up_branch != 0) {
      MVVXjesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    MVVXjesRelativePtEC1up_isLoaded = true;
  }
  return MVVXjesRelativePtEC1up_;
}

const float &VVV0Tree::PtVVXjesRelativePtEC1up() {
  if (not PtVVXjesRelativePtEC1up_isLoaded) {
    if (PtVVXjesRelativePtEC1up_branch != 0) {
      PtVVXjesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesRelativePtEC1up_isLoaded = true;
  }
  return PtVVXjesRelativePtEC1up_;
}

const float &VVV0Tree::HTjesRelativePtEC1up() {
  if (not HTjesRelativePtEC1up_isLoaded) {
    if (HTjesRelativePtEC1up_branch != 0) {
      HTjesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch HTjesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    HTjesRelativePtEC1up_isLoaded = true;
  }
  return HTjesRelativePtEC1up_;
}

const float &VVV0Tree::HTJjesRelativePtEC1up() {
  if (not HTJjesRelativePtEC1up_isLoaded) {
    if (HTJjesRelativePtEC1up_branch != 0) {
      HTJjesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch HTJjesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    HTJjesRelativePtEC1up_isLoaded = true;
  }
  return HTJjesRelativePtEC1up_;
}

const float &VVV0Tree::HTFJjesRelativePtEC1up() {
  if (not HTFJjesRelativePtEC1up_isLoaded) {
    if (HTFJjesRelativePtEC1up_branch != 0) {
      HTFJjesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    HTFJjesRelativePtEC1up_isLoaded = true;
  }
  return HTFJjesRelativePtEC1up_;
}

const float &VVV0Tree::SumPtFJjesRelativePtEC1up() {
  if (not SumPtFJjesRelativePtEC1up_isLoaded) {
    if (SumPtFJjesRelativePtEC1up_branch != 0) {
      SumPtFJjesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesRelativePtEC1up_isLoaded = true;
  }
  return SumPtFJjesRelativePtEC1up_;
}

const float &VVV0Tree::SumPtJjesRelativePtEC1up() {
  if (not SumPtJjesRelativePtEC1up_isLoaded) {
    if (SumPtJjesRelativePtEC1up_branch != 0) {
      SumPtJjesRelativePtEC1up_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesRelativePtEC1up_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesRelativePtEC1up_isLoaded = true;
  }
  return SumPtJjesRelativePtEC1up_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesRelativePtEC1dn() {
  if (not JsjesRelativePtEC1dn_isLoaded) {
    if (JsjesRelativePtEC1dn_branch != 0) {
      JsjesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch JsjesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    JsjesRelativePtEC1dn_isLoaded = true;
  }
  return *JsjesRelativePtEC1dn_;
}

const int &VVV0Tree::NFJjesRelativePtEC1dn() {
  if (not NFJjesRelativePtEC1dn_isLoaded) {
    if (NFJjesRelativePtEC1dn_branch != 0) {
      NFJjesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NFJjesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NFJjesRelativePtEC1dn_isLoaded = true;
  }
  return NFJjesRelativePtEC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesRelativePtEC1dn() {
  if (not FJ0jesRelativePtEC1dn_isLoaded) {
    if (FJ0jesRelativePtEC1dn_branch != 0) {
      FJ0jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    FJ0jesRelativePtEC1dn_isLoaded = true;
  }
  return *FJ0jesRelativePtEC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesRelativePtEC1dn() {
  if (not FJ1jesRelativePtEC1dn_isLoaded) {
    if (FJ1jesRelativePtEC1dn_branch != 0) {
      FJ1jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    FJ1jesRelativePtEC1dn_isLoaded = true;
  }
  return *FJ1jesRelativePtEC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesRelativePtEC1dn() {
  if (not FJ2jesRelativePtEC1dn_isLoaded) {
    if (FJ2jesRelativePtEC1dn_branch != 0) {
      FJ2jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    FJ2jesRelativePtEC1dn_isLoaded = true;
  }
  return *FJ2jesRelativePtEC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesRelativePtEC1dn() {
  if (not FJ3jesRelativePtEC1dn_isLoaded) {
    if (FJ3jesRelativePtEC1dn_branch != 0) {
      FJ3jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    FJ3jesRelativePtEC1dn_isLoaded = true;
  }
  return *FJ3jesRelativePtEC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesRelativePtEC1dn() {
  if (not FJ4jesRelativePtEC1dn_isLoaded) {
    if (FJ4jesRelativePtEC1dn_branch != 0) {
      FJ4jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    FJ4jesRelativePtEC1dn_isLoaded = true;
  }
  return *FJ4jesRelativePtEC1dn_;
}

const float &VVV0Tree::VMD0jesRelativePtEC1dn() {
  if (not VMD0jesRelativePtEC1dn_isLoaded) {
    if (VMD0jesRelativePtEC1dn_branch != 0) {
      VMD0jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    VMD0jesRelativePtEC1dn_isLoaded = true;
  }
  return VMD0jesRelativePtEC1dn_;
}

const float &VVV0Tree::VMD1jesRelativePtEC1dn() {
  if (not VMD1jesRelativePtEC1dn_isLoaded) {
    if (VMD1jesRelativePtEC1dn_branch != 0) {
      VMD1jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    VMD1jesRelativePtEC1dn_isLoaded = true;
  }
  return VMD1jesRelativePtEC1dn_;
}

const float &VVV0Tree::VMD2jesRelativePtEC1dn() {
  if (not VMD2jesRelativePtEC1dn_isLoaded) {
    if (VMD2jesRelativePtEC1dn_branch != 0) {
      VMD2jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    VMD2jesRelativePtEC1dn_isLoaded = true;
  }
  return VMD2jesRelativePtEC1dn_;
}

const float &VVV0Tree::VMD3jesRelativePtEC1dn() {
  if (not VMD3jesRelativePtEC1dn_isLoaded) {
    if (VMD3jesRelativePtEC1dn_branch != 0) {
      VMD3jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    VMD3jesRelativePtEC1dn_isLoaded = true;
  }
  return VMD3jesRelativePtEC1dn_;
}

const float &VVV0Tree::VMD4jesRelativePtEC1dn() {
  if (not VMD4jesRelativePtEC1dn_isLoaded) {
    if (VMD4jesRelativePtEC1dn_branch != 0) {
      VMD4jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    VMD4jesRelativePtEC1dn_isLoaded = true;
  }
  return VMD4jesRelativePtEC1dn_;
}

const float &VVV0Tree::WMD0jesRelativePtEC1dn() {
  if (not WMD0jesRelativePtEC1dn_isLoaded) {
    if (WMD0jesRelativePtEC1dn_branch != 0) {
      WMD0jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    WMD0jesRelativePtEC1dn_isLoaded = true;
  }
  return WMD0jesRelativePtEC1dn_;
}

const float &VVV0Tree::WMD1jesRelativePtEC1dn() {
  if (not WMD1jesRelativePtEC1dn_isLoaded) {
    if (WMD1jesRelativePtEC1dn_branch != 0) {
      WMD1jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    WMD1jesRelativePtEC1dn_isLoaded = true;
  }
  return WMD1jesRelativePtEC1dn_;
}

const float &VVV0Tree::WMD2jesRelativePtEC1dn() {
  if (not WMD2jesRelativePtEC1dn_isLoaded) {
    if (WMD2jesRelativePtEC1dn_branch != 0) {
      WMD2jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    WMD2jesRelativePtEC1dn_isLoaded = true;
  }
  return WMD2jesRelativePtEC1dn_;
}

const float &VVV0Tree::WMD3jesRelativePtEC1dn() {
  if (not WMD3jesRelativePtEC1dn_isLoaded) {
    if (WMD3jesRelativePtEC1dn_branch != 0) {
      WMD3jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    WMD3jesRelativePtEC1dn_isLoaded = true;
  }
  return WMD3jesRelativePtEC1dn_;
}

const float &VVV0Tree::WMD4jesRelativePtEC1dn() {
  if (not WMD4jesRelativePtEC1dn_isLoaded) {
    if (WMD4jesRelativePtEC1dn_branch != 0) {
      WMD4jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    WMD4jesRelativePtEC1dn_isLoaded = true;
  }
  return WMD4jesRelativePtEC1dn_;
}

const int &VVV0Tree::NQGen0jesRelativePtEC1dn() {
  if (not NQGen0jesRelativePtEC1dn_isLoaded) {
    if (NQGen0jesRelativePtEC1dn_branch != 0) {
      NQGen0jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesRelativePtEC1dn_isLoaded = true;
  }
  return NQGen0jesRelativePtEC1dn_;
}

const int &VVV0Tree::NQGen1jesRelativePtEC1dn() {
  if (not NQGen1jesRelativePtEC1dn_isLoaded) {
    if (NQGen1jesRelativePtEC1dn_branch != 0) {
      NQGen1jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesRelativePtEC1dn_isLoaded = true;
  }
  return NQGen1jesRelativePtEC1dn_;
}

const int &VVV0Tree::NQGen2jesRelativePtEC1dn() {
  if (not NQGen2jesRelativePtEC1dn_isLoaded) {
    if (NQGen2jesRelativePtEC1dn_branch != 0) {
      NQGen2jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesRelativePtEC1dn_isLoaded = true;
  }
  return NQGen2jesRelativePtEC1dn_;
}

const int &VVV0Tree::NQGen3jesRelativePtEC1dn() {
  if (not NQGen3jesRelativePtEC1dn_isLoaded) {
    if (NQGen3jesRelativePtEC1dn_branch != 0) {
      NQGen3jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesRelativePtEC1dn_isLoaded = true;
  }
  return NQGen3jesRelativePtEC1dn_;
}

const int &VVV0Tree::NQGen4jesRelativePtEC1dn() {
  if (not NQGen4jesRelativePtEC1dn_isLoaded) {
    if (NQGen4jesRelativePtEC1dn_branch != 0) {
      NQGen4jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesRelativePtEC1dn_isLoaded = true;
  }
  return NQGen4jesRelativePtEC1dn_;
}

const int &VVV0Tree::NBGen0jesRelativePtEC1dn() {
  if (not NBGen0jesRelativePtEC1dn_isLoaded) {
    if (NBGen0jesRelativePtEC1dn_branch != 0) {
      NBGen0jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesRelativePtEC1dn_isLoaded = true;
  }
  return NBGen0jesRelativePtEC1dn_;
}

const int &VVV0Tree::NBGen1jesRelativePtEC1dn() {
  if (not NBGen1jesRelativePtEC1dn_isLoaded) {
    if (NBGen1jesRelativePtEC1dn_branch != 0) {
      NBGen1jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesRelativePtEC1dn_isLoaded = true;
  }
  return NBGen1jesRelativePtEC1dn_;
}

const int &VVV0Tree::NBGen2jesRelativePtEC1dn() {
  if (not NBGen2jesRelativePtEC1dn_isLoaded) {
    if (NBGen2jesRelativePtEC1dn_branch != 0) {
      NBGen2jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesRelativePtEC1dn_isLoaded = true;
  }
  return NBGen2jesRelativePtEC1dn_;
}

const int &VVV0Tree::NBGen3jesRelativePtEC1dn() {
  if (not NBGen3jesRelativePtEC1dn_isLoaded) {
    if (NBGen3jesRelativePtEC1dn_branch != 0) {
      NBGen3jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesRelativePtEC1dn_isLoaded = true;
  }
  return NBGen3jesRelativePtEC1dn_;
}

const int &VVV0Tree::NBGen4jesRelativePtEC1dn() {
  if (not NBGen4jesRelativePtEC1dn_isLoaded) {
    if (NBGen4jesRelativePtEC1dn_branch != 0) {
      NBGen4jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesRelativePtEC1dn_isLoaded = true;
  }
  return NBGen4jesRelativePtEC1dn_;
}

const int &VVV0Tree::NLGen0jesRelativePtEC1dn() {
  if (not NLGen0jesRelativePtEC1dn_isLoaded) {
    if (NLGen0jesRelativePtEC1dn_branch != 0) {
      NLGen0jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesRelativePtEC1dn_isLoaded = true;
  }
  return NLGen0jesRelativePtEC1dn_;
}

const int &VVV0Tree::NLGen1jesRelativePtEC1dn() {
  if (not NLGen1jesRelativePtEC1dn_isLoaded) {
    if (NLGen1jesRelativePtEC1dn_branch != 0) {
      NLGen1jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesRelativePtEC1dn_isLoaded = true;
  }
  return NLGen1jesRelativePtEC1dn_;
}

const int &VVV0Tree::NLGen2jesRelativePtEC1dn() {
  if (not NLGen2jesRelativePtEC1dn_isLoaded) {
    if (NLGen2jesRelativePtEC1dn_branch != 0) {
      NLGen2jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesRelativePtEC1dn_isLoaded = true;
  }
  return NLGen2jesRelativePtEC1dn_;
}

const int &VVV0Tree::NLGen3jesRelativePtEC1dn() {
  if (not NLGen3jesRelativePtEC1dn_isLoaded) {
    if (NLGen3jesRelativePtEC1dn_branch != 0) {
      NLGen3jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesRelativePtEC1dn_isLoaded = true;
  }
  return NLGen3jesRelativePtEC1dn_;
}

const int &VVV0Tree::NLGen4jesRelativePtEC1dn() {
  if (not NLGen4jesRelativePtEC1dn_isLoaded) {
    if (NLGen4jesRelativePtEC1dn_branch != 0) {
      NLGen4jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesRelativePtEC1dn_isLoaded = true;
  }
  return NLGen4jesRelativePtEC1dn_;
}

const int &VVV0Tree::NVQGen0jesRelativePtEC1dn() {
  if (not NVQGen0jesRelativePtEC1dn_isLoaded) {
    if (NVQGen0jesRelativePtEC1dn_branch != 0) {
      NVQGen0jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesRelativePtEC1dn_isLoaded = true;
  }
  return NVQGen0jesRelativePtEC1dn_;
}

const int &VVV0Tree::NVQGen1jesRelativePtEC1dn() {
  if (not NVQGen1jesRelativePtEC1dn_isLoaded) {
    if (NVQGen1jesRelativePtEC1dn_branch != 0) {
      NVQGen1jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesRelativePtEC1dn_isLoaded = true;
  }
  return NVQGen1jesRelativePtEC1dn_;
}

const int &VVV0Tree::NVQGen2jesRelativePtEC1dn() {
  if (not NVQGen2jesRelativePtEC1dn_isLoaded) {
    if (NVQGen2jesRelativePtEC1dn_branch != 0) {
      NVQGen2jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesRelativePtEC1dn_isLoaded = true;
  }
  return NVQGen2jesRelativePtEC1dn_;
}

const int &VVV0Tree::NVQGen3jesRelativePtEC1dn() {
  if (not NVQGen3jesRelativePtEC1dn_isLoaded) {
    if (NVQGen3jesRelativePtEC1dn_branch != 0) {
      NVQGen3jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesRelativePtEC1dn_isLoaded = true;
  }
  return NVQGen3jesRelativePtEC1dn_;
}

const int &VVV0Tree::NVQGen4jesRelativePtEC1dn() {
  if (not NVQGen4jesRelativePtEC1dn_isLoaded) {
    if (NVQGen4jesRelativePtEC1dn_branch != 0) {
      NVQGen4jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesRelativePtEC1dn_isLoaded = true;
  }
  return NVQGen4jesRelativePtEC1dn_;
}

const int &VVV0Tree::NiFJjesRelativePtEC1dn() {
  if (not NiFJjesRelativePtEC1dn_isLoaded) {
    if (NiFJjesRelativePtEC1dn_branch != 0) {
      NiFJjesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NiFJjesRelativePtEC1dn_isLoaded = true;
  }
  return NiFJjesRelativePtEC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesRelativePtEC1dn() {
  if (not iFJ0jesRelativePtEC1dn_isLoaded) {
    if (iFJ0jesRelativePtEC1dn_branch != 0) {
      iFJ0jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesRelativePtEC1dn_isLoaded = true;
  }
  return *iFJ0jesRelativePtEC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesRelativePtEC1dn() {
  if (not iFJ1jesRelativePtEC1dn_isLoaded) {
    if (iFJ1jesRelativePtEC1dn_branch != 0) {
      iFJ1jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesRelativePtEC1dn_isLoaded = true;
  }
  return *iFJ1jesRelativePtEC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesRelativePtEC1dn() {
  if (not iFJ2jesRelativePtEC1dn_isLoaded) {
    if (iFJ2jesRelativePtEC1dn_branch != 0) {
      iFJ2jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesRelativePtEC1dn_isLoaded = true;
  }
  return *iFJ2jesRelativePtEC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesRelativePtEC1dn() {
  if (not iFJ3jesRelativePtEC1dn_isLoaded) {
    if (iFJ3jesRelativePtEC1dn_branch != 0) {
      iFJ3jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesRelativePtEC1dn_isLoaded = true;
  }
  return *iFJ3jesRelativePtEC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesRelativePtEC1dn() {
  if (not iFJ4jesRelativePtEC1dn_isLoaded) {
    if (iFJ4jesRelativePtEC1dn_branch != 0) {
      iFJ4jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesRelativePtEC1dn_isLoaded = true;
  }
  return *iFJ4jesRelativePtEC1dn_;
}

const float &VVV0Tree::iVMD0jesRelativePtEC1dn() {
  if (not iVMD0jesRelativePtEC1dn_isLoaded) {
    if (iVMD0jesRelativePtEC1dn_branch != 0) {
      iVMD0jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesRelativePtEC1dn_isLoaded = true;
  }
  return iVMD0jesRelativePtEC1dn_;
}

const float &VVV0Tree::iVMD1jesRelativePtEC1dn() {
  if (not iVMD1jesRelativePtEC1dn_isLoaded) {
    if (iVMD1jesRelativePtEC1dn_branch != 0) {
      iVMD1jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesRelativePtEC1dn_isLoaded = true;
  }
  return iVMD1jesRelativePtEC1dn_;
}

const float &VVV0Tree::iVMD2jesRelativePtEC1dn() {
  if (not iVMD2jesRelativePtEC1dn_isLoaded) {
    if (iVMD2jesRelativePtEC1dn_branch != 0) {
      iVMD2jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesRelativePtEC1dn_isLoaded = true;
  }
  return iVMD2jesRelativePtEC1dn_;
}

const float &VVV0Tree::iVMD3jesRelativePtEC1dn() {
  if (not iVMD3jesRelativePtEC1dn_isLoaded) {
    if (iVMD3jesRelativePtEC1dn_branch != 0) {
      iVMD3jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesRelativePtEC1dn_isLoaded = true;
  }
  return iVMD3jesRelativePtEC1dn_;
}

const float &VVV0Tree::iVMD4jesRelativePtEC1dn() {
  if (not iVMD4jesRelativePtEC1dn_isLoaded) {
    if (iVMD4jesRelativePtEC1dn_branch != 0) {
      iVMD4jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesRelativePtEC1dn_isLoaded = true;
  }
  return iVMD4jesRelativePtEC1dn_;
}

const float &VVV0Tree::iWMD0jesRelativePtEC1dn() {
  if (not iWMD0jesRelativePtEC1dn_isLoaded) {
    if (iWMD0jesRelativePtEC1dn_branch != 0) {
      iWMD0jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesRelativePtEC1dn_isLoaded = true;
  }
  return iWMD0jesRelativePtEC1dn_;
}

const float &VVV0Tree::iWMD1jesRelativePtEC1dn() {
  if (not iWMD1jesRelativePtEC1dn_isLoaded) {
    if (iWMD1jesRelativePtEC1dn_branch != 0) {
      iWMD1jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesRelativePtEC1dn_isLoaded = true;
  }
  return iWMD1jesRelativePtEC1dn_;
}

const float &VVV0Tree::iWMD2jesRelativePtEC1dn() {
  if (not iWMD2jesRelativePtEC1dn_isLoaded) {
    if (iWMD2jesRelativePtEC1dn_branch != 0) {
      iWMD2jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesRelativePtEC1dn_isLoaded = true;
  }
  return iWMD2jesRelativePtEC1dn_;
}

const float &VVV0Tree::iWMD3jesRelativePtEC1dn() {
  if (not iWMD3jesRelativePtEC1dn_isLoaded) {
    if (iWMD3jesRelativePtEC1dn_branch != 0) {
      iWMD3jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesRelativePtEC1dn_isLoaded = true;
  }
  return iWMD3jesRelativePtEC1dn_;
}

const float &VVV0Tree::iWMD4jesRelativePtEC1dn() {
  if (not iWMD4jesRelativePtEC1dn_isLoaded) {
    if (iWMD4jesRelativePtEC1dn_branch != 0) {
      iWMD4jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesRelativePtEC1dn_isLoaded = true;
  }
  return iWMD4jesRelativePtEC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesRelativePtEC1dn() {
  if (not METjesRelativePtEC1dn_isLoaded) {
    if (METjesRelativePtEC1dn_branch != 0) {
      METjesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch METjesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    METjesRelativePtEC1dn_isLoaded = true;
  }
  return *METjesRelativePtEC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesRelativePtEC1dn() {
  if (not NujesRelativePtEC1dn_isLoaded) {
    if (NujesRelativePtEC1dn_branch != 0) {
      NujesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NujesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NujesRelativePtEC1dn_isLoaded = true;
  }
  return *NujesRelativePtEC1dn_;
}

const int &VVV0Tree::NJjesRelativePtEC1dn() {
  if (not NJjesRelativePtEC1dn_isLoaded) {
    if (NJjesRelativePtEC1dn_branch != 0) {
      NJjesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NJjesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NJjesRelativePtEC1dn_isLoaded = true;
  }
  return NJjesRelativePtEC1dn_;
}

const int &VVV0Tree::NbLoosejesRelativePtEC1dn() {
  if (not NbLoosejesRelativePtEC1dn_isLoaded) {
    if (NbLoosejesRelativePtEC1dn_branch != 0) {
      NbLoosejesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesRelativePtEC1dn_isLoaded = true;
  }
  return NbLoosejesRelativePtEC1dn_;
}

const int &VVV0Tree::NbMediumjesRelativePtEC1dn() {
  if (not NbMediumjesRelativePtEC1dn_isLoaded) {
    if (NbMediumjesRelativePtEC1dn_branch != 0) {
      NbMediumjesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesRelativePtEC1dn_isLoaded = true;
  }
  return NbMediumjesRelativePtEC1dn_;
}

const int &VVV0Tree::NbTightjesRelativePtEC1dn() {
  if (not NbTightjesRelativePtEC1dn_isLoaded) {
    if (NbTightjesRelativePtEC1dn_branch != 0) {
      NbTightjesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NbTightjesRelativePtEC1dn_isLoaded = true;
  }
  return NbTightjesRelativePtEC1dn_;
}

const int &VVV0Tree::NoORNbLoosejesRelativePtEC1dn() {
  if (not NoORNbLoosejesRelativePtEC1dn_isLoaded) {
    if (NoORNbLoosejesRelativePtEC1dn_branch != 0) {
      NoORNbLoosejesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesRelativePtEC1dn_isLoaded = true;
  }
  return NoORNbLoosejesRelativePtEC1dn_;
}

const int &VVV0Tree::NoORNbMediumjesRelativePtEC1dn() {
  if (not NoORNbMediumjesRelativePtEC1dn_isLoaded) {
    if (NoORNbMediumjesRelativePtEC1dn_branch != 0) {
      NoORNbMediumjesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesRelativePtEC1dn_isLoaded = true;
  }
  return NoORNbMediumjesRelativePtEC1dn_;
}

const int &VVV0Tree::NoORNbTightjesRelativePtEC1dn() {
  if (not NoORNbTightjesRelativePtEC1dn_isLoaded) {
    if (NoORNbTightjesRelativePtEC1dn_branch != 0) {
      NoORNbTightjesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesRelativePtEC1dn_isLoaded = true;
  }
  return NoORNbTightjesRelativePtEC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesRelativePtEC1dn() {
  if (not J0jesRelativePtEC1dn_isLoaded) {
    if (J0jesRelativePtEC1dn_branch != 0) {
      J0jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch J0jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    J0jesRelativePtEC1dn_isLoaded = true;
  }
  return *J0jesRelativePtEC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesRelativePtEC1dn() {
  if (not J1jesRelativePtEC1dn_isLoaded) {
    if (J1jesRelativePtEC1dn_branch != 0) {
      J1jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch J1jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    J1jesRelativePtEC1dn_isLoaded = true;
  }
  return *J1jesRelativePtEC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesRelativePtEC1dn() {
  if (not J2jesRelativePtEC1dn_isLoaded) {
    if (J2jesRelativePtEC1dn_branch != 0) {
      J2jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch J2jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    J2jesRelativePtEC1dn_isLoaded = true;
  }
  return *J2jesRelativePtEC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesRelativePtEC1dn() {
  if (not J3jesRelativePtEC1dn_isLoaded) {
    if (J3jesRelativePtEC1dn_branch != 0) {
      J3jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch J3jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    J3jesRelativePtEC1dn_isLoaded = true;
  }
  return *J3jesRelativePtEC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesRelativePtEC1dn() {
  if (not J4jesRelativePtEC1dn_isLoaded) {
    if (J4jesRelativePtEC1dn_branch != 0) {
      J4jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch J4jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    J4jesRelativePtEC1dn_isLoaded = true;
  }
  return *J4jesRelativePtEC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesRelativePtEC1dn() {
  if (not J5jesRelativePtEC1dn_isLoaded) {
    if (J5jesRelativePtEC1dn_branch != 0) {
      J5jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch J5jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    J5jesRelativePtEC1dn_isLoaded = true;
  }
  return *J5jesRelativePtEC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesRelativePtEC1dn() {
  if (not J6jesRelativePtEC1dn_isLoaded) {
    if (J6jesRelativePtEC1dn_branch != 0) {
      J6jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch J6jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    J6jesRelativePtEC1dn_isLoaded = true;
  }
  return *J6jesRelativePtEC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesRelativePtEC1dn() {
  if (not J7jesRelativePtEC1dn_isLoaded) {
    if (J7jesRelativePtEC1dn_branch != 0) {
      J7jesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch J7jesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    J7jesRelativePtEC1dn_isLoaded = true;
  }
  return *J7jesRelativePtEC1dn_;
}

const vector<int> &VVV0Tree::NQJGenjesRelativePtEC1dn() {
  if (not NQJGenjesRelativePtEC1dn_isLoaded) {
    if (NQJGenjesRelativePtEC1dn_branch != 0) {
      NQJGenjesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesRelativePtEC1dn_isLoaded = true;
  }
  return *NQJGenjesRelativePtEC1dn_;
}

const vector<int> &VVV0Tree::NBJGenjesRelativePtEC1dn() {
  if (not NBJGenjesRelativePtEC1dn_isLoaded) {
    if (NBJGenjesRelativePtEC1dn_branch != 0) {
      NBJGenjesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesRelativePtEC1dn_isLoaded = true;
  }
  return *NBJGenjesRelativePtEC1dn_;
}

const vector<int> &VVV0Tree::NLJGenjesRelativePtEC1dn() {
  if (not NLJGenjesRelativePtEC1dn_isLoaded) {
    if (NLJGenjesRelativePtEC1dn_branch != 0) {
      NLJGenjesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesRelativePtEC1dn_isLoaded = true;
  }
  return *NLJGenjesRelativePtEC1dn_;
}

const float &VVV0Tree::MVVXjesRelativePtEC1dn() {
  if (not MVVXjesRelativePtEC1dn_isLoaded) {
    if (MVVXjesRelativePtEC1dn_branch != 0) {
      MVVXjesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    MVVXjesRelativePtEC1dn_isLoaded = true;
  }
  return MVVXjesRelativePtEC1dn_;
}

const float &VVV0Tree::PtVVXjesRelativePtEC1dn() {
  if (not PtVVXjesRelativePtEC1dn_isLoaded) {
    if (PtVVXjesRelativePtEC1dn_branch != 0) {
      PtVVXjesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesRelativePtEC1dn_isLoaded = true;
  }
  return PtVVXjesRelativePtEC1dn_;
}

const float &VVV0Tree::HTjesRelativePtEC1dn() {
  if (not HTjesRelativePtEC1dn_isLoaded) {
    if (HTjesRelativePtEC1dn_branch != 0) {
      HTjesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch HTjesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    HTjesRelativePtEC1dn_isLoaded = true;
  }
  return HTjesRelativePtEC1dn_;
}

const float &VVV0Tree::HTJjesRelativePtEC1dn() {
  if (not HTJjesRelativePtEC1dn_isLoaded) {
    if (HTJjesRelativePtEC1dn_branch != 0) {
      HTJjesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch HTJjesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    HTJjesRelativePtEC1dn_isLoaded = true;
  }
  return HTJjesRelativePtEC1dn_;
}

const float &VVV0Tree::HTFJjesRelativePtEC1dn() {
  if (not HTFJjesRelativePtEC1dn_isLoaded) {
    if (HTFJjesRelativePtEC1dn_branch != 0) {
      HTFJjesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    HTFJjesRelativePtEC1dn_isLoaded = true;
  }
  return HTFJjesRelativePtEC1dn_;
}

const float &VVV0Tree::SumPtFJjesRelativePtEC1dn() {
  if (not SumPtFJjesRelativePtEC1dn_isLoaded) {
    if (SumPtFJjesRelativePtEC1dn_branch != 0) {
      SumPtFJjesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesRelativePtEC1dn_isLoaded = true;
  }
  return SumPtFJjesRelativePtEC1dn_;
}

const float &VVV0Tree::SumPtJjesRelativePtEC1dn() {
  if (not SumPtJjesRelativePtEC1dn_isLoaded) {
    if (SumPtJjesRelativePtEC1dn_branch != 0) {
      SumPtJjesRelativePtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesRelativePtEC1dn_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesRelativePtEC1dn_isLoaded = true;
  }
  return SumPtJjesRelativePtEC1dn_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesRelativePtEC2up() {
  if (not JsjesRelativePtEC2up_isLoaded) {
    if (JsjesRelativePtEC2up_branch != 0) {
      JsjesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch JsjesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    JsjesRelativePtEC2up_isLoaded = true;
  }
  return *JsjesRelativePtEC2up_;
}

const int &VVV0Tree::NFJjesRelativePtEC2up() {
  if (not NFJjesRelativePtEC2up_isLoaded) {
    if (NFJjesRelativePtEC2up_branch != 0) {
      NFJjesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NFJjesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    NFJjesRelativePtEC2up_isLoaded = true;
  }
  return NFJjesRelativePtEC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesRelativePtEC2up() {
  if (not FJ0jesRelativePtEC2up_isLoaded) {
    if (FJ0jesRelativePtEC2up_branch != 0) {
      FJ0jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    FJ0jesRelativePtEC2up_isLoaded = true;
  }
  return *FJ0jesRelativePtEC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesRelativePtEC2up() {
  if (not FJ1jesRelativePtEC2up_isLoaded) {
    if (FJ1jesRelativePtEC2up_branch != 0) {
      FJ1jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    FJ1jesRelativePtEC2up_isLoaded = true;
  }
  return *FJ1jesRelativePtEC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesRelativePtEC2up() {
  if (not FJ2jesRelativePtEC2up_isLoaded) {
    if (FJ2jesRelativePtEC2up_branch != 0) {
      FJ2jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    FJ2jesRelativePtEC2up_isLoaded = true;
  }
  return *FJ2jesRelativePtEC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesRelativePtEC2up() {
  if (not FJ3jesRelativePtEC2up_isLoaded) {
    if (FJ3jesRelativePtEC2up_branch != 0) {
      FJ3jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    FJ3jesRelativePtEC2up_isLoaded = true;
  }
  return *FJ3jesRelativePtEC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesRelativePtEC2up() {
  if (not FJ4jesRelativePtEC2up_isLoaded) {
    if (FJ4jesRelativePtEC2up_branch != 0) {
      FJ4jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    FJ4jesRelativePtEC2up_isLoaded = true;
  }
  return *FJ4jesRelativePtEC2up_;
}

const float &VVV0Tree::VMD0jesRelativePtEC2up() {
  if (not VMD0jesRelativePtEC2up_isLoaded) {
    if (VMD0jesRelativePtEC2up_branch != 0) {
      VMD0jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    VMD0jesRelativePtEC2up_isLoaded = true;
  }
  return VMD0jesRelativePtEC2up_;
}

const float &VVV0Tree::VMD1jesRelativePtEC2up() {
  if (not VMD1jesRelativePtEC2up_isLoaded) {
    if (VMD1jesRelativePtEC2up_branch != 0) {
      VMD1jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    VMD1jesRelativePtEC2up_isLoaded = true;
  }
  return VMD1jesRelativePtEC2up_;
}

const float &VVV0Tree::VMD2jesRelativePtEC2up() {
  if (not VMD2jesRelativePtEC2up_isLoaded) {
    if (VMD2jesRelativePtEC2up_branch != 0) {
      VMD2jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    VMD2jesRelativePtEC2up_isLoaded = true;
  }
  return VMD2jesRelativePtEC2up_;
}

const float &VVV0Tree::VMD3jesRelativePtEC2up() {
  if (not VMD3jesRelativePtEC2up_isLoaded) {
    if (VMD3jesRelativePtEC2up_branch != 0) {
      VMD3jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    VMD3jesRelativePtEC2up_isLoaded = true;
  }
  return VMD3jesRelativePtEC2up_;
}

const float &VVV0Tree::VMD4jesRelativePtEC2up() {
  if (not VMD4jesRelativePtEC2up_isLoaded) {
    if (VMD4jesRelativePtEC2up_branch != 0) {
      VMD4jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    VMD4jesRelativePtEC2up_isLoaded = true;
  }
  return VMD4jesRelativePtEC2up_;
}

const float &VVV0Tree::WMD0jesRelativePtEC2up() {
  if (not WMD0jesRelativePtEC2up_isLoaded) {
    if (WMD0jesRelativePtEC2up_branch != 0) {
      WMD0jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    WMD0jesRelativePtEC2up_isLoaded = true;
  }
  return WMD0jesRelativePtEC2up_;
}

const float &VVV0Tree::WMD1jesRelativePtEC2up() {
  if (not WMD1jesRelativePtEC2up_isLoaded) {
    if (WMD1jesRelativePtEC2up_branch != 0) {
      WMD1jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    WMD1jesRelativePtEC2up_isLoaded = true;
  }
  return WMD1jesRelativePtEC2up_;
}

const float &VVV0Tree::WMD2jesRelativePtEC2up() {
  if (not WMD2jesRelativePtEC2up_isLoaded) {
    if (WMD2jesRelativePtEC2up_branch != 0) {
      WMD2jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    WMD2jesRelativePtEC2up_isLoaded = true;
  }
  return WMD2jesRelativePtEC2up_;
}

const float &VVV0Tree::WMD3jesRelativePtEC2up() {
  if (not WMD3jesRelativePtEC2up_isLoaded) {
    if (WMD3jesRelativePtEC2up_branch != 0) {
      WMD3jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    WMD3jesRelativePtEC2up_isLoaded = true;
  }
  return WMD3jesRelativePtEC2up_;
}

const float &VVV0Tree::WMD4jesRelativePtEC2up() {
  if (not WMD4jesRelativePtEC2up_isLoaded) {
    if (WMD4jesRelativePtEC2up_branch != 0) {
      WMD4jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    WMD4jesRelativePtEC2up_isLoaded = true;
  }
  return WMD4jesRelativePtEC2up_;
}

const int &VVV0Tree::NQGen0jesRelativePtEC2up() {
  if (not NQGen0jesRelativePtEC2up_isLoaded) {
    if (NQGen0jesRelativePtEC2up_branch != 0) {
      NQGen0jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesRelativePtEC2up_isLoaded = true;
  }
  return NQGen0jesRelativePtEC2up_;
}

const int &VVV0Tree::NQGen1jesRelativePtEC2up() {
  if (not NQGen1jesRelativePtEC2up_isLoaded) {
    if (NQGen1jesRelativePtEC2up_branch != 0) {
      NQGen1jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesRelativePtEC2up_isLoaded = true;
  }
  return NQGen1jesRelativePtEC2up_;
}

const int &VVV0Tree::NQGen2jesRelativePtEC2up() {
  if (not NQGen2jesRelativePtEC2up_isLoaded) {
    if (NQGen2jesRelativePtEC2up_branch != 0) {
      NQGen2jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesRelativePtEC2up_isLoaded = true;
  }
  return NQGen2jesRelativePtEC2up_;
}

const int &VVV0Tree::NQGen3jesRelativePtEC2up() {
  if (not NQGen3jesRelativePtEC2up_isLoaded) {
    if (NQGen3jesRelativePtEC2up_branch != 0) {
      NQGen3jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesRelativePtEC2up_isLoaded = true;
  }
  return NQGen3jesRelativePtEC2up_;
}

const int &VVV0Tree::NQGen4jesRelativePtEC2up() {
  if (not NQGen4jesRelativePtEC2up_isLoaded) {
    if (NQGen4jesRelativePtEC2up_branch != 0) {
      NQGen4jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesRelativePtEC2up_isLoaded = true;
  }
  return NQGen4jesRelativePtEC2up_;
}

const int &VVV0Tree::NBGen0jesRelativePtEC2up() {
  if (not NBGen0jesRelativePtEC2up_isLoaded) {
    if (NBGen0jesRelativePtEC2up_branch != 0) {
      NBGen0jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesRelativePtEC2up_isLoaded = true;
  }
  return NBGen0jesRelativePtEC2up_;
}

const int &VVV0Tree::NBGen1jesRelativePtEC2up() {
  if (not NBGen1jesRelativePtEC2up_isLoaded) {
    if (NBGen1jesRelativePtEC2up_branch != 0) {
      NBGen1jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesRelativePtEC2up_isLoaded = true;
  }
  return NBGen1jesRelativePtEC2up_;
}

const int &VVV0Tree::NBGen2jesRelativePtEC2up() {
  if (not NBGen2jesRelativePtEC2up_isLoaded) {
    if (NBGen2jesRelativePtEC2up_branch != 0) {
      NBGen2jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesRelativePtEC2up_isLoaded = true;
  }
  return NBGen2jesRelativePtEC2up_;
}

const int &VVV0Tree::NBGen3jesRelativePtEC2up() {
  if (not NBGen3jesRelativePtEC2up_isLoaded) {
    if (NBGen3jesRelativePtEC2up_branch != 0) {
      NBGen3jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesRelativePtEC2up_isLoaded = true;
  }
  return NBGen3jesRelativePtEC2up_;
}

const int &VVV0Tree::NBGen4jesRelativePtEC2up() {
  if (not NBGen4jesRelativePtEC2up_isLoaded) {
    if (NBGen4jesRelativePtEC2up_branch != 0) {
      NBGen4jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesRelativePtEC2up_isLoaded = true;
  }
  return NBGen4jesRelativePtEC2up_;
}

const int &VVV0Tree::NLGen0jesRelativePtEC2up() {
  if (not NLGen0jesRelativePtEC2up_isLoaded) {
    if (NLGen0jesRelativePtEC2up_branch != 0) {
      NLGen0jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesRelativePtEC2up_isLoaded = true;
  }
  return NLGen0jesRelativePtEC2up_;
}

const int &VVV0Tree::NLGen1jesRelativePtEC2up() {
  if (not NLGen1jesRelativePtEC2up_isLoaded) {
    if (NLGen1jesRelativePtEC2up_branch != 0) {
      NLGen1jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesRelativePtEC2up_isLoaded = true;
  }
  return NLGen1jesRelativePtEC2up_;
}

const int &VVV0Tree::NLGen2jesRelativePtEC2up() {
  if (not NLGen2jesRelativePtEC2up_isLoaded) {
    if (NLGen2jesRelativePtEC2up_branch != 0) {
      NLGen2jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesRelativePtEC2up_isLoaded = true;
  }
  return NLGen2jesRelativePtEC2up_;
}

const int &VVV0Tree::NLGen3jesRelativePtEC2up() {
  if (not NLGen3jesRelativePtEC2up_isLoaded) {
    if (NLGen3jesRelativePtEC2up_branch != 0) {
      NLGen3jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesRelativePtEC2up_isLoaded = true;
  }
  return NLGen3jesRelativePtEC2up_;
}

const int &VVV0Tree::NLGen4jesRelativePtEC2up() {
  if (not NLGen4jesRelativePtEC2up_isLoaded) {
    if (NLGen4jesRelativePtEC2up_branch != 0) {
      NLGen4jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesRelativePtEC2up_isLoaded = true;
  }
  return NLGen4jesRelativePtEC2up_;
}

const int &VVV0Tree::NVQGen0jesRelativePtEC2up() {
  if (not NVQGen0jesRelativePtEC2up_isLoaded) {
    if (NVQGen0jesRelativePtEC2up_branch != 0) {
      NVQGen0jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesRelativePtEC2up_isLoaded = true;
  }
  return NVQGen0jesRelativePtEC2up_;
}

const int &VVV0Tree::NVQGen1jesRelativePtEC2up() {
  if (not NVQGen1jesRelativePtEC2up_isLoaded) {
    if (NVQGen1jesRelativePtEC2up_branch != 0) {
      NVQGen1jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesRelativePtEC2up_isLoaded = true;
  }
  return NVQGen1jesRelativePtEC2up_;
}

const int &VVV0Tree::NVQGen2jesRelativePtEC2up() {
  if (not NVQGen2jesRelativePtEC2up_isLoaded) {
    if (NVQGen2jesRelativePtEC2up_branch != 0) {
      NVQGen2jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesRelativePtEC2up_isLoaded = true;
  }
  return NVQGen2jesRelativePtEC2up_;
}

const int &VVV0Tree::NVQGen3jesRelativePtEC2up() {
  if (not NVQGen3jesRelativePtEC2up_isLoaded) {
    if (NVQGen3jesRelativePtEC2up_branch != 0) {
      NVQGen3jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesRelativePtEC2up_isLoaded = true;
  }
  return NVQGen3jesRelativePtEC2up_;
}

const int &VVV0Tree::NVQGen4jesRelativePtEC2up() {
  if (not NVQGen4jesRelativePtEC2up_isLoaded) {
    if (NVQGen4jesRelativePtEC2up_branch != 0) {
      NVQGen4jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesRelativePtEC2up_isLoaded = true;
  }
  return NVQGen4jesRelativePtEC2up_;
}

const int &VVV0Tree::NiFJjesRelativePtEC2up() {
  if (not NiFJjesRelativePtEC2up_isLoaded) {
    if (NiFJjesRelativePtEC2up_branch != 0) {
      NiFJjesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    NiFJjesRelativePtEC2up_isLoaded = true;
  }
  return NiFJjesRelativePtEC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesRelativePtEC2up() {
  if (not iFJ0jesRelativePtEC2up_isLoaded) {
    if (iFJ0jesRelativePtEC2up_branch != 0) {
      iFJ0jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesRelativePtEC2up_isLoaded = true;
  }
  return *iFJ0jesRelativePtEC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesRelativePtEC2up() {
  if (not iFJ1jesRelativePtEC2up_isLoaded) {
    if (iFJ1jesRelativePtEC2up_branch != 0) {
      iFJ1jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesRelativePtEC2up_isLoaded = true;
  }
  return *iFJ1jesRelativePtEC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesRelativePtEC2up() {
  if (not iFJ2jesRelativePtEC2up_isLoaded) {
    if (iFJ2jesRelativePtEC2up_branch != 0) {
      iFJ2jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesRelativePtEC2up_isLoaded = true;
  }
  return *iFJ2jesRelativePtEC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesRelativePtEC2up() {
  if (not iFJ3jesRelativePtEC2up_isLoaded) {
    if (iFJ3jesRelativePtEC2up_branch != 0) {
      iFJ3jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesRelativePtEC2up_isLoaded = true;
  }
  return *iFJ3jesRelativePtEC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesRelativePtEC2up() {
  if (not iFJ4jesRelativePtEC2up_isLoaded) {
    if (iFJ4jesRelativePtEC2up_branch != 0) {
      iFJ4jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesRelativePtEC2up_isLoaded = true;
  }
  return *iFJ4jesRelativePtEC2up_;
}

const float &VVV0Tree::iVMD0jesRelativePtEC2up() {
  if (not iVMD0jesRelativePtEC2up_isLoaded) {
    if (iVMD0jesRelativePtEC2up_branch != 0) {
      iVMD0jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesRelativePtEC2up_isLoaded = true;
  }
  return iVMD0jesRelativePtEC2up_;
}

const float &VVV0Tree::iVMD1jesRelativePtEC2up() {
  if (not iVMD1jesRelativePtEC2up_isLoaded) {
    if (iVMD1jesRelativePtEC2up_branch != 0) {
      iVMD1jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesRelativePtEC2up_isLoaded = true;
  }
  return iVMD1jesRelativePtEC2up_;
}

const float &VVV0Tree::iVMD2jesRelativePtEC2up() {
  if (not iVMD2jesRelativePtEC2up_isLoaded) {
    if (iVMD2jesRelativePtEC2up_branch != 0) {
      iVMD2jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesRelativePtEC2up_isLoaded = true;
  }
  return iVMD2jesRelativePtEC2up_;
}

const float &VVV0Tree::iVMD3jesRelativePtEC2up() {
  if (not iVMD3jesRelativePtEC2up_isLoaded) {
    if (iVMD3jesRelativePtEC2up_branch != 0) {
      iVMD3jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesRelativePtEC2up_isLoaded = true;
  }
  return iVMD3jesRelativePtEC2up_;
}

const float &VVV0Tree::iVMD4jesRelativePtEC2up() {
  if (not iVMD4jesRelativePtEC2up_isLoaded) {
    if (iVMD4jesRelativePtEC2up_branch != 0) {
      iVMD4jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesRelativePtEC2up_isLoaded = true;
  }
  return iVMD4jesRelativePtEC2up_;
}

const float &VVV0Tree::iWMD0jesRelativePtEC2up() {
  if (not iWMD0jesRelativePtEC2up_isLoaded) {
    if (iWMD0jesRelativePtEC2up_branch != 0) {
      iWMD0jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesRelativePtEC2up_isLoaded = true;
  }
  return iWMD0jesRelativePtEC2up_;
}

const float &VVV0Tree::iWMD1jesRelativePtEC2up() {
  if (not iWMD1jesRelativePtEC2up_isLoaded) {
    if (iWMD1jesRelativePtEC2up_branch != 0) {
      iWMD1jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesRelativePtEC2up_isLoaded = true;
  }
  return iWMD1jesRelativePtEC2up_;
}

const float &VVV0Tree::iWMD2jesRelativePtEC2up() {
  if (not iWMD2jesRelativePtEC2up_isLoaded) {
    if (iWMD2jesRelativePtEC2up_branch != 0) {
      iWMD2jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesRelativePtEC2up_isLoaded = true;
  }
  return iWMD2jesRelativePtEC2up_;
}

const float &VVV0Tree::iWMD3jesRelativePtEC2up() {
  if (not iWMD3jesRelativePtEC2up_isLoaded) {
    if (iWMD3jesRelativePtEC2up_branch != 0) {
      iWMD3jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesRelativePtEC2up_isLoaded = true;
  }
  return iWMD3jesRelativePtEC2up_;
}

const float &VVV0Tree::iWMD4jesRelativePtEC2up() {
  if (not iWMD4jesRelativePtEC2up_isLoaded) {
    if (iWMD4jesRelativePtEC2up_branch != 0) {
      iWMD4jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesRelativePtEC2up_isLoaded = true;
  }
  return iWMD4jesRelativePtEC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesRelativePtEC2up() {
  if (not METjesRelativePtEC2up_isLoaded) {
    if (METjesRelativePtEC2up_branch != 0) {
      METjesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch METjesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    METjesRelativePtEC2up_isLoaded = true;
  }
  return *METjesRelativePtEC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesRelativePtEC2up() {
  if (not NujesRelativePtEC2up_isLoaded) {
    if (NujesRelativePtEC2up_branch != 0) {
      NujesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NujesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    NujesRelativePtEC2up_isLoaded = true;
  }
  return *NujesRelativePtEC2up_;
}

const int &VVV0Tree::NJjesRelativePtEC2up() {
  if (not NJjesRelativePtEC2up_isLoaded) {
    if (NJjesRelativePtEC2up_branch != 0) {
      NJjesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NJjesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    NJjesRelativePtEC2up_isLoaded = true;
  }
  return NJjesRelativePtEC2up_;
}

const int &VVV0Tree::NbLoosejesRelativePtEC2up() {
  if (not NbLoosejesRelativePtEC2up_isLoaded) {
    if (NbLoosejesRelativePtEC2up_branch != 0) {
      NbLoosejesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesRelativePtEC2up_isLoaded = true;
  }
  return NbLoosejesRelativePtEC2up_;
}

const int &VVV0Tree::NbMediumjesRelativePtEC2up() {
  if (not NbMediumjesRelativePtEC2up_isLoaded) {
    if (NbMediumjesRelativePtEC2up_branch != 0) {
      NbMediumjesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesRelativePtEC2up_isLoaded = true;
  }
  return NbMediumjesRelativePtEC2up_;
}

const int &VVV0Tree::NbTightjesRelativePtEC2up() {
  if (not NbTightjesRelativePtEC2up_isLoaded) {
    if (NbTightjesRelativePtEC2up_branch != 0) {
      NbTightjesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    NbTightjesRelativePtEC2up_isLoaded = true;
  }
  return NbTightjesRelativePtEC2up_;
}

const int &VVV0Tree::NoORNbLoosejesRelativePtEC2up() {
  if (not NoORNbLoosejesRelativePtEC2up_isLoaded) {
    if (NoORNbLoosejesRelativePtEC2up_branch != 0) {
      NoORNbLoosejesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesRelativePtEC2up_isLoaded = true;
  }
  return NoORNbLoosejesRelativePtEC2up_;
}

const int &VVV0Tree::NoORNbMediumjesRelativePtEC2up() {
  if (not NoORNbMediumjesRelativePtEC2up_isLoaded) {
    if (NoORNbMediumjesRelativePtEC2up_branch != 0) {
      NoORNbMediumjesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesRelativePtEC2up_isLoaded = true;
  }
  return NoORNbMediumjesRelativePtEC2up_;
}

const int &VVV0Tree::NoORNbTightjesRelativePtEC2up() {
  if (not NoORNbTightjesRelativePtEC2up_isLoaded) {
    if (NoORNbTightjesRelativePtEC2up_branch != 0) {
      NoORNbTightjesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesRelativePtEC2up_isLoaded = true;
  }
  return NoORNbTightjesRelativePtEC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesRelativePtEC2up() {
  if (not J0jesRelativePtEC2up_isLoaded) {
    if (J0jesRelativePtEC2up_branch != 0) {
      J0jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch J0jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    J0jesRelativePtEC2up_isLoaded = true;
  }
  return *J0jesRelativePtEC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesRelativePtEC2up() {
  if (not J1jesRelativePtEC2up_isLoaded) {
    if (J1jesRelativePtEC2up_branch != 0) {
      J1jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch J1jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    J1jesRelativePtEC2up_isLoaded = true;
  }
  return *J1jesRelativePtEC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesRelativePtEC2up() {
  if (not J2jesRelativePtEC2up_isLoaded) {
    if (J2jesRelativePtEC2up_branch != 0) {
      J2jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch J2jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    J2jesRelativePtEC2up_isLoaded = true;
  }
  return *J2jesRelativePtEC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesRelativePtEC2up() {
  if (not J3jesRelativePtEC2up_isLoaded) {
    if (J3jesRelativePtEC2up_branch != 0) {
      J3jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch J3jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    J3jesRelativePtEC2up_isLoaded = true;
  }
  return *J3jesRelativePtEC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesRelativePtEC2up() {
  if (not J4jesRelativePtEC2up_isLoaded) {
    if (J4jesRelativePtEC2up_branch != 0) {
      J4jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch J4jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    J4jesRelativePtEC2up_isLoaded = true;
  }
  return *J4jesRelativePtEC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesRelativePtEC2up() {
  if (not J5jesRelativePtEC2up_isLoaded) {
    if (J5jesRelativePtEC2up_branch != 0) {
      J5jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch J5jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    J5jesRelativePtEC2up_isLoaded = true;
  }
  return *J5jesRelativePtEC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesRelativePtEC2up() {
  if (not J6jesRelativePtEC2up_isLoaded) {
    if (J6jesRelativePtEC2up_branch != 0) {
      J6jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch J6jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    J6jesRelativePtEC2up_isLoaded = true;
  }
  return *J6jesRelativePtEC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesRelativePtEC2up() {
  if (not J7jesRelativePtEC2up_isLoaded) {
    if (J7jesRelativePtEC2up_branch != 0) {
      J7jesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch J7jesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    J7jesRelativePtEC2up_isLoaded = true;
  }
  return *J7jesRelativePtEC2up_;
}

const vector<int> &VVV0Tree::NQJGenjesRelativePtEC2up() {
  if (not NQJGenjesRelativePtEC2up_isLoaded) {
    if (NQJGenjesRelativePtEC2up_branch != 0) {
      NQJGenjesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesRelativePtEC2up_isLoaded = true;
  }
  return *NQJGenjesRelativePtEC2up_;
}

const vector<int> &VVV0Tree::NBJGenjesRelativePtEC2up() {
  if (not NBJGenjesRelativePtEC2up_isLoaded) {
    if (NBJGenjesRelativePtEC2up_branch != 0) {
      NBJGenjesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesRelativePtEC2up_isLoaded = true;
  }
  return *NBJGenjesRelativePtEC2up_;
}

const vector<int> &VVV0Tree::NLJGenjesRelativePtEC2up() {
  if (not NLJGenjesRelativePtEC2up_isLoaded) {
    if (NLJGenjesRelativePtEC2up_branch != 0) {
      NLJGenjesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesRelativePtEC2up_isLoaded = true;
  }
  return *NLJGenjesRelativePtEC2up_;
}

const float &VVV0Tree::MVVXjesRelativePtEC2up() {
  if (not MVVXjesRelativePtEC2up_isLoaded) {
    if (MVVXjesRelativePtEC2up_branch != 0) {
      MVVXjesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    MVVXjesRelativePtEC2up_isLoaded = true;
  }
  return MVVXjesRelativePtEC2up_;
}

const float &VVV0Tree::PtVVXjesRelativePtEC2up() {
  if (not PtVVXjesRelativePtEC2up_isLoaded) {
    if (PtVVXjesRelativePtEC2up_branch != 0) {
      PtVVXjesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesRelativePtEC2up_isLoaded = true;
  }
  return PtVVXjesRelativePtEC2up_;
}

const float &VVV0Tree::HTjesRelativePtEC2up() {
  if (not HTjesRelativePtEC2up_isLoaded) {
    if (HTjesRelativePtEC2up_branch != 0) {
      HTjesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch HTjesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    HTjesRelativePtEC2up_isLoaded = true;
  }
  return HTjesRelativePtEC2up_;
}

const float &VVV0Tree::HTJjesRelativePtEC2up() {
  if (not HTJjesRelativePtEC2up_isLoaded) {
    if (HTJjesRelativePtEC2up_branch != 0) {
      HTJjesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch HTJjesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    HTJjesRelativePtEC2up_isLoaded = true;
  }
  return HTJjesRelativePtEC2up_;
}

const float &VVV0Tree::HTFJjesRelativePtEC2up() {
  if (not HTFJjesRelativePtEC2up_isLoaded) {
    if (HTFJjesRelativePtEC2up_branch != 0) {
      HTFJjesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    HTFJjesRelativePtEC2up_isLoaded = true;
  }
  return HTFJjesRelativePtEC2up_;
}

const float &VVV0Tree::SumPtFJjesRelativePtEC2up() {
  if (not SumPtFJjesRelativePtEC2up_isLoaded) {
    if (SumPtFJjesRelativePtEC2up_branch != 0) {
      SumPtFJjesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesRelativePtEC2up_isLoaded = true;
  }
  return SumPtFJjesRelativePtEC2up_;
}

const float &VVV0Tree::SumPtJjesRelativePtEC2up() {
  if (not SumPtJjesRelativePtEC2up_isLoaded) {
    if (SumPtJjesRelativePtEC2up_branch != 0) {
      SumPtJjesRelativePtEC2up_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesRelativePtEC2up_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesRelativePtEC2up_isLoaded = true;
  }
  return SumPtJjesRelativePtEC2up_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesRelativePtEC2dn() {
  if (not JsjesRelativePtEC2dn_isLoaded) {
    if (JsjesRelativePtEC2dn_branch != 0) {
      JsjesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch JsjesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    JsjesRelativePtEC2dn_isLoaded = true;
  }
  return *JsjesRelativePtEC2dn_;
}

const int &VVV0Tree::NFJjesRelativePtEC2dn() {
  if (not NFJjesRelativePtEC2dn_isLoaded) {
    if (NFJjesRelativePtEC2dn_branch != 0) {
      NFJjesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NFJjesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NFJjesRelativePtEC2dn_isLoaded = true;
  }
  return NFJjesRelativePtEC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesRelativePtEC2dn() {
  if (not FJ0jesRelativePtEC2dn_isLoaded) {
    if (FJ0jesRelativePtEC2dn_branch != 0) {
      FJ0jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    FJ0jesRelativePtEC2dn_isLoaded = true;
  }
  return *FJ0jesRelativePtEC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesRelativePtEC2dn() {
  if (not FJ1jesRelativePtEC2dn_isLoaded) {
    if (FJ1jesRelativePtEC2dn_branch != 0) {
      FJ1jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    FJ1jesRelativePtEC2dn_isLoaded = true;
  }
  return *FJ1jesRelativePtEC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesRelativePtEC2dn() {
  if (not FJ2jesRelativePtEC2dn_isLoaded) {
    if (FJ2jesRelativePtEC2dn_branch != 0) {
      FJ2jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    FJ2jesRelativePtEC2dn_isLoaded = true;
  }
  return *FJ2jesRelativePtEC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesRelativePtEC2dn() {
  if (not FJ3jesRelativePtEC2dn_isLoaded) {
    if (FJ3jesRelativePtEC2dn_branch != 0) {
      FJ3jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    FJ3jesRelativePtEC2dn_isLoaded = true;
  }
  return *FJ3jesRelativePtEC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesRelativePtEC2dn() {
  if (not FJ4jesRelativePtEC2dn_isLoaded) {
    if (FJ4jesRelativePtEC2dn_branch != 0) {
      FJ4jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    FJ4jesRelativePtEC2dn_isLoaded = true;
  }
  return *FJ4jesRelativePtEC2dn_;
}

const float &VVV0Tree::VMD0jesRelativePtEC2dn() {
  if (not VMD0jesRelativePtEC2dn_isLoaded) {
    if (VMD0jesRelativePtEC2dn_branch != 0) {
      VMD0jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    VMD0jesRelativePtEC2dn_isLoaded = true;
  }
  return VMD0jesRelativePtEC2dn_;
}

const float &VVV0Tree::VMD1jesRelativePtEC2dn() {
  if (not VMD1jesRelativePtEC2dn_isLoaded) {
    if (VMD1jesRelativePtEC2dn_branch != 0) {
      VMD1jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    VMD1jesRelativePtEC2dn_isLoaded = true;
  }
  return VMD1jesRelativePtEC2dn_;
}

const float &VVV0Tree::VMD2jesRelativePtEC2dn() {
  if (not VMD2jesRelativePtEC2dn_isLoaded) {
    if (VMD2jesRelativePtEC2dn_branch != 0) {
      VMD2jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    VMD2jesRelativePtEC2dn_isLoaded = true;
  }
  return VMD2jesRelativePtEC2dn_;
}

const float &VVV0Tree::VMD3jesRelativePtEC2dn() {
  if (not VMD3jesRelativePtEC2dn_isLoaded) {
    if (VMD3jesRelativePtEC2dn_branch != 0) {
      VMD3jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    VMD3jesRelativePtEC2dn_isLoaded = true;
  }
  return VMD3jesRelativePtEC2dn_;
}

const float &VVV0Tree::VMD4jesRelativePtEC2dn() {
  if (not VMD4jesRelativePtEC2dn_isLoaded) {
    if (VMD4jesRelativePtEC2dn_branch != 0) {
      VMD4jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    VMD4jesRelativePtEC2dn_isLoaded = true;
  }
  return VMD4jesRelativePtEC2dn_;
}

const float &VVV0Tree::WMD0jesRelativePtEC2dn() {
  if (not WMD0jesRelativePtEC2dn_isLoaded) {
    if (WMD0jesRelativePtEC2dn_branch != 0) {
      WMD0jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    WMD0jesRelativePtEC2dn_isLoaded = true;
  }
  return WMD0jesRelativePtEC2dn_;
}

const float &VVV0Tree::WMD1jesRelativePtEC2dn() {
  if (not WMD1jesRelativePtEC2dn_isLoaded) {
    if (WMD1jesRelativePtEC2dn_branch != 0) {
      WMD1jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    WMD1jesRelativePtEC2dn_isLoaded = true;
  }
  return WMD1jesRelativePtEC2dn_;
}

const float &VVV0Tree::WMD2jesRelativePtEC2dn() {
  if (not WMD2jesRelativePtEC2dn_isLoaded) {
    if (WMD2jesRelativePtEC2dn_branch != 0) {
      WMD2jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    WMD2jesRelativePtEC2dn_isLoaded = true;
  }
  return WMD2jesRelativePtEC2dn_;
}

const float &VVV0Tree::WMD3jesRelativePtEC2dn() {
  if (not WMD3jesRelativePtEC2dn_isLoaded) {
    if (WMD3jesRelativePtEC2dn_branch != 0) {
      WMD3jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    WMD3jesRelativePtEC2dn_isLoaded = true;
  }
  return WMD3jesRelativePtEC2dn_;
}

const float &VVV0Tree::WMD4jesRelativePtEC2dn() {
  if (not WMD4jesRelativePtEC2dn_isLoaded) {
    if (WMD4jesRelativePtEC2dn_branch != 0) {
      WMD4jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    WMD4jesRelativePtEC2dn_isLoaded = true;
  }
  return WMD4jesRelativePtEC2dn_;
}

const int &VVV0Tree::NQGen0jesRelativePtEC2dn() {
  if (not NQGen0jesRelativePtEC2dn_isLoaded) {
    if (NQGen0jesRelativePtEC2dn_branch != 0) {
      NQGen0jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesRelativePtEC2dn_isLoaded = true;
  }
  return NQGen0jesRelativePtEC2dn_;
}

const int &VVV0Tree::NQGen1jesRelativePtEC2dn() {
  if (not NQGen1jesRelativePtEC2dn_isLoaded) {
    if (NQGen1jesRelativePtEC2dn_branch != 0) {
      NQGen1jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesRelativePtEC2dn_isLoaded = true;
  }
  return NQGen1jesRelativePtEC2dn_;
}

const int &VVV0Tree::NQGen2jesRelativePtEC2dn() {
  if (not NQGen2jesRelativePtEC2dn_isLoaded) {
    if (NQGen2jesRelativePtEC2dn_branch != 0) {
      NQGen2jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesRelativePtEC2dn_isLoaded = true;
  }
  return NQGen2jesRelativePtEC2dn_;
}

const int &VVV0Tree::NQGen3jesRelativePtEC2dn() {
  if (not NQGen3jesRelativePtEC2dn_isLoaded) {
    if (NQGen3jesRelativePtEC2dn_branch != 0) {
      NQGen3jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesRelativePtEC2dn_isLoaded = true;
  }
  return NQGen3jesRelativePtEC2dn_;
}

const int &VVV0Tree::NQGen4jesRelativePtEC2dn() {
  if (not NQGen4jesRelativePtEC2dn_isLoaded) {
    if (NQGen4jesRelativePtEC2dn_branch != 0) {
      NQGen4jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesRelativePtEC2dn_isLoaded = true;
  }
  return NQGen4jesRelativePtEC2dn_;
}

const int &VVV0Tree::NBGen0jesRelativePtEC2dn() {
  if (not NBGen0jesRelativePtEC2dn_isLoaded) {
    if (NBGen0jesRelativePtEC2dn_branch != 0) {
      NBGen0jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesRelativePtEC2dn_isLoaded = true;
  }
  return NBGen0jesRelativePtEC2dn_;
}

const int &VVV0Tree::NBGen1jesRelativePtEC2dn() {
  if (not NBGen1jesRelativePtEC2dn_isLoaded) {
    if (NBGen1jesRelativePtEC2dn_branch != 0) {
      NBGen1jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesRelativePtEC2dn_isLoaded = true;
  }
  return NBGen1jesRelativePtEC2dn_;
}

const int &VVV0Tree::NBGen2jesRelativePtEC2dn() {
  if (not NBGen2jesRelativePtEC2dn_isLoaded) {
    if (NBGen2jesRelativePtEC2dn_branch != 0) {
      NBGen2jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesRelativePtEC2dn_isLoaded = true;
  }
  return NBGen2jesRelativePtEC2dn_;
}

const int &VVV0Tree::NBGen3jesRelativePtEC2dn() {
  if (not NBGen3jesRelativePtEC2dn_isLoaded) {
    if (NBGen3jesRelativePtEC2dn_branch != 0) {
      NBGen3jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesRelativePtEC2dn_isLoaded = true;
  }
  return NBGen3jesRelativePtEC2dn_;
}

const int &VVV0Tree::NBGen4jesRelativePtEC2dn() {
  if (not NBGen4jesRelativePtEC2dn_isLoaded) {
    if (NBGen4jesRelativePtEC2dn_branch != 0) {
      NBGen4jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesRelativePtEC2dn_isLoaded = true;
  }
  return NBGen4jesRelativePtEC2dn_;
}

const int &VVV0Tree::NLGen0jesRelativePtEC2dn() {
  if (not NLGen0jesRelativePtEC2dn_isLoaded) {
    if (NLGen0jesRelativePtEC2dn_branch != 0) {
      NLGen0jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesRelativePtEC2dn_isLoaded = true;
  }
  return NLGen0jesRelativePtEC2dn_;
}

const int &VVV0Tree::NLGen1jesRelativePtEC2dn() {
  if (not NLGen1jesRelativePtEC2dn_isLoaded) {
    if (NLGen1jesRelativePtEC2dn_branch != 0) {
      NLGen1jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesRelativePtEC2dn_isLoaded = true;
  }
  return NLGen1jesRelativePtEC2dn_;
}

const int &VVV0Tree::NLGen2jesRelativePtEC2dn() {
  if (not NLGen2jesRelativePtEC2dn_isLoaded) {
    if (NLGen2jesRelativePtEC2dn_branch != 0) {
      NLGen2jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesRelativePtEC2dn_isLoaded = true;
  }
  return NLGen2jesRelativePtEC2dn_;
}

const int &VVV0Tree::NLGen3jesRelativePtEC2dn() {
  if (not NLGen3jesRelativePtEC2dn_isLoaded) {
    if (NLGen3jesRelativePtEC2dn_branch != 0) {
      NLGen3jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesRelativePtEC2dn_isLoaded = true;
  }
  return NLGen3jesRelativePtEC2dn_;
}

const int &VVV0Tree::NLGen4jesRelativePtEC2dn() {
  if (not NLGen4jesRelativePtEC2dn_isLoaded) {
    if (NLGen4jesRelativePtEC2dn_branch != 0) {
      NLGen4jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesRelativePtEC2dn_isLoaded = true;
  }
  return NLGen4jesRelativePtEC2dn_;
}

const int &VVV0Tree::NVQGen0jesRelativePtEC2dn() {
  if (not NVQGen0jesRelativePtEC2dn_isLoaded) {
    if (NVQGen0jesRelativePtEC2dn_branch != 0) {
      NVQGen0jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesRelativePtEC2dn_isLoaded = true;
  }
  return NVQGen0jesRelativePtEC2dn_;
}

const int &VVV0Tree::NVQGen1jesRelativePtEC2dn() {
  if (not NVQGen1jesRelativePtEC2dn_isLoaded) {
    if (NVQGen1jesRelativePtEC2dn_branch != 0) {
      NVQGen1jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesRelativePtEC2dn_isLoaded = true;
  }
  return NVQGen1jesRelativePtEC2dn_;
}

const int &VVV0Tree::NVQGen2jesRelativePtEC2dn() {
  if (not NVQGen2jesRelativePtEC2dn_isLoaded) {
    if (NVQGen2jesRelativePtEC2dn_branch != 0) {
      NVQGen2jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesRelativePtEC2dn_isLoaded = true;
  }
  return NVQGen2jesRelativePtEC2dn_;
}

const int &VVV0Tree::NVQGen3jesRelativePtEC2dn() {
  if (not NVQGen3jesRelativePtEC2dn_isLoaded) {
    if (NVQGen3jesRelativePtEC2dn_branch != 0) {
      NVQGen3jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesRelativePtEC2dn_isLoaded = true;
  }
  return NVQGen3jesRelativePtEC2dn_;
}

const int &VVV0Tree::NVQGen4jesRelativePtEC2dn() {
  if (not NVQGen4jesRelativePtEC2dn_isLoaded) {
    if (NVQGen4jesRelativePtEC2dn_branch != 0) {
      NVQGen4jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesRelativePtEC2dn_isLoaded = true;
  }
  return NVQGen4jesRelativePtEC2dn_;
}

const int &VVV0Tree::NiFJjesRelativePtEC2dn() {
  if (not NiFJjesRelativePtEC2dn_isLoaded) {
    if (NiFJjesRelativePtEC2dn_branch != 0) {
      NiFJjesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NiFJjesRelativePtEC2dn_isLoaded = true;
  }
  return NiFJjesRelativePtEC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesRelativePtEC2dn() {
  if (not iFJ0jesRelativePtEC2dn_isLoaded) {
    if (iFJ0jesRelativePtEC2dn_branch != 0) {
      iFJ0jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesRelativePtEC2dn_isLoaded = true;
  }
  return *iFJ0jesRelativePtEC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesRelativePtEC2dn() {
  if (not iFJ1jesRelativePtEC2dn_isLoaded) {
    if (iFJ1jesRelativePtEC2dn_branch != 0) {
      iFJ1jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesRelativePtEC2dn_isLoaded = true;
  }
  return *iFJ1jesRelativePtEC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesRelativePtEC2dn() {
  if (not iFJ2jesRelativePtEC2dn_isLoaded) {
    if (iFJ2jesRelativePtEC2dn_branch != 0) {
      iFJ2jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesRelativePtEC2dn_isLoaded = true;
  }
  return *iFJ2jesRelativePtEC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesRelativePtEC2dn() {
  if (not iFJ3jesRelativePtEC2dn_isLoaded) {
    if (iFJ3jesRelativePtEC2dn_branch != 0) {
      iFJ3jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesRelativePtEC2dn_isLoaded = true;
  }
  return *iFJ3jesRelativePtEC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesRelativePtEC2dn() {
  if (not iFJ4jesRelativePtEC2dn_isLoaded) {
    if (iFJ4jesRelativePtEC2dn_branch != 0) {
      iFJ4jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesRelativePtEC2dn_isLoaded = true;
  }
  return *iFJ4jesRelativePtEC2dn_;
}

const float &VVV0Tree::iVMD0jesRelativePtEC2dn() {
  if (not iVMD0jesRelativePtEC2dn_isLoaded) {
    if (iVMD0jesRelativePtEC2dn_branch != 0) {
      iVMD0jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesRelativePtEC2dn_isLoaded = true;
  }
  return iVMD0jesRelativePtEC2dn_;
}

const float &VVV0Tree::iVMD1jesRelativePtEC2dn() {
  if (not iVMD1jesRelativePtEC2dn_isLoaded) {
    if (iVMD1jesRelativePtEC2dn_branch != 0) {
      iVMD1jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesRelativePtEC2dn_isLoaded = true;
  }
  return iVMD1jesRelativePtEC2dn_;
}

const float &VVV0Tree::iVMD2jesRelativePtEC2dn() {
  if (not iVMD2jesRelativePtEC2dn_isLoaded) {
    if (iVMD2jesRelativePtEC2dn_branch != 0) {
      iVMD2jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesRelativePtEC2dn_isLoaded = true;
  }
  return iVMD2jesRelativePtEC2dn_;
}

const float &VVV0Tree::iVMD3jesRelativePtEC2dn() {
  if (not iVMD3jesRelativePtEC2dn_isLoaded) {
    if (iVMD3jesRelativePtEC2dn_branch != 0) {
      iVMD3jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesRelativePtEC2dn_isLoaded = true;
  }
  return iVMD3jesRelativePtEC2dn_;
}

const float &VVV0Tree::iVMD4jesRelativePtEC2dn() {
  if (not iVMD4jesRelativePtEC2dn_isLoaded) {
    if (iVMD4jesRelativePtEC2dn_branch != 0) {
      iVMD4jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesRelativePtEC2dn_isLoaded = true;
  }
  return iVMD4jesRelativePtEC2dn_;
}

const float &VVV0Tree::iWMD0jesRelativePtEC2dn() {
  if (not iWMD0jesRelativePtEC2dn_isLoaded) {
    if (iWMD0jesRelativePtEC2dn_branch != 0) {
      iWMD0jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesRelativePtEC2dn_isLoaded = true;
  }
  return iWMD0jesRelativePtEC2dn_;
}

const float &VVV0Tree::iWMD1jesRelativePtEC2dn() {
  if (not iWMD1jesRelativePtEC2dn_isLoaded) {
    if (iWMD1jesRelativePtEC2dn_branch != 0) {
      iWMD1jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesRelativePtEC2dn_isLoaded = true;
  }
  return iWMD1jesRelativePtEC2dn_;
}

const float &VVV0Tree::iWMD2jesRelativePtEC2dn() {
  if (not iWMD2jesRelativePtEC2dn_isLoaded) {
    if (iWMD2jesRelativePtEC2dn_branch != 0) {
      iWMD2jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesRelativePtEC2dn_isLoaded = true;
  }
  return iWMD2jesRelativePtEC2dn_;
}

const float &VVV0Tree::iWMD3jesRelativePtEC2dn() {
  if (not iWMD3jesRelativePtEC2dn_isLoaded) {
    if (iWMD3jesRelativePtEC2dn_branch != 0) {
      iWMD3jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesRelativePtEC2dn_isLoaded = true;
  }
  return iWMD3jesRelativePtEC2dn_;
}

const float &VVV0Tree::iWMD4jesRelativePtEC2dn() {
  if (not iWMD4jesRelativePtEC2dn_isLoaded) {
    if (iWMD4jesRelativePtEC2dn_branch != 0) {
      iWMD4jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesRelativePtEC2dn_isLoaded = true;
  }
  return iWMD4jesRelativePtEC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesRelativePtEC2dn() {
  if (not METjesRelativePtEC2dn_isLoaded) {
    if (METjesRelativePtEC2dn_branch != 0) {
      METjesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch METjesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    METjesRelativePtEC2dn_isLoaded = true;
  }
  return *METjesRelativePtEC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesRelativePtEC2dn() {
  if (not NujesRelativePtEC2dn_isLoaded) {
    if (NujesRelativePtEC2dn_branch != 0) {
      NujesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NujesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NujesRelativePtEC2dn_isLoaded = true;
  }
  return *NujesRelativePtEC2dn_;
}

const int &VVV0Tree::NJjesRelativePtEC2dn() {
  if (not NJjesRelativePtEC2dn_isLoaded) {
    if (NJjesRelativePtEC2dn_branch != 0) {
      NJjesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NJjesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NJjesRelativePtEC2dn_isLoaded = true;
  }
  return NJjesRelativePtEC2dn_;
}

const int &VVV0Tree::NbLoosejesRelativePtEC2dn() {
  if (not NbLoosejesRelativePtEC2dn_isLoaded) {
    if (NbLoosejesRelativePtEC2dn_branch != 0) {
      NbLoosejesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesRelativePtEC2dn_isLoaded = true;
  }
  return NbLoosejesRelativePtEC2dn_;
}

const int &VVV0Tree::NbMediumjesRelativePtEC2dn() {
  if (not NbMediumjesRelativePtEC2dn_isLoaded) {
    if (NbMediumjesRelativePtEC2dn_branch != 0) {
      NbMediumjesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesRelativePtEC2dn_isLoaded = true;
  }
  return NbMediumjesRelativePtEC2dn_;
}

const int &VVV0Tree::NbTightjesRelativePtEC2dn() {
  if (not NbTightjesRelativePtEC2dn_isLoaded) {
    if (NbTightjesRelativePtEC2dn_branch != 0) {
      NbTightjesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NbTightjesRelativePtEC2dn_isLoaded = true;
  }
  return NbTightjesRelativePtEC2dn_;
}

const int &VVV0Tree::NoORNbLoosejesRelativePtEC2dn() {
  if (not NoORNbLoosejesRelativePtEC2dn_isLoaded) {
    if (NoORNbLoosejesRelativePtEC2dn_branch != 0) {
      NoORNbLoosejesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesRelativePtEC2dn_isLoaded = true;
  }
  return NoORNbLoosejesRelativePtEC2dn_;
}

const int &VVV0Tree::NoORNbMediumjesRelativePtEC2dn() {
  if (not NoORNbMediumjesRelativePtEC2dn_isLoaded) {
    if (NoORNbMediumjesRelativePtEC2dn_branch != 0) {
      NoORNbMediumjesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesRelativePtEC2dn_isLoaded = true;
  }
  return NoORNbMediumjesRelativePtEC2dn_;
}

const int &VVV0Tree::NoORNbTightjesRelativePtEC2dn() {
  if (not NoORNbTightjesRelativePtEC2dn_isLoaded) {
    if (NoORNbTightjesRelativePtEC2dn_branch != 0) {
      NoORNbTightjesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesRelativePtEC2dn_isLoaded = true;
  }
  return NoORNbTightjesRelativePtEC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesRelativePtEC2dn() {
  if (not J0jesRelativePtEC2dn_isLoaded) {
    if (J0jesRelativePtEC2dn_branch != 0) {
      J0jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch J0jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    J0jesRelativePtEC2dn_isLoaded = true;
  }
  return *J0jesRelativePtEC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesRelativePtEC2dn() {
  if (not J1jesRelativePtEC2dn_isLoaded) {
    if (J1jesRelativePtEC2dn_branch != 0) {
      J1jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch J1jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    J1jesRelativePtEC2dn_isLoaded = true;
  }
  return *J1jesRelativePtEC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesRelativePtEC2dn() {
  if (not J2jesRelativePtEC2dn_isLoaded) {
    if (J2jesRelativePtEC2dn_branch != 0) {
      J2jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch J2jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    J2jesRelativePtEC2dn_isLoaded = true;
  }
  return *J2jesRelativePtEC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesRelativePtEC2dn() {
  if (not J3jesRelativePtEC2dn_isLoaded) {
    if (J3jesRelativePtEC2dn_branch != 0) {
      J3jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch J3jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    J3jesRelativePtEC2dn_isLoaded = true;
  }
  return *J3jesRelativePtEC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesRelativePtEC2dn() {
  if (not J4jesRelativePtEC2dn_isLoaded) {
    if (J4jesRelativePtEC2dn_branch != 0) {
      J4jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch J4jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    J4jesRelativePtEC2dn_isLoaded = true;
  }
  return *J4jesRelativePtEC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesRelativePtEC2dn() {
  if (not J5jesRelativePtEC2dn_isLoaded) {
    if (J5jesRelativePtEC2dn_branch != 0) {
      J5jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch J5jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    J5jesRelativePtEC2dn_isLoaded = true;
  }
  return *J5jesRelativePtEC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesRelativePtEC2dn() {
  if (not J6jesRelativePtEC2dn_isLoaded) {
    if (J6jesRelativePtEC2dn_branch != 0) {
      J6jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch J6jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    J6jesRelativePtEC2dn_isLoaded = true;
  }
  return *J6jesRelativePtEC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesRelativePtEC2dn() {
  if (not J7jesRelativePtEC2dn_isLoaded) {
    if (J7jesRelativePtEC2dn_branch != 0) {
      J7jesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch J7jesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    J7jesRelativePtEC2dn_isLoaded = true;
  }
  return *J7jesRelativePtEC2dn_;
}

const vector<int> &VVV0Tree::NQJGenjesRelativePtEC2dn() {
  if (not NQJGenjesRelativePtEC2dn_isLoaded) {
    if (NQJGenjesRelativePtEC2dn_branch != 0) {
      NQJGenjesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesRelativePtEC2dn_isLoaded = true;
  }
  return *NQJGenjesRelativePtEC2dn_;
}

const vector<int> &VVV0Tree::NBJGenjesRelativePtEC2dn() {
  if (not NBJGenjesRelativePtEC2dn_isLoaded) {
    if (NBJGenjesRelativePtEC2dn_branch != 0) {
      NBJGenjesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesRelativePtEC2dn_isLoaded = true;
  }
  return *NBJGenjesRelativePtEC2dn_;
}

const vector<int> &VVV0Tree::NLJGenjesRelativePtEC2dn() {
  if (not NLJGenjesRelativePtEC2dn_isLoaded) {
    if (NLJGenjesRelativePtEC2dn_branch != 0) {
      NLJGenjesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesRelativePtEC2dn_isLoaded = true;
  }
  return *NLJGenjesRelativePtEC2dn_;
}

const float &VVV0Tree::MVVXjesRelativePtEC2dn() {
  if (not MVVXjesRelativePtEC2dn_isLoaded) {
    if (MVVXjesRelativePtEC2dn_branch != 0) {
      MVVXjesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    MVVXjesRelativePtEC2dn_isLoaded = true;
  }
  return MVVXjesRelativePtEC2dn_;
}

const float &VVV0Tree::PtVVXjesRelativePtEC2dn() {
  if (not PtVVXjesRelativePtEC2dn_isLoaded) {
    if (PtVVXjesRelativePtEC2dn_branch != 0) {
      PtVVXjesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesRelativePtEC2dn_isLoaded = true;
  }
  return PtVVXjesRelativePtEC2dn_;
}

const float &VVV0Tree::HTjesRelativePtEC2dn() {
  if (not HTjesRelativePtEC2dn_isLoaded) {
    if (HTjesRelativePtEC2dn_branch != 0) {
      HTjesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch HTjesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    HTjesRelativePtEC2dn_isLoaded = true;
  }
  return HTjesRelativePtEC2dn_;
}

const float &VVV0Tree::HTJjesRelativePtEC2dn() {
  if (not HTJjesRelativePtEC2dn_isLoaded) {
    if (HTJjesRelativePtEC2dn_branch != 0) {
      HTJjesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch HTJjesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    HTJjesRelativePtEC2dn_isLoaded = true;
  }
  return HTJjesRelativePtEC2dn_;
}

const float &VVV0Tree::HTFJjesRelativePtEC2dn() {
  if (not HTFJjesRelativePtEC2dn_isLoaded) {
    if (HTFJjesRelativePtEC2dn_branch != 0) {
      HTFJjesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    HTFJjesRelativePtEC2dn_isLoaded = true;
  }
  return HTFJjesRelativePtEC2dn_;
}

const float &VVV0Tree::SumPtFJjesRelativePtEC2dn() {
  if (not SumPtFJjesRelativePtEC2dn_isLoaded) {
    if (SumPtFJjesRelativePtEC2dn_branch != 0) {
      SumPtFJjesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesRelativePtEC2dn_isLoaded = true;
  }
  return SumPtFJjesRelativePtEC2dn_;
}

const float &VVV0Tree::SumPtJjesRelativePtEC2dn() {
  if (not SumPtJjesRelativePtEC2dn_isLoaded) {
    if (SumPtJjesRelativePtEC2dn_branch != 0) {
      SumPtJjesRelativePtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesRelativePtEC2dn_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesRelativePtEC2dn_isLoaded = true;
  }
  return SumPtJjesRelativePtEC2dn_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesRelativePtHFup() {
  if (not JsjesRelativePtHFup_isLoaded) {
    if (JsjesRelativePtHFup_branch != 0) {
      JsjesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch JsjesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    JsjesRelativePtHFup_isLoaded = true;
  }
  return *JsjesRelativePtHFup_;
}

const int &VVV0Tree::NFJjesRelativePtHFup() {
  if (not NFJjesRelativePtHFup_isLoaded) {
    if (NFJjesRelativePtHFup_branch != 0) {
      NFJjesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch NFJjesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    NFJjesRelativePtHFup_isLoaded = true;
  }
  return NFJjesRelativePtHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesRelativePtHFup() {
  if (not FJ0jesRelativePtHFup_isLoaded) {
    if (FJ0jesRelativePtHFup_branch != 0) {
      FJ0jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    FJ0jesRelativePtHFup_isLoaded = true;
  }
  return *FJ0jesRelativePtHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesRelativePtHFup() {
  if (not FJ1jesRelativePtHFup_isLoaded) {
    if (FJ1jesRelativePtHFup_branch != 0) {
      FJ1jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    FJ1jesRelativePtHFup_isLoaded = true;
  }
  return *FJ1jesRelativePtHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesRelativePtHFup() {
  if (not FJ2jesRelativePtHFup_isLoaded) {
    if (FJ2jesRelativePtHFup_branch != 0) {
      FJ2jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    FJ2jesRelativePtHFup_isLoaded = true;
  }
  return *FJ2jesRelativePtHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesRelativePtHFup() {
  if (not FJ3jesRelativePtHFup_isLoaded) {
    if (FJ3jesRelativePtHFup_branch != 0) {
      FJ3jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    FJ3jesRelativePtHFup_isLoaded = true;
  }
  return *FJ3jesRelativePtHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesRelativePtHFup() {
  if (not FJ4jesRelativePtHFup_isLoaded) {
    if (FJ4jesRelativePtHFup_branch != 0) {
      FJ4jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    FJ4jesRelativePtHFup_isLoaded = true;
  }
  return *FJ4jesRelativePtHFup_;
}

const float &VVV0Tree::VMD0jesRelativePtHFup() {
  if (not VMD0jesRelativePtHFup_isLoaded) {
    if (VMD0jesRelativePtHFup_branch != 0) {
      VMD0jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    VMD0jesRelativePtHFup_isLoaded = true;
  }
  return VMD0jesRelativePtHFup_;
}

const float &VVV0Tree::VMD1jesRelativePtHFup() {
  if (not VMD1jesRelativePtHFup_isLoaded) {
    if (VMD1jesRelativePtHFup_branch != 0) {
      VMD1jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    VMD1jesRelativePtHFup_isLoaded = true;
  }
  return VMD1jesRelativePtHFup_;
}

const float &VVV0Tree::VMD2jesRelativePtHFup() {
  if (not VMD2jesRelativePtHFup_isLoaded) {
    if (VMD2jesRelativePtHFup_branch != 0) {
      VMD2jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    VMD2jesRelativePtHFup_isLoaded = true;
  }
  return VMD2jesRelativePtHFup_;
}

const float &VVV0Tree::VMD3jesRelativePtHFup() {
  if (not VMD3jesRelativePtHFup_isLoaded) {
    if (VMD3jesRelativePtHFup_branch != 0) {
      VMD3jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    VMD3jesRelativePtHFup_isLoaded = true;
  }
  return VMD3jesRelativePtHFup_;
}

const float &VVV0Tree::VMD4jesRelativePtHFup() {
  if (not VMD4jesRelativePtHFup_isLoaded) {
    if (VMD4jesRelativePtHFup_branch != 0) {
      VMD4jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    VMD4jesRelativePtHFup_isLoaded = true;
  }
  return VMD4jesRelativePtHFup_;
}

const float &VVV0Tree::WMD0jesRelativePtHFup() {
  if (not WMD0jesRelativePtHFup_isLoaded) {
    if (WMD0jesRelativePtHFup_branch != 0) {
      WMD0jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    WMD0jesRelativePtHFup_isLoaded = true;
  }
  return WMD0jesRelativePtHFup_;
}

const float &VVV0Tree::WMD1jesRelativePtHFup() {
  if (not WMD1jesRelativePtHFup_isLoaded) {
    if (WMD1jesRelativePtHFup_branch != 0) {
      WMD1jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    WMD1jesRelativePtHFup_isLoaded = true;
  }
  return WMD1jesRelativePtHFup_;
}

const float &VVV0Tree::WMD2jesRelativePtHFup() {
  if (not WMD2jesRelativePtHFup_isLoaded) {
    if (WMD2jesRelativePtHFup_branch != 0) {
      WMD2jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    WMD2jesRelativePtHFup_isLoaded = true;
  }
  return WMD2jesRelativePtHFup_;
}

const float &VVV0Tree::WMD3jesRelativePtHFup() {
  if (not WMD3jesRelativePtHFup_isLoaded) {
    if (WMD3jesRelativePtHFup_branch != 0) {
      WMD3jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    WMD3jesRelativePtHFup_isLoaded = true;
  }
  return WMD3jesRelativePtHFup_;
}

const float &VVV0Tree::WMD4jesRelativePtHFup() {
  if (not WMD4jesRelativePtHFup_isLoaded) {
    if (WMD4jesRelativePtHFup_branch != 0) {
      WMD4jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    WMD4jesRelativePtHFup_isLoaded = true;
  }
  return WMD4jesRelativePtHFup_;
}

const int &VVV0Tree::NQGen0jesRelativePtHFup() {
  if (not NQGen0jesRelativePtHFup_isLoaded) {
    if (NQGen0jesRelativePtHFup_branch != 0) {
      NQGen0jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesRelativePtHFup_isLoaded = true;
  }
  return NQGen0jesRelativePtHFup_;
}

const int &VVV0Tree::NQGen1jesRelativePtHFup() {
  if (not NQGen1jesRelativePtHFup_isLoaded) {
    if (NQGen1jesRelativePtHFup_branch != 0) {
      NQGen1jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesRelativePtHFup_isLoaded = true;
  }
  return NQGen1jesRelativePtHFup_;
}

const int &VVV0Tree::NQGen2jesRelativePtHFup() {
  if (not NQGen2jesRelativePtHFup_isLoaded) {
    if (NQGen2jesRelativePtHFup_branch != 0) {
      NQGen2jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesRelativePtHFup_isLoaded = true;
  }
  return NQGen2jesRelativePtHFup_;
}

const int &VVV0Tree::NQGen3jesRelativePtHFup() {
  if (not NQGen3jesRelativePtHFup_isLoaded) {
    if (NQGen3jesRelativePtHFup_branch != 0) {
      NQGen3jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesRelativePtHFup_isLoaded = true;
  }
  return NQGen3jesRelativePtHFup_;
}

const int &VVV0Tree::NQGen4jesRelativePtHFup() {
  if (not NQGen4jesRelativePtHFup_isLoaded) {
    if (NQGen4jesRelativePtHFup_branch != 0) {
      NQGen4jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesRelativePtHFup_isLoaded = true;
  }
  return NQGen4jesRelativePtHFup_;
}

const int &VVV0Tree::NBGen0jesRelativePtHFup() {
  if (not NBGen0jesRelativePtHFup_isLoaded) {
    if (NBGen0jesRelativePtHFup_branch != 0) {
      NBGen0jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesRelativePtHFup_isLoaded = true;
  }
  return NBGen0jesRelativePtHFup_;
}

const int &VVV0Tree::NBGen1jesRelativePtHFup() {
  if (not NBGen1jesRelativePtHFup_isLoaded) {
    if (NBGen1jesRelativePtHFup_branch != 0) {
      NBGen1jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesRelativePtHFup_isLoaded = true;
  }
  return NBGen1jesRelativePtHFup_;
}

const int &VVV0Tree::NBGen2jesRelativePtHFup() {
  if (not NBGen2jesRelativePtHFup_isLoaded) {
    if (NBGen2jesRelativePtHFup_branch != 0) {
      NBGen2jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesRelativePtHFup_isLoaded = true;
  }
  return NBGen2jesRelativePtHFup_;
}

const int &VVV0Tree::NBGen3jesRelativePtHFup() {
  if (not NBGen3jesRelativePtHFup_isLoaded) {
    if (NBGen3jesRelativePtHFup_branch != 0) {
      NBGen3jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesRelativePtHFup_isLoaded = true;
  }
  return NBGen3jesRelativePtHFup_;
}

const int &VVV0Tree::NBGen4jesRelativePtHFup() {
  if (not NBGen4jesRelativePtHFup_isLoaded) {
    if (NBGen4jesRelativePtHFup_branch != 0) {
      NBGen4jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesRelativePtHFup_isLoaded = true;
  }
  return NBGen4jesRelativePtHFup_;
}

const int &VVV0Tree::NLGen0jesRelativePtHFup() {
  if (not NLGen0jesRelativePtHFup_isLoaded) {
    if (NLGen0jesRelativePtHFup_branch != 0) {
      NLGen0jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesRelativePtHFup_isLoaded = true;
  }
  return NLGen0jesRelativePtHFup_;
}

const int &VVV0Tree::NLGen1jesRelativePtHFup() {
  if (not NLGen1jesRelativePtHFup_isLoaded) {
    if (NLGen1jesRelativePtHFup_branch != 0) {
      NLGen1jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesRelativePtHFup_isLoaded = true;
  }
  return NLGen1jesRelativePtHFup_;
}

const int &VVV0Tree::NLGen2jesRelativePtHFup() {
  if (not NLGen2jesRelativePtHFup_isLoaded) {
    if (NLGen2jesRelativePtHFup_branch != 0) {
      NLGen2jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesRelativePtHFup_isLoaded = true;
  }
  return NLGen2jesRelativePtHFup_;
}

const int &VVV0Tree::NLGen3jesRelativePtHFup() {
  if (not NLGen3jesRelativePtHFup_isLoaded) {
    if (NLGen3jesRelativePtHFup_branch != 0) {
      NLGen3jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesRelativePtHFup_isLoaded = true;
  }
  return NLGen3jesRelativePtHFup_;
}

const int &VVV0Tree::NLGen4jesRelativePtHFup() {
  if (not NLGen4jesRelativePtHFup_isLoaded) {
    if (NLGen4jesRelativePtHFup_branch != 0) {
      NLGen4jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesRelativePtHFup_isLoaded = true;
  }
  return NLGen4jesRelativePtHFup_;
}

const int &VVV0Tree::NVQGen0jesRelativePtHFup() {
  if (not NVQGen0jesRelativePtHFup_isLoaded) {
    if (NVQGen0jesRelativePtHFup_branch != 0) {
      NVQGen0jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesRelativePtHFup_isLoaded = true;
  }
  return NVQGen0jesRelativePtHFup_;
}

const int &VVV0Tree::NVQGen1jesRelativePtHFup() {
  if (not NVQGen1jesRelativePtHFup_isLoaded) {
    if (NVQGen1jesRelativePtHFup_branch != 0) {
      NVQGen1jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesRelativePtHFup_isLoaded = true;
  }
  return NVQGen1jesRelativePtHFup_;
}

const int &VVV0Tree::NVQGen2jesRelativePtHFup() {
  if (not NVQGen2jesRelativePtHFup_isLoaded) {
    if (NVQGen2jesRelativePtHFup_branch != 0) {
      NVQGen2jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesRelativePtHFup_isLoaded = true;
  }
  return NVQGen2jesRelativePtHFup_;
}

const int &VVV0Tree::NVQGen3jesRelativePtHFup() {
  if (not NVQGen3jesRelativePtHFup_isLoaded) {
    if (NVQGen3jesRelativePtHFup_branch != 0) {
      NVQGen3jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesRelativePtHFup_isLoaded = true;
  }
  return NVQGen3jesRelativePtHFup_;
}

const int &VVV0Tree::NVQGen4jesRelativePtHFup() {
  if (not NVQGen4jesRelativePtHFup_isLoaded) {
    if (NVQGen4jesRelativePtHFup_branch != 0) {
      NVQGen4jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesRelativePtHFup_isLoaded = true;
  }
  return NVQGen4jesRelativePtHFup_;
}

const int &VVV0Tree::NiFJjesRelativePtHFup() {
  if (not NiFJjesRelativePtHFup_isLoaded) {
    if (NiFJjesRelativePtHFup_branch != 0) {
      NiFJjesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    NiFJjesRelativePtHFup_isLoaded = true;
  }
  return NiFJjesRelativePtHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesRelativePtHFup() {
  if (not iFJ0jesRelativePtHFup_isLoaded) {
    if (iFJ0jesRelativePtHFup_branch != 0) {
      iFJ0jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesRelativePtHFup_isLoaded = true;
  }
  return *iFJ0jesRelativePtHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesRelativePtHFup() {
  if (not iFJ1jesRelativePtHFup_isLoaded) {
    if (iFJ1jesRelativePtHFup_branch != 0) {
      iFJ1jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesRelativePtHFup_isLoaded = true;
  }
  return *iFJ1jesRelativePtHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesRelativePtHFup() {
  if (not iFJ2jesRelativePtHFup_isLoaded) {
    if (iFJ2jesRelativePtHFup_branch != 0) {
      iFJ2jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesRelativePtHFup_isLoaded = true;
  }
  return *iFJ2jesRelativePtHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesRelativePtHFup() {
  if (not iFJ3jesRelativePtHFup_isLoaded) {
    if (iFJ3jesRelativePtHFup_branch != 0) {
      iFJ3jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesRelativePtHFup_isLoaded = true;
  }
  return *iFJ3jesRelativePtHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesRelativePtHFup() {
  if (not iFJ4jesRelativePtHFup_isLoaded) {
    if (iFJ4jesRelativePtHFup_branch != 0) {
      iFJ4jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesRelativePtHFup_isLoaded = true;
  }
  return *iFJ4jesRelativePtHFup_;
}

const float &VVV0Tree::iVMD0jesRelativePtHFup() {
  if (not iVMD0jesRelativePtHFup_isLoaded) {
    if (iVMD0jesRelativePtHFup_branch != 0) {
      iVMD0jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesRelativePtHFup_isLoaded = true;
  }
  return iVMD0jesRelativePtHFup_;
}

const float &VVV0Tree::iVMD1jesRelativePtHFup() {
  if (not iVMD1jesRelativePtHFup_isLoaded) {
    if (iVMD1jesRelativePtHFup_branch != 0) {
      iVMD1jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesRelativePtHFup_isLoaded = true;
  }
  return iVMD1jesRelativePtHFup_;
}

const float &VVV0Tree::iVMD2jesRelativePtHFup() {
  if (not iVMD2jesRelativePtHFup_isLoaded) {
    if (iVMD2jesRelativePtHFup_branch != 0) {
      iVMD2jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesRelativePtHFup_isLoaded = true;
  }
  return iVMD2jesRelativePtHFup_;
}

const float &VVV0Tree::iVMD3jesRelativePtHFup() {
  if (not iVMD3jesRelativePtHFup_isLoaded) {
    if (iVMD3jesRelativePtHFup_branch != 0) {
      iVMD3jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesRelativePtHFup_isLoaded = true;
  }
  return iVMD3jesRelativePtHFup_;
}

const float &VVV0Tree::iVMD4jesRelativePtHFup() {
  if (not iVMD4jesRelativePtHFup_isLoaded) {
    if (iVMD4jesRelativePtHFup_branch != 0) {
      iVMD4jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesRelativePtHFup_isLoaded = true;
  }
  return iVMD4jesRelativePtHFup_;
}

const float &VVV0Tree::iWMD0jesRelativePtHFup() {
  if (not iWMD0jesRelativePtHFup_isLoaded) {
    if (iWMD0jesRelativePtHFup_branch != 0) {
      iWMD0jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesRelativePtHFup_isLoaded = true;
  }
  return iWMD0jesRelativePtHFup_;
}

const float &VVV0Tree::iWMD1jesRelativePtHFup() {
  if (not iWMD1jesRelativePtHFup_isLoaded) {
    if (iWMD1jesRelativePtHFup_branch != 0) {
      iWMD1jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesRelativePtHFup_isLoaded = true;
  }
  return iWMD1jesRelativePtHFup_;
}

const float &VVV0Tree::iWMD2jesRelativePtHFup() {
  if (not iWMD2jesRelativePtHFup_isLoaded) {
    if (iWMD2jesRelativePtHFup_branch != 0) {
      iWMD2jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesRelativePtHFup_isLoaded = true;
  }
  return iWMD2jesRelativePtHFup_;
}

const float &VVV0Tree::iWMD3jesRelativePtHFup() {
  if (not iWMD3jesRelativePtHFup_isLoaded) {
    if (iWMD3jesRelativePtHFup_branch != 0) {
      iWMD3jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesRelativePtHFup_isLoaded = true;
  }
  return iWMD3jesRelativePtHFup_;
}

const float &VVV0Tree::iWMD4jesRelativePtHFup() {
  if (not iWMD4jesRelativePtHFup_isLoaded) {
    if (iWMD4jesRelativePtHFup_branch != 0) {
      iWMD4jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesRelativePtHFup_isLoaded = true;
  }
  return iWMD4jesRelativePtHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesRelativePtHFup() {
  if (not METjesRelativePtHFup_isLoaded) {
    if (METjesRelativePtHFup_branch != 0) {
      METjesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch METjesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    METjesRelativePtHFup_isLoaded = true;
  }
  return *METjesRelativePtHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesRelativePtHFup() {
  if (not NujesRelativePtHFup_isLoaded) {
    if (NujesRelativePtHFup_branch != 0) {
      NujesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch NujesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    NujesRelativePtHFup_isLoaded = true;
  }
  return *NujesRelativePtHFup_;
}

const int &VVV0Tree::NJjesRelativePtHFup() {
  if (not NJjesRelativePtHFup_isLoaded) {
    if (NJjesRelativePtHFup_branch != 0) {
      NJjesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch NJjesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    NJjesRelativePtHFup_isLoaded = true;
  }
  return NJjesRelativePtHFup_;
}

const int &VVV0Tree::NbLoosejesRelativePtHFup() {
  if (not NbLoosejesRelativePtHFup_isLoaded) {
    if (NbLoosejesRelativePtHFup_branch != 0) {
      NbLoosejesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesRelativePtHFup_isLoaded = true;
  }
  return NbLoosejesRelativePtHFup_;
}

const int &VVV0Tree::NbMediumjesRelativePtHFup() {
  if (not NbMediumjesRelativePtHFup_isLoaded) {
    if (NbMediumjesRelativePtHFup_branch != 0) {
      NbMediumjesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesRelativePtHFup_isLoaded = true;
  }
  return NbMediumjesRelativePtHFup_;
}

const int &VVV0Tree::NbTightjesRelativePtHFup() {
  if (not NbTightjesRelativePtHFup_isLoaded) {
    if (NbTightjesRelativePtHFup_branch != 0) {
      NbTightjesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    NbTightjesRelativePtHFup_isLoaded = true;
  }
  return NbTightjesRelativePtHFup_;
}

const int &VVV0Tree::NoORNbLoosejesRelativePtHFup() {
  if (not NoORNbLoosejesRelativePtHFup_isLoaded) {
    if (NoORNbLoosejesRelativePtHFup_branch != 0) {
      NoORNbLoosejesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesRelativePtHFup_isLoaded = true;
  }
  return NoORNbLoosejesRelativePtHFup_;
}

const int &VVV0Tree::NoORNbMediumjesRelativePtHFup() {
  if (not NoORNbMediumjesRelativePtHFup_isLoaded) {
    if (NoORNbMediumjesRelativePtHFup_branch != 0) {
      NoORNbMediumjesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesRelativePtHFup_isLoaded = true;
  }
  return NoORNbMediumjesRelativePtHFup_;
}

const int &VVV0Tree::NoORNbTightjesRelativePtHFup() {
  if (not NoORNbTightjesRelativePtHFup_isLoaded) {
    if (NoORNbTightjesRelativePtHFup_branch != 0) {
      NoORNbTightjesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesRelativePtHFup_isLoaded = true;
  }
  return NoORNbTightjesRelativePtHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesRelativePtHFup() {
  if (not J0jesRelativePtHFup_isLoaded) {
    if (J0jesRelativePtHFup_branch != 0) {
      J0jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch J0jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    J0jesRelativePtHFup_isLoaded = true;
  }
  return *J0jesRelativePtHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesRelativePtHFup() {
  if (not J1jesRelativePtHFup_isLoaded) {
    if (J1jesRelativePtHFup_branch != 0) {
      J1jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch J1jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    J1jesRelativePtHFup_isLoaded = true;
  }
  return *J1jesRelativePtHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesRelativePtHFup() {
  if (not J2jesRelativePtHFup_isLoaded) {
    if (J2jesRelativePtHFup_branch != 0) {
      J2jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch J2jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    J2jesRelativePtHFup_isLoaded = true;
  }
  return *J2jesRelativePtHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesRelativePtHFup() {
  if (not J3jesRelativePtHFup_isLoaded) {
    if (J3jesRelativePtHFup_branch != 0) {
      J3jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch J3jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    J3jesRelativePtHFup_isLoaded = true;
  }
  return *J3jesRelativePtHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesRelativePtHFup() {
  if (not J4jesRelativePtHFup_isLoaded) {
    if (J4jesRelativePtHFup_branch != 0) {
      J4jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch J4jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    J4jesRelativePtHFup_isLoaded = true;
  }
  return *J4jesRelativePtHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesRelativePtHFup() {
  if (not J5jesRelativePtHFup_isLoaded) {
    if (J5jesRelativePtHFup_branch != 0) {
      J5jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch J5jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    J5jesRelativePtHFup_isLoaded = true;
  }
  return *J5jesRelativePtHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesRelativePtHFup() {
  if (not J6jesRelativePtHFup_isLoaded) {
    if (J6jesRelativePtHFup_branch != 0) {
      J6jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch J6jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    J6jesRelativePtHFup_isLoaded = true;
  }
  return *J6jesRelativePtHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesRelativePtHFup() {
  if (not J7jesRelativePtHFup_isLoaded) {
    if (J7jesRelativePtHFup_branch != 0) {
      J7jesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch J7jesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    J7jesRelativePtHFup_isLoaded = true;
  }
  return *J7jesRelativePtHFup_;
}

const vector<int> &VVV0Tree::NQJGenjesRelativePtHFup() {
  if (not NQJGenjesRelativePtHFup_isLoaded) {
    if (NQJGenjesRelativePtHFup_branch != 0) {
      NQJGenjesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesRelativePtHFup_isLoaded = true;
  }
  return *NQJGenjesRelativePtHFup_;
}

const vector<int> &VVV0Tree::NBJGenjesRelativePtHFup() {
  if (not NBJGenjesRelativePtHFup_isLoaded) {
    if (NBJGenjesRelativePtHFup_branch != 0) {
      NBJGenjesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesRelativePtHFup_isLoaded = true;
  }
  return *NBJGenjesRelativePtHFup_;
}

const vector<int> &VVV0Tree::NLJGenjesRelativePtHFup() {
  if (not NLJGenjesRelativePtHFup_isLoaded) {
    if (NLJGenjesRelativePtHFup_branch != 0) {
      NLJGenjesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesRelativePtHFup_isLoaded = true;
  }
  return *NLJGenjesRelativePtHFup_;
}

const float &VVV0Tree::MVVXjesRelativePtHFup() {
  if (not MVVXjesRelativePtHFup_isLoaded) {
    if (MVVXjesRelativePtHFup_branch != 0) {
      MVVXjesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    MVVXjesRelativePtHFup_isLoaded = true;
  }
  return MVVXjesRelativePtHFup_;
}

const float &VVV0Tree::PtVVXjesRelativePtHFup() {
  if (not PtVVXjesRelativePtHFup_isLoaded) {
    if (PtVVXjesRelativePtHFup_branch != 0) {
      PtVVXjesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesRelativePtHFup_isLoaded = true;
  }
  return PtVVXjesRelativePtHFup_;
}

const float &VVV0Tree::HTjesRelativePtHFup() {
  if (not HTjesRelativePtHFup_isLoaded) {
    if (HTjesRelativePtHFup_branch != 0) {
      HTjesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch HTjesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    HTjesRelativePtHFup_isLoaded = true;
  }
  return HTjesRelativePtHFup_;
}

const float &VVV0Tree::HTJjesRelativePtHFup() {
  if (not HTJjesRelativePtHFup_isLoaded) {
    if (HTJjesRelativePtHFup_branch != 0) {
      HTJjesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch HTJjesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    HTJjesRelativePtHFup_isLoaded = true;
  }
  return HTJjesRelativePtHFup_;
}

const float &VVV0Tree::HTFJjesRelativePtHFup() {
  if (not HTFJjesRelativePtHFup_isLoaded) {
    if (HTFJjesRelativePtHFup_branch != 0) {
      HTFJjesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    HTFJjesRelativePtHFup_isLoaded = true;
  }
  return HTFJjesRelativePtHFup_;
}

const float &VVV0Tree::SumPtFJjesRelativePtHFup() {
  if (not SumPtFJjesRelativePtHFup_isLoaded) {
    if (SumPtFJjesRelativePtHFup_branch != 0) {
      SumPtFJjesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesRelativePtHFup_isLoaded = true;
  }
  return SumPtFJjesRelativePtHFup_;
}

const float &VVV0Tree::SumPtJjesRelativePtHFup() {
  if (not SumPtJjesRelativePtHFup_isLoaded) {
    if (SumPtJjesRelativePtHFup_branch != 0) {
      SumPtJjesRelativePtHFup_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesRelativePtHFup_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesRelativePtHFup_isLoaded = true;
  }
  return SumPtJjesRelativePtHFup_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesRelativePtHFdn() {
  if (not JsjesRelativePtHFdn_isLoaded) {
    if (JsjesRelativePtHFdn_branch != 0) {
      JsjesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch JsjesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    JsjesRelativePtHFdn_isLoaded = true;
  }
  return *JsjesRelativePtHFdn_;
}

const int &VVV0Tree::NFJjesRelativePtHFdn() {
  if (not NFJjesRelativePtHFdn_isLoaded) {
    if (NFJjesRelativePtHFdn_branch != 0) {
      NFJjesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NFJjesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    NFJjesRelativePtHFdn_isLoaded = true;
  }
  return NFJjesRelativePtHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesRelativePtHFdn() {
  if (not FJ0jesRelativePtHFdn_isLoaded) {
    if (FJ0jesRelativePtHFdn_branch != 0) {
      FJ0jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    FJ0jesRelativePtHFdn_isLoaded = true;
  }
  return *FJ0jesRelativePtHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesRelativePtHFdn() {
  if (not FJ1jesRelativePtHFdn_isLoaded) {
    if (FJ1jesRelativePtHFdn_branch != 0) {
      FJ1jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    FJ1jesRelativePtHFdn_isLoaded = true;
  }
  return *FJ1jesRelativePtHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesRelativePtHFdn() {
  if (not FJ2jesRelativePtHFdn_isLoaded) {
    if (FJ2jesRelativePtHFdn_branch != 0) {
      FJ2jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    FJ2jesRelativePtHFdn_isLoaded = true;
  }
  return *FJ2jesRelativePtHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesRelativePtHFdn() {
  if (not FJ3jesRelativePtHFdn_isLoaded) {
    if (FJ3jesRelativePtHFdn_branch != 0) {
      FJ3jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    FJ3jesRelativePtHFdn_isLoaded = true;
  }
  return *FJ3jesRelativePtHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesRelativePtHFdn() {
  if (not FJ4jesRelativePtHFdn_isLoaded) {
    if (FJ4jesRelativePtHFdn_branch != 0) {
      FJ4jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    FJ4jesRelativePtHFdn_isLoaded = true;
  }
  return *FJ4jesRelativePtHFdn_;
}

const float &VVV0Tree::VMD0jesRelativePtHFdn() {
  if (not VMD0jesRelativePtHFdn_isLoaded) {
    if (VMD0jesRelativePtHFdn_branch != 0) {
      VMD0jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    VMD0jesRelativePtHFdn_isLoaded = true;
  }
  return VMD0jesRelativePtHFdn_;
}

const float &VVV0Tree::VMD1jesRelativePtHFdn() {
  if (not VMD1jesRelativePtHFdn_isLoaded) {
    if (VMD1jesRelativePtHFdn_branch != 0) {
      VMD1jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    VMD1jesRelativePtHFdn_isLoaded = true;
  }
  return VMD1jesRelativePtHFdn_;
}

const float &VVV0Tree::VMD2jesRelativePtHFdn() {
  if (not VMD2jesRelativePtHFdn_isLoaded) {
    if (VMD2jesRelativePtHFdn_branch != 0) {
      VMD2jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    VMD2jesRelativePtHFdn_isLoaded = true;
  }
  return VMD2jesRelativePtHFdn_;
}

const float &VVV0Tree::VMD3jesRelativePtHFdn() {
  if (not VMD3jesRelativePtHFdn_isLoaded) {
    if (VMD3jesRelativePtHFdn_branch != 0) {
      VMD3jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    VMD3jesRelativePtHFdn_isLoaded = true;
  }
  return VMD3jesRelativePtHFdn_;
}

const float &VVV0Tree::VMD4jesRelativePtHFdn() {
  if (not VMD4jesRelativePtHFdn_isLoaded) {
    if (VMD4jesRelativePtHFdn_branch != 0) {
      VMD4jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    VMD4jesRelativePtHFdn_isLoaded = true;
  }
  return VMD4jesRelativePtHFdn_;
}

const float &VVV0Tree::WMD0jesRelativePtHFdn() {
  if (not WMD0jesRelativePtHFdn_isLoaded) {
    if (WMD0jesRelativePtHFdn_branch != 0) {
      WMD0jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    WMD0jesRelativePtHFdn_isLoaded = true;
  }
  return WMD0jesRelativePtHFdn_;
}

const float &VVV0Tree::WMD1jesRelativePtHFdn() {
  if (not WMD1jesRelativePtHFdn_isLoaded) {
    if (WMD1jesRelativePtHFdn_branch != 0) {
      WMD1jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    WMD1jesRelativePtHFdn_isLoaded = true;
  }
  return WMD1jesRelativePtHFdn_;
}

const float &VVV0Tree::WMD2jesRelativePtHFdn() {
  if (not WMD2jesRelativePtHFdn_isLoaded) {
    if (WMD2jesRelativePtHFdn_branch != 0) {
      WMD2jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    WMD2jesRelativePtHFdn_isLoaded = true;
  }
  return WMD2jesRelativePtHFdn_;
}

const float &VVV0Tree::WMD3jesRelativePtHFdn() {
  if (not WMD3jesRelativePtHFdn_isLoaded) {
    if (WMD3jesRelativePtHFdn_branch != 0) {
      WMD3jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    WMD3jesRelativePtHFdn_isLoaded = true;
  }
  return WMD3jesRelativePtHFdn_;
}

const float &VVV0Tree::WMD4jesRelativePtHFdn() {
  if (not WMD4jesRelativePtHFdn_isLoaded) {
    if (WMD4jesRelativePtHFdn_branch != 0) {
      WMD4jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    WMD4jesRelativePtHFdn_isLoaded = true;
  }
  return WMD4jesRelativePtHFdn_;
}

const int &VVV0Tree::NQGen0jesRelativePtHFdn() {
  if (not NQGen0jesRelativePtHFdn_isLoaded) {
    if (NQGen0jesRelativePtHFdn_branch != 0) {
      NQGen0jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesRelativePtHFdn_isLoaded = true;
  }
  return NQGen0jesRelativePtHFdn_;
}

const int &VVV0Tree::NQGen1jesRelativePtHFdn() {
  if (not NQGen1jesRelativePtHFdn_isLoaded) {
    if (NQGen1jesRelativePtHFdn_branch != 0) {
      NQGen1jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesRelativePtHFdn_isLoaded = true;
  }
  return NQGen1jesRelativePtHFdn_;
}

const int &VVV0Tree::NQGen2jesRelativePtHFdn() {
  if (not NQGen2jesRelativePtHFdn_isLoaded) {
    if (NQGen2jesRelativePtHFdn_branch != 0) {
      NQGen2jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesRelativePtHFdn_isLoaded = true;
  }
  return NQGen2jesRelativePtHFdn_;
}

const int &VVV0Tree::NQGen3jesRelativePtHFdn() {
  if (not NQGen3jesRelativePtHFdn_isLoaded) {
    if (NQGen3jesRelativePtHFdn_branch != 0) {
      NQGen3jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesRelativePtHFdn_isLoaded = true;
  }
  return NQGen3jesRelativePtHFdn_;
}

const int &VVV0Tree::NQGen4jesRelativePtHFdn() {
  if (not NQGen4jesRelativePtHFdn_isLoaded) {
    if (NQGen4jesRelativePtHFdn_branch != 0) {
      NQGen4jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesRelativePtHFdn_isLoaded = true;
  }
  return NQGen4jesRelativePtHFdn_;
}

const int &VVV0Tree::NBGen0jesRelativePtHFdn() {
  if (not NBGen0jesRelativePtHFdn_isLoaded) {
    if (NBGen0jesRelativePtHFdn_branch != 0) {
      NBGen0jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesRelativePtHFdn_isLoaded = true;
  }
  return NBGen0jesRelativePtHFdn_;
}

const int &VVV0Tree::NBGen1jesRelativePtHFdn() {
  if (not NBGen1jesRelativePtHFdn_isLoaded) {
    if (NBGen1jesRelativePtHFdn_branch != 0) {
      NBGen1jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesRelativePtHFdn_isLoaded = true;
  }
  return NBGen1jesRelativePtHFdn_;
}

const int &VVV0Tree::NBGen2jesRelativePtHFdn() {
  if (not NBGen2jesRelativePtHFdn_isLoaded) {
    if (NBGen2jesRelativePtHFdn_branch != 0) {
      NBGen2jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesRelativePtHFdn_isLoaded = true;
  }
  return NBGen2jesRelativePtHFdn_;
}

const int &VVV0Tree::NBGen3jesRelativePtHFdn() {
  if (not NBGen3jesRelativePtHFdn_isLoaded) {
    if (NBGen3jesRelativePtHFdn_branch != 0) {
      NBGen3jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesRelativePtHFdn_isLoaded = true;
  }
  return NBGen3jesRelativePtHFdn_;
}

const int &VVV0Tree::NBGen4jesRelativePtHFdn() {
  if (not NBGen4jesRelativePtHFdn_isLoaded) {
    if (NBGen4jesRelativePtHFdn_branch != 0) {
      NBGen4jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesRelativePtHFdn_isLoaded = true;
  }
  return NBGen4jesRelativePtHFdn_;
}

const int &VVV0Tree::NLGen0jesRelativePtHFdn() {
  if (not NLGen0jesRelativePtHFdn_isLoaded) {
    if (NLGen0jesRelativePtHFdn_branch != 0) {
      NLGen0jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesRelativePtHFdn_isLoaded = true;
  }
  return NLGen0jesRelativePtHFdn_;
}

const int &VVV0Tree::NLGen1jesRelativePtHFdn() {
  if (not NLGen1jesRelativePtHFdn_isLoaded) {
    if (NLGen1jesRelativePtHFdn_branch != 0) {
      NLGen1jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesRelativePtHFdn_isLoaded = true;
  }
  return NLGen1jesRelativePtHFdn_;
}

const int &VVV0Tree::NLGen2jesRelativePtHFdn() {
  if (not NLGen2jesRelativePtHFdn_isLoaded) {
    if (NLGen2jesRelativePtHFdn_branch != 0) {
      NLGen2jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesRelativePtHFdn_isLoaded = true;
  }
  return NLGen2jesRelativePtHFdn_;
}

const int &VVV0Tree::NLGen3jesRelativePtHFdn() {
  if (not NLGen3jesRelativePtHFdn_isLoaded) {
    if (NLGen3jesRelativePtHFdn_branch != 0) {
      NLGen3jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesRelativePtHFdn_isLoaded = true;
  }
  return NLGen3jesRelativePtHFdn_;
}

const int &VVV0Tree::NLGen4jesRelativePtHFdn() {
  if (not NLGen4jesRelativePtHFdn_isLoaded) {
    if (NLGen4jesRelativePtHFdn_branch != 0) {
      NLGen4jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesRelativePtHFdn_isLoaded = true;
  }
  return NLGen4jesRelativePtHFdn_;
}

const int &VVV0Tree::NVQGen0jesRelativePtHFdn() {
  if (not NVQGen0jesRelativePtHFdn_isLoaded) {
    if (NVQGen0jesRelativePtHFdn_branch != 0) {
      NVQGen0jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesRelativePtHFdn_isLoaded = true;
  }
  return NVQGen0jesRelativePtHFdn_;
}

const int &VVV0Tree::NVQGen1jesRelativePtHFdn() {
  if (not NVQGen1jesRelativePtHFdn_isLoaded) {
    if (NVQGen1jesRelativePtHFdn_branch != 0) {
      NVQGen1jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesRelativePtHFdn_isLoaded = true;
  }
  return NVQGen1jesRelativePtHFdn_;
}

const int &VVV0Tree::NVQGen2jesRelativePtHFdn() {
  if (not NVQGen2jesRelativePtHFdn_isLoaded) {
    if (NVQGen2jesRelativePtHFdn_branch != 0) {
      NVQGen2jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesRelativePtHFdn_isLoaded = true;
  }
  return NVQGen2jesRelativePtHFdn_;
}

const int &VVV0Tree::NVQGen3jesRelativePtHFdn() {
  if (not NVQGen3jesRelativePtHFdn_isLoaded) {
    if (NVQGen3jesRelativePtHFdn_branch != 0) {
      NVQGen3jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesRelativePtHFdn_isLoaded = true;
  }
  return NVQGen3jesRelativePtHFdn_;
}

const int &VVV0Tree::NVQGen4jesRelativePtHFdn() {
  if (not NVQGen4jesRelativePtHFdn_isLoaded) {
    if (NVQGen4jesRelativePtHFdn_branch != 0) {
      NVQGen4jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesRelativePtHFdn_isLoaded = true;
  }
  return NVQGen4jesRelativePtHFdn_;
}

const int &VVV0Tree::NiFJjesRelativePtHFdn() {
  if (not NiFJjesRelativePtHFdn_isLoaded) {
    if (NiFJjesRelativePtHFdn_branch != 0) {
      NiFJjesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    NiFJjesRelativePtHFdn_isLoaded = true;
  }
  return NiFJjesRelativePtHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesRelativePtHFdn() {
  if (not iFJ0jesRelativePtHFdn_isLoaded) {
    if (iFJ0jesRelativePtHFdn_branch != 0) {
      iFJ0jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesRelativePtHFdn_isLoaded = true;
  }
  return *iFJ0jesRelativePtHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesRelativePtHFdn() {
  if (not iFJ1jesRelativePtHFdn_isLoaded) {
    if (iFJ1jesRelativePtHFdn_branch != 0) {
      iFJ1jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesRelativePtHFdn_isLoaded = true;
  }
  return *iFJ1jesRelativePtHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesRelativePtHFdn() {
  if (not iFJ2jesRelativePtHFdn_isLoaded) {
    if (iFJ2jesRelativePtHFdn_branch != 0) {
      iFJ2jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesRelativePtHFdn_isLoaded = true;
  }
  return *iFJ2jesRelativePtHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesRelativePtHFdn() {
  if (not iFJ3jesRelativePtHFdn_isLoaded) {
    if (iFJ3jesRelativePtHFdn_branch != 0) {
      iFJ3jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesRelativePtHFdn_isLoaded = true;
  }
  return *iFJ3jesRelativePtHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesRelativePtHFdn() {
  if (not iFJ4jesRelativePtHFdn_isLoaded) {
    if (iFJ4jesRelativePtHFdn_branch != 0) {
      iFJ4jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesRelativePtHFdn_isLoaded = true;
  }
  return *iFJ4jesRelativePtHFdn_;
}

const float &VVV0Tree::iVMD0jesRelativePtHFdn() {
  if (not iVMD0jesRelativePtHFdn_isLoaded) {
    if (iVMD0jesRelativePtHFdn_branch != 0) {
      iVMD0jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesRelativePtHFdn_isLoaded = true;
  }
  return iVMD0jesRelativePtHFdn_;
}

const float &VVV0Tree::iVMD1jesRelativePtHFdn() {
  if (not iVMD1jesRelativePtHFdn_isLoaded) {
    if (iVMD1jesRelativePtHFdn_branch != 0) {
      iVMD1jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesRelativePtHFdn_isLoaded = true;
  }
  return iVMD1jesRelativePtHFdn_;
}

const float &VVV0Tree::iVMD2jesRelativePtHFdn() {
  if (not iVMD2jesRelativePtHFdn_isLoaded) {
    if (iVMD2jesRelativePtHFdn_branch != 0) {
      iVMD2jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesRelativePtHFdn_isLoaded = true;
  }
  return iVMD2jesRelativePtHFdn_;
}

const float &VVV0Tree::iVMD3jesRelativePtHFdn() {
  if (not iVMD3jesRelativePtHFdn_isLoaded) {
    if (iVMD3jesRelativePtHFdn_branch != 0) {
      iVMD3jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesRelativePtHFdn_isLoaded = true;
  }
  return iVMD3jesRelativePtHFdn_;
}

const float &VVV0Tree::iVMD4jesRelativePtHFdn() {
  if (not iVMD4jesRelativePtHFdn_isLoaded) {
    if (iVMD4jesRelativePtHFdn_branch != 0) {
      iVMD4jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesRelativePtHFdn_isLoaded = true;
  }
  return iVMD4jesRelativePtHFdn_;
}

const float &VVV0Tree::iWMD0jesRelativePtHFdn() {
  if (not iWMD0jesRelativePtHFdn_isLoaded) {
    if (iWMD0jesRelativePtHFdn_branch != 0) {
      iWMD0jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesRelativePtHFdn_isLoaded = true;
  }
  return iWMD0jesRelativePtHFdn_;
}

const float &VVV0Tree::iWMD1jesRelativePtHFdn() {
  if (not iWMD1jesRelativePtHFdn_isLoaded) {
    if (iWMD1jesRelativePtHFdn_branch != 0) {
      iWMD1jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesRelativePtHFdn_isLoaded = true;
  }
  return iWMD1jesRelativePtHFdn_;
}

const float &VVV0Tree::iWMD2jesRelativePtHFdn() {
  if (not iWMD2jesRelativePtHFdn_isLoaded) {
    if (iWMD2jesRelativePtHFdn_branch != 0) {
      iWMD2jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesRelativePtHFdn_isLoaded = true;
  }
  return iWMD2jesRelativePtHFdn_;
}

const float &VVV0Tree::iWMD3jesRelativePtHFdn() {
  if (not iWMD3jesRelativePtHFdn_isLoaded) {
    if (iWMD3jesRelativePtHFdn_branch != 0) {
      iWMD3jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesRelativePtHFdn_isLoaded = true;
  }
  return iWMD3jesRelativePtHFdn_;
}

const float &VVV0Tree::iWMD4jesRelativePtHFdn() {
  if (not iWMD4jesRelativePtHFdn_isLoaded) {
    if (iWMD4jesRelativePtHFdn_branch != 0) {
      iWMD4jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesRelativePtHFdn_isLoaded = true;
  }
  return iWMD4jesRelativePtHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesRelativePtHFdn() {
  if (not METjesRelativePtHFdn_isLoaded) {
    if (METjesRelativePtHFdn_branch != 0) {
      METjesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch METjesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    METjesRelativePtHFdn_isLoaded = true;
  }
  return *METjesRelativePtHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesRelativePtHFdn() {
  if (not NujesRelativePtHFdn_isLoaded) {
    if (NujesRelativePtHFdn_branch != 0) {
      NujesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NujesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    NujesRelativePtHFdn_isLoaded = true;
  }
  return *NujesRelativePtHFdn_;
}

const int &VVV0Tree::NJjesRelativePtHFdn() {
  if (not NJjesRelativePtHFdn_isLoaded) {
    if (NJjesRelativePtHFdn_branch != 0) {
      NJjesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NJjesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    NJjesRelativePtHFdn_isLoaded = true;
  }
  return NJjesRelativePtHFdn_;
}

const int &VVV0Tree::NbLoosejesRelativePtHFdn() {
  if (not NbLoosejesRelativePtHFdn_isLoaded) {
    if (NbLoosejesRelativePtHFdn_branch != 0) {
      NbLoosejesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesRelativePtHFdn_isLoaded = true;
  }
  return NbLoosejesRelativePtHFdn_;
}

const int &VVV0Tree::NbMediumjesRelativePtHFdn() {
  if (not NbMediumjesRelativePtHFdn_isLoaded) {
    if (NbMediumjesRelativePtHFdn_branch != 0) {
      NbMediumjesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesRelativePtHFdn_isLoaded = true;
  }
  return NbMediumjesRelativePtHFdn_;
}

const int &VVV0Tree::NbTightjesRelativePtHFdn() {
  if (not NbTightjesRelativePtHFdn_isLoaded) {
    if (NbTightjesRelativePtHFdn_branch != 0) {
      NbTightjesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    NbTightjesRelativePtHFdn_isLoaded = true;
  }
  return NbTightjesRelativePtHFdn_;
}

const int &VVV0Tree::NoORNbLoosejesRelativePtHFdn() {
  if (not NoORNbLoosejesRelativePtHFdn_isLoaded) {
    if (NoORNbLoosejesRelativePtHFdn_branch != 0) {
      NoORNbLoosejesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesRelativePtHFdn_isLoaded = true;
  }
  return NoORNbLoosejesRelativePtHFdn_;
}

const int &VVV0Tree::NoORNbMediumjesRelativePtHFdn() {
  if (not NoORNbMediumjesRelativePtHFdn_isLoaded) {
    if (NoORNbMediumjesRelativePtHFdn_branch != 0) {
      NoORNbMediumjesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesRelativePtHFdn_isLoaded = true;
  }
  return NoORNbMediumjesRelativePtHFdn_;
}

const int &VVV0Tree::NoORNbTightjesRelativePtHFdn() {
  if (not NoORNbTightjesRelativePtHFdn_isLoaded) {
    if (NoORNbTightjesRelativePtHFdn_branch != 0) {
      NoORNbTightjesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesRelativePtHFdn_isLoaded = true;
  }
  return NoORNbTightjesRelativePtHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesRelativePtHFdn() {
  if (not J0jesRelativePtHFdn_isLoaded) {
    if (J0jesRelativePtHFdn_branch != 0) {
      J0jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch J0jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    J0jesRelativePtHFdn_isLoaded = true;
  }
  return *J0jesRelativePtHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesRelativePtHFdn() {
  if (not J1jesRelativePtHFdn_isLoaded) {
    if (J1jesRelativePtHFdn_branch != 0) {
      J1jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch J1jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    J1jesRelativePtHFdn_isLoaded = true;
  }
  return *J1jesRelativePtHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesRelativePtHFdn() {
  if (not J2jesRelativePtHFdn_isLoaded) {
    if (J2jesRelativePtHFdn_branch != 0) {
      J2jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch J2jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    J2jesRelativePtHFdn_isLoaded = true;
  }
  return *J2jesRelativePtHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesRelativePtHFdn() {
  if (not J3jesRelativePtHFdn_isLoaded) {
    if (J3jesRelativePtHFdn_branch != 0) {
      J3jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch J3jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    J3jesRelativePtHFdn_isLoaded = true;
  }
  return *J3jesRelativePtHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesRelativePtHFdn() {
  if (not J4jesRelativePtHFdn_isLoaded) {
    if (J4jesRelativePtHFdn_branch != 0) {
      J4jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch J4jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    J4jesRelativePtHFdn_isLoaded = true;
  }
  return *J4jesRelativePtHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesRelativePtHFdn() {
  if (not J5jesRelativePtHFdn_isLoaded) {
    if (J5jesRelativePtHFdn_branch != 0) {
      J5jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch J5jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    J5jesRelativePtHFdn_isLoaded = true;
  }
  return *J5jesRelativePtHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesRelativePtHFdn() {
  if (not J6jesRelativePtHFdn_isLoaded) {
    if (J6jesRelativePtHFdn_branch != 0) {
      J6jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch J6jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    J6jesRelativePtHFdn_isLoaded = true;
  }
  return *J6jesRelativePtHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesRelativePtHFdn() {
  if (not J7jesRelativePtHFdn_isLoaded) {
    if (J7jesRelativePtHFdn_branch != 0) {
      J7jesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch J7jesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    J7jesRelativePtHFdn_isLoaded = true;
  }
  return *J7jesRelativePtHFdn_;
}

const vector<int> &VVV0Tree::NQJGenjesRelativePtHFdn() {
  if (not NQJGenjesRelativePtHFdn_isLoaded) {
    if (NQJGenjesRelativePtHFdn_branch != 0) {
      NQJGenjesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesRelativePtHFdn_isLoaded = true;
  }
  return *NQJGenjesRelativePtHFdn_;
}

const vector<int> &VVV0Tree::NBJGenjesRelativePtHFdn() {
  if (not NBJGenjesRelativePtHFdn_isLoaded) {
    if (NBJGenjesRelativePtHFdn_branch != 0) {
      NBJGenjesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesRelativePtHFdn_isLoaded = true;
  }
  return *NBJGenjesRelativePtHFdn_;
}

const vector<int> &VVV0Tree::NLJGenjesRelativePtHFdn() {
  if (not NLJGenjesRelativePtHFdn_isLoaded) {
    if (NLJGenjesRelativePtHFdn_branch != 0) {
      NLJGenjesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesRelativePtHFdn_isLoaded = true;
  }
  return *NLJGenjesRelativePtHFdn_;
}

const float &VVV0Tree::MVVXjesRelativePtHFdn() {
  if (not MVVXjesRelativePtHFdn_isLoaded) {
    if (MVVXjesRelativePtHFdn_branch != 0) {
      MVVXjesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    MVVXjesRelativePtHFdn_isLoaded = true;
  }
  return MVVXjesRelativePtHFdn_;
}

const float &VVV0Tree::PtVVXjesRelativePtHFdn() {
  if (not PtVVXjesRelativePtHFdn_isLoaded) {
    if (PtVVXjesRelativePtHFdn_branch != 0) {
      PtVVXjesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesRelativePtHFdn_isLoaded = true;
  }
  return PtVVXjesRelativePtHFdn_;
}

const float &VVV0Tree::HTjesRelativePtHFdn() {
  if (not HTjesRelativePtHFdn_isLoaded) {
    if (HTjesRelativePtHFdn_branch != 0) {
      HTjesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch HTjesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    HTjesRelativePtHFdn_isLoaded = true;
  }
  return HTjesRelativePtHFdn_;
}

const float &VVV0Tree::HTJjesRelativePtHFdn() {
  if (not HTJjesRelativePtHFdn_isLoaded) {
    if (HTJjesRelativePtHFdn_branch != 0) {
      HTJjesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch HTJjesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    HTJjesRelativePtHFdn_isLoaded = true;
  }
  return HTJjesRelativePtHFdn_;
}

const float &VVV0Tree::HTFJjesRelativePtHFdn() {
  if (not HTFJjesRelativePtHFdn_isLoaded) {
    if (HTFJjesRelativePtHFdn_branch != 0) {
      HTFJjesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    HTFJjesRelativePtHFdn_isLoaded = true;
  }
  return HTFJjesRelativePtHFdn_;
}

const float &VVV0Tree::SumPtFJjesRelativePtHFdn() {
  if (not SumPtFJjesRelativePtHFdn_isLoaded) {
    if (SumPtFJjesRelativePtHFdn_branch != 0) {
      SumPtFJjesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesRelativePtHFdn_isLoaded = true;
  }
  return SumPtFJjesRelativePtHFdn_;
}

const float &VVV0Tree::SumPtJjesRelativePtHFdn() {
  if (not SumPtJjesRelativePtHFdn_isLoaded) {
    if (SumPtJjesRelativePtHFdn_branch != 0) {
      SumPtJjesRelativePtHFdn_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesRelativePtHFdn_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesRelativePtHFdn_isLoaded = true;
  }
  return SumPtJjesRelativePtHFdn_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesRelativeBalup() {
  if (not JsjesRelativeBalup_isLoaded) {
    if (JsjesRelativeBalup_branch != 0) {
      JsjesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch JsjesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    JsjesRelativeBalup_isLoaded = true;
  }
  return *JsjesRelativeBalup_;
}

const int &VVV0Tree::NFJjesRelativeBalup() {
  if (not NFJjesRelativeBalup_isLoaded) {
    if (NFJjesRelativeBalup_branch != 0) {
      NFJjesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch NFJjesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    NFJjesRelativeBalup_isLoaded = true;
  }
  return NFJjesRelativeBalup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesRelativeBalup() {
  if (not FJ0jesRelativeBalup_isLoaded) {
    if (FJ0jesRelativeBalup_branch != 0) {
      FJ0jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    FJ0jesRelativeBalup_isLoaded = true;
  }
  return *FJ0jesRelativeBalup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesRelativeBalup() {
  if (not FJ1jesRelativeBalup_isLoaded) {
    if (FJ1jesRelativeBalup_branch != 0) {
      FJ1jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    FJ1jesRelativeBalup_isLoaded = true;
  }
  return *FJ1jesRelativeBalup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesRelativeBalup() {
  if (not FJ2jesRelativeBalup_isLoaded) {
    if (FJ2jesRelativeBalup_branch != 0) {
      FJ2jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    FJ2jesRelativeBalup_isLoaded = true;
  }
  return *FJ2jesRelativeBalup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesRelativeBalup() {
  if (not FJ3jesRelativeBalup_isLoaded) {
    if (FJ3jesRelativeBalup_branch != 0) {
      FJ3jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    FJ3jesRelativeBalup_isLoaded = true;
  }
  return *FJ3jesRelativeBalup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesRelativeBalup() {
  if (not FJ4jesRelativeBalup_isLoaded) {
    if (FJ4jesRelativeBalup_branch != 0) {
      FJ4jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    FJ4jesRelativeBalup_isLoaded = true;
  }
  return *FJ4jesRelativeBalup_;
}

const float &VVV0Tree::VMD0jesRelativeBalup() {
  if (not VMD0jesRelativeBalup_isLoaded) {
    if (VMD0jesRelativeBalup_branch != 0) {
      VMD0jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    VMD0jesRelativeBalup_isLoaded = true;
  }
  return VMD0jesRelativeBalup_;
}

const float &VVV0Tree::VMD1jesRelativeBalup() {
  if (not VMD1jesRelativeBalup_isLoaded) {
    if (VMD1jesRelativeBalup_branch != 0) {
      VMD1jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    VMD1jesRelativeBalup_isLoaded = true;
  }
  return VMD1jesRelativeBalup_;
}

const float &VVV0Tree::VMD2jesRelativeBalup() {
  if (not VMD2jesRelativeBalup_isLoaded) {
    if (VMD2jesRelativeBalup_branch != 0) {
      VMD2jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    VMD2jesRelativeBalup_isLoaded = true;
  }
  return VMD2jesRelativeBalup_;
}

const float &VVV0Tree::VMD3jesRelativeBalup() {
  if (not VMD3jesRelativeBalup_isLoaded) {
    if (VMD3jesRelativeBalup_branch != 0) {
      VMD3jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    VMD3jesRelativeBalup_isLoaded = true;
  }
  return VMD3jesRelativeBalup_;
}

const float &VVV0Tree::VMD4jesRelativeBalup() {
  if (not VMD4jesRelativeBalup_isLoaded) {
    if (VMD4jesRelativeBalup_branch != 0) {
      VMD4jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    VMD4jesRelativeBalup_isLoaded = true;
  }
  return VMD4jesRelativeBalup_;
}

const float &VVV0Tree::WMD0jesRelativeBalup() {
  if (not WMD0jesRelativeBalup_isLoaded) {
    if (WMD0jesRelativeBalup_branch != 0) {
      WMD0jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    WMD0jesRelativeBalup_isLoaded = true;
  }
  return WMD0jesRelativeBalup_;
}

const float &VVV0Tree::WMD1jesRelativeBalup() {
  if (not WMD1jesRelativeBalup_isLoaded) {
    if (WMD1jesRelativeBalup_branch != 0) {
      WMD1jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    WMD1jesRelativeBalup_isLoaded = true;
  }
  return WMD1jesRelativeBalup_;
}

const float &VVV0Tree::WMD2jesRelativeBalup() {
  if (not WMD2jesRelativeBalup_isLoaded) {
    if (WMD2jesRelativeBalup_branch != 0) {
      WMD2jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    WMD2jesRelativeBalup_isLoaded = true;
  }
  return WMD2jesRelativeBalup_;
}

const float &VVV0Tree::WMD3jesRelativeBalup() {
  if (not WMD3jesRelativeBalup_isLoaded) {
    if (WMD3jesRelativeBalup_branch != 0) {
      WMD3jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    WMD3jesRelativeBalup_isLoaded = true;
  }
  return WMD3jesRelativeBalup_;
}

const float &VVV0Tree::WMD4jesRelativeBalup() {
  if (not WMD4jesRelativeBalup_isLoaded) {
    if (WMD4jesRelativeBalup_branch != 0) {
      WMD4jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    WMD4jesRelativeBalup_isLoaded = true;
  }
  return WMD4jesRelativeBalup_;
}

const int &VVV0Tree::NQGen0jesRelativeBalup() {
  if (not NQGen0jesRelativeBalup_isLoaded) {
    if (NQGen0jesRelativeBalup_branch != 0) {
      NQGen0jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesRelativeBalup_isLoaded = true;
  }
  return NQGen0jesRelativeBalup_;
}

const int &VVV0Tree::NQGen1jesRelativeBalup() {
  if (not NQGen1jesRelativeBalup_isLoaded) {
    if (NQGen1jesRelativeBalup_branch != 0) {
      NQGen1jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesRelativeBalup_isLoaded = true;
  }
  return NQGen1jesRelativeBalup_;
}

const int &VVV0Tree::NQGen2jesRelativeBalup() {
  if (not NQGen2jesRelativeBalup_isLoaded) {
    if (NQGen2jesRelativeBalup_branch != 0) {
      NQGen2jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesRelativeBalup_isLoaded = true;
  }
  return NQGen2jesRelativeBalup_;
}

const int &VVV0Tree::NQGen3jesRelativeBalup() {
  if (not NQGen3jesRelativeBalup_isLoaded) {
    if (NQGen3jesRelativeBalup_branch != 0) {
      NQGen3jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesRelativeBalup_isLoaded = true;
  }
  return NQGen3jesRelativeBalup_;
}

const int &VVV0Tree::NQGen4jesRelativeBalup() {
  if (not NQGen4jesRelativeBalup_isLoaded) {
    if (NQGen4jesRelativeBalup_branch != 0) {
      NQGen4jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesRelativeBalup_isLoaded = true;
  }
  return NQGen4jesRelativeBalup_;
}

const int &VVV0Tree::NBGen0jesRelativeBalup() {
  if (not NBGen0jesRelativeBalup_isLoaded) {
    if (NBGen0jesRelativeBalup_branch != 0) {
      NBGen0jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesRelativeBalup_isLoaded = true;
  }
  return NBGen0jesRelativeBalup_;
}

const int &VVV0Tree::NBGen1jesRelativeBalup() {
  if (not NBGen1jesRelativeBalup_isLoaded) {
    if (NBGen1jesRelativeBalup_branch != 0) {
      NBGen1jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesRelativeBalup_isLoaded = true;
  }
  return NBGen1jesRelativeBalup_;
}

const int &VVV0Tree::NBGen2jesRelativeBalup() {
  if (not NBGen2jesRelativeBalup_isLoaded) {
    if (NBGen2jesRelativeBalup_branch != 0) {
      NBGen2jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesRelativeBalup_isLoaded = true;
  }
  return NBGen2jesRelativeBalup_;
}

const int &VVV0Tree::NBGen3jesRelativeBalup() {
  if (not NBGen3jesRelativeBalup_isLoaded) {
    if (NBGen3jesRelativeBalup_branch != 0) {
      NBGen3jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesRelativeBalup_isLoaded = true;
  }
  return NBGen3jesRelativeBalup_;
}

const int &VVV0Tree::NBGen4jesRelativeBalup() {
  if (not NBGen4jesRelativeBalup_isLoaded) {
    if (NBGen4jesRelativeBalup_branch != 0) {
      NBGen4jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesRelativeBalup_isLoaded = true;
  }
  return NBGen4jesRelativeBalup_;
}

const int &VVV0Tree::NLGen0jesRelativeBalup() {
  if (not NLGen0jesRelativeBalup_isLoaded) {
    if (NLGen0jesRelativeBalup_branch != 0) {
      NLGen0jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesRelativeBalup_isLoaded = true;
  }
  return NLGen0jesRelativeBalup_;
}

const int &VVV0Tree::NLGen1jesRelativeBalup() {
  if (not NLGen1jesRelativeBalup_isLoaded) {
    if (NLGen1jesRelativeBalup_branch != 0) {
      NLGen1jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesRelativeBalup_isLoaded = true;
  }
  return NLGen1jesRelativeBalup_;
}

const int &VVV0Tree::NLGen2jesRelativeBalup() {
  if (not NLGen2jesRelativeBalup_isLoaded) {
    if (NLGen2jesRelativeBalup_branch != 0) {
      NLGen2jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesRelativeBalup_isLoaded = true;
  }
  return NLGen2jesRelativeBalup_;
}

const int &VVV0Tree::NLGen3jesRelativeBalup() {
  if (not NLGen3jesRelativeBalup_isLoaded) {
    if (NLGen3jesRelativeBalup_branch != 0) {
      NLGen3jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesRelativeBalup_isLoaded = true;
  }
  return NLGen3jesRelativeBalup_;
}

const int &VVV0Tree::NLGen4jesRelativeBalup() {
  if (not NLGen4jesRelativeBalup_isLoaded) {
    if (NLGen4jesRelativeBalup_branch != 0) {
      NLGen4jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesRelativeBalup_isLoaded = true;
  }
  return NLGen4jesRelativeBalup_;
}

const int &VVV0Tree::NVQGen0jesRelativeBalup() {
  if (not NVQGen0jesRelativeBalup_isLoaded) {
    if (NVQGen0jesRelativeBalup_branch != 0) {
      NVQGen0jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesRelativeBalup_isLoaded = true;
  }
  return NVQGen0jesRelativeBalup_;
}

const int &VVV0Tree::NVQGen1jesRelativeBalup() {
  if (not NVQGen1jesRelativeBalup_isLoaded) {
    if (NVQGen1jesRelativeBalup_branch != 0) {
      NVQGen1jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesRelativeBalup_isLoaded = true;
  }
  return NVQGen1jesRelativeBalup_;
}

const int &VVV0Tree::NVQGen2jesRelativeBalup() {
  if (not NVQGen2jesRelativeBalup_isLoaded) {
    if (NVQGen2jesRelativeBalup_branch != 0) {
      NVQGen2jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesRelativeBalup_isLoaded = true;
  }
  return NVQGen2jesRelativeBalup_;
}

const int &VVV0Tree::NVQGen3jesRelativeBalup() {
  if (not NVQGen3jesRelativeBalup_isLoaded) {
    if (NVQGen3jesRelativeBalup_branch != 0) {
      NVQGen3jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesRelativeBalup_isLoaded = true;
  }
  return NVQGen3jesRelativeBalup_;
}

const int &VVV0Tree::NVQGen4jesRelativeBalup() {
  if (not NVQGen4jesRelativeBalup_isLoaded) {
    if (NVQGen4jesRelativeBalup_branch != 0) {
      NVQGen4jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesRelativeBalup_isLoaded = true;
  }
  return NVQGen4jesRelativeBalup_;
}

const int &VVV0Tree::NiFJjesRelativeBalup() {
  if (not NiFJjesRelativeBalup_isLoaded) {
    if (NiFJjesRelativeBalup_branch != 0) {
      NiFJjesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    NiFJjesRelativeBalup_isLoaded = true;
  }
  return NiFJjesRelativeBalup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesRelativeBalup() {
  if (not iFJ0jesRelativeBalup_isLoaded) {
    if (iFJ0jesRelativeBalup_branch != 0) {
      iFJ0jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesRelativeBalup_isLoaded = true;
  }
  return *iFJ0jesRelativeBalup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesRelativeBalup() {
  if (not iFJ1jesRelativeBalup_isLoaded) {
    if (iFJ1jesRelativeBalup_branch != 0) {
      iFJ1jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesRelativeBalup_isLoaded = true;
  }
  return *iFJ1jesRelativeBalup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesRelativeBalup() {
  if (not iFJ2jesRelativeBalup_isLoaded) {
    if (iFJ2jesRelativeBalup_branch != 0) {
      iFJ2jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesRelativeBalup_isLoaded = true;
  }
  return *iFJ2jesRelativeBalup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesRelativeBalup() {
  if (not iFJ3jesRelativeBalup_isLoaded) {
    if (iFJ3jesRelativeBalup_branch != 0) {
      iFJ3jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesRelativeBalup_isLoaded = true;
  }
  return *iFJ3jesRelativeBalup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesRelativeBalup() {
  if (not iFJ4jesRelativeBalup_isLoaded) {
    if (iFJ4jesRelativeBalup_branch != 0) {
      iFJ4jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesRelativeBalup_isLoaded = true;
  }
  return *iFJ4jesRelativeBalup_;
}

const float &VVV0Tree::iVMD0jesRelativeBalup() {
  if (not iVMD0jesRelativeBalup_isLoaded) {
    if (iVMD0jesRelativeBalup_branch != 0) {
      iVMD0jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesRelativeBalup_isLoaded = true;
  }
  return iVMD0jesRelativeBalup_;
}

const float &VVV0Tree::iVMD1jesRelativeBalup() {
  if (not iVMD1jesRelativeBalup_isLoaded) {
    if (iVMD1jesRelativeBalup_branch != 0) {
      iVMD1jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesRelativeBalup_isLoaded = true;
  }
  return iVMD1jesRelativeBalup_;
}

const float &VVV0Tree::iVMD2jesRelativeBalup() {
  if (not iVMD2jesRelativeBalup_isLoaded) {
    if (iVMD2jesRelativeBalup_branch != 0) {
      iVMD2jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesRelativeBalup_isLoaded = true;
  }
  return iVMD2jesRelativeBalup_;
}

const float &VVV0Tree::iVMD3jesRelativeBalup() {
  if (not iVMD3jesRelativeBalup_isLoaded) {
    if (iVMD3jesRelativeBalup_branch != 0) {
      iVMD3jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesRelativeBalup_isLoaded = true;
  }
  return iVMD3jesRelativeBalup_;
}

const float &VVV0Tree::iVMD4jesRelativeBalup() {
  if (not iVMD4jesRelativeBalup_isLoaded) {
    if (iVMD4jesRelativeBalup_branch != 0) {
      iVMD4jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesRelativeBalup_isLoaded = true;
  }
  return iVMD4jesRelativeBalup_;
}

const float &VVV0Tree::iWMD0jesRelativeBalup() {
  if (not iWMD0jesRelativeBalup_isLoaded) {
    if (iWMD0jesRelativeBalup_branch != 0) {
      iWMD0jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesRelativeBalup_isLoaded = true;
  }
  return iWMD0jesRelativeBalup_;
}

const float &VVV0Tree::iWMD1jesRelativeBalup() {
  if (not iWMD1jesRelativeBalup_isLoaded) {
    if (iWMD1jesRelativeBalup_branch != 0) {
      iWMD1jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesRelativeBalup_isLoaded = true;
  }
  return iWMD1jesRelativeBalup_;
}

const float &VVV0Tree::iWMD2jesRelativeBalup() {
  if (not iWMD2jesRelativeBalup_isLoaded) {
    if (iWMD2jesRelativeBalup_branch != 0) {
      iWMD2jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesRelativeBalup_isLoaded = true;
  }
  return iWMD2jesRelativeBalup_;
}

const float &VVV0Tree::iWMD3jesRelativeBalup() {
  if (not iWMD3jesRelativeBalup_isLoaded) {
    if (iWMD3jesRelativeBalup_branch != 0) {
      iWMD3jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesRelativeBalup_isLoaded = true;
  }
  return iWMD3jesRelativeBalup_;
}

const float &VVV0Tree::iWMD4jesRelativeBalup() {
  if (not iWMD4jesRelativeBalup_isLoaded) {
    if (iWMD4jesRelativeBalup_branch != 0) {
      iWMD4jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesRelativeBalup_isLoaded = true;
  }
  return iWMD4jesRelativeBalup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesRelativeBalup() {
  if (not METjesRelativeBalup_isLoaded) {
    if (METjesRelativeBalup_branch != 0) {
      METjesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch METjesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    METjesRelativeBalup_isLoaded = true;
  }
  return *METjesRelativeBalup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesRelativeBalup() {
  if (not NujesRelativeBalup_isLoaded) {
    if (NujesRelativeBalup_branch != 0) {
      NujesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch NujesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    NujesRelativeBalup_isLoaded = true;
  }
  return *NujesRelativeBalup_;
}

const int &VVV0Tree::NJjesRelativeBalup() {
  if (not NJjesRelativeBalup_isLoaded) {
    if (NJjesRelativeBalup_branch != 0) {
      NJjesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch NJjesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    NJjesRelativeBalup_isLoaded = true;
  }
  return NJjesRelativeBalup_;
}

const int &VVV0Tree::NbLoosejesRelativeBalup() {
  if (not NbLoosejesRelativeBalup_isLoaded) {
    if (NbLoosejesRelativeBalup_branch != 0) {
      NbLoosejesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesRelativeBalup_isLoaded = true;
  }
  return NbLoosejesRelativeBalup_;
}

const int &VVV0Tree::NbMediumjesRelativeBalup() {
  if (not NbMediumjesRelativeBalup_isLoaded) {
    if (NbMediumjesRelativeBalup_branch != 0) {
      NbMediumjesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesRelativeBalup_isLoaded = true;
  }
  return NbMediumjesRelativeBalup_;
}

const int &VVV0Tree::NbTightjesRelativeBalup() {
  if (not NbTightjesRelativeBalup_isLoaded) {
    if (NbTightjesRelativeBalup_branch != 0) {
      NbTightjesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    NbTightjesRelativeBalup_isLoaded = true;
  }
  return NbTightjesRelativeBalup_;
}

const int &VVV0Tree::NoORNbLoosejesRelativeBalup() {
  if (not NoORNbLoosejesRelativeBalup_isLoaded) {
    if (NoORNbLoosejesRelativeBalup_branch != 0) {
      NoORNbLoosejesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesRelativeBalup_isLoaded = true;
  }
  return NoORNbLoosejesRelativeBalup_;
}

const int &VVV0Tree::NoORNbMediumjesRelativeBalup() {
  if (not NoORNbMediumjesRelativeBalup_isLoaded) {
    if (NoORNbMediumjesRelativeBalup_branch != 0) {
      NoORNbMediumjesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesRelativeBalup_isLoaded = true;
  }
  return NoORNbMediumjesRelativeBalup_;
}

const int &VVV0Tree::NoORNbTightjesRelativeBalup() {
  if (not NoORNbTightjesRelativeBalup_isLoaded) {
    if (NoORNbTightjesRelativeBalup_branch != 0) {
      NoORNbTightjesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesRelativeBalup_isLoaded = true;
  }
  return NoORNbTightjesRelativeBalup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesRelativeBalup() {
  if (not J0jesRelativeBalup_isLoaded) {
    if (J0jesRelativeBalup_branch != 0) {
      J0jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch J0jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    J0jesRelativeBalup_isLoaded = true;
  }
  return *J0jesRelativeBalup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesRelativeBalup() {
  if (not J1jesRelativeBalup_isLoaded) {
    if (J1jesRelativeBalup_branch != 0) {
      J1jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch J1jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    J1jesRelativeBalup_isLoaded = true;
  }
  return *J1jesRelativeBalup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesRelativeBalup() {
  if (not J2jesRelativeBalup_isLoaded) {
    if (J2jesRelativeBalup_branch != 0) {
      J2jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch J2jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    J2jesRelativeBalup_isLoaded = true;
  }
  return *J2jesRelativeBalup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesRelativeBalup() {
  if (not J3jesRelativeBalup_isLoaded) {
    if (J3jesRelativeBalup_branch != 0) {
      J3jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch J3jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    J3jesRelativeBalup_isLoaded = true;
  }
  return *J3jesRelativeBalup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesRelativeBalup() {
  if (not J4jesRelativeBalup_isLoaded) {
    if (J4jesRelativeBalup_branch != 0) {
      J4jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch J4jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    J4jesRelativeBalup_isLoaded = true;
  }
  return *J4jesRelativeBalup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesRelativeBalup() {
  if (not J5jesRelativeBalup_isLoaded) {
    if (J5jesRelativeBalup_branch != 0) {
      J5jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch J5jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    J5jesRelativeBalup_isLoaded = true;
  }
  return *J5jesRelativeBalup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesRelativeBalup() {
  if (not J6jesRelativeBalup_isLoaded) {
    if (J6jesRelativeBalup_branch != 0) {
      J6jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch J6jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    J6jesRelativeBalup_isLoaded = true;
  }
  return *J6jesRelativeBalup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesRelativeBalup() {
  if (not J7jesRelativeBalup_isLoaded) {
    if (J7jesRelativeBalup_branch != 0) {
      J7jesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch J7jesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    J7jesRelativeBalup_isLoaded = true;
  }
  return *J7jesRelativeBalup_;
}

const vector<int> &VVV0Tree::NQJGenjesRelativeBalup() {
  if (not NQJGenjesRelativeBalup_isLoaded) {
    if (NQJGenjesRelativeBalup_branch != 0) {
      NQJGenjesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesRelativeBalup_isLoaded = true;
  }
  return *NQJGenjesRelativeBalup_;
}

const vector<int> &VVV0Tree::NBJGenjesRelativeBalup() {
  if (not NBJGenjesRelativeBalup_isLoaded) {
    if (NBJGenjesRelativeBalup_branch != 0) {
      NBJGenjesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesRelativeBalup_isLoaded = true;
  }
  return *NBJGenjesRelativeBalup_;
}

const vector<int> &VVV0Tree::NLJGenjesRelativeBalup() {
  if (not NLJGenjesRelativeBalup_isLoaded) {
    if (NLJGenjesRelativeBalup_branch != 0) {
      NLJGenjesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesRelativeBalup_isLoaded = true;
  }
  return *NLJGenjesRelativeBalup_;
}

const float &VVV0Tree::MVVXjesRelativeBalup() {
  if (not MVVXjesRelativeBalup_isLoaded) {
    if (MVVXjesRelativeBalup_branch != 0) {
      MVVXjesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    MVVXjesRelativeBalup_isLoaded = true;
  }
  return MVVXjesRelativeBalup_;
}

const float &VVV0Tree::PtVVXjesRelativeBalup() {
  if (not PtVVXjesRelativeBalup_isLoaded) {
    if (PtVVXjesRelativeBalup_branch != 0) {
      PtVVXjesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesRelativeBalup_isLoaded = true;
  }
  return PtVVXjesRelativeBalup_;
}

const float &VVV0Tree::HTjesRelativeBalup() {
  if (not HTjesRelativeBalup_isLoaded) {
    if (HTjesRelativeBalup_branch != 0) {
      HTjesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch HTjesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    HTjesRelativeBalup_isLoaded = true;
  }
  return HTjesRelativeBalup_;
}

const float &VVV0Tree::HTJjesRelativeBalup() {
  if (not HTJjesRelativeBalup_isLoaded) {
    if (HTJjesRelativeBalup_branch != 0) {
      HTJjesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch HTJjesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    HTJjesRelativeBalup_isLoaded = true;
  }
  return HTJjesRelativeBalup_;
}

const float &VVV0Tree::HTFJjesRelativeBalup() {
  if (not HTFJjesRelativeBalup_isLoaded) {
    if (HTFJjesRelativeBalup_branch != 0) {
      HTFJjesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    HTFJjesRelativeBalup_isLoaded = true;
  }
  return HTFJjesRelativeBalup_;
}

const float &VVV0Tree::SumPtFJjesRelativeBalup() {
  if (not SumPtFJjesRelativeBalup_isLoaded) {
    if (SumPtFJjesRelativeBalup_branch != 0) {
      SumPtFJjesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesRelativeBalup_isLoaded = true;
  }
  return SumPtFJjesRelativeBalup_;
}

const float &VVV0Tree::SumPtJjesRelativeBalup() {
  if (not SumPtJjesRelativeBalup_isLoaded) {
    if (SumPtJjesRelativeBalup_branch != 0) {
      SumPtJjesRelativeBalup_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesRelativeBalup_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesRelativeBalup_isLoaded = true;
  }
  return SumPtJjesRelativeBalup_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesRelativeBaldn() {
  if (not JsjesRelativeBaldn_isLoaded) {
    if (JsjesRelativeBaldn_branch != 0) {
      JsjesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch JsjesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    JsjesRelativeBaldn_isLoaded = true;
  }
  return *JsjesRelativeBaldn_;
}

const int &VVV0Tree::NFJjesRelativeBaldn() {
  if (not NFJjesRelativeBaldn_isLoaded) {
    if (NFJjesRelativeBaldn_branch != 0) {
      NFJjesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch NFJjesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    NFJjesRelativeBaldn_isLoaded = true;
  }
  return NFJjesRelativeBaldn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesRelativeBaldn() {
  if (not FJ0jesRelativeBaldn_isLoaded) {
    if (FJ0jesRelativeBaldn_branch != 0) {
      FJ0jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    FJ0jesRelativeBaldn_isLoaded = true;
  }
  return *FJ0jesRelativeBaldn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesRelativeBaldn() {
  if (not FJ1jesRelativeBaldn_isLoaded) {
    if (FJ1jesRelativeBaldn_branch != 0) {
      FJ1jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    FJ1jesRelativeBaldn_isLoaded = true;
  }
  return *FJ1jesRelativeBaldn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesRelativeBaldn() {
  if (not FJ2jesRelativeBaldn_isLoaded) {
    if (FJ2jesRelativeBaldn_branch != 0) {
      FJ2jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    FJ2jesRelativeBaldn_isLoaded = true;
  }
  return *FJ2jesRelativeBaldn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesRelativeBaldn() {
  if (not FJ3jesRelativeBaldn_isLoaded) {
    if (FJ3jesRelativeBaldn_branch != 0) {
      FJ3jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    FJ3jesRelativeBaldn_isLoaded = true;
  }
  return *FJ3jesRelativeBaldn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesRelativeBaldn() {
  if (not FJ4jesRelativeBaldn_isLoaded) {
    if (FJ4jesRelativeBaldn_branch != 0) {
      FJ4jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    FJ4jesRelativeBaldn_isLoaded = true;
  }
  return *FJ4jesRelativeBaldn_;
}

const float &VVV0Tree::VMD0jesRelativeBaldn() {
  if (not VMD0jesRelativeBaldn_isLoaded) {
    if (VMD0jesRelativeBaldn_branch != 0) {
      VMD0jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    VMD0jesRelativeBaldn_isLoaded = true;
  }
  return VMD0jesRelativeBaldn_;
}

const float &VVV0Tree::VMD1jesRelativeBaldn() {
  if (not VMD1jesRelativeBaldn_isLoaded) {
    if (VMD1jesRelativeBaldn_branch != 0) {
      VMD1jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    VMD1jesRelativeBaldn_isLoaded = true;
  }
  return VMD1jesRelativeBaldn_;
}

const float &VVV0Tree::VMD2jesRelativeBaldn() {
  if (not VMD2jesRelativeBaldn_isLoaded) {
    if (VMD2jesRelativeBaldn_branch != 0) {
      VMD2jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    VMD2jesRelativeBaldn_isLoaded = true;
  }
  return VMD2jesRelativeBaldn_;
}

const float &VVV0Tree::VMD3jesRelativeBaldn() {
  if (not VMD3jesRelativeBaldn_isLoaded) {
    if (VMD3jesRelativeBaldn_branch != 0) {
      VMD3jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    VMD3jesRelativeBaldn_isLoaded = true;
  }
  return VMD3jesRelativeBaldn_;
}

const float &VVV0Tree::VMD4jesRelativeBaldn() {
  if (not VMD4jesRelativeBaldn_isLoaded) {
    if (VMD4jesRelativeBaldn_branch != 0) {
      VMD4jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    VMD4jesRelativeBaldn_isLoaded = true;
  }
  return VMD4jesRelativeBaldn_;
}

const float &VVV0Tree::WMD0jesRelativeBaldn() {
  if (not WMD0jesRelativeBaldn_isLoaded) {
    if (WMD0jesRelativeBaldn_branch != 0) {
      WMD0jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    WMD0jesRelativeBaldn_isLoaded = true;
  }
  return WMD0jesRelativeBaldn_;
}

const float &VVV0Tree::WMD1jesRelativeBaldn() {
  if (not WMD1jesRelativeBaldn_isLoaded) {
    if (WMD1jesRelativeBaldn_branch != 0) {
      WMD1jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    WMD1jesRelativeBaldn_isLoaded = true;
  }
  return WMD1jesRelativeBaldn_;
}

const float &VVV0Tree::WMD2jesRelativeBaldn() {
  if (not WMD2jesRelativeBaldn_isLoaded) {
    if (WMD2jesRelativeBaldn_branch != 0) {
      WMD2jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    WMD2jesRelativeBaldn_isLoaded = true;
  }
  return WMD2jesRelativeBaldn_;
}

const float &VVV0Tree::WMD3jesRelativeBaldn() {
  if (not WMD3jesRelativeBaldn_isLoaded) {
    if (WMD3jesRelativeBaldn_branch != 0) {
      WMD3jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    WMD3jesRelativeBaldn_isLoaded = true;
  }
  return WMD3jesRelativeBaldn_;
}

const float &VVV0Tree::WMD4jesRelativeBaldn() {
  if (not WMD4jesRelativeBaldn_isLoaded) {
    if (WMD4jesRelativeBaldn_branch != 0) {
      WMD4jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    WMD4jesRelativeBaldn_isLoaded = true;
  }
  return WMD4jesRelativeBaldn_;
}

const int &VVV0Tree::NQGen0jesRelativeBaldn() {
  if (not NQGen0jesRelativeBaldn_isLoaded) {
    if (NQGen0jesRelativeBaldn_branch != 0) {
      NQGen0jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesRelativeBaldn_isLoaded = true;
  }
  return NQGen0jesRelativeBaldn_;
}

const int &VVV0Tree::NQGen1jesRelativeBaldn() {
  if (not NQGen1jesRelativeBaldn_isLoaded) {
    if (NQGen1jesRelativeBaldn_branch != 0) {
      NQGen1jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesRelativeBaldn_isLoaded = true;
  }
  return NQGen1jesRelativeBaldn_;
}

const int &VVV0Tree::NQGen2jesRelativeBaldn() {
  if (not NQGen2jesRelativeBaldn_isLoaded) {
    if (NQGen2jesRelativeBaldn_branch != 0) {
      NQGen2jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesRelativeBaldn_isLoaded = true;
  }
  return NQGen2jesRelativeBaldn_;
}

const int &VVV0Tree::NQGen3jesRelativeBaldn() {
  if (not NQGen3jesRelativeBaldn_isLoaded) {
    if (NQGen3jesRelativeBaldn_branch != 0) {
      NQGen3jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesRelativeBaldn_isLoaded = true;
  }
  return NQGen3jesRelativeBaldn_;
}

const int &VVV0Tree::NQGen4jesRelativeBaldn() {
  if (not NQGen4jesRelativeBaldn_isLoaded) {
    if (NQGen4jesRelativeBaldn_branch != 0) {
      NQGen4jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesRelativeBaldn_isLoaded = true;
  }
  return NQGen4jesRelativeBaldn_;
}

const int &VVV0Tree::NBGen0jesRelativeBaldn() {
  if (not NBGen0jesRelativeBaldn_isLoaded) {
    if (NBGen0jesRelativeBaldn_branch != 0) {
      NBGen0jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesRelativeBaldn_isLoaded = true;
  }
  return NBGen0jesRelativeBaldn_;
}

const int &VVV0Tree::NBGen1jesRelativeBaldn() {
  if (not NBGen1jesRelativeBaldn_isLoaded) {
    if (NBGen1jesRelativeBaldn_branch != 0) {
      NBGen1jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesRelativeBaldn_isLoaded = true;
  }
  return NBGen1jesRelativeBaldn_;
}

const int &VVV0Tree::NBGen2jesRelativeBaldn() {
  if (not NBGen2jesRelativeBaldn_isLoaded) {
    if (NBGen2jesRelativeBaldn_branch != 0) {
      NBGen2jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesRelativeBaldn_isLoaded = true;
  }
  return NBGen2jesRelativeBaldn_;
}

const int &VVV0Tree::NBGen3jesRelativeBaldn() {
  if (not NBGen3jesRelativeBaldn_isLoaded) {
    if (NBGen3jesRelativeBaldn_branch != 0) {
      NBGen3jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesRelativeBaldn_isLoaded = true;
  }
  return NBGen3jesRelativeBaldn_;
}

const int &VVV0Tree::NBGen4jesRelativeBaldn() {
  if (not NBGen4jesRelativeBaldn_isLoaded) {
    if (NBGen4jesRelativeBaldn_branch != 0) {
      NBGen4jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesRelativeBaldn_isLoaded = true;
  }
  return NBGen4jesRelativeBaldn_;
}

const int &VVV0Tree::NLGen0jesRelativeBaldn() {
  if (not NLGen0jesRelativeBaldn_isLoaded) {
    if (NLGen0jesRelativeBaldn_branch != 0) {
      NLGen0jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesRelativeBaldn_isLoaded = true;
  }
  return NLGen0jesRelativeBaldn_;
}

const int &VVV0Tree::NLGen1jesRelativeBaldn() {
  if (not NLGen1jesRelativeBaldn_isLoaded) {
    if (NLGen1jesRelativeBaldn_branch != 0) {
      NLGen1jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesRelativeBaldn_isLoaded = true;
  }
  return NLGen1jesRelativeBaldn_;
}

const int &VVV0Tree::NLGen2jesRelativeBaldn() {
  if (not NLGen2jesRelativeBaldn_isLoaded) {
    if (NLGen2jesRelativeBaldn_branch != 0) {
      NLGen2jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesRelativeBaldn_isLoaded = true;
  }
  return NLGen2jesRelativeBaldn_;
}

const int &VVV0Tree::NLGen3jesRelativeBaldn() {
  if (not NLGen3jesRelativeBaldn_isLoaded) {
    if (NLGen3jesRelativeBaldn_branch != 0) {
      NLGen3jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesRelativeBaldn_isLoaded = true;
  }
  return NLGen3jesRelativeBaldn_;
}

const int &VVV0Tree::NLGen4jesRelativeBaldn() {
  if (not NLGen4jesRelativeBaldn_isLoaded) {
    if (NLGen4jesRelativeBaldn_branch != 0) {
      NLGen4jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesRelativeBaldn_isLoaded = true;
  }
  return NLGen4jesRelativeBaldn_;
}

const int &VVV0Tree::NVQGen0jesRelativeBaldn() {
  if (not NVQGen0jesRelativeBaldn_isLoaded) {
    if (NVQGen0jesRelativeBaldn_branch != 0) {
      NVQGen0jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesRelativeBaldn_isLoaded = true;
  }
  return NVQGen0jesRelativeBaldn_;
}

const int &VVV0Tree::NVQGen1jesRelativeBaldn() {
  if (not NVQGen1jesRelativeBaldn_isLoaded) {
    if (NVQGen1jesRelativeBaldn_branch != 0) {
      NVQGen1jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesRelativeBaldn_isLoaded = true;
  }
  return NVQGen1jesRelativeBaldn_;
}

const int &VVV0Tree::NVQGen2jesRelativeBaldn() {
  if (not NVQGen2jesRelativeBaldn_isLoaded) {
    if (NVQGen2jesRelativeBaldn_branch != 0) {
      NVQGen2jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesRelativeBaldn_isLoaded = true;
  }
  return NVQGen2jesRelativeBaldn_;
}

const int &VVV0Tree::NVQGen3jesRelativeBaldn() {
  if (not NVQGen3jesRelativeBaldn_isLoaded) {
    if (NVQGen3jesRelativeBaldn_branch != 0) {
      NVQGen3jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesRelativeBaldn_isLoaded = true;
  }
  return NVQGen3jesRelativeBaldn_;
}

const int &VVV0Tree::NVQGen4jesRelativeBaldn() {
  if (not NVQGen4jesRelativeBaldn_isLoaded) {
    if (NVQGen4jesRelativeBaldn_branch != 0) {
      NVQGen4jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesRelativeBaldn_isLoaded = true;
  }
  return NVQGen4jesRelativeBaldn_;
}

const int &VVV0Tree::NiFJjesRelativeBaldn() {
  if (not NiFJjesRelativeBaldn_isLoaded) {
    if (NiFJjesRelativeBaldn_branch != 0) {
      NiFJjesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    NiFJjesRelativeBaldn_isLoaded = true;
  }
  return NiFJjesRelativeBaldn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesRelativeBaldn() {
  if (not iFJ0jesRelativeBaldn_isLoaded) {
    if (iFJ0jesRelativeBaldn_branch != 0) {
      iFJ0jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesRelativeBaldn_isLoaded = true;
  }
  return *iFJ0jesRelativeBaldn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesRelativeBaldn() {
  if (not iFJ1jesRelativeBaldn_isLoaded) {
    if (iFJ1jesRelativeBaldn_branch != 0) {
      iFJ1jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesRelativeBaldn_isLoaded = true;
  }
  return *iFJ1jesRelativeBaldn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesRelativeBaldn() {
  if (not iFJ2jesRelativeBaldn_isLoaded) {
    if (iFJ2jesRelativeBaldn_branch != 0) {
      iFJ2jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesRelativeBaldn_isLoaded = true;
  }
  return *iFJ2jesRelativeBaldn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesRelativeBaldn() {
  if (not iFJ3jesRelativeBaldn_isLoaded) {
    if (iFJ3jesRelativeBaldn_branch != 0) {
      iFJ3jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesRelativeBaldn_isLoaded = true;
  }
  return *iFJ3jesRelativeBaldn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesRelativeBaldn() {
  if (not iFJ4jesRelativeBaldn_isLoaded) {
    if (iFJ4jesRelativeBaldn_branch != 0) {
      iFJ4jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesRelativeBaldn_isLoaded = true;
  }
  return *iFJ4jesRelativeBaldn_;
}

const float &VVV0Tree::iVMD0jesRelativeBaldn() {
  if (not iVMD0jesRelativeBaldn_isLoaded) {
    if (iVMD0jesRelativeBaldn_branch != 0) {
      iVMD0jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesRelativeBaldn_isLoaded = true;
  }
  return iVMD0jesRelativeBaldn_;
}

const float &VVV0Tree::iVMD1jesRelativeBaldn() {
  if (not iVMD1jesRelativeBaldn_isLoaded) {
    if (iVMD1jesRelativeBaldn_branch != 0) {
      iVMD1jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesRelativeBaldn_isLoaded = true;
  }
  return iVMD1jesRelativeBaldn_;
}

const float &VVV0Tree::iVMD2jesRelativeBaldn() {
  if (not iVMD2jesRelativeBaldn_isLoaded) {
    if (iVMD2jesRelativeBaldn_branch != 0) {
      iVMD2jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesRelativeBaldn_isLoaded = true;
  }
  return iVMD2jesRelativeBaldn_;
}

const float &VVV0Tree::iVMD3jesRelativeBaldn() {
  if (not iVMD3jesRelativeBaldn_isLoaded) {
    if (iVMD3jesRelativeBaldn_branch != 0) {
      iVMD3jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesRelativeBaldn_isLoaded = true;
  }
  return iVMD3jesRelativeBaldn_;
}

const float &VVV0Tree::iVMD4jesRelativeBaldn() {
  if (not iVMD4jesRelativeBaldn_isLoaded) {
    if (iVMD4jesRelativeBaldn_branch != 0) {
      iVMD4jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesRelativeBaldn_isLoaded = true;
  }
  return iVMD4jesRelativeBaldn_;
}

const float &VVV0Tree::iWMD0jesRelativeBaldn() {
  if (not iWMD0jesRelativeBaldn_isLoaded) {
    if (iWMD0jesRelativeBaldn_branch != 0) {
      iWMD0jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesRelativeBaldn_isLoaded = true;
  }
  return iWMD0jesRelativeBaldn_;
}

const float &VVV0Tree::iWMD1jesRelativeBaldn() {
  if (not iWMD1jesRelativeBaldn_isLoaded) {
    if (iWMD1jesRelativeBaldn_branch != 0) {
      iWMD1jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesRelativeBaldn_isLoaded = true;
  }
  return iWMD1jesRelativeBaldn_;
}

const float &VVV0Tree::iWMD2jesRelativeBaldn() {
  if (not iWMD2jesRelativeBaldn_isLoaded) {
    if (iWMD2jesRelativeBaldn_branch != 0) {
      iWMD2jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesRelativeBaldn_isLoaded = true;
  }
  return iWMD2jesRelativeBaldn_;
}

const float &VVV0Tree::iWMD3jesRelativeBaldn() {
  if (not iWMD3jesRelativeBaldn_isLoaded) {
    if (iWMD3jesRelativeBaldn_branch != 0) {
      iWMD3jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesRelativeBaldn_isLoaded = true;
  }
  return iWMD3jesRelativeBaldn_;
}

const float &VVV0Tree::iWMD4jesRelativeBaldn() {
  if (not iWMD4jesRelativeBaldn_isLoaded) {
    if (iWMD4jesRelativeBaldn_branch != 0) {
      iWMD4jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesRelativeBaldn_isLoaded = true;
  }
  return iWMD4jesRelativeBaldn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesRelativeBaldn() {
  if (not METjesRelativeBaldn_isLoaded) {
    if (METjesRelativeBaldn_branch != 0) {
      METjesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch METjesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    METjesRelativeBaldn_isLoaded = true;
  }
  return *METjesRelativeBaldn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesRelativeBaldn() {
  if (not NujesRelativeBaldn_isLoaded) {
    if (NujesRelativeBaldn_branch != 0) {
      NujesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch NujesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    NujesRelativeBaldn_isLoaded = true;
  }
  return *NujesRelativeBaldn_;
}

const int &VVV0Tree::NJjesRelativeBaldn() {
  if (not NJjesRelativeBaldn_isLoaded) {
    if (NJjesRelativeBaldn_branch != 0) {
      NJjesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch NJjesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    NJjesRelativeBaldn_isLoaded = true;
  }
  return NJjesRelativeBaldn_;
}

const int &VVV0Tree::NbLoosejesRelativeBaldn() {
  if (not NbLoosejesRelativeBaldn_isLoaded) {
    if (NbLoosejesRelativeBaldn_branch != 0) {
      NbLoosejesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesRelativeBaldn_isLoaded = true;
  }
  return NbLoosejesRelativeBaldn_;
}

const int &VVV0Tree::NbMediumjesRelativeBaldn() {
  if (not NbMediumjesRelativeBaldn_isLoaded) {
    if (NbMediumjesRelativeBaldn_branch != 0) {
      NbMediumjesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesRelativeBaldn_isLoaded = true;
  }
  return NbMediumjesRelativeBaldn_;
}

const int &VVV0Tree::NbTightjesRelativeBaldn() {
  if (not NbTightjesRelativeBaldn_isLoaded) {
    if (NbTightjesRelativeBaldn_branch != 0) {
      NbTightjesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    NbTightjesRelativeBaldn_isLoaded = true;
  }
  return NbTightjesRelativeBaldn_;
}

const int &VVV0Tree::NoORNbLoosejesRelativeBaldn() {
  if (not NoORNbLoosejesRelativeBaldn_isLoaded) {
    if (NoORNbLoosejesRelativeBaldn_branch != 0) {
      NoORNbLoosejesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesRelativeBaldn_isLoaded = true;
  }
  return NoORNbLoosejesRelativeBaldn_;
}

const int &VVV0Tree::NoORNbMediumjesRelativeBaldn() {
  if (not NoORNbMediumjesRelativeBaldn_isLoaded) {
    if (NoORNbMediumjesRelativeBaldn_branch != 0) {
      NoORNbMediumjesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesRelativeBaldn_isLoaded = true;
  }
  return NoORNbMediumjesRelativeBaldn_;
}

const int &VVV0Tree::NoORNbTightjesRelativeBaldn() {
  if (not NoORNbTightjesRelativeBaldn_isLoaded) {
    if (NoORNbTightjesRelativeBaldn_branch != 0) {
      NoORNbTightjesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesRelativeBaldn_isLoaded = true;
  }
  return NoORNbTightjesRelativeBaldn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesRelativeBaldn() {
  if (not J0jesRelativeBaldn_isLoaded) {
    if (J0jesRelativeBaldn_branch != 0) {
      J0jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch J0jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    J0jesRelativeBaldn_isLoaded = true;
  }
  return *J0jesRelativeBaldn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesRelativeBaldn() {
  if (not J1jesRelativeBaldn_isLoaded) {
    if (J1jesRelativeBaldn_branch != 0) {
      J1jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch J1jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    J1jesRelativeBaldn_isLoaded = true;
  }
  return *J1jesRelativeBaldn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesRelativeBaldn() {
  if (not J2jesRelativeBaldn_isLoaded) {
    if (J2jesRelativeBaldn_branch != 0) {
      J2jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch J2jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    J2jesRelativeBaldn_isLoaded = true;
  }
  return *J2jesRelativeBaldn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesRelativeBaldn() {
  if (not J3jesRelativeBaldn_isLoaded) {
    if (J3jesRelativeBaldn_branch != 0) {
      J3jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch J3jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    J3jesRelativeBaldn_isLoaded = true;
  }
  return *J3jesRelativeBaldn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesRelativeBaldn() {
  if (not J4jesRelativeBaldn_isLoaded) {
    if (J4jesRelativeBaldn_branch != 0) {
      J4jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch J4jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    J4jesRelativeBaldn_isLoaded = true;
  }
  return *J4jesRelativeBaldn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesRelativeBaldn() {
  if (not J5jesRelativeBaldn_isLoaded) {
    if (J5jesRelativeBaldn_branch != 0) {
      J5jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch J5jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    J5jesRelativeBaldn_isLoaded = true;
  }
  return *J5jesRelativeBaldn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesRelativeBaldn() {
  if (not J6jesRelativeBaldn_isLoaded) {
    if (J6jesRelativeBaldn_branch != 0) {
      J6jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch J6jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    J6jesRelativeBaldn_isLoaded = true;
  }
  return *J6jesRelativeBaldn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesRelativeBaldn() {
  if (not J7jesRelativeBaldn_isLoaded) {
    if (J7jesRelativeBaldn_branch != 0) {
      J7jesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch J7jesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    J7jesRelativeBaldn_isLoaded = true;
  }
  return *J7jesRelativeBaldn_;
}

const vector<int> &VVV0Tree::NQJGenjesRelativeBaldn() {
  if (not NQJGenjesRelativeBaldn_isLoaded) {
    if (NQJGenjesRelativeBaldn_branch != 0) {
      NQJGenjesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesRelativeBaldn_isLoaded = true;
  }
  return *NQJGenjesRelativeBaldn_;
}

const vector<int> &VVV0Tree::NBJGenjesRelativeBaldn() {
  if (not NBJGenjesRelativeBaldn_isLoaded) {
    if (NBJGenjesRelativeBaldn_branch != 0) {
      NBJGenjesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesRelativeBaldn_isLoaded = true;
  }
  return *NBJGenjesRelativeBaldn_;
}

const vector<int> &VVV0Tree::NLJGenjesRelativeBaldn() {
  if (not NLJGenjesRelativeBaldn_isLoaded) {
    if (NLJGenjesRelativeBaldn_branch != 0) {
      NLJGenjesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesRelativeBaldn_isLoaded = true;
  }
  return *NLJGenjesRelativeBaldn_;
}

const float &VVV0Tree::MVVXjesRelativeBaldn() {
  if (not MVVXjesRelativeBaldn_isLoaded) {
    if (MVVXjesRelativeBaldn_branch != 0) {
      MVVXjesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    MVVXjesRelativeBaldn_isLoaded = true;
  }
  return MVVXjesRelativeBaldn_;
}

const float &VVV0Tree::PtVVXjesRelativeBaldn() {
  if (not PtVVXjesRelativeBaldn_isLoaded) {
    if (PtVVXjesRelativeBaldn_branch != 0) {
      PtVVXjesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesRelativeBaldn_isLoaded = true;
  }
  return PtVVXjesRelativeBaldn_;
}

const float &VVV0Tree::HTjesRelativeBaldn() {
  if (not HTjesRelativeBaldn_isLoaded) {
    if (HTjesRelativeBaldn_branch != 0) {
      HTjesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch HTjesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    HTjesRelativeBaldn_isLoaded = true;
  }
  return HTjesRelativeBaldn_;
}

const float &VVV0Tree::HTJjesRelativeBaldn() {
  if (not HTJjesRelativeBaldn_isLoaded) {
    if (HTJjesRelativeBaldn_branch != 0) {
      HTJjesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch HTJjesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    HTJjesRelativeBaldn_isLoaded = true;
  }
  return HTJjesRelativeBaldn_;
}

const float &VVV0Tree::HTFJjesRelativeBaldn() {
  if (not HTFJjesRelativeBaldn_isLoaded) {
    if (HTFJjesRelativeBaldn_branch != 0) {
      HTFJjesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    HTFJjesRelativeBaldn_isLoaded = true;
  }
  return HTFJjesRelativeBaldn_;
}

const float &VVV0Tree::SumPtFJjesRelativeBaldn() {
  if (not SumPtFJjesRelativeBaldn_isLoaded) {
    if (SumPtFJjesRelativeBaldn_branch != 0) {
      SumPtFJjesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesRelativeBaldn_isLoaded = true;
  }
  return SumPtFJjesRelativeBaldn_;
}

const float &VVV0Tree::SumPtJjesRelativeBaldn() {
  if (not SumPtJjesRelativeBaldn_isLoaded) {
    if (SumPtJjesRelativeBaldn_branch != 0) {
      SumPtJjesRelativeBaldn_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesRelativeBaldn_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesRelativeBaldn_isLoaded = true;
  }
  return SumPtJjesRelativeBaldn_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesRelativeSampleup() {
  if (not JsjesRelativeSampleup_isLoaded) {
    if (JsjesRelativeSampleup_branch != 0) {
      JsjesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch JsjesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    JsjesRelativeSampleup_isLoaded = true;
  }
  return *JsjesRelativeSampleup_;
}

const int &VVV0Tree::NFJjesRelativeSampleup() {
  if (not NFJjesRelativeSampleup_isLoaded) {
    if (NFJjesRelativeSampleup_branch != 0) {
      NFJjesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch NFJjesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    NFJjesRelativeSampleup_isLoaded = true;
  }
  return NFJjesRelativeSampleup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesRelativeSampleup() {
  if (not FJ0jesRelativeSampleup_isLoaded) {
    if (FJ0jesRelativeSampleup_branch != 0) {
      FJ0jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    FJ0jesRelativeSampleup_isLoaded = true;
  }
  return *FJ0jesRelativeSampleup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesRelativeSampleup() {
  if (not FJ1jesRelativeSampleup_isLoaded) {
    if (FJ1jesRelativeSampleup_branch != 0) {
      FJ1jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    FJ1jesRelativeSampleup_isLoaded = true;
  }
  return *FJ1jesRelativeSampleup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesRelativeSampleup() {
  if (not FJ2jesRelativeSampleup_isLoaded) {
    if (FJ2jesRelativeSampleup_branch != 0) {
      FJ2jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    FJ2jesRelativeSampleup_isLoaded = true;
  }
  return *FJ2jesRelativeSampleup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesRelativeSampleup() {
  if (not FJ3jesRelativeSampleup_isLoaded) {
    if (FJ3jesRelativeSampleup_branch != 0) {
      FJ3jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    FJ3jesRelativeSampleup_isLoaded = true;
  }
  return *FJ3jesRelativeSampleup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesRelativeSampleup() {
  if (not FJ4jesRelativeSampleup_isLoaded) {
    if (FJ4jesRelativeSampleup_branch != 0) {
      FJ4jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    FJ4jesRelativeSampleup_isLoaded = true;
  }
  return *FJ4jesRelativeSampleup_;
}

const float &VVV0Tree::VMD0jesRelativeSampleup() {
  if (not VMD0jesRelativeSampleup_isLoaded) {
    if (VMD0jesRelativeSampleup_branch != 0) {
      VMD0jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    VMD0jesRelativeSampleup_isLoaded = true;
  }
  return VMD0jesRelativeSampleup_;
}

const float &VVV0Tree::VMD1jesRelativeSampleup() {
  if (not VMD1jesRelativeSampleup_isLoaded) {
    if (VMD1jesRelativeSampleup_branch != 0) {
      VMD1jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    VMD1jesRelativeSampleup_isLoaded = true;
  }
  return VMD1jesRelativeSampleup_;
}

const float &VVV0Tree::VMD2jesRelativeSampleup() {
  if (not VMD2jesRelativeSampleup_isLoaded) {
    if (VMD2jesRelativeSampleup_branch != 0) {
      VMD2jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    VMD2jesRelativeSampleup_isLoaded = true;
  }
  return VMD2jesRelativeSampleup_;
}

const float &VVV0Tree::VMD3jesRelativeSampleup() {
  if (not VMD3jesRelativeSampleup_isLoaded) {
    if (VMD3jesRelativeSampleup_branch != 0) {
      VMD3jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    VMD3jesRelativeSampleup_isLoaded = true;
  }
  return VMD3jesRelativeSampleup_;
}

const float &VVV0Tree::VMD4jesRelativeSampleup() {
  if (not VMD4jesRelativeSampleup_isLoaded) {
    if (VMD4jesRelativeSampleup_branch != 0) {
      VMD4jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    VMD4jesRelativeSampleup_isLoaded = true;
  }
  return VMD4jesRelativeSampleup_;
}

const float &VVV0Tree::WMD0jesRelativeSampleup() {
  if (not WMD0jesRelativeSampleup_isLoaded) {
    if (WMD0jesRelativeSampleup_branch != 0) {
      WMD0jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    WMD0jesRelativeSampleup_isLoaded = true;
  }
  return WMD0jesRelativeSampleup_;
}

const float &VVV0Tree::WMD1jesRelativeSampleup() {
  if (not WMD1jesRelativeSampleup_isLoaded) {
    if (WMD1jesRelativeSampleup_branch != 0) {
      WMD1jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    WMD1jesRelativeSampleup_isLoaded = true;
  }
  return WMD1jesRelativeSampleup_;
}

const float &VVV0Tree::WMD2jesRelativeSampleup() {
  if (not WMD2jesRelativeSampleup_isLoaded) {
    if (WMD2jesRelativeSampleup_branch != 0) {
      WMD2jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    WMD2jesRelativeSampleup_isLoaded = true;
  }
  return WMD2jesRelativeSampleup_;
}

const float &VVV0Tree::WMD3jesRelativeSampleup() {
  if (not WMD3jesRelativeSampleup_isLoaded) {
    if (WMD3jesRelativeSampleup_branch != 0) {
      WMD3jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    WMD3jesRelativeSampleup_isLoaded = true;
  }
  return WMD3jesRelativeSampleup_;
}

const float &VVV0Tree::WMD4jesRelativeSampleup() {
  if (not WMD4jesRelativeSampleup_isLoaded) {
    if (WMD4jesRelativeSampleup_branch != 0) {
      WMD4jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    WMD4jesRelativeSampleup_isLoaded = true;
  }
  return WMD4jesRelativeSampleup_;
}

const int &VVV0Tree::NQGen0jesRelativeSampleup() {
  if (not NQGen0jesRelativeSampleup_isLoaded) {
    if (NQGen0jesRelativeSampleup_branch != 0) {
      NQGen0jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesRelativeSampleup_isLoaded = true;
  }
  return NQGen0jesRelativeSampleup_;
}

const int &VVV0Tree::NQGen1jesRelativeSampleup() {
  if (not NQGen1jesRelativeSampleup_isLoaded) {
    if (NQGen1jesRelativeSampleup_branch != 0) {
      NQGen1jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesRelativeSampleup_isLoaded = true;
  }
  return NQGen1jesRelativeSampleup_;
}

const int &VVV0Tree::NQGen2jesRelativeSampleup() {
  if (not NQGen2jesRelativeSampleup_isLoaded) {
    if (NQGen2jesRelativeSampleup_branch != 0) {
      NQGen2jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesRelativeSampleup_isLoaded = true;
  }
  return NQGen2jesRelativeSampleup_;
}

const int &VVV0Tree::NQGen3jesRelativeSampleup() {
  if (not NQGen3jesRelativeSampleup_isLoaded) {
    if (NQGen3jesRelativeSampleup_branch != 0) {
      NQGen3jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesRelativeSampleup_isLoaded = true;
  }
  return NQGen3jesRelativeSampleup_;
}

const int &VVV0Tree::NQGen4jesRelativeSampleup() {
  if (not NQGen4jesRelativeSampleup_isLoaded) {
    if (NQGen4jesRelativeSampleup_branch != 0) {
      NQGen4jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesRelativeSampleup_isLoaded = true;
  }
  return NQGen4jesRelativeSampleup_;
}

const int &VVV0Tree::NBGen0jesRelativeSampleup() {
  if (not NBGen0jesRelativeSampleup_isLoaded) {
    if (NBGen0jesRelativeSampleup_branch != 0) {
      NBGen0jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesRelativeSampleup_isLoaded = true;
  }
  return NBGen0jesRelativeSampleup_;
}

const int &VVV0Tree::NBGen1jesRelativeSampleup() {
  if (not NBGen1jesRelativeSampleup_isLoaded) {
    if (NBGen1jesRelativeSampleup_branch != 0) {
      NBGen1jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesRelativeSampleup_isLoaded = true;
  }
  return NBGen1jesRelativeSampleup_;
}

const int &VVV0Tree::NBGen2jesRelativeSampleup() {
  if (not NBGen2jesRelativeSampleup_isLoaded) {
    if (NBGen2jesRelativeSampleup_branch != 0) {
      NBGen2jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesRelativeSampleup_isLoaded = true;
  }
  return NBGen2jesRelativeSampleup_;
}

const int &VVV0Tree::NBGen3jesRelativeSampleup() {
  if (not NBGen3jesRelativeSampleup_isLoaded) {
    if (NBGen3jesRelativeSampleup_branch != 0) {
      NBGen3jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesRelativeSampleup_isLoaded = true;
  }
  return NBGen3jesRelativeSampleup_;
}

const int &VVV0Tree::NBGen4jesRelativeSampleup() {
  if (not NBGen4jesRelativeSampleup_isLoaded) {
    if (NBGen4jesRelativeSampleup_branch != 0) {
      NBGen4jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesRelativeSampleup_isLoaded = true;
  }
  return NBGen4jesRelativeSampleup_;
}

const int &VVV0Tree::NLGen0jesRelativeSampleup() {
  if (not NLGen0jesRelativeSampleup_isLoaded) {
    if (NLGen0jesRelativeSampleup_branch != 0) {
      NLGen0jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesRelativeSampleup_isLoaded = true;
  }
  return NLGen0jesRelativeSampleup_;
}

const int &VVV0Tree::NLGen1jesRelativeSampleup() {
  if (not NLGen1jesRelativeSampleup_isLoaded) {
    if (NLGen1jesRelativeSampleup_branch != 0) {
      NLGen1jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesRelativeSampleup_isLoaded = true;
  }
  return NLGen1jesRelativeSampleup_;
}

const int &VVV0Tree::NLGen2jesRelativeSampleup() {
  if (not NLGen2jesRelativeSampleup_isLoaded) {
    if (NLGen2jesRelativeSampleup_branch != 0) {
      NLGen2jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesRelativeSampleup_isLoaded = true;
  }
  return NLGen2jesRelativeSampleup_;
}

const int &VVV0Tree::NLGen3jesRelativeSampleup() {
  if (not NLGen3jesRelativeSampleup_isLoaded) {
    if (NLGen3jesRelativeSampleup_branch != 0) {
      NLGen3jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesRelativeSampleup_isLoaded = true;
  }
  return NLGen3jesRelativeSampleup_;
}

const int &VVV0Tree::NLGen4jesRelativeSampleup() {
  if (not NLGen4jesRelativeSampleup_isLoaded) {
    if (NLGen4jesRelativeSampleup_branch != 0) {
      NLGen4jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesRelativeSampleup_isLoaded = true;
  }
  return NLGen4jesRelativeSampleup_;
}

const int &VVV0Tree::NVQGen0jesRelativeSampleup() {
  if (not NVQGen0jesRelativeSampleup_isLoaded) {
    if (NVQGen0jesRelativeSampleup_branch != 0) {
      NVQGen0jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesRelativeSampleup_isLoaded = true;
  }
  return NVQGen0jesRelativeSampleup_;
}

const int &VVV0Tree::NVQGen1jesRelativeSampleup() {
  if (not NVQGen1jesRelativeSampleup_isLoaded) {
    if (NVQGen1jesRelativeSampleup_branch != 0) {
      NVQGen1jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesRelativeSampleup_isLoaded = true;
  }
  return NVQGen1jesRelativeSampleup_;
}

const int &VVV0Tree::NVQGen2jesRelativeSampleup() {
  if (not NVQGen2jesRelativeSampleup_isLoaded) {
    if (NVQGen2jesRelativeSampleup_branch != 0) {
      NVQGen2jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesRelativeSampleup_isLoaded = true;
  }
  return NVQGen2jesRelativeSampleup_;
}

const int &VVV0Tree::NVQGen3jesRelativeSampleup() {
  if (not NVQGen3jesRelativeSampleup_isLoaded) {
    if (NVQGen3jesRelativeSampleup_branch != 0) {
      NVQGen3jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesRelativeSampleup_isLoaded = true;
  }
  return NVQGen3jesRelativeSampleup_;
}

const int &VVV0Tree::NVQGen4jesRelativeSampleup() {
  if (not NVQGen4jesRelativeSampleup_isLoaded) {
    if (NVQGen4jesRelativeSampleup_branch != 0) {
      NVQGen4jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesRelativeSampleup_isLoaded = true;
  }
  return NVQGen4jesRelativeSampleup_;
}

const int &VVV0Tree::NiFJjesRelativeSampleup() {
  if (not NiFJjesRelativeSampleup_isLoaded) {
    if (NiFJjesRelativeSampleup_branch != 0) {
      NiFJjesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    NiFJjesRelativeSampleup_isLoaded = true;
  }
  return NiFJjesRelativeSampleup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesRelativeSampleup() {
  if (not iFJ0jesRelativeSampleup_isLoaded) {
    if (iFJ0jesRelativeSampleup_branch != 0) {
      iFJ0jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesRelativeSampleup_isLoaded = true;
  }
  return *iFJ0jesRelativeSampleup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesRelativeSampleup() {
  if (not iFJ1jesRelativeSampleup_isLoaded) {
    if (iFJ1jesRelativeSampleup_branch != 0) {
      iFJ1jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesRelativeSampleup_isLoaded = true;
  }
  return *iFJ1jesRelativeSampleup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesRelativeSampleup() {
  if (not iFJ2jesRelativeSampleup_isLoaded) {
    if (iFJ2jesRelativeSampleup_branch != 0) {
      iFJ2jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesRelativeSampleup_isLoaded = true;
  }
  return *iFJ2jesRelativeSampleup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesRelativeSampleup() {
  if (not iFJ3jesRelativeSampleup_isLoaded) {
    if (iFJ3jesRelativeSampleup_branch != 0) {
      iFJ3jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesRelativeSampleup_isLoaded = true;
  }
  return *iFJ3jesRelativeSampleup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesRelativeSampleup() {
  if (not iFJ4jesRelativeSampleup_isLoaded) {
    if (iFJ4jesRelativeSampleup_branch != 0) {
      iFJ4jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesRelativeSampleup_isLoaded = true;
  }
  return *iFJ4jesRelativeSampleup_;
}

const float &VVV0Tree::iVMD0jesRelativeSampleup() {
  if (not iVMD0jesRelativeSampleup_isLoaded) {
    if (iVMD0jesRelativeSampleup_branch != 0) {
      iVMD0jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesRelativeSampleup_isLoaded = true;
  }
  return iVMD0jesRelativeSampleup_;
}

const float &VVV0Tree::iVMD1jesRelativeSampleup() {
  if (not iVMD1jesRelativeSampleup_isLoaded) {
    if (iVMD1jesRelativeSampleup_branch != 0) {
      iVMD1jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesRelativeSampleup_isLoaded = true;
  }
  return iVMD1jesRelativeSampleup_;
}

const float &VVV0Tree::iVMD2jesRelativeSampleup() {
  if (not iVMD2jesRelativeSampleup_isLoaded) {
    if (iVMD2jesRelativeSampleup_branch != 0) {
      iVMD2jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesRelativeSampleup_isLoaded = true;
  }
  return iVMD2jesRelativeSampleup_;
}

const float &VVV0Tree::iVMD3jesRelativeSampleup() {
  if (not iVMD3jesRelativeSampleup_isLoaded) {
    if (iVMD3jesRelativeSampleup_branch != 0) {
      iVMD3jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesRelativeSampleup_isLoaded = true;
  }
  return iVMD3jesRelativeSampleup_;
}

const float &VVV0Tree::iVMD4jesRelativeSampleup() {
  if (not iVMD4jesRelativeSampleup_isLoaded) {
    if (iVMD4jesRelativeSampleup_branch != 0) {
      iVMD4jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesRelativeSampleup_isLoaded = true;
  }
  return iVMD4jesRelativeSampleup_;
}

const float &VVV0Tree::iWMD0jesRelativeSampleup() {
  if (not iWMD0jesRelativeSampleup_isLoaded) {
    if (iWMD0jesRelativeSampleup_branch != 0) {
      iWMD0jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesRelativeSampleup_isLoaded = true;
  }
  return iWMD0jesRelativeSampleup_;
}

const float &VVV0Tree::iWMD1jesRelativeSampleup() {
  if (not iWMD1jesRelativeSampleup_isLoaded) {
    if (iWMD1jesRelativeSampleup_branch != 0) {
      iWMD1jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesRelativeSampleup_isLoaded = true;
  }
  return iWMD1jesRelativeSampleup_;
}

const float &VVV0Tree::iWMD2jesRelativeSampleup() {
  if (not iWMD2jesRelativeSampleup_isLoaded) {
    if (iWMD2jesRelativeSampleup_branch != 0) {
      iWMD2jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesRelativeSampleup_isLoaded = true;
  }
  return iWMD2jesRelativeSampleup_;
}

const float &VVV0Tree::iWMD3jesRelativeSampleup() {
  if (not iWMD3jesRelativeSampleup_isLoaded) {
    if (iWMD3jesRelativeSampleup_branch != 0) {
      iWMD3jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesRelativeSampleup_isLoaded = true;
  }
  return iWMD3jesRelativeSampleup_;
}

const float &VVV0Tree::iWMD4jesRelativeSampleup() {
  if (not iWMD4jesRelativeSampleup_isLoaded) {
    if (iWMD4jesRelativeSampleup_branch != 0) {
      iWMD4jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesRelativeSampleup_isLoaded = true;
  }
  return iWMD4jesRelativeSampleup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesRelativeSampleup() {
  if (not METjesRelativeSampleup_isLoaded) {
    if (METjesRelativeSampleup_branch != 0) {
      METjesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch METjesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    METjesRelativeSampleup_isLoaded = true;
  }
  return *METjesRelativeSampleup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesRelativeSampleup() {
  if (not NujesRelativeSampleup_isLoaded) {
    if (NujesRelativeSampleup_branch != 0) {
      NujesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch NujesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    NujesRelativeSampleup_isLoaded = true;
  }
  return *NujesRelativeSampleup_;
}

const int &VVV0Tree::NJjesRelativeSampleup() {
  if (not NJjesRelativeSampleup_isLoaded) {
    if (NJjesRelativeSampleup_branch != 0) {
      NJjesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch NJjesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    NJjesRelativeSampleup_isLoaded = true;
  }
  return NJjesRelativeSampleup_;
}

const int &VVV0Tree::NbLoosejesRelativeSampleup() {
  if (not NbLoosejesRelativeSampleup_isLoaded) {
    if (NbLoosejesRelativeSampleup_branch != 0) {
      NbLoosejesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesRelativeSampleup_isLoaded = true;
  }
  return NbLoosejesRelativeSampleup_;
}

const int &VVV0Tree::NbMediumjesRelativeSampleup() {
  if (not NbMediumjesRelativeSampleup_isLoaded) {
    if (NbMediumjesRelativeSampleup_branch != 0) {
      NbMediumjesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesRelativeSampleup_isLoaded = true;
  }
  return NbMediumjesRelativeSampleup_;
}

const int &VVV0Tree::NbTightjesRelativeSampleup() {
  if (not NbTightjesRelativeSampleup_isLoaded) {
    if (NbTightjesRelativeSampleup_branch != 0) {
      NbTightjesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    NbTightjesRelativeSampleup_isLoaded = true;
  }
  return NbTightjesRelativeSampleup_;
}

const int &VVV0Tree::NoORNbLoosejesRelativeSampleup() {
  if (not NoORNbLoosejesRelativeSampleup_isLoaded) {
    if (NoORNbLoosejesRelativeSampleup_branch != 0) {
      NoORNbLoosejesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesRelativeSampleup_isLoaded = true;
  }
  return NoORNbLoosejesRelativeSampleup_;
}

const int &VVV0Tree::NoORNbMediumjesRelativeSampleup() {
  if (not NoORNbMediumjesRelativeSampleup_isLoaded) {
    if (NoORNbMediumjesRelativeSampleup_branch != 0) {
      NoORNbMediumjesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesRelativeSampleup_isLoaded = true;
  }
  return NoORNbMediumjesRelativeSampleup_;
}

const int &VVV0Tree::NoORNbTightjesRelativeSampleup() {
  if (not NoORNbTightjesRelativeSampleup_isLoaded) {
    if (NoORNbTightjesRelativeSampleup_branch != 0) {
      NoORNbTightjesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesRelativeSampleup_isLoaded = true;
  }
  return NoORNbTightjesRelativeSampleup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesRelativeSampleup() {
  if (not J0jesRelativeSampleup_isLoaded) {
    if (J0jesRelativeSampleup_branch != 0) {
      J0jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch J0jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    J0jesRelativeSampleup_isLoaded = true;
  }
  return *J0jesRelativeSampleup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesRelativeSampleup() {
  if (not J1jesRelativeSampleup_isLoaded) {
    if (J1jesRelativeSampleup_branch != 0) {
      J1jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch J1jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    J1jesRelativeSampleup_isLoaded = true;
  }
  return *J1jesRelativeSampleup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesRelativeSampleup() {
  if (not J2jesRelativeSampleup_isLoaded) {
    if (J2jesRelativeSampleup_branch != 0) {
      J2jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch J2jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    J2jesRelativeSampleup_isLoaded = true;
  }
  return *J2jesRelativeSampleup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesRelativeSampleup() {
  if (not J3jesRelativeSampleup_isLoaded) {
    if (J3jesRelativeSampleup_branch != 0) {
      J3jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch J3jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    J3jesRelativeSampleup_isLoaded = true;
  }
  return *J3jesRelativeSampleup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesRelativeSampleup() {
  if (not J4jesRelativeSampleup_isLoaded) {
    if (J4jesRelativeSampleup_branch != 0) {
      J4jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch J4jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    J4jesRelativeSampleup_isLoaded = true;
  }
  return *J4jesRelativeSampleup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesRelativeSampleup() {
  if (not J5jesRelativeSampleup_isLoaded) {
    if (J5jesRelativeSampleup_branch != 0) {
      J5jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch J5jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    J5jesRelativeSampleup_isLoaded = true;
  }
  return *J5jesRelativeSampleup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesRelativeSampleup() {
  if (not J6jesRelativeSampleup_isLoaded) {
    if (J6jesRelativeSampleup_branch != 0) {
      J6jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch J6jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    J6jesRelativeSampleup_isLoaded = true;
  }
  return *J6jesRelativeSampleup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesRelativeSampleup() {
  if (not J7jesRelativeSampleup_isLoaded) {
    if (J7jesRelativeSampleup_branch != 0) {
      J7jesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch J7jesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    J7jesRelativeSampleup_isLoaded = true;
  }
  return *J7jesRelativeSampleup_;
}

const vector<int> &VVV0Tree::NQJGenjesRelativeSampleup() {
  if (not NQJGenjesRelativeSampleup_isLoaded) {
    if (NQJGenjesRelativeSampleup_branch != 0) {
      NQJGenjesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesRelativeSampleup_isLoaded = true;
  }
  return *NQJGenjesRelativeSampleup_;
}

const vector<int> &VVV0Tree::NBJGenjesRelativeSampleup() {
  if (not NBJGenjesRelativeSampleup_isLoaded) {
    if (NBJGenjesRelativeSampleup_branch != 0) {
      NBJGenjesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesRelativeSampleup_isLoaded = true;
  }
  return *NBJGenjesRelativeSampleup_;
}

const vector<int> &VVV0Tree::NLJGenjesRelativeSampleup() {
  if (not NLJGenjesRelativeSampleup_isLoaded) {
    if (NLJGenjesRelativeSampleup_branch != 0) {
      NLJGenjesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesRelativeSampleup_isLoaded = true;
  }
  return *NLJGenjesRelativeSampleup_;
}

const float &VVV0Tree::MVVXjesRelativeSampleup() {
  if (not MVVXjesRelativeSampleup_isLoaded) {
    if (MVVXjesRelativeSampleup_branch != 0) {
      MVVXjesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    MVVXjesRelativeSampleup_isLoaded = true;
  }
  return MVVXjesRelativeSampleup_;
}

const float &VVV0Tree::PtVVXjesRelativeSampleup() {
  if (not PtVVXjesRelativeSampleup_isLoaded) {
    if (PtVVXjesRelativeSampleup_branch != 0) {
      PtVVXjesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesRelativeSampleup_isLoaded = true;
  }
  return PtVVXjesRelativeSampleup_;
}

const float &VVV0Tree::HTjesRelativeSampleup() {
  if (not HTjesRelativeSampleup_isLoaded) {
    if (HTjesRelativeSampleup_branch != 0) {
      HTjesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch HTjesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    HTjesRelativeSampleup_isLoaded = true;
  }
  return HTjesRelativeSampleup_;
}

const float &VVV0Tree::HTJjesRelativeSampleup() {
  if (not HTJjesRelativeSampleup_isLoaded) {
    if (HTJjesRelativeSampleup_branch != 0) {
      HTJjesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch HTJjesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    HTJjesRelativeSampleup_isLoaded = true;
  }
  return HTJjesRelativeSampleup_;
}

const float &VVV0Tree::HTFJjesRelativeSampleup() {
  if (not HTFJjesRelativeSampleup_isLoaded) {
    if (HTFJjesRelativeSampleup_branch != 0) {
      HTFJjesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    HTFJjesRelativeSampleup_isLoaded = true;
  }
  return HTFJjesRelativeSampleup_;
}

const float &VVV0Tree::SumPtFJjesRelativeSampleup() {
  if (not SumPtFJjesRelativeSampleup_isLoaded) {
    if (SumPtFJjesRelativeSampleup_branch != 0) {
      SumPtFJjesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesRelativeSampleup_isLoaded = true;
  }
  return SumPtFJjesRelativeSampleup_;
}

const float &VVV0Tree::SumPtJjesRelativeSampleup() {
  if (not SumPtJjesRelativeSampleup_isLoaded) {
    if (SumPtJjesRelativeSampleup_branch != 0) {
      SumPtJjesRelativeSampleup_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesRelativeSampleup_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesRelativeSampleup_isLoaded = true;
  }
  return SumPtJjesRelativeSampleup_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesRelativeSampledn() {
  if (not JsjesRelativeSampledn_isLoaded) {
    if (JsjesRelativeSampledn_branch != 0) {
      JsjesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch JsjesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    JsjesRelativeSampledn_isLoaded = true;
  }
  return *JsjesRelativeSampledn_;
}

const int &VVV0Tree::NFJjesRelativeSampledn() {
  if (not NFJjesRelativeSampledn_isLoaded) {
    if (NFJjesRelativeSampledn_branch != 0) {
      NFJjesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch NFJjesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    NFJjesRelativeSampledn_isLoaded = true;
  }
  return NFJjesRelativeSampledn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesRelativeSampledn() {
  if (not FJ0jesRelativeSampledn_isLoaded) {
    if (FJ0jesRelativeSampledn_branch != 0) {
      FJ0jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    FJ0jesRelativeSampledn_isLoaded = true;
  }
  return *FJ0jesRelativeSampledn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesRelativeSampledn() {
  if (not FJ1jesRelativeSampledn_isLoaded) {
    if (FJ1jesRelativeSampledn_branch != 0) {
      FJ1jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    FJ1jesRelativeSampledn_isLoaded = true;
  }
  return *FJ1jesRelativeSampledn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesRelativeSampledn() {
  if (not FJ2jesRelativeSampledn_isLoaded) {
    if (FJ2jesRelativeSampledn_branch != 0) {
      FJ2jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    FJ2jesRelativeSampledn_isLoaded = true;
  }
  return *FJ2jesRelativeSampledn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesRelativeSampledn() {
  if (not FJ3jesRelativeSampledn_isLoaded) {
    if (FJ3jesRelativeSampledn_branch != 0) {
      FJ3jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    FJ3jesRelativeSampledn_isLoaded = true;
  }
  return *FJ3jesRelativeSampledn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesRelativeSampledn() {
  if (not FJ4jesRelativeSampledn_isLoaded) {
    if (FJ4jesRelativeSampledn_branch != 0) {
      FJ4jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    FJ4jesRelativeSampledn_isLoaded = true;
  }
  return *FJ4jesRelativeSampledn_;
}

const float &VVV0Tree::VMD0jesRelativeSampledn() {
  if (not VMD0jesRelativeSampledn_isLoaded) {
    if (VMD0jesRelativeSampledn_branch != 0) {
      VMD0jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    VMD0jesRelativeSampledn_isLoaded = true;
  }
  return VMD0jesRelativeSampledn_;
}

const float &VVV0Tree::VMD1jesRelativeSampledn() {
  if (not VMD1jesRelativeSampledn_isLoaded) {
    if (VMD1jesRelativeSampledn_branch != 0) {
      VMD1jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    VMD1jesRelativeSampledn_isLoaded = true;
  }
  return VMD1jesRelativeSampledn_;
}

const float &VVV0Tree::VMD2jesRelativeSampledn() {
  if (not VMD2jesRelativeSampledn_isLoaded) {
    if (VMD2jesRelativeSampledn_branch != 0) {
      VMD2jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    VMD2jesRelativeSampledn_isLoaded = true;
  }
  return VMD2jesRelativeSampledn_;
}

const float &VVV0Tree::VMD3jesRelativeSampledn() {
  if (not VMD3jesRelativeSampledn_isLoaded) {
    if (VMD3jesRelativeSampledn_branch != 0) {
      VMD3jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    VMD3jesRelativeSampledn_isLoaded = true;
  }
  return VMD3jesRelativeSampledn_;
}

const float &VVV0Tree::VMD4jesRelativeSampledn() {
  if (not VMD4jesRelativeSampledn_isLoaded) {
    if (VMD4jesRelativeSampledn_branch != 0) {
      VMD4jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    VMD4jesRelativeSampledn_isLoaded = true;
  }
  return VMD4jesRelativeSampledn_;
}

const float &VVV0Tree::WMD0jesRelativeSampledn() {
  if (not WMD0jesRelativeSampledn_isLoaded) {
    if (WMD0jesRelativeSampledn_branch != 0) {
      WMD0jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    WMD0jesRelativeSampledn_isLoaded = true;
  }
  return WMD0jesRelativeSampledn_;
}

const float &VVV0Tree::WMD1jesRelativeSampledn() {
  if (not WMD1jesRelativeSampledn_isLoaded) {
    if (WMD1jesRelativeSampledn_branch != 0) {
      WMD1jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    WMD1jesRelativeSampledn_isLoaded = true;
  }
  return WMD1jesRelativeSampledn_;
}

const float &VVV0Tree::WMD2jesRelativeSampledn() {
  if (not WMD2jesRelativeSampledn_isLoaded) {
    if (WMD2jesRelativeSampledn_branch != 0) {
      WMD2jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    WMD2jesRelativeSampledn_isLoaded = true;
  }
  return WMD2jesRelativeSampledn_;
}

const float &VVV0Tree::WMD3jesRelativeSampledn() {
  if (not WMD3jesRelativeSampledn_isLoaded) {
    if (WMD3jesRelativeSampledn_branch != 0) {
      WMD3jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    WMD3jesRelativeSampledn_isLoaded = true;
  }
  return WMD3jesRelativeSampledn_;
}

const float &VVV0Tree::WMD4jesRelativeSampledn() {
  if (not WMD4jesRelativeSampledn_isLoaded) {
    if (WMD4jesRelativeSampledn_branch != 0) {
      WMD4jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    WMD4jesRelativeSampledn_isLoaded = true;
  }
  return WMD4jesRelativeSampledn_;
}

const int &VVV0Tree::NQGen0jesRelativeSampledn() {
  if (not NQGen0jesRelativeSampledn_isLoaded) {
    if (NQGen0jesRelativeSampledn_branch != 0) {
      NQGen0jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesRelativeSampledn_isLoaded = true;
  }
  return NQGen0jesRelativeSampledn_;
}

const int &VVV0Tree::NQGen1jesRelativeSampledn() {
  if (not NQGen1jesRelativeSampledn_isLoaded) {
    if (NQGen1jesRelativeSampledn_branch != 0) {
      NQGen1jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesRelativeSampledn_isLoaded = true;
  }
  return NQGen1jesRelativeSampledn_;
}

const int &VVV0Tree::NQGen2jesRelativeSampledn() {
  if (not NQGen2jesRelativeSampledn_isLoaded) {
    if (NQGen2jesRelativeSampledn_branch != 0) {
      NQGen2jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesRelativeSampledn_isLoaded = true;
  }
  return NQGen2jesRelativeSampledn_;
}

const int &VVV0Tree::NQGen3jesRelativeSampledn() {
  if (not NQGen3jesRelativeSampledn_isLoaded) {
    if (NQGen3jesRelativeSampledn_branch != 0) {
      NQGen3jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesRelativeSampledn_isLoaded = true;
  }
  return NQGen3jesRelativeSampledn_;
}

const int &VVV0Tree::NQGen4jesRelativeSampledn() {
  if (not NQGen4jesRelativeSampledn_isLoaded) {
    if (NQGen4jesRelativeSampledn_branch != 0) {
      NQGen4jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesRelativeSampledn_isLoaded = true;
  }
  return NQGen4jesRelativeSampledn_;
}

const int &VVV0Tree::NBGen0jesRelativeSampledn() {
  if (not NBGen0jesRelativeSampledn_isLoaded) {
    if (NBGen0jesRelativeSampledn_branch != 0) {
      NBGen0jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesRelativeSampledn_isLoaded = true;
  }
  return NBGen0jesRelativeSampledn_;
}

const int &VVV0Tree::NBGen1jesRelativeSampledn() {
  if (not NBGen1jesRelativeSampledn_isLoaded) {
    if (NBGen1jesRelativeSampledn_branch != 0) {
      NBGen1jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesRelativeSampledn_isLoaded = true;
  }
  return NBGen1jesRelativeSampledn_;
}

const int &VVV0Tree::NBGen2jesRelativeSampledn() {
  if (not NBGen2jesRelativeSampledn_isLoaded) {
    if (NBGen2jesRelativeSampledn_branch != 0) {
      NBGen2jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesRelativeSampledn_isLoaded = true;
  }
  return NBGen2jesRelativeSampledn_;
}

const int &VVV0Tree::NBGen3jesRelativeSampledn() {
  if (not NBGen3jesRelativeSampledn_isLoaded) {
    if (NBGen3jesRelativeSampledn_branch != 0) {
      NBGen3jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesRelativeSampledn_isLoaded = true;
  }
  return NBGen3jesRelativeSampledn_;
}

const int &VVV0Tree::NBGen4jesRelativeSampledn() {
  if (not NBGen4jesRelativeSampledn_isLoaded) {
    if (NBGen4jesRelativeSampledn_branch != 0) {
      NBGen4jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesRelativeSampledn_isLoaded = true;
  }
  return NBGen4jesRelativeSampledn_;
}

const int &VVV0Tree::NLGen0jesRelativeSampledn() {
  if (not NLGen0jesRelativeSampledn_isLoaded) {
    if (NLGen0jesRelativeSampledn_branch != 0) {
      NLGen0jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesRelativeSampledn_isLoaded = true;
  }
  return NLGen0jesRelativeSampledn_;
}

const int &VVV0Tree::NLGen1jesRelativeSampledn() {
  if (not NLGen1jesRelativeSampledn_isLoaded) {
    if (NLGen1jesRelativeSampledn_branch != 0) {
      NLGen1jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesRelativeSampledn_isLoaded = true;
  }
  return NLGen1jesRelativeSampledn_;
}

const int &VVV0Tree::NLGen2jesRelativeSampledn() {
  if (not NLGen2jesRelativeSampledn_isLoaded) {
    if (NLGen2jesRelativeSampledn_branch != 0) {
      NLGen2jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesRelativeSampledn_isLoaded = true;
  }
  return NLGen2jesRelativeSampledn_;
}

const int &VVV0Tree::NLGen3jesRelativeSampledn() {
  if (not NLGen3jesRelativeSampledn_isLoaded) {
    if (NLGen3jesRelativeSampledn_branch != 0) {
      NLGen3jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesRelativeSampledn_isLoaded = true;
  }
  return NLGen3jesRelativeSampledn_;
}

const int &VVV0Tree::NLGen4jesRelativeSampledn() {
  if (not NLGen4jesRelativeSampledn_isLoaded) {
    if (NLGen4jesRelativeSampledn_branch != 0) {
      NLGen4jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesRelativeSampledn_isLoaded = true;
  }
  return NLGen4jesRelativeSampledn_;
}

const int &VVV0Tree::NVQGen0jesRelativeSampledn() {
  if (not NVQGen0jesRelativeSampledn_isLoaded) {
    if (NVQGen0jesRelativeSampledn_branch != 0) {
      NVQGen0jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesRelativeSampledn_isLoaded = true;
  }
  return NVQGen0jesRelativeSampledn_;
}

const int &VVV0Tree::NVQGen1jesRelativeSampledn() {
  if (not NVQGen1jesRelativeSampledn_isLoaded) {
    if (NVQGen1jesRelativeSampledn_branch != 0) {
      NVQGen1jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesRelativeSampledn_isLoaded = true;
  }
  return NVQGen1jesRelativeSampledn_;
}

const int &VVV0Tree::NVQGen2jesRelativeSampledn() {
  if (not NVQGen2jesRelativeSampledn_isLoaded) {
    if (NVQGen2jesRelativeSampledn_branch != 0) {
      NVQGen2jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesRelativeSampledn_isLoaded = true;
  }
  return NVQGen2jesRelativeSampledn_;
}

const int &VVV0Tree::NVQGen3jesRelativeSampledn() {
  if (not NVQGen3jesRelativeSampledn_isLoaded) {
    if (NVQGen3jesRelativeSampledn_branch != 0) {
      NVQGen3jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesRelativeSampledn_isLoaded = true;
  }
  return NVQGen3jesRelativeSampledn_;
}

const int &VVV0Tree::NVQGen4jesRelativeSampledn() {
  if (not NVQGen4jesRelativeSampledn_isLoaded) {
    if (NVQGen4jesRelativeSampledn_branch != 0) {
      NVQGen4jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesRelativeSampledn_isLoaded = true;
  }
  return NVQGen4jesRelativeSampledn_;
}

const int &VVV0Tree::NiFJjesRelativeSampledn() {
  if (not NiFJjesRelativeSampledn_isLoaded) {
    if (NiFJjesRelativeSampledn_branch != 0) {
      NiFJjesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    NiFJjesRelativeSampledn_isLoaded = true;
  }
  return NiFJjesRelativeSampledn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesRelativeSampledn() {
  if (not iFJ0jesRelativeSampledn_isLoaded) {
    if (iFJ0jesRelativeSampledn_branch != 0) {
      iFJ0jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesRelativeSampledn_isLoaded = true;
  }
  return *iFJ0jesRelativeSampledn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesRelativeSampledn() {
  if (not iFJ1jesRelativeSampledn_isLoaded) {
    if (iFJ1jesRelativeSampledn_branch != 0) {
      iFJ1jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesRelativeSampledn_isLoaded = true;
  }
  return *iFJ1jesRelativeSampledn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesRelativeSampledn() {
  if (not iFJ2jesRelativeSampledn_isLoaded) {
    if (iFJ2jesRelativeSampledn_branch != 0) {
      iFJ2jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesRelativeSampledn_isLoaded = true;
  }
  return *iFJ2jesRelativeSampledn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesRelativeSampledn() {
  if (not iFJ3jesRelativeSampledn_isLoaded) {
    if (iFJ3jesRelativeSampledn_branch != 0) {
      iFJ3jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesRelativeSampledn_isLoaded = true;
  }
  return *iFJ3jesRelativeSampledn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesRelativeSampledn() {
  if (not iFJ4jesRelativeSampledn_isLoaded) {
    if (iFJ4jesRelativeSampledn_branch != 0) {
      iFJ4jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesRelativeSampledn_isLoaded = true;
  }
  return *iFJ4jesRelativeSampledn_;
}

const float &VVV0Tree::iVMD0jesRelativeSampledn() {
  if (not iVMD0jesRelativeSampledn_isLoaded) {
    if (iVMD0jesRelativeSampledn_branch != 0) {
      iVMD0jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesRelativeSampledn_isLoaded = true;
  }
  return iVMD0jesRelativeSampledn_;
}

const float &VVV0Tree::iVMD1jesRelativeSampledn() {
  if (not iVMD1jesRelativeSampledn_isLoaded) {
    if (iVMD1jesRelativeSampledn_branch != 0) {
      iVMD1jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesRelativeSampledn_isLoaded = true;
  }
  return iVMD1jesRelativeSampledn_;
}

const float &VVV0Tree::iVMD2jesRelativeSampledn() {
  if (not iVMD2jesRelativeSampledn_isLoaded) {
    if (iVMD2jesRelativeSampledn_branch != 0) {
      iVMD2jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesRelativeSampledn_isLoaded = true;
  }
  return iVMD2jesRelativeSampledn_;
}

const float &VVV0Tree::iVMD3jesRelativeSampledn() {
  if (not iVMD3jesRelativeSampledn_isLoaded) {
    if (iVMD3jesRelativeSampledn_branch != 0) {
      iVMD3jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesRelativeSampledn_isLoaded = true;
  }
  return iVMD3jesRelativeSampledn_;
}

const float &VVV0Tree::iVMD4jesRelativeSampledn() {
  if (not iVMD4jesRelativeSampledn_isLoaded) {
    if (iVMD4jesRelativeSampledn_branch != 0) {
      iVMD4jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesRelativeSampledn_isLoaded = true;
  }
  return iVMD4jesRelativeSampledn_;
}

const float &VVV0Tree::iWMD0jesRelativeSampledn() {
  if (not iWMD0jesRelativeSampledn_isLoaded) {
    if (iWMD0jesRelativeSampledn_branch != 0) {
      iWMD0jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesRelativeSampledn_isLoaded = true;
  }
  return iWMD0jesRelativeSampledn_;
}

const float &VVV0Tree::iWMD1jesRelativeSampledn() {
  if (not iWMD1jesRelativeSampledn_isLoaded) {
    if (iWMD1jesRelativeSampledn_branch != 0) {
      iWMD1jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesRelativeSampledn_isLoaded = true;
  }
  return iWMD1jesRelativeSampledn_;
}

const float &VVV0Tree::iWMD2jesRelativeSampledn() {
  if (not iWMD2jesRelativeSampledn_isLoaded) {
    if (iWMD2jesRelativeSampledn_branch != 0) {
      iWMD2jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesRelativeSampledn_isLoaded = true;
  }
  return iWMD2jesRelativeSampledn_;
}

const float &VVV0Tree::iWMD3jesRelativeSampledn() {
  if (not iWMD3jesRelativeSampledn_isLoaded) {
    if (iWMD3jesRelativeSampledn_branch != 0) {
      iWMD3jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesRelativeSampledn_isLoaded = true;
  }
  return iWMD3jesRelativeSampledn_;
}

const float &VVV0Tree::iWMD4jesRelativeSampledn() {
  if (not iWMD4jesRelativeSampledn_isLoaded) {
    if (iWMD4jesRelativeSampledn_branch != 0) {
      iWMD4jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesRelativeSampledn_isLoaded = true;
  }
  return iWMD4jesRelativeSampledn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesRelativeSampledn() {
  if (not METjesRelativeSampledn_isLoaded) {
    if (METjesRelativeSampledn_branch != 0) {
      METjesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch METjesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    METjesRelativeSampledn_isLoaded = true;
  }
  return *METjesRelativeSampledn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesRelativeSampledn() {
  if (not NujesRelativeSampledn_isLoaded) {
    if (NujesRelativeSampledn_branch != 0) {
      NujesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch NujesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    NujesRelativeSampledn_isLoaded = true;
  }
  return *NujesRelativeSampledn_;
}

const int &VVV0Tree::NJjesRelativeSampledn() {
  if (not NJjesRelativeSampledn_isLoaded) {
    if (NJjesRelativeSampledn_branch != 0) {
      NJjesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch NJjesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    NJjesRelativeSampledn_isLoaded = true;
  }
  return NJjesRelativeSampledn_;
}

const int &VVV0Tree::NbLoosejesRelativeSampledn() {
  if (not NbLoosejesRelativeSampledn_isLoaded) {
    if (NbLoosejesRelativeSampledn_branch != 0) {
      NbLoosejesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesRelativeSampledn_isLoaded = true;
  }
  return NbLoosejesRelativeSampledn_;
}

const int &VVV0Tree::NbMediumjesRelativeSampledn() {
  if (not NbMediumjesRelativeSampledn_isLoaded) {
    if (NbMediumjesRelativeSampledn_branch != 0) {
      NbMediumjesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesRelativeSampledn_isLoaded = true;
  }
  return NbMediumjesRelativeSampledn_;
}

const int &VVV0Tree::NbTightjesRelativeSampledn() {
  if (not NbTightjesRelativeSampledn_isLoaded) {
    if (NbTightjesRelativeSampledn_branch != 0) {
      NbTightjesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    NbTightjesRelativeSampledn_isLoaded = true;
  }
  return NbTightjesRelativeSampledn_;
}

const int &VVV0Tree::NoORNbLoosejesRelativeSampledn() {
  if (not NoORNbLoosejesRelativeSampledn_isLoaded) {
    if (NoORNbLoosejesRelativeSampledn_branch != 0) {
      NoORNbLoosejesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesRelativeSampledn_isLoaded = true;
  }
  return NoORNbLoosejesRelativeSampledn_;
}

const int &VVV0Tree::NoORNbMediumjesRelativeSampledn() {
  if (not NoORNbMediumjesRelativeSampledn_isLoaded) {
    if (NoORNbMediumjesRelativeSampledn_branch != 0) {
      NoORNbMediumjesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesRelativeSampledn_isLoaded = true;
  }
  return NoORNbMediumjesRelativeSampledn_;
}

const int &VVV0Tree::NoORNbTightjesRelativeSampledn() {
  if (not NoORNbTightjesRelativeSampledn_isLoaded) {
    if (NoORNbTightjesRelativeSampledn_branch != 0) {
      NoORNbTightjesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesRelativeSampledn_isLoaded = true;
  }
  return NoORNbTightjesRelativeSampledn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesRelativeSampledn() {
  if (not J0jesRelativeSampledn_isLoaded) {
    if (J0jesRelativeSampledn_branch != 0) {
      J0jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch J0jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    J0jesRelativeSampledn_isLoaded = true;
  }
  return *J0jesRelativeSampledn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesRelativeSampledn() {
  if (not J1jesRelativeSampledn_isLoaded) {
    if (J1jesRelativeSampledn_branch != 0) {
      J1jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch J1jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    J1jesRelativeSampledn_isLoaded = true;
  }
  return *J1jesRelativeSampledn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesRelativeSampledn() {
  if (not J2jesRelativeSampledn_isLoaded) {
    if (J2jesRelativeSampledn_branch != 0) {
      J2jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch J2jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    J2jesRelativeSampledn_isLoaded = true;
  }
  return *J2jesRelativeSampledn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesRelativeSampledn() {
  if (not J3jesRelativeSampledn_isLoaded) {
    if (J3jesRelativeSampledn_branch != 0) {
      J3jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch J3jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    J3jesRelativeSampledn_isLoaded = true;
  }
  return *J3jesRelativeSampledn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesRelativeSampledn() {
  if (not J4jesRelativeSampledn_isLoaded) {
    if (J4jesRelativeSampledn_branch != 0) {
      J4jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch J4jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    J4jesRelativeSampledn_isLoaded = true;
  }
  return *J4jesRelativeSampledn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesRelativeSampledn() {
  if (not J5jesRelativeSampledn_isLoaded) {
    if (J5jesRelativeSampledn_branch != 0) {
      J5jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch J5jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    J5jesRelativeSampledn_isLoaded = true;
  }
  return *J5jesRelativeSampledn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesRelativeSampledn() {
  if (not J6jesRelativeSampledn_isLoaded) {
    if (J6jesRelativeSampledn_branch != 0) {
      J6jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch J6jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    J6jesRelativeSampledn_isLoaded = true;
  }
  return *J6jesRelativeSampledn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesRelativeSampledn() {
  if (not J7jesRelativeSampledn_isLoaded) {
    if (J7jesRelativeSampledn_branch != 0) {
      J7jesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch J7jesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    J7jesRelativeSampledn_isLoaded = true;
  }
  return *J7jesRelativeSampledn_;
}

const vector<int> &VVV0Tree::NQJGenjesRelativeSampledn() {
  if (not NQJGenjesRelativeSampledn_isLoaded) {
    if (NQJGenjesRelativeSampledn_branch != 0) {
      NQJGenjesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesRelativeSampledn_isLoaded = true;
  }
  return *NQJGenjesRelativeSampledn_;
}

const vector<int> &VVV0Tree::NBJGenjesRelativeSampledn() {
  if (not NBJGenjesRelativeSampledn_isLoaded) {
    if (NBJGenjesRelativeSampledn_branch != 0) {
      NBJGenjesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesRelativeSampledn_isLoaded = true;
  }
  return *NBJGenjesRelativeSampledn_;
}

const vector<int> &VVV0Tree::NLJGenjesRelativeSampledn() {
  if (not NLJGenjesRelativeSampledn_isLoaded) {
    if (NLJGenjesRelativeSampledn_branch != 0) {
      NLJGenjesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesRelativeSampledn_isLoaded = true;
  }
  return *NLJGenjesRelativeSampledn_;
}

const float &VVV0Tree::MVVXjesRelativeSampledn() {
  if (not MVVXjesRelativeSampledn_isLoaded) {
    if (MVVXjesRelativeSampledn_branch != 0) {
      MVVXjesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    MVVXjesRelativeSampledn_isLoaded = true;
  }
  return MVVXjesRelativeSampledn_;
}

const float &VVV0Tree::PtVVXjesRelativeSampledn() {
  if (not PtVVXjesRelativeSampledn_isLoaded) {
    if (PtVVXjesRelativeSampledn_branch != 0) {
      PtVVXjesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesRelativeSampledn_isLoaded = true;
  }
  return PtVVXjesRelativeSampledn_;
}

const float &VVV0Tree::HTjesRelativeSampledn() {
  if (not HTjesRelativeSampledn_isLoaded) {
    if (HTjesRelativeSampledn_branch != 0) {
      HTjesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch HTjesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    HTjesRelativeSampledn_isLoaded = true;
  }
  return HTjesRelativeSampledn_;
}

const float &VVV0Tree::HTJjesRelativeSampledn() {
  if (not HTJjesRelativeSampledn_isLoaded) {
    if (HTJjesRelativeSampledn_branch != 0) {
      HTJjesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch HTJjesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    HTJjesRelativeSampledn_isLoaded = true;
  }
  return HTJjesRelativeSampledn_;
}

const float &VVV0Tree::HTFJjesRelativeSampledn() {
  if (not HTFJjesRelativeSampledn_isLoaded) {
    if (HTFJjesRelativeSampledn_branch != 0) {
      HTFJjesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    HTFJjesRelativeSampledn_isLoaded = true;
  }
  return HTFJjesRelativeSampledn_;
}

const float &VVV0Tree::SumPtFJjesRelativeSampledn() {
  if (not SumPtFJjesRelativeSampledn_isLoaded) {
    if (SumPtFJjesRelativeSampledn_branch != 0) {
      SumPtFJjesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesRelativeSampledn_isLoaded = true;
  }
  return SumPtFJjesRelativeSampledn_;
}

const float &VVV0Tree::SumPtJjesRelativeSampledn() {
  if (not SumPtJjesRelativeSampledn_isLoaded) {
    if (SumPtJjesRelativeSampledn_branch != 0) {
      SumPtJjesRelativeSampledn_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesRelativeSampledn_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesRelativeSampledn_isLoaded = true;
  }
  return SumPtJjesRelativeSampledn_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesRelativeFSRup() {
  if (not JsjesRelativeFSRup_isLoaded) {
    if (JsjesRelativeFSRup_branch != 0) {
      JsjesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch JsjesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    JsjesRelativeFSRup_isLoaded = true;
  }
  return *JsjesRelativeFSRup_;
}

const int &VVV0Tree::NFJjesRelativeFSRup() {
  if (not NFJjesRelativeFSRup_isLoaded) {
    if (NFJjesRelativeFSRup_branch != 0) {
      NFJjesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch NFJjesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    NFJjesRelativeFSRup_isLoaded = true;
  }
  return NFJjesRelativeFSRup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesRelativeFSRup() {
  if (not FJ0jesRelativeFSRup_isLoaded) {
    if (FJ0jesRelativeFSRup_branch != 0) {
      FJ0jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    FJ0jesRelativeFSRup_isLoaded = true;
  }
  return *FJ0jesRelativeFSRup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesRelativeFSRup() {
  if (not FJ1jesRelativeFSRup_isLoaded) {
    if (FJ1jesRelativeFSRup_branch != 0) {
      FJ1jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    FJ1jesRelativeFSRup_isLoaded = true;
  }
  return *FJ1jesRelativeFSRup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesRelativeFSRup() {
  if (not FJ2jesRelativeFSRup_isLoaded) {
    if (FJ2jesRelativeFSRup_branch != 0) {
      FJ2jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    FJ2jesRelativeFSRup_isLoaded = true;
  }
  return *FJ2jesRelativeFSRup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesRelativeFSRup() {
  if (not FJ3jesRelativeFSRup_isLoaded) {
    if (FJ3jesRelativeFSRup_branch != 0) {
      FJ3jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    FJ3jesRelativeFSRup_isLoaded = true;
  }
  return *FJ3jesRelativeFSRup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesRelativeFSRup() {
  if (not FJ4jesRelativeFSRup_isLoaded) {
    if (FJ4jesRelativeFSRup_branch != 0) {
      FJ4jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    FJ4jesRelativeFSRup_isLoaded = true;
  }
  return *FJ4jesRelativeFSRup_;
}

const float &VVV0Tree::VMD0jesRelativeFSRup() {
  if (not VMD0jesRelativeFSRup_isLoaded) {
    if (VMD0jesRelativeFSRup_branch != 0) {
      VMD0jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    VMD0jesRelativeFSRup_isLoaded = true;
  }
  return VMD0jesRelativeFSRup_;
}

const float &VVV0Tree::VMD1jesRelativeFSRup() {
  if (not VMD1jesRelativeFSRup_isLoaded) {
    if (VMD1jesRelativeFSRup_branch != 0) {
      VMD1jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    VMD1jesRelativeFSRup_isLoaded = true;
  }
  return VMD1jesRelativeFSRup_;
}

const float &VVV0Tree::VMD2jesRelativeFSRup() {
  if (not VMD2jesRelativeFSRup_isLoaded) {
    if (VMD2jesRelativeFSRup_branch != 0) {
      VMD2jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    VMD2jesRelativeFSRup_isLoaded = true;
  }
  return VMD2jesRelativeFSRup_;
}

const float &VVV0Tree::VMD3jesRelativeFSRup() {
  if (not VMD3jesRelativeFSRup_isLoaded) {
    if (VMD3jesRelativeFSRup_branch != 0) {
      VMD3jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    VMD3jesRelativeFSRup_isLoaded = true;
  }
  return VMD3jesRelativeFSRup_;
}

const float &VVV0Tree::VMD4jesRelativeFSRup() {
  if (not VMD4jesRelativeFSRup_isLoaded) {
    if (VMD4jesRelativeFSRup_branch != 0) {
      VMD4jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    VMD4jesRelativeFSRup_isLoaded = true;
  }
  return VMD4jesRelativeFSRup_;
}

const float &VVV0Tree::WMD0jesRelativeFSRup() {
  if (not WMD0jesRelativeFSRup_isLoaded) {
    if (WMD0jesRelativeFSRup_branch != 0) {
      WMD0jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    WMD0jesRelativeFSRup_isLoaded = true;
  }
  return WMD0jesRelativeFSRup_;
}

const float &VVV0Tree::WMD1jesRelativeFSRup() {
  if (not WMD1jesRelativeFSRup_isLoaded) {
    if (WMD1jesRelativeFSRup_branch != 0) {
      WMD1jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    WMD1jesRelativeFSRup_isLoaded = true;
  }
  return WMD1jesRelativeFSRup_;
}

const float &VVV0Tree::WMD2jesRelativeFSRup() {
  if (not WMD2jesRelativeFSRup_isLoaded) {
    if (WMD2jesRelativeFSRup_branch != 0) {
      WMD2jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    WMD2jesRelativeFSRup_isLoaded = true;
  }
  return WMD2jesRelativeFSRup_;
}

const float &VVV0Tree::WMD3jesRelativeFSRup() {
  if (not WMD3jesRelativeFSRup_isLoaded) {
    if (WMD3jesRelativeFSRup_branch != 0) {
      WMD3jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    WMD3jesRelativeFSRup_isLoaded = true;
  }
  return WMD3jesRelativeFSRup_;
}

const float &VVV0Tree::WMD4jesRelativeFSRup() {
  if (not WMD4jesRelativeFSRup_isLoaded) {
    if (WMD4jesRelativeFSRup_branch != 0) {
      WMD4jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    WMD4jesRelativeFSRup_isLoaded = true;
  }
  return WMD4jesRelativeFSRup_;
}

const int &VVV0Tree::NQGen0jesRelativeFSRup() {
  if (not NQGen0jesRelativeFSRup_isLoaded) {
    if (NQGen0jesRelativeFSRup_branch != 0) {
      NQGen0jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesRelativeFSRup_isLoaded = true;
  }
  return NQGen0jesRelativeFSRup_;
}

const int &VVV0Tree::NQGen1jesRelativeFSRup() {
  if (not NQGen1jesRelativeFSRup_isLoaded) {
    if (NQGen1jesRelativeFSRup_branch != 0) {
      NQGen1jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesRelativeFSRup_isLoaded = true;
  }
  return NQGen1jesRelativeFSRup_;
}

const int &VVV0Tree::NQGen2jesRelativeFSRup() {
  if (not NQGen2jesRelativeFSRup_isLoaded) {
    if (NQGen2jesRelativeFSRup_branch != 0) {
      NQGen2jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesRelativeFSRup_isLoaded = true;
  }
  return NQGen2jesRelativeFSRup_;
}

const int &VVV0Tree::NQGen3jesRelativeFSRup() {
  if (not NQGen3jesRelativeFSRup_isLoaded) {
    if (NQGen3jesRelativeFSRup_branch != 0) {
      NQGen3jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesRelativeFSRup_isLoaded = true;
  }
  return NQGen3jesRelativeFSRup_;
}

const int &VVV0Tree::NQGen4jesRelativeFSRup() {
  if (not NQGen4jesRelativeFSRup_isLoaded) {
    if (NQGen4jesRelativeFSRup_branch != 0) {
      NQGen4jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesRelativeFSRup_isLoaded = true;
  }
  return NQGen4jesRelativeFSRup_;
}

const int &VVV0Tree::NBGen0jesRelativeFSRup() {
  if (not NBGen0jesRelativeFSRup_isLoaded) {
    if (NBGen0jesRelativeFSRup_branch != 0) {
      NBGen0jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesRelativeFSRup_isLoaded = true;
  }
  return NBGen0jesRelativeFSRup_;
}

const int &VVV0Tree::NBGen1jesRelativeFSRup() {
  if (not NBGen1jesRelativeFSRup_isLoaded) {
    if (NBGen1jesRelativeFSRup_branch != 0) {
      NBGen1jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesRelativeFSRup_isLoaded = true;
  }
  return NBGen1jesRelativeFSRup_;
}

const int &VVV0Tree::NBGen2jesRelativeFSRup() {
  if (not NBGen2jesRelativeFSRup_isLoaded) {
    if (NBGen2jesRelativeFSRup_branch != 0) {
      NBGen2jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesRelativeFSRup_isLoaded = true;
  }
  return NBGen2jesRelativeFSRup_;
}

const int &VVV0Tree::NBGen3jesRelativeFSRup() {
  if (not NBGen3jesRelativeFSRup_isLoaded) {
    if (NBGen3jesRelativeFSRup_branch != 0) {
      NBGen3jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesRelativeFSRup_isLoaded = true;
  }
  return NBGen3jesRelativeFSRup_;
}

const int &VVV0Tree::NBGen4jesRelativeFSRup() {
  if (not NBGen4jesRelativeFSRup_isLoaded) {
    if (NBGen4jesRelativeFSRup_branch != 0) {
      NBGen4jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesRelativeFSRup_isLoaded = true;
  }
  return NBGen4jesRelativeFSRup_;
}

const int &VVV0Tree::NLGen0jesRelativeFSRup() {
  if (not NLGen0jesRelativeFSRup_isLoaded) {
    if (NLGen0jesRelativeFSRup_branch != 0) {
      NLGen0jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesRelativeFSRup_isLoaded = true;
  }
  return NLGen0jesRelativeFSRup_;
}

const int &VVV0Tree::NLGen1jesRelativeFSRup() {
  if (not NLGen1jesRelativeFSRup_isLoaded) {
    if (NLGen1jesRelativeFSRup_branch != 0) {
      NLGen1jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesRelativeFSRup_isLoaded = true;
  }
  return NLGen1jesRelativeFSRup_;
}

const int &VVV0Tree::NLGen2jesRelativeFSRup() {
  if (not NLGen2jesRelativeFSRup_isLoaded) {
    if (NLGen2jesRelativeFSRup_branch != 0) {
      NLGen2jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesRelativeFSRup_isLoaded = true;
  }
  return NLGen2jesRelativeFSRup_;
}

const int &VVV0Tree::NLGen3jesRelativeFSRup() {
  if (not NLGen3jesRelativeFSRup_isLoaded) {
    if (NLGen3jesRelativeFSRup_branch != 0) {
      NLGen3jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesRelativeFSRup_isLoaded = true;
  }
  return NLGen3jesRelativeFSRup_;
}

const int &VVV0Tree::NLGen4jesRelativeFSRup() {
  if (not NLGen4jesRelativeFSRup_isLoaded) {
    if (NLGen4jesRelativeFSRup_branch != 0) {
      NLGen4jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesRelativeFSRup_isLoaded = true;
  }
  return NLGen4jesRelativeFSRup_;
}

const int &VVV0Tree::NVQGen0jesRelativeFSRup() {
  if (not NVQGen0jesRelativeFSRup_isLoaded) {
    if (NVQGen0jesRelativeFSRup_branch != 0) {
      NVQGen0jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesRelativeFSRup_isLoaded = true;
  }
  return NVQGen0jesRelativeFSRup_;
}

const int &VVV0Tree::NVQGen1jesRelativeFSRup() {
  if (not NVQGen1jesRelativeFSRup_isLoaded) {
    if (NVQGen1jesRelativeFSRup_branch != 0) {
      NVQGen1jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesRelativeFSRup_isLoaded = true;
  }
  return NVQGen1jesRelativeFSRup_;
}

const int &VVV0Tree::NVQGen2jesRelativeFSRup() {
  if (not NVQGen2jesRelativeFSRup_isLoaded) {
    if (NVQGen2jesRelativeFSRup_branch != 0) {
      NVQGen2jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesRelativeFSRup_isLoaded = true;
  }
  return NVQGen2jesRelativeFSRup_;
}

const int &VVV0Tree::NVQGen3jesRelativeFSRup() {
  if (not NVQGen3jesRelativeFSRup_isLoaded) {
    if (NVQGen3jesRelativeFSRup_branch != 0) {
      NVQGen3jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesRelativeFSRup_isLoaded = true;
  }
  return NVQGen3jesRelativeFSRup_;
}

const int &VVV0Tree::NVQGen4jesRelativeFSRup() {
  if (not NVQGen4jesRelativeFSRup_isLoaded) {
    if (NVQGen4jesRelativeFSRup_branch != 0) {
      NVQGen4jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesRelativeFSRup_isLoaded = true;
  }
  return NVQGen4jesRelativeFSRup_;
}

const int &VVV0Tree::NiFJjesRelativeFSRup() {
  if (not NiFJjesRelativeFSRup_isLoaded) {
    if (NiFJjesRelativeFSRup_branch != 0) {
      NiFJjesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    NiFJjesRelativeFSRup_isLoaded = true;
  }
  return NiFJjesRelativeFSRup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesRelativeFSRup() {
  if (not iFJ0jesRelativeFSRup_isLoaded) {
    if (iFJ0jesRelativeFSRup_branch != 0) {
      iFJ0jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesRelativeFSRup_isLoaded = true;
  }
  return *iFJ0jesRelativeFSRup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesRelativeFSRup() {
  if (not iFJ1jesRelativeFSRup_isLoaded) {
    if (iFJ1jesRelativeFSRup_branch != 0) {
      iFJ1jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesRelativeFSRup_isLoaded = true;
  }
  return *iFJ1jesRelativeFSRup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesRelativeFSRup() {
  if (not iFJ2jesRelativeFSRup_isLoaded) {
    if (iFJ2jesRelativeFSRup_branch != 0) {
      iFJ2jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesRelativeFSRup_isLoaded = true;
  }
  return *iFJ2jesRelativeFSRup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesRelativeFSRup() {
  if (not iFJ3jesRelativeFSRup_isLoaded) {
    if (iFJ3jesRelativeFSRup_branch != 0) {
      iFJ3jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesRelativeFSRup_isLoaded = true;
  }
  return *iFJ3jesRelativeFSRup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesRelativeFSRup() {
  if (not iFJ4jesRelativeFSRup_isLoaded) {
    if (iFJ4jesRelativeFSRup_branch != 0) {
      iFJ4jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesRelativeFSRup_isLoaded = true;
  }
  return *iFJ4jesRelativeFSRup_;
}

const float &VVV0Tree::iVMD0jesRelativeFSRup() {
  if (not iVMD0jesRelativeFSRup_isLoaded) {
    if (iVMD0jesRelativeFSRup_branch != 0) {
      iVMD0jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesRelativeFSRup_isLoaded = true;
  }
  return iVMD0jesRelativeFSRup_;
}

const float &VVV0Tree::iVMD1jesRelativeFSRup() {
  if (not iVMD1jesRelativeFSRup_isLoaded) {
    if (iVMD1jesRelativeFSRup_branch != 0) {
      iVMD1jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesRelativeFSRup_isLoaded = true;
  }
  return iVMD1jesRelativeFSRup_;
}

const float &VVV0Tree::iVMD2jesRelativeFSRup() {
  if (not iVMD2jesRelativeFSRup_isLoaded) {
    if (iVMD2jesRelativeFSRup_branch != 0) {
      iVMD2jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesRelativeFSRup_isLoaded = true;
  }
  return iVMD2jesRelativeFSRup_;
}

const float &VVV0Tree::iVMD3jesRelativeFSRup() {
  if (not iVMD3jesRelativeFSRup_isLoaded) {
    if (iVMD3jesRelativeFSRup_branch != 0) {
      iVMD3jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesRelativeFSRup_isLoaded = true;
  }
  return iVMD3jesRelativeFSRup_;
}

const float &VVV0Tree::iVMD4jesRelativeFSRup() {
  if (not iVMD4jesRelativeFSRup_isLoaded) {
    if (iVMD4jesRelativeFSRup_branch != 0) {
      iVMD4jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesRelativeFSRup_isLoaded = true;
  }
  return iVMD4jesRelativeFSRup_;
}

const float &VVV0Tree::iWMD0jesRelativeFSRup() {
  if (not iWMD0jesRelativeFSRup_isLoaded) {
    if (iWMD0jesRelativeFSRup_branch != 0) {
      iWMD0jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesRelativeFSRup_isLoaded = true;
  }
  return iWMD0jesRelativeFSRup_;
}

const float &VVV0Tree::iWMD1jesRelativeFSRup() {
  if (not iWMD1jesRelativeFSRup_isLoaded) {
    if (iWMD1jesRelativeFSRup_branch != 0) {
      iWMD1jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesRelativeFSRup_isLoaded = true;
  }
  return iWMD1jesRelativeFSRup_;
}

const float &VVV0Tree::iWMD2jesRelativeFSRup() {
  if (not iWMD2jesRelativeFSRup_isLoaded) {
    if (iWMD2jesRelativeFSRup_branch != 0) {
      iWMD2jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesRelativeFSRup_isLoaded = true;
  }
  return iWMD2jesRelativeFSRup_;
}

const float &VVV0Tree::iWMD3jesRelativeFSRup() {
  if (not iWMD3jesRelativeFSRup_isLoaded) {
    if (iWMD3jesRelativeFSRup_branch != 0) {
      iWMD3jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesRelativeFSRup_isLoaded = true;
  }
  return iWMD3jesRelativeFSRup_;
}

const float &VVV0Tree::iWMD4jesRelativeFSRup() {
  if (not iWMD4jesRelativeFSRup_isLoaded) {
    if (iWMD4jesRelativeFSRup_branch != 0) {
      iWMD4jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesRelativeFSRup_isLoaded = true;
  }
  return iWMD4jesRelativeFSRup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesRelativeFSRup() {
  if (not METjesRelativeFSRup_isLoaded) {
    if (METjesRelativeFSRup_branch != 0) {
      METjesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch METjesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    METjesRelativeFSRup_isLoaded = true;
  }
  return *METjesRelativeFSRup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesRelativeFSRup() {
  if (not NujesRelativeFSRup_isLoaded) {
    if (NujesRelativeFSRup_branch != 0) {
      NujesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch NujesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    NujesRelativeFSRup_isLoaded = true;
  }
  return *NujesRelativeFSRup_;
}

const int &VVV0Tree::NJjesRelativeFSRup() {
  if (not NJjesRelativeFSRup_isLoaded) {
    if (NJjesRelativeFSRup_branch != 0) {
      NJjesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch NJjesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    NJjesRelativeFSRup_isLoaded = true;
  }
  return NJjesRelativeFSRup_;
}

const int &VVV0Tree::NbLoosejesRelativeFSRup() {
  if (not NbLoosejesRelativeFSRup_isLoaded) {
    if (NbLoosejesRelativeFSRup_branch != 0) {
      NbLoosejesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesRelativeFSRup_isLoaded = true;
  }
  return NbLoosejesRelativeFSRup_;
}

const int &VVV0Tree::NbMediumjesRelativeFSRup() {
  if (not NbMediumjesRelativeFSRup_isLoaded) {
    if (NbMediumjesRelativeFSRup_branch != 0) {
      NbMediumjesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesRelativeFSRup_isLoaded = true;
  }
  return NbMediumjesRelativeFSRup_;
}

const int &VVV0Tree::NbTightjesRelativeFSRup() {
  if (not NbTightjesRelativeFSRup_isLoaded) {
    if (NbTightjesRelativeFSRup_branch != 0) {
      NbTightjesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    NbTightjesRelativeFSRup_isLoaded = true;
  }
  return NbTightjesRelativeFSRup_;
}

const int &VVV0Tree::NoORNbLoosejesRelativeFSRup() {
  if (not NoORNbLoosejesRelativeFSRup_isLoaded) {
    if (NoORNbLoosejesRelativeFSRup_branch != 0) {
      NoORNbLoosejesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesRelativeFSRup_isLoaded = true;
  }
  return NoORNbLoosejesRelativeFSRup_;
}

const int &VVV0Tree::NoORNbMediumjesRelativeFSRup() {
  if (not NoORNbMediumjesRelativeFSRup_isLoaded) {
    if (NoORNbMediumjesRelativeFSRup_branch != 0) {
      NoORNbMediumjesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesRelativeFSRup_isLoaded = true;
  }
  return NoORNbMediumjesRelativeFSRup_;
}

const int &VVV0Tree::NoORNbTightjesRelativeFSRup() {
  if (not NoORNbTightjesRelativeFSRup_isLoaded) {
    if (NoORNbTightjesRelativeFSRup_branch != 0) {
      NoORNbTightjesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesRelativeFSRup_isLoaded = true;
  }
  return NoORNbTightjesRelativeFSRup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesRelativeFSRup() {
  if (not J0jesRelativeFSRup_isLoaded) {
    if (J0jesRelativeFSRup_branch != 0) {
      J0jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch J0jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    J0jesRelativeFSRup_isLoaded = true;
  }
  return *J0jesRelativeFSRup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesRelativeFSRup() {
  if (not J1jesRelativeFSRup_isLoaded) {
    if (J1jesRelativeFSRup_branch != 0) {
      J1jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch J1jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    J1jesRelativeFSRup_isLoaded = true;
  }
  return *J1jesRelativeFSRup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesRelativeFSRup() {
  if (not J2jesRelativeFSRup_isLoaded) {
    if (J2jesRelativeFSRup_branch != 0) {
      J2jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch J2jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    J2jesRelativeFSRup_isLoaded = true;
  }
  return *J2jesRelativeFSRup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesRelativeFSRup() {
  if (not J3jesRelativeFSRup_isLoaded) {
    if (J3jesRelativeFSRup_branch != 0) {
      J3jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch J3jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    J3jesRelativeFSRup_isLoaded = true;
  }
  return *J3jesRelativeFSRup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesRelativeFSRup() {
  if (not J4jesRelativeFSRup_isLoaded) {
    if (J4jesRelativeFSRup_branch != 0) {
      J4jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch J4jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    J4jesRelativeFSRup_isLoaded = true;
  }
  return *J4jesRelativeFSRup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesRelativeFSRup() {
  if (not J5jesRelativeFSRup_isLoaded) {
    if (J5jesRelativeFSRup_branch != 0) {
      J5jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch J5jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    J5jesRelativeFSRup_isLoaded = true;
  }
  return *J5jesRelativeFSRup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesRelativeFSRup() {
  if (not J6jesRelativeFSRup_isLoaded) {
    if (J6jesRelativeFSRup_branch != 0) {
      J6jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch J6jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    J6jesRelativeFSRup_isLoaded = true;
  }
  return *J6jesRelativeFSRup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesRelativeFSRup() {
  if (not J7jesRelativeFSRup_isLoaded) {
    if (J7jesRelativeFSRup_branch != 0) {
      J7jesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch J7jesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    J7jesRelativeFSRup_isLoaded = true;
  }
  return *J7jesRelativeFSRup_;
}

const vector<int> &VVV0Tree::NQJGenjesRelativeFSRup() {
  if (not NQJGenjesRelativeFSRup_isLoaded) {
    if (NQJGenjesRelativeFSRup_branch != 0) {
      NQJGenjesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesRelativeFSRup_isLoaded = true;
  }
  return *NQJGenjesRelativeFSRup_;
}

const vector<int> &VVV0Tree::NBJGenjesRelativeFSRup() {
  if (not NBJGenjesRelativeFSRup_isLoaded) {
    if (NBJGenjesRelativeFSRup_branch != 0) {
      NBJGenjesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesRelativeFSRup_isLoaded = true;
  }
  return *NBJGenjesRelativeFSRup_;
}

const vector<int> &VVV0Tree::NLJGenjesRelativeFSRup() {
  if (not NLJGenjesRelativeFSRup_isLoaded) {
    if (NLJGenjesRelativeFSRup_branch != 0) {
      NLJGenjesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesRelativeFSRup_isLoaded = true;
  }
  return *NLJGenjesRelativeFSRup_;
}

const float &VVV0Tree::MVVXjesRelativeFSRup() {
  if (not MVVXjesRelativeFSRup_isLoaded) {
    if (MVVXjesRelativeFSRup_branch != 0) {
      MVVXjesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    MVVXjesRelativeFSRup_isLoaded = true;
  }
  return MVVXjesRelativeFSRup_;
}

const float &VVV0Tree::PtVVXjesRelativeFSRup() {
  if (not PtVVXjesRelativeFSRup_isLoaded) {
    if (PtVVXjesRelativeFSRup_branch != 0) {
      PtVVXjesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesRelativeFSRup_isLoaded = true;
  }
  return PtVVXjesRelativeFSRup_;
}

const float &VVV0Tree::HTjesRelativeFSRup() {
  if (not HTjesRelativeFSRup_isLoaded) {
    if (HTjesRelativeFSRup_branch != 0) {
      HTjesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch HTjesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    HTjesRelativeFSRup_isLoaded = true;
  }
  return HTjesRelativeFSRup_;
}

const float &VVV0Tree::HTJjesRelativeFSRup() {
  if (not HTJjesRelativeFSRup_isLoaded) {
    if (HTJjesRelativeFSRup_branch != 0) {
      HTJjesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch HTJjesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    HTJjesRelativeFSRup_isLoaded = true;
  }
  return HTJjesRelativeFSRup_;
}

const float &VVV0Tree::HTFJjesRelativeFSRup() {
  if (not HTFJjesRelativeFSRup_isLoaded) {
    if (HTFJjesRelativeFSRup_branch != 0) {
      HTFJjesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    HTFJjesRelativeFSRup_isLoaded = true;
  }
  return HTFJjesRelativeFSRup_;
}

const float &VVV0Tree::SumPtFJjesRelativeFSRup() {
  if (not SumPtFJjesRelativeFSRup_isLoaded) {
    if (SumPtFJjesRelativeFSRup_branch != 0) {
      SumPtFJjesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesRelativeFSRup_isLoaded = true;
  }
  return SumPtFJjesRelativeFSRup_;
}

const float &VVV0Tree::SumPtJjesRelativeFSRup() {
  if (not SumPtJjesRelativeFSRup_isLoaded) {
    if (SumPtJjesRelativeFSRup_branch != 0) {
      SumPtJjesRelativeFSRup_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesRelativeFSRup_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesRelativeFSRup_isLoaded = true;
  }
  return SumPtJjesRelativeFSRup_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesRelativeFSRdn() {
  if (not JsjesRelativeFSRdn_isLoaded) {
    if (JsjesRelativeFSRdn_branch != 0) {
      JsjesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch JsjesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    JsjesRelativeFSRdn_isLoaded = true;
  }
  return *JsjesRelativeFSRdn_;
}

const int &VVV0Tree::NFJjesRelativeFSRdn() {
  if (not NFJjesRelativeFSRdn_isLoaded) {
    if (NFJjesRelativeFSRdn_branch != 0) {
      NFJjesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NFJjesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    NFJjesRelativeFSRdn_isLoaded = true;
  }
  return NFJjesRelativeFSRdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesRelativeFSRdn() {
  if (not FJ0jesRelativeFSRdn_isLoaded) {
    if (FJ0jesRelativeFSRdn_branch != 0) {
      FJ0jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    FJ0jesRelativeFSRdn_isLoaded = true;
  }
  return *FJ0jesRelativeFSRdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesRelativeFSRdn() {
  if (not FJ1jesRelativeFSRdn_isLoaded) {
    if (FJ1jesRelativeFSRdn_branch != 0) {
      FJ1jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    FJ1jesRelativeFSRdn_isLoaded = true;
  }
  return *FJ1jesRelativeFSRdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesRelativeFSRdn() {
  if (not FJ2jesRelativeFSRdn_isLoaded) {
    if (FJ2jesRelativeFSRdn_branch != 0) {
      FJ2jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    FJ2jesRelativeFSRdn_isLoaded = true;
  }
  return *FJ2jesRelativeFSRdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesRelativeFSRdn() {
  if (not FJ3jesRelativeFSRdn_isLoaded) {
    if (FJ3jesRelativeFSRdn_branch != 0) {
      FJ3jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    FJ3jesRelativeFSRdn_isLoaded = true;
  }
  return *FJ3jesRelativeFSRdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesRelativeFSRdn() {
  if (not FJ4jesRelativeFSRdn_isLoaded) {
    if (FJ4jesRelativeFSRdn_branch != 0) {
      FJ4jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    FJ4jesRelativeFSRdn_isLoaded = true;
  }
  return *FJ4jesRelativeFSRdn_;
}

const float &VVV0Tree::VMD0jesRelativeFSRdn() {
  if (not VMD0jesRelativeFSRdn_isLoaded) {
    if (VMD0jesRelativeFSRdn_branch != 0) {
      VMD0jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    VMD0jesRelativeFSRdn_isLoaded = true;
  }
  return VMD0jesRelativeFSRdn_;
}

const float &VVV0Tree::VMD1jesRelativeFSRdn() {
  if (not VMD1jesRelativeFSRdn_isLoaded) {
    if (VMD1jesRelativeFSRdn_branch != 0) {
      VMD1jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    VMD1jesRelativeFSRdn_isLoaded = true;
  }
  return VMD1jesRelativeFSRdn_;
}

const float &VVV0Tree::VMD2jesRelativeFSRdn() {
  if (not VMD2jesRelativeFSRdn_isLoaded) {
    if (VMD2jesRelativeFSRdn_branch != 0) {
      VMD2jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    VMD2jesRelativeFSRdn_isLoaded = true;
  }
  return VMD2jesRelativeFSRdn_;
}

const float &VVV0Tree::VMD3jesRelativeFSRdn() {
  if (not VMD3jesRelativeFSRdn_isLoaded) {
    if (VMD3jesRelativeFSRdn_branch != 0) {
      VMD3jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    VMD3jesRelativeFSRdn_isLoaded = true;
  }
  return VMD3jesRelativeFSRdn_;
}

const float &VVV0Tree::VMD4jesRelativeFSRdn() {
  if (not VMD4jesRelativeFSRdn_isLoaded) {
    if (VMD4jesRelativeFSRdn_branch != 0) {
      VMD4jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    VMD4jesRelativeFSRdn_isLoaded = true;
  }
  return VMD4jesRelativeFSRdn_;
}

const float &VVV0Tree::WMD0jesRelativeFSRdn() {
  if (not WMD0jesRelativeFSRdn_isLoaded) {
    if (WMD0jesRelativeFSRdn_branch != 0) {
      WMD0jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    WMD0jesRelativeFSRdn_isLoaded = true;
  }
  return WMD0jesRelativeFSRdn_;
}

const float &VVV0Tree::WMD1jesRelativeFSRdn() {
  if (not WMD1jesRelativeFSRdn_isLoaded) {
    if (WMD1jesRelativeFSRdn_branch != 0) {
      WMD1jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    WMD1jesRelativeFSRdn_isLoaded = true;
  }
  return WMD1jesRelativeFSRdn_;
}

const float &VVV0Tree::WMD2jesRelativeFSRdn() {
  if (not WMD2jesRelativeFSRdn_isLoaded) {
    if (WMD2jesRelativeFSRdn_branch != 0) {
      WMD2jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    WMD2jesRelativeFSRdn_isLoaded = true;
  }
  return WMD2jesRelativeFSRdn_;
}

const float &VVV0Tree::WMD3jesRelativeFSRdn() {
  if (not WMD3jesRelativeFSRdn_isLoaded) {
    if (WMD3jesRelativeFSRdn_branch != 0) {
      WMD3jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    WMD3jesRelativeFSRdn_isLoaded = true;
  }
  return WMD3jesRelativeFSRdn_;
}

const float &VVV0Tree::WMD4jesRelativeFSRdn() {
  if (not WMD4jesRelativeFSRdn_isLoaded) {
    if (WMD4jesRelativeFSRdn_branch != 0) {
      WMD4jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    WMD4jesRelativeFSRdn_isLoaded = true;
  }
  return WMD4jesRelativeFSRdn_;
}

const int &VVV0Tree::NQGen0jesRelativeFSRdn() {
  if (not NQGen0jesRelativeFSRdn_isLoaded) {
    if (NQGen0jesRelativeFSRdn_branch != 0) {
      NQGen0jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesRelativeFSRdn_isLoaded = true;
  }
  return NQGen0jesRelativeFSRdn_;
}

const int &VVV0Tree::NQGen1jesRelativeFSRdn() {
  if (not NQGen1jesRelativeFSRdn_isLoaded) {
    if (NQGen1jesRelativeFSRdn_branch != 0) {
      NQGen1jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesRelativeFSRdn_isLoaded = true;
  }
  return NQGen1jesRelativeFSRdn_;
}

const int &VVV0Tree::NQGen2jesRelativeFSRdn() {
  if (not NQGen2jesRelativeFSRdn_isLoaded) {
    if (NQGen2jesRelativeFSRdn_branch != 0) {
      NQGen2jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesRelativeFSRdn_isLoaded = true;
  }
  return NQGen2jesRelativeFSRdn_;
}

const int &VVV0Tree::NQGen3jesRelativeFSRdn() {
  if (not NQGen3jesRelativeFSRdn_isLoaded) {
    if (NQGen3jesRelativeFSRdn_branch != 0) {
      NQGen3jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesRelativeFSRdn_isLoaded = true;
  }
  return NQGen3jesRelativeFSRdn_;
}

const int &VVV0Tree::NQGen4jesRelativeFSRdn() {
  if (not NQGen4jesRelativeFSRdn_isLoaded) {
    if (NQGen4jesRelativeFSRdn_branch != 0) {
      NQGen4jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesRelativeFSRdn_isLoaded = true;
  }
  return NQGen4jesRelativeFSRdn_;
}

const int &VVV0Tree::NBGen0jesRelativeFSRdn() {
  if (not NBGen0jesRelativeFSRdn_isLoaded) {
    if (NBGen0jesRelativeFSRdn_branch != 0) {
      NBGen0jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesRelativeFSRdn_isLoaded = true;
  }
  return NBGen0jesRelativeFSRdn_;
}

const int &VVV0Tree::NBGen1jesRelativeFSRdn() {
  if (not NBGen1jesRelativeFSRdn_isLoaded) {
    if (NBGen1jesRelativeFSRdn_branch != 0) {
      NBGen1jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesRelativeFSRdn_isLoaded = true;
  }
  return NBGen1jesRelativeFSRdn_;
}

const int &VVV0Tree::NBGen2jesRelativeFSRdn() {
  if (not NBGen2jesRelativeFSRdn_isLoaded) {
    if (NBGen2jesRelativeFSRdn_branch != 0) {
      NBGen2jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesRelativeFSRdn_isLoaded = true;
  }
  return NBGen2jesRelativeFSRdn_;
}

const int &VVV0Tree::NBGen3jesRelativeFSRdn() {
  if (not NBGen3jesRelativeFSRdn_isLoaded) {
    if (NBGen3jesRelativeFSRdn_branch != 0) {
      NBGen3jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesRelativeFSRdn_isLoaded = true;
  }
  return NBGen3jesRelativeFSRdn_;
}

const int &VVV0Tree::NBGen4jesRelativeFSRdn() {
  if (not NBGen4jesRelativeFSRdn_isLoaded) {
    if (NBGen4jesRelativeFSRdn_branch != 0) {
      NBGen4jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesRelativeFSRdn_isLoaded = true;
  }
  return NBGen4jesRelativeFSRdn_;
}

const int &VVV0Tree::NLGen0jesRelativeFSRdn() {
  if (not NLGen0jesRelativeFSRdn_isLoaded) {
    if (NLGen0jesRelativeFSRdn_branch != 0) {
      NLGen0jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesRelativeFSRdn_isLoaded = true;
  }
  return NLGen0jesRelativeFSRdn_;
}

const int &VVV0Tree::NLGen1jesRelativeFSRdn() {
  if (not NLGen1jesRelativeFSRdn_isLoaded) {
    if (NLGen1jesRelativeFSRdn_branch != 0) {
      NLGen1jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesRelativeFSRdn_isLoaded = true;
  }
  return NLGen1jesRelativeFSRdn_;
}

const int &VVV0Tree::NLGen2jesRelativeFSRdn() {
  if (not NLGen2jesRelativeFSRdn_isLoaded) {
    if (NLGen2jesRelativeFSRdn_branch != 0) {
      NLGen2jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesRelativeFSRdn_isLoaded = true;
  }
  return NLGen2jesRelativeFSRdn_;
}

const int &VVV0Tree::NLGen3jesRelativeFSRdn() {
  if (not NLGen3jesRelativeFSRdn_isLoaded) {
    if (NLGen3jesRelativeFSRdn_branch != 0) {
      NLGen3jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesRelativeFSRdn_isLoaded = true;
  }
  return NLGen3jesRelativeFSRdn_;
}

const int &VVV0Tree::NLGen4jesRelativeFSRdn() {
  if (not NLGen4jesRelativeFSRdn_isLoaded) {
    if (NLGen4jesRelativeFSRdn_branch != 0) {
      NLGen4jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesRelativeFSRdn_isLoaded = true;
  }
  return NLGen4jesRelativeFSRdn_;
}

const int &VVV0Tree::NVQGen0jesRelativeFSRdn() {
  if (not NVQGen0jesRelativeFSRdn_isLoaded) {
    if (NVQGen0jesRelativeFSRdn_branch != 0) {
      NVQGen0jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesRelativeFSRdn_isLoaded = true;
  }
  return NVQGen0jesRelativeFSRdn_;
}

const int &VVV0Tree::NVQGen1jesRelativeFSRdn() {
  if (not NVQGen1jesRelativeFSRdn_isLoaded) {
    if (NVQGen1jesRelativeFSRdn_branch != 0) {
      NVQGen1jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesRelativeFSRdn_isLoaded = true;
  }
  return NVQGen1jesRelativeFSRdn_;
}

const int &VVV0Tree::NVQGen2jesRelativeFSRdn() {
  if (not NVQGen2jesRelativeFSRdn_isLoaded) {
    if (NVQGen2jesRelativeFSRdn_branch != 0) {
      NVQGen2jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesRelativeFSRdn_isLoaded = true;
  }
  return NVQGen2jesRelativeFSRdn_;
}

const int &VVV0Tree::NVQGen3jesRelativeFSRdn() {
  if (not NVQGen3jesRelativeFSRdn_isLoaded) {
    if (NVQGen3jesRelativeFSRdn_branch != 0) {
      NVQGen3jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesRelativeFSRdn_isLoaded = true;
  }
  return NVQGen3jesRelativeFSRdn_;
}

const int &VVV0Tree::NVQGen4jesRelativeFSRdn() {
  if (not NVQGen4jesRelativeFSRdn_isLoaded) {
    if (NVQGen4jesRelativeFSRdn_branch != 0) {
      NVQGen4jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesRelativeFSRdn_isLoaded = true;
  }
  return NVQGen4jesRelativeFSRdn_;
}

const int &VVV0Tree::NiFJjesRelativeFSRdn() {
  if (not NiFJjesRelativeFSRdn_isLoaded) {
    if (NiFJjesRelativeFSRdn_branch != 0) {
      NiFJjesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    NiFJjesRelativeFSRdn_isLoaded = true;
  }
  return NiFJjesRelativeFSRdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesRelativeFSRdn() {
  if (not iFJ0jesRelativeFSRdn_isLoaded) {
    if (iFJ0jesRelativeFSRdn_branch != 0) {
      iFJ0jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesRelativeFSRdn_isLoaded = true;
  }
  return *iFJ0jesRelativeFSRdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesRelativeFSRdn() {
  if (not iFJ1jesRelativeFSRdn_isLoaded) {
    if (iFJ1jesRelativeFSRdn_branch != 0) {
      iFJ1jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesRelativeFSRdn_isLoaded = true;
  }
  return *iFJ1jesRelativeFSRdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesRelativeFSRdn() {
  if (not iFJ2jesRelativeFSRdn_isLoaded) {
    if (iFJ2jesRelativeFSRdn_branch != 0) {
      iFJ2jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesRelativeFSRdn_isLoaded = true;
  }
  return *iFJ2jesRelativeFSRdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesRelativeFSRdn() {
  if (not iFJ3jesRelativeFSRdn_isLoaded) {
    if (iFJ3jesRelativeFSRdn_branch != 0) {
      iFJ3jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesRelativeFSRdn_isLoaded = true;
  }
  return *iFJ3jesRelativeFSRdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesRelativeFSRdn() {
  if (not iFJ4jesRelativeFSRdn_isLoaded) {
    if (iFJ4jesRelativeFSRdn_branch != 0) {
      iFJ4jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesRelativeFSRdn_isLoaded = true;
  }
  return *iFJ4jesRelativeFSRdn_;
}

const float &VVV0Tree::iVMD0jesRelativeFSRdn() {
  if (not iVMD0jesRelativeFSRdn_isLoaded) {
    if (iVMD0jesRelativeFSRdn_branch != 0) {
      iVMD0jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesRelativeFSRdn_isLoaded = true;
  }
  return iVMD0jesRelativeFSRdn_;
}

const float &VVV0Tree::iVMD1jesRelativeFSRdn() {
  if (not iVMD1jesRelativeFSRdn_isLoaded) {
    if (iVMD1jesRelativeFSRdn_branch != 0) {
      iVMD1jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesRelativeFSRdn_isLoaded = true;
  }
  return iVMD1jesRelativeFSRdn_;
}

const float &VVV0Tree::iVMD2jesRelativeFSRdn() {
  if (not iVMD2jesRelativeFSRdn_isLoaded) {
    if (iVMD2jesRelativeFSRdn_branch != 0) {
      iVMD2jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesRelativeFSRdn_isLoaded = true;
  }
  return iVMD2jesRelativeFSRdn_;
}

const float &VVV0Tree::iVMD3jesRelativeFSRdn() {
  if (not iVMD3jesRelativeFSRdn_isLoaded) {
    if (iVMD3jesRelativeFSRdn_branch != 0) {
      iVMD3jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesRelativeFSRdn_isLoaded = true;
  }
  return iVMD3jesRelativeFSRdn_;
}

const float &VVV0Tree::iVMD4jesRelativeFSRdn() {
  if (not iVMD4jesRelativeFSRdn_isLoaded) {
    if (iVMD4jesRelativeFSRdn_branch != 0) {
      iVMD4jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesRelativeFSRdn_isLoaded = true;
  }
  return iVMD4jesRelativeFSRdn_;
}

const float &VVV0Tree::iWMD0jesRelativeFSRdn() {
  if (not iWMD0jesRelativeFSRdn_isLoaded) {
    if (iWMD0jesRelativeFSRdn_branch != 0) {
      iWMD0jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesRelativeFSRdn_isLoaded = true;
  }
  return iWMD0jesRelativeFSRdn_;
}

const float &VVV0Tree::iWMD1jesRelativeFSRdn() {
  if (not iWMD1jesRelativeFSRdn_isLoaded) {
    if (iWMD1jesRelativeFSRdn_branch != 0) {
      iWMD1jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesRelativeFSRdn_isLoaded = true;
  }
  return iWMD1jesRelativeFSRdn_;
}

const float &VVV0Tree::iWMD2jesRelativeFSRdn() {
  if (not iWMD2jesRelativeFSRdn_isLoaded) {
    if (iWMD2jesRelativeFSRdn_branch != 0) {
      iWMD2jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesRelativeFSRdn_isLoaded = true;
  }
  return iWMD2jesRelativeFSRdn_;
}

const float &VVV0Tree::iWMD3jesRelativeFSRdn() {
  if (not iWMD3jesRelativeFSRdn_isLoaded) {
    if (iWMD3jesRelativeFSRdn_branch != 0) {
      iWMD3jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesRelativeFSRdn_isLoaded = true;
  }
  return iWMD3jesRelativeFSRdn_;
}

const float &VVV0Tree::iWMD4jesRelativeFSRdn() {
  if (not iWMD4jesRelativeFSRdn_isLoaded) {
    if (iWMD4jesRelativeFSRdn_branch != 0) {
      iWMD4jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesRelativeFSRdn_isLoaded = true;
  }
  return iWMD4jesRelativeFSRdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesRelativeFSRdn() {
  if (not METjesRelativeFSRdn_isLoaded) {
    if (METjesRelativeFSRdn_branch != 0) {
      METjesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch METjesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    METjesRelativeFSRdn_isLoaded = true;
  }
  return *METjesRelativeFSRdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesRelativeFSRdn() {
  if (not NujesRelativeFSRdn_isLoaded) {
    if (NujesRelativeFSRdn_branch != 0) {
      NujesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NujesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    NujesRelativeFSRdn_isLoaded = true;
  }
  return *NujesRelativeFSRdn_;
}

const int &VVV0Tree::NJjesRelativeFSRdn() {
  if (not NJjesRelativeFSRdn_isLoaded) {
    if (NJjesRelativeFSRdn_branch != 0) {
      NJjesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NJjesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    NJjesRelativeFSRdn_isLoaded = true;
  }
  return NJjesRelativeFSRdn_;
}

const int &VVV0Tree::NbLoosejesRelativeFSRdn() {
  if (not NbLoosejesRelativeFSRdn_isLoaded) {
    if (NbLoosejesRelativeFSRdn_branch != 0) {
      NbLoosejesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesRelativeFSRdn_isLoaded = true;
  }
  return NbLoosejesRelativeFSRdn_;
}

const int &VVV0Tree::NbMediumjesRelativeFSRdn() {
  if (not NbMediumjesRelativeFSRdn_isLoaded) {
    if (NbMediumjesRelativeFSRdn_branch != 0) {
      NbMediumjesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesRelativeFSRdn_isLoaded = true;
  }
  return NbMediumjesRelativeFSRdn_;
}

const int &VVV0Tree::NbTightjesRelativeFSRdn() {
  if (not NbTightjesRelativeFSRdn_isLoaded) {
    if (NbTightjesRelativeFSRdn_branch != 0) {
      NbTightjesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    NbTightjesRelativeFSRdn_isLoaded = true;
  }
  return NbTightjesRelativeFSRdn_;
}

const int &VVV0Tree::NoORNbLoosejesRelativeFSRdn() {
  if (not NoORNbLoosejesRelativeFSRdn_isLoaded) {
    if (NoORNbLoosejesRelativeFSRdn_branch != 0) {
      NoORNbLoosejesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesRelativeFSRdn_isLoaded = true;
  }
  return NoORNbLoosejesRelativeFSRdn_;
}

const int &VVV0Tree::NoORNbMediumjesRelativeFSRdn() {
  if (not NoORNbMediumjesRelativeFSRdn_isLoaded) {
    if (NoORNbMediumjesRelativeFSRdn_branch != 0) {
      NoORNbMediumjesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesRelativeFSRdn_isLoaded = true;
  }
  return NoORNbMediumjesRelativeFSRdn_;
}

const int &VVV0Tree::NoORNbTightjesRelativeFSRdn() {
  if (not NoORNbTightjesRelativeFSRdn_isLoaded) {
    if (NoORNbTightjesRelativeFSRdn_branch != 0) {
      NoORNbTightjesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesRelativeFSRdn_isLoaded = true;
  }
  return NoORNbTightjesRelativeFSRdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesRelativeFSRdn() {
  if (not J0jesRelativeFSRdn_isLoaded) {
    if (J0jesRelativeFSRdn_branch != 0) {
      J0jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch J0jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    J0jesRelativeFSRdn_isLoaded = true;
  }
  return *J0jesRelativeFSRdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesRelativeFSRdn() {
  if (not J1jesRelativeFSRdn_isLoaded) {
    if (J1jesRelativeFSRdn_branch != 0) {
      J1jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch J1jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    J1jesRelativeFSRdn_isLoaded = true;
  }
  return *J1jesRelativeFSRdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesRelativeFSRdn() {
  if (not J2jesRelativeFSRdn_isLoaded) {
    if (J2jesRelativeFSRdn_branch != 0) {
      J2jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch J2jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    J2jesRelativeFSRdn_isLoaded = true;
  }
  return *J2jesRelativeFSRdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesRelativeFSRdn() {
  if (not J3jesRelativeFSRdn_isLoaded) {
    if (J3jesRelativeFSRdn_branch != 0) {
      J3jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch J3jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    J3jesRelativeFSRdn_isLoaded = true;
  }
  return *J3jesRelativeFSRdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesRelativeFSRdn() {
  if (not J4jesRelativeFSRdn_isLoaded) {
    if (J4jesRelativeFSRdn_branch != 0) {
      J4jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch J4jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    J4jesRelativeFSRdn_isLoaded = true;
  }
  return *J4jesRelativeFSRdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesRelativeFSRdn() {
  if (not J5jesRelativeFSRdn_isLoaded) {
    if (J5jesRelativeFSRdn_branch != 0) {
      J5jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch J5jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    J5jesRelativeFSRdn_isLoaded = true;
  }
  return *J5jesRelativeFSRdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesRelativeFSRdn() {
  if (not J6jesRelativeFSRdn_isLoaded) {
    if (J6jesRelativeFSRdn_branch != 0) {
      J6jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch J6jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    J6jesRelativeFSRdn_isLoaded = true;
  }
  return *J6jesRelativeFSRdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesRelativeFSRdn() {
  if (not J7jesRelativeFSRdn_isLoaded) {
    if (J7jesRelativeFSRdn_branch != 0) {
      J7jesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch J7jesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    J7jesRelativeFSRdn_isLoaded = true;
  }
  return *J7jesRelativeFSRdn_;
}

const vector<int> &VVV0Tree::NQJGenjesRelativeFSRdn() {
  if (not NQJGenjesRelativeFSRdn_isLoaded) {
    if (NQJGenjesRelativeFSRdn_branch != 0) {
      NQJGenjesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesRelativeFSRdn_isLoaded = true;
  }
  return *NQJGenjesRelativeFSRdn_;
}

const vector<int> &VVV0Tree::NBJGenjesRelativeFSRdn() {
  if (not NBJGenjesRelativeFSRdn_isLoaded) {
    if (NBJGenjesRelativeFSRdn_branch != 0) {
      NBJGenjesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesRelativeFSRdn_isLoaded = true;
  }
  return *NBJGenjesRelativeFSRdn_;
}

const vector<int> &VVV0Tree::NLJGenjesRelativeFSRdn() {
  if (not NLJGenjesRelativeFSRdn_isLoaded) {
    if (NLJGenjesRelativeFSRdn_branch != 0) {
      NLJGenjesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesRelativeFSRdn_isLoaded = true;
  }
  return *NLJGenjesRelativeFSRdn_;
}

const float &VVV0Tree::MVVXjesRelativeFSRdn() {
  if (not MVVXjesRelativeFSRdn_isLoaded) {
    if (MVVXjesRelativeFSRdn_branch != 0) {
      MVVXjesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    MVVXjesRelativeFSRdn_isLoaded = true;
  }
  return MVVXjesRelativeFSRdn_;
}

const float &VVV0Tree::PtVVXjesRelativeFSRdn() {
  if (not PtVVXjesRelativeFSRdn_isLoaded) {
    if (PtVVXjesRelativeFSRdn_branch != 0) {
      PtVVXjesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesRelativeFSRdn_isLoaded = true;
  }
  return PtVVXjesRelativeFSRdn_;
}

const float &VVV0Tree::HTjesRelativeFSRdn() {
  if (not HTjesRelativeFSRdn_isLoaded) {
    if (HTjesRelativeFSRdn_branch != 0) {
      HTjesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch HTjesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    HTjesRelativeFSRdn_isLoaded = true;
  }
  return HTjesRelativeFSRdn_;
}

const float &VVV0Tree::HTJjesRelativeFSRdn() {
  if (not HTJjesRelativeFSRdn_isLoaded) {
    if (HTJjesRelativeFSRdn_branch != 0) {
      HTJjesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch HTJjesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    HTJjesRelativeFSRdn_isLoaded = true;
  }
  return HTJjesRelativeFSRdn_;
}

const float &VVV0Tree::HTFJjesRelativeFSRdn() {
  if (not HTFJjesRelativeFSRdn_isLoaded) {
    if (HTFJjesRelativeFSRdn_branch != 0) {
      HTFJjesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    HTFJjesRelativeFSRdn_isLoaded = true;
  }
  return HTFJjesRelativeFSRdn_;
}

const float &VVV0Tree::SumPtFJjesRelativeFSRdn() {
  if (not SumPtFJjesRelativeFSRdn_isLoaded) {
    if (SumPtFJjesRelativeFSRdn_branch != 0) {
      SumPtFJjesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesRelativeFSRdn_isLoaded = true;
  }
  return SumPtFJjesRelativeFSRdn_;
}

const float &VVV0Tree::SumPtJjesRelativeFSRdn() {
  if (not SumPtJjesRelativeFSRdn_isLoaded) {
    if (SumPtJjesRelativeFSRdn_branch != 0) {
      SumPtJjesRelativeFSRdn_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesRelativeFSRdn_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesRelativeFSRdn_isLoaded = true;
  }
  return SumPtJjesRelativeFSRdn_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesRelativeStatFSRup() {
  if (not JsjesRelativeStatFSRup_isLoaded) {
    if (JsjesRelativeStatFSRup_branch != 0) {
      JsjesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch JsjesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    JsjesRelativeStatFSRup_isLoaded = true;
  }
  return *JsjesRelativeStatFSRup_;
}

const int &VVV0Tree::NFJjesRelativeStatFSRup() {
  if (not NFJjesRelativeStatFSRup_isLoaded) {
    if (NFJjesRelativeStatFSRup_branch != 0) {
      NFJjesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch NFJjesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    NFJjesRelativeStatFSRup_isLoaded = true;
  }
  return NFJjesRelativeStatFSRup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesRelativeStatFSRup() {
  if (not FJ0jesRelativeStatFSRup_isLoaded) {
    if (FJ0jesRelativeStatFSRup_branch != 0) {
      FJ0jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    FJ0jesRelativeStatFSRup_isLoaded = true;
  }
  return *FJ0jesRelativeStatFSRup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesRelativeStatFSRup() {
  if (not FJ1jesRelativeStatFSRup_isLoaded) {
    if (FJ1jesRelativeStatFSRup_branch != 0) {
      FJ1jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    FJ1jesRelativeStatFSRup_isLoaded = true;
  }
  return *FJ1jesRelativeStatFSRup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesRelativeStatFSRup() {
  if (not FJ2jesRelativeStatFSRup_isLoaded) {
    if (FJ2jesRelativeStatFSRup_branch != 0) {
      FJ2jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    FJ2jesRelativeStatFSRup_isLoaded = true;
  }
  return *FJ2jesRelativeStatFSRup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesRelativeStatFSRup() {
  if (not FJ3jesRelativeStatFSRup_isLoaded) {
    if (FJ3jesRelativeStatFSRup_branch != 0) {
      FJ3jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    FJ3jesRelativeStatFSRup_isLoaded = true;
  }
  return *FJ3jesRelativeStatFSRup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesRelativeStatFSRup() {
  if (not FJ4jesRelativeStatFSRup_isLoaded) {
    if (FJ4jesRelativeStatFSRup_branch != 0) {
      FJ4jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    FJ4jesRelativeStatFSRup_isLoaded = true;
  }
  return *FJ4jesRelativeStatFSRup_;
}

const float &VVV0Tree::VMD0jesRelativeStatFSRup() {
  if (not VMD0jesRelativeStatFSRup_isLoaded) {
    if (VMD0jesRelativeStatFSRup_branch != 0) {
      VMD0jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    VMD0jesRelativeStatFSRup_isLoaded = true;
  }
  return VMD0jesRelativeStatFSRup_;
}

const float &VVV0Tree::VMD1jesRelativeStatFSRup() {
  if (not VMD1jesRelativeStatFSRup_isLoaded) {
    if (VMD1jesRelativeStatFSRup_branch != 0) {
      VMD1jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    VMD1jesRelativeStatFSRup_isLoaded = true;
  }
  return VMD1jesRelativeStatFSRup_;
}

const float &VVV0Tree::VMD2jesRelativeStatFSRup() {
  if (not VMD2jesRelativeStatFSRup_isLoaded) {
    if (VMD2jesRelativeStatFSRup_branch != 0) {
      VMD2jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    VMD2jesRelativeStatFSRup_isLoaded = true;
  }
  return VMD2jesRelativeStatFSRup_;
}

const float &VVV0Tree::VMD3jesRelativeStatFSRup() {
  if (not VMD3jesRelativeStatFSRup_isLoaded) {
    if (VMD3jesRelativeStatFSRup_branch != 0) {
      VMD3jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    VMD3jesRelativeStatFSRup_isLoaded = true;
  }
  return VMD3jesRelativeStatFSRup_;
}

const float &VVV0Tree::VMD4jesRelativeStatFSRup() {
  if (not VMD4jesRelativeStatFSRup_isLoaded) {
    if (VMD4jesRelativeStatFSRup_branch != 0) {
      VMD4jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    VMD4jesRelativeStatFSRup_isLoaded = true;
  }
  return VMD4jesRelativeStatFSRup_;
}

const float &VVV0Tree::WMD0jesRelativeStatFSRup() {
  if (not WMD0jesRelativeStatFSRup_isLoaded) {
    if (WMD0jesRelativeStatFSRup_branch != 0) {
      WMD0jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    WMD0jesRelativeStatFSRup_isLoaded = true;
  }
  return WMD0jesRelativeStatFSRup_;
}

const float &VVV0Tree::WMD1jesRelativeStatFSRup() {
  if (not WMD1jesRelativeStatFSRup_isLoaded) {
    if (WMD1jesRelativeStatFSRup_branch != 0) {
      WMD1jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    WMD1jesRelativeStatFSRup_isLoaded = true;
  }
  return WMD1jesRelativeStatFSRup_;
}

const float &VVV0Tree::WMD2jesRelativeStatFSRup() {
  if (not WMD2jesRelativeStatFSRup_isLoaded) {
    if (WMD2jesRelativeStatFSRup_branch != 0) {
      WMD2jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    WMD2jesRelativeStatFSRup_isLoaded = true;
  }
  return WMD2jesRelativeStatFSRup_;
}

const float &VVV0Tree::WMD3jesRelativeStatFSRup() {
  if (not WMD3jesRelativeStatFSRup_isLoaded) {
    if (WMD3jesRelativeStatFSRup_branch != 0) {
      WMD3jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    WMD3jesRelativeStatFSRup_isLoaded = true;
  }
  return WMD3jesRelativeStatFSRup_;
}

const float &VVV0Tree::WMD4jesRelativeStatFSRup() {
  if (not WMD4jesRelativeStatFSRup_isLoaded) {
    if (WMD4jesRelativeStatFSRup_branch != 0) {
      WMD4jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    WMD4jesRelativeStatFSRup_isLoaded = true;
  }
  return WMD4jesRelativeStatFSRup_;
}

const int &VVV0Tree::NQGen0jesRelativeStatFSRup() {
  if (not NQGen0jesRelativeStatFSRup_isLoaded) {
    if (NQGen0jesRelativeStatFSRup_branch != 0) {
      NQGen0jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesRelativeStatFSRup_isLoaded = true;
  }
  return NQGen0jesRelativeStatFSRup_;
}

const int &VVV0Tree::NQGen1jesRelativeStatFSRup() {
  if (not NQGen1jesRelativeStatFSRup_isLoaded) {
    if (NQGen1jesRelativeStatFSRup_branch != 0) {
      NQGen1jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesRelativeStatFSRup_isLoaded = true;
  }
  return NQGen1jesRelativeStatFSRup_;
}

const int &VVV0Tree::NQGen2jesRelativeStatFSRup() {
  if (not NQGen2jesRelativeStatFSRup_isLoaded) {
    if (NQGen2jesRelativeStatFSRup_branch != 0) {
      NQGen2jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesRelativeStatFSRup_isLoaded = true;
  }
  return NQGen2jesRelativeStatFSRup_;
}

const int &VVV0Tree::NQGen3jesRelativeStatFSRup() {
  if (not NQGen3jesRelativeStatFSRup_isLoaded) {
    if (NQGen3jesRelativeStatFSRup_branch != 0) {
      NQGen3jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesRelativeStatFSRup_isLoaded = true;
  }
  return NQGen3jesRelativeStatFSRup_;
}

const int &VVV0Tree::NQGen4jesRelativeStatFSRup() {
  if (not NQGen4jesRelativeStatFSRup_isLoaded) {
    if (NQGen4jesRelativeStatFSRup_branch != 0) {
      NQGen4jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesRelativeStatFSRup_isLoaded = true;
  }
  return NQGen4jesRelativeStatFSRup_;
}

const int &VVV0Tree::NBGen0jesRelativeStatFSRup() {
  if (not NBGen0jesRelativeStatFSRup_isLoaded) {
    if (NBGen0jesRelativeStatFSRup_branch != 0) {
      NBGen0jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesRelativeStatFSRup_isLoaded = true;
  }
  return NBGen0jesRelativeStatFSRup_;
}

const int &VVV0Tree::NBGen1jesRelativeStatFSRup() {
  if (not NBGen1jesRelativeStatFSRup_isLoaded) {
    if (NBGen1jesRelativeStatFSRup_branch != 0) {
      NBGen1jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesRelativeStatFSRup_isLoaded = true;
  }
  return NBGen1jesRelativeStatFSRup_;
}

const int &VVV0Tree::NBGen2jesRelativeStatFSRup() {
  if (not NBGen2jesRelativeStatFSRup_isLoaded) {
    if (NBGen2jesRelativeStatFSRup_branch != 0) {
      NBGen2jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesRelativeStatFSRup_isLoaded = true;
  }
  return NBGen2jesRelativeStatFSRup_;
}

const int &VVV0Tree::NBGen3jesRelativeStatFSRup() {
  if (not NBGen3jesRelativeStatFSRup_isLoaded) {
    if (NBGen3jesRelativeStatFSRup_branch != 0) {
      NBGen3jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesRelativeStatFSRup_isLoaded = true;
  }
  return NBGen3jesRelativeStatFSRup_;
}

const int &VVV0Tree::NBGen4jesRelativeStatFSRup() {
  if (not NBGen4jesRelativeStatFSRup_isLoaded) {
    if (NBGen4jesRelativeStatFSRup_branch != 0) {
      NBGen4jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesRelativeStatFSRup_isLoaded = true;
  }
  return NBGen4jesRelativeStatFSRup_;
}

const int &VVV0Tree::NLGen0jesRelativeStatFSRup() {
  if (not NLGen0jesRelativeStatFSRup_isLoaded) {
    if (NLGen0jesRelativeStatFSRup_branch != 0) {
      NLGen0jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesRelativeStatFSRup_isLoaded = true;
  }
  return NLGen0jesRelativeStatFSRup_;
}

const int &VVV0Tree::NLGen1jesRelativeStatFSRup() {
  if (not NLGen1jesRelativeStatFSRup_isLoaded) {
    if (NLGen1jesRelativeStatFSRup_branch != 0) {
      NLGen1jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesRelativeStatFSRup_isLoaded = true;
  }
  return NLGen1jesRelativeStatFSRup_;
}

const int &VVV0Tree::NLGen2jesRelativeStatFSRup() {
  if (not NLGen2jesRelativeStatFSRup_isLoaded) {
    if (NLGen2jesRelativeStatFSRup_branch != 0) {
      NLGen2jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesRelativeStatFSRup_isLoaded = true;
  }
  return NLGen2jesRelativeStatFSRup_;
}

const int &VVV0Tree::NLGen3jesRelativeStatFSRup() {
  if (not NLGen3jesRelativeStatFSRup_isLoaded) {
    if (NLGen3jesRelativeStatFSRup_branch != 0) {
      NLGen3jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesRelativeStatFSRup_isLoaded = true;
  }
  return NLGen3jesRelativeStatFSRup_;
}

const int &VVV0Tree::NLGen4jesRelativeStatFSRup() {
  if (not NLGen4jesRelativeStatFSRup_isLoaded) {
    if (NLGen4jesRelativeStatFSRup_branch != 0) {
      NLGen4jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesRelativeStatFSRup_isLoaded = true;
  }
  return NLGen4jesRelativeStatFSRup_;
}

const int &VVV0Tree::NVQGen0jesRelativeStatFSRup() {
  if (not NVQGen0jesRelativeStatFSRup_isLoaded) {
    if (NVQGen0jesRelativeStatFSRup_branch != 0) {
      NVQGen0jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesRelativeStatFSRup_isLoaded = true;
  }
  return NVQGen0jesRelativeStatFSRup_;
}

const int &VVV0Tree::NVQGen1jesRelativeStatFSRup() {
  if (not NVQGen1jesRelativeStatFSRup_isLoaded) {
    if (NVQGen1jesRelativeStatFSRup_branch != 0) {
      NVQGen1jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesRelativeStatFSRup_isLoaded = true;
  }
  return NVQGen1jesRelativeStatFSRup_;
}

const int &VVV0Tree::NVQGen2jesRelativeStatFSRup() {
  if (not NVQGen2jesRelativeStatFSRup_isLoaded) {
    if (NVQGen2jesRelativeStatFSRup_branch != 0) {
      NVQGen2jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesRelativeStatFSRup_isLoaded = true;
  }
  return NVQGen2jesRelativeStatFSRup_;
}

const int &VVV0Tree::NVQGen3jesRelativeStatFSRup() {
  if (not NVQGen3jesRelativeStatFSRup_isLoaded) {
    if (NVQGen3jesRelativeStatFSRup_branch != 0) {
      NVQGen3jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesRelativeStatFSRup_isLoaded = true;
  }
  return NVQGen3jesRelativeStatFSRup_;
}

const int &VVV0Tree::NVQGen4jesRelativeStatFSRup() {
  if (not NVQGen4jesRelativeStatFSRup_isLoaded) {
    if (NVQGen4jesRelativeStatFSRup_branch != 0) {
      NVQGen4jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesRelativeStatFSRup_isLoaded = true;
  }
  return NVQGen4jesRelativeStatFSRup_;
}

const int &VVV0Tree::NiFJjesRelativeStatFSRup() {
  if (not NiFJjesRelativeStatFSRup_isLoaded) {
    if (NiFJjesRelativeStatFSRup_branch != 0) {
      NiFJjesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    NiFJjesRelativeStatFSRup_isLoaded = true;
  }
  return NiFJjesRelativeStatFSRup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesRelativeStatFSRup() {
  if (not iFJ0jesRelativeStatFSRup_isLoaded) {
    if (iFJ0jesRelativeStatFSRup_branch != 0) {
      iFJ0jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesRelativeStatFSRup_isLoaded = true;
  }
  return *iFJ0jesRelativeStatFSRup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesRelativeStatFSRup() {
  if (not iFJ1jesRelativeStatFSRup_isLoaded) {
    if (iFJ1jesRelativeStatFSRup_branch != 0) {
      iFJ1jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesRelativeStatFSRup_isLoaded = true;
  }
  return *iFJ1jesRelativeStatFSRup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesRelativeStatFSRup() {
  if (not iFJ2jesRelativeStatFSRup_isLoaded) {
    if (iFJ2jesRelativeStatFSRup_branch != 0) {
      iFJ2jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesRelativeStatFSRup_isLoaded = true;
  }
  return *iFJ2jesRelativeStatFSRup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesRelativeStatFSRup() {
  if (not iFJ3jesRelativeStatFSRup_isLoaded) {
    if (iFJ3jesRelativeStatFSRup_branch != 0) {
      iFJ3jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesRelativeStatFSRup_isLoaded = true;
  }
  return *iFJ3jesRelativeStatFSRup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesRelativeStatFSRup() {
  if (not iFJ4jesRelativeStatFSRup_isLoaded) {
    if (iFJ4jesRelativeStatFSRup_branch != 0) {
      iFJ4jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesRelativeStatFSRup_isLoaded = true;
  }
  return *iFJ4jesRelativeStatFSRup_;
}

const float &VVV0Tree::iVMD0jesRelativeStatFSRup() {
  if (not iVMD0jesRelativeStatFSRup_isLoaded) {
    if (iVMD0jesRelativeStatFSRup_branch != 0) {
      iVMD0jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesRelativeStatFSRup_isLoaded = true;
  }
  return iVMD0jesRelativeStatFSRup_;
}

const float &VVV0Tree::iVMD1jesRelativeStatFSRup() {
  if (not iVMD1jesRelativeStatFSRup_isLoaded) {
    if (iVMD1jesRelativeStatFSRup_branch != 0) {
      iVMD1jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesRelativeStatFSRup_isLoaded = true;
  }
  return iVMD1jesRelativeStatFSRup_;
}

const float &VVV0Tree::iVMD2jesRelativeStatFSRup() {
  if (not iVMD2jesRelativeStatFSRup_isLoaded) {
    if (iVMD2jesRelativeStatFSRup_branch != 0) {
      iVMD2jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesRelativeStatFSRup_isLoaded = true;
  }
  return iVMD2jesRelativeStatFSRup_;
}

const float &VVV0Tree::iVMD3jesRelativeStatFSRup() {
  if (not iVMD3jesRelativeStatFSRup_isLoaded) {
    if (iVMD3jesRelativeStatFSRup_branch != 0) {
      iVMD3jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesRelativeStatFSRup_isLoaded = true;
  }
  return iVMD3jesRelativeStatFSRup_;
}

const float &VVV0Tree::iVMD4jesRelativeStatFSRup() {
  if (not iVMD4jesRelativeStatFSRup_isLoaded) {
    if (iVMD4jesRelativeStatFSRup_branch != 0) {
      iVMD4jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesRelativeStatFSRup_isLoaded = true;
  }
  return iVMD4jesRelativeStatFSRup_;
}

const float &VVV0Tree::iWMD0jesRelativeStatFSRup() {
  if (not iWMD0jesRelativeStatFSRup_isLoaded) {
    if (iWMD0jesRelativeStatFSRup_branch != 0) {
      iWMD0jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesRelativeStatFSRup_isLoaded = true;
  }
  return iWMD0jesRelativeStatFSRup_;
}

const float &VVV0Tree::iWMD1jesRelativeStatFSRup() {
  if (not iWMD1jesRelativeStatFSRup_isLoaded) {
    if (iWMD1jesRelativeStatFSRup_branch != 0) {
      iWMD1jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesRelativeStatFSRup_isLoaded = true;
  }
  return iWMD1jesRelativeStatFSRup_;
}

const float &VVV0Tree::iWMD2jesRelativeStatFSRup() {
  if (not iWMD2jesRelativeStatFSRup_isLoaded) {
    if (iWMD2jesRelativeStatFSRup_branch != 0) {
      iWMD2jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesRelativeStatFSRup_isLoaded = true;
  }
  return iWMD2jesRelativeStatFSRup_;
}

const float &VVV0Tree::iWMD3jesRelativeStatFSRup() {
  if (not iWMD3jesRelativeStatFSRup_isLoaded) {
    if (iWMD3jesRelativeStatFSRup_branch != 0) {
      iWMD3jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesRelativeStatFSRup_isLoaded = true;
  }
  return iWMD3jesRelativeStatFSRup_;
}

const float &VVV0Tree::iWMD4jesRelativeStatFSRup() {
  if (not iWMD4jesRelativeStatFSRup_isLoaded) {
    if (iWMD4jesRelativeStatFSRup_branch != 0) {
      iWMD4jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesRelativeStatFSRup_isLoaded = true;
  }
  return iWMD4jesRelativeStatFSRup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesRelativeStatFSRup() {
  if (not METjesRelativeStatFSRup_isLoaded) {
    if (METjesRelativeStatFSRup_branch != 0) {
      METjesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch METjesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    METjesRelativeStatFSRup_isLoaded = true;
  }
  return *METjesRelativeStatFSRup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesRelativeStatFSRup() {
  if (not NujesRelativeStatFSRup_isLoaded) {
    if (NujesRelativeStatFSRup_branch != 0) {
      NujesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch NujesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    NujesRelativeStatFSRup_isLoaded = true;
  }
  return *NujesRelativeStatFSRup_;
}

const int &VVV0Tree::NJjesRelativeStatFSRup() {
  if (not NJjesRelativeStatFSRup_isLoaded) {
    if (NJjesRelativeStatFSRup_branch != 0) {
      NJjesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch NJjesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    NJjesRelativeStatFSRup_isLoaded = true;
  }
  return NJjesRelativeStatFSRup_;
}

const int &VVV0Tree::NbLoosejesRelativeStatFSRup() {
  if (not NbLoosejesRelativeStatFSRup_isLoaded) {
    if (NbLoosejesRelativeStatFSRup_branch != 0) {
      NbLoosejesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesRelativeStatFSRup_isLoaded = true;
  }
  return NbLoosejesRelativeStatFSRup_;
}

const int &VVV0Tree::NbMediumjesRelativeStatFSRup() {
  if (not NbMediumjesRelativeStatFSRup_isLoaded) {
    if (NbMediumjesRelativeStatFSRup_branch != 0) {
      NbMediumjesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesRelativeStatFSRup_isLoaded = true;
  }
  return NbMediumjesRelativeStatFSRup_;
}

const int &VVV0Tree::NbTightjesRelativeStatFSRup() {
  if (not NbTightjesRelativeStatFSRup_isLoaded) {
    if (NbTightjesRelativeStatFSRup_branch != 0) {
      NbTightjesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    NbTightjesRelativeStatFSRup_isLoaded = true;
  }
  return NbTightjesRelativeStatFSRup_;
}

const int &VVV0Tree::NoORNbLoosejesRelativeStatFSRup() {
  if (not NoORNbLoosejesRelativeStatFSRup_isLoaded) {
    if (NoORNbLoosejesRelativeStatFSRup_branch != 0) {
      NoORNbLoosejesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesRelativeStatFSRup_isLoaded = true;
  }
  return NoORNbLoosejesRelativeStatFSRup_;
}

const int &VVV0Tree::NoORNbMediumjesRelativeStatFSRup() {
  if (not NoORNbMediumjesRelativeStatFSRup_isLoaded) {
    if (NoORNbMediumjesRelativeStatFSRup_branch != 0) {
      NoORNbMediumjesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesRelativeStatFSRup_isLoaded = true;
  }
  return NoORNbMediumjesRelativeStatFSRup_;
}

const int &VVV0Tree::NoORNbTightjesRelativeStatFSRup() {
  if (not NoORNbTightjesRelativeStatFSRup_isLoaded) {
    if (NoORNbTightjesRelativeStatFSRup_branch != 0) {
      NoORNbTightjesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesRelativeStatFSRup_isLoaded = true;
  }
  return NoORNbTightjesRelativeStatFSRup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesRelativeStatFSRup() {
  if (not J0jesRelativeStatFSRup_isLoaded) {
    if (J0jesRelativeStatFSRup_branch != 0) {
      J0jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch J0jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    J0jesRelativeStatFSRup_isLoaded = true;
  }
  return *J0jesRelativeStatFSRup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesRelativeStatFSRup() {
  if (not J1jesRelativeStatFSRup_isLoaded) {
    if (J1jesRelativeStatFSRup_branch != 0) {
      J1jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch J1jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    J1jesRelativeStatFSRup_isLoaded = true;
  }
  return *J1jesRelativeStatFSRup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesRelativeStatFSRup() {
  if (not J2jesRelativeStatFSRup_isLoaded) {
    if (J2jesRelativeStatFSRup_branch != 0) {
      J2jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch J2jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    J2jesRelativeStatFSRup_isLoaded = true;
  }
  return *J2jesRelativeStatFSRup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesRelativeStatFSRup() {
  if (not J3jesRelativeStatFSRup_isLoaded) {
    if (J3jesRelativeStatFSRup_branch != 0) {
      J3jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch J3jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    J3jesRelativeStatFSRup_isLoaded = true;
  }
  return *J3jesRelativeStatFSRup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesRelativeStatFSRup() {
  if (not J4jesRelativeStatFSRup_isLoaded) {
    if (J4jesRelativeStatFSRup_branch != 0) {
      J4jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch J4jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    J4jesRelativeStatFSRup_isLoaded = true;
  }
  return *J4jesRelativeStatFSRup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesRelativeStatFSRup() {
  if (not J5jesRelativeStatFSRup_isLoaded) {
    if (J5jesRelativeStatFSRup_branch != 0) {
      J5jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch J5jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    J5jesRelativeStatFSRup_isLoaded = true;
  }
  return *J5jesRelativeStatFSRup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesRelativeStatFSRup() {
  if (not J6jesRelativeStatFSRup_isLoaded) {
    if (J6jesRelativeStatFSRup_branch != 0) {
      J6jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch J6jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    J6jesRelativeStatFSRup_isLoaded = true;
  }
  return *J6jesRelativeStatFSRup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesRelativeStatFSRup() {
  if (not J7jesRelativeStatFSRup_isLoaded) {
    if (J7jesRelativeStatFSRup_branch != 0) {
      J7jesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch J7jesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    J7jesRelativeStatFSRup_isLoaded = true;
  }
  return *J7jesRelativeStatFSRup_;
}

const vector<int> &VVV0Tree::NQJGenjesRelativeStatFSRup() {
  if (not NQJGenjesRelativeStatFSRup_isLoaded) {
    if (NQJGenjesRelativeStatFSRup_branch != 0) {
      NQJGenjesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesRelativeStatFSRup_isLoaded = true;
  }
  return *NQJGenjesRelativeStatFSRup_;
}

const vector<int> &VVV0Tree::NBJGenjesRelativeStatFSRup() {
  if (not NBJGenjesRelativeStatFSRup_isLoaded) {
    if (NBJGenjesRelativeStatFSRup_branch != 0) {
      NBJGenjesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesRelativeStatFSRup_isLoaded = true;
  }
  return *NBJGenjesRelativeStatFSRup_;
}

const vector<int> &VVV0Tree::NLJGenjesRelativeStatFSRup() {
  if (not NLJGenjesRelativeStatFSRup_isLoaded) {
    if (NLJGenjesRelativeStatFSRup_branch != 0) {
      NLJGenjesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesRelativeStatFSRup_isLoaded = true;
  }
  return *NLJGenjesRelativeStatFSRup_;
}

const float &VVV0Tree::MVVXjesRelativeStatFSRup() {
  if (not MVVXjesRelativeStatFSRup_isLoaded) {
    if (MVVXjesRelativeStatFSRup_branch != 0) {
      MVVXjesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    MVVXjesRelativeStatFSRup_isLoaded = true;
  }
  return MVVXjesRelativeStatFSRup_;
}

const float &VVV0Tree::PtVVXjesRelativeStatFSRup() {
  if (not PtVVXjesRelativeStatFSRup_isLoaded) {
    if (PtVVXjesRelativeStatFSRup_branch != 0) {
      PtVVXjesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesRelativeStatFSRup_isLoaded = true;
  }
  return PtVVXjesRelativeStatFSRup_;
}

const float &VVV0Tree::HTjesRelativeStatFSRup() {
  if (not HTjesRelativeStatFSRup_isLoaded) {
    if (HTjesRelativeStatFSRup_branch != 0) {
      HTjesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch HTjesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    HTjesRelativeStatFSRup_isLoaded = true;
  }
  return HTjesRelativeStatFSRup_;
}

const float &VVV0Tree::HTJjesRelativeStatFSRup() {
  if (not HTJjesRelativeStatFSRup_isLoaded) {
    if (HTJjesRelativeStatFSRup_branch != 0) {
      HTJjesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch HTJjesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    HTJjesRelativeStatFSRup_isLoaded = true;
  }
  return HTJjesRelativeStatFSRup_;
}

const float &VVV0Tree::HTFJjesRelativeStatFSRup() {
  if (not HTFJjesRelativeStatFSRup_isLoaded) {
    if (HTFJjesRelativeStatFSRup_branch != 0) {
      HTFJjesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    HTFJjesRelativeStatFSRup_isLoaded = true;
  }
  return HTFJjesRelativeStatFSRup_;
}

const float &VVV0Tree::SumPtFJjesRelativeStatFSRup() {
  if (not SumPtFJjesRelativeStatFSRup_isLoaded) {
    if (SumPtFJjesRelativeStatFSRup_branch != 0) {
      SumPtFJjesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesRelativeStatFSRup_isLoaded = true;
  }
  return SumPtFJjesRelativeStatFSRup_;
}

const float &VVV0Tree::SumPtJjesRelativeStatFSRup() {
  if (not SumPtJjesRelativeStatFSRup_isLoaded) {
    if (SumPtJjesRelativeStatFSRup_branch != 0) {
      SumPtJjesRelativeStatFSRup_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesRelativeStatFSRup_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesRelativeStatFSRup_isLoaded = true;
  }
  return SumPtJjesRelativeStatFSRup_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesRelativeStatFSRdn() {
  if (not JsjesRelativeStatFSRdn_isLoaded) {
    if (JsjesRelativeStatFSRdn_branch != 0) {
      JsjesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch JsjesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    JsjesRelativeStatFSRdn_isLoaded = true;
  }
  return *JsjesRelativeStatFSRdn_;
}

const int &VVV0Tree::NFJjesRelativeStatFSRdn() {
  if (not NFJjesRelativeStatFSRdn_isLoaded) {
    if (NFJjesRelativeStatFSRdn_branch != 0) {
      NFJjesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NFJjesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    NFJjesRelativeStatFSRdn_isLoaded = true;
  }
  return NFJjesRelativeStatFSRdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesRelativeStatFSRdn() {
  if (not FJ0jesRelativeStatFSRdn_isLoaded) {
    if (FJ0jesRelativeStatFSRdn_branch != 0) {
      FJ0jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    FJ0jesRelativeStatFSRdn_isLoaded = true;
  }
  return *FJ0jesRelativeStatFSRdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesRelativeStatFSRdn() {
  if (not FJ1jesRelativeStatFSRdn_isLoaded) {
    if (FJ1jesRelativeStatFSRdn_branch != 0) {
      FJ1jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    FJ1jesRelativeStatFSRdn_isLoaded = true;
  }
  return *FJ1jesRelativeStatFSRdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesRelativeStatFSRdn() {
  if (not FJ2jesRelativeStatFSRdn_isLoaded) {
    if (FJ2jesRelativeStatFSRdn_branch != 0) {
      FJ2jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    FJ2jesRelativeStatFSRdn_isLoaded = true;
  }
  return *FJ2jesRelativeStatFSRdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesRelativeStatFSRdn() {
  if (not FJ3jesRelativeStatFSRdn_isLoaded) {
    if (FJ3jesRelativeStatFSRdn_branch != 0) {
      FJ3jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    FJ3jesRelativeStatFSRdn_isLoaded = true;
  }
  return *FJ3jesRelativeStatFSRdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesRelativeStatFSRdn() {
  if (not FJ4jesRelativeStatFSRdn_isLoaded) {
    if (FJ4jesRelativeStatFSRdn_branch != 0) {
      FJ4jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    FJ4jesRelativeStatFSRdn_isLoaded = true;
  }
  return *FJ4jesRelativeStatFSRdn_;
}

const float &VVV0Tree::VMD0jesRelativeStatFSRdn() {
  if (not VMD0jesRelativeStatFSRdn_isLoaded) {
    if (VMD0jesRelativeStatFSRdn_branch != 0) {
      VMD0jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    VMD0jesRelativeStatFSRdn_isLoaded = true;
  }
  return VMD0jesRelativeStatFSRdn_;
}

const float &VVV0Tree::VMD1jesRelativeStatFSRdn() {
  if (not VMD1jesRelativeStatFSRdn_isLoaded) {
    if (VMD1jesRelativeStatFSRdn_branch != 0) {
      VMD1jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    VMD1jesRelativeStatFSRdn_isLoaded = true;
  }
  return VMD1jesRelativeStatFSRdn_;
}

const float &VVV0Tree::VMD2jesRelativeStatFSRdn() {
  if (not VMD2jesRelativeStatFSRdn_isLoaded) {
    if (VMD2jesRelativeStatFSRdn_branch != 0) {
      VMD2jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    VMD2jesRelativeStatFSRdn_isLoaded = true;
  }
  return VMD2jesRelativeStatFSRdn_;
}

const float &VVV0Tree::VMD3jesRelativeStatFSRdn() {
  if (not VMD3jesRelativeStatFSRdn_isLoaded) {
    if (VMD3jesRelativeStatFSRdn_branch != 0) {
      VMD3jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    VMD3jesRelativeStatFSRdn_isLoaded = true;
  }
  return VMD3jesRelativeStatFSRdn_;
}

const float &VVV0Tree::VMD4jesRelativeStatFSRdn() {
  if (not VMD4jesRelativeStatFSRdn_isLoaded) {
    if (VMD4jesRelativeStatFSRdn_branch != 0) {
      VMD4jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    VMD4jesRelativeStatFSRdn_isLoaded = true;
  }
  return VMD4jesRelativeStatFSRdn_;
}

const float &VVV0Tree::WMD0jesRelativeStatFSRdn() {
  if (not WMD0jesRelativeStatFSRdn_isLoaded) {
    if (WMD0jesRelativeStatFSRdn_branch != 0) {
      WMD0jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    WMD0jesRelativeStatFSRdn_isLoaded = true;
  }
  return WMD0jesRelativeStatFSRdn_;
}

const float &VVV0Tree::WMD1jesRelativeStatFSRdn() {
  if (not WMD1jesRelativeStatFSRdn_isLoaded) {
    if (WMD1jesRelativeStatFSRdn_branch != 0) {
      WMD1jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    WMD1jesRelativeStatFSRdn_isLoaded = true;
  }
  return WMD1jesRelativeStatFSRdn_;
}

const float &VVV0Tree::WMD2jesRelativeStatFSRdn() {
  if (not WMD2jesRelativeStatFSRdn_isLoaded) {
    if (WMD2jesRelativeStatFSRdn_branch != 0) {
      WMD2jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    WMD2jesRelativeStatFSRdn_isLoaded = true;
  }
  return WMD2jesRelativeStatFSRdn_;
}

const float &VVV0Tree::WMD3jesRelativeStatFSRdn() {
  if (not WMD3jesRelativeStatFSRdn_isLoaded) {
    if (WMD3jesRelativeStatFSRdn_branch != 0) {
      WMD3jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    WMD3jesRelativeStatFSRdn_isLoaded = true;
  }
  return WMD3jesRelativeStatFSRdn_;
}

const float &VVV0Tree::WMD4jesRelativeStatFSRdn() {
  if (not WMD4jesRelativeStatFSRdn_isLoaded) {
    if (WMD4jesRelativeStatFSRdn_branch != 0) {
      WMD4jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    WMD4jesRelativeStatFSRdn_isLoaded = true;
  }
  return WMD4jesRelativeStatFSRdn_;
}

const int &VVV0Tree::NQGen0jesRelativeStatFSRdn() {
  if (not NQGen0jesRelativeStatFSRdn_isLoaded) {
    if (NQGen0jesRelativeStatFSRdn_branch != 0) {
      NQGen0jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesRelativeStatFSRdn_isLoaded = true;
  }
  return NQGen0jesRelativeStatFSRdn_;
}

const int &VVV0Tree::NQGen1jesRelativeStatFSRdn() {
  if (not NQGen1jesRelativeStatFSRdn_isLoaded) {
    if (NQGen1jesRelativeStatFSRdn_branch != 0) {
      NQGen1jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesRelativeStatFSRdn_isLoaded = true;
  }
  return NQGen1jesRelativeStatFSRdn_;
}

const int &VVV0Tree::NQGen2jesRelativeStatFSRdn() {
  if (not NQGen2jesRelativeStatFSRdn_isLoaded) {
    if (NQGen2jesRelativeStatFSRdn_branch != 0) {
      NQGen2jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesRelativeStatFSRdn_isLoaded = true;
  }
  return NQGen2jesRelativeStatFSRdn_;
}

const int &VVV0Tree::NQGen3jesRelativeStatFSRdn() {
  if (not NQGen3jesRelativeStatFSRdn_isLoaded) {
    if (NQGen3jesRelativeStatFSRdn_branch != 0) {
      NQGen3jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesRelativeStatFSRdn_isLoaded = true;
  }
  return NQGen3jesRelativeStatFSRdn_;
}

const int &VVV0Tree::NQGen4jesRelativeStatFSRdn() {
  if (not NQGen4jesRelativeStatFSRdn_isLoaded) {
    if (NQGen4jesRelativeStatFSRdn_branch != 0) {
      NQGen4jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesRelativeStatFSRdn_isLoaded = true;
  }
  return NQGen4jesRelativeStatFSRdn_;
}

const int &VVV0Tree::NBGen0jesRelativeStatFSRdn() {
  if (not NBGen0jesRelativeStatFSRdn_isLoaded) {
    if (NBGen0jesRelativeStatFSRdn_branch != 0) {
      NBGen0jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesRelativeStatFSRdn_isLoaded = true;
  }
  return NBGen0jesRelativeStatFSRdn_;
}

const int &VVV0Tree::NBGen1jesRelativeStatFSRdn() {
  if (not NBGen1jesRelativeStatFSRdn_isLoaded) {
    if (NBGen1jesRelativeStatFSRdn_branch != 0) {
      NBGen1jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesRelativeStatFSRdn_isLoaded = true;
  }
  return NBGen1jesRelativeStatFSRdn_;
}

const int &VVV0Tree::NBGen2jesRelativeStatFSRdn() {
  if (not NBGen2jesRelativeStatFSRdn_isLoaded) {
    if (NBGen2jesRelativeStatFSRdn_branch != 0) {
      NBGen2jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesRelativeStatFSRdn_isLoaded = true;
  }
  return NBGen2jesRelativeStatFSRdn_;
}

const int &VVV0Tree::NBGen3jesRelativeStatFSRdn() {
  if (not NBGen3jesRelativeStatFSRdn_isLoaded) {
    if (NBGen3jesRelativeStatFSRdn_branch != 0) {
      NBGen3jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesRelativeStatFSRdn_isLoaded = true;
  }
  return NBGen3jesRelativeStatFSRdn_;
}

const int &VVV0Tree::NBGen4jesRelativeStatFSRdn() {
  if (not NBGen4jesRelativeStatFSRdn_isLoaded) {
    if (NBGen4jesRelativeStatFSRdn_branch != 0) {
      NBGen4jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesRelativeStatFSRdn_isLoaded = true;
  }
  return NBGen4jesRelativeStatFSRdn_;
}

const int &VVV0Tree::NLGen0jesRelativeStatFSRdn() {
  if (not NLGen0jesRelativeStatFSRdn_isLoaded) {
    if (NLGen0jesRelativeStatFSRdn_branch != 0) {
      NLGen0jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesRelativeStatFSRdn_isLoaded = true;
  }
  return NLGen0jesRelativeStatFSRdn_;
}

const int &VVV0Tree::NLGen1jesRelativeStatFSRdn() {
  if (not NLGen1jesRelativeStatFSRdn_isLoaded) {
    if (NLGen1jesRelativeStatFSRdn_branch != 0) {
      NLGen1jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesRelativeStatFSRdn_isLoaded = true;
  }
  return NLGen1jesRelativeStatFSRdn_;
}

const int &VVV0Tree::NLGen2jesRelativeStatFSRdn() {
  if (not NLGen2jesRelativeStatFSRdn_isLoaded) {
    if (NLGen2jesRelativeStatFSRdn_branch != 0) {
      NLGen2jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesRelativeStatFSRdn_isLoaded = true;
  }
  return NLGen2jesRelativeStatFSRdn_;
}

const int &VVV0Tree::NLGen3jesRelativeStatFSRdn() {
  if (not NLGen3jesRelativeStatFSRdn_isLoaded) {
    if (NLGen3jesRelativeStatFSRdn_branch != 0) {
      NLGen3jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesRelativeStatFSRdn_isLoaded = true;
  }
  return NLGen3jesRelativeStatFSRdn_;
}

const int &VVV0Tree::NLGen4jesRelativeStatFSRdn() {
  if (not NLGen4jesRelativeStatFSRdn_isLoaded) {
    if (NLGen4jesRelativeStatFSRdn_branch != 0) {
      NLGen4jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesRelativeStatFSRdn_isLoaded = true;
  }
  return NLGen4jesRelativeStatFSRdn_;
}

const int &VVV0Tree::NVQGen0jesRelativeStatFSRdn() {
  if (not NVQGen0jesRelativeStatFSRdn_isLoaded) {
    if (NVQGen0jesRelativeStatFSRdn_branch != 0) {
      NVQGen0jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesRelativeStatFSRdn_isLoaded = true;
  }
  return NVQGen0jesRelativeStatFSRdn_;
}

const int &VVV0Tree::NVQGen1jesRelativeStatFSRdn() {
  if (not NVQGen1jesRelativeStatFSRdn_isLoaded) {
    if (NVQGen1jesRelativeStatFSRdn_branch != 0) {
      NVQGen1jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesRelativeStatFSRdn_isLoaded = true;
  }
  return NVQGen1jesRelativeStatFSRdn_;
}

const int &VVV0Tree::NVQGen2jesRelativeStatFSRdn() {
  if (not NVQGen2jesRelativeStatFSRdn_isLoaded) {
    if (NVQGen2jesRelativeStatFSRdn_branch != 0) {
      NVQGen2jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesRelativeStatFSRdn_isLoaded = true;
  }
  return NVQGen2jesRelativeStatFSRdn_;
}

const int &VVV0Tree::NVQGen3jesRelativeStatFSRdn() {
  if (not NVQGen3jesRelativeStatFSRdn_isLoaded) {
    if (NVQGen3jesRelativeStatFSRdn_branch != 0) {
      NVQGen3jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesRelativeStatFSRdn_isLoaded = true;
  }
  return NVQGen3jesRelativeStatFSRdn_;
}

const int &VVV0Tree::NVQGen4jesRelativeStatFSRdn() {
  if (not NVQGen4jesRelativeStatFSRdn_isLoaded) {
    if (NVQGen4jesRelativeStatFSRdn_branch != 0) {
      NVQGen4jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesRelativeStatFSRdn_isLoaded = true;
  }
  return NVQGen4jesRelativeStatFSRdn_;
}

const int &VVV0Tree::NiFJjesRelativeStatFSRdn() {
  if (not NiFJjesRelativeStatFSRdn_isLoaded) {
    if (NiFJjesRelativeStatFSRdn_branch != 0) {
      NiFJjesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    NiFJjesRelativeStatFSRdn_isLoaded = true;
  }
  return NiFJjesRelativeStatFSRdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesRelativeStatFSRdn() {
  if (not iFJ0jesRelativeStatFSRdn_isLoaded) {
    if (iFJ0jesRelativeStatFSRdn_branch != 0) {
      iFJ0jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesRelativeStatFSRdn_isLoaded = true;
  }
  return *iFJ0jesRelativeStatFSRdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesRelativeStatFSRdn() {
  if (not iFJ1jesRelativeStatFSRdn_isLoaded) {
    if (iFJ1jesRelativeStatFSRdn_branch != 0) {
      iFJ1jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesRelativeStatFSRdn_isLoaded = true;
  }
  return *iFJ1jesRelativeStatFSRdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesRelativeStatFSRdn() {
  if (not iFJ2jesRelativeStatFSRdn_isLoaded) {
    if (iFJ2jesRelativeStatFSRdn_branch != 0) {
      iFJ2jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesRelativeStatFSRdn_isLoaded = true;
  }
  return *iFJ2jesRelativeStatFSRdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesRelativeStatFSRdn() {
  if (not iFJ3jesRelativeStatFSRdn_isLoaded) {
    if (iFJ3jesRelativeStatFSRdn_branch != 0) {
      iFJ3jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesRelativeStatFSRdn_isLoaded = true;
  }
  return *iFJ3jesRelativeStatFSRdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesRelativeStatFSRdn() {
  if (not iFJ4jesRelativeStatFSRdn_isLoaded) {
    if (iFJ4jesRelativeStatFSRdn_branch != 0) {
      iFJ4jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesRelativeStatFSRdn_isLoaded = true;
  }
  return *iFJ4jesRelativeStatFSRdn_;
}

const float &VVV0Tree::iVMD0jesRelativeStatFSRdn() {
  if (not iVMD0jesRelativeStatFSRdn_isLoaded) {
    if (iVMD0jesRelativeStatFSRdn_branch != 0) {
      iVMD0jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesRelativeStatFSRdn_isLoaded = true;
  }
  return iVMD0jesRelativeStatFSRdn_;
}

const float &VVV0Tree::iVMD1jesRelativeStatFSRdn() {
  if (not iVMD1jesRelativeStatFSRdn_isLoaded) {
    if (iVMD1jesRelativeStatFSRdn_branch != 0) {
      iVMD1jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesRelativeStatFSRdn_isLoaded = true;
  }
  return iVMD1jesRelativeStatFSRdn_;
}

const float &VVV0Tree::iVMD2jesRelativeStatFSRdn() {
  if (not iVMD2jesRelativeStatFSRdn_isLoaded) {
    if (iVMD2jesRelativeStatFSRdn_branch != 0) {
      iVMD2jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesRelativeStatFSRdn_isLoaded = true;
  }
  return iVMD2jesRelativeStatFSRdn_;
}

const float &VVV0Tree::iVMD3jesRelativeStatFSRdn() {
  if (not iVMD3jesRelativeStatFSRdn_isLoaded) {
    if (iVMD3jesRelativeStatFSRdn_branch != 0) {
      iVMD3jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesRelativeStatFSRdn_isLoaded = true;
  }
  return iVMD3jesRelativeStatFSRdn_;
}

const float &VVV0Tree::iVMD4jesRelativeStatFSRdn() {
  if (not iVMD4jesRelativeStatFSRdn_isLoaded) {
    if (iVMD4jesRelativeStatFSRdn_branch != 0) {
      iVMD4jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesRelativeStatFSRdn_isLoaded = true;
  }
  return iVMD4jesRelativeStatFSRdn_;
}

const float &VVV0Tree::iWMD0jesRelativeStatFSRdn() {
  if (not iWMD0jesRelativeStatFSRdn_isLoaded) {
    if (iWMD0jesRelativeStatFSRdn_branch != 0) {
      iWMD0jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesRelativeStatFSRdn_isLoaded = true;
  }
  return iWMD0jesRelativeStatFSRdn_;
}

const float &VVV0Tree::iWMD1jesRelativeStatFSRdn() {
  if (not iWMD1jesRelativeStatFSRdn_isLoaded) {
    if (iWMD1jesRelativeStatFSRdn_branch != 0) {
      iWMD1jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesRelativeStatFSRdn_isLoaded = true;
  }
  return iWMD1jesRelativeStatFSRdn_;
}

const float &VVV0Tree::iWMD2jesRelativeStatFSRdn() {
  if (not iWMD2jesRelativeStatFSRdn_isLoaded) {
    if (iWMD2jesRelativeStatFSRdn_branch != 0) {
      iWMD2jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesRelativeStatFSRdn_isLoaded = true;
  }
  return iWMD2jesRelativeStatFSRdn_;
}

const float &VVV0Tree::iWMD3jesRelativeStatFSRdn() {
  if (not iWMD3jesRelativeStatFSRdn_isLoaded) {
    if (iWMD3jesRelativeStatFSRdn_branch != 0) {
      iWMD3jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesRelativeStatFSRdn_isLoaded = true;
  }
  return iWMD3jesRelativeStatFSRdn_;
}

const float &VVV0Tree::iWMD4jesRelativeStatFSRdn() {
  if (not iWMD4jesRelativeStatFSRdn_isLoaded) {
    if (iWMD4jesRelativeStatFSRdn_branch != 0) {
      iWMD4jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesRelativeStatFSRdn_isLoaded = true;
  }
  return iWMD4jesRelativeStatFSRdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesRelativeStatFSRdn() {
  if (not METjesRelativeStatFSRdn_isLoaded) {
    if (METjesRelativeStatFSRdn_branch != 0) {
      METjesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch METjesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    METjesRelativeStatFSRdn_isLoaded = true;
  }
  return *METjesRelativeStatFSRdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesRelativeStatFSRdn() {
  if (not NujesRelativeStatFSRdn_isLoaded) {
    if (NujesRelativeStatFSRdn_branch != 0) {
      NujesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NujesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    NujesRelativeStatFSRdn_isLoaded = true;
  }
  return *NujesRelativeStatFSRdn_;
}

const int &VVV0Tree::NJjesRelativeStatFSRdn() {
  if (not NJjesRelativeStatFSRdn_isLoaded) {
    if (NJjesRelativeStatFSRdn_branch != 0) {
      NJjesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NJjesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    NJjesRelativeStatFSRdn_isLoaded = true;
  }
  return NJjesRelativeStatFSRdn_;
}

const int &VVV0Tree::NbLoosejesRelativeStatFSRdn() {
  if (not NbLoosejesRelativeStatFSRdn_isLoaded) {
    if (NbLoosejesRelativeStatFSRdn_branch != 0) {
      NbLoosejesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesRelativeStatFSRdn_isLoaded = true;
  }
  return NbLoosejesRelativeStatFSRdn_;
}

const int &VVV0Tree::NbMediumjesRelativeStatFSRdn() {
  if (not NbMediumjesRelativeStatFSRdn_isLoaded) {
    if (NbMediumjesRelativeStatFSRdn_branch != 0) {
      NbMediumjesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesRelativeStatFSRdn_isLoaded = true;
  }
  return NbMediumjesRelativeStatFSRdn_;
}

const int &VVV0Tree::NbTightjesRelativeStatFSRdn() {
  if (not NbTightjesRelativeStatFSRdn_isLoaded) {
    if (NbTightjesRelativeStatFSRdn_branch != 0) {
      NbTightjesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    NbTightjesRelativeStatFSRdn_isLoaded = true;
  }
  return NbTightjesRelativeStatFSRdn_;
}

const int &VVV0Tree::NoORNbLoosejesRelativeStatFSRdn() {
  if (not NoORNbLoosejesRelativeStatFSRdn_isLoaded) {
    if (NoORNbLoosejesRelativeStatFSRdn_branch != 0) {
      NoORNbLoosejesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesRelativeStatFSRdn_isLoaded = true;
  }
  return NoORNbLoosejesRelativeStatFSRdn_;
}

const int &VVV0Tree::NoORNbMediumjesRelativeStatFSRdn() {
  if (not NoORNbMediumjesRelativeStatFSRdn_isLoaded) {
    if (NoORNbMediumjesRelativeStatFSRdn_branch != 0) {
      NoORNbMediumjesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesRelativeStatFSRdn_isLoaded = true;
  }
  return NoORNbMediumjesRelativeStatFSRdn_;
}

const int &VVV0Tree::NoORNbTightjesRelativeStatFSRdn() {
  if (not NoORNbTightjesRelativeStatFSRdn_isLoaded) {
    if (NoORNbTightjesRelativeStatFSRdn_branch != 0) {
      NoORNbTightjesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesRelativeStatFSRdn_isLoaded = true;
  }
  return NoORNbTightjesRelativeStatFSRdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesRelativeStatFSRdn() {
  if (not J0jesRelativeStatFSRdn_isLoaded) {
    if (J0jesRelativeStatFSRdn_branch != 0) {
      J0jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch J0jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    J0jesRelativeStatFSRdn_isLoaded = true;
  }
  return *J0jesRelativeStatFSRdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesRelativeStatFSRdn() {
  if (not J1jesRelativeStatFSRdn_isLoaded) {
    if (J1jesRelativeStatFSRdn_branch != 0) {
      J1jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch J1jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    J1jesRelativeStatFSRdn_isLoaded = true;
  }
  return *J1jesRelativeStatFSRdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesRelativeStatFSRdn() {
  if (not J2jesRelativeStatFSRdn_isLoaded) {
    if (J2jesRelativeStatFSRdn_branch != 0) {
      J2jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch J2jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    J2jesRelativeStatFSRdn_isLoaded = true;
  }
  return *J2jesRelativeStatFSRdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesRelativeStatFSRdn() {
  if (not J3jesRelativeStatFSRdn_isLoaded) {
    if (J3jesRelativeStatFSRdn_branch != 0) {
      J3jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch J3jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    J3jesRelativeStatFSRdn_isLoaded = true;
  }
  return *J3jesRelativeStatFSRdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesRelativeStatFSRdn() {
  if (not J4jesRelativeStatFSRdn_isLoaded) {
    if (J4jesRelativeStatFSRdn_branch != 0) {
      J4jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch J4jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    J4jesRelativeStatFSRdn_isLoaded = true;
  }
  return *J4jesRelativeStatFSRdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesRelativeStatFSRdn() {
  if (not J5jesRelativeStatFSRdn_isLoaded) {
    if (J5jesRelativeStatFSRdn_branch != 0) {
      J5jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch J5jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    J5jesRelativeStatFSRdn_isLoaded = true;
  }
  return *J5jesRelativeStatFSRdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesRelativeStatFSRdn() {
  if (not J6jesRelativeStatFSRdn_isLoaded) {
    if (J6jesRelativeStatFSRdn_branch != 0) {
      J6jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch J6jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    J6jesRelativeStatFSRdn_isLoaded = true;
  }
  return *J6jesRelativeStatFSRdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesRelativeStatFSRdn() {
  if (not J7jesRelativeStatFSRdn_isLoaded) {
    if (J7jesRelativeStatFSRdn_branch != 0) {
      J7jesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch J7jesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    J7jesRelativeStatFSRdn_isLoaded = true;
  }
  return *J7jesRelativeStatFSRdn_;
}

const vector<int> &VVV0Tree::NQJGenjesRelativeStatFSRdn() {
  if (not NQJGenjesRelativeStatFSRdn_isLoaded) {
    if (NQJGenjesRelativeStatFSRdn_branch != 0) {
      NQJGenjesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesRelativeStatFSRdn_isLoaded = true;
  }
  return *NQJGenjesRelativeStatFSRdn_;
}

const vector<int> &VVV0Tree::NBJGenjesRelativeStatFSRdn() {
  if (not NBJGenjesRelativeStatFSRdn_isLoaded) {
    if (NBJGenjesRelativeStatFSRdn_branch != 0) {
      NBJGenjesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesRelativeStatFSRdn_isLoaded = true;
  }
  return *NBJGenjesRelativeStatFSRdn_;
}

const vector<int> &VVV0Tree::NLJGenjesRelativeStatFSRdn() {
  if (not NLJGenjesRelativeStatFSRdn_isLoaded) {
    if (NLJGenjesRelativeStatFSRdn_branch != 0) {
      NLJGenjesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesRelativeStatFSRdn_isLoaded = true;
  }
  return *NLJGenjesRelativeStatFSRdn_;
}

const float &VVV0Tree::MVVXjesRelativeStatFSRdn() {
  if (not MVVXjesRelativeStatFSRdn_isLoaded) {
    if (MVVXjesRelativeStatFSRdn_branch != 0) {
      MVVXjesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    MVVXjesRelativeStatFSRdn_isLoaded = true;
  }
  return MVVXjesRelativeStatFSRdn_;
}

const float &VVV0Tree::PtVVXjesRelativeStatFSRdn() {
  if (not PtVVXjesRelativeStatFSRdn_isLoaded) {
    if (PtVVXjesRelativeStatFSRdn_branch != 0) {
      PtVVXjesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesRelativeStatFSRdn_isLoaded = true;
  }
  return PtVVXjesRelativeStatFSRdn_;
}

const float &VVV0Tree::HTjesRelativeStatFSRdn() {
  if (not HTjesRelativeStatFSRdn_isLoaded) {
    if (HTjesRelativeStatFSRdn_branch != 0) {
      HTjesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch HTjesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    HTjesRelativeStatFSRdn_isLoaded = true;
  }
  return HTjesRelativeStatFSRdn_;
}

const float &VVV0Tree::HTJjesRelativeStatFSRdn() {
  if (not HTJjesRelativeStatFSRdn_isLoaded) {
    if (HTJjesRelativeStatFSRdn_branch != 0) {
      HTJjesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch HTJjesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    HTJjesRelativeStatFSRdn_isLoaded = true;
  }
  return HTJjesRelativeStatFSRdn_;
}

const float &VVV0Tree::HTFJjesRelativeStatFSRdn() {
  if (not HTFJjesRelativeStatFSRdn_isLoaded) {
    if (HTFJjesRelativeStatFSRdn_branch != 0) {
      HTFJjesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    HTFJjesRelativeStatFSRdn_isLoaded = true;
  }
  return HTFJjesRelativeStatFSRdn_;
}

const float &VVV0Tree::SumPtFJjesRelativeStatFSRdn() {
  if (not SumPtFJjesRelativeStatFSRdn_isLoaded) {
    if (SumPtFJjesRelativeStatFSRdn_branch != 0) {
      SumPtFJjesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesRelativeStatFSRdn_isLoaded = true;
  }
  return SumPtFJjesRelativeStatFSRdn_;
}

const float &VVV0Tree::SumPtJjesRelativeStatFSRdn() {
  if (not SumPtJjesRelativeStatFSRdn_isLoaded) {
    if (SumPtJjesRelativeStatFSRdn_branch != 0) {
      SumPtJjesRelativeStatFSRdn_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesRelativeStatFSRdn_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesRelativeStatFSRdn_isLoaded = true;
  }
  return SumPtJjesRelativeStatFSRdn_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesRelativeStatECup() {
  if (not JsjesRelativeStatECup_isLoaded) {
    if (JsjesRelativeStatECup_branch != 0) {
      JsjesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch JsjesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    JsjesRelativeStatECup_isLoaded = true;
  }
  return *JsjesRelativeStatECup_;
}

const int &VVV0Tree::NFJjesRelativeStatECup() {
  if (not NFJjesRelativeStatECup_isLoaded) {
    if (NFJjesRelativeStatECup_branch != 0) {
      NFJjesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch NFJjesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    NFJjesRelativeStatECup_isLoaded = true;
  }
  return NFJjesRelativeStatECup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesRelativeStatECup() {
  if (not FJ0jesRelativeStatECup_isLoaded) {
    if (FJ0jesRelativeStatECup_branch != 0) {
      FJ0jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    FJ0jesRelativeStatECup_isLoaded = true;
  }
  return *FJ0jesRelativeStatECup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesRelativeStatECup() {
  if (not FJ1jesRelativeStatECup_isLoaded) {
    if (FJ1jesRelativeStatECup_branch != 0) {
      FJ1jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    FJ1jesRelativeStatECup_isLoaded = true;
  }
  return *FJ1jesRelativeStatECup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesRelativeStatECup() {
  if (not FJ2jesRelativeStatECup_isLoaded) {
    if (FJ2jesRelativeStatECup_branch != 0) {
      FJ2jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    FJ2jesRelativeStatECup_isLoaded = true;
  }
  return *FJ2jesRelativeStatECup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesRelativeStatECup() {
  if (not FJ3jesRelativeStatECup_isLoaded) {
    if (FJ3jesRelativeStatECup_branch != 0) {
      FJ3jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    FJ3jesRelativeStatECup_isLoaded = true;
  }
  return *FJ3jesRelativeStatECup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesRelativeStatECup() {
  if (not FJ4jesRelativeStatECup_isLoaded) {
    if (FJ4jesRelativeStatECup_branch != 0) {
      FJ4jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    FJ4jesRelativeStatECup_isLoaded = true;
  }
  return *FJ4jesRelativeStatECup_;
}

const float &VVV0Tree::VMD0jesRelativeStatECup() {
  if (not VMD0jesRelativeStatECup_isLoaded) {
    if (VMD0jesRelativeStatECup_branch != 0) {
      VMD0jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    VMD0jesRelativeStatECup_isLoaded = true;
  }
  return VMD0jesRelativeStatECup_;
}

const float &VVV0Tree::VMD1jesRelativeStatECup() {
  if (not VMD1jesRelativeStatECup_isLoaded) {
    if (VMD1jesRelativeStatECup_branch != 0) {
      VMD1jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    VMD1jesRelativeStatECup_isLoaded = true;
  }
  return VMD1jesRelativeStatECup_;
}

const float &VVV0Tree::VMD2jesRelativeStatECup() {
  if (not VMD2jesRelativeStatECup_isLoaded) {
    if (VMD2jesRelativeStatECup_branch != 0) {
      VMD2jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    VMD2jesRelativeStatECup_isLoaded = true;
  }
  return VMD2jesRelativeStatECup_;
}

const float &VVV0Tree::VMD3jesRelativeStatECup() {
  if (not VMD3jesRelativeStatECup_isLoaded) {
    if (VMD3jesRelativeStatECup_branch != 0) {
      VMD3jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    VMD3jesRelativeStatECup_isLoaded = true;
  }
  return VMD3jesRelativeStatECup_;
}

const float &VVV0Tree::VMD4jesRelativeStatECup() {
  if (not VMD4jesRelativeStatECup_isLoaded) {
    if (VMD4jesRelativeStatECup_branch != 0) {
      VMD4jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    VMD4jesRelativeStatECup_isLoaded = true;
  }
  return VMD4jesRelativeStatECup_;
}

const float &VVV0Tree::WMD0jesRelativeStatECup() {
  if (not WMD0jesRelativeStatECup_isLoaded) {
    if (WMD0jesRelativeStatECup_branch != 0) {
      WMD0jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    WMD0jesRelativeStatECup_isLoaded = true;
  }
  return WMD0jesRelativeStatECup_;
}

const float &VVV0Tree::WMD1jesRelativeStatECup() {
  if (not WMD1jesRelativeStatECup_isLoaded) {
    if (WMD1jesRelativeStatECup_branch != 0) {
      WMD1jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    WMD1jesRelativeStatECup_isLoaded = true;
  }
  return WMD1jesRelativeStatECup_;
}

const float &VVV0Tree::WMD2jesRelativeStatECup() {
  if (not WMD2jesRelativeStatECup_isLoaded) {
    if (WMD2jesRelativeStatECup_branch != 0) {
      WMD2jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    WMD2jesRelativeStatECup_isLoaded = true;
  }
  return WMD2jesRelativeStatECup_;
}

const float &VVV0Tree::WMD3jesRelativeStatECup() {
  if (not WMD3jesRelativeStatECup_isLoaded) {
    if (WMD3jesRelativeStatECup_branch != 0) {
      WMD3jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    WMD3jesRelativeStatECup_isLoaded = true;
  }
  return WMD3jesRelativeStatECup_;
}

const float &VVV0Tree::WMD4jesRelativeStatECup() {
  if (not WMD4jesRelativeStatECup_isLoaded) {
    if (WMD4jesRelativeStatECup_branch != 0) {
      WMD4jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    WMD4jesRelativeStatECup_isLoaded = true;
  }
  return WMD4jesRelativeStatECup_;
}

const int &VVV0Tree::NQGen0jesRelativeStatECup() {
  if (not NQGen0jesRelativeStatECup_isLoaded) {
    if (NQGen0jesRelativeStatECup_branch != 0) {
      NQGen0jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesRelativeStatECup_isLoaded = true;
  }
  return NQGen0jesRelativeStatECup_;
}

const int &VVV0Tree::NQGen1jesRelativeStatECup() {
  if (not NQGen1jesRelativeStatECup_isLoaded) {
    if (NQGen1jesRelativeStatECup_branch != 0) {
      NQGen1jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesRelativeStatECup_isLoaded = true;
  }
  return NQGen1jesRelativeStatECup_;
}

const int &VVV0Tree::NQGen2jesRelativeStatECup() {
  if (not NQGen2jesRelativeStatECup_isLoaded) {
    if (NQGen2jesRelativeStatECup_branch != 0) {
      NQGen2jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesRelativeStatECup_isLoaded = true;
  }
  return NQGen2jesRelativeStatECup_;
}

const int &VVV0Tree::NQGen3jesRelativeStatECup() {
  if (not NQGen3jesRelativeStatECup_isLoaded) {
    if (NQGen3jesRelativeStatECup_branch != 0) {
      NQGen3jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesRelativeStatECup_isLoaded = true;
  }
  return NQGen3jesRelativeStatECup_;
}

const int &VVV0Tree::NQGen4jesRelativeStatECup() {
  if (not NQGen4jesRelativeStatECup_isLoaded) {
    if (NQGen4jesRelativeStatECup_branch != 0) {
      NQGen4jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesRelativeStatECup_isLoaded = true;
  }
  return NQGen4jesRelativeStatECup_;
}

const int &VVV0Tree::NBGen0jesRelativeStatECup() {
  if (not NBGen0jesRelativeStatECup_isLoaded) {
    if (NBGen0jesRelativeStatECup_branch != 0) {
      NBGen0jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesRelativeStatECup_isLoaded = true;
  }
  return NBGen0jesRelativeStatECup_;
}

const int &VVV0Tree::NBGen1jesRelativeStatECup() {
  if (not NBGen1jesRelativeStatECup_isLoaded) {
    if (NBGen1jesRelativeStatECup_branch != 0) {
      NBGen1jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesRelativeStatECup_isLoaded = true;
  }
  return NBGen1jesRelativeStatECup_;
}

const int &VVV0Tree::NBGen2jesRelativeStatECup() {
  if (not NBGen2jesRelativeStatECup_isLoaded) {
    if (NBGen2jesRelativeStatECup_branch != 0) {
      NBGen2jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesRelativeStatECup_isLoaded = true;
  }
  return NBGen2jesRelativeStatECup_;
}

const int &VVV0Tree::NBGen3jesRelativeStatECup() {
  if (not NBGen3jesRelativeStatECup_isLoaded) {
    if (NBGen3jesRelativeStatECup_branch != 0) {
      NBGen3jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesRelativeStatECup_isLoaded = true;
  }
  return NBGen3jesRelativeStatECup_;
}

const int &VVV0Tree::NBGen4jesRelativeStatECup() {
  if (not NBGen4jesRelativeStatECup_isLoaded) {
    if (NBGen4jesRelativeStatECup_branch != 0) {
      NBGen4jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesRelativeStatECup_isLoaded = true;
  }
  return NBGen4jesRelativeStatECup_;
}

const int &VVV0Tree::NLGen0jesRelativeStatECup() {
  if (not NLGen0jesRelativeStatECup_isLoaded) {
    if (NLGen0jesRelativeStatECup_branch != 0) {
      NLGen0jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesRelativeStatECup_isLoaded = true;
  }
  return NLGen0jesRelativeStatECup_;
}

const int &VVV0Tree::NLGen1jesRelativeStatECup() {
  if (not NLGen1jesRelativeStatECup_isLoaded) {
    if (NLGen1jesRelativeStatECup_branch != 0) {
      NLGen1jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesRelativeStatECup_isLoaded = true;
  }
  return NLGen1jesRelativeStatECup_;
}

const int &VVV0Tree::NLGen2jesRelativeStatECup() {
  if (not NLGen2jesRelativeStatECup_isLoaded) {
    if (NLGen2jesRelativeStatECup_branch != 0) {
      NLGen2jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesRelativeStatECup_isLoaded = true;
  }
  return NLGen2jesRelativeStatECup_;
}

const int &VVV0Tree::NLGen3jesRelativeStatECup() {
  if (not NLGen3jesRelativeStatECup_isLoaded) {
    if (NLGen3jesRelativeStatECup_branch != 0) {
      NLGen3jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesRelativeStatECup_isLoaded = true;
  }
  return NLGen3jesRelativeStatECup_;
}

const int &VVV0Tree::NLGen4jesRelativeStatECup() {
  if (not NLGen4jesRelativeStatECup_isLoaded) {
    if (NLGen4jesRelativeStatECup_branch != 0) {
      NLGen4jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesRelativeStatECup_isLoaded = true;
  }
  return NLGen4jesRelativeStatECup_;
}

const int &VVV0Tree::NVQGen0jesRelativeStatECup() {
  if (not NVQGen0jesRelativeStatECup_isLoaded) {
    if (NVQGen0jesRelativeStatECup_branch != 0) {
      NVQGen0jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesRelativeStatECup_isLoaded = true;
  }
  return NVQGen0jesRelativeStatECup_;
}

const int &VVV0Tree::NVQGen1jesRelativeStatECup() {
  if (not NVQGen1jesRelativeStatECup_isLoaded) {
    if (NVQGen1jesRelativeStatECup_branch != 0) {
      NVQGen1jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesRelativeStatECup_isLoaded = true;
  }
  return NVQGen1jesRelativeStatECup_;
}

const int &VVV0Tree::NVQGen2jesRelativeStatECup() {
  if (not NVQGen2jesRelativeStatECup_isLoaded) {
    if (NVQGen2jesRelativeStatECup_branch != 0) {
      NVQGen2jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesRelativeStatECup_isLoaded = true;
  }
  return NVQGen2jesRelativeStatECup_;
}

const int &VVV0Tree::NVQGen3jesRelativeStatECup() {
  if (not NVQGen3jesRelativeStatECup_isLoaded) {
    if (NVQGen3jesRelativeStatECup_branch != 0) {
      NVQGen3jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesRelativeStatECup_isLoaded = true;
  }
  return NVQGen3jesRelativeStatECup_;
}

const int &VVV0Tree::NVQGen4jesRelativeStatECup() {
  if (not NVQGen4jesRelativeStatECup_isLoaded) {
    if (NVQGen4jesRelativeStatECup_branch != 0) {
      NVQGen4jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesRelativeStatECup_isLoaded = true;
  }
  return NVQGen4jesRelativeStatECup_;
}

const int &VVV0Tree::NiFJjesRelativeStatECup() {
  if (not NiFJjesRelativeStatECup_isLoaded) {
    if (NiFJjesRelativeStatECup_branch != 0) {
      NiFJjesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    NiFJjesRelativeStatECup_isLoaded = true;
  }
  return NiFJjesRelativeStatECup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesRelativeStatECup() {
  if (not iFJ0jesRelativeStatECup_isLoaded) {
    if (iFJ0jesRelativeStatECup_branch != 0) {
      iFJ0jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesRelativeStatECup_isLoaded = true;
  }
  return *iFJ0jesRelativeStatECup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesRelativeStatECup() {
  if (not iFJ1jesRelativeStatECup_isLoaded) {
    if (iFJ1jesRelativeStatECup_branch != 0) {
      iFJ1jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesRelativeStatECup_isLoaded = true;
  }
  return *iFJ1jesRelativeStatECup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesRelativeStatECup() {
  if (not iFJ2jesRelativeStatECup_isLoaded) {
    if (iFJ2jesRelativeStatECup_branch != 0) {
      iFJ2jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesRelativeStatECup_isLoaded = true;
  }
  return *iFJ2jesRelativeStatECup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesRelativeStatECup() {
  if (not iFJ3jesRelativeStatECup_isLoaded) {
    if (iFJ3jesRelativeStatECup_branch != 0) {
      iFJ3jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesRelativeStatECup_isLoaded = true;
  }
  return *iFJ3jesRelativeStatECup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesRelativeStatECup() {
  if (not iFJ4jesRelativeStatECup_isLoaded) {
    if (iFJ4jesRelativeStatECup_branch != 0) {
      iFJ4jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesRelativeStatECup_isLoaded = true;
  }
  return *iFJ4jesRelativeStatECup_;
}

const float &VVV0Tree::iVMD0jesRelativeStatECup() {
  if (not iVMD0jesRelativeStatECup_isLoaded) {
    if (iVMD0jesRelativeStatECup_branch != 0) {
      iVMD0jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesRelativeStatECup_isLoaded = true;
  }
  return iVMD0jesRelativeStatECup_;
}

const float &VVV0Tree::iVMD1jesRelativeStatECup() {
  if (not iVMD1jesRelativeStatECup_isLoaded) {
    if (iVMD1jesRelativeStatECup_branch != 0) {
      iVMD1jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesRelativeStatECup_isLoaded = true;
  }
  return iVMD1jesRelativeStatECup_;
}

const float &VVV0Tree::iVMD2jesRelativeStatECup() {
  if (not iVMD2jesRelativeStatECup_isLoaded) {
    if (iVMD2jesRelativeStatECup_branch != 0) {
      iVMD2jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesRelativeStatECup_isLoaded = true;
  }
  return iVMD2jesRelativeStatECup_;
}

const float &VVV0Tree::iVMD3jesRelativeStatECup() {
  if (not iVMD3jesRelativeStatECup_isLoaded) {
    if (iVMD3jesRelativeStatECup_branch != 0) {
      iVMD3jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesRelativeStatECup_isLoaded = true;
  }
  return iVMD3jesRelativeStatECup_;
}

const float &VVV0Tree::iVMD4jesRelativeStatECup() {
  if (not iVMD4jesRelativeStatECup_isLoaded) {
    if (iVMD4jesRelativeStatECup_branch != 0) {
      iVMD4jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesRelativeStatECup_isLoaded = true;
  }
  return iVMD4jesRelativeStatECup_;
}

const float &VVV0Tree::iWMD0jesRelativeStatECup() {
  if (not iWMD0jesRelativeStatECup_isLoaded) {
    if (iWMD0jesRelativeStatECup_branch != 0) {
      iWMD0jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesRelativeStatECup_isLoaded = true;
  }
  return iWMD0jesRelativeStatECup_;
}

const float &VVV0Tree::iWMD1jesRelativeStatECup() {
  if (not iWMD1jesRelativeStatECup_isLoaded) {
    if (iWMD1jesRelativeStatECup_branch != 0) {
      iWMD1jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesRelativeStatECup_isLoaded = true;
  }
  return iWMD1jesRelativeStatECup_;
}

const float &VVV0Tree::iWMD2jesRelativeStatECup() {
  if (not iWMD2jesRelativeStatECup_isLoaded) {
    if (iWMD2jesRelativeStatECup_branch != 0) {
      iWMD2jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesRelativeStatECup_isLoaded = true;
  }
  return iWMD2jesRelativeStatECup_;
}

const float &VVV0Tree::iWMD3jesRelativeStatECup() {
  if (not iWMD3jesRelativeStatECup_isLoaded) {
    if (iWMD3jesRelativeStatECup_branch != 0) {
      iWMD3jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesRelativeStatECup_isLoaded = true;
  }
  return iWMD3jesRelativeStatECup_;
}

const float &VVV0Tree::iWMD4jesRelativeStatECup() {
  if (not iWMD4jesRelativeStatECup_isLoaded) {
    if (iWMD4jesRelativeStatECup_branch != 0) {
      iWMD4jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesRelativeStatECup_isLoaded = true;
  }
  return iWMD4jesRelativeStatECup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesRelativeStatECup() {
  if (not METjesRelativeStatECup_isLoaded) {
    if (METjesRelativeStatECup_branch != 0) {
      METjesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch METjesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    METjesRelativeStatECup_isLoaded = true;
  }
  return *METjesRelativeStatECup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesRelativeStatECup() {
  if (not NujesRelativeStatECup_isLoaded) {
    if (NujesRelativeStatECup_branch != 0) {
      NujesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch NujesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    NujesRelativeStatECup_isLoaded = true;
  }
  return *NujesRelativeStatECup_;
}

const int &VVV0Tree::NJjesRelativeStatECup() {
  if (not NJjesRelativeStatECup_isLoaded) {
    if (NJjesRelativeStatECup_branch != 0) {
      NJjesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch NJjesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    NJjesRelativeStatECup_isLoaded = true;
  }
  return NJjesRelativeStatECup_;
}

const int &VVV0Tree::NbLoosejesRelativeStatECup() {
  if (not NbLoosejesRelativeStatECup_isLoaded) {
    if (NbLoosejesRelativeStatECup_branch != 0) {
      NbLoosejesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesRelativeStatECup_isLoaded = true;
  }
  return NbLoosejesRelativeStatECup_;
}

const int &VVV0Tree::NbMediumjesRelativeStatECup() {
  if (not NbMediumjesRelativeStatECup_isLoaded) {
    if (NbMediumjesRelativeStatECup_branch != 0) {
      NbMediumjesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesRelativeStatECup_isLoaded = true;
  }
  return NbMediumjesRelativeStatECup_;
}

const int &VVV0Tree::NbTightjesRelativeStatECup() {
  if (not NbTightjesRelativeStatECup_isLoaded) {
    if (NbTightjesRelativeStatECup_branch != 0) {
      NbTightjesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    NbTightjesRelativeStatECup_isLoaded = true;
  }
  return NbTightjesRelativeStatECup_;
}

const int &VVV0Tree::NoORNbLoosejesRelativeStatECup() {
  if (not NoORNbLoosejesRelativeStatECup_isLoaded) {
    if (NoORNbLoosejesRelativeStatECup_branch != 0) {
      NoORNbLoosejesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesRelativeStatECup_isLoaded = true;
  }
  return NoORNbLoosejesRelativeStatECup_;
}

const int &VVV0Tree::NoORNbMediumjesRelativeStatECup() {
  if (not NoORNbMediumjesRelativeStatECup_isLoaded) {
    if (NoORNbMediumjesRelativeStatECup_branch != 0) {
      NoORNbMediumjesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesRelativeStatECup_isLoaded = true;
  }
  return NoORNbMediumjesRelativeStatECup_;
}

const int &VVV0Tree::NoORNbTightjesRelativeStatECup() {
  if (not NoORNbTightjesRelativeStatECup_isLoaded) {
    if (NoORNbTightjesRelativeStatECup_branch != 0) {
      NoORNbTightjesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesRelativeStatECup_isLoaded = true;
  }
  return NoORNbTightjesRelativeStatECup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesRelativeStatECup() {
  if (not J0jesRelativeStatECup_isLoaded) {
    if (J0jesRelativeStatECup_branch != 0) {
      J0jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch J0jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    J0jesRelativeStatECup_isLoaded = true;
  }
  return *J0jesRelativeStatECup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesRelativeStatECup() {
  if (not J1jesRelativeStatECup_isLoaded) {
    if (J1jesRelativeStatECup_branch != 0) {
      J1jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch J1jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    J1jesRelativeStatECup_isLoaded = true;
  }
  return *J1jesRelativeStatECup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesRelativeStatECup() {
  if (not J2jesRelativeStatECup_isLoaded) {
    if (J2jesRelativeStatECup_branch != 0) {
      J2jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch J2jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    J2jesRelativeStatECup_isLoaded = true;
  }
  return *J2jesRelativeStatECup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesRelativeStatECup() {
  if (not J3jesRelativeStatECup_isLoaded) {
    if (J3jesRelativeStatECup_branch != 0) {
      J3jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch J3jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    J3jesRelativeStatECup_isLoaded = true;
  }
  return *J3jesRelativeStatECup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesRelativeStatECup() {
  if (not J4jesRelativeStatECup_isLoaded) {
    if (J4jesRelativeStatECup_branch != 0) {
      J4jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch J4jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    J4jesRelativeStatECup_isLoaded = true;
  }
  return *J4jesRelativeStatECup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesRelativeStatECup() {
  if (not J5jesRelativeStatECup_isLoaded) {
    if (J5jesRelativeStatECup_branch != 0) {
      J5jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch J5jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    J5jesRelativeStatECup_isLoaded = true;
  }
  return *J5jesRelativeStatECup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesRelativeStatECup() {
  if (not J6jesRelativeStatECup_isLoaded) {
    if (J6jesRelativeStatECup_branch != 0) {
      J6jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch J6jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    J6jesRelativeStatECup_isLoaded = true;
  }
  return *J6jesRelativeStatECup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesRelativeStatECup() {
  if (not J7jesRelativeStatECup_isLoaded) {
    if (J7jesRelativeStatECup_branch != 0) {
      J7jesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch J7jesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    J7jesRelativeStatECup_isLoaded = true;
  }
  return *J7jesRelativeStatECup_;
}

const vector<int> &VVV0Tree::NQJGenjesRelativeStatECup() {
  if (not NQJGenjesRelativeStatECup_isLoaded) {
    if (NQJGenjesRelativeStatECup_branch != 0) {
      NQJGenjesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesRelativeStatECup_isLoaded = true;
  }
  return *NQJGenjesRelativeStatECup_;
}

const vector<int> &VVV0Tree::NBJGenjesRelativeStatECup() {
  if (not NBJGenjesRelativeStatECup_isLoaded) {
    if (NBJGenjesRelativeStatECup_branch != 0) {
      NBJGenjesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesRelativeStatECup_isLoaded = true;
  }
  return *NBJGenjesRelativeStatECup_;
}

const vector<int> &VVV0Tree::NLJGenjesRelativeStatECup() {
  if (not NLJGenjesRelativeStatECup_isLoaded) {
    if (NLJGenjesRelativeStatECup_branch != 0) {
      NLJGenjesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesRelativeStatECup_isLoaded = true;
  }
  return *NLJGenjesRelativeStatECup_;
}

const float &VVV0Tree::MVVXjesRelativeStatECup() {
  if (not MVVXjesRelativeStatECup_isLoaded) {
    if (MVVXjesRelativeStatECup_branch != 0) {
      MVVXjesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    MVVXjesRelativeStatECup_isLoaded = true;
  }
  return MVVXjesRelativeStatECup_;
}

const float &VVV0Tree::PtVVXjesRelativeStatECup() {
  if (not PtVVXjesRelativeStatECup_isLoaded) {
    if (PtVVXjesRelativeStatECup_branch != 0) {
      PtVVXjesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesRelativeStatECup_isLoaded = true;
  }
  return PtVVXjesRelativeStatECup_;
}

const float &VVV0Tree::HTjesRelativeStatECup() {
  if (not HTjesRelativeStatECup_isLoaded) {
    if (HTjesRelativeStatECup_branch != 0) {
      HTjesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch HTjesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    HTjesRelativeStatECup_isLoaded = true;
  }
  return HTjesRelativeStatECup_;
}

const float &VVV0Tree::HTJjesRelativeStatECup() {
  if (not HTJjesRelativeStatECup_isLoaded) {
    if (HTJjesRelativeStatECup_branch != 0) {
      HTJjesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch HTJjesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    HTJjesRelativeStatECup_isLoaded = true;
  }
  return HTJjesRelativeStatECup_;
}

const float &VVV0Tree::HTFJjesRelativeStatECup() {
  if (not HTFJjesRelativeStatECup_isLoaded) {
    if (HTFJjesRelativeStatECup_branch != 0) {
      HTFJjesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    HTFJjesRelativeStatECup_isLoaded = true;
  }
  return HTFJjesRelativeStatECup_;
}

const float &VVV0Tree::SumPtFJjesRelativeStatECup() {
  if (not SumPtFJjesRelativeStatECup_isLoaded) {
    if (SumPtFJjesRelativeStatECup_branch != 0) {
      SumPtFJjesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesRelativeStatECup_isLoaded = true;
  }
  return SumPtFJjesRelativeStatECup_;
}

const float &VVV0Tree::SumPtJjesRelativeStatECup() {
  if (not SumPtJjesRelativeStatECup_isLoaded) {
    if (SumPtJjesRelativeStatECup_branch != 0) {
      SumPtJjesRelativeStatECup_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesRelativeStatECup_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesRelativeStatECup_isLoaded = true;
  }
  return SumPtJjesRelativeStatECup_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesRelativeStatECdn() {
  if (not JsjesRelativeStatECdn_isLoaded) {
    if (JsjesRelativeStatECdn_branch != 0) {
      JsjesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch JsjesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    JsjesRelativeStatECdn_isLoaded = true;
  }
  return *JsjesRelativeStatECdn_;
}

const int &VVV0Tree::NFJjesRelativeStatECdn() {
  if (not NFJjesRelativeStatECdn_isLoaded) {
    if (NFJjesRelativeStatECdn_branch != 0) {
      NFJjesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch NFJjesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    NFJjesRelativeStatECdn_isLoaded = true;
  }
  return NFJjesRelativeStatECdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesRelativeStatECdn() {
  if (not FJ0jesRelativeStatECdn_isLoaded) {
    if (FJ0jesRelativeStatECdn_branch != 0) {
      FJ0jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    FJ0jesRelativeStatECdn_isLoaded = true;
  }
  return *FJ0jesRelativeStatECdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesRelativeStatECdn() {
  if (not FJ1jesRelativeStatECdn_isLoaded) {
    if (FJ1jesRelativeStatECdn_branch != 0) {
      FJ1jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    FJ1jesRelativeStatECdn_isLoaded = true;
  }
  return *FJ1jesRelativeStatECdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesRelativeStatECdn() {
  if (not FJ2jesRelativeStatECdn_isLoaded) {
    if (FJ2jesRelativeStatECdn_branch != 0) {
      FJ2jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    FJ2jesRelativeStatECdn_isLoaded = true;
  }
  return *FJ2jesRelativeStatECdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesRelativeStatECdn() {
  if (not FJ3jesRelativeStatECdn_isLoaded) {
    if (FJ3jesRelativeStatECdn_branch != 0) {
      FJ3jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    FJ3jesRelativeStatECdn_isLoaded = true;
  }
  return *FJ3jesRelativeStatECdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesRelativeStatECdn() {
  if (not FJ4jesRelativeStatECdn_isLoaded) {
    if (FJ4jesRelativeStatECdn_branch != 0) {
      FJ4jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    FJ4jesRelativeStatECdn_isLoaded = true;
  }
  return *FJ4jesRelativeStatECdn_;
}

const float &VVV0Tree::VMD0jesRelativeStatECdn() {
  if (not VMD0jesRelativeStatECdn_isLoaded) {
    if (VMD0jesRelativeStatECdn_branch != 0) {
      VMD0jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    VMD0jesRelativeStatECdn_isLoaded = true;
  }
  return VMD0jesRelativeStatECdn_;
}

const float &VVV0Tree::VMD1jesRelativeStatECdn() {
  if (not VMD1jesRelativeStatECdn_isLoaded) {
    if (VMD1jesRelativeStatECdn_branch != 0) {
      VMD1jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    VMD1jesRelativeStatECdn_isLoaded = true;
  }
  return VMD1jesRelativeStatECdn_;
}

const float &VVV0Tree::VMD2jesRelativeStatECdn() {
  if (not VMD2jesRelativeStatECdn_isLoaded) {
    if (VMD2jesRelativeStatECdn_branch != 0) {
      VMD2jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    VMD2jesRelativeStatECdn_isLoaded = true;
  }
  return VMD2jesRelativeStatECdn_;
}

const float &VVV0Tree::VMD3jesRelativeStatECdn() {
  if (not VMD3jesRelativeStatECdn_isLoaded) {
    if (VMD3jesRelativeStatECdn_branch != 0) {
      VMD3jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    VMD3jesRelativeStatECdn_isLoaded = true;
  }
  return VMD3jesRelativeStatECdn_;
}

const float &VVV0Tree::VMD4jesRelativeStatECdn() {
  if (not VMD4jesRelativeStatECdn_isLoaded) {
    if (VMD4jesRelativeStatECdn_branch != 0) {
      VMD4jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    VMD4jesRelativeStatECdn_isLoaded = true;
  }
  return VMD4jesRelativeStatECdn_;
}

const float &VVV0Tree::WMD0jesRelativeStatECdn() {
  if (not WMD0jesRelativeStatECdn_isLoaded) {
    if (WMD0jesRelativeStatECdn_branch != 0) {
      WMD0jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    WMD0jesRelativeStatECdn_isLoaded = true;
  }
  return WMD0jesRelativeStatECdn_;
}

const float &VVV0Tree::WMD1jesRelativeStatECdn() {
  if (not WMD1jesRelativeStatECdn_isLoaded) {
    if (WMD1jesRelativeStatECdn_branch != 0) {
      WMD1jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    WMD1jesRelativeStatECdn_isLoaded = true;
  }
  return WMD1jesRelativeStatECdn_;
}

const float &VVV0Tree::WMD2jesRelativeStatECdn() {
  if (not WMD2jesRelativeStatECdn_isLoaded) {
    if (WMD2jesRelativeStatECdn_branch != 0) {
      WMD2jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    WMD2jesRelativeStatECdn_isLoaded = true;
  }
  return WMD2jesRelativeStatECdn_;
}

const float &VVV0Tree::WMD3jesRelativeStatECdn() {
  if (not WMD3jesRelativeStatECdn_isLoaded) {
    if (WMD3jesRelativeStatECdn_branch != 0) {
      WMD3jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    WMD3jesRelativeStatECdn_isLoaded = true;
  }
  return WMD3jesRelativeStatECdn_;
}

const float &VVV0Tree::WMD4jesRelativeStatECdn() {
  if (not WMD4jesRelativeStatECdn_isLoaded) {
    if (WMD4jesRelativeStatECdn_branch != 0) {
      WMD4jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    WMD4jesRelativeStatECdn_isLoaded = true;
  }
  return WMD4jesRelativeStatECdn_;
}

const int &VVV0Tree::NQGen0jesRelativeStatECdn() {
  if (not NQGen0jesRelativeStatECdn_isLoaded) {
    if (NQGen0jesRelativeStatECdn_branch != 0) {
      NQGen0jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesRelativeStatECdn_isLoaded = true;
  }
  return NQGen0jesRelativeStatECdn_;
}

const int &VVV0Tree::NQGen1jesRelativeStatECdn() {
  if (not NQGen1jesRelativeStatECdn_isLoaded) {
    if (NQGen1jesRelativeStatECdn_branch != 0) {
      NQGen1jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesRelativeStatECdn_isLoaded = true;
  }
  return NQGen1jesRelativeStatECdn_;
}

const int &VVV0Tree::NQGen2jesRelativeStatECdn() {
  if (not NQGen2jesRelativeStatECdn_isLoaded) {
    if (NQGen2jesRelativeStatECdn_branch != 0) {
      NQGen2jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesRelativeStatECdn_isLoaded = true;
  }
  return NQGen2jesRelativeStatECdn_;
}

const int &VVV0Tree::NQGen3jesRelativeStatECdn() {
  if (not NQGen3jesRelativeStatECdn_isLoaded) {
    if (NQGen3jesRelativeStatECdn_branch != 0) {
      NQGen3jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesRelativeStatECdn_isLoaded = true;
  }
  return NQGen3jesRelativeStatECdn_;
}

const int &VVV0Tree::NQGen4jesRelativeStatECdn() {
  if (not NQGen4jesRelativeStatECdn_isLoaded) {
    if (NQGen4jesRelativeStatECdn_branch != 0) {
      NQGen4jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesRelativeStatECdn_isLoaded = true;
  }
  return NQGen4jesRelativeStatECdn_;
}

const int &VVV0Tree::NBGen0jesRelativeStatECdn() {
  if (not NBGen0jesRelativeStatECdn_isLoaded) {
    if (NBGen0jesRelativeStatECdn_branch != 0) {
      NBGen0jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesRelativeStatECdn_isLoaded = true;
  }
  return NBGen0jesRelativeStatECdn_;
}

const int &VVV0Tree::NBGen1jesRelativeStatECdn() {
  if (not NBGen1jesRelativeStatECdn_isLoaded) {
    if (NBGen1jesRelativeStatECdn_branch != 0) {
      NBGen1jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesRelativeStatECdn_isLoaded = true;
  }
  return NBGen1jesRelativeStatECdn_;
}

const int &VVV0Tree::NBGen2jesRelativeStatECdn() {
  if (not NBGen2jesRelativeStatECdn_isLoaded) {
    if (NBGen2jesRelativeStatECdn_branch != 0) {
      NBGen2jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesRelativeStatECdn_isLoaded = true;
  }
  return NBGen2jesRelativeStatECdn_;
}

const int &VVV0Tree::NBGen3jesRelativeStatECdn() {
  if (not NBGen3jesRelativeStatECdn_isLoaded) {
    if (NBGen3jesRelativeStatECdn_branch != 0) {
      NBGen3jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesRelativeStatECdn_isLoaded = true;
  }
  return NBGen3jesRelativeStatECdn_;
}

const int &VVV0Tree::NBGen4jesRelativeStatECdn() {
  if (not NBGen4jesRelativeStatECdn_isLoaded) {
    if (NBGen4jesRelativeStatECdn_branch != 0) {
      NBGen4jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesRelativeStatECdn_isLoaded = true;
  }
  return NBGen4jesRelativeStatECdn_;
}

const int &VVV0Tree::NLGen0jesRelativeStatECdn() {
  if (not NLGen0jesRelativeStatECdn_isLoaded) {
    if (NLGen0jesRelativeStatECdn_branch != 0) {
      NLGen0jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesRelativeStatECdn_isLoaded = true;
  }
  return NLGen0jesRelativeStatECdn_;
}

const int &VVV0Tree::NLGen1jesRelativeStatECdn() {
  if (not NLGen1jesRelativeStatECdn_isLoaded) {
    if (NLGen1jesRelativeStatECdn_branch != 0) {
      NLGen1jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesRelativeStatECdn_isLoaded = true;
  }
  return NLGen1jesRelativeStatECdn_;
}

const int &VVV0Tree::NLGen2jesRelativeStatECdn() {
  if (not NLGen2jesRelativeStatECdn_isLoaded) {
    if (NLGen2jesRelativeStatECdn_branch != 0) {
      NLGen2jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesRelativeStatECdn_isLoaded = true;
  }
  return NLGen2jesRelativeStatECdn_;
}

const int &VVV0Tree::NLGen3jesRelativeStatECdn() {
  if (not NLGen3jesRelativeStatECdn_isLoaded) {
    if (NLGen3jesRelativeStatECdn_branch != 0) {
      NLGen3jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesRelativeStatECdn_isLoaded = true;
  }
  return NLGen3jesRelativeStatECdn_;
}

const int &VVV0Tree::NLGen4jesRelativeStatECdn() {
  if (not NLGen4jesRelativeStatECdn_isLoaded) {
    if (NLGen4jesRelativeStatECdn_branch != 0) {
      NLGen4jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesRelativeStatECdn_isLoaded = true;
  }
  return NLGen4jesRelativeStatECdn_;
}

const int &VVV0Tree::NVQGen0jesRelativeStatECdn() {
  if (not NVQGen0jesRelativeStatECdn_isLoaded) {
    if (NVQGen0jesRelativeStatECdn_branch != 0) {
      NVQGen0jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesRelativeStatECdn_isLoaded = true;
  }
  return NVQGen0jesRelativeStatECdn_;
}

const int &VVV0Tree::NVQGen1jesRelativeStatECdn() {
  if (not NVQGen1jesRelativeStatECdn_isLoaded) {
    if (NVQGen1jesRelativeStatECdn_branch != 0) {
      NVQGen1jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesRelativeStatECdn_isLoaded = true;
  }
  return NVQGen1jesRelativeStatECdn_;
}

const int &VVV0Tree::NVQGen2jesRelativeStatECdn() {
  if (not NVQGen2jesRelativeStatECdn_isLoaded) {
    if (NVQGen2jesRelativeStatECdn_branch != 0) {
      NVQGen2jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesRelativeStatECdn_isLoaded = true;
  }
  return NVQGen2jesRelativeStatECdn_;
}

const int &VVV0Tree::NVQGen3jesRelativeStatECdn() {
  if (not NVQGen3jesRelativeStatECdn_isLoaded) {
    if (NVQGen3jesRelativeStatECdn_branch != 0) {
      NVQGen3jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesRelativeStatECdn_isLoaded = true;
  }
  return NVQGen3jesRelativeStatECdn_;
}

const int &VVV0Tree::NVQGen4jesRelativeStatECdn() {
  if (not NVQGen4jesRelativeStatECdn_isLoaded) {
    if (NVQGen4jesRelativeStatECdn_branch != 0) {
      NVQGen4jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesRelativeStatECdn_isLoaded = true;
  }
  return NVQGen4jesRelativeStatECdn_;
}

const int &VVV0Tree::NiFJjesRelativeStatECdn() {
  if (not NiFJjesRelativeStatECdn_isLoaded) {
    if (NiFJjesRelativeStatECdn_branch != 0) {
      NiFJjesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    NiFJjesRelativeStatECdn_isLoaded = true;
  }
  return NiFJjesRelativeStatECdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesRelativeStatECdn() {
  if (not iFJ0jesRelativeStatECdn_isLoaded) {
    if (iFJ0jesRelativeStatECdn_branch != 0) {
      iFJ0jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesRelativeStatECdn_isLoaded = true;
  }
  return *iFJ0jesRelativeStatECdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesRelativeStatECdn() {
  if (not iFJ1jesRelativeStatECdn_isLoaded) {
    if (iFJ1jesRelativeStatECdn_branch != 0) {
      iFJ1jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesRelativeStatECdn_isLoaded = true;
  }
  return *iFJ1jesRelativeStatECdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesRelativeStatECdn() {
  if (not iFJ2jesRelativeStatECdn_isLoaded) {
    if (iFJ2jesRelativeStatECdn_branch != 0) {
      iFJ2jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesRelativeStatECdn_isLoaded = true;
  }
  return *iFJ2jesRelativeStatECdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesRelativeStatECdn() {
  if (not iFJ3jesRelativeStatECdn_isLoaded) {
    if (iFJ3jesRelativeStatECdn_branch != 0) {
      iFJ3jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesRelativeStatECdn_isLoaded = true;
  }
  return *iFJ3jesRelativeStatECdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesRelativeStatECdn() {
  if (not iFJ4jesRelativeStatECdn_isLoaded) {
    if (iFJ4jesRelativeStatECdn_branch != 0) {
      iFJ4jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesRelativeStatECdn_isLoaded = true;
  }
  return *iFJ4jesRelativeStatECdn_;
}

const float &VVV0Tree::iVMD0jesRelativeStatECdn() {
  if (not iVMD0jesRelativeStatECdn_isLoaded) {
    if (iVMD0jesRelativeStatECdn_branch != 0) {
      iVMD0jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesRelativeStatECdn_isLoaded = true;
  }
  return iVMD0jesRelativeStatECdn_;
}

const float &VVV0Tree::iVMD1jesRelativeStatECdn() {
  if (not iVMD1jesRelativeStatECdn_isLoaded) {
    if (iVMD1jesRelativeStatECdn_branch != 0) {
      iVMD1jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesRelativeStatECdn_isLoaded = true;
  }
  return iVMD1jesRelativeStatECdn_;
}

const float &VVV0Tree::iVMD2jesRelativeStatECdn() {
  if (not iVMD2jesRelativeStatECdn_isLoaded) {
    if (iVMD2jesRelativeStatECdn_branch != 0) {
      iVMD2jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesRelativeStatECdn_isLoaded = true;
  }
  return iVMD2jesRelativeStatECdn_;
}

const float &VVV0Tree::iVMD3jesRelativeStatECdn() {
  if (not iVMD3jesRelativeStatECdn_isLoaded) {
    if (iVMD3jesRelativeStatECdn_branch != 0) {
      iVMD3jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesRelativeStatECdn_isLoaded = true;
  }
  return iVMD3jesRelativeStatECdn_;
}

const float &VVV0Tree::iVMD4jesRelativeStatECdn() {
  if (not iVMD4jesRelativeStatECdn_isLoaded) {
    if (iVMD4jesRelativeStatECdn_branch != 0) {
      iVMD4jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesRelativeStatECdn_isLoaded = true;
  }
  return iVMD4jesRelativeStatECdn_;
}

const float &VVV0Tree::iWMD0jesRelativeStatECdn() {
  if (not iWMD0jesRelativeStatECdn_isLoaded) {
    if (iWMD0jesRelativeStatECdn_branch != 0) {
      iWMD0jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesRelativeStatECdn_isLoaded = true;
  }
  return iWMD0jesRelativeStatECdn_;
}

const float &VVV0Tree::iWMD1jesRelativeStatECdn() {
  if (not iWMD1jesRelativeStatECdn_isLoaded) {
    if (iWMD1jesRelativeStatECdn_branch != 0) {
      iWMD1jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesRelativeStatECdn_isLoaded = true;
  }
  return iWMD1jesRelativeStatECdn_;
}

const float &VVV0Tree::iWMD2jesRelativeStatECdn() {
  if (not iWMD2jesRelativeStatECdn_isLoaded) {
    if (iWMD2jesRelativeStatECdn_branch != 0) {
      iWMD2jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesRelativeStatECdn_isLoaded = true;
  }
  return iWMD2jesRelativeStatECdn_;
}

const float &VVV0Tree::iWMD3jesRelativeStatECdn() {
  if (not iWMD3jesRelativeStatECdn_isLoaded) {
    if (iWMD3jesRelativeStatECdn_branch != 0) {
      iWMD3jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesRelativeStatECdn_isLoaded = true;
  }
  return iWMD3jesRelativeStatECdn_;
}

const float &VVV0Tree::iWMD4jesRelativeStatECdn() {
  if (not iWMD4jesRelativeStatECdn_isLoaded) {
    if (iWMD4jesRelativeStatECdn_branch != 0) {
      iWMD4jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesRelativeStatECdn_isLoaded = true;
  }
  return iWMD4jesRelativeStatECdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesRelativeStatECdn() {
  if (not METjesRelativeStatECdn_isLoaded) {
    if (METjesRelativeStatECdn_branch != 0) {
      METjesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch METjesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    METjesRelativeStatECdn_isLoaded = true;
  }
  return *METjesRelativeStatECdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesRelativeStatECdn() {
  if (not NujesRelativeStatECdn_isLoaded) {
    if (NujesRelativeStatECdn_branch != 0) {
      NujesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch NujesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    NujesRelativeStatECdn_isLoaded = true;
  }
  return *NujesRelativeStatECdn_;
}

const int &VVV0Tree::NJjesRelativeStatECdn() {
  if (not NJjesRelativeStatECdn_isLoaded) {
    if (NJjesRelativeStatECdn_branch != 0) {
      NJjesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch NJjesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    NJjesRelativeStatECdn_isLoaded = true;
  }
  return NJjesRelativeStatECdn_;
}

const int &VVV0Tree::NbLoosejesRelativeStatECdn() {
  if (not NbLoosejesRelativeStatECdn_isLoaded) {
    if (NbLoosejesRelativeStatECdn_branch != 0) {
      NbLoosejesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesRelativeStatECdn_isLoaded = true;
  }
  return NbLoosejesRelativeStatECdn_;
}

const int &VVV0Tree::NbMediumjesRelativeStatECdn() {
  if (not NbMediumjesRelativeStatECdn_isLoaded) {
    if (NbMediumjesRelativeStatECdn_branch != 0) {
      NbMediumjesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesRelativeStatECdn_isLoaded = true;
  }
  return NbMediumjesRelativeStatECdn_;
}

const int &VVV0Tree::NbTightjesRelativeStatECdn() {
  if (not NbTightjesRelativeStatECdn_isLoaded) {
    if (NbTightjesRelativeStatECdn_branch != 0) {
      NbTightjesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    NbTightjesRelativeStatECdn_isLoaded = true;
  }
  return NbTightjesRelativeStatECdn_;
}

const int &VVV0Tree::NoORNbLoosejesRelativeStatECdn() {
  if (not NoORNbLoosejesRelativeStatECdn_isLoaded) {
    if (NoORNbLoosejesRelativeStatECdn_branch != 0) {
      NoORNbLoosejesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesRelativeStatECdn_isLoaded = true;
  }
  return NoORNbLoosejesRelativeStatECdn_;
}

const int &VVV0Tree::NoORNbMediumjesRelativeStatECdn() {
  if (not NoORNbMediumjesRelativeStatECdn_isLoaded) {
    if (NoORNbMediumjesRelativeStatECdn_branch != 0) {
      NoORNbMediumjesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesRelativeStatECdn_isLoaded = true;
  }
  return NoORNbMediumjesRelativeStatECdn_;
}

const int &VVV0Tree::NoORNbTightjesRelativeStatECdn() {
  if (not NoORNbTightjesRelativeStatECdn_isLoaded) {
    if (NoORNbTightjesRelativeStatECdn_branch != 0) {
      NoORNbTightjesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesRelativeStatECdn_isLoaded = true;
  }
  return NoORNbTightjesRelativeStatECdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesRelativeStatECdn() {
  if (not J0jesRelativeStatECdn_isLoaded) {
    if (J0jesRelativeStatECdn_branch != 0) {
      J0jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch J0jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    J0jesRelativeStatECdn_isLoaded = true;
  }
  return *J0jesRelativeStatECdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesRelativeStatECdn() {
  if (not J1jesRelativeStatECdn_isLoaded) {
    if (J1jesRelativeStatECdn_branch != 0) {
      J1jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch J1jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    J1jesRelativeStatECdn_isLoaded = true;
  }
  return *J1jesRelativeStatECdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesRelativeStatECdn() {
  if (not J2jesRelativeStatECdn_isLoaded) {
    if (J2jesRelativeStatECdn_branch != 0) {
      J2jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch J2jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    J2jesRelativeStatECdn_isLoaded = true;
  }
  return *J2jesRelativeStatECdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesRelativeStatECdn() {
  if (not J3jesRelativeStatECdn_isLoaded) {
    if (J3jesRelativeStatECdn_branch != 0) {
      J3jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch J3jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    J3jesRelativeStatECdn_isLoaded = true;
  }
  return *J3jesRelativeStatECdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesRelativeStatECdn() {
  if (not J4jesRelativeStatECdn_isLoaded) {
    if (J4jesRelativeStatECdn_branch != 0) {
      J4jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch J4jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    J4jesRelativeStatECdn_isLoaded = true;
  }
  return *J4jesRelativeStatECdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesRelativeStatECdn() {
  if (not J5jesRelativeStatECdn_isLoaded) {
    if (J5jesRelativeStatECdn_branch != 0) {
      J5jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch J5jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    J5jesRelativeStatECdn_isLoaded = true;
  }
  return *J5jesRelativeStatECdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesRelativeStatECdn() {
  if (not J6jesRelativeStatECdn_isLoaded) {
    if (J6jesRelativeStatECdn_branch != 0) {
      J6jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch J6jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    J6jesRelativeStatECdn_isLoaded = true;
  }
  return *J6jesRelativeStatECdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesRelativeStatECdn() {
  if (not J7jesRelativeStatECdn_isLoaded) {
    if (J7jesRelativeStatECdn_branch != 0) {
      J7jesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch J7jesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    J7jesRelativeStatECdn_isLoaded = true;
  }
  return *J7jesRelativeStatECdn_;
}

const vector<int> &VVV0Tree::NQJGenjesRelativeStatECdn() {
  if (not NQJGenjesRelativeStatECdn_isLoaded) {
    if (NQJGenjesRelativeStatECdn_branch != 0) {
      NQJGenjesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesRelativeStatECdn_isLoaded = true;
  }
  return *NQJGenjesRelativeStatECdn_;
}

const vector<int> &VVV0Tree::NBJGenjesRelativeStatECdn() {
  if (not NBJGenjesRelativeStatECdn_isLoaded) {
    if (NBJGenjesRelativeStatECdn_branch != 0) {
      NBJGenjesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesRelativeStatECdn_isLoaded = true;
  }
  return *NBJGenjesRelativeStatECdn_;
}

const vector<int> &VVV0Tree::NLJGenjesRelativeStatECdn() {
  if (not NLJGenjesRelativeStatECdn_isLoaded) {
    if (NLJGenjesRelativeStatECdn_branch != 0) {
      NLJGenjesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesRelativeStatECdn_isLoaded = true;
  }
  return *NLJGenjesRelativeStatECdn_;
}

const float &VVV0Tree::MVVXjesRelativeStatECdn() {
  if (not MVVXjesRelativeStatECdn_isLoaded) {
    if (MVVXjesRelativeStatECdn_branch != 0) {
      MVVXjesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    MVVXjesRelativeStatECdn_isLoaded = true;
  }
  return MVVXjesRelativeStatECdn_;
}

const float &VVV0Tree::PtVVXjesRelativeStatECdn() {
  if (not PtVVXjesRelativeStatECdn_isLoaded) {
    if (PtVVXjesRelativeStatECdn_branch != 0) {
      PtVVXjesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesRelativeStatECdn_isLoaded = true;
  }
  return PtVVXjesRelativeStatECdn_;
}

const float &VVV0Tree::HTjesRelativeStatECdn() {
  if (not HTjesRelativeStatECdn_isLoaded) {
    if (HTjesRelativeStatECdn_branch != 0) {
      HTjesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch HTjesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    HTjesRelativeStatECdn_isLoaded = true;
  }
  return HTjesRelativeStatECdn_;
}

const float &VVV0Tree::HTJjesRelativeStatECdn() {
  if (not HTJjesRelativeStatECdn_isLoaded) {
    if (HTJjesRelativeStatECdn_branch != 0) {
      HTJjesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch HTJjesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    HTJjesRelativeStatECdn_isLoaded = true;
  }
  return HTJjesRelativeStatECdn_;
}

const float &VVV0Tree::HTFJjesRelativeStatECdn() {
  if (not HTFJjesRelativeStatECdn_isLoaded) {
    if (HTFJjesRelativeStatECdn_branch != 0) {
      HTFJjesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    HTFJjesRelativeStatECdn_isLoaded = true;
  }
  return HTFJjesRelativeStatECdn_;
}

const float &VVV0Tree::SumPtFJjesRelativeStatECdn() {
  if (not SumPtFJjesRelativeStatECdn_isLoaded) {
    if (SumPtFJjesRelativeStatECdn_branch != 0) {
      SumPtFJjesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesRelativeStatECdn_isLoaded = true;
  }
  return SumPtFJjesRelativeStatECdn_;
}

const float &VVV0Tree::SumPtJjesRelativeStatECdn() {
  if (not SumPtJjesRelativeStatECdn_isLoaded) {
    if (SumPtJjesRelativeStatECdn_branch != 0) {
      SumPtJjesRelativeStatECdn_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesRelativeStatECdn_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesRelativeStatECdn_isLoaded = true;
  }
  return SumPtJjesRelativeStatECdn_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesRelativeStatHFup() {
  if (not JsjesRelativeStatHFup_isLoaded) {
    if (JsjesRelativeStatHFup_branch != 0) {
      JsjesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch JsjesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    JsjesRelativeStatHFup_isLoaded = true;
  }
  return *JsjesRelativeStatHFup_;
}

const int &VVV0Tree::NFJjesRelativeStatHFup() {
  if (not NFJjesRelativeStatHFup_isLoaded) {
    if (NFJjesRelativeStatHFup_branch != 0) {
      NFJjesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch NFJjesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    NFJjesRelativeStatHFup_isLoaded = true;
  }
  return NFJjesRelativeStatHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesRelativeStatHFup() {
  if (not FJ0jesRelativeStatHFup_isLoaded) {
    if (FJ0jesRelativeStatHFup_branch != 0) {
      FJ0jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    FJ0jesRelativeStatHFup_isLoaded = true;
  }
  return *FJ0jesRelativeStatHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesRelativeStatHFup() {
  if (not FJ1jesRelativeStatHFup_isLoaded) {
    if (FJ1jesRelativeStatHFup_branch != 0) {
      FJ1jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    FJ1jesRelativeStatHFup_isLoaded = true;
  }
  return *FJ1jesRelativeStatHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesRelativeStatHFup() {
  if (not FJ2jesRelativeStatHFup_isLoaded) {
    if (FJ2jesRelativeStatHFup_branch != 0) {
      FJ2jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    FJ2jesRelativeStatHFup_isLoaded = true;
  }
  return *FJ2jesRelativeStatHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesRelativeStatHFup() {
  if (not FJ3jesRelativeStatHFup_isLoaded) {
    if (FJ3jesRelativeStatHFup_branch != 0) {
      FJ3jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    FJ3jesRelativeStatHFup_isLoaded = true;
  }
  return *FJ3jesRelativeStatHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesRelativeStatHFup() {
  if (not FJ4jesRelativeStatHFup_isLoaded) {
    if (FJ4jesRelativeStatHFup_branch != 0) {
      FJ4jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    FJ4jesRelativeStatHFup_isLoaded = true;
  }
  return *FJ4jesRelativeStatHFup_;
}

const float &VVV0Tree::VMD0jesRelativeStatHFup() {
  if (not VMD0jesRelativeStatHFup_isLoaded) {
    if (VMD0jesRelativeStatHFup_branch != 0) {
      VMD0jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    VMD0jesRelativeStatHFup_isLoaded = true;
  }
  return VMD0jesRelativeStatHFup_;
}

const float &VVV0Tree::VMD1jesRelativeStatHFup() {
  if (not VMD1jesRelativeStatHFup_isLoaded) {
    if (VMD1jesRelativeStatHFup_branch != 0) {
      VMD1jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    VMD1jesRelativeStatHFup_isLoaded = true;
  }
  return VMD1jesRelativeStatHFup_;
}

const float &VVV0Tree::VMD2jesRelativeStatHFup() {
  if (not VMD2jesRelativeStatHFup_isLoaded) {
    if (VMD2jesRelativeStatHFup_branch != 0) {
      VMD2jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    VMD2jesRelativeStatHFup_isLoaded = true;
  }
  return VMD2jesRelativeStatHFup_;
}

const float &VVV0Tree::VMD3jesRelativeStatHFup() {
  if (not VMD3jesRelativeStatHFup_isLoaded) {
    if (VMD3jesRelativeStatHFup_branch != 0) {
      VMD3jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    VMD3jesRelativeStatHFup_isLoaded = true;
  }
  return VMD3jesRelativeStatHFup_;
}

const float &VVV0Tree::VMD4jesRelativeStatHFup() {
  if (not VMD4jesRelativeStatHFup_isLoaded) {
    if (VMD4jesRelativeStatHFup_branch != 0) {
      VMD4jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    VMD4jesRelativeStatHFup_isLoaded = true;
  }
  return VMD4jesRelativeStatHFup_;
}

const float &VVV0Tree::WMD0jesRelativeStatHFup() {
  if (not WMD0jesRelativeStatHFup_isLoaded) {
    if (WMD0jesRelativeStatHFup_branch != 0) {
      WMD0jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    WMD0jesRelativeStatHFup_isLoaded = true;
  }
  return WMD0jesRelativeStatHFup_;
}

const float &VVV0Tree::WMD1jesRelativeStatHFup() {
  if (not WMD1jesRelativeStatHFup_isLoaded) {
    if (WMD1jesRelativeStatHFup_branch != 0) {
      WMD1jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    WMD1jesRelativeStatHFup_isLoaded = true;
  }
  return WMD1jesRelativeStatHFup_;
}

const float &VVV0Tree::WMD2jesRelativeStatHFup() {
  if (not WMD2jesRelativeStatHFup_isLoaded) {
    if (WMD2jesRelativeStatHFup_branch != 0) {
      WMD2jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    WMD2jesRelativeStatHFup_isLoaded = true;
  }
  return WMD2jesRelativeStatHFup_;
}

const float &VVV0Tree::WMD3jesRelativeStatHFup() {
  if (not WMD3jesRelativeStatHFup_isLoaded) {
    if (WMD3jesRelativeStatHFup_branch != 0) {
      WMD3jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    WMD3jesRelativeStatHFup_isLoaded = true;
  }
  return WMD3jesRelativeStatHFup_;
}

const float &VVV0Tree::WMD4jesRelativeStatHFup() {
  if (not WMD4jesRelativeStatHFup_isLoaded) {
    if (WMD4jesRelativeStatHFup_branch != 0) {
      WMD4jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    WMD4jesRelativeStatHFup_isLoaded = true;
  }
  return WMD4jesRelativeStatHFup_;
}

const int &VVV0Tree::NQGen0jesRelativeStatHFup() {
  if (not NQGen0jesRelativeStatHFup_isLoaded) {
    if (NQGen0jesRelativeStatHFup_branch != 0) {
      NQGen0jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesRelativeStatHFup_isLoaded = true;
  }
  return NQGen0jesRelativeStatHFup_;
}

const int &VVV0Tree::NQGen1jesRelativeStatHFup() {
  if (not NQGen1jesRelativeStatHFup_isLoaded) {
    if (NQGen1jesRelativeStatHFup_branch != 0) {
      NQGen1jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesRelativeStatHFup_isLoaded = true;
  }
  return NQGen1jesRelativeStatHFup_;
}

const int &VVV0Tree::NQGen2jesRelativeStatHFup() {
  if (not NQGen2jesRelativeStatHFup_isLoaded) {
    if (NQGen2jesRelativeStatHFup_branch != 0) {
      NQGen2jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesRelativeStatHFup_isLoaded = true;
  }
  return NQGen2jesRelativeStatHFup_;
}

const int &VVV0Tree::NQGen3jesRelativeStatHFup() {
  if (not NQGen3jesRelativeStatHFup_isLoaded) {
    if (NQGen3jesRelativeStatHFup_branch != 0) {
      NQGen3jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesRelativeStatHFup_isLoaded = true;
  }
  return NQGen3jesRelativeStatHFup_;
}

const int &VVV0Tree::NQGen4jesRelativeStatHFup() {
  if (not NQGen4jesRelativeStatHFup_isLoaded) {
    if (NQGen4jesRelativeStatHFup_branch != 0) {
      NQGen4jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesRelativeStatHFup_isLoaded = true;
  }
  return NQGen4jesRelativeStatHFup_;
}

const int &VVV0Tree::NBGen0jesRelativeStatHFup() {
  if (not NBGen0jesRelativeStatHFup_isLoaded) {
    if (NBGen0jesRelativeStatHFup_branch != 0) {
      NBGen0jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesRelativeStatHFup_isLoaded = true;
  }
  return NBGen0jesRelativeStatHFup_;
}

const int &VVV0Tree::NBGen1jesRelativeStatHFup() {
  if (not NBGen1jesRelativeStatHFup_isLoaded) {
    if (NBGen1jesRelativeStatHFup_branch != 0) {
      NBGen1jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesRelativeStatHFup_isLoaded = true;
  }
  return NBGen1jesRelativeStatHFup_;
}

const int &VVV0Tree::NBGen2jesRelativeStatHFup() {
  if (not NBGen2jesRelativeStatHFup_isLoaded) {
    if (NBGen2jesRelativeStatHFup_branch != 0) {
      NBGen2jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesRelativeStatHFup_isLoaded = true;
  }
  return NBGen2jesRelativeStatHFup_;
}

const int &VVV0Tree::NBGen3jesRelativeStatHFup() {
  if (not NBGen3jesRelativeStatHFup_isLoaded) {
    if (NBGen3jesRelativeStatHFup_branch != 0) {
      NBGen3jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesRelativeStatHFup_isLoaded = true;
  }
  return NBGen3jesRelativeStatHFup_;
}

const int &VVV0Tree::NBGen4jesRelativeStatHFup() {
  if (not NBGen4jesRelativeStatHFup_isLoaded) {
    if (NBGen4jesRelativeStatHFup_branch != 0) {
      NBGen4jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesRelativeStatHFup_isLoaded = true;
  }
  return NBGen4jesRelativeStatHFup_;
}

const int &VVV0Tree::NLGen0jesRelativeStatHFup() {
  if (not NLGen0jesRelativeStatHFup_isLoaded) {
    if (NLGen0jesRelativeStatHFup_branch != 0) {
      NLGen0jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesRelativeStatHFup_isLoaded = true;
  }
  return NLGen0jesRelativeStatHFup_;
}

const int &VVV0Tree::NLGen1jesRelativeStatHFup() {
  if (not NLGen1jesRelativeStatHFup_isLoaded) {
    if (NLGen1jesRelativeStatHFup_branch != 0) {
      NLGen1jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesRelativeStatHFup_isLoaded = true;
  }
  return NLGen1jesRelativeStatHFup_;
}

const int &VVV0Tree::NLGen2jesRelativeStatHFup() {
  if (not NLGen2jesRelativeStatHFup_isLoaded) {
    if (NLGen2jesRelativeStatHFup_branch != 0) {
      NLGen2jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesRelativeStatHFup_isLoaded = true;
  }
  return NLGen2jesRelativeStatHFup_;
}

const int &VVV0Tree::NLGen3jesRelativeStatHFup() {
  if (not NLGen3jesRelativeStatHFup_isLoaded) {
    if (NLGen3jesRelativeStatHFup_branch != 0) {
      NLGen3jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesRelativeStatHFup_isLoaded = true;
  }
  return NLGen3jesRelativeStatHFup_;
}

const int &VVV0Tree::NLGen4jesRelativeStatHFup() {
  if (not NLGen4jesRelativeStatHFup_isLoaded) {
    if (NLGen4jesRelativeStatHFup_branch != 0) {
      NLGen4jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesRelativeStatHFup_isLoaded = true;
  }
  return NLGen4jesRelativeStatHFup_;
}

const int &VVV0Tree::NVQGen0jesRelativeStatHFup() {
  if (not NVQGen0jesRelativeStatHFup_isLoaded) {
    if (NVQGen0jesRelativeStatHFup_branch != 0) {
      NVQGen0jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesRelativeStatHFup_isLoaded = true;
  }
  return NVQGen0jesRelativeStatHFup_;
}

const int &VVV0Tree::NVQGen1jesRelativeStatHFup() {
  if (not NVQGen1jesRelativeStatHFup_isLoaded) {
    if (NVQGen1jesRelativeStatHFup_branch != 0) {
      NVQGen1jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesRelativeStatHFup_isLoaded = true;
  }
  return NVQGen1jesRelativeStatHFup_;
}

const int &VVV0Tree::NVQGen2jesRelativeStatHFup() {
  if (not NVQGen2jesRelativeStatHFup_isLoaded) {
    if (NVQGen2jesRelativeStatHFup_branch != 0) {
      NVQGen2jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesRelativeStatHFup_isLoaded = true;
  }
  return NVQGen2jesRelativeStatHFup_;
}

const int &VVV0Tree::NVQGen3jesRelativeStatHFup() {
  if (not NVQGen3jesRelativeStatHFup_isLoaded) {
    if (NVQGen3jesRelativeStatHFup_branch != 0) {
      NVQGen3jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesRelativeStatHFup_isLoaded = true;
  }
  return NVQGen3jesRelativeStatHFup_;
}

const int &VVV0Tree::NVQGen4jesRelativeStatHFup() {
  if (not NVQGen4jesRelativeStatHFup_isLoaded) {
    if (NVQGen4jesRelativeStatHFup_branch != 0) {
      NVQGen4jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesRelativeStatHFup_isLoaded = true;
  }
  return NVQGen4jesRelativeStatHFup_;
}

const int &VVV0Tree::NiFJjesRelativeStatHFup() {
  if (not NiFJjesRelativeStatHFup_isLoaded) {
    if (NiFJjesRelativeStatHFup_branch != 0) {
      NiFJjesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    NiFJjesRelativeStatHFup_isLoaded = true;
  }
  return NiFJjesRelativeStatHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesRelativeStatHFup() {
  if (not iFJ0jesRelativeStatHFup_isLoaded) {
    if (iFJ0jesRelativeStatHFup_branch != 0) {
      iFJ0jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesRelativeStatHFup_isLoaded = true;
  }
  return *iFJ0jesRelativeStatHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesRelativeStatHFup() {
  if (not iFJ1jesRelativeStatHFup_isLoaded) {
    if (iFJ1jesRelativeStatHFup_branch != 0) {
      iFJ1jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesRelativeStatHFup_isLoaded = true;
  }
  return *iFJ1jesRelativeStatHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesRelativeStatHFup() {
  if (not iFJ2jesRelativeStatHFup_isLoaded) {
    if (iFJ2jesRelativeStatHFup_branch != 0) {
      iFJ2jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesRelativeStatHFup_isLoaded = true;
  }
  return *iFJ2jesRelativeStatHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesRelativeStatHFup() {
  if (not iFJ3jesRelativeStatHFup_isLoaded) {
    if (iFJ3jesRelativeStatHFup_branch != 0) {
      iFJ3jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesRelativeStatHFup_isLoaded = true;
  }
  return *iFJ3jesRelativeStatHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesRelativeStatHFup() {
  if (not iFJ4jesRelativeStatHFup_isLoaded) {
    if (iFJ4jesRelativeStatHFup_branch != 0) {
      iFJ4jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesRelativeStatHFup_isLoaded = true;
  }
  return *iFJ4jesRelativeStatHFup_;
}

const float &VVV0Tree::iVMD0jesRelativeStatHFup() {
  if (not iVMD0jesRelativeStatHFup_isLoaded) {
    if (iVMD0jesRelativeStatHFup_branch != 0) {
      iVMD0jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesRelativeStatHFup_isLoaded = true;
  }
  return iVMD0jesRelativeStatHFup_;
}

const float &VVV0Tree::iVMD1jesRelativeStatHFup() {
  if (not iVMD1jesRelativeStatHFup_isLoaded) {
    if (iVMD1jesRelativeStatHFup_branch != 0) {
      iVMD1jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesRelativeStatHFup_isLoaded = true;
  }
  return iVMD1jesRelativeStatHFup_;
}

const float &VVV0Tree::iVMD2jesRelativeStatHFup() {
  if (not iVMD2jesRelativeStatHFup_isLoaded) {
    if (iVMD2jesRelativeStatHFup_branch != 0) {
      iVMD2jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesRelativeStatHFup_isLoaded = true;
  }
  return iVMD2jesRelativeStatHFup_;
}

const float &VVV0Tree::iVMD3jesRelativeStatHFup() {
  if (not iVMD3jesRelativeStatHFup_isLoaded) {
    if (iVMD3jesRelativeStatHFup_branch != 0) {
      iVMD3jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesRelativeStatHFup_isLoaded = true;
  }
  return iVMD3jesRelativeStatHFup_;
}

const float &VVV0Tree::iVMD4jesRelativeStatHFup() {
  if (not iVMD4jesRelativeStatHFup_isLoaded) {
    if (iVMD4jesRelativeStatHFup_branch != 0) {
      iVMD4jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesRelativeStatHFup_isLoaded = true;
  }
  return iVMD4jesRelativeStatHFup_;
}

const float &VVV0Tree::iWMD0jesRelativeStatHFup() {
  if (not iWMD0jesRelativeStatHFup_isLoaded) {
    if (iWMD0jesRelativeStatHFup_branch != 0) {
      iWMD0jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesRelativeStatHFup_isLoaded = true;
  }
  return iWMD0jesRelativeStatHFup_;
}

const float &VVV0Tree::iWMD1jesRelativeStatHFup() {
  if (not iWMD1jesRelativeStatHFup_isLoaded) {
    if (iWMD1jesRelativeStatHFup_branch != 0) {
      iWMD1jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesRelativeStatHFup_isLoaded = true;
  }
  return iWMD1jesRelativeStatHFup_;
}

const float &VVV0Tree::iWMD2jesRelativeStatHFup() {
  if (not iWMD2jesRelativeStatHFup_isLoaded) {
    if (iWMD2jesRelativeStatHFup_branch != 0) {
      iWMD2jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesRelativeStatHFup_isLoaded = true;
  }
  return iWMD2jesRelativeStatHFup_;
}

const float &VVV0Tree::iWMD3jesRelativeStatHFup() {
  if (not iWMD3jesRelativeStatHFup_isLoaded) {
    if (iWMD3jesRelativeStatHFup_branch != 0) {
      iWMD3jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesRelativeStatHFup_isLoaded = true;
  }
  return iWMD3jesRelativeStatHFup_;
}

const float &VVV0Tree::iWMD4jesRelativeStatHFup() {
  if (not iWMD4jesRelativeStatHFup_isLoaded) {
    if (iWMD4jesRelativeStatHFup_branch != 0) {
      iWMD4jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesRelativeStatHFup_isLoaded = true;
  }
  return iWMD4jesRelativeStatHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesRelativeStatHFup() {
  if (not METjesRelativeStatHFup_isLoaded) {
    if (METjesRelativeStatHFup_branch != 0) {
      METjesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch METjesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    METjesRelativeStatHFup_isLoaded = true;
  }
  return *METjesRelativeStatHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesRelativeStatHFup() {
  if (not NujesRelativeStatHFup_isLoaded) {
    if (NujesRelativeStatHFup_branch != 0) {
      NujesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch NujesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    NujesRelativeStatHFup_isLoaded = true;
  }
  return *NujesRelativeStatHFup_;
}

const int &VVV0Tree::NJjesRelativeStatHFup() {
  if (not NJjesRelativeStatHFup_isLoaded) {
    if (NJjesRelativeStatHFup_branch != 0) {
      NJjesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch NJjesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    NJjesRelativeStatHFup_isLoaded = true;
  }
  return NJjesRelativeStatHFup_;
}

const int &VVV0Tree::NbLoosejesRelativeStatHFup() {
  if (not NbLoosejesRelativeStatHFup_isLoaded) {
    if (NbLoosejesRelativeStatHFup_branch != 0) {
      NbLoosejesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesRelativeStatHFup_isLoaded = true;
  }
  return NbLoosejesRelativeStatHFup_;
}

const int &VVV0Tree::NbMediumjesRelativeStatHFup() {
  if (not NbMediumjesRelativeStatHFup_isLoaded) {
    if (NbMediumjesRelativeStatHFup_branch != 0) {
      NbMediumjesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesRelativeStatHFup_isLoaded = true;
  }
  return NbMediumjesRelativeStatHFup_;
}

const int &VVV0Tree::NbTightjesRelativeStatHFup() {
  if (not NbTightjesRelativeStatHFup_isLoaded) {
    if (NbTightjesRelativeStatHFup_branch != 0) {
      NbTightjesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    NbTightjesRelativeStatHFup_isLoaded = true;
  }
  return NbTightjesRelativeStatHFup_;
}

const int &VVV0Tree::NoORNbLoosejesRelativeStatHFup() {
  if (not NoORNbLoosejesRelativeStatHFup_isLoaded) {
    if (NoORNbLoosejesRelativeStatHFup_branch != 0) {
      NoORNbLoosejesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesRelativeStatHFup_isLoaded = true;
  }
  return NoORNbLoosejesRelativeStatHFup_;
}

const int &VVV0Tree::NoORNbMediumjesRelativeStatHFup() {
  if (not NoORNbMediumjesRelativeStatHFup_isLoaded) {
    if (NoORNbMediumjesRelativeStatHFup_branch != 0) {
      NoORNbMediumjesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesRelativeStatHFup_isLoaded = true;
  }
  return NoORNbMediumjesRelativeStatHFup_;
}

const int &VVV0Tree::NoORNbTightjesRelativeStatHFup() {
  if (not NoORNbTightjesRelativeStatHFup_isLoaded) {
    if (NoORNbTightjesRelativeStatHFup_branch != 0) {
      NoORNbTightjesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesRelativeStatHFup_isLoaded = true;
  }
  return NoORNbTightjesRelativeStatHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesRelativeStatHFup() {
  if (not J0jesRelativeStatHFup_isLoaded) {
    if (J0jesRelativeStatHFup_branch != 0) {
      J0jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch J0jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    J0jesRelativeStatHFup_isLoaded = true;
  }
  return *J0jesRelativeStatHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesRelativeStatHFup() {
  if (not J1jesRelativeStatHFup_isLoaded) {
    if (J1jesRelativeStatHFup_branch != 0) {
      J1jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch J1jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    J1jesRelativeStatHFup_isLoaded = true;
  }
  return *J1jesRelativeStatHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesRelativeStatHFup() {
  if (not J2jesRelativeStatHFup_isLoaded) {
    if (J2jesRelativeStatHFup_branch != 0) {
      J2jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch J2jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    J2jesRelativeStatHFup_isLoaded = true;
  }
  return *J2jesRelativeStatHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesRelativeStatHFup() {
  if (not J3jesRelativeStatHFup_isLoaded) {
    if (J3jesRelativeStatHFup_branch != 0) {
      J3jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch J3jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    J3jesRelativeStatHFup_isLoaded = true;
  }
  return *J3jesRelativeStatHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesRelativeStatHFup() {
  if (not J4jesRelativeStatHFup_isLoaded) {
    if (J4jesRelativeStatHFup_branch != 0) {
      J4jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch J4jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    J4jesRelativeStatHFup_isLoaded = true;
  }
  return *J4jesRelativeStatHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesRelativeStatHFup() {
  if (not J5jesRelativeStatHFup_isLoaded) {
    if (J5jesRelativeStatHFup_branch != 0) {
      J5jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch J5jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    J5jesRelativeStatHFup_isLoaded = true;
  }
  return *J5jesRelativeStatHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesRelativeStatHFup() {
  if (not J6jesRelativeStatHFup_isLoaded) {
    if (J6jesRelativeStatHFup_branch != 0) {
      J6jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch J6jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    J6jesRelativeStatHFup_isLoaded = true;
  }
  return *J6jesRelativeStatHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesRelativeStatHFup() {
  if (not J7jesRelativeStatHFup_isLoaded) {
    if (J7jesRelativeStatHFup_branch != 0) {
      J7jesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch J7jesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    J7jesRelativeStatHFup_isLoaded = true;
  }
  return *J7jesRelativeStatHFup_;
}

const vector<int> &VVV0Tree::NQJGenjesRelativeStatHFup() {
  if (not NQJGenjesRelativeStatHFup_isLoaded) {
    if (NQJGenjesRelativeStatHFup_branch != 0) {
      NQJGenjesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesRelativeStatHFup_isLoaded = true;
  }
  return *NQJGenjesRelativeStatHFup_;
}

const vector<int> &VVV0Tree::NBJGenjesRelativeStatHFup() {
  if (not NBJGenjesRelativeStatHFup_isLoaded) {
    if (NBJGenjesRelativeStatHFup_branch != 0) {
      NBJGenjesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesRelativeStatHFup_isLoaded = true;
  }
  return *NBJGenjesRelativeStatHFup_;
}

const vector<int> &VVV0Tree::NLJGenjesRelativeStatHFup() {
  if (not NLJGenjesRelativeStatHFup_isLoaded) {
    if (NLJGenjesRelativeStatHFup_branch != 0) {
      NLJGenjesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesRelativeStatHFup_isLoaded = true;
  }
  return *NLJGenjesRelativeStatHFup_;
}

const float &VVV0Tree::MVVXjesRelativeStatHFup() {
  if (not MVVXjesRelativeStatHFup_isLoaded) {
    if (MVVXjesRelativeStatHFup_branch != 0) {
      MVVXjesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    MVVXjesRelativeStatHFup_isLoaded = true;
  }
  return MVVXjesRelativeStatHFup_;
}

const float &VVV0Tree::PtVVXjesRelativeStatHFup() {
  if (not PtVVXjesRelativeStatHFup_isLoaded) {
    if (PtVVXjesRelativeStatHFup_branch != 0) {
      PtVVXjesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesRelativeStatHFup_isLoaded = true;
  }
  return PtVVXjesRelativeStatHFup_;
}

const float &VVV0Tree::HTjesRelativeStatHFup() {
  if (not HTjesRelativeStatHFup_isLoaded) {
    if (HTjesRelativeStatHFup_branch != 0) {
      HTjesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch HTjesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    HTjesRelativeStatHFup_isLoaded = true;
  }
  return HTjesRelativeStatHFup_;
}

const float &VVV0Tree::HTJjesRelativeStatHFup() {
  if (not HTJjesRelativeStatHFup_isLoaded) {
    if (HTJjesRelativeStatHFup_branch != 0) {
      HTJjesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch HTJjesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    HTJjesRelativeStatHFup_isLoaded = true;
  }
  return HTJjesRelativeStatHFup_;
}

const float &VVV0Tree::HTFJjesRelativeStatHFup() {
  if (not HTFJjesRelativeStatHFup_isLoaded) {
    if (HTFJjesRelativeStatHFup_branch != 0) {
      HTFJjesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    HTFJjesRelativeStatHFup_isLoaded = true;
  }
  return HTFJjesRelativeStatHFup_;
}

const float &VVV0Tree::SumPtFJjesRelativeStatHFup() {
  if (not SumPtFJjesRelativeStatHFup_isLoaded) {
    if (SumPtFJjesRelativeStatHFup_branch != 0) {
      SumPtFJjesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesRelativeStatHFup_isLoaded = true;
  }
  return SumPtFJjesRelativeStatHFup_;
}

const float &VVV0Tree::SumPtJjesRelativeStatHFup() {
  if (not SumPtJjesRelativeStatHFup_isLoaded) {
    if (SumPtJjesRelativeStatHFup_branch != 0) {
      SumPtJjesRelativeStatHFup_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesRelativeStatHFup_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesRelativeStatHFup_isLoaded = true;
  }
  return SumPtJjesRelativeStatHFup_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesRelativeStatHFdn() {
  if (not JsjesRelativeStatHFdn_isLoaded) {
    if (JsjesRelativeStatHFdn_branch != 0) {
      JsjesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch JsjesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    JsjesRelativeStatHFdn_isLoaded = true;
  }
  return *JsjesRelativeStatHFdn_;
}

const int &VVV0Tree::NFJjesRelativeStatHFdn() {
  if (not NFJjesRelativeStatHFdn_isLoaded) {
    if (NFJjesRelativeStatHFdn_branch != 0) {
      NFJjesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch NFJjesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    NFJjesRelativeStatHFdn_isLoaded = true;
  }
  return NFJjesRelativeStatHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesRelativeStatHFdn() {
  if (not FJ0jesRelativeStatHFdn_isLoaded) {
    if (FJ0jesRelativeStatHFdn_branch != 0) {
      FJ0jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    FJ0jesRelativeStatHFdn_isLoaded = true;
  }
  return *FJ0jesRelativeStatHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesRelativeStatHFdn() {
  if (not FJ1jesRelativeStatHFdn_isLoaded) {
    if (FJ1jesRelativeStatHFdn_branch != 0) {
      FJ1jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    FJ1jesRelativeStatHFdn_isLoaded = true;
  }
  return *FJ1jesRelativeStatHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesRelativeStatHFdn() {
  if (not FJ2jesRelativeStatHFdn_isLoaded) {
    if (FJ2jesRelativeStatHFdn_branch != 0) {
      FJ2jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    FJ2jesRelativeStatHFdn_isLoaded = true;
  }
  return *FJ2jesRelativeStatHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesRelativeStatHFdn() {
  if (not FJ3jesRelativeStatHFdn_isLoaded) {
    if (FJ3jesRelativeStatHFdn_branch != 0) {
      FJ3jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    FJ3jesRelativeStatHFdn_isLoaded = true;
  }
  return *FJ3jesRelativeStatHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesRelativeStatHFdn() {
  if (not FJ4jesRelativeStatHFdn_isLoaded) {
    if (FJ4jesRelativeStatHFdn_branch != 0) {
      FJ4jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    FJ4jesRelativeStatHFdn_isLoaded = true;
  }
  return *FJ4jesRelativeStatHFdn_;
}

const float &VVV0Tree::VMD0jesRelativeStatHFdn() {
  if (not VMD0jesRelativeStatHFdn_isLoaded) {
    if (VMD0jesRelativeStatHFdn_branch != 0) {
      VMD0jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    VMD0jesRelativeStatHFdn_isLoaded = true;
  }
  return VMD0jesRelativeStatHFdn_;
}

const float &VVV0Tree::VMD1jesRelativeStatHFdn() {
  if (not VMD1jesRelativeStatHFdn_isLoaded) {
    if (VMD1jesRelativeStatHFdn_branch != 0) {
      VMD1jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    VMD1jesRelativeStatHFdn_isLoaded = true;
  }
  return VMD1jesRelativeStatHFdn_;
}

const float &VVV0Tree::VMD2jesRelativeStatHFdn() {
  if (not VMD2jesRelativeStatHFdn_isLoaded) {
    if (VMD2jesRelativeStatHFdn_branch != 0) {
      VMD2jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    VMD2jesRelativeStatHFdn_isLoaded = true;
  }
  return VMD2jesRelativeStatHFdn_;
}

const float &VVV0Tree::VMD3jesRelativeStatHFdn() {
  if (not VMD3jesRelativeStatHFdn_isLoaded) {
    if (VMD3jesRelativeStatHFdn_branch != 0) {
      VMD3jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    VMD3jesRelativeStatHFdn_isLoaded = true;
  }
  return VMD3jesRelativeStatHFdn_;
}

const float &VVV0Tree::VMD4jesRelativeStatHFdn() {
  if (not VMD4jesRelativeStatHFdn_isLoaded) {
    if (VMD4jesRelativeStatHFdn_branch != 0) {
      VMD4jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    VMD4jesRelativeStatHFdn_isLoaded = true;
  }
  return VMD4jesRelativeStatHFdn_;
}

const float &VVV0Tree::WMD0jesRelativeStatHFdn() {
  if (not WMD0jesRelativeStatHFdn_isLoaded) {
    if (WMD0jesRelativeStatHFdn_branch != 0) {
      WMD0jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    WMD0jesRelativeStatHFdn_isLoaded = true;
  }
  return WMD0jesRelativeStatHFdn_;
}

const float &VVV0Tree::WMD1jesRelativeStatHFdn() {
  if (not WMD1jesRelativeStatHFdn_isLoaded) {
    if (WMD1jesRelativeStatHFdn_branch != 0) {
      WMD1jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    WMD1jesRelativeStatHFdn_isLoaded = true;
  }
  return WMD1jesRelativeStatHFdn_;
}

const float &VVV0Tree::WMD2jesRelativeStatHFdn() {
  if (not WMD2jesRelativeStatHFdn_isLoaded) {
    if (WMD2jesRelativeStatHFdn_branch != 0) {
      WMD2jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    WMD2jesRelativeStatHFdn_isLoaded = true;
  }
  return WMD2jesRelativeStatHFdn_;
}

const float &VVV0Tree::WMD3jesRelativeStatHFdn() {
  if (not WMD3jesRelativeStatHFdn_isLoaded) {
    if (WMD3jesRelativeStatHFdn_branch != 0) {
      WMD3jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    WMD3jesRelativeStatHFdn_isLoaded = true;
  }
  return WMD3jesRelativeStatHFdn_;
}

const float &VVV0Tree::WMD4jesRelativeStatHFdn() {
  if (not WMD4jesRelativeStatHFdn_isLoaded) {
    if (WMD4jesRelativeStatHFdn_branch != 0) {
      WMD4jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    WMD4jesRelativeStatHFdn_isLoaded = true;
  }
  return WMD4jesRelativeStatHFdn_;
}

const int &VVV0Tree::NQGen0jesRelativeStatHFdn() {
  if (not NQGen0jesRelativeStatHFdn_isLoaded) {
    if (NQGen0jesRelativeStatHFdn_branch != 0) {
      NQGen0jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesRelativeStatHFdn_isLoaded = true;
  }
  return NQGen0jesRelativeStatHFdn_;
}

const int &VVV0Tree::NQGen1jesRelativeStatHFdn() {
  if (not NQGen1jesRelativeStatHFdn_isLoaded) {
    if (NQGen1jesRelativeStatHFdn_branch != 0) {
      NQGen1jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesRelativeStatHFdn_isLoaded = true;
  }
  return NQGen1jesRelativeStatHFdn_;
}

const int &VVV0Tree::NQGen2jesRelativeStatHFdn() {
  if (not NQGen2jesRelativeStatHFdn_isLoaded) {
    if (NQGen2jesRelativeStatHFdn_branch != 0) {
      NQGen2jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesRelativeStatHFdn_isLoaded = true;
  }
  return NQGen2jesRelativeStatHFdn_;
}

const int &VVV0Tree::NQGen3jesRelativeStatHFdn() {
  if (not NQGen3jesRelativeStatHFdn_isLoaded) {
    if (NQGen3jesRelativeStatHFdn_branch != 0) {
      NQGen3jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesRelativeStatHFdn_isLoaded = true;
  }
  return NQGen3jesRelativeStatHFdn_;
}

const int &VVV0Tree::NQGen4jesRelativeStatHFdn() {
  if (not NQGen4jesRelativeStatHFdn_isLoaded) {
    if (NQGen4jesRelativeStatHFdn_branch != 0) {
      NQGen4jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesRelativeStatHFdn_isLoaded = true;
  }
  return NQGen4jesRelativeStatHFdn_;
}

const int &VVV0Tree::NBGen0jesRelativeStatHFdn() {
  if (not NBGen0jesRelativeStatHFdn_isLoaded) {
    if (NBGen0jesRelativeStatHFdn_branch != 0) {
      NBGen0jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesRelativeStatHFdn_isLoaded = true;
  }
  return NBGen0jesRelativeStatHFdn_;
}

const int &VVV0Tree::NBGen1jesRelativeStatHFdn() {
  if (not NBGen1jesRelativeStatHFdn_isLoaded) {
    if (NBGen1jesRelativeStatHFdn_branch != 0) {
      NBGen1jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesRelativeStatHFdn_isLoaded = true;
  }
  return NBGen1jesRelativeStatHFdn_;
}

const int &VVV0Tree::NBGen2jesRelativeStatHFdn() {
  if (not NBGen2jesRelativeStatHFdn_isLoaded) {
    if (NBGen2jesRelativeStatHFdn_branch != 0) {
      NBGen2jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesRelativeStatHFdn_isLoaded = true;
  }
  return NBGen2jesRelativeStatHFdn_;
}

const int &VVV0Tree::NBGen3jesRelativeStatHFdn() {
  if (not NBGen3jesRelativeStatHFdn_isLoaded) {
    if (NBGen3jesRelativeStatHFdn_branch != 0) {
      NBGen3jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesRelativeStatHFdn_isLoaded = true;
  }
  return NBGen3jesRelativeStatHFdn_;
}

const int &VVV0Tree::NBGen4jesRelativeStatHFdn() {
  if (not NBGen4jesRelativeStatHFdn_isLoaded) {
    if (NBGen4jesRelativeStatHFdn_branch != 0) {
      NBGen4jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesRelativeStatHFdn_isLoaded = true;
  }
  return NBGen4jesRelativeStatHFdn_;
}

const int &VVV0Tree::NLGen0jesRelativeStatHFdn() {
  if (not NLGen0jesRelativeStatHFdn_isLoaded) {
    if (NLGen0jesRelativeStatHFdn_branch != 0) {
      NLGen0jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesRelativeStatHFdn_isLoaded = true;
  }
  return NLGen0jesRelativeStatHFdn_;
}

const int &VVV0Tree::NLGen1jesRelativeStatHFdn() {
  if (not NLGen1jesRelativeStatHFdn_isLoaded) {
    if (NLGen1jesRelativeStatHFdn_branch != 0) {
      NLGen1jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesRelativeStatHFdn_isLoaded = true;
  }
  return NLGen1jesRelativeStatHFdn_;
}

const int &VVV0Tree::NLGen2jesRelativeStatHFdn() {
  if (not NLGen2jesRelativeStatHFdn_isLoaded) {
    if (NLGen2jesRelativeStatHFdn_branch != 0) {
      NLGen2jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesRelativeStatHFdn_isLoaded = true;
  }
  return NLGen2jesRelativeStatHFdn_;
}

const int &VVV0Tree::NLGen3jesRelativeStatHFdn() {
  if (not NLGen3jesRelativeStatHFdn_isLoaded) {
    if (NLGen3jesRelativeStatHFdn_branch != 0) {
      NLGen3jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesRelativeStatHFdn_isLoaded = true;
  }
  return NLGen3jesRelativeStatHFdn_;
}

const int &VVV0Tree::NLGen4jesRelativeStatHFdn() {
  if (not NLGen4jesRelativeStatHFdn_isLoaded) {
    if (NLGen4jesRelativeStatHFdn_branch != 0) {
      NLGen4jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesRelativeStatHFdn_isLoaded = true;
  }
  return NLGen4jesRelativeStatHFdn_;
}

const int &VVV0Tree::NVQGen0jesRelativeStatHFdn() {
  if (not NVQGen0jesRelativeStatHFdn_isLoaded) {
    if (NVQGen0jesRelativeStatHFdn_branch != 0) {
      NVQGen0jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesRelativeStatHFdn_isLoaded = true;
  }
  return NVQGen0jesRelativeStatHFdn_;
}

const int &VVV0Tree::NVQGen1jesRelativeStatHFdn() {
  if (not NVQGen1jesRelativeStatHFdn_isLoaded) {
    if (NVQGen1jesRelativeStatHFdn_branch != 0) {
      NVQGen1jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesRelativeStatHFdn_isLoaded = true;
  }
  return NVQGen1jesRelativeStatHFdn_;
}

const int &VVV0Tree::NVQGen2jesRelativeStatHFdn() {
  if (not NVQGen2jesRelativeStatHFdn_isLoaded) {
    if (NVQGen2jesRelativeStatHFdn_branch != 0) {
      NVQGen2jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesRelativeStatHFdn_isLoaded = true;
  }
  return NVQGen2jesRelativeStatHFdn_;
}

const int &VVV0Tree::NVQGen3jesRelativeStatHFdn() {
  if (not NVQGen3jesRelativeStatHFdn_isLoaded) {
    if (NVQGen3jesRelativeStatHFdn_branch != 0) {
      NVQGen3jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesRelativeStatHFdn_isLoaded = true;
  }
  return NVQGen3jesRelativeStatHFdn_;
}

const int &VVV0Tree::NVQGen4jesRelativeStatHFdn() {
  if (not NVQGen4jesRelativeStatHFdn_isLoaded) {
    if (NVQGen4jesRelativeStatHFdn_branch != 0) {
      NVQGen4jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesRelativeStatHFdn_isLoaded = true;
  }
  return NVQGen4jesRelativeStatHFdn_;
}

const int &VVV0Tree::NiFJjesRelativeStatHFdn() {
  if (not NiFJjesRelativeStatHFdn_isLoaded) {
    if (NiFJjesRelativeStatHFdn_branch != 0) {
      NiFJjesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    NiFJjesRelativeStatHFdn_isLoaded = true;
  }
  return NiFJjesRelativeStatHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesRelativeStatHFdn() {
  if (not iFJ0jesRelativeStatHFdn_isLoaded) {
    if (iFJ0jesRelativeStatHFdn_branch != 0) {
      iFJ0jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesRelativeStatHFdn_isLoaded = true;
  }
  return *iFJ0jesRelativeStatHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesRelativeStatHFdn() {
  if (not iFJ1jesRelativeStatHFdn_isLoaded) {
    if (iFJ1jesRelativeStatHFdn_branch != 0) {
      iFJ1jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesRelativeStatHFdn_isLoaded = true;
  }
  return *iFJ1jesRelativeStatHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesRelativeStatHFdn() {
  if (not iFJ2jesRelativeStatHFdn_isLoaded) {
    if (iFJ2jesRelativeStatHFdn_branch != 0) {
      iFJ2jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesRelativeStatHFdn_isLoaded = true;
  }
  return *iFJ2jesRelativeStatHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesRelativeStatHFdn() {
  if (not iFJ3jesRelativeStatHFdn_isLoaded) {
    if (iFJ3jesRelativeStatHFdn_branch != 0) {
      iFJ3jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesRelativeStatHFdn_isLoaded = true;
  }
  return *iFJ3jesRelativeStatHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesRelativeStatHFdn() {
  if (not iFJ4jesRelativeStatHFdn_isLoaded) {
    if (iFJ4jesRelativeStatHFdn_branch != 0) {
      iFJ4jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesRelativeStatHFdn_isLoaded = true;
  }
  return *iFJ4jesRelativeStatHFdn_;
}

const float &VVV0Tree::iVMD0jesRelativeStatHFdn() {
  if (not iVMD0jesRelativeStatHFdn_isLoaded) {
    if (iVMD0jesRelativeStatHFdn_branch != 0) {
      iVMD0jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesRelativeStatHFdn_isLoaded = true;
  }
  return iVMD0jesRelativeStatHFdn_;
}

const float &VVV0Tree::iVMD1jesRelativeStatHFdn() {
  if (not iVMD1jesRelativeStatHFdn_isLoaded) {
    if (iVMD1jesRelativeStatHFdn_branch != 0) {
      iVMD1jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesRelativeStatHFdn_isLoaded = true;
  }
  return iVMD1jesRelativeStatHFdn_;
}

const float &VVV0Tree::iVMD2jesRelativeStatHFdn() {
  if (not iVMD2jesRelativeStatHFdn_isLoaded) {
    if (iVMD2jesRelativeStatHFdn_branch != 0) {
      iVMD2jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesRelativeStatHFdn_isLoaded = true;
  }
  return iVMD2jesRelativeStatHFdn_;
}

const float &VVV0Tree::iVMD3jesRelativeStatHFdn() {
  if (not iVMD3jesRelativeStatHFdn_isLoaded) {
    if (iVMD3jesRelativeStatHFdn_branch != 0) {
      iVMD3jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesRelativeStatHFdn_isLoaded = true;
  }
  return iVMD3jesRelativeStatHFdn_;
}

const float &VVV0Tree::iVMD4jesRelativeStatHFdn() {
  if (not iVMD4jesRelativeStatHFdn_isLoaded) {
    if (iVMD4jesRelativeStatHFdn_branch != 0) {
      iVMD4jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesRelativeStatHFdn_isLoaded = true;
  }
  return iVMD4jesRelativeStatHFdn_;
}

const float &VVV0Tree::iWMD0jesRelativeStatHFdn() {
  if (not iWMD0jesRelativeStatHFdn_isLoaded) {
    if (iWMD0jesRelativeStatHFdn_branch != 0) {
      iWMD0jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesRelativeStatHFdn_isLoaded = true;
  }
  return iWMD0jesRelativeStatHFdn_;
}

const float &VVV0Tree::iWMD1jesRelativeStatHFdn() {
  if (not iWMD1jesRelativeStatHFdn_isLoaded) {
    if (iWMD1jesRelativeStatHFdn_branch != 0) {
      iWMD1jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesRelativeStatHFdn_isLoaded = true;
  }
  return iWMD1jesRelativeStatHFdn_;
}

const float &VVV0Tree::iWMD2jesRelativeStatHFdn() {
  if (not iWMD2jesRelativeStatHFdn_isLoaded) {
    if (iWMD2jesRelativeStatHFdn_branch != 0) {
      iWMD2jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesRelativeStatHFdn_isLoaded = true;
  }
  return iWMD2jesRelativeStatHFdn_;
}

const float &VVV0Tree::iWMD3jesRelativeStatHFdn() {
  if (not iWMD3jesRelativeStatHFdn_isLoaded) {
    if (iWMD3jesRelativeStatHFdn_branch != 0) {
      iWMD3jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesRelativeStatHFdn_isLoaded = true;
  }
  return iWMD3jesRelativeStatHFdn_;
}

const float &VVV0Tree::iWMD4jesRelativeStatHFdn() {
  if (not iWMD4jesRelativeStatHFdn_isLoaded) {
    if (iWMD4jesRelativeStatHFdn_branch != 0) {
      iWMD4jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesRelativeStatHFdn_isLoaded = true;
  }
  return iWMD4jesRelativeStatHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesRelativeStatHFdn() {
  if (not METjesRelativeStatHFdn_isLoaded) {
    if (METjesRelativeStatHFdn_branch != 0) {
      METjesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch METjesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    METjesRelativeStatHFdn_isLoaded = true;
  }
  return *METjesRelativeStatHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesRelativeStatHFdn() {
  if (not NujesRelativeStatHFdn_isLoaded) {
    if (NujesRelativeStatHFdn_branch != 0) {
      NujesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch NujesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    NujesRelativeStatHFdn_isLoaded = true;
  }
  return *NujesRelativeStatHFdn_;
}

const int &VVV0Tree::NJjesRelativeStatHFdn() {
  if (not NJjesRelativeStatHFdn_isLoaded) {
    if (NJjesRelativeStatHFdn_branch != 0) {
      NJjesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch NJjesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    NJjesRelativeStatHFdn_isLoaded = true;
  }
  return NJjesRelativeStatHFdn_;
}

const int &VVV0Tree::NbLoosejesRelativeStatHFdn() {
  if (not NbLoosejesRelativeStatHFdn_isLoaded) {
    if (NbLoosejesRelativeStatHFdn_branch != 0) {
      NbLoosejesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesRelativeStatHFdn_isLoaded = true;
  }
  return NbLoosejesRelativeStatHFdn_;
}

const int &VVV0Tree::NbMediumjesRelativeStatHFdn() {
  if (not NbMediumjesRelativeStatHFdn_isLoaded) {
    if (NbMediumjesRelativeStatHFdn_branch != 0) {
      NbMediumjesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesRelativeStatHFdn_isLoaded = true;
  }
  return NbMediumjesRelativeStatHFdn_;
}

const int &VVV0Tree::NbTightjesRelativeStatHFdn() {
  if (not NbTightjesRelativeStatHFdn_isLoaded) {
    if (NbTightjesRelativeStatHFdn_branch != 0) {
      NbTightjesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    NbTightjesRelativeStatHFdn_isLoaded = true;
  }
  return NbTightjesRelativeStatHFdn_;
}

const int &VVV0Tree::NoORNbLoosejesRelativeStatHFdn() {
  if (not NoORNbLoosejesRelativeStatHFdn_isLoaded) {
    if (NoORNbLoosejesRelativeStatHFdn_branch != 0) {
      NoORNbLoosejesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesRelativeStatHFdn_isLoaded = true;
  }
  return NoORNbLoosejesRelativeStatHFdn_;
}

const int &VVV0Tree::NoORNbMediumjesRelativeStatHFdn() {
  if (not NoORNbMediumjesRelativeStatHFdn_isLoaded) {
    if (NoORNbMediumjesRelativeStatHFdn_branch != 0) {
      NoORNbMediumjesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesRelativeStatHFdn_isLoaded = true;
  }
  return NoORNbMediumjesRelativeStatHFdn_;
}

const int &VVV0Tree::NoORNbTightjesRelativeStatHFdn() {
  if (not NoORNbTightjesRelativeStatHFdn_isLoaded) {
    if (NoORNbTightjesRelativeStatHFdn_branch != 0) {
      NoORNbTightjesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesRelativeStatHFdn_isLoaded = true;
  }
  return NoORNbTightjesRelativeStatHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesRelativeStatHFdn() {
  if (not J0jesRelativeStatHFdn_isLoaded) {
    if (J0jesRelativeStatHFdn_branch != 0) {
      J0jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch J0jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    J0jesRelativeStatHFdn_isLoaded = true;
  }
  return *J0jesRelativeStatHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesRelativeStatHFdn() {
  if (not J1jesRelativeStatHFdn_isLoaded) {
    if (J1jesRelativeStatHFdn_branch != 0) {
      J1jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch J1jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    J1jesRelativeStatHFdn_isLoaded = true;
  }
  return *J1jesRelativeStatHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesRelativeStatHFdn() {
  if (not J2jesRelativeStatHFdn_isLoaded) {
    if (J2jesRelativeStatHFdn_branch != 0) {
      J2jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch J2jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    J2jesRelativeStatHFdn_isLoaded = true;
  }
  return *J2jesRelativeStatHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesRelativeStatHFdn() {
  if (not J3jesRelativeStatHFdn_isLoaded) {
    if (J3jesRelativeStatHFdn_branch != 0) {
      J3jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch J3jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    J3jesRelativeStatHFdn_isLoaded = true;
  }
  return *J3jesRelativeStatHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesRelativeStatHFdn() {
  if (not J4jesRelativeStatHFdn_isLoaded) {
    if (J4jesRelativeStatHFdn_branch != 0) {
      J4jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch J4jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    J4jesRelativeStatHFdn_isLoaded = true;
  }
  return *J4jesRelativeStatHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesRelativeStatHFdn() {
  if (not J5jesRelativeStatHFdn_isLoaded) {
    if (J5jesRelativeStatHFdn_branch != 0) {
      J5jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch J5jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    J5jesRelativeStatHFdn_isLoaded = true;
  }
  return *J5jesRelativeStatHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesRelativeStatHFdn() {
  if (not J6jesRelativeStatHFdn_isLoaded) {
    if (J6jesRelativeStatHFdn_branch != 0) {
      J6jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch J6jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    J6jesRelativeStatHFdn_isLoaded = true;
  }
  return *J6jesRelativeStatHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesRelativeStatHFdn() {
  if (not J7jesRelativeStatHFdn_isLoaded) {
    if (J7jesRelativeStatHFdn_branch != 0) {
      J7jesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch J7jesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    J7jesRelativeStatHFdn_isLoaded = true;
  }
  return *J7jesRelativeStatHFdn_;
}

const vector<int> &VVV0Tree::NQJGenjesRelativeStatHFdn() {
  if (not NQJGenjesRelativeStatHFdn_isLoaded) {
    if (NQJGenjesRelativeStatHFdn_branch != 0) {
      NQJGenjesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesRelativeStatHFdn_isLoaded = true;
  }
  return *NQJGenjesRelativeStatHFdn_;
}

const vector<int> &VVV0Tree::NBJGenjesRelativeStatHFdn() {
  if (not NBJGenjesRelativeStatHFdn_isLoaded) {
    if (NBJGenjesRelativeStatHFdn_branch != 0) {
      NBJGenjesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesRelativeStatHFdn_isLoaded = true;
  }
  return *NBJGenjesRelativeStatHFdn_;
}

const vector<int> &VVV0Tree::NLJGenjesRelativeStatHFdn() {
  if (not NLJGenjesRelativeStatHFdn_isLoaded) {
    if (NLJGenjesRelativeStatHFdn_branch != 0) {
      NLJGenjesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesRelativeStatHFdn_isLoaded = true;
  }
  return *NLJGenjesRelativeStatHFdn_;
}

const float &VVV0Tree::MVVXjesRelativeStatHFdn() {
  if (not MVVXjesRelativeStatHFdn_isLoaded) {
    if (MVVXjesRelativeStatHFdn_branch != 0) {
      MVVXjesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    MVVXjesRelativeStatHFdn_isLoaded = true;
  }
  return MVVXjesRelativeStatHFdn_;
}

const float &VVV0Tree::PtVVXjesRelativeStatHFdn() {
  if (not PtVVXjesRelativeStatHFdn_isLoaded) {
    if (PtVVXjesRelativeStatHFdn_branch != 0) {
      PtVVXjesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesRelativeStatHFdn_isLoaded = true;
  }
  return PtVVXjesRelativeStatHFdn_;
}

const float &VVV0Tree::HTjesRelativeStatHFdn() {
  if (not HTjesRelativeStatHFdn_isLoaded) {
    if (HTjesRelativeStatHFdn_branch != 0) {
      HTjesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch HTjesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    HTjesRelativeStatHFdn_isLoaded = true;
  }
  return HTjesRelativeStatHFdn_;
}

const float &VVV0Tree::HTJjesRelativeStatHFdn() {
  if (not HTJjesRelativeStatHFdn_isLoaded) {
    if (HTJjesRelativeStatHFdn_branch != 0) {
      HTJjesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch HTJjesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    HTJjesRelativeStatHFdn_isLoaded = true;
  }
  return HTJjesRelativeStatHFdn_;
}

const float &VVV0Tree::HTFJjesRelativeStatHFdn() {
  if (not HTFJjesRelativeStatHFdn_isLoaded) {
    if (HTFJjesRelativeStatHFdn_branch != 0) {
      HTFJjesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    HTFJjesRelativeStatHFdn_isLoaded = true;
  }
  return HTFJjesRelativeStatHFdn_;
}

const float &VVV0Tree::SumPtFJjesRelativeStatHFdn() {
  if (not SumPtFJjesRelativeStatHFdn_isLoaded) {
    if (SumPtFJjesRelativeStatHFdn_branch != 0) {
      SumPtFJjesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesRelativeStatHFdn_isLoaded = true;
  }
  return SumPtFJjesRelativeStatHFdn_;
}

const float &VVV0Tree::SumPtJjesRelativeStatHFdn() {
  if (not SumPtJjesRelativeStatHFdn_isLoaded) {
    if (SumPtJjesRelativeStatHFdn_branch != 0) {
      SumPtJjesRelativeStatHFdn_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesRelativeStatHFdn_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesRelativeStatHFdn_isLoaded = true;
  }
  return SumPtJjesRelativeStatHFdn_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesPileUpDataMCup() {
  if (not JsjesPileUpDataMCup_isLoaded) {
    if (JsjesPileUpDataMCup_branch != 0) {
      JsjesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch JsjesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    JsjesPileUpDataMCup_isLoaded = true;
  }
  return *JsjesPileUpDataMCup_;
}

const int &VVV0Tree::NFJjesPileUpDataMCup() {
  if (not NFJjesPileUpDataMCup_isLoaded) {
    if (NFJjesPileUpDataMCup_branch != 0) {
      NFJjesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch NFJjesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    NFJjesPileUpDataMCup_isLoaded = true;
  }
  return NFJjesPileUpDataMCup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesPileUpDataMCup() {
  if (not FJ0jesPileUpDataMCup_isLoaded) {
    if (FJ0jesPileUpDataMCup_branch != 0) {
      FJ0jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    FJ0jesPileUpDataMCup_isLoaded = true;
  }
  return *FJ0jesPileUpDataMCup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesPileUpDataMCup() {
  if (not FJ1jesPileUpDataMCup_isLoaded) {
    if (FJ1jesPileUpDataMCup_branch != 0) {
      FJ1jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    FJ1jesPileUpDataMCup_isLoaded = true;
  }
  return *FJ1jesPileUpDataMCup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesPileUpDataMCup() {
  if (not FJ2jesPileUpDataMCup_isLoaded) {
    if (FJ2jesPileUpDataMCup_branch != 0) {
      FJ2jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    FJ2jesPileUpDataMCup_isLoaded = true;
  }
  return *FJ2jesPileUpDataMCup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesPileUpDataMCup() {
  if (not FJ3jesPileUpDataMCup_isLoaded) {
    if (FJ3jesPileUpDataMCup_branch != 0) {
      FJ3jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    FJ3jesPileUpDataMCup_isLoaded = true;
  }
  return *FJ3jesPileUpDataMCup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesPileUpDataMCup() {
  if (not FJ4jesPileUpDataMCup_isLoaded) {
    if (FJ4jesPileUpDataMCup_branch != 0) {
      FJ4jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    FJ4jesPileUpDataMCup_isLoaded = true;
  }
  return *FJ4jesPileUpDataMCup_;
}

const float &VVV0Tree::VMD0jesPileUpDataMCup() {
  if (not VMD0jesPileUpDataMCup_isLoaded) {
    if (VMD0jesPileUpDataMCup_branch != 0) {
      VMD0jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    VMD0jesPileUpDataMCup_isLoaded = true;
  }
  return VMD0jesPileUpDataMCup_;
}

const float &VVV0Tree::VMD1jesPileUpDataMCup() {
  if (not VMD1jesPileUpDataMCup_isLoaded) {
    if (VMD1jesPileUpDataMCup_branch != 0) {
      VMD1jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    VMD1jesPileUpDataMCup_isLoaded = true;
  }
  return VMD1jesPileUpDataMCup_;
}

const float &VVV0Tree::VMD2jesPileUpDataMCup() {
  if (not VMD2jesPileUpDataMCup_isLoaded) {
    if (VMD2jesPileUpDataMCup_branch != 0) {
      VMD2jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    VMD2jesPileUpDataMCup_isLoaded = true;
  }
  return VMD2jesPileUpDataMCup_;
}

const float &VVV0Tree::VMD3jesPileUpDataMCup() {
  if (not VMD3jesPileUpDataMCup_isLoaded) {
    if (VMD3jesPileUpDataMCup_branch != 0) {
      VMD3jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    VMD3jesPileUpDataMCup_isLoaded = true;
  }
  return VMD3jesPileUpDataMCup_;
}

const float &VVV0Tree::VMD4jesPileUpDataMCup() {
  if (not VMD4jesPileUpDataMCup_isLoaded) {
    if (VMD4jesPileUpDataMCup_branch != 0) {
      VMD4jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    VMD4jesPileUpDataMCup_isLoaded = true;
  }
  return VMD4jesPileUpDataMCup_;
}

const float &VVV0Tree::WMD0jesPileUpDataMCup() {
  if (not WMD0jesPileUpDataMCup_isLoaded) {
    if (WMD0jesPileUpDataMCup_branch != 0) {
      WMD0jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    WMD0jesPileUpDataMCup_isLoaded = true;
  }
  return WMD0jesPileUpDataMCup_;
}

const float &VVV0Tree::WMD1jesPileUpDataMCup() {
  if (not WMD1jesPileUpDataMCup_isLoaded) {
    if (WMD1jesPileUpDataMCup_branch != 0) {
      WMD1jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    WMD1jesPileUpDataMCup_isLoaded = true;
  }
  return WMD1jesPileUpDataMCup_;
}

const float &VVV0Tree::WMD2jesPileUpDataMCup() {
  if (not WMD2jesPileUpDataMCup_isLoaded) {
    if (WMD2jesPileUpDataMCup_branch != 0) {
      WMD2jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    WMD2jesPileUpDataMCup_isLoaded = true;
  }
  return WMD2jesPileUpDataMCup_;
}

const float &VVV0Tree::WMD3jesPileUpDataMCup() {
  if (not WMD3jesPileUpDataMCup_isLoaded) {
    if (WMD3jesPileUpDataMCup_branch != 0) {
      WMD3jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    WMD3jesPileUpDataMCup_isLoaded = true;
  }
  return WMD3jesPileUpDataMCup_;
}

const float &VVV0Tree::WMD4jesPileUpDataMCup() {
  if (not WMD4jesPileUpDataMCup_isLoaded) {
    if (WMD4jesPileUpDataMCup_branch != 0) {
      WMD4jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    WMD4jesPileUpDataMCup_isLoaded = true;
  }
  return WMD4jesPileUpDataMCup_;
}

const int &VVV0Tree::NQGen0jesPileUpDataMCup() {
  if (not NQGen0jesPileUpDataMCup_isLoaded) {
    if (NQGen0jesPileUpDataMCup_branch != 0) {
      NQGen0jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesPileUpDataMCup_isLoaded = true;
  }
  return NQGen0jesPileUpDataMCup_;
}

const int &VVV0Tree::NQGen1jesPileUpDataMCup() {
  if (not NQGen1jesPileUpDataMCup_isLoaded) {
    if (NQGen1jesPileUpDataMCup_branch != 0) {
      NQGen1jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesPileUpDataMCup_isLoaded = true;
  }
  return NQGen1jesPileUpDataMCup_;
}

const int &VVV0Tree::NQGen2jesPileUpDataMCup() {
  if (not NQGen2jesPileUpDataMCup_isLoaded) {
    if (NQGen2jesPileUpDataMCup_branch != 0) {
      NQGen2jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesPileUpDataMCup_isLoaded = true;
  }
  return NQGen2jesPileUpDataMCup_;
}

const int &VVV0Tree::NQGen3jesPileUpDataMCup() {
  if (not NQGen3jesPileUpDataMCup_isLoaded) {
    if (NQGen3jesPileUpDataMCup_branch != 0) {
      NQGen3jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesPileUpDataMCup_isLoaded = true;
  }
  return NQGen3jesPileUpDataMCup_;
}

const int &VVV0Tree::NQGen4jesPileUpDataMCup() {
  if (not NQGen4jesPileUpDataMCup_isLoaded) {
    if (NQGen4jesPileUpDataMCup_branch != 0) {
      NQGen4jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesPileUpDataMCup_isLoaded = true;
  }
  return NQGen4jesPileUpDataMCup_;
}

const int &VVV0Tree::NBGen0jesPileUpDataMCup() {
  if (not NBGen0jesPileUpDataMCup_isLoaded) {
    if (NBGen0jesPileUpDataMCup_branch != 0) {
      NBGen0jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesPileUpDataMCup_isLoaded = true;
  }
  return NBGen0jesPileUpDataMCup_;
}

const int &VVV0Tree::NBGen1jesPileUpDataMCup() {
  if (not NBGen1jesPileUpDataMCup_isLoaded) {
    if (NBGen1jesPileUpDataMCup_branch != 0) {
      NBGen1jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesPileUpDataMCup_isLoaded = true;
  }
  return NBGen1jesPileUpDataMCup_;
}

const int &VVV0Tree::NBGen2jesPileUpDataMCup() {
  if (not NBGen2jesPileUpDataMCup_isLoaded) {
    if (NBGen2jesPileUpDataMCup_branch != 0) {
      NBGen2jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesPileUpDataMCup_isLoaded = true;
  }
  return NBGen2jesPileUpDataMCup_;
}

const int &VVV0Tree::NBGen3jesPileUpDataMCup() {
  if (not NBGen3jesPileUpDataMCup_isLoaded) {
    if (NBGen3jesPileUpDataMCup_branch != 0) {
      NBGen3jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesPileUpDataMCup_isLoaded = true;
  }
  return NBGen3jesPileUpDataMCup_;
}

const int &VVV0Tree::NBGen4jesPileUpDataMCup() {
  if (not NBGen4jesPileUpDataMCup_isLoaded) {
    if (NBGen4jesPileUpDataMCup_branch != 0) {
      NBGen4jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesPileUpDataMCup_isLoaded = true;
  }
  return NBGen4jesPileUpDataMCup_;
}

const int &VVV0Tree::NLGen0jesPileUpDataMCup() {
  if (not NLGen0jesPileUpDataMCup_isLoaded) {
    if (NLGen0jesPileUpDataMCup_branch != 0) {
      NLGen0jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesPileUpDataMCup_isLoaded = true;
  }
  return NLGen0jesPileUpDataMCup_;
}

const int &VVV0Tree::NLGen1jesPileUpDataMCup() {
  if (not NLGen1jesPileUpDataMCup_isLoaded) {
    if (NLGen1jesPileUpDataMCup_branch != 0) {
      NLGen1jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesPileUpDataMCup_isLoaded = true;
  }
  return NLGen1jesPileUpDataMCup_;
}

const int &VVV0Tree::NLGen2jesPileUpDataMCup() {
  if (not NLGen2jesPileUpDataMCup_isLoaded) {
    if (NLGen2jesPileUpDataMCup_branch != 0) {
      NLGen2jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesPileUpDataMCup_isLoaded = true;
  }
  return NLGen2jesPileUpDataMCup_;
}

const int &VVV0Tree::NLGen3jesPileUpDataMCup() {
  if (not NLGen3jesPileUpDataMCup_isLoaded) {
    if (NLGen3jesPileUpDataMCup_branch != 0) {
      NLGen3jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesPileUpDataMCup_isLoaded = true;
  }
  return NLGen3jesPileUpDataMCup_;
}

const int &VVV0Tree::NLGen4jesPileUpDataMCup() {
  if (not NLGen4jesPileUpDataMCup_isLoaded) {
    if (NLGen4jesPileUpDataMCup_branch != 0) {
      NLGen4jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesPileUpDataMCup_isLoaded = true;
  }
  return NLGen4jesPileUpDataMCup_;
}

const int &VVV0Tree::NVQGen0jesPileUpDataMCup() {
  if (not NVQGen0jesPileUpDataMCup_isLoaded) {
    if (NVQGen0jesPileUpDataMCup_branch != 0) {
      NVQGen0jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesPileUpDataMCup_isLoaded = true;
  }
  return NVQGen0jesPileUpDataMCup_;
}

const int &VVV0Tree::NVQGen1jesPileUpDataMCup() {
  if (not NVQGen1jesPileUpDataMCup_isLoaded) {
    if (NVQGen1jesPileUpDataMCup_branch != 0) {
      NVQGen1jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesPileUpDataMCup_isLoaded = true;
  }
  return NVQGen1jesPileUpDataMCup_;
}

const int &VVV0Tree::NVQGen2jesPileUpDataMCup() {
  if (not NVQGen2jesPileUpDataMCup_isLoaded) {
    if (NVQGen2jesPileUpDataMCup_branch != 0) {
      NVQGen2jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesPileUpDataMCup_isLoaded = true;
  }
  return NVQGen2jesPileUpDataMCup_;
}

const int &VVV0Tree::NVQGen3jesPileUpDataMCup() {
  if (not NVQGen3jesPileUpDataMCup_isLoaded) {
    if (NVQGen3jesPileUpDataMCup_branch != 0) {
      NVQGen3jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesPileUpDataMCup_isLoaded = true;
  }
  return NVQGen3jesPileUpDataMCup_;
}

const int &VVV0Tree::NVQGen4jesPileUpDataMCup() {
  if (not NVQGen4jesPileUpDataMCup_isLoaded) {
    if (NVQGen4jesPileUpDataMCup_branch != 0) {
      NVQGen4jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesPileUpDataMCup_isLoaded = true;
  }
  return NVQGen4jesPileUpDataMCup_;
}

const int &VVV0Tree::NiFJjesPileUpDataMCup() {
  if (not NiFJjesPileUpDataMCup_isLoaded) {
    if (NiFJjesPileUpDataMCup_branch != 0) {
      NiFJjesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    NiFJjesPileUpDataMCup_isLoaded = true;
  }
  return NiFJjesPileUpDataMCup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesPileUpDataMCup() {
  if (not iFJ0jesPileUpDataMCup_isLoaded) {
    if (iFJ0jesPileUpDataMCup_branch != 0) {
      iFJ0jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesPileUpDataMCup_isLoaded = true;
  }
  return *iFJ0jesPileUpDataMCup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesPileUpDataMCup() {
  if (not iFJ1jesPileUpDataMCup_isLoaded) {
    if (iFJ1jesPileUpDataMCup_branch != 0) {
      iFJ1jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesPileUpDataMCup_isLoaded = true;
  }
  return *iFJ1jesPileUpDataMCup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesPileUpDataMCup() {
  if (not iFJ2jesPileUpDataMCup_isLoaded) {
    if (iFJ2jesPileUpDataMCup_branch != 0) {
      iFJ2jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesPileUpDataMCup_isLoaded = true;
  }
  return *iFJ2jesPileUpDataMCup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesPileUpDataMCup() {
  if (not iFJ3jesPileUpDataMCup_isLoaded) {
    if (iFJ3jesPileUpDataMCup_branch != 0) {
      iFJ3jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesPileUpDataMCup_isLoaded = true;
  }
  return *iFJ3jesPileUpDataMCup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesPileUpDataMCup() {
  if (not iFJ4jesPileUpDataMCup_isLoaded) {
    if (iFJ4jesPileUpDataMCup_branch != 0) {
      iFJ4jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesPileUpDataMCup_isLoaded = true;
  }
  return *iFJ4jesPileUpDataMCup_;
}

const float &VVV0Tree::iVMD0jesPileUpDataMCup() {
  if (not iVMD0jesPileUpDataMCup_isLoaded) {
    if (iVMD0jesPileUpDataMCup_branch != 0) {
      iVMD0jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesPileUpDataMCup_isLoaded = true;
  }
  return iVMD0jesPileUpDataMCup_;
}

const float &VVV0Tree::iVMD1jesPileUpDataMCup() {
  if (not iVMD1jesPileUpDataMCup_isLoaded) {
    if (iVMD1jesPileUpDataMCup_branch != 0) {
      iVMD1jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesPileUpDataMCup_isLoaded = true;
  }
  return iVMD1jesPileUpDataMCup_;
}

const float &VVV0Tree::iVMD2jesPileUpDataMCup() {
  if (not iVMD2jesPileUpDataMCup_isLoaded) {
    if (iVMD2jesPileUpDataMCup_branch != 0) {
      iVMD2jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesPileUpDataMCup_isLoaded = true;
  }
  return iVMD2jesPileUpDataMCup_;
}

const float &VVV0Tree::iVMD3jesPileUpDataMCup() {
  if (not iVMD3jesPileUpDataMCup_isLoaded) {
    if (iVMD3jesPileUpDataMCup_branch != 0) {
      iVMD3jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesPileUpDataMCup_isLoaded = true;
  }
  return iVMD3jesPileUpDataMCup_;
}

const float &VVV0Tree::iVMD4jesPileUpDataMCup() {
  if (not iVMD4jesPileUpDataMCup_isLoaded) {
    if (iVMD4jesPileUpDataMCup_branch != 0) {
      iVMD4jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesPileUpDataMCup_isLoaded = true;
  }
  return iVMD4jesPileUpDataMCup_;
}

const float &VVV0Tree::iWMD0jesPileUpDataMCup() {
  if (not iWMD0jesPileUpDataMCup_isLoaded) {
    if (iWMD0jesPileUpDataMCup_branch != 0) {
      iWMD0jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesPileUpDataMCup_isLoaded = true;
  }
  return iWMD0jesPileUpDataMCup_;
}

const float &VVV0Tree::iWMD1jesPileUpDataMCup() {
  if (not iWMD1jesPileUpDataMCup_isLoaded) {
    if (iWMD1jesPileUpDataMCup_branch != 0) {
      iWMD1jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesPileUpDataMCup_isLoaded = true;
  }
  return iWMD1jesPileUpDataMCup_;
}

const float &VVV0Tree::iWMD2jesPileUpDataMCup() {
  if (not iWMD2jesPileUpDataMCup_isLoaded) {
    if (iWMD2jesPileUpDataMCup_branch != 0) {
      iWMD2jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesPileUpDataMCup_isLoaded = true;
  }
  return iWMD2jesPileUpDataMCup_;
}

const float &VVV0Tree::iWMD3jesPileUpDataMCup() {
  if (not iWMD3jesPileUpDataMCup_isLoaded) {
    if (iWMD3jesPileUpDataMCup_branch != 0) {
      iWMD3jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesPileUpDataMCup_isLoaded = true;
  }
  return iWMD3jesPileUpDataMCup_;
}

const float &VVV0Tree::iWMD4jesPileUpDataMCup() {
  if (not iWMD4jesPileUpDataMCup_isLoaded) {
    if (iWMD4jesPileUpDataMCup_branch != 0) {
      iWMD4jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesPileUpDataMCup_isLoaded = true;
  }
  return iWMD4jesPileUpDataMCup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesPileUpDataMCup() {
  if (not METjesPileUpDataMCup_isLoaded) {
    if (METjesPileUpDataMCup_branch != 0) {
      METjesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch METjesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    METjesPileUpDataMCup_isLoaded = true;
  }
  return *METjesPileUpDataMCup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesPileUpDataMCup() {
  if (not NujesPileUpDataMCup_isLoaded) {
    if (NujesPileUpDataMCup_branch != 0) {
      NujesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch NujesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    NujesPileUpDataMCup_isLoaded = true;
  }
  return *NujesPileUpDataMCup_;
}

const int &VVV0Tree::NJjesPileUpDataMCup() {
  if (not NJjesPileUpDataMCup_isLoaded) {
    if (NJjesPileUpDataMCup_branch != 0) {
      NJjesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch NJjesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    NJjesPileUpDataMCup_isLoaded = true;
  }
  return NJjesPileUpDataMCup_;
}

const int &VVV0Tree::NbLoosejesPileUpDataMCup() {
  if (not NbLoosejesPileUpDataMCup_isLoaded) {
    if (NbLoosejesPileUpDataMCup_branch != 0) {
      NbLoosejesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesPileUpDataMCup_isLoaded = true;
  }
  return NbLoosejesPileUpDataMCup_;
}

const int &VVV0Tree::NbMediumjesPileUpDataMCup() {
  if (not NbMediumjesPileUpDataMCup_isLoaded) {
    if (NbMediumjesPileUpDataMCup_branch != 0) {
      NbMediumjesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesPileUpDataMCup_isLoaded = true;
  }
  return NbMediumjesPileUpDataMCup_;
}

const int &VVV0Tree::NbTightjesPileUpDataMCup() {
  if (not NbTightjesPileUpDataMCup_isLoaded) {
    if (NbTightjesPileUpDataMCup_branch != 0) {
      NbTightjesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    NbTightjesPileUpDataMCup_isLoaded = true;
  }
  return NbTightjesPileUpDataMCup_;
}

const int &VVV0Tree::NoORNbLoosejesPileUpDataMCup() {
  if (not NoORNbLoosejesPileUpDataMCup_isLoaded) {
    if (NoORNbLoosejesPileUpDataMCup_branch != 0) {
      NoORNbLoosejesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesPileUpDataMCup_isLoaded = true;
  }
  return NoORNbLoosejesPileUpDataMCup_;
}

const int &VVV0Tree::NoORNbMediumjesPileUpDataMCup() {
  if (not NoORNbMediumjesPileUpDataMCup_isLoaded) {
    if (NoORNbMediumjesPileUpDataMCup_branch != 0) {
      NoORNbMediumjesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesPileUpDataMCup_isLoaded = true;
  }
  return NoORNbMediumjesPileUpDataMCup_;
}

const int &VVV0Tree::NoORNbTightjesPileUpDataMCup() {
  if (not NoORNbTightjesPileUpDataMCup_isLoaded) {
    if (NoORNbTightjesPileUpDataMCup_branch != 0) {
      NoORNbTightjesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesPileUpDataMCup_isLoaded = true;
  }
  return NoORNbTightjesPileUpDataMCup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesPileUpDataMCup() {
  if (not J0jesPileUpDataMCup_isLoaded) {
    if (J0jesPileUpDataMCup_branch != 0) {
      J0jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch J0jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    J0jesPileUpDataMCup_isLoaded = true;
  }
  return *J0jesPileUpDataMCup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesPileUpDataMCup() {
  if (not J1jesPileUpDataMCup_isLoaded) {
    if (J1jesPileUpDataMCup_branch != 0) {
      J1jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch J1jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    J1jesPileUpDataMCup_isLoaded = true;
  }
  return *J1jesPileUpDataMCup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesPileUpDataMCup() {
  if (not J2jesPileUpDataMCup_isLoaded) {
    if (J2jesPileUpDataMCup_branch != 0) {
      J2jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch J2jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    J2jesPileUpDataMCup_isLoaded = true;
  }
  return *J2jesPileUpDataMCup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesPileUpDataMCup() {
  if (not J3jesPileUpDataMCup_isLoaded) {
    if (J3jesPileUpDataMCup_branch != 0) {
      J3jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch J3jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    J3jesPileUpDataMCup_isLoaded = true;
  }
  return *J3jesPileUpDataMCup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesPileUpDataMCup() {
  if (not J4jesPileUpDataMCup_isLoaded) {
    if (J4jesPileUpDataMCup_branch != 0) {
      J4jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch J4jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    J4jesPileUpDataMCup_isLoaded = true;
  }
  return *J4jesPileUpDataMCup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesPileUpDataMCup() {
  if (not J5jesPileUpDataMCup_isLoaded) {
    if (J5jesPileUpDataMCup_branch != 0) {
      J5jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch J5jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    J5jesPileUpDataMCup_isLoaded = true;
  }
  return *J5jesPileUpDataMCup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesPileUpDataMCup() {
  if (not J6jesPileUpDataMCup_isLoaded) {
    if (J6jesPileUpDataMCup_branch != 0) {
      J6jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch J6jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    J6jesPileUpDataMCup_isLoaded = true;
  }
  return *J6jesPileUpDataMCup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesPileUpDataMCup() {
  if (not J7jesPileUpDataMCup_isLoaded) {
    if (J7jesPileUpDataMCup_branch != 0) {
      J7jesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch J7jesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    J7jesPileUpDataMCup_isLoaded = true;
  }
  return *J7jesPileUpDataMCup_;
}

const vector<int> &VVV0Tree::NQJGenjesPileUpDataMCup() {
  if (not NQJGenjesPileUpDataMCup_isLoaded) {
    if (NQJGenjesPileUpDataMCup_branch != 0) {
      NQJGenjesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesPileUpDataMCup_isLoaded = true;
  }
  return *NQJGenjesPileUpDataMCup_;
}

const vector<int> &VVV0Tree::NBJGenjesPileUpDataMCup() {
  if (not NBJGenjesPileUpDataMCup_isLoaded) {
    if (NBJGenjesPileUpDataMCup_branch != 0) {
      NBJGenjesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesPileUpDataMCup_isLoaded = true;
  }
  return *NBJGenjesPileUpDataMCup_;
}

const vector<int> &VVV0Tree::NLJGenjesPileUpDataMCup() {
  if (not NLJGenjesPileUpDataMCup_isLoaded) {
    if (NLJGenjesPileUpDataMCup_branch != 0) {
      NLJGenjesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesPileUpDataMCup_isLoaded = true;
  }
  return *NLJGenjesPileUpDataMCup_;
}

const float &VVV0Tree::MVVXjesPileUpDataMCup() {
  if (not MVVXjesPileUpDataMCup_isLoaded) {
    if (MVVXjesPileUpDataMCup_branch != 0) {
      MVVXjesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    MVVXjesPileUpDataMCup_isLoaded = true;
  }
  return MVVXjesPileUpDataMCup_;
}

const float &VVV0Tree::PtVVXjesPileUpDataMCup() {
  if (not PtVVXjesPileUpDataMCup_isLoaded) {
    if (PtVVXjesPileUpDataMCup_branch != 0) {
      PtVVXjesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesPileUpDataMCup_isLoaded = true;
  }
  return PtVVXjesPileUpDataMCup_;
}

const float &VVV0Tree::HTjesPileUpDataMCup() {
  if (not HTjesPileUpDataMCup_isLoaded) {
    if (HTjesPileUpDataMCup_branch != 0) {
      HTjesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch HTjesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    HTjesPileUpDataMCup_isLoaded = true;
  }
  return HTjesPileUpDataMCup_;
}

const float &VVV0Tree::HTJjesPileUpDataMCup() {
  if (not HTJjesPileUpDataMCup_isLoaded) {
    if (HTJjesPileUpDataMCup_branch != 0) {
      HTJjesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch HTJjesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    HTJjesPileUpDataMCup_isLoaded = true;
  }
  return HTJjesPileUpDataMCup_;
}

const float &VVV0Tree::HTFJjesPileUpDataMCup() {
  if (not HTFJjesPileUpDataMCup_isLoaded) {
    if (HTFJjesPileUpDataMCup_branch != 0) {
      HTFJjesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    HTFJjesPileUpDataMCup_isLoaded = true;
  }
  return HTFJjesPileUpDataMCup_;
}

const float &VVV0Tree::SumPtFJjesPileUpDataMCup() {
  if (not SumPtFJjesPileUpDataMCup_isLoaded) {
    if (SumPtFJjesPileUpDataMCup_branch != 0) {
      SumPtFJjesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesPileUpDataMCup_isLoaded = true;
  }
  return SumPtFJjesPileUpDataMCup_;
}

const float &VVV0Tree::SumPtJjesPileUpDataMCup() {
  if (not SumPtJjesPileUpDataMCup_isLoaded) {
    if (SumPtJjesPileUpDataMCup_branch != 0) {
      SumPtJjesPileUpDataMCup_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesPileUpDataMCup_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesPileUpDataMCup_isLoaded = true;
  }
  return SumPtJjesPileUpDataMCup_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesPileUpDataMCdn() {
  if (not JsjesPileUpDataMCdn_isLoaded) {
    if (JsjesPileUpDataMCdn_branch != 0) {
      JsjesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch JsjesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    JsjesPileUpDataMCdn_isLoaded = true;
  }
  return *JsjesPileUpDataMCdn_;
}

const int &VVV0Tree::NFJjesPileUpDataMCdn() {
  if (not NFJjesPileUpDataMCdn_isLoaded) {
    if (NFJjesPileUpDataMCdn_branch != 0) {
      NFJjesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch NFJjesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    NFJjesPileUpDataMCdn_isLoaded = true;
  }
  return NFJjesPileUpDataMCdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesPileUpDataMCdn() {
  if (not FJ0jesPileUpDataMCdn_isLoaded) {
    if (FJ0jesPileUpDataMCdn_branch != 0) {
      FJ0jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    FJ0jesPileUpDataMCdn_isLoaded = true;
  }
  return *FJ0jesPileUpDataMCdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesPileUpDataMCdn() {
  if (not FJ1jesPileUpDataMCdn_isLoaded) {
    if (FJ1jesPileUpDataMCdn_branch != 0) {
      FJ1jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    FJ1jesPileUpDataMCdn_isLoaded = true;
  }
  return *FJ1jesPileUpDataMCdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesPileUpDataMCdn() {
  if (not FJ2jesPileUpDataMCdn_isLoaded) {
    if (FJ2jesPileUpDataMCdn_branch != 0) {
      FJ2jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    FJ2jesPileUpDataMCdn_isLoaded = true;
  }
  return *FJ2jesPileUpDataMCdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesPileUpDataMCdn() {
  if (not FJ3jesPileUpDataMCdn_isLoaded) {
    if (FJ3jesPileUpDataMCdn_branch != 0) {
      FJ3jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    FJ3jesPileUpDataMCdn_isLoaded = true;
  }
  return *FJ3jesPileUpDataMCdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesPileUpDataMCdn() {
  if (not FJ4jesPileUpDataMCdn_isLoaded) {
    if (FJ4jesPileUpDataMCdn_branch != 0) {
      FJ4jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    FJ4jesPileUpDataMCdn_isLoaded = true;
  }
  return *FJ4jesPileUpDataMCdn_;
}

const float &VVV0Tree::VMD0jesPileUpDataMCdn() {
  if (not VMD0jesPileUpDataMCdn_isLoaded) {
    if (VMD0jesPileUpDataMCdn_branch != 0) {
      VMD0jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    VMD0jesPileUpDataMCdn_isLoaded = true;
  }
  return VMD0jesPileUpDataMCdn_;
}

const float &VVV0Tree::VMD1jesPileUpDataMCdn() {
  if (not VMD1jesPileUpDataMCdn_isLoaded) {
    if (VMD1jesPileUpDataMCdn_branch != 0) {
      VMD1jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    VMD1jesPileUpDataMCdn_isLoaded = true;
  }
  return VMD1jesPileUpDataMCdn_;
}

const float &VVV0Tree::VMD2jesPileUpDataMCdn() {
  if (not VMD2jesPileUpDataMCdn_isLoaded) {
    if (VMD2jesPileUpDataMCdn_branch != 0) {
      VMD2jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    VMD2jesPileUpDataMCdn_isLoaded = true;
  }
  return VMD2jesPileUpDataMCdn_;
}

const float &VVV0Tree::VMD3jesPileUpDataMCdn() {
  if (not VMD3jesPileUpDataMCdn_isLoaded) {
    if (VMD3jesPileUpDataMCdn_branch != 0) {
      VMD3jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    VMD3jesPileUpDataMCdn_isLoaded = true;
  }
  return VMD3jesPileUpDataMCdn_;
}

const float &VVV0Tree::VMD4jesPileUpDataMCdn() {
  if (not VMD4jesPileUpDataMCdn_isLoaded) {
    if (VMD4jesPileUpDataMCdn_branch != 0) {
      VMD4jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    VMD4jesPileUpDataMCdn_isLoaded = true;
  }
  return VMD4jesPileUpDataMCdn_;
}

const float &VVV0Tree::WMD0jesPileUpDataMCdn() {
  if (not WMD0jesPileUpDataMCdn_isLoaded) {
    if (WMD0jesPileUpDataMCdn_branch != 0) {
      WMD0jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    WMD0jesPileUpDataMCdn_isLoaded = true;
  }
  return WMD0jesPileUpDataMCdn_;
}

const float &VVV0Tree::WMD1jesPileUpDataMCdn() {
  if (not WMD1jesPileUpDataMCdn_isLoaded) {
    if (WMD1jesPileUpDataMCdn_branch != 0) {
      WMD1jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    WMD1jesPileUpDataMCdn_isLoaded = true;
  }
  return WMD1jesPileUpDataMCdn_;
}

const float &VVV0Tree::WMD2jesPileUpDataMCdn() {
  if (not WMD2jesPileUpDataMCdn_isLoaded) {
    if (WMD2jesPileUpDataMCdn_branch != 0) {
      WMD2jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    WMD2jesPileUpDataMCdn_isLoaded = true;
  }
  return WMD2jesPileUpDataMCdn_;
}

const float &VVV0Tree::WMD3jesPileUpDataMCdn() {
  if (not WMD3jesPileUpDataMCdn_isLoaded) {
    if (WMD3jesPileUpDataMCdn_branch != 0) {
      WMD3jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    WMD3jesPileUpDataMCdn_isLoaded = true;
  }
  return WMD3jesPileUpDataMCdn_;
}

const float &VVV0Tree::WMD4jesPileUpDataMCdn() {
  if (not WMD4jesPileUpDataMCdn_isLoaded) {
    if (WMD4jesPileUpDataMCdn_branch != 0) {
      WMD4jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    WMD4jesPileUpDataMCdn_isLoaded = true;
  }
  return WMD4jesPileUpDataMCdn_;
}

const int &VVV0Tree::NQGen0jesPileUpDataMCdn() {
  if (not NQGen0jesPileUpDataMCdn_isLoaded) {
    if (NQGen0jesPileUpDataMCdn_branch != 0) {
      NQGen0jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesPileUpDataMCdn_isLoaded = true;
  }
  return NQGen0jesPileUpDataMCdn_;
}

const int &VVV0Tree::NQGen1jesPileUpDataMCdn() {
  if (not NQGen1jesPileUpDataMCdn_isLoaded) {
    if (NQGen1jesPileUpDataMCdn_branch != 0) {
      NQGen1jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesPileUpDataMCdn_isLoaded = true;
  }
  return NQGen1jesPileUpDataMCdn_;
}

const int &VVV0Tree::NQGen2jesPileUpDataMCdn() {
  if (not NQGen2jesPileUpDataMCdn_isLoaded) {
    if (NQGen2jesPileUpDataMCdn_branch != 0) {
      NQGen2jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesPileUpDataMCdn_isLoaded = true;
  }
  return NQGen2jesPileUpDataMCdn_;
}

const int &VVV0Tree::NQGen3jesPileUpDataMCdn() {
  if (not NQGen3jesPileUpDataMCdn_isLoaded) {
    if (NQGen3jesPileUpDataMCdn_branch != 0) {
      NQGen3jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesPileUpDataMCdn_isLoaded = true;
  }
  return NQGen3jesPileUpDataMCdn_;
}

const int &VVV0Tree::NQGen4jesPileUpDataMCdn() {
  if (not NQGen4jesPileUpDataMCdn_isLoaded) {
    if (NQGen4jesPileUpDataMCdn_branch != 0) {
      NQGen4jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesPileUpDataMCdn_isLoaded = true;
  }
  return NQGen4jesPileUpDataMCdn_;
}

const int &VVV0Tree::NBGen0jesPileUpDataMCdn() {
  if (not NBGen0jesPileUpDataMCdn_isLoaded) {
    if (NBGen0jesPileUpDataMCdn_branch != 0) {
      NBGen0jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesPileUpDataMCdn_isLoaded = true;
  }
  return NBGen0jesPileUpDataMCdn_;
}

const int &VVV0Tree::NBGen1jesPileUpDataMCdn() {
  if (not NBGen1jesPileUpDataMCdn_isLoaded) {
    if (NBGen1jesPileUpDataMCdn_branch != 0) {
      NBGen1jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesPileUpDataMCdn_isLoaded = true;
  }
  return NBGen1jesPileUpDataMCdn_;
}

const int &VVV0Tree::NBGen2jesPileUpDataMCdn() {
  if (not NBGen2jesPileUpDataMCdn_isLoaded) {
    if (NBGen2jesPileUpDataMCdn_branch != 0) {
      NBGen2jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesPileUpDataMCdn_isLoaded = true;
  }
  return NBGen2jesPileUpDataMCdn_;
}

const int &VVV0Tree::NBGen3jesPileUpDataMCdn() {
  if (not NBGen3jesPileUpDataMCdn_isLoaded) {
    if (NBGen3jesPileUpDataMCdn_branch != 0) {
      NBGen3jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesPileUpDataMCdn_isLoaded = true;
  }
  return NBGen3jesPileUpDataMCdn_;
}

const int &VVV0Tree::NBGen4jesPileUpDataMCdn() {
  if (not NBGen4jesPileUpDataMCdn_isLoaded) {
    if (NBGen4jesPileUpDataMCdn_branch != 0) {
      NBGen4jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesPileUpDataMCdn_isLoaded = true;
  }
  return NBGen4jesPileUpDataMCdn_;
}

const int &VVV0Tree::NLGen0jesPileUpDataMCdn() {
  if (not NLGen0jesPileUpDataMCdn_isLoaded) {
    if (NLGen0jesPileUpDataMCdn_branch != 0) {
      NLGen0jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesPileUpDataMCdn_isLoaded = true;
  }
  return NLGen0jesPileUpDataMCdn_;
}

const int &VVV0Tree::NLGen1jesPileUpDataMCdn() {
  if (not NLGen1jesPileUpDataMCdn_isLoaded) {
    if (NLGen1jesPileUpDataMCdn_branch != 0) {
      NLGen1jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesPileUpDataMCdn_isLoaded = true;
  }
  return NLGen1jesPileUpDataMCdn_;
}

const int &VVV0Tree::NLGen2jesPileUpDataMCdn() {
  if (not NLGen2jesPileUpDataMCdn_isLoaded) {
    if (NLGen2jesPileUpDataMCdn_branch != 0) {
      NLGen2jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesPileUpDataMCdn_isLoaded = true;
  }
  return NLGen2jesPileUpDataMCdn_;
}

const int &VVV0Tree::NLGen3jesPileUpDataMCdn() {
  if (not NLGen3jesPileUpDataMCdn_isLoaded) {
    if (NLGen3jesPileUpDataMCdn_branch != 0) {
      NLGen3jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesPileUpDataMCdn_isLoaded = true;
  }
  return NLGen3jesPileUpDataMCdn_;
}

const int &VVV0Tree::NLGen4jesPileUpDataMCdn() {
  if (not NLGen4jesPileUpDataMCdn_isLoaded) {
    if (NLGen4jesPileUpDataMCdn_branch != 0) {
      NLGen4jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesPileUpDataMCdn_isLoaded = true;
  }
  return NLGen4jesPileUpDataMCdn_;
}

const int &VVV0Tree::NVQGen0jesPileUpDataMCdn() {
  if (not NVQGen0jesPileUpDataMCdn_isLoaded) {
    if (NVQGen0jesPileUpDataMCdn_branch != 0) {
      NVQGen0jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesPileUpDataMCdn_isLoaded = true;
  }
  return NVQGen0jesPileUpDataMCdn_;
}

const int &VVV0Tree::NVQGen1jesPileUpDataMCdn() {
  if (not NVQGen1jesPileUpDataMCdn_isLoaded) {
    if (NVQGen1jesPileUpDataMCdn_branch != 0) {
      NVQGen1jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesPileUpDataMCdn_isLoaded = true;
  }
  return NVQGen1jesPileUpDataMCdn_;
}

const int &VVV0Tree::NVQGen2jesPileUpDataMCdn() {
  if (not NVQGen2jesPileUpDataMCdn_isLoaded) {
    if (NVQGen2jesPileUpDataMCdn_branch != 0) {
      NVQGen2jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesPileUpDataMCdn_isLoaded = true;
  }
  return NVQGen2jesPileUpDataMCdn_;
}

const int &VVV0Tree::NVQGen3jesPileUpDataMCdn() {
  if (not NVQGen3jesPileUpDataMCdn_isLoaded) {
    if (NVQGen3jesPileUpDataMCdn_branch != 0) {
      NVQGen3jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesPileUpDataMCdn_isLoaded = true;
  }
  return NVQGen3jesPileUpDataMCdn_;
}

const int &VVV0Tree::NVQGen4jesPileUpDataMCdn() {
  if (not NVQGen4jesPileUpDataMCdn_isLoaded) {
    if (NVQGen4jesPileUpDataMCdn_branch != 0) {
      NVQGen4jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesPileUpDataMCdn_isLoaded = true;
  }
  return NVQGen4jesPileUpDataMCdn_;
}

const int &VVV0Tree::NiFJjesPileUpDataMCdn() {
  if (not NiFJjesPileUpDataMCdn_isLoaded) {
    if (NiFJjesPileUpDataMCdn_branch != 0) {
      NiFJjesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    NiFJjesPileUpDataMCdn_isLoaded = true;
  }
  return NiFJjesPileUpDataMCdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesPileUpDataMCdn() {
  if (not iFJ0jesPileUpDataMCdn_isLoaded) {
    if (iFJ0jesPileUpDataMCdn_branch != 0) {
      iFJ0jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesPileUpDataMCdn_isLoaded = true;
  }
  return *iFJ0jesPileUpDataMCdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesPileUpDataMCdn() {
  if (not iFJ1jesPileUpDataMCdn_isLoaded) {
    if (iFJ1jesPileUpDataMCdn_branch != 0) {
      iFJ1jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesPileUpDataMCdn_isLoaded = true;
  }
  return *iFJ1jesPileUpDataMCdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesPileUpDataMCdn() {
  if (not iFJ2jesPileUpDataMCdn_isLoaded) {
    if (iFJ2jesPileUpDataMCdn_branch != 0) {
      iFJ2jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesPileUpDataMCdn_isLoaded = true;
  }
  return *iFJ2jesPileUpDataMCdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesPileUpDataMCdn() {
  if (not iFJ3jesPileUpDataMCdn_isLoaded) {
    if (iFJ3jesPileUpDataMCdn_branch != 0) {
      iFJ3jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesPileUpDataMCdn_isLoaded = true;
  }
  return *iFJ3jesPileUpDataMCdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesPileUpDataMCdn() {
  if (not iFJ4jesPileUpDataMCdn_isLoaded) {
    if (iFJ4jesPileUpDataMCdn_branch != 0) {
      iFJ4jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesPileUpDataMCdn_isLoaded = true;
  }
  return *iFJ4jesPileUpDataMCdn_;
}

const float &VVV0Tree::iVMD0jesPileUpDataMCdn() {
  if (not iVMD0jesPileUpDataMCdn_isLoaded) {
    if (iVMD0jesPileUpDataMCdn_branch != 0) {
      iVMD0jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesPileUpDataMCdn_isLoaded = true;
  }
  return iVMD0jesPileUpDataMCdn_;
}

const float &VVV0Tree::iVMD1jesPileUpDataMCdn() {
  if (not iVMD1jesPileUpDataMCdn_isLoaded) {
    if (iVMD1jesPileUpDataMCdn_branch != 0) {
      iVMD1jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesPileUpDataMCdn_isLoaded = true;
  }
  return iVMD1jesPileUpDataMCdn_;
}

const float &VVV0Tree::iVMD2jesPileUpDataMCdn() {
  if (not iVMD2jesPileUpDataMCdn_isLoaded) {
    if (iVMD2jesPileUpDataMCdn_branch != 0) {
      iVMD2jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesPileUpDataMCdn_isLoaded = true;
  }
  return iVMD2jesPileUpDataMCdn_;
}

const float &VVV0Tree::iVMD3jesPileUpDataMCdn() {
  if (not iVMD3jesPileUpDataMCdn_isLoaded) {
    if (iVMD3jesPileUpDataMCdn_branch != 0) {
      iVMD3jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesPileUpDataMCdn_isLoaded = true;
  }
  return iVMD3jesPileUpDataMCdn_;
}

const float &VVV0Tree::iVMD4jesPileUpDataMCdn() {
  if (not iVMD4jesPileUpDataMCdn_isLoaded) {
    if (iVMD4jesPileUpDataMCdn_branch != 0) {
      iVMD4jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesPileUpDataMCdn_isLoaded = true;
  }
  return iVMD4jesPileUpDataMCdn_;
}

const float &VVV0Tree::iWMD0jesPileUpDataMCdn() {
  if (not iWMD0jesPileUpDataMCdn_isLoaded) {
    if (iWMD0jesPileUpDataMCdn_branch != 0) {
      iWMD0jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesPileUpDataMCdn_isLoaded = true;
  }
  return iWMD0jesPileUpDataMCdn_;
}

const float &VVV0Tree::iWMD1jesPileUpDataMCdn() {
  if (not iWMD1jesPileUpDataMCdn_isLoaded) {
    if (iWMD1jesPileUpDataMCdn_branch != 0) {
      iWMD1jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesPileUpDataMCdn_isLoaded = true;
  }
  return iWMD1jesPileUpDataMCdn_;
}

const float &VVV0Tree::iWMD2jesPileUpDataMCdn() {
  if (not iWMD2jesPileUpDataMCdn_isLoaded) {
    if (iWMD2jesPileUpDataMCdn_branch != 0) {
      iWMD2jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesPileUpDataMCdn_isLoaded = true;
  }
  return iWMD2jesPileUpDataMCdn_;
}

const float &VVV0Tree::iWMD3jesPileUpDataMCdn() {
  if (not iWMD3jesPileUpDataMCdn_isLoaded) {
    if (iWMD3jesPileUpDataMCdn_branch != 0) {
      iWMD3jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesPileUpDataMCdn_isLoaded = true;
  }
  return iWMD3jesPileUpDataMCdn_;
}

const float &VVV0Tree::iWMD4jesPileUpDataMCdn() {
  if (not iWMD4jesPileUpDataMCdn_isLoaded) {
    if (iWMD4jesPileUpDataMCdn_branch != 0) {
      iWMD4jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesPileUpDataMCdn_isLoaded = true;
  }
  return iWMD4jesPileUpDataMCdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesPileUpDataMCdn() {
  if (not METjesPileUpDataMCdn_isLoaded) {
    if (METjesPileUpDataMCdn_branch != 0) {
      METjesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch METjesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    METjesPileUpDataMCdn_isLoaded = true;
  }
  return *METjesPileUpDataMCdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesPileUpDataMCdn() {
  if (not NujesPileUpDataMCdn_isLoaded) {
    if (NujesPileUpDataMCdn_branch != 0) {
      NujesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch NujesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    NujesPileUpDataMCdn_isLoaded = true;
  }
  return *NujesPileUpDataMCdn_;
}

const int &VVV0Tree::NJjesPileUpDataMCdn() {
  if (not NJjesPileUpDataMCdn_isLoaded) {
    if (NJjesPileUpDataMCdn_branch != 0) {
      NJjesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch NJjesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    NJjesPileUpDataMCdn_isLoaded = true;
  }
  return NJjesPileUpDataMCdn_;
}

const int &VVV0Tree::NbLoosejesPileUpDataMCdn() {
  if (not NbLoosejesPileUpDataMCdn_isLoaded) {
    if (NbLoosejesPileUpDataMCdn_branch != 0) {
      NbLoosejesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesPileUpDataMCdn_isLoaded = true;
  }
  return NbLoosejesPileUpDataMCdn_;
}

const int &VVV0Tree::NbMediumjesPileUpDataMCdn() {
  if (not NbMediumjesPileUpDataMCdn_isLoaded) {
    if (NbMediumjesPileUpDataMCdn_branch != 0) {
      NbMediumjesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesPileUpDataMCdn_isLoaded = true;
  }
  return NbMediumjesPileUpDataMCdn_;
}

const int &VVV0Tree::NbTightjesPileUpDataMCdn() {
  if (not NbTightjesPileUpDataMCdn_isLoaded) {
    if (NbTightjesPileUpDataMCdn_branch != 0) {
      NbTightjesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    NbTightjesPileUpDataMCdn_isLoaded = true;
  }
  return NbTightjesPileUpDataMCdn_;
}

const int &VVV0Tree::NoORNbLoosejesPileUpDataMCdn() {
  if (not NoORNbLoosejesPileUpDataMCdn_isLoaded) {
    if (NoORNbLoosejesPileUpDataMCdn_branch != 0) {
      NoORNbLoosejesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesPileUpDataMCdn_isLoaded = true;
  }
  return NoORNbLoosejesPileUpDataMCdn_;
}

const int &VVV0Tree::NoORNbMediumjesPileUpDataMCdn() {
  if (not NoORNbMediumjesPileUpDataMCdn_isLoaded) {
    if (NoORNbMediumjesPileUpDataMCdn_branch != 0) {
      NoORNbMediumjesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesPileUpDataMCdn_isLoaded = true;
  }
  return NoORNbMediumjesPileUpDataMCdn_;
}

const int &VVV0Tree::NoORNbTightjesPileUpDataMCdn() {
  if (not NoORNbTightjesPileUpDataMCdn_isLoaded) {
    if (NoORNbTightjesPileUpDataMCdn_branch != 0) {
      NoORNbTightjesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesPileUpDataMCdn_isLoaded = true;
  }
  return NoORNbTightjesPileUpDataMCdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesPileUpDataMCdn() {
  if (not J0jesPileUpDataMCdn_isLoaded) {
    if (J0jesPileUpDataMCdn_branch != 0) {
      J0jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch J0jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    J0jesPileUpDataMCdn_isLoaded = true;
  }
  return *J0jesPileUpDataMCdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesPileUpDataMCdn() {
  if (not J1jesPileUpDataMCdn_isLoaded) {
    if (J1jesPileUpDataMCdn_branch != 0) {
      J1jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch J1jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    J1jesPileUpDataMCdn_isLoaded = true;
  }
  return *J1jesPileUpDataMCdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesPileUpDataMCdn() {
  if (not J2jesPileUpDataMCdn_isLoaded) {
    if (J2jesPileUpDataMCdn_branch != 0) {
      J2jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch J2jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    J2jesPileUpDataMCdn_isLoaded = true;
  }
  return *J2jesPileUpDataMCdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesPileUpDataMCdn() {
  if (not J3jesPileUpDataMCdn_isLoaded) {
    if (J3jesPileUpDataMCdn_branch != 0) {
      J3jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch J3jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    J3jesPileUpDataMCdn_isLoaded = true;
  }
  return *J3jesPileUpDataMCdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesPileUpDataMCdn() {
  if (not J4jesPileUpDataMCdn_isLoaded) {
    if (J4jesPileUpDataMCdn_branch != 0) {
      J4jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch J4jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    J4jesPileUpDataMCdn_isLoaded = true;
  }
  return *J4jesPileUpDataMCdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesPileUpDataMCdn() {
  if (not J5jesPileUpDataMCdn_isLoaded) {
    if (J5jesPileUpDataMCdn_branch != 0) {
      J5jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch J5jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    J5jesPileUpDataMCdn_isLoaded = true;
  }
  return *J5jesPileUpDataMCdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesPileUpDataMCdn() {
  if (not J6jesPileUpDataMCdn_isLoaded) {
    if (J6jesPileUpDataMCdn_branch != 0) {
      J6jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch J6jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    J6jesPileUpDataMCdn_isLoaded = true;
  }
  return *J6jesPileUpDataMCdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesPileUpDataMCdn() {
  if (not J7jesPileUpDataMCdn_isLoaded) {
    if (J7jesPileUpDataMCdn_branch != 0) {
      J7jesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch J7jesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    J7jesPileUpDataMCdn_isLoaded = true;
  }
  return *J7jesPileUpDataMCdn_;
}

const vector<int> &VVV0Tree::NQJGenjesPileUpDataMCdn() {
  if (not NQJGenjesPileUpDataMCdn_isLoaded) {
    if (NQJGenjesPileUpDataMCdn_branch != 0) {
      NQJGenjesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesPileUpDataMCdn_isLoaded = true;
  }
  return *NQJGenjesPileUpDataMCdn_;
}

const vector<int> &VVV0Tree::NBJGenjesPileUpDataMCdn() {
  if (not NBJGenjesPileUpDataMCdn_isLoaded) {
    if (NBJGenjesPileUpDataMCdn_branch != 0) {
      NBJGenjesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesPileUpDataMCdn_isLoaded = true;
  }
  return *NBJGenjesPileUpDataMCdn_;
}

const vector<int> &VVV0Tree::NLJGenjesPileUpDataMCdn() {
  if (not NLJGenjesPileUpDataMCdn_isLoaded) {
    if (NLJGenjesPileUpDataMCdn_branch != 0) {
      NLJGenjesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesPileUpDataMCdn_isLoaded = true;
  }
  return *NLJGenjesPileUpDataMCdn_;
}

const float &VVV0Tree::MVVXjesPileUpDataMCdn() {
  if (not MVVXjesPileUpDataMCdn_isLoaded) {
    if (MVVXjesPileUpDataMCdn_branch != 0) {
      MVVXjesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    MVVXjesPileUpDataMCdn_isLoaded = true;
  }
  return MVVXjesPileUpDataMCdn_;
}

const float &VVV0Tree::PtVVXjesPileUpDataMCdn() {
  if (not PtVVXjesPileUpDataMCdn_isLoaded) {
    if (PtVVXjesPileUpDataMCdn_branch != 0) {
      PtVVXjesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesPileUpDataMCdn_isLoaded = true;
  }
  return PtVVXjesPileUpDataMCdn_;
}

const float &VVV0Tree::HTjesPileUpDataMCdn() {
  if (not HTjesPileUpDataMCdn_isLoaded) {
    if (HTjesPileUpDataMCdn_branch != 0) {
      HTjesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch HTjesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    HTjesPileUpDataMCdn_isLoaded = true;
  }
  return HTjesPileUpDataMCdn_;
}

const float &VVV0Tree::HTJjesPileUpDataMCdn() {
  if (not HTJjesPileUpDataMCdn_isLoaded) {
    if (HTJjesPileUpDataMCdn_branch != 0) {
      HTJjesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch HTJjesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    HTJjesPileUpDataMCdn_isLoaded = true;
  }
  return HTJjesPileUpDataMCdn_;
}

const float &VVV0Tree::HTFJjesPileUpDataMCdn() {
  if (not HTFJjesPileUpDataMCdn_isLoaded) {
    if (HTFJjesPileUpDataMCdn_branch != 0) {
      HTFJjesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    HTFJjesPileUpDataMCdn_isLoaded = true;
  }
  return HTFJjesPileUpDataMCdn_;
}

const float &VVV0Tree::SumPtFJjesPileUpDataMCdn() {
  if (not SumPtFJjesPileUpDataMCdn_isLoaded) {
    if (SumPtFJjesPileUpDataMCdn_branch != 0) {
      SumPtFJjesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesPileUpDataMCdn_isLoaded = true;
  }
  return SumPtFJjesPileUpDataMCdn_;
}

const float &VVV0Tree::SumPtJjesPileUpDataMCdn() {
  if (not SumPtJjesPileUpDataMCdn_isLoaded) {
    if (SumPtJjesPileUpDataMCdn_branch != 0) {
      SumPtJjesPileUpDataMCdn_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesPileUpDataMCdn_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesPileUpDataMCdn_isLoaded = true;
  }
  return SumPtJjesPileUpDataMCdn_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesPileUpPtRefup() {
  if (not JsjesPileUpPtRefup_isLoaded) {
    if (JsjesPileUpPtRefup_branch != 0) {
      JsjesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch JsjesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    JsjesPileUpPtRefup_isLoaded = true;
  }
  return *JsjesPileUpPtRefup_;
}

const int &VVV0Tree::NFJjesPileUpPtRefup() {
  if (not NFJjesPileUpPtRefup_isLoaded) {
    if (NFJjesPileUpPtRefup_branch != 0) {
      NFJjesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch NFJjesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    NFJjesPileUpPtRefup_isLoaded = true;
  }
  return NFJjesPileUpPtRefup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesPileUpPtRefup() {
  if (not FJ0jesPileUpPtRefup_isLoaded) {
    if (FJ0jesPileUpPtRefup_branch != 0) {
      FJ0jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    FJ0jesPileUpPtRefup_isLoaded = true;
  }
  return *FJ0jesPileUpPtRefup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesPileUpPtRefup() {
  if (not FJ1jesPileUpPtRefup_isLoaded) {
    if (FJ1jesPileUpPtRefup_branch != 0) {
      FJ1jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    FJ1jesPileUpPtRefup_isLoaded = true;
  }
  return *FJ1jesPileUpPtRefup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesPileUpPtRefup() {
  if (not FJ2jesPileUpPtRefup_isLoaded) {
    if (FJ2jesPileUpPtRefup_branch != 0) {
      FJ2jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    FJ2jesPileUpPtRefup_isLoaded = true;
  }
  return *FJ2jesPileUpPtRefup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesPileUpPtRefup() {
  if (not FJ3jesPileUpPtRefup_isLoaded) {
    if (FJ3jesPileUpPtRefup_branch != 0) {
      FJ3jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    FJ3jesPileUpPtRefup_isLoaded = true;
  }
  return *FJ3jesPileUpPtRefup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesPileUpPtRefup() {
  if (not FJ4jesPileUpPtRefup_isLoaded) {
    if (FJ4jesPileUpPtRefup_branch != 0) {
      FJ4jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    FJ4jesPileUpPtRefup_isLoaded = true;
  }
  return *FJ4jesPileUpPtRefup_;
}

const float &VVV0Tree::VMD0jesPileUpPtRefup() {
  if (not VMD0jesPileUpPtRefup_isLoaded) {
    if (VMD0jesPileUpPtRefup_branch != 0) {
      VMD0jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    VMD0jesPileUpPtRefup_isLoaded = true;
  }
  return VMD0jesPileUpPtRefup_;
}

const float &VVV0Tree::VMD1jesPileUpPtRefup() {
  if (not VMD1jesPileUpPtRefup_isLoaded) {
    if (VMD1jesPileUpPtRefup_branch != 0) {
      VMD1jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    VMD1jesPileUpPtRefup_isLoaded = true;
  }
  return VMD1jesPileUpPtRefup_;
}

const float &VVV0Tree::VMD2jesPileUpPtRefup() {
  if (not VMD2jesPileUpPtRefup_isLoaded) {
    if (VMD2jesPileUpPtRefup_branch != 0) {
      VMD2jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    VMD2jesPileUpPtRefup_isLoaded = true;
  }
  return VMD2jesPileUpPtRefup_;
}

const float &VVV0Tree::VMD3jesPileUpPtRefup() {
  if (not VMD3jesPileUpPtRefup_isLoaded) {
    if (VMD3jesPileUpPtRefup_branch != 0) {
      VMD3jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    VMD3jesPileUpPtRefup_isLoaded = true;
  }
  return VMD3jesPileUpPtRefup_;
}

const float &VVV0Tree::VMD4jesPileUpPtRefup() {
  if (not VMD4jesPileUpPtRefup_isLoaded) {
    if (VMD4jesPileUpPtRefup_branch != 0) {
      VMD4jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    VMD4jesPileUpPtRefup_isLoaded = true;
  }
  return VMD4jesPileUpPtRefup_;
}

const float &VVV0Tree::WMD0jesPileUpPtRefup() {
  if (not WMD0jesPileUpPtRefup_isLoaded) {
    if (WMD0jesPileUpPtRefup_branch != 0) {
      WMD0jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    WMD0jesPileUpPtRefup_isLoaded = true;
  }
  return WMD0jesPileUpPtRefup_;
}

const float &VVV0Tree::WMD1jesPileUpPtRefup() {
  if (not WMD1jesPileUpPtRefup_isLoaded) {
    if (WMD1jesPileUpPtRefup_branch != 0) {
      WMD1jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    WMD1jesPileUpPtRefup_isLoaded = true;
  }
  return WMD1jesPileUpPtRefup_;
}

const float &VVV0Tree::WMD2jesPileUpPtRefup() {
  if (not WMD2jesPileUpPtRefup_isLoaded) {
    if (WMD2jesPileUpPtRefup_branch != 0) {
      WMD2jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    WMD2jesPileUpPtRefup_isLoaded = true;
  }
  return WMD2jesPileUpPtRefup_;
}

const float &VVV0Tree::WMD3jesPileUpPtRefup() {
  if (not WMD3jesPileUpPtRefup_isLoaded) {
    if (WMD3jesPileUpPtRefup_branch != 0) {
      WMD3jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    WMD3jesPileUpPtRefup_isLoaded = true;
  }
  return WMD3jesPileUpPtRefup_;
}

const float &VVV0Tree::WMD4jesPileUpPtRefup() {
  if (not WMD4jesPileUpPtRefup_isLoaded) {
    if (WMD4jesPileUpPtRefup_branch != 0) {
      WMD4jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    WMD4jesPileUpPtRefup_isLoaded = true;
  }
  return WMD4jesPileUpPtRefup_;
}

const int &VVV0Tree::NQGen0jesPileUpPtRefup() {
  if (not NQGen0jesPileUpPtRefup_isLoaded) {
    if (NQGen0jesPileUpPtRefup_branch != 0) {
      NQGen0jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesPileUpPtRefup_isLoaded = true;
  }
  return NQGen0jesPileUpPtRefup_;
}

const int &VVV0Tree::NQGen1jesPileUpPtRefup() {
  if (not NQGen1jesPileUpPtRefup_isLoaded) {
    if (NQGen1jesPileUpPtRefup_branch != 0) {
      NQGen1jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesPileUpPtRefup_isLoaded = true;
  }
  return NQGen1jesPileUpPtRefup_;
}

const int &VVV0Tree::NQGen2jesPileUpPtRefup() {
  if (not NQGen2jesPileUpPtRefup_isLoaded) {
    if (NQGen2jesPileUpPtRefup_branch != 0) {
      NQGen2jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesPileUpPtRefup_isLoaded = true;
  }
  return NQGen2jesPileUpPtRefup_;
}

const int &VVV0Tree::NQGen3jesPileUpPtRefup() {
  if (not NQGen3jesPileUpPtRefup_isLoaded) {
    if (NQGen3jesPileUpPtRefup_branch != 0) {
      NQGen3jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesPileUpPtRefup_isLoaded = true;
  }
  return NQGen3jesPileUpPtRefup_;
}

const int &VVV0Tree::NQGen4jesPileUpPtRefup() {
  if (not NQGen4jesPileUpPtRefup_isLoaded) {
    if (NQGen4jesPileUpPtRefup_branch != 0) {
      NQGen4jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesPileUpPtRefup_isLoaded = true;
  }
  return NQGen4jesPileUpPtRefup_;
}

const int &VVV0Tree::NBGen0jesPileUpPtRefup() {
  if (not NBGen0jesPileUpPtRefup_isLoaded) {
    if (NBGen0jesPileUpPtRefup_branch != 0) {
      NBGen0jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesPileUpPtRefup_isLoaded = true;
  }
  return NBGen0jesPileUpPtRefup_;
}

const int &VVV0Tree::NBGen1jesPileUpPtRefup() {
  if (not NBGen1jesPileUpPtRefup_isLoaded) {
    if (NBGen1jesPileUpPtRefup_branch != 0) {
      NBGen1jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesPileUpPtRefup_isLoaded = true;
  }
  return NBGen1jesPileUpPtRefup_;
}

const int &VVV0Tree::NBGen2jesPileUpPtRefup() {
  if (not NBGen2jesPileUpPtRefup_isLoaded) {
    if (NBGen2jesPileUpPtRefup_branch != 0) {
      NBGen2jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesPileUpPtRefup_isLoaded = true;
  }
  return NBGen2jesPileUpPtRefup_;
}

const int &VVV0Tree::NBGen3jesPileUpPtRefup() {
  if (not NBGen3jesPileUpPtRefup_isLoaded) {
    if (NBGen3jesPileUpPtRefup_branch != 0) {
      NBGen3jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesPileUpPtRefup_isLoaded = true;
  }
  return NBGen3jesPileUpPtRefup_;
}

const int &VVV0Tree::NBGen4jesPileUpPtRefup() {
  if (not NBGen4jesPileUpPtRefup_isLoaded) {
    if (NBGen4jesPileUpPtRefup_branch != 0) {
      NBGen4jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesPileUpPtRefup_isLoaded = true;
  }
  return NBGen4jesPileUpPtRefup_;
}

const int &VVV0Tree::NLGen0jesPileUpPtRefup() {
  if (not NLGen0jesPileUpPtRefup_isLoaded) {
    if (NLGen0jesPileUpPtRefup_branch != 0) {
      NLGen0jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesPileUpPtRefup_isLoaded = true;
  }
  return NLGen0jesPileUpPtRefup_;
}

const int &VVV0Tree::NLGen1jesPileUpPtRefup() {
  if (not NLGen1jesPileUpPtRefup_isLoaded) {
    if (NLGen1jesPileUpPtRefup_branch != 0) {
      NLGen1jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesPileUpPtRefup_isLoaded = true;
  }
  return NLGen1jesPileUpPtRefup_;
}

const int &VVV0Tree::NLGen2jesPileUpPtRefup() {
  if (not NLGen2jesPileUpPtRefup_isLoaded) {
    if (NLGen2jesPileUpPtRefup_branch != 0) {
      NLGen2jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesPileUpPtRefup_isLoaded = true;
  }
  return NLGen2jesPileUpPtRefup_;
}

const int &VVV0Tree::NLGen3jesPileUpPtRefup() {
  if (not NLGen3jesPileUpPtRefup_isLoaded) {
    if (NLGen3jesPileUpPtRefup_branch != 0) {
      NLGen3jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesPileUpPtRefup_isLoaded = true;
  }
  return NLGen3jesPileUpPtRefup_;
}

const int &VVV0Tree::NLGen4jesPileUpPtRefup() {
  if (not NLGen4jesPileUpPtRefup_isLoaded) {
    if (NLGen4jesPileUpPtRefup_branch != 0) {
      NLGen4jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesPileUpPtRefup_isLoaded = true;
  }
  return NLGen4jesPileUpPtRefup_;
}

const int &VVV0Tree::NVQGen0jesPileUpPtRefup() {
  if (not NVQGen0jesPileUpPtRefup_isLoaded) {
    if (NVQGen0jesPileUpPtRefup_branch != 0) {
      NVQGen0jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesPileUpPtRefup_isLoaded = true;
  }
  return NVQGen0jesPileUpPtRefup_;
}

const int &VVV0Tree::NVQGen1jesPileUpPtRefup() {
  if (not NVQGen1jesPileUpPtRefup_isLoaded) {
    if (NVQGen1jesPileUpPtRefup_branch != 0) {
      NVQGen1jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesPileUpPtRefup_isLoaded = true;
  }
  return NVQGen1jesPileUpPtRefup_;
}

const int &VVV0Tree::NVQGen2jesPileUpPtRefup() {
  if (not NVQGen2jesPileUpPtRefup_isLoaded) {
    if (NVQGen2jesPileUpPtRefup_branch != 0) {
      NVQGen2jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesPileUpPtRefup_isLoaded = true;
  }
  return NVQGen2jesPileUpPtRefup_;
}

const int &VVV0Tree::NVQGen3jesPileUpPtRefup() {
  if (not NVQGen3jesPileUpPtRefup_isLoaded) {
    if (NVQGen3jesPileUpPtRefup_branch != 0) {
      NVQGen3jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesPileUpPtRefup_isLoaded = true;
  }
  return NVQGen3jesPileUpPtRefup_;
}

const int &VVV0Tree::NVQGen4jesPileUpPtRefup() {
  if (not NVQGen4jesPileUpPtRefup_isLoaded) {
    if (NVQGen4jesPileUpPtRefup_branch != 0) {
      NVQGen4jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesPileUpPtRefup_isLoaded = true;
  }
  return NVQGen4jesPileUpPtRefup_;
}

const int &VVV0Tree::NiFJjesPileUpPtRefup() {
  if (not NiFJjesPileUpPtRefup_isLoaded) {
    if (NiFJjesPileUpPtRefup_branch != 0) {
      NiFJjesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    NiFJjesPileUpPtRefup_isLoaded = true;
  }
  return NiFJjesPileUpPtRefup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesPileUpPtRefup() {
  if (not iFJ0jesPileUpPtRefup_isLoaded) {
    if (iFJ0jesPileUpPtRefup_branch != 0) {
      iFJ0jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesPileUpPtRefup_isLoaded = true;
  }
  return *iFJ0jesPileUpPtRefup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesPileUpPtRefup() {
  if (not iFJ1jesPileUpPtRefup_isLoaded) {
    if (iFJ1jesPileUpPtRefup_branch != 0) {
      iFJ1jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesPileUpPtRefup_isLoaded = true;
  }
  return *iFJ1jesPileUpPtRefup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesPileUpPtRefup() {
  if (not iFJ2jesPileUpPtRefup_isLoaded) {
    if (iFJ2jesPileUpPtRefup_branch != 0) {
      iFJ2jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesPileUpPtRefup_isLoaded = true;
  }
  return *iFJ2jesPileUpPtRefup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesPileUpPtRefup() {
  if (not iFJ3jesPileUpPtRefup_isLoaded) {
    if (iFJ3jesPileUpPtRefup_branch != 0) {
      iFJ3jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesPileUpPtRefup_isLoaded = true;
  }
  return *iFJ3jesPileUpPtRefup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesPileUpPtRefup() {
  if (not iFJ4jesPileUpPtRefup_isLoaded) {
    if (iFJ4jesPileUpPtRefup_branch != 0) {
      iFJ4jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesPileUpPtRefup_isLoaded = true;
  }
  return *iFJ4jesPileUpPtRefup_;
}

const float &VVV0Tree::iVMD0jesPileUpPtRefup() {
  if (not iVMD0jesPileUpPtRefup_isLoaded) {
    if (iVMD0jesPileUpPtRefup_branch != 0) {
      iVMD0jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesPileUpPtRefup_isLoaded = true;
  }
  return iVMD0jesPileUpPtRefup_;
}

const float &VVV0Tree::iVMD1jesPileUpPtRefup() {
  if (not iVMD1jesPileUpPtRefup_isLoaded) {
    if (iVMD1jesPileUpPtRefup_branch != 0) {
      iVMD1jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesPileUpPtRefup_isLoaded = true;
  }
  return iVMD1jesPileUpPtRefup_;
}

const float &VVV0Tree::iVMD2jesPileUpPtRefup() {
  if (not iVMD2jesPileUpPtRefup_isLoaded) {
    if (iVMD2jesPileUpPtRefup_branch != 0) {
      iVMD2jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesPileUpPtRefup_isLoaded = true;
  }
  return iVMD2jesPileUpPtRefup_;
}

const float &VVV0Tree::iVMD3jesPileUpPtRefup() {
  if (not iVMD3jesPileUpPtRefup_isLoaded) {
    if (iVMD3jesPileUpPtRefup_branch != 0) {
      iVMD3jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesPileUpPtRefup_isLoaded = true;
  }
  return iVMD3jesPileUpPtRefup_;
}

const float &VVV0Tree::iVMD4jesPileUpPtRefup() {
  if (not iVMD4jesPileUpPtRefup_isLoaded) {
    if (iVMD4jesPileUpPtRefup_branch != 0) {
      iVMD4jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesPileUpPtRefup_isLoaded = true;
  }
  return iVMD4jesPileUpPtRefup_;
}

const float &VVV0Tree::iWMD0jesPileUpPtRefup() {
  if (not iWMD0jesPileUpPtRefup_isLoaded) {
    if (iWMD0jesPileUpPtRefup_branch != 0) {
      iWMD0jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesPileUpPtRefup_isLoaded = true;
  }
  return iWMD0jesPileUpPtRefup_;
}

const float &VVV0Tree::iWMD1jesPileUpPtRefup() {
  if (not iWMD1jesPileUpPtRefup_isLoaded) {
    if (iWMD1jesPileUpPtRefup_branch != 0) {
      iWMD1jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesPileUpPtRefup_isLoaded = true;
  }
  return iWMD1jesPileUpPtRefup_;
}

const float &VVV0Tree::iWMD2jesPileUpPtRefup() {
  if (not iWMD2jesPileUpPtRefup_isLoaded) {
    if (iWMD2jesPileUpPtRefup_branch != 0) {
      iWMD2jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesPileUpPtRefup_isLoaded = true;
  }
  return iWMD2jesPileUpPtRefup_;
}

const float &VVV0Tree::iWMD3jesPileUpPtRefup() {
  if (not iWMD3jesPileUpPtRefup_isLoaded) {
    if (iWMD3jesPileUpPtRefup_branch != 0) {
      iWMD3jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesPileUpPtRefup_isLoaded = true;
  }
  return iWMD3jesPileUpPtRefup_;
}

const float &VVV0Tree::iWMD4jesPileUpPtRefup() {
  if (not iWMD4jesPileUpPtRefup_isLoaded) {
    if (iWMD4jesPileUpPtRefup_branch != 0) {
      iWMD4jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesPileUpPtRefup_isLoaded = true;
  }
  return iWMD4jesPileUpPtRefup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesPileUpPtRefup() {
  if (not METjesPileUpPtRefup_isLoaded) {
    if (METjesPileUpPtRefup_branch != 0) {
      METjesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch METjesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    METjesPileUpPtRefup_isLoaded = true;
  }
  return *METjesPileUpPtRefup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesPileUpPtRefup() {
  if (not NujesPileUpPtRefup_isLoaded) {
    if (NujesPileUpPtRefup_branch != 0) {
      NujesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch NujesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    NujesPileUpPtRefup_isLoaded = true;
  }
  return *NujesPileUpPtRefup_;
}

const int &VVV0Tree::NJjesPileUpPtRefup() {
  if (not NJjesPileUpPtRefup_isLoaded) {
    if (NJjesPileUpPtRefup_branch != 0) {
      NJjesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch NJjesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    NJjesPileUpPtRefup_isLoaded = true;
  }
  return NJjesPileUpPtRefup_;
}

const int &VVV0Tree::NbLoosejesPileUpPtRefup() {
  if (not NbLoosejesPileUpPtRefup_isLoaded) {
    if (NbLoosejesPileUpPtRefup_branch != 0) {
      NbLoosejesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesPileUpPtRefup_isLoaded = true;
  }
  return NbLoosejesPileUpPtRefup_;
}

const int &VVV0Tree::NbMediumjesPileUpPtRefup() {
  if (not NbMediumjesPileUpPtRefup_isLoaded) {
    if (NbMediumjesPileUpPtRefup_branch != 0) {
      NbMediumjesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesPileUpPtRefup_isLoaded = true;
  }
  return NbMediumjesPileUpPtRefup_;
}

const int &VVV0Tree::NbTightjesPileUpPtRefup() {
  if (not NbTightjesPileUpPtRefup_isLoaded) {
    if (NbTightjesPileUpPtRefup_branch != 0) {
      NbTightjesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    NbTightjesPileUpPtRefup_isLoaded = true;
  }
  return NbTightjesPileUpPtRefup_;
}

const int &VVV0Tree::NoORNbLoosejesPileUpPtRefup() {
  if (not NoORNbLoosejesPileUpPtRefup_isLoaded) {
    if (NoORNbLoosejesPileUpPtRefup_branch != 0) {
      NoORNbLoosejesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesPileUpPtRefup_isLoaded = true;
  }
  return NoORNbLoosejesPileUpPtRefup_;
}

const int &VVV0Tree::NoORNbMediumjesPileUpPtRefup() {
  if (not NoORNbMediumjesPileUpPtRefup_isLoaded) {
    if (NoORNbMediumjesPileUpPtRefup_branch != 0) {
      NoORNbMediumjesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesPileUpPtRefup_isLoaded = true;
  }
  return NoORNbMediumjesPileUpPtRefup_;
}

const int &VVV0Tree::NoORNbTightjesPileUpPtRefup() {
  if (not NoORNbTightjesPileUpPtRefup_isLoaded) {
    if (NoORNbTightjesPileUpPtRefup_branch != 0) {
      NoORNbTightjesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesPileUpPtRefup_isLoaded = true;
  }
  return NoORNbTightjesPileUpPtRefup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesPileUpPtRefup() {
  if (not J0jesPileUpPtRefup_isLoaded) {
    if (J0jesPileUpPtRefup_branch != 0) {
      J0jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch J0jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    J0jesPileUpPtRefup_isLoaded = true;
  }
  return *J0jesPileUpPtRefup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesPileUpPtRefup() {
  if (not J1jesPileUpPtRefup_isLoaded) {
    if (J1jesPileUpPtRefup_branch != 0) {
      J1jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch J1jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    J1jesPileUpPtRefup_isLoaded = true;
  }
  return *J1jesPileUpPtRefup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesPileUpPtRefup() {
  if (not J2jesPileUpPtRefup_isLoaded) {
    if (J2jesPileUpPtRefup_branch != 0) {
      J2jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch J2jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    J2jesPileUpPtRefup_isLoaded = true;
  }
  return *J2jesPileUpPtRefup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesPileUpPtRefup() {
  if (not J3jesPileUpPtRefup_isLoaded) {
    if (J3jesPileUpPtRefup_branch != 0) {
      J3jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch J3jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    J3jesPileUpPtRefup_isLoaded = true;
  }
  return *J3jesPileUpPtRefup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesPileUpPtRefup() {
  if (not J4jesPileUpPtRefup_isLoaded) {
    if (J4jesPileUpPtRefup_branch != 0) {
      J4jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch J4jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    J4jesPileUpPtRefup_isLoaded = true;
  }
  return *J4jesPileUpPtRefup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesPileUpPtRefup() {
  if (not J5jesPileUpPtRefup_isLoaded) {
    if (J5jesPileUpPtRefup_branch != 0) {
      J5jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch J5jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    J5jesPileUpPtRefup_isLoaded = true;
  }
  return *J5jesPileUpPtRefup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesPileUpPtRefup() {
  if (not J6jesPileUpPtRefup_isLoaded) {
    if (J6jesPileUpPtRefup_branch != 0) {
      J6jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch J6jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    J6jesPileUpPtRefup_isLoaded = true;
  }
  return *J6jesPileUpPtRefup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesPileUpPtRefup() {
  if (not J7jesPileUpPtRefup_isLoaded) {
    if (J7jesPileUpPtRefup_branch != 0) {
      J7jesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch J7jesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    J7jesPileUpPtRefup_isLoaded = true;
  }
  return *J7jesPileUpPtRefup_;
}

const vector<int> &VVV0Tree::NQJGenjesPileUpPtRefup() {
  if (not NQJGenjesPileUpPtRefup_isLoaded) {
    if (NQJGenjesPileUpPtRefup_branch != 0) {
      NQJGenjesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesPileUpPtRefup_isLoaded = true;
  }
  return *NQJGenjesPileUpPtRefup_;
}

const vector<int> &VVV0Tree::NBJGenjesPileUpPtRefup() {
  if (not NBJGenjesPileUpPtRefup_isLoaded) {
    if (NBJGenjesPileUpPtRefup_branch != 0) {
      NBJGenjesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesPileUpPtRefup_isLoaded = true;
  }
  return *NBJGenjesPileUpPtRefup_;
}

const vector<int> &VVV0Tree::NLJGenjesPileUpPtRefup() {
  if (not NLJGenjesPileUpPtRefup_isLoaded) {
    if (NLJGenjesPileUpPtRefup_branch != 0) {
      NLJGenjesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesPileUpPtRefup_isLoaded = true;
  }
  return *NLJGenjesPileUpPtRefup_;
}

const float &VVV0Tree::MVVXjesPileUpPtRefup() {
  if (not MVVXjesPileUpPtRefup_isLoaded) {
    if (MVVXjesPileUpPtRefup_branch != 0) {
      MVVXjesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    MVVXjesPileUpPtRefup_isLoaded = true;
  }
  return MVVXjesPileUpPtRefup_;
}

const float &VVV0Tree::PtVVXjesPileUpPtRefup() {
  if (not PtVVXjesPileUpPtRefup_isLoaded) {
    if (PtVVXjesPileUpPtRefup_branch != 0) {
      PtVVXjesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesPileUpPtRefup_isLoaded = true;
  }
  return PtVVXjesPileUpPtRefup_;
}

const float &VVV0Tree::HTjesPileUpPtRefup() {
  if (not HTjesPileUpPtRefup_isLoaded) {
    if (HTjesPileUpPtRefup_branch != 0) {
      HTjesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch HTjesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    HTjesPileUpPtRefup_isLoaded = true;
  }
  return HTjesPileUpPtRefup_;
}

const float &VVV0Tree::HTJjesPileUpPtRefup() {
  if (not HTJjesPileUpPtRefup_isLoaded) {
    if (HTJjesPileUpPtRefup_branch != 0) {
      HTJjesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch HTJjesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    HTJjesPileUpPtRefup_isLoaded = true;
  }
  return HTJjesPileUpPtRefup_;
}

const float &VVV0Tree::HTFJjesPileUpPtRefup() {
  if (not HTFJjesPileUpPtRefup_isLoaded) {
    if (HTFJjesPileUpPtRefup_branch != 0) {
      HTFJjesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    HTFJjesPileUpPtRefup_isLoaded = true;
  }
  return HTFJjesPileUpPtRefup_;
}

const float &VVV0Tree::SumPtFJjesPileUpPtRefup() {
  if (not SumPtFJjesPileUpPtRefup_isLoaded) {
    if (SumPtFJjesPileUpPtRefup_branch != 0) {
      SumPtFJjesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesPileUpPtRefup_isLoaded = true;
  }
  return SumPtFJjesPileUpPtRefup_;
}

const float &VVV0Tree::SumPtJjesPileUpPtRefup() {
  if (not SumPtJjesPileUpPtRefup_isLoaded) {
    if (SumPtJjesPileUpPtRefup_branch != 0) {
      SumPtJjesPileUpPtRefup_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesPileUpPtRefup_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesPileUpPtRefup_isLoaded = true;
  }
  return SumPtJjesPileUpPtRefup_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesPileUpPtRefdn() {
  if (not JsjesPileUpPtRefdn_isLoaded) {
    if (JsjesPileUpPtRefdn_branch != 0) {
      JsjesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch JsjesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    JsjesPileUpPtRefdn_isLoaded = true;
  }
  return *JsjesPileUpPtRefdn_;
}

const int &VVV0Tree::NFJjesPileUpPtRefdn() {
  if (not NFJjesPileUpPtRefdn_isLoaded) {
    if (NFJjesPileUpPtRefdn_branch != 0) {
      NFJjesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch NFJjesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    NFJjesPileUpPtRefdn_isLoaded = true;
  }
  return NFJjesPileUpPtRefdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesPileUpPtRefdn() {
  if (not FJ0jesPileUpPtRefdn_isLoaded) {
    if (FJ0jesPileUpPtRefdn_branch != 0) {
      FJ0jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    FJ0jesPileUpPtRefdn_isLoaded = true;
  }
  return *FJ0jesPileUpPtRefdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesPileUpPtRefdn() {
  if (not FJ1jesPileUpPtRefdn_isLoaded) {
    if (FJ1jesPileUpPtRefdn_branch != 0) {
      FJ1jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    FJ1jesPileUpPtRefdn_isLoaded = true;
  }
  return *FJ1jesPileUpPtRefdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesPileUpPtRefdn() {
  if (not FJ2jesPileUpPtRefdn_isLoaded) {
    if (FJ2jesPileUpPtRefdn_branch != 0) {
      FJ2jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    FJ2jesPileUpPtRefdn_isLoaded = true;
  }
  return *FJ2jesPileUpPtRefdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesPileUpPtRefdn() {
  if (not FJ3jesPileUpPtRefdn_isLoaded) {
    if (FJ3jesPileUpPtRefdn_branch != 0) {
      FJ3jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    FJ3jesPileUpPtRefdn_isLoaded = true;
  }
  return *FJ3jesPileUpPtRefdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesPileUpPtRefdn() {
  if (not FJ4jesPileUpPtRefdn_isLoaded) {
    if (FJ4jesPileUpPtRefdn_branch != 0) {
      FJ4jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    FJ4jesPileUpPtRefdn_isLoaded = true;
  }
  return *FJ4jesPileUpPtRefdn_;
}

const float &VVV0Tree::VMD0jesPileUpPtRefdn() {
  if (not VMD0jesPileUpPtRefdn_isLoaded) {
    if (VMD0jesPileUpPtRefdn_branch != 0) {
      VMD0jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    VMD0jesPileUpPtRefdn_isLoaded = true;
  }
  return VMD0jesPileUpPtRefdn_;
}

const float &VVV0Tree::VMD1jesPileUpPtRefdn() {
  if (not VMD1jesPileUpPtRefdn_isLoaded) {
    if (VMD1jesPileUpPtRefdn_branch != 0) {
      VMD1jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    VMD1jesPileUpPtRefdn_isLoaded = true;
  }
  return VMD1jesPileUpPtRefdn_;
}

const float &VVV0Tree::VMD2jesPileUpPtRefdn() {
  if (not VMD2jesPileUpPtRefdn_isLoaded) {
    if (VMD2jesPileUpPtRefdn_branch != 0) {
      VMD2jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    VMD2jesPileUpPtRefdn_isLoaded = true;
  }
  return VMD2jesPileUpPtRefdn_;
}

const float &VVV0Tree::VMD3jesPileUpPtRefdn() {
  if (not VMD3jesPileUpPtRefdn_isLoaded) {
    if (VMD3jesPileUpPtRefdn_branch != 0) {
      VMD3jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    VMD3jesPileUpPtRefdn_isLoaded = true;
  }
  return VMD3jesPileUpPtRefdn_;
}

const float &VVV0Tree::VMD4jesPileUpPtRefdn() {
  if (not VMD4jesPileUpPtRefdn_isLoaded) {
    if (VMD4jesPileUpPtRefdn_branch != 0) {
      VMD4jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    VMD4jesPileUpPtRefdn_isLoaded = true;
  }
  return VMD4jesPileUpPtRefdn_;
}

const float &VVV0Tree::WMD0jesPileUpPtRefdn() {
  if (not WMD0jesPileUpPtRefdn_isLoaded) {
    if (WMD0jesPileUpPtRefdn_branch != 0) {
      WMD0jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    WMD0jesPileUpPtRefdn_isLoaded = true;
  }
  return WMD0jesPileUpPtRefdn_;
}

const float &VVV0Tree::WMD1jesPileUpPtRefdn() {
  if (not WMD1jesPileUpPtRefdn_isLoaded) {
    if (WMD1jesPileUpPtRefdn_branch != 0) {
      WMD1jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    WMD1jesPileUpPtRefdn_isLoaded = true;
  }
  return WMD1jesPileUpPtRefdn_;
}

const float &VVV0Tree::WMD2jesPileUpPtRefdn() {
  if (not WMD2jesPileUpPtRefdn_isLoaded) {
    if (WMD2jesPileUpPtRefdn_branch != 0) {
      WMD2jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    WMD2jesPileUpPtRefdn_isLoaded = true;
  }
  return WMD2jesPileUpPtRefdn_;
}

const float &VVV0Tree::WMD3jesPileUpPtRefdn() {
  if (not WMD3jesPileUpPtRefdn_isLoaded) {
    if (WMD3jesPileUpPtRefdn_branch != 0) {
      WMD3jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    WMD3jesPileUpPtRefdn_isLoaded = true;
  }
  return WMD3jesPileUpPtRefdn_;
}

const float &VVV0Tree::WMD4jesPileUpPtRefdn() {
  if (not WMD4jesPileUpPtRefdn_isLoaded) {
    if (WMD4jesPileUpPtRefdn_branch != 0) {
      WMD4jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    WMD4jesPileUpPtRefdn_isLoaded = true;
  }
  return WMD4jesPileUpPtRefdn_;
}

const int &VVV0Tree::NQGen0jesPileUpPtRefdn() {
  if (not NQGen0jesPileUpPtRefdn_isLoaded) {
    if (NQGen0jesPileUpPtRefdn_branch != 0) {
      NQGen0jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesPileUpPtRefdn_isLoaded = true;
  }
  return NQGen0jesPileUpPtRefdn_;
}

const int &VVV0Tree::NQGen1jesPileUpPtRefdn() {
  if (not NQGen1jesPileUpPtRefdn_isLoaded) {
    if (NQGen1jesPileUpPtRefdn_branch != 0) {
      NQGen1jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesPileUpPtRefdn_isLoaded = true;
  }
  return NQGen1jesPileUpPtRefdn_;
}

const int &VVV0Tree::NQGen2jesPileUpPtRefdn() {
  if (not NQGen2jesPileUpPtRefdn_isLoaded) {
    if (NQGen2jesPileUpPtRefdn_branch != 0) {
      NQGen2jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesPileUpPtRefdn_isLoaded = true;
  }
  return NQGen2jesPileUpPtRefdn_;
}

const int &VVV0Tree::NQGen3jesPileUpPtRefdn() {
  if (not NQGen3jesPileUpPtRefdn_isLoaded) {
    if (NQGen3jesPileUpPtRefdn_branch != 0) {
      NQGen3jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesPileUpPtRefdn_isLoaded = true;
  }
  return NQGen3jesPileUpPtRefdn_;
}

const int &VVV0Tree::NQGen4jesPileUpPtRefdn() {
  if (not NQGen4jesPileUpPtRefdn_isLoaded) {
    if (NQGen4jesPileUpPtRefdn_branch != 0) {
      NQGen4jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesPileUpPtRefdn_isLoaded = true;
  }
  return NQGen4jesPileUpPtRefdn_;
}

const int &VVV0Tree::NBGen0jesPileUpPtRefdn() {
  if (not NBGen0jesPileUpPtRefdn_isLoaded) {
    if (NBGen0jesPileUpPtRefdn_branch != 0) {
      NBGen0jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesPileUpPtRefdn_isLoaded = true;
  }
  return NBGen0jesPileUpPtRefdn_;
}

const int &VVV0Tree::NBGen1jesPileUpPtRefdn() {
  if (not NBGen1jesPileUpPtRefdn_isLoaded) {
    if (NBGen1jesPileUpPtRefdn_branch != 0) {
      NBGen1jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesPileUpPtRefdn_isLoaded = true;
  }
  return NBGen1jesPileUpPtRefdn_;
}

const int &VVV0Tree::NBGen2jesPileUpPtRefdn() {
  if (not NBGen2jesPileUpPtRefdn_isLoaded) {
    if (NBGen2jesPileUpPtRefdn_branch != 0) {
      NBGen2jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesPileUpPtRefdn_isLoaded = true;
  }
  return NBGen2jesPileUpPtRefdn_;
}

const int &VVV0Tree::NBGen3jesPileUpPtRefdn() {
  if (not NBGen3jesPileUpPtRefdn_isLoaded) {
    if (NBGen3jesPileUpPtRefdn_branch != 0) {
      NBGen3jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesPileUpPtRefdn_isLoaded = true;
  }
  return NBGen3jesPileUpPtRefdn_;
}

const int &VVV0Tree::NBGen4jesPileUpPtRefdn() {
  if (not NBGen4jesPileUpPtRefdn_isLoaded) {
    if (NBGen4jesPileUpPtRefdn_branch != 0) {
      NBGen4jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesPileUpPtRefdn_isLoaded = true;
  }
  return NBGen4jesPileUpPtRefdn_;
}

const int &VVV0Tree::NLGen0jesPileUpPtRefdn() {
  if (not NLGen0jesPileUpPtRefdn_isLoaded) {
    if (NLGen0jesPileUpPtRefdn_branch != 0) {
      NLGen0jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesPileUpPtRefdn_isLoaded = true;
  }
  return NLGen0jesPileUpPtRefdn_;
}

const int &VVV0Tree::NLGen1jesPileUpPtRefdn() {
  if (not NLGen1jesPileUpPtRefdn_isLoaded) {
    if (NLGen1jesPileUpPtRefdn_branch != 0) {
      NLGen1jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesPileUpPtRefdn_isLoaded = true;
  }
  return NLGen1jesPileUpPtRefdn_;
}

const int &VVV0Tree::NLGen2jesPileUpPtRefdn() {
  if (not NLGen2jesPileUpPtRefdn_isLoaded) {
    if (NLGen2jesPileUpPtRefdn_branch != 0) {
      NLGen2jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesPileUpPtRefdn_isLoaded = true;
  }
  return NLGen2jesPileUpPtRefdn_;
}

const int &VVV0Tree::NLGen3jesPileUpPtRefdn() {
  if (not NLGen3jesPileUpPtRefdn_isLoaded) {
    if (NLGen3jesPileUpPtRefdn_branch != 0) {
      NLGen3jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesPileUpPtRefdn_isLoaded = true;
  }
  return NLGen3jesPileUpPtRefdn_;
}

const int &VVV0Tree::NLGen4jesPileUpPtRefdn() {
  if (not NLGen4jesPileUpPtRefdn_isLoaded) {
    if (NLGen4jesPileUpPtRefdn_branch != 0) {
      NLGen4jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesPileUpPtRefdn_isLoaded = true;
  }
  return NLGen4jesPileUpPtRefdn_;
}

const int &VVV0Tree::NVQGen0jesPileUpPtRefdn() {
  if (not NVQGen0jesPileUpPtRefdn_isLoaded) {
    if (NVQGen0jesPileUpPtRefdn_branch != 0) {
      NVQGen0jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesPileUpPtRefdn_isLoaded = true;
  }
  return NVQGen0jesPileUpPtRefdn_;
}

const int &VVV0Tree::NVQGen1jesPileUpPtRefdn() {
  if (not NVQGen1jesPileUpPtRefdn_isLoaded) {
    if (NVQGen1jesPileUpPtRefdn_branch != 0) {
      NVQGen1jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesPileUpPtRefdn_isLoaded = true;
  }
  return NVQGen1jesPileUpPtRefdn_;
}

const int &VVV0Tree::NVQGen2jesPileUpPtRefdn() {
  if (not NVQGen2jesPileUpPtRefdn_isLoaded) {
    if (NVQGen2jesPileUpPtRefdn_branch != 0) {
      NVQGen2jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesPileUpPtRefdn_isLoaded = true;
  }
  return NVQGen2jesPileUpPtRefdn_;
}

const int &VVV0Tree::NVQGen3jesPileUpPtRefdn() {
  if (not NVQGen3jesPileUpPtRefdn_isLoaded) {
    if (NVQGen3jesPileUpPtRefdn_branch != 0) {
      NVQGen3jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesPileUpPtRefdn_isLoaded = true;
  }
  return NVQGen3jesPileUpPtRefdn_;
}

const int &VVV0Tree::NVQGen4jesPileUpPtRefdn() {
  if (not NVQGen4jesPileUpPtRefdn_isLoaded) {
    if (NVQGen4jesPileUpPtRefdn_branch != 0) {
      NVQGen4jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesPileUpPtRefdn_isLoaded = true;
  }
  return NVQGen4jesPileUpPtRefdn_;
}

const int &VVV0Tree::NiFJjesPileUpPtRefdn() {
  if (not NiFJjesPileUpPtRefdn_isLoaded) {
    if (NiFJjesPileUpPtRefdn_branch != 0) {
      NiFJjesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    NiFJjesPileUpPtRefdn_isLoaded = true;
  }
  return NiFJjesPileUpPtRefdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesPileUpPtRefdn() {
  if (not iFJ0jesPileUpPtRefdn_isLoaded) {
    if (iFJ0jesPileUpPtRefdn_branch != 0) {
      iFJ0jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesPileUpPtRefdn_isLoaded = true;
  }
  return *iFJ0jesPileUpPtRefdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesPileUpPtRefdn() {
  if (not iFJ1jesPileUpPtRefdn_isLoaded) {
    if (iFJ1jesPileUpPtRefdn_branch != 0) {
      iFJ1jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesPileUpPtRefdn_isLoaded = true;
  }
  return *iFJ1jesPileUpPtRefdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesPileUpPtRefdn() {
  if (not iFJ2jesPileUpPtRefdn_isLoaded) {
    if (iFJ2jesPileUpPtRefdn_branch != 0) {
      iFJ2jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesPileUpPtRefdn_isLoaded = true;
  }
  return *iFJ2jesPileUpPtRefdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesPileUpPtRefdn() {
  if (not iFJ3jesPileUpPtRefdn_isLoaded) {
    if (iFJ3jesPileUpPtRefdn_branch != 0) {
      iFJ3jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesPileUpPtRefdn_isLoaded = true;
  }
  return *iFJ3jesPileUpPtRefdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesPileUpPtRefdn() {
  if (not iFJ4jesPileUpPtRefdn_isLoaded) {
    if (iFJ4jesPileUpPtRefdn_branch != 0) {
      iFJ4jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesPileUpPtRefdn_isLoaded = true;
  }
  return *iFJ4jesPileUpPtRefdn_;
}

const float &VVV0Tree::iVMD0jesPileUpPtRefdn() {
  if (not iVMD0jesPileUpPtRefdn_isLoaded) {
    if (iVMD0jesPileUpPtRefdn_branch != 0) {
      iVMD0jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesPileUpPtRefdn_isLoaded = true;
  }
  return iVMD0jesPileUpPtRefdn_;
}

const float &VVV0Tree::iVMD1jesPileUpPtRefdn() {
  if (not iVMD1jesPileUpPtRefdn_isLoaded) {
    if (iVMD1jesPileUpPtRefdn_branch != 0) {
      iVMD1jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesPileUpPtRefdn_isLoaded = true;
  }
  return iVMD1jesPileUpPtRefdn_;
}

const float &VVV0Tree::iVMD2jesPileUpPtRefdn() {
  if (not iVMD2jesPileUpPtRefdn_isLoaded) {
    if (iVMD2jesPileUpPtRefdn_branch != 0) {
      iVMD2jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesPileUpPtRefdn_isLoaded = true;
  }
  return iVMD2jesPileUpPtRefdn_;
}

const float &VVV0Tree::iVMD3jesPileUpPtRefdn() {
  if (not iVMD3jesPileUpPtRefdn_isLoaded) {
    if (iVMD3jesPileUpPtRefdn_branch != 0) {
      iVMD3jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesPileUpPtRefdn_isLoaded = true;
  }
  return iVMD3jesPileUpPtRefdn_;
}

const float &VVV0Tree::iVMD4jesPileUpPtRefdn() {
  if (not iVMD4jesPileUpPtRefdn_isLoaded) {
    if (iVMD4jesPileUpPtRefdn_branch != 0) {
      iVMD4jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesPileUpPtRefdn_isLoaded = true;
  }
  return iVMD4jesPileUpPtRefdn_;
}

const float &VVV0Tree::iWMD0jesPileUpPtRefdn() {
  if (not iWMD0jesPileUpPtRefdn_isLoaded) {
    if (iWMD0jesPileUpPtRefdn_branch != 0) {
      iWMD0jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesPileUpPtRefdn_isLoaded = true;
  }
  return iWMD0jesPileUpPtRefdn_;
}

const float &VVV0Tree::iWMD1jesPileUpPtRefdn() {
  if (not iWMD1jesPileUpPtRefdn_isLoaded) {
    if (iWMD1jesPileUpPtRefdn_branch != 0) {
      iWMD1jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesPileUpPtRefdn_isLoaded = true;
  }
  return iWMD1jesPileUpPtRefdn_;
}

const float &VVV0Tree::iWMD2jesPileUpPtRefdn() {
  if (not iWMD2jesPileUpPtRefdn_isLoaded) {
    if (iWMD2jesPileUpPtRefdn_branch != 0) {
      iWMD2jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesPileUpPtRefdn_isLoaded = true;
  }
  return iWMD2jesPileUpPtRefdn_;
}

const float &VVV0Tree::iWMD3jesPileUpPtRefdn() {
  if (not iWMD3jesPileUpPtRefdn_isLoaded) {
    if (iWMD3jesPileUpPtRefdn_branch != 0) {
      iWMD3jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesPileUpPtRefdn_isLoaded = true;
  }
  return iWMD3jesPileUpPtRefdn_;
}

const float &VVV0Tree::iWMD4jesPileUpPtRefdn() {
  if (not iWMD4jesPileUpPtRefdn_isLoaded) {
    if (iWMD4jesPileUpPtRefdn_branch != 0) {
      iWMD4jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesPileUpPtRefdn_isLoaded = true;
  }
  return iWMD4jesPileUpPtRefdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesPileUpPtRefdn() {
  if (not METjesPileUpPtRefdn_isLoaded) {
    if (METjesPileUpPtRefdn_branch != 0) {
      METjesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch METjesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    METjesPileUpPtRefdn_isLoaded = true;
  }
  return *METjesPileUpPtRefdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesPileUpPtRefdn() {
  if (not NujesPileUpPtRefdn_isLoaded) {
    if (NujesPileUpPtRefdn_branch != 0) {
      NujesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch NujesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    NujesPileUpPtRefdn_isLoaded = true;
  }
  return *NujesPileUpPtRefdn_;
}

const int &VVV0Tree::NJjesPileUpPtRefdn() {
  if (not NJjesPileUpPtRefdn_isLoaded) {
    if (NJjesPileUpPtRefdn_branch != 0) {
      NJjesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch NJjesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    NJjesPileUpPtRefdn_isLoaded = true;
  }
  return NJjesPileUpPtRefdn_;
}

const int &VVV0Tree::NbLoosejesPileUpPtRefdn() {
  if (not NbLoosejesPileUpPtRefdn_isLoaded) {
    if (NbLoosejesPileUpPtRefdn_branch != 0) {
      NbLoosejesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesPileUpPtRefdn_isLoaded = true;
  }
  return NbLoosejesPileUpPtRefdn_;
}

const int &VVV0Tree::NbMediumjesPileUpPtRefdn() {
  if (not NbMediumjesPileUpPtRefdn_isLoaded) {
    if (NbMediumjesPileUpPtRefdn_branch != 0) {
      NbMediumjesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesPileUpPtRefdn_isLoaded = true;
  }
  return NbMediumjesPileUpPtRefdn_;
}

const int &VVV0Tree::NbTightjesPileUpPtRefdn() {
  if (not NbTightjesPileUpPtRefdn_isLoaded) {
    if (NbTightjesPileUpPtRefdn_branch != 0) {
      NbTightjesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    NbTightjesPileUpPtRefdn_isLoaded = true;
  }
  return NbTightjesPileUpPtRefdn_;
}

const int &VVV0Tree::NoORNbLoosejesPileUpPtRefdn() {
  if (not NoORNbLoosejesPileUpPtRefdn_isLoaded) {
    if (NoORNbLoosejesPileUpPtRefdn_branch != 0) {
      NoORNbLoosejesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesPileUpPtRefdn_isLoaded = true;
  }
  return NoORNbLoosejesPileUpPtRefdn_;
}

const int &VVV0Tree::NoORNbMediumjesPileUpPtRefdn() {
  if (not NoORNbMediumjesPileUpPtRefdn_isLoaded) {
    if (NoORNbMediumjesPileUpPtRefdn_branch != 0) {
      NoORNbMediumjesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesPileUpPtRefdn_isLoaded = true;
  }
  return NoORNbMediumjesPileUpPtRefdn_;
}

const int &VVV0Tree::NoORNbTightjesPileUpPtRefdn() {
  if (not NoORNbTightjesPileUpPtRefdn_isLoaded) {
    if (NoORNbTightjesPileUpPtRefdn_branch != 0) {
      NoORNbTightjesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesPileUpPtRefdn_isLoaded = true;
  }
  return NoORNbTightjesPileUpPtRefdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesPileUpPtRefdn() {
  if (not J0jesPileUpPtRefdn_isLoaded) {
    if (J0jesPileUpPtRefdn_branch != 0) {
      J0jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch J0jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    J0jesPileUpPtRefdn_isLoaded = true;
  }
  return *J0jesPileUpPtRefdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesPileUpPtRefdn() {
  if (not J1jesPileUpPtRefdn_isLoaded) {
    if (J1jesPileUpPtRefdn_branch != 0) {
      J1jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch J1jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    J1jesPileUpPtRefdn_isLoaded = true;
  }
  return *J1jesPileUpPtRefdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesPileUpPtRefdn() {
  if (not J2jesPileUpPtRefdn_isLoaded) {
    if (J2jesPileUpPtRefdn_branch != 0) {
      J2jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch J2jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    J2jesPileUpPtRefdn_isLoaded = true;
  }
  return *J2jesPileUpPtRefdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesPileUpPtRefdn() {
  if (not J3jesPileUpPtRefdn_isLoaded) {
    if (J3jesPileUpPtRefdn_branch != 0) {
      J3jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch J3jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    J3jesPileUpPtRefdn_isLoaded = true;
  }
  return *J3jesPileUpPtRefdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesPileUpPtRefdn() {
  if (not J4jesPileUpPtRefdn_isLoaded) {
    if (J4jesPileUpPtRefdn_branch != 0) {
      J4jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch J4jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    J4jesPileUpPtRefdn_isLoaded = true;
  }
  return *J4jesPileUpPtRefdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesPileUpPtRefdn() {
  if (not J5jesPileUpPtRefdn_isLoaded) {
    if (J5jesPileUpPtRefdn_branch != 0) {
      J5jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch J5jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    J5jesPileUpPtRefdn_isLoaded = true;
  }
  return *J5jesPileUpPtRefdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesPileUpPtRefdn() {
  if (not J6jesPileUpPtRefdn_isLoaded) {
    if (J6jesPileUpPtRefdn_branch != 0) {
      J6jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch J6jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    J6jesPileUpPtRefdn_isLoaded = true;
  }
  return *J6jesPileUpPtRefdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesPileUpPtRefdn() {
  if (not J7jesPileUpPtRefdn_isLoaded) {
    if (J7jesPileUpPtRefdn_branch != 0) {
      J7jesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch J7jesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    J7jesPileUpPtRefdn_isLoaded = true;
  }
  return *J7jesPileUpPtRefdn_;
}

const vector<int> &VVV0Tree::NQJGenjesPileUpPtRefdn() {
  if (not NQJGenjesPileUpPtRefdn_isLoaded) {
    if (NQJGenjesPileUpPtRefdn_branch != 0) {
      NQJGenjesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesPileUpPtRefdn_isLoaded = true;
  }
  return *NQJGenjesPileUpPtRefdn_;
}

const vector<int> &VVV0Tree::NBJGenjesPileUpPtRefdn() {
  if (not NBJGenjesPileUpPtRefdn_isLoaded) {
    if (NBJGenjesPileUpPtRefdn_branch != 0) {
      NBJGenjesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesPileUpPtRefdn_isLoaded = true;
  }
  return *NBJGenjesPileUpPtRefdn_;
}

const vector<int> &VVV0Tree::NLJGenjesPileUpPtRefdn() {
  if (not NLJGenjesPileUpPtRefdn_isLoaded) {
    if (NLJGenjesPileUpPtRefdn_branch != 0) {
      NLJGenjesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesPileUpPtRefdn_isLoaded = true;
  }
  return *NLJGenjesPileUpPtRefdn_;
}

const float &VVV0Tree::MVVXjesPileUpPtRefdn() {
  if (not MVVXjesPileUpPtRefdn_isLoaded) {
    if (MVVXjesPileUpPtRefdn_branch != 0) {
      MVVXjesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    MVVXjesPileUpPtRefdn_isLoaded = true;
  }
  return MVVXjesPileUpPtRefdn_;
}

const float &VVV0Tree::PtVVXjesPileUpPtRefdn() {
  if (not PtVVXjesPileUpPtRefdn_isLoaded) {
    if (PtVVXjesPileUpPtRefdn_branch != 0) {
      PtVVXjesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesPileUpPtRefdn_isLoaded = true;
  }
  return PtVVXjesPileUpPtRefdn_;
}

const float &VVV0Tree::HTjesPileUpPtRefdn() {
  if (not HTjesPileUpPtRefdn_isLoaded) {
    if (HTjesPileUpPtRefdn_branch != 0) {
      HTjesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch HTjesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    HTjesPileUpPtRefdn_isLoaded = true;
  }
  return HTjesPileUpPtRefdn_;
}

const float &VVV0Tree::HTJjesPileUpPtRefdn() {
  if (not HTJjesPileUpPtRefdn_isLoaded) {
    if (HTJjesPileUpPtRefdn_branch != 0) {
      HTJjesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch HTJjesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    HTJjesPileUpPtRefdn_isLoaded = true;
  }
  return HTJjesPileUpPtRefdn_;
}

const float &VVV0Tree::HTFJjesPileUpPtRefdn() {
  if (not HTFJjesPileUpPtRefdn_isLoaded) {
    if (HTFJjesPileUpPtRefdn_branch != 0) {
      HTFJjesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    HTFJjesPileUpPtRefdn_isLoaded = true;
  }
  return HTFJjesPileUpPtRefdn_;
}

const float &VVV0Tree::SumPtFJjesPileUpPtRefdn() {
  if (not SumPtFJjesPileUpPtRefdn_isLoaded) {
    if (SumPtFJjesPileUpPtRefdn_branch != 0) {
      SumPtFJjesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesPileUpPtRefdn_isLoaded = true;
  }
  return SumPtFJjesPileUpPtRefdn_;
}

const float &VVV0Tree::SumPtJjesPileUpPtRefdn() {
  if (not SumPtJjesPileUpPtRefdn_isLoaded) {
    if (SumPtJjesPileUpPtRefdn_branch != 0) {
      SumPtJjesPileUpPtRefdn_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesPileUpPtRefdn_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesPileUpPtRefdn_isLoaded = true;
  }
  return SumPtJjesPileUpPtRefdn_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesPileUpPtBBup() {
  if (not JsjesPileUpPtBBup_isLoaded) {
    if (JsjesPileUpPtBBup_branch != 0) {
      JsjesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch JsjesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    JsjesPileUpPtBBup_isLoaded = true;
  }
  return *JsjesPileUpPtBBup_;
}

const int &VVV0Tree::NFJjesPileUpPtBBup() {
  if (not NFJjesPileUpPtBBup_isLoaded) {
    if (NFJjesPileUpPtBBup_branch != 0) {
      NFJjesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch NFJjesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    NFJjesPileUpPtBBup_isLoaded = true;
  }
  return NFJjesPileUpPtBBup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesPileUpPtBBup() {
  if (not FJ0jesPileUpPtBBup_isLoaded) {
    if (FJ0jesPileUpPtBBup_branch != 0) {
      FJ0jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    FJ0jesPileUpPtBBup_isLoaded = true;
  }
  return *FJ0jesPileUpPtBBup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesPileUpPtBBup() {
  if (not FJ1jesPileUpPtBBup_isLoaded) {
    if (FJ1jesPileUpPtBBup_branch != 0) {
      FJ1jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    FJ1jesPileUpPtBBup_isLoaded = true;
  }
  return *FJ1jesPileUpPtBBup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesPileUpPtBBup() {
  if (not FJ2jesPileUpPtBBup_isLoaded) {
    if (FJ2jesPileUpPtBBup_branch != 0) {
      FJ2jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    FJ2jesPileUpPtBBup_isLoaded = true;
  }
  return *FJ2jesPileUpPtBBup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesPileUpPtBBup() {
  if (not FJ3jesPileUpPtBBup_isLoaded) {
    if (FJ3jesPileUpPtBBup_branch != 0) {
      FJ3jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    FJ3jesPileUpPtBBup_isLoaded = true;
  }
  return *FJ3jesPileUpPtBBup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesPileUpPtBBup() {
  if (not FJ4jesPileUpPtBBup_isLoaded) {
    if (FJ4jesPileUpPtBBup_branch != 0) {
      FJ4jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    FJ4jesPileUpPtBBup_isLoaded = true;
  }
  return *FJ4jesPileUpPtBBup_;
}

const float &VVV0Tree::VMD0jesPileUpPtBBup() {
  if (not VMD0jesPileUpPtBBup_isLoaded) {
    if (VMD0jesPileUpPtBBup_branch != 0) {
      VMD0jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    VMD0jesPileUpPtBBup_isLoaded = true;
  }
  return VMD0jesPileUpPtBBup_;
}

const float &VVV0Tree::VMD1jesPileUpPtBBup() {
  if (not VMD1jesPileUpPtBBup_isLoaded) {
    if (VMD1jesPileUpPtBBup_branch != 0) {
      VMD1jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    VMD1jesPileUpPtBBup_isLoaded = true;
  }
  return VMD1jesPileUpPtBBup_;
}

const float &VVV0Tree::VMD2jesPileUpPtBBup() {
  if (not VMD2jesPileUpPtBBup_isLoaded) {
    if (VMD2jesPileUpPtBBup_branch != 0) {
      VMD2jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    VMD2jesPileUpPtBBup_isLoaded = true;
  }
  return VMD2jesPileUpPtBBup_;
}

const float &VVV0Tree::VMD3jesPileUpPtBBup() {
  if (not VMD3jesPileUpPtBBup_isLoaded) {
    if (VMD3jesPileUpPtBBup_branch != 0) {
      VMD3jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    VMD3jesPileUpPtBBup_isLoaded = true;
  }
  return VMD3jesPileUpPtBBup_;
}

const float &VVV0Tree::VMD4jesPileUpPtBBup() {
  if (not VMD4jesPileUpPtBBup_isLoaded) {
    if (VMD4jesPileUpPtBBup_branch != 0) {
      VMD4jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    VMD4jesPileUpPtBBup_isLoaded = true;
  }
  return VMD4jesPileUpPtBBup_;
}

const float &VVV0Tree::WMD0jesPileUpPtBBup() {
  if (not WMD0jesPileUpPtBBup_isLoaded) {
    if (WMD0jesPileUpPtBBup_branch != 0) {
      WMD0jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    WMD0jesPileUpPtBBup_isLoaded = true;
  }
  return WMD0jesPileUpPtBBup_;
}

const float &VVV0Tree::WMD1jesPileUpPtBBup() {
  if (not WMD1jesPileUpPtBBup_isLoaded) {
    if (WMD1jesPileUpPtBBup_branch != 0) {
      WMD1jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    WMD1jesPileUpPtBBup_isLoaded = true;
  }
  return WMD1jesPileUpPtBBup_;
}

const float &VVV0Tree::WMD2jesPileUpPtBBup() {
  if (not WMD2jesPileUpPtBBup_isLoaded) {
    if (WMD2jesPileUpPtBBup_branch != 0) {
      WMD2jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    WMD2jesPileUpPtBBup_isLoaded = true;
  }
  return WMD2jesPileUpPtBBup_;
}

const float &VVV0Tree::WMD3jesPileUpPtBBup() {
  if (not WMD3jesPileUpPtBBup_isLoaded) {
    if (WMD3jesPileUpPtBBup_branch != 0) {
      WMD3jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    WMD3jesPileUpPtBBup_isLoaded = true;
  }
  return WMD3jesPileUpPtBBup_;
}

const float &VVV0Tree::WMD4jesPileUpPtBBup() {
  if (not WMD4jesPileUpPtBBup_isLoaded) {
    if (WMD4jesPileUpPtBBup_branch != 0) {
      WMD4jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    WMD4jesPileUpPtBBup_isLoaded = true;
  }
  return WMD4jesPileUpPtBBup_;
}

const int &VVV0Tree::NQGen0jesPileUpPtBBup() {
  if (not NQGen0jesPileUpPtBBup_isLoaded) {
    if (NQGen0jesPileUpPtBBup_branch != 0) {
      NQGen0jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesPileUpPtBBup_isLoaded = true;
  }
  return NQGen0jesPileUpPtBBup_;
}

const int &VVV0Tree::NQGen1jesPileUpPtBBup() {
  if (not NQGen1jesPileUpPtBBup_isLoaded) {
    if (NQGen1jesPileUpPtBBup_branch != 0) {
      NQGen1jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesPileUpPtBBup_isLoaded = true;
  }
  return NQGen1jesPileUpPtBBup_;
}

const int &VVV0Tree::NQGen2jesPileUpPtBBup() {
  if (not NQGen2jesPileUpPtBBup_isLoaded) {
    if (NQGen2jesPileUpPtBBup_branch != 0) {
      NQGen2jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesPileUpPtBBup_isLoaded = true;
  }
  return NQGen2jesPileUpPtBBup_;
}

const int &VVV0Tree::NQGen3jesPileUpPtBBup() {
  if (not NQGen3jesPileUpPtBBup_isLoaded) {
    if (NQGen3jesPileUpPtBBup_branch != 0) {
      NQGen3jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesPileUpPtBBup_isLoaded = true;
  }
  return NQGen3jesPileUpPtBBup_;
}

const int &VVV0Tree::NQGen4jesPileUpPtBBup() {
  if (not NQGen4jesPileUpPtBBup_isLoaded) {
    if (NQGen4jesPileUpPtBBup_branch != 0) {
      NQGen4jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesPileUpPtBBup_isLoaded = true;
  }
  return NQGen4jesPileUpPtBBup_;
}

const int &VVV0Tree::NBGen0jesPileUpPtBBup() {
  if (not NBGen0jesPileUpPtBBup_isLoaded) {
    if (NBGen0jesPileUpPtBBup_branch != 0) {
      NBGen0jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesPileUpPtBBup_isLoaded = true;
  }
  return NBGen0jesPileUpPtBBup_;
}

const int &VVV0Tree::NBGen1jesPileUpPtBBup() {
  if (not NBGen1jesPileUpPtBBup_isLoaded) {
    if (NBGen1jesPileUpPtBBup_branch != 0) {
      NBGen1jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesPileUpPtBBup_isLoaded = true;
  }
  return NBGen1jesPileUpPtBBup_;
}

const int &VVV0Tree::NBGen2jesPileUpPtBBup() {
  if (not NBGen2jesPileUpPtBBup_isLoaded) {
    if (NBGen2jesPileUpPtBBup_branch != 0) {
      NBGen2jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesPileUpPtBBup_isLoaded = true;
  }
  return NBGen2jesPileUpPtBBup_;
}

const int &VVV0Tree::NBGen3jesPileUpPtBBup() {
  if (not NBGen3jesPileUpPtBBup_isLoaded) {
    if (NBGen3jesPileUpPtBBup_branch != 0) {
      NBGen3jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesPileUpPtBBup_isLoaded = true;
  }
  return NBGen3jesPileUpPtBBup_;
}

const int &VVV0Tree::NBGen4jesPileUpPtBBup() {
  if (not NBGen4jesPileUpPtBBup_isLoaded) {
    if (NBGen4jesPileUpPtBBup_branch != 0) {
      NBGen4jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesPileUpPtBBup_isLoaded = true;
  }
  return NBGen4jesPileUpPtBBup_;
}

const int &VVV0Tree::NLGen0jesPileUpPtBBup() {
  if (not NLGen0jesPileUpPtBBup_isLoaded) {
    if (NLGen0jesPileUpPtBBup_branch != 0) {
      NLGen0jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesPileUpPtBBup_isLoaded = true;
  }
  return NLGen0jesPileUpPtBBup_;
}

const int &VVV0Tree::NLGen1jesPileUpPtBBup() {
  if (not NLGen1jesPileUpPtBBup_isLoaded) {
    if (NLGen1jesPileUpPtBBup_branch != 0) {
      NLGen1jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesPileUpPtBBup_isLoaded = true;
  }
  return NLGen1jesPileUpPtBBup_;
}

const int &VVV0Tree::NLGen2jesPileUpPtBBup() {
  if (not NLGen2jesPileUpPtBBup_isLoaded) {
    if (NLGen2jesPileUpPtBBup_branch != 0) {
      NLGen2jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesPileUpPtBBup_isLoaded = true;
  }
  return NLGen2jesPileUpPtBBup_;
}

const int &VVV0Tree::NLGen3jesPileUpPtBBup() {
  if (not NLGen3jesPileUpPtBBup_isLoaded) {
    if (NLGen3jesPileUpPtBBup_branch != 0) {
      NLGen3jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesPileUpPtBBup_isLoaded = true;
  }
  return NLGen3jesPileUpPtBBup_;
}

const int &VVV0Tree::NLGen4jesPileUpPtBBup() {
  if (not NLGen4jesPileUpPtBBup_isLoaded) {
    if (NLGen4jesPileUpPtBBup_branch != 0) {
      NLGen4jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesPileUpPtBBup_isLoaded = true;
  }
  return NLGen4jesPileUpPtBBup_;
}

const int &VVV0Tree::NVQGen0jesPileUpPtBBup() {
  if (not NVQGen0jesPileUpPtBBup_isLoaded) {
    if (NVQGen0jesPileUpPtBBup_branch != 0) {
      NVQGen0jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesPileUpPtBBup_isLoaded = true;
  }
  return NVQGen0jesPileUpPtBBup_;
}

const int &VVV0Tree::NVQGen1jesPileUpPtBBup() {
  if (not NVQGen1jesPileUpPtBBup_isLoaded) {
    if (NVQGen1jesPileUpPtBBup_branch != 0) {
      NVQGen1jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesPileUpPtBBup_isLoaded = true;
  }
  return NVQGen1jesPileUpPtBBup_;
}

const int &VVV0Tree::NVQGen2jesPileUpPtBBup() {
  if (not NVQGen2jesPileUpPtBBup_isLoaded) {
    if (NVQGen2jesPileUpPtBBup_branch != 0) {
      NVQGen2jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesPileUpPtBBup_isLoaded = true;
  }
  return NVQGen2jesPileUpPtBBup_;
}

const int &VVV0Tree::NVQGen3jesPileUpPtBBup() {
  if (not NVQGen3jesPileUpPtBBup_isLoaded) {
    if (NVQGen3jesPileUpPtBBup_branch != 0) {
      NVQGen3jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesPileUpPtBBup_isLoaded = true;
  }
  return NVQGen3jesPileUpPtBBup_;
}

const int &VVV0Tree::NVQGen4jesPileUpPtBBup() {
  if (not NVQGen4jesPileUpPtBBup_isLoaded) {
    if (NVQGen4jesPileUpPtBBup_branch != 0) {
      NVQGen4jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesPileUpPtBBup_isLoaded = true;
  }
  return NVQGen4jesPileUpPtBBup_;
}

const int &VVV0Tree::NiFJjesPileUpPtBBup() {
  if (not NiFJjesPileUpPtBBup_isLoaded) {
    if (NiFJjesPileUpPtBBup_branch != 0) {
      NiFJjesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    NiFJjesPileUpPtBBup_isLoaded = true;
  }
  return NiFJjesPileUpPtBBup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesPileUpPtBBup() {
  if (not iFJ0jesPileUpPtBBup_isLoaded) {
    if (iFJ0jesPileUpPtBBup_branch != 0) {
      iFJ0jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesPileUpPtBBup_isLoaded = true;
  }
  return *iFJ0jesPileUpPtBBup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesPileUpPtBBup() {
  if (not iFJ1jesPileUpPtBBup_isLoaded) {
    if (iFJ1jesPileUpPtBBup_branch != 0) {
      iFJ1jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesPileUpPtBBup_isLoaded = true;
  }
  return *iFJ1jesPileUpPtBBup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesPileUpPtBBup() {
  if (not iFJ2jesPileUpPtBBup_isLoaded) {
    if (iFJ2jesPileUpPtBBup_branch != 0) {
      iFJ2jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesPileUpPtBBup_isLoaded = true;
  }
  return *iFJ2jesPileUpPtBBup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesPileUpPtBBup() {
  if (not iFJ3jesPileUpPtBBup_isLoaded) {
    if (iFJ3jesPileUpPtBBup_branch != 0) {
      iFJ3jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesPileUpPtBBup_isLoaded = true;
  }
  return *iFJ3jesPileUpPtBBup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesPileUpPtBBup() {
  if (not iFJ4jesPileUpPtBBup_isLoaded) {
    if (iFJ4jesPileUpPtBBup_branch != 0) {
      iFJ4jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesPileUpPtBBup_isLoaded = true;
  }
  return *iFJ4jesPileUpPtBBup_;
}

const float &VVV0Tree::iVMD0jesPileUpPtBBup() {
  if (not iVMD0jesPileUpPtBBup_isLoaded) {
    if (iVMD0jesPileUpPtBBup_branch != 0) {
      iVMD0jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesPileUpPtBBup_isLoaded = true;
  }
  return iVMD0jesPileUpPtBBup_;
}

const float &VVV0Tree::iVMD1jesPileUpPtBBup() {
  if (not iVMD1jesPileUpPtBBup_isLoaded) {
    if (iVMD1jesPileUpPtBBup_branch != 0) {
      iVMD1jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesPileUpPtBBup_isLoaded = true;
  }
  return iVMD1jesPileUpPtBBup_;
}

const float &VVV0Tree::iVMD2jesPileUpPtBBup() {
  if (not iVMD2jesPileUpPtBBup_isLoaded) {
    if (iVMD2jesPileUpPtBBup_branch != 0) {
      iVMD2jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesPileUpPtBBup_isLoaded = true;
  }
  return iVMD2jesPileUpPtBBup_;
}

const float &VVV0Tree::iVMD3jesPileUpPtBBup() {
  if (not iVMD3jesPileUpPtBBup_isLoaded) {
    if (iVMD3jesPileUpPtBBup_branch != 0) {
      iVMD3jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesPileUpPtBBup_isLoaded = true;
  }
  return iVMD3jesPileUpPtBBup_;
}

const float &VVV0Tree::iVMD4jesPileUpPtBBup() {
  if (not iVMD4jesPileUpPtBBup_isLoaded) {
    if (iVMD4jesPileUpPtBBup_branch != 0) {
      iVMD4jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesPileUpPtBBup_isLoaded = true;
  }
  return iVMD4jesPileUpPtBBup_;
}

const float &VVV0Tree::iWMD0jesPileUpPtBBup() {
  if (not iWMD0jesPileUpPtBBup_isLoaded) {
    if (iWMD0jesPileUpPtBBup_branch != 0) {
      iWMD0jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesPileUpPtBBup_isLoaded = true;
  }
  return iWMD0jesPileUpPtBBup_;
}

const float &VVV0Tree::iWMD1jesPileUpPtBBup() {
  if (not iWMD1jesPileUpPtBBup_isLoaded) {
    if (iWMD1jesPileUpPtBBup_branch != 0) {
      iWMD1jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesPileUpPtBBup_isLoaded = true;
  }
  return iWMD1jesPileUpPtBBup_;
}

const float &VVV0Tree::iWMD2jesPileUpPtBBup() {
  if (not iWMD2jesPileUpPtBBup_isLoaded) {
    if (iWMD2jesPileUpPtBBup_branch != 0) {
      iWMD2jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesPileUpPtBBup_isLoaded = true;
  }
  return iWMD2jesPileUpPtBBup_;
}

const float &VVV0Tree::iWMD3jesPileUpPtBBup() {
  if (not iWMD3jesPileUpPtBBup_isLoaded) {
    if (iWMD3jesPileUpPtBBup_branch != 0) {
      iWMD3jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesPileUpPtBBup_isLoaded = true;
  }
  return iWMD3jesPileUpPtBBup_;
}

const float &VVV0Tree::iWMD4jesPileUpPtBBup() {
  if (not iWMD4jesPileUpPtBBup_isLoaded) {
    if (iWMD4jesPileUpPtBBup_branch != 0) {
      iWMD4jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesPileUpPtBBup_isLoaded = true;
  }
  return iWMD4jesPileUpPtBBup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesPileUpPtBBup() {
  if (not METjesPileUpPtBBup_isLoaded) {
    if (METjesPileUpPtBBup_branch != 0) {
      METjesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch METjesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    METjesPileUpPtBBup_isLoaded = true;
  }
  return *METjesPileUpPtBBup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesPileUpPtBBup() {
  if (not NujesPileUpPtBBup_isLoaded) {
    if (NujesPileUpPtBBup_branch != 0) {
      NujesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch NujesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    NujesPileUpPtBBup_isLoaded = true;
  }
  return *NujesPileUpPtBBup_;
}

const int &VVV0Tree::NJjesPileUpPtBBup() {
  if (not NJjesPileUpPtBBup_isLoaded) {
    if (NJjesPileUpPtBBup_branch != 0) {
      NJjesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch NJjesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    NJjesPileUpPtBBup_isLoaded = true;
  }
  return NJjesPileUpPtBBup_;
}

const int &VVV0Tree::NbLoosejesPileUpPtBBup() {
  if (not NbLoosejesPileUpPtBBup_isLoaded) {
    if (NbLoosejesPileUpPtBBup_branch != 0) {
      NbLoosejesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesPileUpPtBBup_isLoaded = true;
  }
  return NbLoosejesPileUpPtBBup_;
}

const int &VVV0Tree::NbMediumjesPileUpPtBBup() {
  if (not NbMediumjesPileUpPtBBup_isLoaded) {
    if (NbMediumjesPileUpPtBBup_branch != 0) {
      NbMediumjesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesPileUpPtBBup_isLoaded = true;
  }
  return NbMediumjesPileUpPtBBup_;
}

const int &VVV0Tree::NbTightjesPileUpPtBBup() {
  if (not NbTightjesPileUpPtBBup_isLoaded) {
    if (NbTightjesPileUpPtBBup_branch != 0) {
      NbTightjesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    NbTightjesPileUpPtBBup_isLoaded = true;
  }
  return NbTightjesPileUpPtBBup_;
}

const int &VVV0Tree::NoORNbLoosejesPileUpPtBBup() {
  if (not NoORNbLoosejesPileUpPtBBup_isLoaded) {
    if (NoORNbLoosejesPileUpPtBBup_branch != 0) {
      NoORNbLoosejesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesPileUpPtBBup_isLoaded = true;
  }
  return NoORNbLoosejesPileUpPtBBup_;
}

const int &VVV0Tree::NoORNbMediumjesPileUpPtBBup() {
  if (not NoORNbMediumjesPileUpPtBBup_isLoaded) {
    if (NoORNbMediumjesPileUpPtBBup_branch != 0) {
      NoORNbMediumjesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesPileUpPtBBup_isLoaded = true;
  }
  return NoORNbMediumjesPileUpPtBBup_;
}

const int &VVV0Tree::NoORNbTightjesPileUpPtBBup() {
  if (not NoORNbTightjesPileUpPtBBup_isLoaded) {
    if (NoORNbTightjesPileUpPtBBup_branch != 0) {
      NoORNbTightjesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesPileUpPtBBup_isLoaded = true;
  }
  return NoORNbTightjesPileUpPtBBup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesPileUpPtBBup() {
  if (not J0jesPileUpPtBBup_isLoaded) {
    if (J0jesPileUpPtBBup_branch != 0) {
      J0jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch J0jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    J0jesPileUpPtBBup_isLoaded = true;
  }
  return *J0jesPileUpPtBBup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesPileUpPtBBup() {
  if (not J1jesPileUpPtBBup_isLoaded) {
    if (J1jesPileUpPtBBup_branch != 0) {
      J1jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch J1jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    J1jesPileUpPtBBup_isLoaded = true;
  }
  return *J1jesPileUpPtBBup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesPileUpPtBBup() {
  if (not J2jesPileUpPtBBup_isLoaded) {
    if (J2jesPileUpPtBBup_branch != 0) {
      J2jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch J2jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    J2jesPileUpPtBBup_isLoaded = true;
  }
  return *J2jesPileUpPtBBup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesPileUpPtBBup() {
  if (not J3jesPileUpPtBBup_isLoaded) {
    if (J3jesPileUpPtBBup_branch != 0) {
      J3jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch J3jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    J3jesPileUpPtBBup_isLoaded = true;
  }
  return *J3jesPileUpPtBBup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesPileUpPtBBup() {
  if (not J4jesPileUpPtBBup_isLoaded) {
    if (J4jesPileUpPtBBup_branch != 0) {
      J4jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch J4jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    J4jesPileUpPtBBup_isLoaded = true;
  }
  return *J4jesPileUpPtBBup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesPileUpPtBBup() {
  if (not J5jesPileUpPtBBup_isLoaded) {
    if (J5jesPileUpPtBBup_branch != 0) {
      J5jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch J5jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    J5jesPileUpPtBBup_isLoaded = true;
  }
  return *J5jesPileUpPtBBup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesPileUpPtBBup() {
  if (not J6jesPileUpPtBBup_isLoaded) {
    if (J6jesPileUpPtBBup_branch != 0) {
      J6jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch J6jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    J6jesPileUpPtBBup_isLoaded = true;
  }
  return *J6jesPileUpPtBBup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesPileUpPtBBup() {
  if (not J7jesPileUpPtBBup_isLoaded) {
    if (J7jesPileUpPtBBup_branch != 0) {
      J7jesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch J7jesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    J7jesPileUpPtBBup_isLoaded = true;
  }
  return *J7jesPileUpPtBBup_;
}

const vector<int> &VVV0Tree::NQJGenjesPileUpPtBBup() {
  if (not NQJGenjesPileUpPtBBup_isLoaded) {
    if (NQJGenjesPileUpPtBBup_branch != 0) {
      NQJGenjesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesPileUpPtBBup_isLoaded = true;
  }
  return *NQJGenjesPileUpPtBBup_;
}

const vector<int> &VVV0Tree::NBJGenjesPileUpPtBBup() {
  if (not NBJGenjesPileUpPtBBup_isLoaded) {
    if (NBJGenjesPileUpPtBBup_branch != 0) {
      NBJGenjesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesPileUpPtBBup_isLoaded = true;
  }
  return *NBJGenjesPileUpPtBBup_;
}

const vector<int> &VVV0Tree::NLJGenjesPileUpPtBBup() {
  if (not NLJGenjesPileUpPtBBup_isLoaded) {
    if (NLJGenjesPileUpPtBBup_branch != 0) {
      NLJGenjesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesPileUpPtBBup_isLoaded = true;
  }
  return *NLJGenjesPileUpPtBBup_;
}

const float &VVV0Tree::MVVXjesPileUpPtBBup() {
  if (not MVVXjesPileUpPtBBup_isLoaded) {
    if (MVVXjesPileUpPtBBup_branch != 0) {
      MVVXjesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    MVVXjesPileUpPtBBup_isLoaded = true;
  }
  return MVVXjesPileUpPtBBup_;
}

const float &VVV0Tree::PtVVXjesPileUpPtBBup() {
  if (not PtVVXjesPileUpPtBBup_isLoaded) {
    if (PtVVXjesPileUpPtBBup_branch != 0) {
      PtVVXjesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesPileUpPtBBup_isLoaded = true;
  }
  return PtVVXjesPileUpPtBBup_;
}

const float &VVV0Tree::HTjesPileUpPtBBup() {
  if (not HTjesPileUpPtBBup_isLoaded) {
    if (HTjesPileUpPtBBup_branch != 0) {
      HTjesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch HTjesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    HTjesPileUpPtBBup_isLoaded = true;
  }
  return HTjesPileUpPtBBup_;
}

const float &VVV0Tree::HTJjesPileUpPtBBup() {
  if (not HTJjesPileUpPtBBup_isLoaded) {
    if (HTJjesPileUpPtBBup_branch != 0) {
      HTJjesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch HTJjesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    HTJjesPileUpPtBBup_isLoaded = true;
  }
  return HTJjesPileUpPtBBup_;
}

const float &VVV0Tree::HTFJjesPileUpPtBBup() {
  if (not HTFJjesPileUpPtBBup_isLoaded) {
    if (HTFJjesPileUpPtBBup_branch != 0) {
      HTFJjesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    HTFJjesPileUpPtBBup_isLoaded = true;
  }
  return HTFJjesPileUpPtBBup_;
}

const float &VVV0Tree::SumPtFJjesPileUpPtBBup() {
  if (not SumPtFJjesPileUpPtBBup_isLoaded) {
    if (SumPtFJjesPileUpPtBBup_branch != 0) {
      SumPtFJjesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesPileUpPtBBup_isLoaded = true;
  }
  return SumPtFJjesPileUpPtBBup_;
}

const float &VVV0Tree::SumPtJjesPileUpPtBBup() {
  if (not SumPtJjesPileUpPtBBup_isLoaded) {
    if (SumPtJjesPileUpPtBBup_branch != 0) {
      SumPtJjesPileUpPtBBup_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesPileUpPtBBup_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesPileUpPtBBup_isLoaded = true;
  }
  return SumPtJjesPileUpPtBBup_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesPileUpPtBBdn() {
  if (not JsjesPileUpPtBBdn_isLoaded) {
    if (JsjesPileUpPtBBdn_branch != 0) {
      JsjesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch JsjesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    JsjesPileUpPtBBdn_isLoaded = true;
  }
  return *JsjesPileUpPtBBdn_;
}

const int &VVV0Tree::NFJjesPileUpPtBBdn() {
  if (not NFJjesPileUpPtBBdn_isLoaded) {
    if (NFJjesPileUpPtBBdn_branch != 0) {
      NFJjesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NFJjesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    NFJjesPileUpPtBBdn_isLoaded = true;
  }
  return NFJjesPileUpPtBBdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesPileUpPtBBdn() {
  if (not FJ0jesPileUpPtBBdn_isLoaded) {
    if (FJ0jesPileUpPtBBdn_branch != 0) {
      FJ0jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    FJ0jesPileUpPtBBdn_isLoaded = true;
  }
  return *FJ0jesPileUpPtBBdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesPileUpPtBBdn() {
  if (not FJ1jesPileUpPtBBdn_isLoaded) {
    if (FJ1jesPileUpPtBBdn_branch != 0) {
      FJ1jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    FJ1jesPileUpPtBBdn_isLoaded = true;
  }
  return *FJ1jesPileUpPtBBdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesPileUpPtBBdn() {
  if (not FJ2jesPileUpPtBBdn_isLoaded) {
    if (FJ2jesPileUpPtBBdn_branch != 0) {
      FJ2jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    FJ2jesPileUpPtBBdn_isLoaded = true;
  }
  return *FJ2jesPileUpPtBBdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesPileUpPtBBdn() {
  if (not FJ3jesPileUpPtBBdn_isLoaded) {
    if (FJ3jesPileUpPtBBdn_branch != 0) {
      FJ3jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    FJ3jesPileUpPtBBdn_isLoaded = true;
  }
  return *FJ3jesPileUpPtBBdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesPileUpPtBBdn() {
  if (not FJ4jesPileUpPtBBdn_isLoaded) {
    if (FJ4jesPileUpPtBBdn_branch != 0) {
      FJ4jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    FJ4jesPileUpPtBBdn_isLoaded = true;
  }
  return *FJ4jesPileUpPtBBdn_;
}

const float &VVV0Tree::VMD0jesPileUpPtBBdn() {
  if (not VMD0jesPileUpPtBBdn_isLoaded) {
    if (VMD0jesPileUpPtBBdn_branch != 0) {
      VMD0jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    VMD0jesPileUpPtBBdn_isLoaded = true;
  }
  return VMD0jesPileUpPtBBdn_;
}

const float &VVV0Tree::VMD1jesPileUpPtBBdn() {
  if (not VMD1jesPileUpPtBBdn_isLoaded) {
    if (VMD1jesPileUpPtBBdn_branch != 0) {
      VMD1jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    VMD1jesPileUpPtBBdn_isLoaded = true;
  }
  return VMD1jesPileUpPtBBdn_;
}

const float &VVV0Tree::VMD2jesPileUpPtBBdn() {
  if (not VMD2jesPileUpPtBBdn_isLoaded) {
    if (VMD2jesPileUpPtBBdn_branch != 0) {
      VMD2jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    VMD2jesPileUpPtBBdn_isLoaded = true;
  }
  return VMD2jesPileUpPtBBdn_;
}

const float &VVV0Tree::VMD3jesPileUpPtBBdn() {
  if (not VMD3jesPileUpPtBBdn_isLoaded) {
    if (VMD3jesPileUpPtBBdn_branch != 0) {
      VMD3jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    VMD3jesPileUpPtBBdn_isLoaded = true;
  }
  return VMD3jesPileUpPtBBdn_;
}

const float &VVV0Tree::VMD4jesPileUpPtBBdn() {
  if (not VMD4jesPileUpPtBBdn_isLoaded) {
    if (VMD4jesPileUpPtBBdn_branch != 0) {
      VMD4jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    VMD4jesPileUpPtBBdn_isLoaded = true;
  }
  return VMD4jesPileUpPtBBdn_;
}

const float &VVV0Tree::WMD0jesPileUpPtBBdn() {
  if (not WMD0jesPileUpPtBBdn_isLoaded) {
    if (WMD0jesPileUpPtBBdn_branch != 0) {
      WMD0jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    WMD0jesPileUpPtBBdn_isLoaded = true;
  }
  return WMD0jesPileUpPtBBdn_;
}

const float &VVV0Tree::WMD1jesPileUpPtBBdn() {
  if (not WMD1jesPileUpPtBBdn_isLoaded) {
    if (WMD1jesPileUpPtBBdn_branch != 0) {
      WMD1jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    WMD1jesPileUpPtBBdn_isLoaded = true;
  }
  return WMD1jesPileUpPtBBdn_;
}

const float &VVV0Tree::WMD2jesPileUpPtBBdn() {
  if (not WMD2jesPileUpPtBBdn_isLoaded) {
    if (WMD2jesPileUpPtBBdn_branch != 0) {
      WMD2jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    WMD2jesPileUpPtBBdn_isLoaded = true;
  }
  return WMD2jesPileUpPtBBdn_;
}

const float &VVV0Tree::WMD3jesPileUpPtBBdn() {
  if (not WMD3jesPileUpPtBBdn_isLoaded) {
    if (WMD3jesPileUpPtBBdn_branch != 0) {
      WMD3jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    WMD3jesPileUpPtBBdn_isLoaded = true;
  }
  return WMD3jesPileUpPtBBdn_;
}

const float &VVV0Tree::WMD4jesPileUpPtBBdn() {
  if (not WMD4jesPileUpPtBBdn_isLoaded) {
    if (WMD4jesPileUpPtBBdn_branch != 0) {
      WMD4jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    WMD4jesPileUpPtBBdn_isLoaded = true;
  }
  return WMD4jesPileUpPtBBdn_;
}

const int &VVV0Tree::NQGen0jesPileUpPtBBdn() {
  if (not NQGen0jesPileUpPtBBdn_isLoaded) {
    if (NQGen0jesPileUpPtBBdn_branch != 0) {
      NQGen0jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesPileUpPtBBdn_isLoaded = true;
  }
  return NQGen0jesPileUpPtBBdn_;
}

const int &VVV0Tree::NQGen1jesPileUpPtBBdn() {
  if (not NQGen1jesPileUpPtBBdn_isLoaded) {
    if (NQGen1jesPileUpPtBBdn_branch != 0) {
      NQGen1jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesPileUpPtBBdn_isLoaded = true;
  }
  return NQGen1jesPileUpPtBBdn_;
}

const int &VVV0Tree::NQGen2jesPileUpPtBBdn() {
  if (not NQGen2jesPileUpPtBBdn_isLoaded) {
    if (NQGen2jesPileUpPtBBdn_branch != 0) {
      NQGen2jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesPileUpPtBBdn_isLoaded = true;
  }
  return NQGen2jesPileUpPtBBdn_;
}

const int &VVV0Tree::NQGen3jesPileUpPtBBdn() {
  if (not NQGen3jesPileUpPtBBdn_isLoaded) {
    if (NQGen3jesPileUpPtBBdn_branch != 0) {
      NQGen3jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesPileUpPtBBdn_isLoaded = true;
  }
  return NQGen3jesPileUpPtBBdn_;
}

const int &VVV0Tree::NQGen4jesPileUpPtBBdn() {
  if (not NQGen4jesPileUpPtBBdn_isLoaded) {
    if (NQGen4jesPileUpPtBBdn_branch != 0) {
      NQGen4jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesPileUpPtBBdn_isLoaded = true;
  }
  return NQGen4jesPileUpPtBBdn_;
}

const int &VVV0Tree::NBGen0jesPileUpPtBBdn() {
  if (not NBGen0jesPileUpPtBBdn_isLoaded) {
    if (NBGen0jesPileUpPtBBdn_branch != 0) {
      NBGen0jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesPileUpPtBBdn_isLoaded = true;
  }
  return NBGen0jesPileUpPtBBdn_;
}

const int &VVV0Tree::NBGen1jesPileUpPtBBdn() {
  if (not NBGen1jesPileUpPtBBdn_isLoaded) {
    if (NBGen1jesPileUpPtBBdn_branch != 0) {
      NBGen1jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesPileUpPtBBdn_isLoaded = true;
  }
  return NBGen1jesPileUpPtBBdn_;
}

const int &VVV0Tree::NBGen2jesPileUpPtBBdn() {
  if (not NBGen2jesPileUpPtBBdn_isLoaded) {
    if (NBGen2jesPileUpPtBBdn_branch != 0) {
      NBGen2jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesPileUpPtBBdn_isLoaded = true;
  }
  return NBGen2jesPileUpPtBBdn_;
}

const int &VVV0Tree::NBGen3jesPileUpPtBBdn() {
  if (not NBGen3jesPileUpPtBBdn_isLoaded) {
    if (NBGen3jesPileUpPtBBdn_branch != 0) {
      NBGen3jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesPileUpPtBBdn_isLoaded = true;
  }
  return NBGen3jesPileUpPtBBdn_;
}

const int &VVV0Tree::NBGen4jesPileUpPtBBdn() {
  if (not NBGen4jesPileUpPtBBdn_isLoaded) {
    if (NBGen4jesPileUpPtBBdn_branch != 0) {
      NBGen4jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesPileUpPtBBdn_isLoaded = true;
  }
  return NBGen4jesPileUpPtBBdn_;
}

const int &VVV0Tree::NLGen0jesPileUpPtBBdn() {
  if (not NLGen0jesPileUpPtBBdn_isLoaded) {
    if (NLGen0jesPileUpPtBBdn_branch != 0) {
      NLGen0jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesPileUpPtBBdn_isLoaded = true;
  }
  return NLGen0jesPileUpPtBBdn_;
}

const int &VVV0Tree::NLGen1jesPileUpPtBBdn() {
  if (not NLGen1jesPileUpPtBBdn_isLoaded) {
    if (NLGen1jesPileUpPtBBdn_branch != 0) {
      NLGen1jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesPileUpPtBBdn_isLoaded = true;
  }
  return NLGen1jesPileUpPtBBdn_;
}

const int &VVV0Tree::NLGen2jesPileUpPtBBdn() {
  if (not NLGen2jesPileUpPtBBdn_isLoaded) {
    if (NLGen2jesPileUpPtBBdn_branch != 0) {
      NLGen2jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesPileUpPtBBdn_isLoaded = true;
  }
  return NLGen2jesPileUpPtBBdn_;
}

const int &VVV0Tree::NLGen3jesPileUpPtBBdn() {
  if (not NLGen3jesPileUpPtBBdn_isLoaded) {
    if (NLGen3jesPileUpPtBBdn_branch != 0) {
      NLGen3jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesPileUpPtBBdn_isLoaded = true;
  }
  return NLGen3jesPileUpPtBBdn_;
}

const int &VVV0Tree::NLGen4jesPileUpPtBBdn() {
  if (not NLGen4jesPileUpPtBBdn_isLoaded) {
    if (NLGen4jesPileUpPtBBdn_branch != 0) {
      NLGen4jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesPileUpPtBBdn_isLoaded = true;
  }
  return NLGen4jesPileUpPtBBdn_;
}

const int &VVV0Tree::NVQGen0jesPileUpPtBBdn() {
  if (not NVQGen0jesPileUpPtBBdn_isLoaded) {
    if (NVQGen0jesPileUpPtBBdn_branch != 0) {
      NVQGen0jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesPileUpPtBBdn_isLoaded = true;
  }
  return NVQGen0jesPileUpPtBBdn_;
}

const int &VVV0Tree::NVQGen1jesPileUpPtBBdn() {
  if (not NVQGen1jesPileUpPtBBdn_isLoaded) {
    if (NVQGen1jesPileUpPtBBdn_branch != 0) {
      NVQGen1jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesPileUpPtBBdn_isLoaded = true;
  }
  return NVQGen1jesPileUpPtBBdn_;
}

const int &VVV0Tree::NVQGen2jesPileUpPtBBdn() {
  if (not NVQGen2jesPileUpPtBBdn_isLoaded) {
    if (NVQGen2jesPileUpPtBBdn_branch != 0) {
      NVQGen2jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesPileUpPtBBdn_isLoaded = true;
  }
  return NVQGen2jesPileUpPtBBdn_;
}

const int &VVV0Tree::NVQGen3jesPileUpPtBBdn() {
  if (not NVQGen3jesPileUpPtBBdn_isLoaded) {
    if (NVQGen3jesPileUpPtBBdn_branch != 0) {
      NVQGen3jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesPileUpPtBBdn_isLoaded = true;
  }
  return NVQGen3jesPileUpPtBBdn_;
}

const int &VVV0Tree::NVQGen4jesPileUpPtBBdn() {
  if (not NVQGen4jesPileUpPtBBdn_isLoaded) {
    if (NVQGen4jesPileUpPtBBdn_branch != 0) {
      NVQGen4jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesPileUpPtBBdn_isLoaded = true;
  }
  return NVQGen4jesPileUpPtBBdn_;
}

const int &VVV0Tree::NiFJjesPileUpPtBBdn() {
  if (not NiFJjesPileUpPtBBdn_isLoaded) {
    if (NiFJjesPileUpPtBBdn_branch != 0) {
      NiFJjesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    NiFJjesPileUpPtBBdn_isLoaded = true;
  }
  return NiFJjesPileUpPtBBdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesPileUpPtBBdn() {
  if (not iFJ0jesPileUpPtBBdn_isLoaded) {
    if (iFJ0jesPileUpPtBBdn_branch != 0) {
      iFJ0jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesPileUpPtBBdn_isLoaded = true;
  }
  return *iFJ0jesPileUpPtBBdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesPileUpPtBBdn() {
  if (not iFJ1jesPileUpPtBBdn_isLoaded) {
    if (iFJ1jesPileUpPtBBdn_branch != 0) {
      iFJ1jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesPileUpPtBBdn_isLoaded = true;
  }
  return *iFJ1jesPileUpPtBBdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesPileUpPtBBdn() {
  if (not iFJ2jesPileUpPtBBdn_isLoaded) {
    if (iFJ2jesPileUpPtBBdn_branch != 0) {
      iFJ2jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesPileUpPtBBdn_isLoaded = true;
  }
  return *iFJ2jesPileUpPtBBdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesPileUpPtBBdn() {
  if (not iFJ3jesPileUpPtBBdn_isLoaded) {
    if (iFJ3jesPileUpPtBBdn_branch != 0) {
      iFJ3jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesPileUpPtBBdn_isLoaded = true;
  }
  return *iFJ3jesPileUpPtBBdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesPileUpPtBBdn() {
  if (not iFJ4jesPileUpPtBBdn_isLoaded) {
    if (iFJ4jesPileUpPtBBdn_branch != 0) {
      iFJ4jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesPileUpPtBBdn_isLoaded = true;
  }
  return *iFJ4jesPileUpPtBBdn_;
}

const float &VVV0Tree::iVMD0jesPileUpPtBBdn() {
  if (not iVMD0jesPileUpPtBBdn_isLoaded) {
    if (iVMD0jesPileUpPtBBdn_branch != 0) {
      iVMD0jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesPileUpPtBBdn_isLoaded = true;
  }
  return iVMD0jesPileUpPtBBdn_;
}

const float &VVV0Tree::iVMD1jesPileUpPtBBdn() {
  if (not iVMD1jesPileUpPtBBdn_isLoaded) {
    if (iVMD1jesPileUpPtBBdn_branch != 0) {
      iVMD1jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesPileUpPtBBdn_isLoaded = true;
  }
  return iVMD1jesPileUpPtBBdn_;
}

const float &VVV0Tree::iVMD2jesPileUpPtBBdn() {
  if (not iVMD2jesPileUpPtBBdn_isLoaded) {
    if (iVMD2jesPileUpPtBBdn_branch != 0) {
      iVMD2jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesPileUpPtBBdn_isLoaded = true;
  }
  return iVMD2jesPileUpPtBBdn_;
}

const float &VVV0Tree::iVMD3jesPileUpPtBBdn() {
  if (not iVMD3jesPileUpPtBBdn_isLoaded) {
    if (iVMD3jesPileUpPtBBdn_branch != 0) {
      iVMD3jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesPileUpPtBBdn_isLoaded = true;
  }
  return iVMD3jesPileUpPtBBdn_;
}

const float &VVV0Tree::iVMD4jesPileUpPtBBdn() {
  if (not iVMD4jesPileUpPtBBdn_isLoaded) {
    if (iVMD4jesPileUpPtBBdn_branch != 0) {
      iVMD4jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesPileUpPtBBdn_isLoaded = true;
  }
  return iVMD4jesPileUpPtBBdn_;
}

const float &VVV0Tree::iWMD0jesPileUpPtBBdn() {
  if (not iWMD0jesPileUpPtBBdn_isLoaded) {
    if (iWMD0jesPileUpPtBBdn_branch != 0) {
      iWMD0jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesPileUpPtBBdn_isLoaded = true;
  }
  return iWMD0jesPileUpPtBBdn_;
}

const float &VVV0Tree::iWMD1jesPileUpPtBBdn() {
  if (not iWMD1jesPileUpPtBBdn_isLoaded) {
    if (iWMD1jesPileUpPtBBdn_branch != 0) {
      iWMD1jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesPileUpPtBBdn_isLoaded = true;
  }
  return iWMD1jesPileUpPtBBdn_;
}

const float &VVV0Tree::iWMD2jesPileUpPtBBdn() {
  if (not iWMD2jesPileUpPtBBdn_isLoaded) {
    if (iWMD2jesPileUpPtBBdn_branch != 0) {
      iWMD2jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesPileUpPtBBdn_isLoaded = true;
  }
  return iWMD2jesPileUpPtBBdn_;
}

const float &VVV0Tree::iWMD3jesPileUpPtBBdn() {
  if (not iWMD3jesPileUpPtBBdn_isLoaded) {
    if (iWMD3jesPileUpPtBBdn_branch != 0) {
      iWMD3jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesPileUpPtBBdn_isLoaded = true;
  }
  return iWMD3jesPileUpPtBBdn_;
}

const float &VVV0Tree::iWMD4jesPileUpPtBBdn() {
  if (not iWMD4jesPileUpPtBBdn_isLoaded) {
    if (iWMD4jesPileUpPtBBdn_branch != 0) {
      iWMD4jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesPileUpPtBBdn_isLoaded = true;
  }
  return iWMD4jesPileUpPtBBdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesPileUpPtBBdn() {
  if (not METjesPileUpPtBBdn_isLoaded) {
    if (METjesPileUpPtBBdn_branch != 0) {
      METjesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch METjesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    METjesPileUpPtBBdn_isLoaded = true;
  }
  return *METjesPileUpPtBBdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesPileUpPtBBdn() {
  if (not NujesPileUpPtBBdn_isLoaded) {
    if (NujesPileUpPtBBdn_branch != 0) {
      NujesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NujesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    NujesPileUpPtBBdn_isLoaded = true;
  }
  return *NujesPileUpPtBBdn_;
}

const int &VVV0Tree::NJjesPileUpPtBBdn() {
  if (not NJjesPileUpPtBBdn_isLoaded) {
    if (NJjesPileUpPtBBdn_branch != 0) {
      NJjesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NJjesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    NJjesPileUpPtBBdn_isLoaded = true;
  }
  return NJjesPileUpPtBBdn_;
}

const int &VVV0Tree::NbLoosejesPileUpPtBBdn() {
  if (not NbLoosejesPileUpPtBBdn_isLoaded) {
    if (NbLoosejesPileUpPtBBdn_branch != 0) {
      NbLoosejesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesPileUpPtBBdn_isLoaded = true;
  }
  return NbLoosejesPileUpPtBBdn_;
}

const int &VVV0Tree::NbMediumjesPileUpPtBBdn() {
  if (not NbMediumjesPileUpPtBBdn_isLoaded) {
    if (NbMediumjesPileUpPtBBdn_branch != 0) {
      NbMediumjesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesPileUpPtBBdn_isLoaded = true;
  }
  return NbMediumjesPileUpPtBBdn_;
}

const int &VVV0Tree::NbTightjesPileUpPtBBdn() {
  if (not NbTightjesPileUpPtBBdn_isLoaded) {
    if (NbTightjesPileUpPtBBdn_branch != 0) {
      NbTightjesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    NbTightjesPileUpPtBBdn_isLoaded = true;
  }
  return NbTightjesPileUpPtBBdn_;
}

const int &VVV0Tree::NoORNbLoosejesPileUpPtBBdn() {
  if (not NoORNbLoosejesPileUpPtBBdn_isLoaded) {
    if (NoORNbLoosejesPileUpPtBBdn_branch != 0) {
      NoORNbLoosejesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesPileUpPtBBdn_isLoaded = true;
  }
  return NoORNbLoosejesPileUpPtBBdn_;
}

const int &VVV0Tree::NoORNbMediumjesPileUpPtBBdn() {
  if (not NoORNbMediumjesPileUpPtBBdn_isLoaded) {
    if (NoORNbMediumjesPileUpPtBBdn_branch != 0) {
      NoORNbMediumjesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesPileUpPtBBdn_isLoaded = true;
  }
  return NoORNbMediumjesPileUpPtBBdn_;
}

const int &VVV0Tree::NoORNbTightjesPileUpPtBBdn() {
  if (not NoORNbTightjesPileUpPtBBdn_isLoaded) {
    if (NoORNbTightjesPileUpPtBBdn_branch != 0) {
      NoORNbTightjesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesPileUpPtBBdn_isLoaded = true;
  }
  return NoORNbTightjesPileUpPtBBdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesPileUpPtBBdn() {
  if (not J0jesPileUpPtBBdn_isLoaded) {
    if (J0jesPileUpPtBBdn_branch != 0) {
      J0jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch J0jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    J0jesPileUpPtBBdn_isLoaded = true;
  }
  return *J0jesPileUpPtBBdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesPileUpPtBBdn() {
  if (not J1jesPileUpPtBBdn_isLoaded) {
    if (J1jesPileUpPtBBdn_branch != 0) {
      J1jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch J1jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    J1jesPileUpPtBBdn_isLoaded = true;
  }
  return *J1jesPileUpPtBBdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesPileUpPtBBdn() {
  if (not J2jesPileUpPtBBdn_isLoaded) {
    if (J2jesPileUpPtBBdn_branch != 0) {
      J2jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch J2jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    J2jesPileUpPtBBdn_isLoaded = true;
  }
  return *J2jesPileUpPtBBdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesPileUpPtBBdn() {
  if (not J3jesPileUpPtBBdn_isLoaded) {
    if (J3jesPileUpPtBBdn_branch != 0) {
      J3jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch J3jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    J3jesPileUpPtBBdn_isLoaded = true;
  }
  return *J3jesPileUpPtBBdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesPileUpPtBBdn() {
  if (not J4jesPileUpPtBBdn_isLoaded) {
    if (J4jesPileUpPtBBdn_branch != 0) {
      J4jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch J4jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    J4jesPileUpPtBBdn_isLoaded = true;
  }
  return *J4jesPileUpPtBBdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesPileUpPtBBdn() {
  if (not J5jesPileUpPtBBdn_isLoaded) {
    if (J5jesPileUpPtBBdn_branch != 0) {
      J5jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch J5jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    J5jesPileUpPtBBdn_isLoaded = true;
  }
  return *J5jesPileUpPtBBdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesPileUpPtBBdn() {
  if (not J6jesPileUpPtBBdn_isLoaded) {
    if (J6jesPileUpPtBBdn_branch != 0) {
      J6jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch J6jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    J6jesPileUpPtBBdn_isLoaded = true;
  }
  return *J6jesPileUpPtBBdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesPileUpPtBBdn() {
  if (not J7jesPileUpPtBBdn_isLoaded) {
    if (J7jesPileUpPtBBdn_branch != 0) {
      J7jesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch J7jesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    J7jesPileUpPtBBdn_isLoaded = true;
  }
  return *J7jesPileUpPtBBdn_;
}

const vector<int> &VVV0Tree::NQJGenjesPileUpPtBBdn() {
  if (not NQJGenjesPileUpPtBBdn_isLoaded) {
    if (NQJGenjesPileUpPtBBdn_branch != 0) {
      NQJGenjesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesPileUpPtBBdn_isLoaded = true;
  }
  return *NQJGenjesPileUpPtBBdn_;
}

const vector<int> &VVV0Tree::NBJGenjesPileUpPtBBdn() {
  if (not NBJGenjesPileUpPtBBdn_isLoaded) {
    if (NBJGenjesPileUpPtBBdn_branch != 0) {
      NBJGenjesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesPileUpPtBBdn_isLoaded = true;
  }
  return *NBJGenjesPileUpPtBBdn_;
}

const vector<int> &VVV0Tree::NLJGenjesPileUpPtBBdn() {
  if (not NLJGenjesPileUpPtBBdn_isLoaded) {
    if (NLJGenjesPileUpPtBBdn_branch != 0) {
      NLJGenjesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesPileUpPtBBdn_isLoaded = true;
  }
  return *NLJGenjesPileUpPtBBdn_;
}

const float &VVV0Tree::MVVXjesPileUpPtBBdn() {
  if (not MVVXjesPileUpPtBBdn_isLoaded) {
    if (MVVXjesPileUpPtBBdn_branch != 0) {
      MVVXjesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    MVVXjesPileUpPtBBdn_isLoaded = true;
  }
  return MVVXjesPileUpPtBBdn_;
}

const float &VVV0Tree::PtVVXjesPileUpPtBBdn() {
  if (not PtVVXjesPileUpPtBBdn_isLoaded) {
    if (PtVVXjesPileUpPtBBdn_branch != 0) {
      PtVVXjesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesPileUpPtBBdn_isLoaded = true;
  }
  return PtVVXjesPileUpPtBBdn_;
}

const float &VVV0Tree::HTjesPileUpPtBBdn() {
  if (not HTjesPileUpPtBBdn_isLoaded) {
    if (HTjesPileUpPtBBdn_branch != 0) {
      HTjesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch HTjesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    HTjesPileUpPtBBdn_isLoaded = true;
  }
  return HTjesPileUpPtBBdn_;
}

const float &VVV0Tree::HTJjesPileUpPtBBdn() {
  if (not HTJjesPileUpPtBBdn_isLoaded) {
    if (HTJjesPileUpPtBBdn_branch != 0) {
      HTJjesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch HTJjesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    HTJjesPileUpPtBBdn_isLoaded = true;
  }
  return HTJjesPileUpPtBBdn_;
}

const float &VVV0Tree::HTFJjesPileUpPtBBdn() {
  if (not HTFJjesPileUpPtBBdn_isLoaded) {
    if (HTFJjesPileUpPtBBdn_branch != 0) {
      HTFJjesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    HTFJjesPileUpPtBBdn_isLoaded = true;
  }
  return HTFJjesPileUpPtBBdn_;
}

const float &VVV0Tree::SumPtFJjesPileUpPtBBdn() {
  if (not SumPtFJjesPileUpPtBBdn_isLoaded) {
    if (SumPtFJjesPileUpPtBBdn_branch != 0) {
      SumPtFJjesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesPileUpPtBBdn_isLoaded = true;
  }
  return SumPtFJjesPileUpPtBBdn_;
}

const float &VVV0Tree::SumPtJjesPileUpPtBBdn() {
  if (not SumPtJjesPileUpPtBBdn_isLoaded) {
    if (SumPtJjesPileUpPtBBdn_branch != 0) {
      SumPtJjesPileUpPtBBdn_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesPileUpPtBBdn_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesPileUpPtBBdn_isLoaded = true;
  }
  return SumPtJjesPileUpPtBBdn_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesPileUpPtEC1up() {
  if (not JsjesPileUpPtEC1up_isLoaded) {
    if (JsjesPileUpPtEC1up_branch != 0) {
      JsjesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch JsjesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    JsjesPileUpPtEC1up_isLoaded = true;
  }
  return *JsjesPileUpPtEC1up_;
}

const int &VVV0Tree::NFJjesPileUpPtEC1up() {
  if (not NFJjesPileUpPtEC1up_isLoaded) {
    if (NFJjesPileUpPtEC1up_branch != 0) {
      NFJjesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NFJjesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    NFJjesPileUpPtEC1up_isLoaded = true;
  }
  return NFJjesPileUpPtEC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesPileUpPtEC1up() {
  if (not FJ0jesPileUpPtEC1up_isLoaded) {
    if (FJ0jesPileUpPtEC1up_branch != 0) {
      FJ0jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    FJ0jesPileUpPtEC1up_isLoaded = true;
  }
  return *FJ0jesPileUpPtEC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesPileUpPtEC1up() {
  if (not FJ1jesPileUpPtEC1up_isLoaded) {
    if (FJ1jesPileUpPtEC1up_branch != 0) {
      FJ1jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    FJ1jesPileUpPtEC1up_isLoaded = true;
  }
  return *FJ1jesPileUpPtEC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesPileUpPtEC1up() {
  if (not FJ2jesPileUpPtEC1up_isLoaded) {
    if (FJ2jesPileUpPtEC1up_branch != 0) {
      FJ2jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    FJ2jesPileUpPtEC1up_isLoaded = true;
  }
  return *FJ2jesPileUpPtEC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesPileUpPtEC1up() {
  if (not FJ3jesPileUpPtEC1up_isLoaded) {
    if (FJ3jesPileUpPtEC1up_branch != 0) {
      FJ3jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    FJ3jesPileUpPtEC1up_isLoaded = true;
  }
  return *FJ3jesPileUpPtEC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesPileUpPtEC1up() {
  if (not FJ4jesPileUpPtEC1up_isLoaded) {
    if (FJ4jesPileUpPtEC1up_branch != 0) {
      FJ4jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    FJ4jesPileUpPtEC1up_isLoaded = true;
  }
  return *FJ4jesPileUpPtEC1up_;
}

const float &VVV0Tree::VMD0jesPileUpPtEC1up() {
  if (not VMD0jesPileUpPtEC1up_isLoaded) {
    if (VMD0jesPileUpPtEC1up_branch != 0) {
      VMD0jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    VMD0jesPileUpPtEC1up_isLoaded = true;
  }
  return VMD0jesPileUpPtEC1up_;
}

const float &VVV0Tree::VMD1jesPileUpPtEC1up() {
  if (not VMD1jesPileUpPtEC1up_isLoaded) {
    if (VMD1jesPileUpPtEC1up_branch != 0) {
      VMD1jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    VMD1jesPileUpPtEC1up_isLoaded = true;
  }
  return VMD1jesPileUpPtEC1up_;
}

const float &VVV0Tree::VMD2jesPileUpPtEC1up() {
  if (not VMD2jesPileUpPtEC1up_isLoaded) {
    if (VMD2jesPileUpPtEC1up_branch != 0) {
      VMD2jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    VMD2jesPileUpPtEC1up_isLoaded = true;
  }
  return VMD2jesPileUpPtEC1up_;
}

const float &VVV0Tree::VMD3jesPileUpPtEC1up() {
  if (not VMD3jesPileUpPtEC1up_isLoaded) {
    if (VMD3jesPileUpPtEC1up_branch != 0) {
      VMD3jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    VMD3jesPileUpPtEC1up_isLoaded = true;
  }
  return VMD3jesPileUpPtEC1up_;
}

const float &VVV0Tree::VMD4jesPileUpPtEC1up() {
  if (not VMD4jesPileUpPtEC1up_isLoaded) {
    if (VMD4jesPileUpPtEC1up_branch != 0) {
      VMD4jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    VMD4jesPileUpPtEC1up_isLoaded = true;
  }
  return VMD4jesPileUpPtEC1up_;
}

const float &VVV0Tree::WMD0jesPileUpPtEC1up() {
  if (not WMD0jesPileUpPtEC1up_isLoaded) {
    if (WMD0jesPileUpPtEC1up_branch != 0) {
      WMD0jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    WMD0jesPileUpPtEC1up_isLoaded = true;
  }
  return WMD0jesPileUpPtEC1up_;
}

const float &VVV0Tree::WMD1jesPileUpPtEC1up() {
  if (not WMD1jesPileUpPtEC1up_isLoaded) {
    if (WMD1jesPileUpPtEC1up_branch != 0) {
      WMD1jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    WMD1jesPileUpPtEC1up_isLoaded = true;
  }
  return WMD1jesPileUpPtEC1up_;
}

const float &VVV0Tree::WMD2jesPileUpPtEC1up() {
  if (not WMD2jesPileUpPtEC1up_isLoaded) {
    if (WMD2jesPileUpPtEC1up_branch != 0) {
      WMD2jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    WMD2jesPileUpPtEC1up_isLoaded = true;
  }
  return WMD2jesPileUpPtEC1up_;
}

const float &VVV0Tree::WMD3jesPileUpPtEC1up() {
  if (not WMD3jesPileUpPtEC1up_isLoaded) {
    if (WMD3jesPileUpPtEC1up_branch != 0) {
      WMD3jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    WMD3jesPileUpPtEC1up_isLoaded = true;
  }
  return WMD3jesPileUpPtEC1up_;
}

const float &VVV0Tree::WMD4jesPileUpPtEC1up() {
  if (not WMD4jesPileUpPtEC1up_isLoaded) {
    if (WMD4jesPileUpPtEC1up_branch != 0) {
      WMD4jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    WMD4jesPileUpPtEC1up_isLoaded = true;
  }
  return WMD4jesPileUpPtEC1up_;
}

const int &VVV0Tree::NQGen0jesPileUpPtEC1up() {
  if (not NQGen0jesPileUpPtEC1up_isLoaded) {
    if (NQGen0jesPileUpPtEC1up_branch != 0) {
      NQGen0jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesPileUpPtEC1up_isLoaded = true;
  }
  return NQGen0jesPileUpPtEC1up_;
}

const int &VVV0Tree::NQGen1jesPileUpPtEC1up() {
  if (not NQGen1jesPileUpPtEC1up_isLoaded) {
    if (NQGen1jesPileUpPtEC1up_branch != 0) {
      NQGen1jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesPileUpPtEC1up_isLoaded = true;
  }
  return NQGen1jesPileUpPtEC1up_;
}

const int &VVV0Tree::NQGen2jesPileUpPtEC1up() {
  if (not NQGen2jesPileUpPtEC1up_isLoaded) {
    if (NQGen2jesPileUpPtEC1up_branch != 0) {
      NQGen2jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesPileUpPtEC1up_isLoaded = true;
  }
  return NQGen2jesPileUpPtEC1up_;
}

const int &VVV0Tree::NQGen3jesPileUpPtEC1up() {
  if (not NQGen3jesPileUpPtEC1up_isLoaded) {
    if (NQGen3jesPileUpPtEC1up_branch != 0) {
      NQGen3jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesPileUpPtEC1up_isLoaded = true;
  }
  return NQGen3jesPileUpPtEC1up_;
}

const int &VVV0Tree::NQGen4jesPileUpPtEC1up() {
  if (not NQGen4jesPileUpPtEC1up_isLoaded) {
    if (NQGen4jesPileUpPtEC1up_branch != 0) {
      NQGen4jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesPileUpPtEC1up_isLoaded = true;
  }
  return NQGen4jesPileUpPtEC1up_;
}

const int &VVV0Tree::NBGen0jesPileUpPtEC1up() {
  if (not NBGen0jesPileUpPtEC1up_isLoaded) {
    if (NBGen0jesPileUpPtEC1up_branch != 0) {
      NBGen0jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesPileUpPtEC1up_isLoaded = true;
  }
  return NBGen0jesPileUpPtEC1up_;
}

const int &VVV0Tree::NBGen1jesPileUpPtEC1up() {
  if (not NBGen1jesPileUpPtEC1up_isLoaded) {
    if (NBGen1jesPileUpPtEC1up_branch != 0) {
      NBGen1jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesPileUpPtEC1up_isLoaded = true;
  }
  return NBGen1jesPileUpPtEC1up_;
}

const int &VVV0Tree::NBGen2jesPileUpPtEC1up() {
  if (not NBGen2jesPileUpPtEC1up_isLoaded) {
    if (NBGen2jesPileUpPtEC1up_branch != 0) {
      NBGen2jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesPileUpPtEC1up_isLoaded = true;
  }
  return NBGen2jesPileUpPtEC1up_;
}

const int &VVV0Tree::NBGen3jesPileUpPtEC1up() {
  if (not NBGen3jesPileUpPtEC1up_isLoaded) {
    if (NBGen3jesPileUpPtEC1up_branch != 0) {
      NBGen3jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesPileUpPtEC1up_isLoaded = true;
  }
  return NBGen3jesPileUpPtEC1up_;
}

const int &VVV0Tree::NBGen4jesPileUpPtEC1up() {
  if (not NBGen4jesPileUpPtEC1up_isLoaded) {
    if (NBGen4jesPileUpPtEC1up_branch != 0) {
      NBGen4jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesPileUpPtEC1up_isLoaded = true;
  }
  return NBGen4jesPileUpPtEC1up_;
}

const int &VVV0Tree::NLGen0jesPileUpPtEC1up() {
  if (not NLGen0jesPileUpPtEC1up_isLoaded) {
    if (NLGen0jesPileUpPtEC1up_branch != 0) {
      NLGen0jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesPileUpPtEC1up_isLoaded = true;
  }
  return NLGen0jesPileUpPtEC1up_;
}

const int &VVV0Tree::NLGen1jesPileUpPtEC1up() {
  if (not NLGen1jesPileUpPtEC1up_isLoaded) {
    if (NLGen1jesPileUpPtEC1up_branch != 0) {
      NLGen1jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesPileUpPtEC1up_isLoaded = true;
  }
  return NLGen1jesPileUpPtEC1up_;
}

const int &VVV0Tree::NLGen2jesPileUpPtEC1up() {
  if (not NLGen2jesPileUpPtEC1up_isLoaded) {
    if (NLGen2jesPileUpPtEC1up_branch != 0) {
      NLGen2jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesPileUpPtEC1up_isLoaded = true;
  }
  return NLGen2jesPileUpPtEC1up_;
}

const int &VVV0Tree::NLGen3jesPileUpPtEC1up() {
  if (not NLGen3jesPileUpPtEC1up_isLoaded) {
    if (NLGen3jesPileUpPtEC1up_branch != 0) {
      NLGen3jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesPileUpPtEC1up_isLoaded = true;
  }
  return NLGen3jesPileUpPtEC1up_;
}

const int &VVV0Tree::NLGen4jesPileUpPtEC1up() {
  if (not NLGen4jesPileUpPtEC1up_isLoaded) {
    if (NLGen4jesPileUpPtEC1up_branch != 0) {
      NLGen4jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesPileUpPtEC1up_isLoaded = true;
  }
  return NLGen4jesPileUpPtEC1up_;
}

const int &VVV0Tree::NVQGen0jesPileUpPtEC1up() {
  if (not NVQGen0jesPileUpPtEC1up_isLoaded) {
    if (NVQGen0jesPileUpPtEC1up_branch != 0) {
      NVQGen0jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesPileUpPtEC1up_isLoaded = true;
  }
  return NVQGen0jesPileUpPtEC1up_;
}

const int &VVV0Tree::NVQGen1jesPileUpPtEC1up() {
  if (not NVQGen1jesPileUpPtEC1up_isLoaded) {
    if (NVQGen1jesPileUpPtEC1up_branch != 0) {
      NVQGen1jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesPileUpPtEC1up_isLoaded = true;
  }
  return NVQGen1jesPileUpPtEC1up_;
}

const int &VVV0Tree::NVQGen2jesPileUpPtEC1up() {
  if (not NVQGen2jesPileUpPtEC1up_isLoaded) {
    if (NVQGen2jesPileUpPtEC1up_branch != 0) {
      NVQGen2jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesPileUpPtEC1up_isLoaded = true;
  }
  return NVQGen2jesPileUpPtEC1up_;
}

const int &VVV0Tree::NVQGen3jesPileUpPtEC1up() {
  if (not NVQGen3jesPileUpPtEC1up_isLoaded) {
    if (NVQGen3jesPileUpPtEC1up_branch != 0) {
      NVQGen3jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesPileUpPtEC1up_isLoaded = true;
  }
  return NVQGen3jesPileUpPtEC1up_;
}

const int &VVV0Tree::NVQGen4jesPileUpPtEC1up() {
  if (not NVQGen4jesPileUpPtEC1up_isLoaded) {
    if (NVQGen4jesPileUpPtEC1up_branch != 0) {
      NVQGen4jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesPileUpPtEC1up_isLoaded = true;
  }
  return NVQGen4jesPileUpPtEC1up_;
}

const int &VVV0Tree::NiFJjesPileUpPtEC1up() {
  if (not NiFJjesPileUpPtEC1up_isLoaded) {
    if (NiFJjesPileUpPtEC1up_branch != 0) {
      NiFJjesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    NiFJjesPileUpPtEC1up_isLoaded = true;
  }
  return NiFJjesPileUpPtEC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesPileUpPtEC1up() {
  if (not iFJ0jesPileUpPtEC1up_isLoaded) {
    if (iFJ0jesPileUpPtEC1up_branch != 0) {
      iFJ0jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesPileUpPtEC1up_isLoaded = true;
  }
  return *iFJ0jesPileUpPtEC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesPileUpPtEC1up() {
  if (not iFJ1jesPileUpPtEC1up_isLoaded) {
    if (iFJ1jesPileUpPtEC1up_branch != 0) {
      iFJ1jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesPileUpPtEC1up_isLoaded = true;
  }
  return *iFJ1jesPileUpPtEC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesPileUpPtEC1up() {
  if (not iFJ2jesPileUpPtEC1up_isLoaded) {
    if (iFJ2jesPileUpPtEC1up_branch != 0) {
      iFJ2jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesPileUpPtEC1up_isLoaded = true;
  }
  return *iFJ2jesPileUpPtEC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesPileUpPtEC1up() {
  if (not iFJ3jesPileUpPtEC1up_isLoaded) {
    if (iFJ3jesPileUpPtEC1up_branch != 0) {
      iFJ3jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesPileUpPtEC1up_isLoaded = true;
  }
  return *iFJ3jesPileUpPtEC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesPileUpPtEC1up() {
  if (not iFJ4jesPileUpPtEC1up_isLoaded) {
    if (iFJ4jesPileUpPtEC1up_branch != 0) {
      iFJ4jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesPileUpPtEC1up_isLoaded = true;
  }
  return *iFJ4jesPileUpPtEC1up_;
}

const float &VVV0Tree::iVMD0jesPileUpPtEC1up() {
  if (not iVMD0jesPileUpPtEC1up_isLoaded) {
    if (iVMD0jesPileUpPtEC1up_branch != 0) {
      iVMD0jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesPileUpPtEC1up_isLoaded = true;
  }
  return iVMD0jesPileUpPtEC1up_;
}

const float &VVV0Tree::iVMD1jesPileUpPtEC1up() {
  if (not iVMD1jesPileUpPtEC1up_isLoaded) {
    if (iVMD1jesPileUpPtEC1up_branch != 0) {
      iVMD1jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesPileUpPtEC1up_isLoaded = true;
  }
  return iVMD1jesPileUpPtEC1up_;
}

const float &VVV0Tree::iVMD2jesPileUpPtEC1up() {
  if (not iVMD2jesPileUpPtEC1up_isLoaded) {
    if (iVMD2jesPileUpPtEC1up_branch != 0) {
      iVMD2jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesPileUpPtEC1up_isLoaded = true;
  }
  return iVMD2jesPileUpPtEC1up_;
}

const float &VVV0Tree::iVMD3jesPileUpPtEC1up() {
  if (not iVMD3jesPileUpPtEC1up_isLoaded) {
    if (iVMD3jesPileUpPtEC1up_branch != 0) {
      iVMD3jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesPileUpPtEC1up_isLoaded = true;
  }
  return iVMD3jesPileUpPtEC1up_;
}

const float &VVV0Tree::iVMD4jesPileUpPtEC1up() {
  if (not iVMD4jesPileUpPtEC1up_isLoaded) {
    if (iVMD4jesPileUpPtEC1up_branch != 0) {
      iVMD4jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesPileUpPtEC1up_isLoaded = true;
  }
  return iVMD4jesPileUpPtEC1up_;
}

const float &VVV0Tree::iWMD0jesPileUpPtEC1up() {
  if (not iWMD0jesPileUpPtEC1up_isLoaded) {
    if (iWMD0jesPileUpPtEC1up_branch != 0) {
      iWMD0jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesPileUpPtEC1up_isLoaded = true;
  }
  return iWMD0jesPileUpPtEC1up_;
}

const float &VVV0Tree::iWMD1jesPileUpPtEC1up() {
  if (not iWMD1jesPileUpPtEC1up_isLoaded) {
    if (iWMD1jesPileUpPtEC1up_branch != 0) {
      iWMD1jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesPileUpPtEC1up_isLoaded = true;
  }
  return iWMD1jesPileUpPtEC1up_;
}

const float &VVV0Tree::iWMD2jesPileUpPtEC1up() {
  if (not iWMD2jesPileUpPtEC1up_isLoaded) {
    if (iWMD2jesPileUpPtEC1up_branch != 0) {
      iWMD2jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesPileUpPtEC1up_isLoaded = true;
  }
  return iWMD2jesPileUpPtEC1up_;
}

const float &VVV0Tree::iWMD3jesPileUpPtEC1up() {
  if (not iWMD3jesPileUpPtEC1up_isLoaded) {
    if (iWMD3jesPileUpPtEC1up_branch != 0) {
      iWMD3jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesPileUpPtEC1up_isLoaded = true;
  }
  return iWMD3jesPileUpPtEC1up_;
}

const float &VVV0Tree::iWMD4jesPileUpPtEC1up() {
  if (not iWMD4jesPileUpPtEC1up_isLoaded) {
    if (iWMD4jesPileUpPtEC1up_branch != 0) {
      iWMD4jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesPileUpPtEC1up_isLoaded = true;
  }
  return iWMD4jesPileUpPtEC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesPileUpPtEC1up() {
  if (not METjesPileUpPtEC1up_isLoaded) {
    if (METjesPileUpPtEC1up_branch != 0) {
      METjesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch METjesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    METjesPileUpPtEC1up_isLoaded = true;
  }
  return *METjesPileUpPtEC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesPileUpPtEC1up() {
  if (not NujesPileUpPtEC1up_isLoaded) {
    if (NujesPileUpPtEC1up_branch != 0) {
      NujesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NujesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    NujesPileUpPtEC1up_isLoaded = true;
  }
  return *NujesPileUpPtEC1up_;
}

const int &VVV0Tree::NJjesPileUpPtEC1up() {
  if (not NJjesPileUpPtEC1up_isLoaded) {
    if (NJjesPileUpPtEC1up_branch != 0) {
      NJjesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NJjesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    NJjesPileUpPtEC1up_isLoaded = true;
  }
  return NJjesPileUpPtEC1up_;
}

const int &VVV0Tree::NbLoosejesPileUpPtEC1up() {
  if (not NbLoosejesPileUpPtEC1up_isLoaded) {
    if (NbLoosejesPileUpPtEC1up_branch != 0) {
      NbLoosejesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesPileUpPtEC1up_isLoaded = true;
  }
  return NbLoosejesPileUpPtEC1up_;
}

const int &VVV0Tree::NbMediumjesPileUpPtEC1up() {
  if (not NbMediumjesPileUpPtEC1up_isLoaded) {
    if (NbMediumjesPileUpPtEC1up_branch != 0) {
      NbMediumjesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesPileUpPtEC1up_isLoaded = true;
  }
  return NbMediumjesPileUpPtEC1up_;
}

const int &VVV0Tree::NbTightjesPileUpPtEC1up() {
  if (not NbTightjesPileUpPtEC1up_isLoaded) {
    if (NbTightjesPileUpPtEC1up_branch != 0) {
      NbTightjesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    NbTightjesPileUpPtEC1up_isLoaded = true;
  }
  return NbTightjesPileUpPtEC1up_;
}

const int &VVV0Tree::NoORNbLoosejesPileUpPtEC1up() {
  if (not NoORNbLoosejesPileUpPtEC1up_isLoaded) {
    if (NoORNbLoosejesPileUpPtEC1up_branch != 0) {
      NoORNbLoosejesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesPileUpPtEC1up_isLoaded = true;
  }
  return NoORNbLoosejesPileUpPtEC1up_;
}

const int &VVV0Tree::NoORNbMediumjesPileUpPtEC1up() {
  if (not NoORNbMediumjesPileUpPtEC1up_isLoaded) {
    if (NoORNbMediumjesPileUpPtEC1up_branch != 0) {
      NoORNbMediumjesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesPileUpPtEC1up_isLoaded = true;
  }
  return NoORNbMediumjesPileUpPtEC1up_;
}

const int &VVV0Tree::NoORNbTightjesPileUpPtEC1up() {
  if (not NoORNbTightjesPileUpPtEC1up_isLoaded) {
    if (NoORNbTightjesPileUpPtEC1up_branch != 0) {
      NoORNbTightjesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesPileUpPtEC1up_isLoaded = true;
  }
  return NoORNbTightjesPileUpPtEC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesPileUpPtEC1up() {
  if (not J0jesPileUpPtEC1up_isLoaded) {
    if (J0jesPileUpPtEC1up_branch != 0) {
      J0jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch J0jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    J0jesPileUpPtEC1up_isLoaded = true;
  }
  return *J0jesPileUpPtEC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesPileUpPtEC1up() {
  if (not J1jesPileUpPtEC1up_isLoaded) {
    if (J1jesPileUpPtEC1up_branch != 0) {
      J1jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch J1jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    J1jesPileUpPtEC1up_isLoaded = true;
  }
  return *J1jesPileUpPtEC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesPileUpPtEC1up() {
  if (not J2jesPileUpPtEC1up_isLoaded) {
    if (J2jesPileUpPtEC1up_branch != 0) {
      J2jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch J2jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    J2jesPileUpPtEC1up_isLoaded = true;
  }
  return *J2jesPileUpPtEC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesPileUpPtEC1up() {
  if (not J3jesPileUpPtEC1up_isLoaded) {
    if (J3jesPileUpPtEC1up_branch != 0) {
      J3jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch J3jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    J3jesPileUpPtEC1up_isLoaded = true;
  }
  return *J3jesPileUpPtEC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesPileUpPtEC1up() {
  if (not J4jesPileUpPtEC1up_isLoaded) {
    if (J4jesPileUpPtEC1up_branch != 0) {
      J4jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch J4jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    J4jesPileUpPtEC1up_isLoaded = true;
  }
  return *J4jesPileUpPtEC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesPileUpPtEC1up() {
  if (not J5jesPileUpPtEC1up_isLoaded) {
    if (J5jesPileUpPtEC1up_branch != 0) {
      J5jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch J5jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    J5jesPileUpPtEC1up_isLoaded = true;
  }
  return *J5jesPileUpPtEC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesPileUpPtEC1up() {
  if (not J6jesPileUpPtEC1up_isLoaded) {
    if (J6jesPileUpPtEC1up_branch != 0) {
      J6jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch J6jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    J6jesPileUpPtEC1up_isLoaded = true;
  }
  return *J6jesPileUpPtEC1up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesPileUpPtEC1up() {
  if (not J7jesPileUpPtEC1up_isLoaded) {
    if (J7jesPileUpPtEC1up_branch != 0) {
      J7jesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch J7jesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    J7jesPileUpPtEC1up_isLoaded = true;
  }
  return *J7jesPileUpPtEC1up_;
}

const vector<int> &VVV0Tree::NQJGenjesPileUpPtEC1up() {
  if (not NQJGenjesPileUpPtEC1up_isLoaded) {
    if (NQJGenjesPileUpPtEC1up_branch != 0) {
      NQJGenjesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesPileUpPtEC1up_isLoaded = true;
  }
  return *NQJGenjesPileUpPtEC1up_;
}

const vector<int> &VVV0Tree::NBJGenjesPileUpPtEC1up() {
  if (not NBJGenjesPileUpPtEC1up_isLoaded) {
    if (NBJGenjesPileUpPtEC1up_branch != 0) {
      NBJGenjesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesPileUpPtEC1up_isLoaded = true;
  }
  return *NBJGenjesPileUpPtEC1up_;
}

const vector<int> &VVV0Tree::NLJGenjesPileUpPtEC1up() {
  if (not NLJGenjesPileUpPtEC1up_isLoaded) {
    if (NLJGenjesPileUpPtEC1up_branch != 0) {
      NLJGenjesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesPileUpPtEC1up_isLoaded = true;
  }
  return *NLJGenjesPileUpPtEC1up_;
}

const float &VVV0Tree::MVVXjesPileUpPtEC1up() {
  if (not MVVXjesPileUpPtEC1up_isLoaded) {
    if (MVVXjesPileUpPtEC1up_branch != 0) {
      MVVXjesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    MVVXjesPileUpPtEC1up_isLoaded = true;
  }
  return MVVXjesPileUpPtEC1up_;
}

const float &VVV0Tree::PtVVXjesPileUpPtEC1up() {
  if (not PtVVXjesPileUpPtEC1up_isLoaded) {
    if (PtVVXjesPileUpPtEC1up_branch != 0) {
      PtVVXjesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesPileUpPtEC1up_isLoaded = true;
  }
  return PtVVXjesPileUpPtEC1up_;
}

const float &VVV0Tree::HTjesPileUpPtEC1up() {
  if (not HTjesPileUpPtEC1up_isLoaded) {
    if (HTjesPileUpPtEC1up_branch != 0) {
      HTjesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch HTjesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    HTjesPileUpPtEC1up_isLoaded = true;
  }
  return HTjesPileUpPtEC1up_;
}

const float &VVV0Tree::HTJjesPileUpPtEC1up() {
  if (not HTJjesPileUpPtEC1up_isLoaded) {
    if (HTJjesPileUpPtEC1up_branch != 0) {
      HTJjesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch HTJjesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    HTJjesPileUpPtEC1up_isLoaded = true;
  }
  return HTJjesPileUpPtEC1up_;
}

const float &VVV0Tree::HTFJjesPileUpPtEC1up() {
  if (not HTFJjesPileUpPtEC1up_isLoaded) {
    if (HTFJjesPileUpPtEC1up_branch != 0) {
      HTFJjesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    HTFJjesPileUpPtEC1up_isLoaded = true;
  }
  return HTFJjesPileUpPtEC1up_;
}

const float &VVV0Tree::SumPtFJjesPileUpPtEC1up() {
  if (not SumPtFJjesPileUpPtEC1up_isLoaded) {
    if (SumPtFJjesPileUpPtEC1up_branch != 0) {
      SumPtFJjesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesPileUpPtEC1up_isLoaded = true;
  }
  return SumPtFJjesPileUpPtEC1up_;
}

const float &VVV0Tree::SumPtJjesPileUpPtEC1up() {
  if (not SumPtJjesPileUpPtEC1up_isLoaded) {
    if (SumPtJjesPileUpPtEC1up_branch != 0) {
      SumPtJjesPileUpPtEC1up_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesPileUpPtEC1up_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesPileUpPtEC1up_isLoaded = true;
  }
  return SumPtJjesPileUpPtEC1up_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesPileUpPtEC1dn() {
  if (not JsjesPileUpPtEC1dn_isLoaded) {
    if (JsjesPileUpPtEC1dn_branch != 0) {
      JsjesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch JsjesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    JsjesPileUpPtEC1dn_isLoaded = true;
  }
  return *JsjesPileUpPtEC1dn_;
}

const int &VVV0Tree::NFJjesPileUpPtEC1dn() {
  if (not NFJjesPileUpPtEC1dn_isLoaded) {
    if (NFJjesPileUpPtEC1dn_branch != 0) {
      NFJjesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NFJjesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NFJjesPileUpPtEC1dn_isLoaded = true;
  }
  return NFJjesPileUpPtEC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesPileUpPtEC1dn() {
  if (not FJ0jesPileUpPtEC1dn_isLoaded) {
    if (FJ0jesPileUpPtEC1dn_branch != 0) {
      FJ0jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    FJ0jesPileUpPtEC1dn_isLoaded = true;
  }
  return *FJ0jesPileUpPtEC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesPileUpPtEC1dn() {
  if (not FJ1jesPileUpPtEC1dn_isLoaded) {
    if (FJ1jesPileUpPtEC1dn_branch != 0) {
      FJ1jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    FJ1jesPileUpPtEC1dn_isLoaded = true;
  }
  return *FJ1jesPileUpPtEC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesPileUpPtEC1dn() {
  if (not FJ2jesPileUpPtEC1dn_isLoaded) {
    if (FJ2jesPileUpPtEC1dn_branch != 0) {
      FJ2jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    FJ2jesPileUpPtEC1dn_isLoaded = true;
  }
  return *FJ2jesPileUpPtEC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesPileUpPtEC1dn() {
  if (not FJ3jesPileUpPtEC1dn_isLoaded) {
    if (FJ3jesPileUpPtEC1dn_branch != 0) {
      FJ3jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    FJ3jesPileUpPtEC1dn_isLoaded = true;
  }
  return *FJ3jesPileUpPtEC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesPileUpPtEC1dn() {
  if (not FJ4jesPileUpPtEC1dn_isLoaded) {
    if (FJ4jesPileUpPtEC1dn_branch != 0) {
      FJ4jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    FJ4jesPileUpPtEC1dn_isLoaded = true;
  }
  return *FJ4jesPileUpPtEC1dn_;
}

const float &VVV0Tree::VMD0jesPileUpPtEC1dn() {
  if (not VMD0jesPileUpPtEC1dn_isLoaded) {
    if (VMD0jesPileUpPtEC1dn_branch != 0) {
      VMD0jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    VMD0jesPileUpPtEC1dn_isLoaded = true;
  }
  return VMD0jesPileUpPtEC1dn_;
}

const float &VVV0Tree::VMD1jesPileUpPtEC1dn() {
  if (not VMD1jesPileUpPtEC1dn_isLoaded) {
    if (VMD1jesPileUpPtEC1dn_branch != 0) {
      VMD1jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    VMD1jesPileUpPtEC1dn_isLoaded = true;
  }
  return VMD1jesPileUpPtEC1dn_;
}

const float &VVV0Tree::VMD2jesPileUpPtEC1dn() {
  if (not VMD2jesPileUpPtEC1dn_isLoaded) {
    if (VMD2jesPileUpPtEC1dn_branch != 0) {
      VMD2jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    VMD2jesPileUpPtEC1dn_isLoaded = true;
  }
  return VMD2jesPileUpPtEC1dn_;
}

const float &VVV0Tree::VMD3jesPileUpPtEC1dn() {
  if (not VMD3jesPileUpPtEC1dn_isLoaded) {
    if (VMD3jesPileUpPtEC1dn_branch != 0) {
      VMD3jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    VMD3jesPileUpPtEC1dn_isLoaded = true;
  }
  return VMD3jesPileUpPtEC1dn_;
}

const float &VVV0Tree::VMD4jesPileUpPtEC1dn() {
  if (not VMD4jesPileUpPtEC1dn_isLoaded) {
    if (VMD4jesPileUpPtEC1dn_branch != 0) {
      VMD4jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    VMD4jesPileUpPtEC1dn_isLoaded = true;
  }
  return VMD4jesPileUpPtEC1dn_;
}

const float &VVV0Tree::WMD0jesPileUpPtEC1dn() {
  if (not WMD0jesPileUpPtEC1dn_isLoaded) {
    if (WMD0jesPileUpPtEC1dn_branch != 0) {
      WMD0jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    WMD0jesPileUpPtEC1dn_isLoaded = true;
  }
  return WMD0jesPileUpPtEC1dn_;
}

const float &VVV0Tree::WMD1jesPileUpPtEC1dn() {
  if (not WMD1jesPileUpPtEC1dn_isLoaded) {
    if (WMD1jesPileUpPtEC1dn_branch != 0) {
      WMD1jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    WMD1jesPileUpPtEC1dn_isLoaded = true;
  }
  return WMD1jesPileUpPtEC1dn_;
}

const float &VVV0Tree::WMD2jesPileUpPtEC1dn() {
  if (not WMD2jesPileUpPtEC1dn_isLoaded) {
    if (WMD2jesPileUpPtEC1dn_branch != 0) {
      WMD2jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    WMD2jesPileUpPtEC1dn_isLoaded = true;
  }
  return WMD2jesPileUpPtEC1dn_;
}

const float &VVV0Tree::WMD3jesPileUpPtEC1dn() {
  if (not WMD3jesPileUpPtEC1dn_isLoaded) {
    if (WMD3jesPileUpPtEC1dn_branch != 0) {
      WMD3jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    WMD3jesPileUpPtEC1dn_isLoaded = true;
  }
  return WMD3jesPileUpPtEC1dn_;
}

const float &VVV0Tree::WMD4jesPileUpPtEC1dn() {
  if (not WMD4jesPileUpPtEC1dn_isLoaded) {
    if (WMD4jesPileUpPtEC1dn_branch != 0) {
      WMD4jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    WMD4jesPileUpPtEC1dn_isLoaded = true;
  }
  return WMD4jesPileUpPtEC1dn_;
}

const int &VVV0Tree::NQGen0jesPileUpPtEC1dn() {
  if (not NQGen0jesPileUpPtEC1dn_isLoaded) {
    if (NQGen0jesPileUpPtEC1dn_branch != 0) {
      NQGen0jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesPileUpPtEC1dn_isLoaded = true;
  }
  return NQGen0jesPileUpPtEC1dn_;
}

const int &VVV0Tree::NQGen1jesPileUpPtEC1dn() {
  if (not NQGen1jesPileUpPtEC1dn_isLoaded) {
    if (NQGen1jesPileUpPtEC1dn_branch != 0) {
      NQGen1jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesPileUpPtEC1dn_isLoaded = true;
  }
  return NQGen1jesPileUpPtEC1dn_;
}

const int &VVV0Tree::NQGen2jesPileUpPtEC1dn() {
  if (not NQGen2jesPileUpPtEC1dn_isLoaded) {
    if (NQGen2jesPileUpPtEC1dn_branch != 0) {
      NQGen2jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesPileUpPtEC1dn_isLoaded = true;
  }
  return NQGen2jesPileUpPtEC1dn_;
}

const int &VVV0Tree::NQGen3jesPileUpPtEC1dn() {
  if (not NQGen3jesPileUpPtEC1dn_isLoaded) {
    if (NQGen3jesPileUpPtEC1dn_branch != 0) {
      NQGen3jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesPileUpPtEC1dn_isLoaded = true;
  }
  return NQGen3jesPileUpPtEC1dn_;
}

const int &VVV0Tree::NQGen4jesPileUpPtEC1dn() {
  if (not NQGen4jesPileUpPtEC1dn_isLoaded) {
    if (NQGen4jesPileUpPtEC1dn_branch != 0) {
      NQGen4jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesPileUpPtEC1dn_isLoaded = true;
  }
  return NQGen4jesPileUpPtEC1dn_;
}

const int &VVV0Tree::NBGen0jesPileUpPtEC1dn() {
  if (not NBGen0jesPileUpPtEC1dn_isLoaded) {
    if (NBGen0jesPileUpPtEC1dn_branch != 0) {
      NBGen0jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesPileUpPtEC1dn_isLoaded = true;
  }
  return NBGen0jesPileUpPtEC1dn_;
}

const int &VVV0Tree::NBGen1jesPileUpPtEC1dn() {
  if (not NBGen1jesPileUpPtEC1dn_isLoaded) {
    if (NBGen1jesPileUpPtEC1dn_branch != 0) {
      NBGen1jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesPileUpPtEC1dn_isLoaded = true;
  }
  return NBGen1jesPileUpPtEC1dn_;
}

const int &VVV0Tree::NBGen2jesPileUpPtEC1dn() {
  if (not NBGen2jesPileUpPtEC1dn_isLoaded) {
    if (NBGen2jesPileUpPtEC1dn_branch != 0) {
      NBGen2jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesPileUpPtEC1dn_isLoaded = true;
  }
  return NBGen2jesPileUpPtEC1dn_;
}

const int &VVV0Tree::NBGen3jesPileUpPtEC1dn() {
  if (not NBGen3jesPileUpPtEC1dn_isLoaded) {
    if (NBGen3jesPileUpPtEC1dn_branch != 0) {
      NBGen3jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesPileUpPtEC1dn_isLoaded = true;
  }
  return NBGen3jesPileUpPtEC1dn_;
}

const int &VVV0Tree::NBGen4jesPileUpPtEC1dn() {
  if (not NBGen4jesPileUpPtEC1dn_isLoaded) {
    if (NBGen4jesPileUpPtEC1dn_branch != 0) {
      NBGen4jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesPileUpPtEC1dn_isLoaded = true;
  }
  return NBGen4jesPileUpPtEC1dn_;
}

const int &VVV0Tree::NLGen0jesPileUpPtEC1dn() {
  if (not NLGen0jesPileUpPtEC1dn_isLoaded) {
    if (NLGen0jesPileUpPtEC1dn_branch != 0) {
      NLGen0jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesPileUpPtEC1dn_isLoaded = true;
  }
  return NLGen0jesPileUpPtEC1dn_;
}

const int &VVV0Tree::NLGen1jesPileUpPtEC1dn() {
  if (not NLGen1jesPileUpPtEC1dn_isLoaded) {
    if (NLGen1jesPileUpPtEC1dn_branch != 0) {
      NLGen1jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesPileUpPtEC1dn_isLoaded = true;
  }
  return NLGen1jesPileUpPtEC1dn_;
}

const int &VVV0Tree::NLGen2jesPileUpPtEC1dn() {
  if (not NLGen2jesPileUpPtEC1dn_isLoaded) {
    if (NLGen2jesPileUpPtEC1dn_branch != 0) {
      NLGen2jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesPileUpPtEC1dn_isLoaded = true;
  }
  return NLGen2jesPileUpPtEC1dn_;
}

const int &VVV0Tree::NLGen3jesPileUpPtEC1dn() {
  if (not NLGen3jesPileUpPtEC1dn_isLoaded) {
    if (NLGen3jesPileUpPtEC1dn_branch != 0) {
      NLGen3jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesPileUpPtEC1dn_isLoaded = true;
  }
  return NLGen3jesPileUpPtEC1dn_;
}

const int &VVV0Tree::NLGen4jesPileUpPtEC1dn() {
  if (not NLGen4jesPileUpPtEC1dn_isLoaded) {
    if (NLGen4jesPileUpPtEC1dn_branch != 0) {
      NLGen4jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesPileUpPtEC1dn_isLoaded = true;
  }
  return NLGen4jesPileUpPtEC1dn_;
}

const int &VVV0Tree::NVQGen0jesPileUpPtEC1dn() {
  if (not NVQGen0jesPileUpPtEC1dn_isLoaded) {
    if (NVQGen0jesPileUpPtEC1dn_branch != 0) {
      NVQGen0jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesPileUpPtEC1dn_isLoaded = true;
  }
  return NVQGen0jesPileUpPtEC1dn_;
}

const int &VVV0Tree::NVQGen1jesPileUpPtEC1dn() {
  if (not NVQGen1jesPileUpPtEC1dn_isLoaded) {
    if (NVQGen1jesPileUpPtEC1dn_branch != 0) {
      NVQGen1jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesPileUpPtEC1dn_isLoaded = true;
  }
  return NVQGen1jesPileUpPtEC1dn_;
}

const int &VVV0Tree::NVQGen2jesPileUpPtEC1dn() {
  if (not NVQGen2jesPileUpPtEC1dn_isLoaded) {
    if (NVQGen2jesPileUpPtEC1dn_branch != 0) {
      NVQGen2jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesPileUpPtEC1dn_isLoaded = true;
  }
  return NVQGen2jesPileUpPtEC1dn_;
}

const int &VVV0Tree::NVQGen3jesPileUpPtEC1dn() {
  if (not NVQGen3jesPileUpPtEC1dn_isLoaded) {
    if (NVQGen3jesPileUpPtEC1dn_branch != 0) {
      NVQGen3jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesPileUpPtEC1dn_isLoaded = true;
  }
  return NVQGen3jesPileUpPtEC1dn_;
}

const int &VVV0Tree::NVQGen4jesPileUpPtEC1dn() {
  if (not NVQGen4jesPileUpPtEC1dn_isLoaded) {
    if (NVQGen4jesPileUpPtEC1dn_branch != 0) {
      NVQGen4jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesPileUpPtEC1dn_isLoaded = true;
  }
  return NVQGen4jesPileUpPtEC1dn_;
}

const int &VVV0Tree::NiFJjesPileUpPtEC1dn() {
  if (not NiFJjesPileUpPtEC1dn_isLoaded) {
    if (NiFJjesPileUpPtEC1dn_branch != 0) {
      NiFJjesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NiFJjesPileUpPtEC1dn_isLoaded = true;
  }
  return NiFJjesPileUpPtEC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesPileUpPtEC1dn() {
  if (not iFJ0jesPileUpPtEC1dn_isLoaded) {
    if (iFJ0jesPileUpPtEC1dn_branch != 0) {
      iFJ0jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesPileUpPtEC1dn_isLoaded = true;
  }
  return *iFJ0jesPileUpPtEC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesPileUpPtEC1dn() {
  if (not iFJ1jesPileUpPtEC1dn_isLoaded) {
    if (iFJ1jesPileUpPtEC1dn_branch != 0) {
      iFJ1jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesPileUpPtEC1dn_isLoaded = true;
  }
  return *iFJ1jesPileUpPtEC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesPileUpPtEC1dn() {
  if (not iFJ2jesPileUpPtEC1dn_isLoaded) {
    if (iFJ2jesPileUpPtEC1dn_branch != 0) {
      iFJ2jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesPileUpPtEC1dn_isLoaded = true;
  }
  return *iFJ2jesPileUpPtEC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesPileUpPtEC1dn() {
  if (not iFJ3jesPileUpPtEC1dn_isLoaded) {
    if (iFJ3jesPileUpPtEC1dn_branch != 0) {
      iFJ3jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesPileUpPtEC1dn_isLoaded = true;
  }
  return *iFJ3jesPileUpPtEC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesPileUpPtEC1dn() {
  if (not iFJ4jesPileUpPtEC1dn_isLoaded) {
    if (iFJ4jesPileUpPtEC1dn_branch != 0) {
      iFJ4jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesPileUpPtEC1dn_isLoaded = true;
  }
  return *iFJ4jesPileUpPtEC1dn_;
}

const float &VVV0Tree::iVMD0jesPileUpPtEC1dn() {
  if (not iVMD0jesPileUpPtEC1dn_isLoaded) {
    if (iVMD0jesPileUpPtEC1dn_branch != 0) {
      iVMD0jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesPileUpPtEC1dn_isLoaded = true;
  }
  return iVMD0jesPileUpPtEC1dn_;
}

const float &VVV0Tree::iVMD1jesPileUpPtEC1dn() {
  if (not iVMD1jesPileUpPtEC1dn_isLoaded) {
    if (iVMD1jesPileUpPtEC1dn_branch != 0) {
      iVMD1jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesPileUpPtEC1dn_isLoaded = true;
  }
  return iVMD1jesPileUpPtEC1dn_;
}

const float &VVV0Tree::iVMD2jesPileUpPtEC1dn() {
  if (not iVMD2jesPileUpPtEC1dn_isLoaded) {
    if (iVMD2jesPileUpPtEC1dn_branch != 0) {
      iVMD2jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesPileUpPtEC1dn_isLoaded = true;
  }
  return iVMD2jesPileUpPtEC1dn_;
}

const float &VVV0Tree::iVMD3jesPileUpPtEC1dn() {
  if (not iVMD3jesPileUpPtEC1dn_isLoaded) {
    if (iVMD3jesPileUpPtEC1dn_branch != 0) {
      iVMD3jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesPileUpPtEC1dn_isLoaded = true;
  }
  return iVMD3jesPileUpPtEC1dn_;
}

const float &VVV0Tree::iVMD4jesPileUpPtEC1dn() {
  if (not iVMD4jesPileUpPtEC1dn_isLoaded) {
    if (iVMD4jesPileUpPtEC1dn_branch != 0) {
      iVMD4jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesPileUpPtEC1dn_isLoaded = true;
  }
  return iVMD4jesPileUpPtEC1dn_;
}

const float &VVV0Tree::iWMD0jesPileUpPtEC1dn() {
  if (not iWMD0jesPileUpPtEC1dn_isLoaded) {
    if (iWMD0jesPileUpPtEC1dn_branch != 0) {
      iWMD0jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesPileUpPtEC1dn_isLoaded = true;
  }
  return iWMD0jesPileUpPtEC1dn_;
}

const float &VVV0Tree::iWMD1jesPileUpPtEC1dn() {
  if (not iWMD1jesPileUpPtEC1dn_isLoaded) {
    if (iWMD1jesPileUpPtEC1dn_branch != 0) {
      iWMD1jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesPileUpPtEC1dn_isLoaded = true;
  }
  return iWMD1jesPileUpPtEC1dn_;
}

const float &VVV0Tree::iWMD2jesPileUpPtEC1dn() {
  if (not iWMD2jesPileUpPtEC1dn_isLoaded) {
    if (iWMD2jesPileUpPtEC1dn_branch != 0) {
      iWMD2jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesPileUpPtEC1dn_isLoaded = true;
  }
  return iWMD2jesPileUpPtEC1dn_;
}

const float &VVV0Tree::iWMD3jesPileUpPtEC1dn() {
  if (not iWMD3jesPileUpPtEC1dn_isLoaded) {
    if (iWMD3jesPileUpPtEC1dn_branch != 0) {
      iWMD3jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesPileUpPtEC1dn_isLoaded = true;
  }
  return iWMD3jesPileUpPtEC1dn_;
}

const float &VVV0Tree::iWMD4jesPileUpPtEC1dn() {
  if (not iWMD4jesPileUpPtEC1dn_isLoaded) {
    if (iWMD4jesPileUpPtEC1dn_branch != 0) {
      iWMD4jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesPileUpPtEC1dn_isLoaded = true;
  }
  return iWMD4jesPileUpPtEC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesPileUpPtEC1dn() {
  if (not METjesPileUpPtEC1dn_isLoaded) {
    if (METjesPileUpPtEC1dn_branch != 0) {
      METjesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch METjesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    METjesPileUpPtEC1dn_isLoaded = true;
  }
  return *METjesPileUpPtEC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesPileUpPtEC1dn() {
  if (not NujesPileUpPtEC1dn_isLoaded) {
    if (NujesPileUpPtEC1dn_branch != 0) {
      NujesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NujesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NujesPileUpPtEC1dn_isLoaded = true;
  }
  return *NujesPileUpPtEC1dn_;
}

const int &VVV0Tree::NJjesPileUpPtEC1dn() {
  if (not NJjesPileUpPtEC1dn_isLoaded) {
    if (NJjesPileUpPtEC1dn_branch != 0) {
      NJjesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NJjesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NJjesPileUpPtEC1dn_isLoaded = true;
  }
  return NJjesPileUpPtEC1dn_;
}

const int &VVV0Tree::NbLoosejesPileUpPtEC1dn() {
  if (not NbLoosejesPileUpPtEC1dn_isLoaded) {
    if (NbLoosejesPileUpPtEC1dn_branch != 0) {
      NbLoosejesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesPileUpPtEC1dn_isLoaded = true;
  }
  return NbLoosejesPileUpPtEC1dn_;
}

const int &VVV0Tree::NbMediumjesPileUpPtEC1dn() {
  if (not NbMediumjesPileUpPtEC1dn_isLoaded) {
    if (NbMediumjesPileUpPtEC1dn_branch != 0) {
      NbMediumjesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesPileUpPtEC1dn_isLoaded = true;
  }
  return NbMediumjesPileUpPtEC1dn_;
}

const int &VVV0Tree::NbTightjesPileUpPtEC1dn() {
  if (not NbTightjesPileUpPtEC1dn_isLoaded) {
    if (NbTightjesPileUpPtEC1dn_branch != 0) {
      NbTightjesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NbTightjesPileUpPtEC1dn_isLoaded = true;
  }
  return NbTightjesPileUpPtEC1dn_;
}

const int &VVV0Tree::NoORNbLoosejesPileUpPtEC1dn() {
  if (not NoORNbLoosejesPileUpPtEC1dn_isLoaded) {
    if (NoORNbLoosejesPileUpPtEC1dn_branch != 0) {
      NoORNbLoosejesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesPileUpPtEC1dn_isLoaded = true;
  }
  return NoORNbLoosejesPileUpPtEC1dn_;
}

const int &VVV0Tree::NoORNbMediumjesPileUpPtEC1dn() {
  if (not NoORNbMediumjesPileUpPtEC1dn_isLoaded) {
    if (NoORNbMediumjesPileUpPtEC1dn_branch != 0) {
      NoORNbMediumjesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesPileUpPtEC1dn_isLoaded = true;
  }
  return NoORNbMediumjesPileUpPtEC1dn_;
}

const int &VVV0Tree::NoORNbTightjesPileUpPtEC1dn() {
  if (not NoORNbTightjesPileUpPtEC1dn_isLoaded) {
    if (NoORNbTightjesPileUpPtEC1dn_branch != 0) {
      NoORNbTightjesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesPileUpPtEC1dn_isLoaded = true;
  }
  return NoORNbTightjesPileUpPtEC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesPileUpPtEC1dn() {
  if (not J0jesPileUpPtEC1dn_isLoaded) {
    if (J0jesPileUpPtEC1dn_branch != 0) {
      J0jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch J0jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    J0jesPileUpPtEC1dn_isLoaded = true;
  }
  return *J0jesPileUpPtEC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesPileUpPtEC1dn() {
  if (not J1jesPileUpPtEC1dn_isLoaded) {
    if (J1jesPileUpPtEC1dn_branch != 0) {
      J1jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch J1jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    J1jesPileUpPtEC1dn_isLoaded = true;
  }
  return *J1jesPileUpPtEC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesPileUpPtEC1dn() {
  if (not J2jesPileUpPtEC1dn_isLoaded) {
    if (J2jesPileUpPtEC1dn_branch != 0) {
      J2jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch J2jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    J2jesPileUpPtEC1dn_isLoaded = true;
  }
  return *J2jesPileUpPtEC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesPileUpPtEC1dn() {
  if (not J3jesPileUpPtEC1dn_isLoaded) {
    if (J3jesPileUpPtEC1dn_branch != 0) {
      J3jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch J3jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    J3jesPileUpPtEC1dn_isLoaded = true;
  }
  return *J3jesPileUpPtEC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesPileUpPtEC1dn() {
  if (not J4jesPileUpPtEC1dn_isLoaded) {
    if (J4jesPileUpPtEC1dn_branch != 0) {
      J4jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch J4jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    J4jesPileUpPtEC1dn_isLoaded = true;
  }
  return *J4jesPileUpPtEC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesPileUpPtEC1dn() {
  if (not J5jesPileUpPtEC1dn_isLoaded) {
    if (J5jesPileUpPtEC1dn_branch != 0) {
      J5jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch J5jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    J5jesPileUpPtEC1dn_isLoaded = true;
  }
  return *J5jesPileUpPtEC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesPileUpPtEC1dn() {
  if (not J6jesPileUpPtEC1dn_isLoaded) {
    if (J6jesPileUpPtEC1dn_branch != 0) {
      J6jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch J6jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    J6jesPileUpPtEC1dn_isLoaded = true;
  }
  return *J6jesPileUpPtEC1dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesPileUpPtEC1dn() {
  if (not J7jesPileUpPtEC1dn_isLoaded) {
    if (J7jesPileUpPtEC1dn_branch != 0) {
      J7jesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch J7jesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    J7jesPileUpPtEC1dn_isLoaded = true;
  }
  return *J7jesPileUpPtEC1dn_;
}

const vector<int> &VVV0Tree::NQJGenjesPileUpPtEC1dn() {
  if (not NQJGenjesPileUpPtEC1dn_isLoaded) {
    if (NQJGenjesPileUpPtEC1dn_branch != 0) {
      NQJGenjesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesPileUpPtEC1dn_isLoaded = true;
  }
  return *NQJGenjesPileUpPtEC1dn_;
}

const vector<int> &VVV0Tree::NBJGenjesPileUpPtEC1dn() {
  if (not NBJGenjesPileUpPtEC1dn_isLoaded) {
    if (NBJGenjesPileUpPtEC1dn_branch != 0) {
      NBJGenjesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesPileUpPtEC1dn_isLoaded = true;
  }
  return *NBJGenjesPileUpPtEC1dn_;
}

const vector<int> &VVV0Tree::NLJGenjesPileUpPtEC1dn() {
  if (not NLJGenjesPileUpPtEC1dn_isLoaded) {
    if (NLJGenjesPileUpPtEC1dn_branch != 0) {
      NLJGenjesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesPileUpPtEC1dn_isLoaded = true;
  }
  return *NLJGenjesPileUpPtEC1dn_;
}

const float &VVV0Tree::MVVXjesPileUpPtEC1dn() {
  if (not MVVXjesPileUpPtEC1dn_isLoaded) {
    if (MVVXjesPileUpPtEC1dn_branch != 0) {
      MVVXjesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    MVVXjesPileUpPtEC1dn_isLoaded = true;
  }
  return MVVXjesPileUpPtEC1dn_;
}

const float &VVV0Tree::PtVVXjesPileUpPtEC1dn() {
  if (not PtVVXjesPileUpPtEC1dn_isLoaded) {
    if (PtVVXjesPileUpPtEC1dn_branch != 0) {
      PtVVXjesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesPileUpPtEC1dn_isLoaded = true;
  }
  return PtVVXjesPileUpPtEC1dn_;
}

const float &VVV0Tree::HTjesPileUpPtEC1dn() {
  if (not HTjesPileUpPtEC1dn_isLoaded) {
    if (HTjesPileUpPtEC1dn_branch != 0) {
      HTjesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch HTjesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    HTjesPileUpPtEC1dn_isLoaded = true;
  }
  return HTjesPileUpPtEC1dn_;
}

const float &VVV0Tree::HTJjesPileUpPtEC1dn() {
  if (not HTJjesPileUpPtEC1dn_isLoaded) {
    if (HTJjesPileUpPtEC1dn_branch != 0) {
      HTJjesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch HTJjesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    HTJjesPileUpPtEC1dn_isLoaded = true;
  }
  return HTJjesPileUpPtEC1dn_;
}

const float &VVV0Tree::HTFJjesPileUpPtEC1dn() {
  if (not HTFJjesPileUpPtEC1dn_isLoaded) {
    if (HTFJjesPileUpPtEC1dn_branch != 0) {
      HTFJjesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    HTFJjesPileUpPtEC1dn_isLoaded = true;
  }
  return HTFJjesPileUpPtEC1dn_;
}

const float &VVV0Tree::SumPtFJjesPileUpPtEC1dn() {
  if (not SumPtFJjesPileUpPtEC1dn_isLoaded) {
    if (SumPtFJjesPileUpPtEC1dn_branch != 0) {
      SumPtFJjesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesPileUpPtEC1dn_isLoaded = true;
  }
  return SumPtFJjesPileUpPtEC1dn_;
}

const float &VVV0Tree::SumPtJjesPileUpPtEC1dn() {
  if (not SumPtJjesPileUpPtEC1dn_isLoaded) {
    if (SumPtJjesPileUpPtEC1dn_branch != 0) {
      SumPtJjesPileUpPtEC1dn_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesPileUpPtEC1dn_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesPileUpPtEC1dn_isLoaded = true;
  }
  return SumPtJjesPileUpPtEC1dn_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesPileUpPtEC2up() {
  if (not JsjesPileUpPtEC2up_isLoaded) {
    if (JsjesPileUpPtEC2up_branch != 0) {
      JsjesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch JsjesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    JsjesPileUpPtEC2up_isLoaded = true;
  }
  return *JsjesPileUpPtEC2up_;
}

const int &VVV0Tree::NFJjesPileUpPtEC2up() {
  if (not NFJjesPileUpPtEC2up_isLoaded) {
    if (NFJjesPileUpPtEC2up_branch != 0) {
      NFJjesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NFJjesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    NFJjesPileUpPtEC2up_isLoaded = true;
  }
  return NFJjesPileUpPtEC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesPileUpPtEC2up() {
  if (not FJ0jesPileUpPtEC2up_isLoaded) {
    if (FJ0jesPileUpPtEC2up_branch != 0) {
      FJ0jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    FJ0jesPileUpPtEC2up_isLoaded = true;
  }
  return *FJ0jesPileUpPtEC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesPileUpPtEC2up() {
  if (not FJ1jesPileUpPtEC2up_isLoaded) {
    if (FJ1jesPileUpPtEC2up_branch != 0) {
      FJ1jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    FJ1jesPileUpPtEC2up_isLoaded = true;
  }
  return *FJ1jesPileUpPtEC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesPileUpPtEC2up() {
  if (not FJ2jesPileUpPtEC2up_isLoaded) {
    if (FJ2jesPileUpPtEC2up_branch != 0) {
      FJ2jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    FJ2jesPileUpPtEC2up_isLoaded = true;
  }
  return *FJ2jesPileUpPtEC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesPileUpPtEC2up() {
  if (not FJ3jesPileUpPtEC2up_isLoaded) {
    if (FJ3jesPileUpPtEC2up_branch != 0) {
      FJ3jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    FJ3jesPileUpPtEC2up_isLoaded = true;
  }
  return *FJ3jesPileUpPtEC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesPileUpPtEC2up() {
  if (not FJ4jesPileUpPtEC2up_isLoaded) {
    if (FJ4jesPileUpPtEC2up_branch != 0) {
      FJ4jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    FJ4jesPileUpPtEC2up_isLoaded = true;
  }
  return *FJ4jesPileUpPtEC2up_;
}

const float &VVV0Tree::VMD0jesPileUpPtEC2up() {
  if (not VMD0jesPileUpPtEC2up_isLoaded) {
    if (VMD0jesPileUpPtEC2up_branch != 0) {
      VMD0jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    VMD0jesPileUpPtEC2up_isLoaded = true;
  }
  return VMD0jesPileUpPtEC2up_;
}

const float &VVV0Tree::VMD1jesPileUpPtEC2up() {
  if (not VMD1jesPileUpPtEC2up_isLoaded) {
    if (VMD1jesPileUpPtEC2up_branch != 0) {
      VMD1jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    VMD1jesPileUpPtEC2up_isLoaded = true;
  }
  return VMD1jesPileUpPtEC2up_;
}

const float &VVV0Tree::VMD2jesPileUpPtEC2up() {
  if (not VMD2jesPileUpPtEC2up_isLoaded) {
    if (VMD2jesPileUpPtEC2up_branch != 0) {
      VMD2jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    VMD2jesPileUpPtEC2up_isLoaded = true;
  }
  return VMD2jesPileUpPtEC2up_;
}

const float &VVV0Tree::VMD3jesPileUpPtEC2up() {
  if (not VMD3jesPileUpPtEC2up_isLoaded) {
    if (VMD3jesPileUpPtEC2up_branch != 0) {
      VMD3jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    VMD3jesPileUpPtEC2up_isLoaded = true;
  }
  return VMD3jesPileUpPtEC2up_;
}

const float &VVV0Tree::VMD4jesPileUpPtEC2up() {
  if (not VMD4jesPileUpPtEC2up_isLoaded) {
    if (VMD4jesPileUpPtEC2up_branch != 0) {
      VMD4jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    VMD4jesPileUpPtEC2up_isLoaded = true;
  }
  return VMD4jesPileUpPtEC2up_;
}

const float &VVV0Tree::WMD0jesPileUpPtEC2up() {
  if (not WMD0jesPileUpPtEC2up_isLoaded) {
    if (WMD0jesPileUpPtEC2up_branch != 0) {
      WMD0jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    WMD0jesPileUpPtEC2up_isLoaded = true;
  }
  return WMD0jesPileUpPtEC2up_;
}

const float &VVV0Tree::WMD1jesPileUpPtEC2up() {
  if (not WMD1jesPileUpPtEC2up_isLoaded) {
    if (WMD1jesPileUpPtEC2up_branch != 0) {
      WMD1jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    WMD1jesPileUpPtEC2up_isLoaded = true;
  }
  return WMD1jesPileUpPtEC2up_;
}

const float &VVV0Tree::WMD2jesPileUpPtEC2up() {
  if (not WMD2jesPileUpPtEC2up_isLoaded) {
    if (WMD2jesPileUpPtEC2up_branch != 0) {
      WMD2jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    WMD2jesPileUpPtEC2up_isLoaded = true;
  }
  return WMD2jesPileUpPtEC2up_;
}

const float &VVV0Tree::WMD3jesPileUpPtEC2up() {
  if (not WMD3jesPileUpPtEC2up_isLoaded) {
    if (WMD3jesPileUpPtEC2up_branch != 0) {
      WMD3jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    WMD3jesPileUpPtEC2up_isLoaded = true;
  }
  return WMD3jesPileUpPtEC2up_;
}

const float &VVV0Tree::WMD4jesPileUpPtEC2up() {
  if (not WMD4jesPileUpPtEC2up_isLoaded) {
    if (WMD4jesPileUpPtEC2up_branch != 0) {
      WMD4jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    WMD4jesPileUpPtEC2up_isLoaded = true;
  }
  return WMD4jesPileUpPtEC2up_;
}

const int &VVV0Tree::NQGen0jesPileUpPtEC2up() {
  if (not NQGen0jesPileUpPtEC2up_isLoaded) {
    if (NQGen0jesPileUpPtEC2up_branch != 0) {
      NQGen0jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesPileUpPtEC2up_isLoaded = true;
  }
  return NQGen0jesPileUpPtEC2up_;
}

const int &VVV0Tree::NQGen1jesPileUpPtEC2up() {
  if (not NQGen1jesPileUpPtEC2up_isLoaded) {
    if (NQGen1jesPileUpPtEC2up_branch != 0) {
      NQGen1jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesPileUpPtEC2up_isLoaded = true;
  }
  return NQGen1jesPileUpPtEC2up_;
}

const int &VVV0Tree::NQGen2jesPileUpPtEC2up() {
  if (not NQGen2jesPileUpPtEC2up_isLoaded) {
    if (NQGen2jesPileUpPtEC2up_branch != 0) {
      NQGen2jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesPileUpPtEC2up_isLoaded = true;
  }
  return NQGen2jesPileUpPtEC2up_;
}

const int &VVV0Tree::NQGen3jesPileUpPtEC2up() {
  if (not NQGen3jesPileUpPtEC2up_isLoaded) {
    if (NQGen3jesPileUpPtEC2up_branch != 0) {
      NQGen3jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesPileUpPtEC2up_isLoaded = true;
  }
  return NQGen3jesPileUpPtEC2up_;
}

const int &VVV0Tree::NQGen4jesPileUpPtEC2up() {
  if (not NQGen4jesPileUpPtEC2up_isLoaded) {
    if (NQGen4jesPileUpPtEC2up_branch != 0) {
      NQGen4jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesPileUpPtEC2up_isLoaded = true;
  }
  return NQGen4jesPileUpPtEC2up_;
}

const int &VVV0Tree::NBGen0jesPileUpPtEC2up() {
  if (not NBGen0jesPileUpPtEC2up_isLoaded) {
    if (NBGen0jesPileUpPtEC2up_branch != 0) {
      NBGen0jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesPileUpPtEC2up_isLoaded = true;
  }
  return NBGen0jesPileUpPtEC2up_;
}

const int &VVV0Tree::NBGen1jesPileUpPtEC2up() {
  if (not NBGen1jesPileUpPtEC2up_isLoaded) {
    if (NBGen1jesPileUpPtEC2up_branch != 0) {
      NBGen1jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesPileUpPtEC2up_isLoaded = true;
  }
  return NBGen1jesPileUpPtEC2up_;
}

const int &VVV0Tree::NBGen2jesPileUpPtEC2up() {
  if (not NBGen2jesPileUpPtEC2up_isLoaded) {
    if (NBGen2jesPileUpPtEC2up_branch != 0) {
      NBGen2jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesPileUpPtEC2up_isLoaded = true;
  }
  return NBGen2jesPileUpPtEC2up_;
}

const int &VVV0Tree::NBGen3jesPileUpPtEC2up() {
  if (not NBGen3jesPileUpPtEC2up_isLoaded) {
    if (NBGen3jesPileUpPtEC2up_branch != 0) {
      NBGen3jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesPileUpPtEC2up_isLoaded = true;
  }
  return NBGen3jesPileUpPtEC2up_;
}

const int &VVV0Tree::NBGen4jesPileUpPtEC2up() {
  if (not NBGen4jesPileUpPtEC2up_isLoaded) {
    if (NBGen4jesPileUpPtEC2up_branch != 0) {
      NBGen4jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesPileUpPtEC2up_isLoaded = true;
  }
  return NBGen4jesPileUpPtEC2up_;
}

const int &VVV0Tree::NLGen0jesPileUpPtEC2up() {
  if (not NLGen0jesPileUpPtEC2up_isLoaded) {
    if (NLGen0jesPileUpPtEC2up_branch != 0) {
      NLGen0jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesPileUpPtEC2up_isLoaded = true;
  }
  return NLGen0jesPileUpPtEC2up_;
}

const int &VVV0Tree::NLGen1jesPileUpPtEC2up() {
  if (not NLGen1jesPileUpPtEC2up_isLoaded) {
    if (NLGen1jesPileUpPtEC2up_branch != 0) {
      NLGen1jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesPileUpPtEC2up_isLoaded = true;
  }
  return NLGen1jesPileUpPtEC2up_;
}

const int &VVV0Tree::NLGen2jesPileUpPtEC2up() {
  if (not NLGen2jesPileUpPtEC2up_isLoaded) {
    if (NLGen2jesPileUpPtEC2up_branch != 0) {
      NLGen2jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesPileUpPtEC2up_isLoaded = true;
  }
  return NLGen2jesPileUpPtEC2up_;
}

const int &VVV0Tree::NLGen3jesPileUpPtEC2up() {
  if (not NLGen3jesPileUpPtEC2up_isLoaded) {
    if (NLGen3jesPileUpPtEC2up_branch != 0) {
      NLGen3jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesPileUpPtEC2up_isLoaded = true;
  }
  return NLGen3jesPileUpPtEC2up_;
}

const int &VVV0Tree::NLGen4jesPileUpPtEC2up() {
  if (not NLGen4jesPileUpPtEC2up_isLoaded) {
    if (NLGen4jesPileUpPtEC2up_branch != 0) {
      NLGen4jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesPileUpPtEC2up_isLoaded = true;
  }
  return NLGen4jesPileUpPtEC2up_;
}

const int &VVV0Tree::NVQGen0jesPileUpPtEC2up() {
  if (not NVQGen0jesPileUpPtEC2up_isLoaded) {
    if (NVQGen0jesPileUpPtEC2up_branch != 0) {
      NVQGen0jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesPileUpPtEC2up_isLoaded = true;
  }
  return NVQGen0jesPileUpPtEC2up_;
}

const int &VVV0Tree::NVQGen1jesPileUpPtEC2up() {
  if (not NVQGen1jesPileUpPtEC2up_isLoaded) {
    if (NVQGen1jesPileUpPtEC2up_branch != 0) {
      NVQGen1jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesPileUpPtEC2up_isLoaded = true;
  }
  return NVQGen1jesPileUpPtEC2up_;
}

const int &VVV0Tree::NVQGen2jesPileUpPtEC2up() {
  if (not NVQGen2jesPileUpPtEC2up_isLoaded) {
    if (NVQGen2jesPileUpPtEC2up_branch != 0) {
      NVQGen2jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesPileUpPtEC2up_isLoaded = true;
  }
  return NVQGen2jesPileUpPtEC2up_;
}

const int &VVV0Tree::NVQGen3jesPileUpPtEC2up() {
  if (not NVQGen3jesPileUpPtEC2up_isLoaded) {
    if (NVQGen3jesPileUpPtEC2up_branch != 0) {
      NVQGen3jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesPileUpPtEC2up_isLoaded = true;
  }
  return NVQGen3jesPileUpPtEC2up_;
}

const int &VVV0Tree::NVQGen4jesPileUpPtEC2up() {
  if (not NVQGen4jesPileUpPtEC2up_isLoaded) {
    if (NVQGen4jesPileUpPtEC2up_branch != 0) {
      NVQGen4jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesPileUpPtEC2up_isLoaded = true;
  }
  return NVQGen4jesPileUpPtEC2up_;
}

const int &VVV0Tree::NiFJjesPileUpPtEC2up() {
  if (not NiFJjesPileUpPtEC2up_isLoaded) {
    if (NiFJjesPileUpPtEC2up_branch != 0) {
      NiFJjesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    NiFJjesPileUpPtEC2up_isLoaded = true;
  }
  return NiFJjesPileUpPtEC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesPileUpPtEC2up() {
  if (not iFJ0jesPileUpPtEC2up_isLoaded) {
    if (iFJ0jesPileUpPtEC2up_branch != 0) {
      iFJ0jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesPileUpPtEC2up_isLoaded = true;
  }
  return *iFJ0jesPileUpPtEC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesPileUpPtEC2up() {
  if (not iFJ1jesPileUpPtEC2up_isLoaded) {
    if (iFJ1jesPileUpPtEC2up_branch != 0) {
      iFJ1jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesPileUpPtEC2up_isLoaded = true;
  }
  return *iFJ1jesPileUpPtEC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesPileUpPtEC2up() {
  if (not iFJ2jesPileUpPtEC2up_isLoaded) {
    if (iFJ2jesPileUpPtEC2up_branch != 0) {
      iFJ2jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesPileUpPtEC2up_isLoaded = true;
  }
  return *iFJ2jesPileUpPtEC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesPileUpPtEC2up() {
  if (not iFJ3jesPileUpPtEC2up_isLoaded) {
    if (iFJ3jesPileUpPtEC2up_branch != 0) {
      iFJ3jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesPileUpPtEC2up_isLoaded = true;
  }
  return *iFJ3jesPileUpPtEC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesPileUpPtEC2up() {
  if (not iFJ4jesPileUpPtEC2up_isLoaded) {
    if (iFJ4jesPileUpPtEC2up_branch != 0) {
      iFJ4jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesPileUpPtEC2up_isLoaded = true;
  }
  return *iFJ4jesPileUpPtEC2up_;
}

const float &VVV0Tree::iVMD0jesPileUpPtEC2up() {
  if (not iVMD0jesPileUpPtEC2up_isLoaded) {
    if (iVMD0jesPileUpPtEC2up_branch != 0) {
      iVMD0jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesPileUpPtEC2up_isLoaded = true;
  }
  return iVMD0jesPileUpPtEC2up_;
}

const float &VVV0Tree::iVMD1jesPileUpPtEC2up() {
  if (not iVMD1jesPileUpPtEC2up_isLoaded) {
    if (iVMD1jesPileUpPtEC2up_branch != 0) {
      iVMD1jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesPileUpPtEC2up_isLoaded = true;
  }
  return iVMD1jesPileUpPtEC2up_;
}

const float &VVV0Tree::iVMD2jesPileUpPtEC2up() {
  if (not iVMD2jesPileUpPtEC2up_isLoaded) {
    if (iVMD2jesPileUpPtEC2up_branch != 0) {
      iVMD2jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesPileUpPtEC2up_isLoaded = true;
  }
  return iVMD2jesPileUpPtEC2up_;
}

const float &VVV0Tree::iVMD3jesPileUpPtEC2up() {
  if (not iVMD3jesPileUpPtEC2up_isLoaded) {
    if (iVMD3jesPileUpPtEC2up_branch != 0) {
      iVMD3jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesPileUpPtEC2up_isLoaded = true;
  }
  return iVMD3jesPileUpPtEC2up_;
}

const float &VVV0Tree::iVMD4jesPileUpPtEC2up() {
  if (not iVMD4jesPileUpPtEC2up_isLoaded) {
    if (iVMD4jesPileUpPtEC2up_branch != 0) {
      iVMD4jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesPileUpPtEC2up_isLoaded = true;
  }
  return iVMD4jesPileUpPtEC2up_;
}

const float &VVV0Tree::iWMD0jesPileUpPtEC2up() {
  if (not iWMD0jesPileUpPtEC2up_isLoaded) {
    if (iWMD0jesPileUpPtEC2up_branch != 0) {
      iWMD0jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesPileUpPtEC2up_isLoaded = true;
  }
  return iWMD0jesPileUpPtEC2up_;
}

const float &VVV0Tree::iWMD1jesPileUpPtEC2up() {
  if (not iWMD1jesPileUpPtEC2up_isLoaded) {
    if (iWMD1jesPileUpPtEC2up_branch != 0) {
      iWMD1jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesPileUpPtEC2up_isLoaded = true;
  }
  return iWMD1jesPileUpPtEC2up_;
}

const float &VVV0Tree::iWMD2jesPileUpPtEC2up() {
  if (not iWMD2jesPileUpPtEC2up_isLoaded) {
    if (iWMD2jesPileUpPtEC2up_branch != 0) {
      iWMD2jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesPileUpPtEC2up_isLoaded = true;
  }
  return iWMD2jesPileUpPtEC2up_;
}

const float &VVV0Tree::iWMD3jesPileUpPtEC2up() {
  if (not iWMD3jesPileUpPtEC2up_isLoaded) {
    if (iWMD3jesPileUpPtEC2up_branch != 0) {
      iWMD3jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesPileUpPtEC2up_isLoaded = true;
  }
  return iWMD3jesPileUpPtEC2up_;
}

const float &VVV0Tree::iWMD4jesPileUpPtEC2up() {
  if (not iWMD4jesPileUpPtEC2up_isLoaded) {
    if (iWMD4jesPileUpPtEC2up_branch != 0) {
      iWMD4jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesPileUpPtEC2up_isLoaded = true;
  }
  return iWMD4jesPileUpPtEC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesPileUpPtEC2up() {
  if (not METjesPileUpPtEC2up_isLoaded) {
    if (METjesPileUpPtEC2up_branch != 0) {
      METjesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch METjesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    METjesPileUpPtEC2up_isLoaded = true;
  }
  return *METjesPileUpPtEC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesPileUpPtEC2up() {
  if (not NujesPileUpPtEC2up_isLoaded) {
    if (NujesPileUpPtEC2up_branch != 0) {
      NujesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NujesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    NujesPileUpPtEC2up_isLoaded = true;
  }
  return *NujesPileUpPtEC2up_;
}

const int &VVV0Tree::NJjesPileUpPtEC2up() {
  if (not NJjesPileUpPtEC2up_isLoaded) {
    if (NJjesPileUpPtEC2up_branch != 0) {
      NJjesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NJjesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    NJjesPileUpPtEC2up_isLoaded = true;
  }
  return NJjesPileUpPtEC2up_;
}

const int &VVV0Tree::NbLoosejesPileUpPtEC2up() {
  if (not NbLoosejesPileUpPtEC2up_isLoaded) {
    if (NbLoosejesPileUpPtEC2up_branch != 0) {
      NbLoosejesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesPileUpPtEC2up_isLoaded = true;
  }
  return NbLoosejesPileUpPtEC2up_;
}

const int &VVV0Tree::NbMediumjesPileUpPtEC2up() {
  if (not NbMediumjesPileUpPtEC2up_isLoaded) {
    if (NbMediumjesPileUpPtEC2up_branch != 0) {
      NbMediumjesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesPileUpPtEC2up_isLoaded = true;
  }
  return NbMediumjesPileUpPtEC2up_;
}

const int &VVV0Tree::NbTightjesPileUpPtEC2up() {
  if (not NbTightjesPileUpPtEC2up_isLoaded) {
    if (NbTightjesPileUpPtEC2up_branch != 0) {
      NbTightjesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    NbTightjesPileUpPtEC2up_isLoaded = true;
  }
  return NbTightjesPileUpPtEC2up_;
}

const int &VVV0Tree::NoORNbLoosejesPileUpPtEC2up() {
  if (not NoORNbLoosejesPileUpPtEC2up_isLoaded) {
    if (NoORNbLoosejesPileUpPtEC2up_branch != 0) {
      NoORNbLoosejesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesPileUpPtEC2up_isLoaded = true;
  }
  return NoORNbLoosejesPileUpPtEC2up_;
}

const int &VVV0Tree::NoORNbMediumjesPileUpPtEC2up() {
  if (not NoORNbMediumjesPileUpPtEC2up_isLoaded) {
    if (NoORNbMediumjesPileUpPtEC2up_branch != 0) {
      NoORNbMediumjesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesPileUpPtEC2up_isLoaded = true;
  }
  return NoORNbMediumjesPileUpPtEC2up_;
}

const int &VVV0Tree::NoORNbTightjesPileUpPtEC2up() {
  if (not NoORNbTightjesPileUpPtEC2up_isLoaded) {
    if (NoORNbTightjesPileUpPtEC2up_branch != 0) {
      NoORNbTightjesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesPileUpPtEC2up_isLoaded = true;
  }
  return NoORNbTightjesPileUpPtEC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesPileUpPtEC2up() {
  if (not J0jesPileUpPtEC2up_isLoaded) {
    if (J0jesPileUpPtEC2up_branch != 0) {
      J0jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch J0jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    J0jesPileUpPtEC2up_isLoaded = true;
  }
  return *J0jesPileUpPtEC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesPileUpPtEC2up() {
  if (not J1jesPileUpPtEC2up_isLoaded) {
    if (J1jesPileUpPtEC2up_branch != 0) {
      J1jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch J1jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    J1jesPileUpPtEC2up_isLoaded = true;
  }
  return *J1jesPileUpPtEC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesPileUpPtEC2up() {
  if (not J2jesPileUpPtEC2up_isLoaded) {
    if (J2jesPileUpPtEC2up_branch != 0) {
      J2jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch J2jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    J2jesPileUpPtEC2up_isLoaded = true;
  }
  return *J2jesPileUpPtEC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesPileUpPtEC2up() {
  if (not J3jesPileUpPtEC2up_isLoaded) {
    if (J3jesPileUpPtEC2up_branch != 0) {
      J3jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch J3jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    J3jesPileUpPtEC2up_isLoaded = true;
  }
  return *J3jesPileUpPtEC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesPileUpPtEC2up() {
  if (not J4jesPileUpPtEC2up_isLoaded) {
    if (J4jesPileUpPtEC2up_branch != 0) {
      J4jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch J4jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    J4jesPileUpPtEC2up_isLoaded = true;
  }
  return *J4jesPileUpPtEC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesPileUpPtEC2up() {
  if (not J5jesPileUpPtEC2up_isLoaded) {
    if (J5jesPileUpPtEC2up_branch != 0) {
      J5jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch J5jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    J5jesPileUpPtEC2up_isLoaded = true;
  }
  return *J5jesPileUpPtEC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesPileUpPtEC2up() {
  if (not J6jesPileUpPtEC2up_isLoaded) {
    if (J6jesPileUpPtEC2up_branch != 0) {
      J6jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch J6jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    J6jesPileUpPtEC2up_isLoaded = true;
  }
  return *J6jesPileUpPtEC2up_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesPileUpPtEC2up() {
  if (not J7jesPileUpPtEC2up_isLoaded) {
    if (J7jesPileUpPtEC2up_branch != 0) {
      J7jesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch J7jesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    J7jesPileUpPtEC2up_isLoaded = true;
  }
  return *J7jesPileUpPtEC2up_;
}

const vector<int> &VVV0Tree::NQJGenjesPileUpPtEC2up() {
  if (not NQJGenjesPileUpPtEC2up_isLoaded) {
    if (NQJGenjesPileUpPtEC2up_branch != 0) {
      NQJGenjesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesPileUpPtEC2up_isLoaded = true;
  }
  return *NQJGenjesPileUpPtEC2up_;
}

const vector<int> &VVV0Tree::NBJGenjesPileUpPtEC2up() {
  if (not NBJGenjesPileUpPtEC2up_isLoaded) {
    if (NBJGenjesPileUpPtEC2up_branch != 0) {
      NBJGenjesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesPileUpPtEC2up_isLoaded = true;
  }
  return *NBJGenjesPileUpPtEC2up_;
}

const vector<int> &VVV0Tree::NLJGenjesPileUpPtEC2up() {
  if (not NLJGenjesPileUpPtEC2up_isLoaded) {
    if (NLJGenjesPileUpPtEC2up_branch != 0) {
      NLJGenjesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesPileUpPtEC2up_isLoaded = true;
  }
  return *NLJGenjesPileUpPtEC2up_;
}

const float &VVV0Tree::MVVXjesPileUpPtEC2up() {
  if (not MVVXjesPileUpPtEC2up_isLoaded) {
    if (MVVXjesPileUpPtEC2up_branch != 0) {
      MVVXjesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    MVVXjesPileUpPtEC2up_isLoaded = true;
  }
  return MVVXjesPileUpPtEC2up_;
}

const float &VVV0Tree::PtVVXjesPileUpPtEC2up() {
  if (not PtVVXjesPileUpPtEC2up_isLoaded) {
    if (PtVVXjesPileUpPtEC2up_branch != 0) {
      PtVVXjesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesPileUpPtEC2up_isLoaded = true;
  }
  return PtVVXjesPileUpPtEC2up_;
}

const float &VVV0Tree::HTjesPileUpPtEC2up() {
  if (not HTjesPileUpPtEC2up_isLoaded) {
    if (HTjesPileUpPtEC2up_branch != 0) {
      HTjesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch HTjesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    HTjesPileUpPtEC2up_isLoaded = true;
  }
  return HTjesPileUpPtEC2up_;
}

const float &VVV0Tree::HTJjesPileUpPtEC2up() {
  if (not HTJjesPileUpPtEC2up_isLoaded) {
    if (HTJjesPileUpPtEC2up_branch != 0) {
      HTJjesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch HTJjesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    HTJjesPileUpPtEC2up_isLoaded = true;
  }
  return HTJjesPileUpPtEC2up_;
}

const float &VVV0Tree::HTFJjesPileUpPtEC2up() {
  if (not HTFJjesPileUpPtEC2up_isLoaded) {
    if (HTFJjesPileUpPtEC2up_branch != 0) {
      HTFJjesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    HTFJjesPileUpPtEC2up_isLoaded = true;
  }
  return HTFJjesPileUpPtEC2up_;
}

const float &VVV0Tree::SumPtFJjesPileUpPtEC2up() {
  if (not SumPtFJjesPileUpPtEC2up_isLoaded) {
    if (SumPtFJjesPileUpPtEC2up_branch != 0) {
      SumPtFJjesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesPileUpPtEC2up_isLoaded = true;
  }
  return SumPtFJjesPileUpPtEC2up_;
}

const float &VVV0Tree::SumPtJjesPileUpPtEC2up() {
  if (not SumPtJjesPileUpPtEC2up_isLoaded) {
    if (SumPtJjesPileUpPtEC2up_branch != 0) {
      SumPtJjesPileUpPtEC2up_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesPileUpPtEC2up_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesPileUpPtEC2up_isLoaded = true;
  }
  return SumPtJjesPileUpPtEC2up_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesPileUpPtEC2dn() {
  if (not JsjesPileUpPtEC2dn_isLoaded) {
    if (JsjesPileUpPtEC2dn_branch != 0) {
      JsjesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch JsjesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    JsjesPileUpPtEC2dn_isLoaded = true;
  }
  return *JsjesPileUpPtEC2dn_;
}

const int &VVV0Tree::NFJjesPileUpPtEC2dn() {
  if (not NFJjesPileUpPtEC2dn_isLoaded) {
    if (NFJjesPileUpPtEC2dn_branch != 0) {
      NFJjesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NFJjesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NFJjesPileUpPtEC2dn_isLoaded = true;
  }
  return NFJjesPileUpPtEC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesPileUpPtEC2dn() {
  if (not FJ0jesPileUpPtEC2dn_isLoaded) {
    if (FJ0jesPileUpPtEC2dn_branch != 0) {
      FJ0jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    FJ0jesPileUpPtEC2dn_isLoaded = true;
  }
  return *FJ0jesPileUpPtEC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesPileUpPtEC2dn() {
  if (not FJ1jesPileUpPtEC2dn_isLoaded) {
    if (FJ1jesPileUpPtEC2dn_branch != 0) {
      FJ1jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    FJ1jesPileUpPtEC2dn_isLoaded = true;
  }
  return *FJ1jesPileUpPtEC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesPileUpPtEC2dn() {
  if (not FJ2jesPileUpPtEC2dn_isLoaded) {
    if (FJ2jesPileUpPtEC2dn_branch != 0) {
      FJ2jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    FJ2jesPileUpPtEC2dn_isLoaded = true;
  }
  return *FJ2jesPileUpPtEC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesPileUpPtEC2dn() {
  if (not FJ3jesPileUpPtEC2dn_isLoaded) {
    if (FJ3jesPileUpPtEC2dn_branch != 0) {
      FJ3jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    FJ3jesPileUpPtEC2dn_isLoaded = true;
  }
  return *FJ3jesPileUpPtEC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesPileUpPtEC2dn() {
  if (not FJ4jesPileUpPtEC2dn_isLoaded) {
    if (FJ4jesPileUpPtEC2dn_branch != 0) {
      FJ4jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    FJ4jesPileUpPtEC2dn_isLoaded = true;
  }
  return *FJ4jesPileUpPtEC2dn_;
}

const float &VVV0Tree::VMD0jesPileUpPtEC2dn() {
  if (not VMD0jesPileUpPtEC2dn_isLoaded) {
    if (VMD0jesPileUpPtEC2dn_branch != 0) {
      VMD0jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    VMD0jesPileUpPtEC2dn_isLoaded = true;
  }
  return VMD0jesPileUpPtEC2dn_;
}

const float &VVV0Tree::VMD1jesPileUpPtEC2dn() {
  if (not VMD1jesPileUpPtEC2dn_isLoaded) {
    if (VMD1jesPileUpPtEC2dn_branch != 0) {
      VMD1jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    VMD1jesPileUpPtEC2dn_isLoaded = true;
  }
  return VMD1jesPileUpPtEC2dn_;
}

const float &VVV0Tree::VMD2jesPileUpPtEC2dn() {
  if (not VMD2jesPileUpPtEC2dn_isLoaded) {
    if (VMD2jesPileUpPtEC2dn_branch != 0) {
      VMD2jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    VMD2jesPileUpPtEC2dn_isLoaded = true;
  }
  return VMD2jesPileUpPtEC2dn_;
}

const float &VVV0Tree::VMD3jesPileUpPtEC2dn() {
  if (not VMD3jesPileUpPtEC2dn_isLoaded) {
    if (VMD3jesPileUpPtEC2dn_branch != 0) {
      VMD3jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    VMD3jesPileUpPtEC2dn_isLoaded = true;
  }
  return VMD3jesPileUpPtEC2dn_;
}

const float &VVV0Tree::VMD4jesPileUpPtEC2dn() {
  if (not VMD4jesPileUpPtEC2dn_isLoaded) {
    if (VMD4jesPileUpPtEC2dn_branch != 0) {
      VMD4jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    VMD4jesPileUpPtEC2dn_isLoaded = true;
  }
  return VMD4jesPileUpPtEC2dn_;
}

const float &VVV0Tree::WMD0jesPileUpPtEC2dn() {
  if (not WMD0jesPileUpPtEC2dn_isLoaded) {
    if (WMD0jesPileUpPtEC2dn_branch != 0) {
      WMD0jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    WMD0jesPileUpPtEC2dn_isLoaded = true;
  }
  return WMD0jesPileUpPtEC2dn_;
}

const float &VVV0Tree::WMD1jesPileUpPtEC2dn() {
  if (not WMD1jesPileUpPtEC2dn_isLoaded) {
    if (WMD1jesPileUpPtEC2dn_branch != 0) {
      WMD1jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    WMD1jesPileUpPtEC2dn_isLoaded = true;
  }
  return WMD1jesPileUpPtEC2dn_;
}

const float &VVV0Tree::WMD2jesPileUpPtEC2dn() {
  if (not WMD2jesPileUpPtEC2dn_isLoaded) {
    if (WMD2jesPileUpPtEC2dn_branch != 0) {
      WMD2jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    WMD2jesPileUpPtEC2dn_isLoaded = true;
  }
  return WMD2jesPileUpPtEC2dn_;
}

const float &VVV0Tree::WMD3jesPileUpPtEC2dn() {
  if (not WMD3jesPileUpPtEC2dn_isLoaded) {
    if (WMD3jesPileUpPtEC2dn_branch != 0) {
      WMD3jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    WMD3jesPileUpPtEC2dn_isLoaded = true;
  }
  return WMD3jesPileUpPtEC2dn_;
}

const float &VVV0Tree::WMD4jesPileUpPtEC2dn() {
  if (not WMD4jesPileUpPtEC2dn_isLoaded) {
    if (WMD4jesPileUpPtEC2dn_branch != 0) {
      WMD4jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    WMD4jesPileUpPtEC2dn_isLoaded = true;
  }
  return WMD4jesPileUpPtEC2dn_;
}

const int &VVV0Tree::NQGen0jesPileUpPtEC2dn() {
  if (not NQGen0jesPileUpPtEC2dn_isLoaded) {
    if (NQGen0jesPileUpPtEC2dn_branch != 0) {
      NQGen0jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesPileUpPtEC2dn_isLoaded = true;
  }
  return NQGen0jesPileUpPtEC2dn_;
}

const int &VVV0Tree::NQGen1jesPileUpPtEC2dn() {
  if (not NQGen1jesPileUpPtEC2dn_isLoaded) {
    if (NQGen1jesPileUpPtEC2dn_branch != 0) {
      NQGen1jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesPileUpPtEC2dn_isLoaded = true;
  }
  return NQGen1jesPileUpPtEC2dn_;
}

const int &VVV0Tree::NQGen2jesPileUpPtEC2dn() {
  if (not NQGen2jesPileUpPtEC2dn_isLoaded) {
    if (NQGen2jesPileUpPtEC2dn_branch != 0) {
      NQGen2jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesPileUpPtEC2dn_isLoaded = true;
  }
  return NQGen2jesPileUpPtEC2dn_;
}

const int &VVV0Tree::NQGen3jesPileUpPtEC2dn() {
  if (not NQGen3jesPileUpPtEC2dn_isLoaded) {
    if (NQGen3jesPileUpPtEC2dn_branch != 0) {
      NQGen3jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesPileUpPtEC2dn_isLoaded = true;
  }
  return NQGen3jesPileUpPtEC2dn_;
}

const int &VVV0Tree::NQGen4jesPileUpPtEC2dn() {
  if (not NQGen4jesPileUpPtEC2dn_isLoaded) {
    if (NQGen4jesPileUpPtEC2dn_branch != 0) {
      NQGen4jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesPileUpPtEC2dn_isLoaded = true;
  }
  return NQGen4jesPileUpPtEC2dn_;
}

const int &VVV0Tree::NBGen0jesPileUpPtEC2dn() {
  if (not NBGen0jesPileUpPtEC2dn_isLoaded) {
    if (NBGen0jesPileUpPtEC2dn_branch != 0) {
      NBGen0jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesPileUpPtEC2dn_isLoaded = true;
  }
  return NBGen0jesPileUpPtEC2dn_;
}

const int &VVV0Tree::NBGen1jesPileUpPtEC2dn() {
  if (not NBGen1jesPileUpPtEC2dn_isLoaded) {
    if (NBGen1jesPileUpPtEC2dn_branch != 0) {
      NBGen1jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesPileUpPtEC2dn_isLoaded = true;
  }
  return NBGen1jesPileUpPtEC2dn_;
}

const int &VVV0Tree::NBGen2jesPileUpPtEC2dn() {
  if (not NBGen2jesPileUpPtEC2dn_isLoaded) {
    if (NBGen2jesPileUpPtEC2dn_branch != 0) {
      NBGen2jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesPileUpPtEC2dn_isLoaded = true;
  }
  return NBGen2jesPileUpPtEC2dn_;
}

const int &VVV0Tree::NBGen3jesPileUpPtEC2dn() {
  if (not NBGen3jesPileUpPtEC2dn_isLoaded) {
    if (NBGen3jesPileUpPtEC2dn_branch != 0) {
      NBGen3jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesPileUpPtEC2dn_isLoaded = true;
  }
  return NBGen3jesPileUpPtEC2dn_;
}

const int &VVV0Tree::NBGen4jesPileUpPtEC2dn() {
  if (not NBGen4jesPileUpPtEC2dn_isLoaded) {
    if (NBGen4jesPileUpPtEC2dn_branch != 0) {
      NBGen4jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesPileUpPtEC2dn_isLoaded = true;
  }
  return NBGen4jesPileUpPtEC2dn_;
}

const int &VVV0Tree::NLGen0jesPileUpPtEC2dn() {
  if (not NLGen0jesPileUpPtEC2dn_isLoaded) {
    if (NLGen0jesPileUpPtEC2dn_branch != 0) {
      NLGen0jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesPileUpPtEC2dn_isLoaded = true;
  }
  return NLGen0jesPileUpPtEC2dn_;
}

const int &VVV0Tree::NLGen1jesPileUpPtEC2dn() {
  if (not NLGen1jesPileUpPtEC2dn_isLoaded) {
    if (NLGen1jesPileUpPtEC2dn_branch != 0) {
      NLGen1jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesPileUpPtEC2dn_isLoaded = true;
  }
  return NLGen1jesPileUpPtEC2dn_;
}

const int &VVV0Tree::NLGen2jesPileUpPtEC2dn() {
  if (not NLGen2jesPileUpPtEC2dn_isLoaded) {
    if (NLGen2jesPileUpPtEC2dn_branch != 0) {
      NLGen2jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesPileUpPtEC2dn_isLoaded = true;
  }
  return NLGen2jesPileUpPtEC2dn_;
}

const int &VVV0Tree::NLGen3jesPileUpPtEC2dn() {
  if (not NLGen3jesPileUpPtEC2dn_isLoaded) {
    if (NLGen3jesPileUpPtEC2dn_branch != 0) {
      NLGen3jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesPileUpPtEC2dn_isLoaded = true;
  }
  return NLGen3jesPileUpPtEC2dn_;
}

const int &VVV0Tree::NLGen4jesPileUpPtEC2dn() {
  if (not NLGen4jesPileUpPtEC2dn_isLoaded) {
    if (NLGen4jesPileUpPtEC2dn_branch != 0) {
      NLGen4jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesPileUpPtEC2dn_isLoaded = true;
  }
  return NLGen4jesPileUpPtEC2dn_;
}

const int &VVV0Tree::NVQGen0jesPileUpPtEC2dn() {
  if (not NVQGen0jesPileUpPtEC2dn_isLoaded) {
    if (NVQGen0jesPileUpPtEC2dn_branch != 0) {
      NVQGen0jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesPileUpPtEC2dn_isLoaded = true;
  }
  return NVQGen0jesPileUpPtEC2dn_;
}

const int &VVV0Tree::NVQGen1jesPileUpPtEC2dn() {
  if (not NVQGen1jesPileUpPtEC2dn_isLoaded) {
    if (NVQGen1jesPileUpPtEC2dn_branch != 0) {
      NVQGen1jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesPileUpPtEC2dn_isLoaded = true;
  }
  return NVQGen1jesPileUpPtEC2dn_;
}

const int &VVV0Tree::NVQGen2jesPileUpPtEC2dn() {
  if (not NVQGen2jesPileUpPtEC2dn_isLoaded) {
    if (NVQGen2jesPileUpPtEC2dn_branch != 0) {
      NVQGen2jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesPileUpPtEC2dn_isLoaded = true;
  }
  return NVQGen2jesPileUpPtEC2dn_;
}

const int &VVV0Tree::NVQGen3jesPileUpPtEC2dn() {
  if (not NVQGen3jesPileUpPtEC2dn_isLoaded) {
    if (NVQGen3jesPileUpPtEC2dn_branch != 0) {
      NVQGen3jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesPileUpPtEC2dn_isLoaded = true;
  }
  return NVQGen3jesPileUpPtEC2dn_;
}

const int &VVV0Tree::NVQGen4jesPileUpPtEC2dn() {
  if (not NVQGen4jesPileUpPtEC2dn_isLoaded) {
    if (NVQGen4jesPileUpPtEC2dn_branch != 0) {
      NVQGen4jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesPileUpPtEC2dn_isLoaded = true;
  }
  return NVQGen4jesPileUpPtEC2dn_;
}

const int &VVV0Tree::NiFJjesPileUpPtEC2dn() {
  if (not NiFJjesPileUpPtEC2dn_isLoaded) {
    if (NiFJjesPileUpPtEC2dn_branch != 0) {
      NiFJjesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NiFJjesPileUpPtEC2dn_isLoaded = true;
  }
  return NiFJjesPileUpPtEC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesPileUpPtEC2dn() {
  if (not iFJ0jesPileUpPtEC2dn_isLoaded) {
    if (iFJ0jesPileUpPtEC2dn_branch != 0) {
      iFJ0jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesPileUpPtEC2dn_isLoaded = true;
  }
  return *iFJ0jesPileUpPtEC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesPileUpPtEC2dn() {
  if (not iFJ1jesPileUpPtEC2dn_isLoaded) {
    if (iFJ1jesPileUpPtEC2dn_branch != 0) {
      iFJ1jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesPileUpPtEC2dn_isLoaded = true;
  }
  return *iFJ1jesPileUpPtEC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesPileUpPtEC2dn() {
  if (not iFJ2jesPileUpPtEC2dn_isLoaded) {
    if (iFJ2jesPileUpPtEC2dn_branch != 0) {
      iFJ2jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesPileUpPtEC2dn_isLoaded = true;
  }
  return *iFJ2jesPileUpPtEC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesPileUpPtEC2dn() {
  if (not iFJ3jesPileUpPtEC2dn_isLoaded) {
    if (iFJ3jesPileUpPtEC2dn_branch != 0) {
      iFJ3jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesPileUpPtEC2dn_isLoaded = true;
  }
  return *iFJ3jesPileUpPtEC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesPileUpPtEC2dn() {
  if (not iFJ4jesPileUpPtEC2dn_isLoaded) {
    if (iFJ4jesPileUpPtEC2dn_branch != 0) {
      iFJ4jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesPileUpPtEC2dn_isLoaded = true;
  }
  return *iFJ4jesPileUpPtEC2dn_;
}

const float &VVV0Tree::iVMD0jesPileUpPtEC2dn() {
  if (not iVMD0jesPileUpPtEC2dn_isLoaded) {
    if (iVMD0jesPileUpPtEC2dn_branch != 0) {
      iVMD0jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesPileUpPtEC2dn_isLoaded = true;
  }
  return iVMD0jesPileUpPtEC2dn_;
}

const float &VVV0Tree::iVMD1jesPileUpPtEC2dn() {
  if (not iVMD1jesPileUpPtEC2dn_isLoaded) {
    if (iVMD1jesPileUpPtEC2dn_branch != 0) {
      iVMD1jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesPileUpPtEC2dn_isLoaded = true;
  }
  return iVMD1jesPileUpPtEC2dn_;
}

const float &VVV0Tree::iVMD2jesPileUpPtEC2dn() {
  if (not iVMD2jesPileUpPtEC2dn_isLoaded) {
    if (iVMD2jesPileUpPtEC2dn_branch != 0) {
      iVMD2jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesPileUpPtEC2dn_isLoaded = true;
  }
  return iVMD2jesPileUpPtEC2dn_;
}

const float &VVV0Tree::iVMD3jesPileUpPtEC2dn() {
  if (not iVMD3jesPileUpPtEC2dn_isLoaded) {
    if (iVMD3jesPileUpPtEC2dn_branch != 0) {
      iVMD3jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesPileUpPtEC2dn_isLoaded = true;
  }
  return iVMD3jesPileUpPtEC2dn_;
}

const float &VVV0Tree::iVMD4jesPileUpPtEC2dn() {
  if (not iVMD4jesPileUpPtEC2dn_isLoaded) {
    if (iVMD4jesPileUpPtEC2dn_branch != 0) {
      iVMD4jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesPileUpPtEC2dn_isLoaded = true;
  }
  return iVMD4jesPileUpPtEC2dn_;
}

const float &VVV0Tree::iWMD0jesPileUpPtEC2dn() {
  if (not iWMD0jesPileUpPtEC2dn_isLoaded) {
    if (iWMD0jesPileUpPtEC2dn_branch != 0) {
      iWMD0jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesPileUpPtEC2dn_isLoaded = true;
  }
  return iWMD0jesPileUpPtEC2dn_;
}

const float &VVV0Tree::iWMD1jesPileUpPtEC2dn() {
  if (not iWMD1jesPileUpPtEC2dn_isLoaded) {
    if (iWMD1jesPileUpPtEC2dn_branch != 0) {
      iWMD1jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesPileUpPtEC2dn_isLoaded = true;
  }
  return iWMD1jesPileUpPtEC2dn_;
}

const float &VVV0Tree::iWMD2jesPileUpPtEC2dn() {
  if (not iWMD2jesPileUpPtEC2dn_isLoaded) {
    if (iWMD2jesPileUpPtEC2dn_branch != 0) {
      iWMD2jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesPileUpPtEC2dn_isLoaded = true;
  }
  return iWMD2jesPileUpPtEC2dn_;
}

const float &VVV0Tree::iWMD3jesPileUpPtEC2dn() {
  if (not iWMD3jesPileUpPtEC2dn_isLoaded) {
    if (iWMD3jesPileUpPtEC2dn_branch != 0) {
      iWMD3jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesPileUpPtEC2dn_isLoaded = true;
  }
  return iWMD3jesPileUpPtEC2dn_;
}

const float &VVV0Tree::iWMD4jesPileUpPtEC2dn() {
  if (not iWMD4jesPileUpPtEC2dn_isLoaded) {
    if (iWMD4jesPileUpPtEC2dn_branch != 0) {
      iWMD4jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesPileUpPtEC2dn_isLoaded = true;
  }
  return iWMD4jesPileUpPtEC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesPileUpPtEC2dn() {
  if (not METjesPileUpPtEC2dn_isLoaded) {
    if (METjesPileUpPtEC2dn_branch != 0) {
      METjesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch METjesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    METjesPileUpPtEC2dn_isLoaded = true;
  }
  return *METjesPileUpPtEC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesPileUpPtEC2dn() {
  if (not NujesPileUpPtEC2dn_isLoaded) {
    if (NujesPileUpPtEC2dn_branch != 0) {
      NujesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NujesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NujesPileUpPtEC2dn_isLoaded = true;
  }
  return *NujesPileUpPtEC2dn_;
}

const int &VVV0Tree::NJjesPileUpPtEC2dn() {
  if (not NJjesPileUpPtEC2dn_isLoaded) {
    if (NJjesPileUpPtEC2dn_branch != 0) {
      NJjesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NJjesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NJjesPileUpPtEC2dn_isLoaded = true;
  }
  return NJjesPileUpPtEC2dn_;
}

const int &VVV0Tree::NbLoosejesPileUpPtEC2dn() {
  if (not NbLoosejesPileUpPtEC2dn_isLoaded) {
    if (NbLoosejesPileUpPtEC2dn_branch != 0) {
      NbLoosejesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesPileUpPtEC2dn_isLoaded = true;
  }
  return NbLoosejesPileUpPtEC2dn_;
}

const int &VVV0Tree::NbMediumjesPileUpPtEC2dn() {
  if (not NbMediumjesPileUpPtEC2dn_isLoaded) {
    if (NbMediumjesPileUpPtEC2dn_branch != 0) {
      NbMediumjesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesPileUpPtEC2dn_isLoaded = true;
  }
  return NbMediumjesPileUpPtEC2dn_;
}

const int &VVV0Tree::NbTightjesPileUpPtEC2dn() {
  if (not NbTightjesPileUpPtEC2dn_isLoaded) {
    if (NbTightjesPileUpPtEC2dn_branch != 0) {
      NbTightjesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NbTightjesPileUpPtEC2dn_isLoaded = true;
  }
  return NbTightjesPileUpPtEC2dn_;
}

const int &VVV0Tree::NoORNbLoosejesPileUpPtEC2dn() {
  if (not NoORNbLoosejesPileUpPtEC2dn_isLoaded) {
    if (NoORNbLoosejesPileUpPtEC2dn_branch != 0) {
      NoORNbLoosejesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesPileUpPtEC2dn_isLoaded = true;
  }
  return NoORNbLoosejesPileUpPtEC2dn_;
}

const int &VVV0Tree::NoORNbMediumjesPileUpPtEC2dn() {
  if (not NoORNbMediumjesPileUpPtEC2dn_isLoaded) {
    if (NoORNbMediumjesPileUpPtEC2dn_branch != 0) {
      NoORNbMediumjesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesPileUpPtEC2dn_isLoaded = true;
  }
  return NoORNbMediumjesPileUpPtEC2dn_;
}

const int &VVV0Tree::NoORNbTightjesPileUpPtEC2dn() {
  if (not NoORNbTightjesPileUpPtEC2dn_isLoaded) {
    if (NoORNbTightjesPileUpPtEC2dn_branch != 0) {
      NoORNbTightjesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesPileUpPtEC2dn_isLoaded = true;
  }
  return NoORNbTightjesPileUpPtEC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesPileUpPtEC2dn() {
  if (not J0jesPileUpPtEC2dn_isLoaded) {
    if (J0jesPileUpPtEC2dn_branch != 0) {
      J0jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch J0jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    J0jesPileUpPtEC2dn_isLoaded = true;
  }
  return *J0jesPileUpPtEC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesPileUpPtEC2dn() {
  if (not J1jesPileUpPtEC2dn_isLoaded) {
    if (J1jesPileUpPtEC2dn_branch != 0) {
      J1jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch J1jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    J1jesPileUpPtEC2dn_isLoaded = true;
  }
  return *J1jesPileUpPtEC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesPileUpPtEC2dn() {
  if (not J2jesPileUpPtEC2dn_isLoaded) {
    if (J2jesPileUpPtEC2dn_branch != 0) {
      J2jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch J2jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    J2jesPileUpPtEC2dn_isLoaded = true;
  }
  return *J2jesPileUpPtEC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesPileUpPtEC2dn() {
  if (not J3jesPileUpPtEC2dn_isLoaded) {
    if (J3jesPileUpPtEC2dn_branch != 0) {
      J3jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch J3jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    J3jesPileUpPtEC2dn_isLoaded = true;
  }
  return *J3jesPileUpPtEC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesPileUpPtEC2dn() {
  if (not J4jesPileUpPtEC2dn_isLoaded) {
    if (J4jesPileUpPtEC2dn_branch != 0) {
      J4jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch J4jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    J4jesPileUpPtEC2dn_isLoaded = true;
  }
  return *J4jesPileUpPtEC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesPileUpPtEC2dn() {
  if (not J5jesPileUpPtEC2dn_isLoaded) {
    if (J5jesPileUpPtEC2dn_branch != 0) {
      J5jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch J5jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    J5jesPileUpPtEC2dn_isLoaded = true;
  }
  return *J5jesPileUpPtEC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesPileUpPtEC2dn() {
  if (not J6jesPileUpPtEC2dn_isLoaded) {
    if (J6jesPileUpPtEC2dn_branch != 0) {
      J6jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch J6jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    J6jesPileUpPtEC2dn_isLoaded = true;
  }
  return *J6jesPileUpPtEC2dn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesPileUpPtEC2dn() {
  if (not J7jesPileUpPtEC2dn_isLoaded) {
    if (J7jesPileUpPtEC2dn_branch != 0) {
      J7jesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch J7jesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    J7jesPileUpPtEC2dn_isLoaded = true;
  }
  return *J7jesPileUpPtEC2dn_;
}

const vector<int> &VVV0Tree::NQJGenjesPileUpPtEC2dn() {
  if (not NQJGenjesPileUpPtEC2dn_isLoaded) {
    if (NQJGenjesPileUpPtEC2dn_branch != 0) {
      NQJGenjesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesPileUpPtEC2dn_isLoaded = true;
  }
  return *NQJGenjesPileUpPtEC2dn_;
}

const vector<int> &VVV0Tree::NBJGenjesPileUpPtEC2dn() {
  if (not NBJGenjesPileUpPtEC2dn_isLoaded) {
    if (NBJGenjesPileUpPtEC2dn_branch != 0) {
      NBJGenjesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesPileUpPtEC2dn_isLoaded = true;
  }
  return *NBJGenjesPileUpPtEC2dn_;
}

const vector<int> &VVV0Tree::NLJGenjesPileUpPtEC2dn() {
  if (not NLJGenjesPileUpPtEC2dn_isLoaded) {
    if (NLJGenjesPileUpPtEC2dn_branch != 0) {
      NLJGenjesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesPileUpPtEC2dn_isLoaded = true;
  }
  return *NLJGenjesPileUpPtEC2dn_;
}

const float &VVV0Tree::MVVXjesPileUpPtEC2dn() {
  if (not MVVXjesPileUpPtEC2dn_isLoaded) {
    if (MVVXjesPileUpPtEC2dn_branch != 0) {
      MVVXjesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    MVVXjesPileUpPtEC2dn_isLoaded = true;
  }
  return MVVXjesPileUpPtEC2dn_;
}

const float &VVV0Tree::PtVVXjesPileUpPtEC2dn() {
  if (not PtVVXjesPileUpPtEC2dn_isLoaded) {
    if (PtVVXjesPileUpPtEC2dn_branch != 0) {
      PtVVXjesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesPileUpPtEC2dn_isLoaded = true;
  }
  return PtVVXjesPileUpPtEC2dn_;
}

const float &VVV0Tree::HTjesPileUpPtEC2dn() {
  if (not HTjesPileUpPtEC2dn_isLoaded) {
    if (HTjesPileUpPtEC2dn_branch != 0) {
      HTjesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch HTjesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    HTjesPileUpPtEC2dn_isLoaded = true;
  }
  return HTjesPileUpPtEC2dn_;
}

const float &VVV0Tree::HTJjesPileUpPtEC2dn() {
  if (not HTJjesPileUpPtEC2dn_isLoaded) {
    if (HTJjesPileUpPtEC2dn_branch != 0) {
      HTJjesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch HTJjesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    HTJjesPileUpPtEC2dn_isLoaded = true;
  }
  return HTJjesPileUpPtEC2dn_;
}

const float &VVV0Tree::HTFJjesPileUpPtEC2dn() {
  if (not HTFJjesPileUpPtEC2dn_isLoaded) {
    if (HTFJjesPileUpPtEC2dn_branch != 0) {
      HTFJjesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    HTFJjesPileUpPtEC2dn_isLoaded = true;
  }
  return HTFJjesPileUpPtEC2dn_;
}

const float &VVV0Tree::SumPtFJjesPileUpPtEC2dn() {
  if (not SumPtFJjesPileUpPtEC2dn_isLoaded) {
    if (SumPtFJjesPileUpPtEC2dn_branch != 0) {
      SumPtFJjesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesPileUpPtEC2dn_isLoaded = true;
  }
  return SumPtFJjesPileUpPtEC2dn_;
}

const float &VVV0Tree::SumPtJjesPileUpPtEC2dn() {
  if (not SumPtJjesPileUpPtEC2dn_isLoaded) {
    if (SumPtJjesPileUpPtEC2dn_branch != 0) {
      SumPtJjesPileUpPtEC2dn_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesPileUpPtEC2dn_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesPileUpPtEC2dn_isLoaded = true;
  }
  return SumPtJjesPileUpPtEC2dn_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesPileUpPtHFup() {
  if (not JsjesPileUpPtHFup_isLoaded) {
    if (JsjesPileUpPtHFup_branch != 0) {
      JsjesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch JsjesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    JsjesPileUpPtHFup_isLoaded = true;
  }
  return *JsjesPileUpPtHFup_;
}

const int &VVV0Tree::NFJjesPileUpPtHFup() {
  if (not NFJjesPileUpPtHFup_isLoaded) {
    if (NFJjesPileUpPtHFup_branch != 0) {
      NFJjesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch NFJjesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    NFJjesPileUpPtHFup_isLoaded = true;
  }
  return NFJjesPileUpPtHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesPileUpPtHFup() {
  if (not FJ0jesPileUpPtHFup_isLoaded) {
    if (FJ0jesPileUpPtHFup_branch != 0) {
      FJ0jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    FJ0jesPileUpPtHFup_isLoaded = true;
  }
  return *FJ0jesPileUpPtHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesPileUpPtHFup() {
  if (not FJ1jesPileUpPtHFup_isLoaded) {
    if (FJ1jesPileUpPtHFup_branch != 0) {
      FJ1jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    FJ1jesPileUpPtHFup_isLoaded = true;
  }
  return *FJ1jesPileUpPtHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesPileUpPtHFup() {
  if (not FJ2jesPileUpPtHFup_isLoaded) {
    if (FJ2jesPileUpPtHFup_branch != 0) {
      FJ2jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    FJ2jesPileUpPtHFup_isLoaded = true;
  }
  return *FJ2jesPileUpPtHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesPileUpPtHFup() {
  if (not FJ3jesPileUpPtHFup_isLoaded) {
    if (FJ3jesPileUpPtHFup_branch != 0) {
      FJ3jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    FJ3jesPileUpPtHFup_isLoaded = true;
  }
  return *FJ3jesPileUpPtHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesPileUpPtHFup() {
  if (not FJ4jesPileUpPtHFup_isLoaded) {
    if (FJ4jesPileUpPtHFup_branch != 0) {
      FJ4jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    FJ4jesPileUpPtHFup_isLoaded = true;
  }
  return *FJ4jesPileUpPtHFup_;
}

const float &VVV0Tree::VMD0jesPileUpPtHFup() {
  if (not VMD0jesPileUpPtHFup_isLoaded) {
    if (VMD0jesPileUpPtHFup_branch != 0) {
      VMD0jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    VMD0jesPileUpPtHFup_isLoaded = true;
  }
  return VMD0jesPileUpPtHFup_;
}

const float &VVV0Tree::VMD1jesPileUpPtHFup() {
  if (not VMD1jesPileUpPtHFup_isLoaded) {
    if (VMD1jesPileUpPtHFup_branch != 0) {
      VMD1jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    VMD1jesPileUpPtHFup_isLoaded = true;
  }
  return VMD1jesPileUpPtHFup_;
}

const float &VVV0Tree::VMD2jesPileUpPtHFup() {
  if (not VMD2jesPileUpPtHFup_isLoaded) {
    if (VMD2jesPileUpPtHFup_branch != 0) {
      VMD2jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    VMD2jesPileUpPtHFup_isLoaded = true;
  }
  return VMD2jesPileUpPtHFup_;
}

const float &VVV0Tree::VMD3jesPileUpPtHFup() {
  if (not VMD3jesPileUpPtHFup_isLoaded) {
    if (VMD3jesPileUpPtHFup_branch != 0) {
      VMD3jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    VMD3jesPileUpPtHFup_isLoaded = true;
  }
  return VMD3jesPileUpPtHFup_;
}

const float &VVV0Tree::VMD4jesPileUpPtHFup() {
  if (not VMD4jesPileUpPtHFup_isLoaded) {
    if (VMD4jesPileUpPtHFup_branch != 0) {
      VMD4jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    VMD4jesPileUpPtHFup_isLoaded = true;
  }
  return VMD4jesPileUpPtHFup_;
}

const float &VVV0Tree::WMD0jesPileUpPtHFup() {
  if (not WMD0jesPileUpPtHFup_isLoaded) {
    if (WMD0jesPileUpPtHFup_branch != 0) {
      WMD0jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    WMD0jesPileUpPtHFup_isLoaded = true;
  }
  return WMD0jesPileUpPtHFup_;
}

const float &VVV0Tree::WMD1jesPileUpPtHFup() {
  if (not WMD1jesPileUpPtHFup_isLoaded) {
    if (WMD1jesPileUpPtHFup_branch != 0) {
      WMD1jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    WMD1jesPileUpPtHFup_isLoaded = true;
  }
  return WMD1jesPileUpPtHFup_;
}

const float &VVV0Tree::WMD2jesPileUpPtHFup() {
  if (not WMD2jesPileUpPtHFup_isLoaded) {
    if (WMD2jesPileUpPtHFup_branch != 0) {
      WMD2jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    WMD2jesPileUpPtHFup_isLoaded = true;
  }
  return WMD2jesPileUpPtHFup_;
}

const float &VVV0Tree::WMD3jesPileUpPtHFup() {
  if (not WMD3jesPileUpPtHFup_isLoaded) {
    if (WMD3jesPileUpPtHFup_branch != 0) {
      WMD3jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    WMD3jesPileUpPtHFup_isLoaded = true;
  }
  return WMD3jesPileUpPtHFup_;
}

const float &VVV0Tree::WMD4jesPileUpPtHFup() {
  if (not WMD4jesPileUpPtHFup_isLoaded) {
    if (WMD4jesPileUpPtHFup_branch != 0) {
      WMD4jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    WMD4jesPileUpPtHFup_isLoaded = true;
  }
  return WMD4jesPileUpPtHFup_;
}

const int &VVV0Tree::NQGen0jesPileUpPtHFup() {
  if (not NQGen0jesPileUpPtHFup_isLoaded) {
    if (NQGen0jesPileUpPtHFup_branch != 0) {
      NQGen0jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesPileUpPtHFup_isLoaded = true;
  }
  return NQGen0jesPileUpPtHFup_;
}

const int &VVV0Tree::NQGen1jesPileUpPtHFup() {
  if (not NQGen1jesPileUpPtHFup_isLoaded) {
    if (NQGen1jesPileUpPtHFup_branch != 0) {
      NQGen1jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesPileUpPtHFup_isLoaded = true;
  }
  return NQGen1jesPileUpPtHFup_;
}

const int &VVV0Tree::NQGen2jesPileUpPtHFup() {
  if (not NQGen2jesPileUpPtHFup_isLoaded) {
    if (NQGen2jesPileUpPtHFup_branch != 0) {
      NQGen2jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesPileUpPtHFup_isLoaded = true;
  }
  return NQGen2jesPileUpPtHFup_;
}

const int &VVV0Tree::NQGen3jesPileUpPtHFup() {
  if (not NQGen3jesPileUpPtHFup_isLoaded) {
    if (NQGen3jesPileUpPtHFup_branch != 0) {
      NQGen3jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesPileUpPtHFup_isLoaded = true;
  }
  return NQGen3jesPileUpPtHFup_;
}

const int &VVV0Tree::NQGen4jesPileUpPtHFup() {
  if (not NQGen4jesPileUpPtHFup_isLoaded) {
    if (NQGen4jesPileUpPtHFup_branch != 0) {
      NQGen4jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesPileUpPtHFup_isLoaded = true;
  }
  return NQGen4jesPileUpPtHFup_;
}

const int &VVV0Tree::NBGen0jesPileUpPtHFup() {
  if (not NBGen0jesPileUpPtHFup_isLoaded) {
    if (NBGen0jesPileUpPtHFup_branch != 0) {
      NBGen0jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesPileUpPtHFup_isLoaded = true;
  }
  return NBGen0jesPileUpPtHFup_;
}

const int &VVV0Tree::NBGen1jesPileUpPtHFup() {
  if (not NBGen1jesPileUpPtHFup_isLoaded) {
    if (NBGen1jesPileUpPtHFup_branch != 0) {
      NBGen1jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesPileUpPtHFup_isLoaded = true;
  }
  return NBGen1jesPileUpPtHFup_;
}

const int &VVV0Tree::NBGen2jesPileUpPtHFup() {
  if (not NBGen2jesPileUpPtHFup_isLoaded) {
    if (NBGen2jesPileUpPtHFup_branch != 0) {
      NBGen2jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesPileUpPtHFup_isLoaded = true;
  }
  return NBGen2jesPileUpPtHFup_;
}

const int &VVV0Tree::NBGen3jesPileUpPtHFup() {
  if (not NBGen3jesPileUpPtHFup_isLoaded) {
    if (NBGen3jesPileUpPtHFup_branch != 0) {
      NBGen3jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesPileUpPtHFup_isLoaded = true;
  }
  return NBGen3jesPileUpPtHFup_;
}

const int &VVV0Tree::NBGen4jesPileUpPtHFup() {
  if (not NBGen4jesPileUpPtHFup_isLoaded) {
    if (NBGen4jesPileUpPtHFup_branch != 0) {
      NBGen4jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesPileUpPtHFup_isLoaded = true;
  }
  return NBGen4jesPileUpPtHFup_;
}

const int &VVV0Tree::NLGen0jesPileUpPtHFup() {
  if (not NLGen0jesPileUpPtHFup_isLoaded) {
    if (NLGen0jesPileUpPtHFup_branch != 0) {
      NLGen0jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesPileUpPtHFup_isLoaded = true;
  }
  return NLGen0jesPileUpPtHFup_;
}

const int &VVV0Tree::NLGen1jesPileUpPtHFup() {
  if (not NLGen1jesPileUpPtHFup_isLoaded) {
    if (NLGen1jesPileUpPtHFup_branch != 0) {
      NLGen1jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesPileUpPtHFup_isLoaded = true;
  }
  return NLGen1jesPileUpPtHFup_;
}

const int &VVV0Tree::NLGen2jesPileUpPtHFup() {
  if (not NLGen2jesPileUpPtHFup_isLoaded) {
    if (NLGen2jesPileUpPtHFup_branch != 0) {
      NLGen2jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesPileUpPtHFup_isLoaded = true;
  }
  return NLGen2jesPileUpPtHFup_;
}

const int &VVV0Tree::NLGen3jesPileUpPtHFup() {
  if (not NLGen3jesPileUpPtHFup_isLoaded) {
    if (NLGen3jesPileUpPtHFup_branch != 0) {
      NLGen3jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesPileUpPtHFup_isLoaded = true;
  }
  return NLGen3jesPileUpPtHFup_;
}

const int &VVV0Tree::NLGen4jesPileUpPtHFup() {
  if (not NLGen4jesPileUpPtHFup_isLoaded) {
    if (NLGen4jesPileUpPtHFup_branch != 0) {
      NLGen4jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesPileUpPtHFup_isLoaded = true;
  }
  return NLGen4jesPileUpPtHFup_;
}

const int &VVV0Tree::NVQGen0jesPileUpPtHFup() {
  if (not NVQGen0jesPileUpPtHFup_isLoaded) {
    if (NVQGen0jesPileUpPtHFup_branch != 0) {
      NVQGen0jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesPileUpPtHFup_isLoaded = true;
  }
  return NVQGen0jesPileUpPtHFup_;
}

const int &VVV0Tree::NVQGen1jesPileUpPtHFup() {
  if (not NVQGen1jesPileUpPtHFup_isLoaded) {
    if (NVQGen1jesPileUpPtHFup_branch != 0) {
      NVQGen1jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesPileUpPtHFup_isLoaded = true;
  }
  return NVQGen1jesPileUpPtHFup_;
}

const int &VVV0Tree::NVQGen2jesPileUpPtHFup() {
  if (not NVQGen2jesPileUpPtHFup_isLoaded) {
    if (NVQGen2jesPileUpPtHFup_branch != 0) {
      NVQGen2jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesPileUpPtHFup_isLoaded = true;
  }
  return NVQGen2jesPileUpPtHFup_;
}

const int &VVV0Tree::NVQGen3jesPileUpPtHFup() {
  if (not NVQGen3jesPileUpPtHFup_isLoaded) {
    if (NVQGen3jesPileUpPtHFup_branch != 0) {
      NVQGen3jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesPileUpPtHFup_isLoaded = true;
  }
  return NVQGen3jesPileUpPtHFup_;
}

const int &VVV0Tree::NVQGen4jesPileUpPtHFup() {
  if (not NVQGen4jesPileUpPtHFup_isLoaded) {
    if (NVQGen4jesPileUpPtHFup_branch != 0) {
      NVQGen4jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesPileUpPtHFup_isLoaded = true;
  }
  return NVQGen4jesPileUpPtHFup_;
}

const int &VVV0Tree::NiFJjesPileUpPtHFup() {
  if (not NiFJjesPileUpPtHFup_isLoaded) {
    if (NiFJjesPileUpPtHFup_branch != 0) {
      NiFJjesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    NiFJjesPileUpPtHFup_isLoaded = true;
  }
  return NiFJjesPileUpPtHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesPileUpPtHFup() {
  if (not iFJ0jesPileUpPtHFup_isLoaded) {
    if (iFJ0jesPileUpPtHFup_branch != 0) {
      iFJ0jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesPileUpPtHFup_isLoaded = true;
  }
  return *iFJ0jesPileUpPtHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesPileUpPtHFup() {
  if (not iFJ1jesPileUpPtHFup_isLoaded) {
    if (iFJ1jesPileUpPtHFup_branch != 0) {
      iFJ1jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesPileUpPtHFup_isLoaded = true;
  }
  return *iFJ1jesPileUpPtHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesPileUpPtHFup() {
  if (not iFJ2jesPileUpPtHFup_isLoaded) {
    if (iFJ2jesPileUpPtHFup_branch != 0) {
      iFJ2jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesPileUpPtHFup_isLoaded = true;
  }
  return *iFJ2jesPileUpPtHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesPileUpPtHFup() {
  if (not iFJ3jesPileUpPtHFup_isLoaded) {
    if (iFJ3jesPileUpPtHFup_branch != 0) {
      iFJ3jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesPileUpPtHFup_isLoaded = true;
  }
  return *iFJ3jesPileUpPtHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesPileUpPtHFup() {
  if (not iFJ4jesPileUpPtHFup_isLoaded) {
    if (iFJ4jesPileUpPtHFup_branch != 0) {
      iFJ4jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesPileUpPtHFup_isLoaded = true;
  }
  return *iFJ4jesPileUpPtHFup_;
}

const float &VVV0Tree::iVMD0jesPileUpPtHFup() {
  if (not iVMD0jesPileUpPtHFup_isLoaded) {
    if (iVMD0jesPileUpPtHFup_branch != 0) {
      iVMD0jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesPileUpPtHFup_isLoaded = true;
  }
  return iVMD0jesPileUpPtHFup_;
}

const float &VVV0Tree::iVMD1jesPileUpPtHFup() {
  if (not iVMD1jesPileUpPtHFup_isLoaded) {
    if (iVMD1jesPileUpPtHFup_branch != 0) {
      iVMD1jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesPileUpPtHFup_isLoaded = true;
  }
  return iVMD1jesPileUpPtHFup_;
}

const float &VVV0Tree::iVMD2jesPileUpPtHFup() {
  if (not iVMD2jesPileUpPtHFup_isLoaded) {
    if (iVMD2jesPileUpPtHFup_branch != 0) {
      iVMD2jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesPileUpPtHFup_isLoaded = true;
  }
  return iVMD2jesPileUpPtHFup_;
}

const float &VVV0Tree::iVMD3jesPileUpPtHFup() {
  if (not iVMD3jesPileUpPtHFup_isLoaded) {
    if (iVMD3jesPileUpPtHFup_branch != 0) {
      iVMD3jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesPileUpPtHFup_isLoaded = true;
  }
  return iVMD3jesPileUpPtHFup_;
}

const float &VVV0Tree::iVMD4jesPileUpPtHFup() {
  if (not iVMD4jesPileUpPtHFup_isLoaded) {
    if (iVMD4jesPileUpPtHFup_branch != 0) {
      iVMD4jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesPileUpPtHFup_isLoaded = true;
  }
  return iVMD4jesPileUpPtHFup_;
}

const float &VVV0Tree::iWMD0jesPileUpPtHFup() {
  if (not iWMD0jesPileUpPtHFup_isLoaded) {
    if (iWMD0jesPileUpPtHFup_branch != 0) {
      iWMD0jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesPileUpPtHFup_isLoaded = true;
  }
  return iWMD0jesPileUpPtHFup_;
}

const float &VVV0Tree::iWMD1jesPileUpPtHFup() {
  if (not iWMD1jesPileUpPtHFup_isLoaded) {
    if (iWMD1jesPileUpPtHFup_branch != 0) {
      iWMD1jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesPileUpPtHFup_isLoaded = true;
  }
  return iWMD1jesPileUpPtHFup_;
}

const float &VVV0Tree::iWMD2jesPileUpPtHFup() {
  if (not iWMD2jesPileUpPtHFup_isLoaded) {
    if (iWMD2jesPileUpPtHFup_branch != 0) {
      iWMD2jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesPileUpPtHFup_isLoaded = true;
  }
  return iWMD2jesPileUpPtHFup_;
}

const float &VVV0Tree::iWMD3jesPileUpPtHFup() {
  if (not iWMD3jesPileUpPtHFup_isLoaded) {
    if (iWMD3jesPileUpPtHFup_branch != 0) {
      iWMD3jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesPileUpPtHFup_isLoaded = true;
  }
  return iWMD3jesPileUpPtHFup_;
}

const float &VVV0Tree::iWMD4jesPileUpPtHFup() {
  if (not iWMD4jesPileUpPtHFup_isLoaded) {
    if (iWMD4jesPileUpPtHFup_branch != 0) {
      iWMD4jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesPileUpPtHFup_isLoaded = true;
  }
  return iWMD4jesPileUpPtHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesPileUpPtHFup() {
  if (not METjesPileUpPtHFup_isLoaded) {
    if (METjesPileUpPtHFup_branch != 0) {
      METjesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch METjesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    METjesPileUpPtHFup_isLoaded = true;
  }
  return *METjesPileUpPtHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesPileUpPtHFup() {
  if (not NujesPileUpPtHFup_isLoaded) {
    if (NujesPileUpPtHFup_branch != 0) {
      NujesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch NujesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    NujesPileUpPtHFup_isLoaded = true;
  }
  return *NujesPileUpPtHFup_;
}

const int &VVV0Tree::NJjesPileUpPtHFup() {
  if (not NJjesPileUpPtHFup_isLoaded) {
    if (NJjesPileUpPtHFup_branch != 0) {
      NJjesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch NJjesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    NJjesPileUpPtHFup_isLoaded = true;
  }
  return NJjesPileUpPtHFup_;
}

const int &VVV0Tree::NbLoosejesPileUpPtHFup() {
  if (not NbLoosejesPileUpPtHFup_isLoaded) {
    if (NbLoosejesPileUpPtHFup_branch != 0) {
      NbLoosejesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesPileUpPtHFup_isLoaded = true;
  }
  return NbLoosejesPileUpPtHFup_;
}

const int &VVV0Tree::NbMediumjesPileUpPtHFup() {
  if (not NbMediumjesPileUpPtHFup_isLoaded) {
    if (NbMediumjesPileUpPtHFup_branch != 0) {
      NbMediumjesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesPileUpPtHFup_isLoaded = true;
  }
  return NbMediumjesPileUpPtHFup_;
}

const int &VVV0Tree::NbTightjesPileUpPtHFup() {
  if (not NbTightjesPileUpPtHFup_isLoaded) {
    if (NbTightjesPileUpPtHFup_branch != 0) {
      NbTightjesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    NbTightjesPileUpPtHFup_isLoaded = true;
  }
  return NbTightjesPileUpPtHFup_;
}

const int &VVV0Tree::NoORNbLoosejesPileUpPtHFup() {
  if (not NoORNbLoosejesPileUpPtHFup_isLoaded) {
    if (NoORNbLoosejesPileUpPtHFup_branch != 0) {
      NoORNbLoosejesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesPileUpPtHFup_isLoaded = true;
  }
  return NoORNbLoosejesPileUpPtHFup_;
}

const int &VVV0Tree::NoORNbMediumjesPileUpPtHFup() {
  if (not NoORNbMediumjesPileUpPtHFup_isLoaded) {
    if (NoORNbMediumjesPileUpPtHFup_branch != 0) {
      NoORNbMediumjesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesPileUpPtHFup_isLoaded = true;
  }
  return NoORNbMediumjesPileUpPtHFup_;
}

const int &VVV0Tree::NoORNbTightjesPileUpPtHFup() {
  if (not NoORNbTightjesPileUpPtHFup_isLoaded) {
    if (NoORNbTightjesPileUpPtHFup_branch != 0) {
      NoORNbTightjesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesPileUpPtHFup_isLoaded = true;
  }
  return NoORNbTightjesPileUpPtHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesPileUpPtHFup() {
  if (not J0jesPileUpPtHFup_isLoaded) {
    if (J0jesPileUpPtHFup_branch != 0) {
      J0jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch J0jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    J0jesPileUpPtHFup_isLoaded = true;
  }
  return *J0jesPileUpPtHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesPileUpPtHFup() {
  if (not J1jesPileUpPtHFup_isLoaded) {
    if (J1jesPileUpPtHFup_branch != 0) {
      J1jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch J1jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    J1jesPileUpPtHFup_isLoaded = true;
  }
  return *J1jesPileUpPtHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesPileUpPtHFup() {
  if (not J2jesPileUpPtHFup_isLoaded) {
    if (J2jesPileUpPtHFup_branch != 0) {
      J2jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch J2jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    J2jesPileUpPtHFup_isLoaded = true;
  }
  return *J2jesPileUpPtHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesPileUpPtHFup() {
  if (not J3jesPileUpPtHFup_isLoaded) {
    if (J3jesPileUpPtHFup_branch != 0) {
      J3jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch J3jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    J3jesPileUpPtHFup_isLoaded = true;
  }
  return *J3jesPileUpPtHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesPileUpPtHFup() {
  if (not J4jesPileUpPtHFup_isLoaded) {
    if (J4jesPileUpPtHFup_branch != 0) {
      J4jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch J4jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    J4jesPileUpPtHFup_isLoaded = true;
  }
  return *J4jesPileUpPtHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesPileUpPtHFup() {
  if (not J5jesPileUpPtHFup_isLoaded) {
    if (J5jesPileUpPtHFup_branch != 0) {
      J5jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch J5jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    J5jesPileUpPtHFup_isLoaded = true;
  }
  return *J5jesPileUpPtHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesPileUpPtHFup() {
  if (not J6jesPileUpPtHFup_isLoaded) {
    if (J6jesPileUpPtHFup_branch != 0) {
      J6jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch J6jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    J6jesPileUpPtHFup_isLoaded = true;
  }
  return *J6jesPileUpPtHFup_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesPileUpPtHFup() {
  if (not J7jesPileUpPtHFup_isLoaded) {
    if (J7jesPileUpPtHFup_branch != 0) {
      J7jesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch J7jesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    J7jesPileUpPtHFup_isLoaded = true;
  }
  return *J7jesPileUpPtHFup_;
}

const vector<int> &VVV0Tree::NQJGenjesPileUpPtHFup() {
  if (not NQJGenjesPileUpPtHFup_isLoaded) {
    if (NQJGenjesPileUpPtHFup_branch != 0) {
      NQJGenjesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesPileUpPtHFup_isLoaded = true;
  }
  return *NQJGenjesPileUpPtHFup_;
}

const vector<int> &VVV0Tree::NBJGenjesPileUpPtHFup() {
  if (not NBJGenjesPileUpPtHFup_isLoaded) {
    if (NBJGenjesPileUpPtHFup_branch != 0) {
      NBJGenjesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesPileUpPtHFup_isLoaded = true;
  }
  return *NBJGenjesPileUpPtHFup_;
}

const vector<int> &VVV0Tree::NLJGenjesPileUpPtHFup() {
  if (not NLJGenjesPileUpPtHFup_isLoaded) {
    if (NLJGenjesPileUpPtHFup_branch != 0) {
      NLJGenjesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesPileUpPtHFup_isLoaded = true;
  }
  return *NLJGenjesPileUpPtHFup_;
}

const float &VVV0Tree::MVVXjesPileUpPtHFup() {
  if (not MVVXjesPileUpPtHFup_isLoaded) {
    if (MVVXjesPileUpPtHFup_branch != 0) {
      MVVXjesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    MVVXjesPileUpPtHFup_isLoaded = true;
  }
  return MVVXjesPileUpPtHFup_;
}

const float &VVV0Tree::PtVVXjesPileUpPtHFup() {
  if (not PtVVXjesPileUpPtHFup_isLoaded) {
    if (PtVVXjesPileUpPtHFup_branch != 0) {
      PtVVXjesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesPileUpPtHFup_isLoaded = true;
  }
  return PtVVXjesPileUpPtHFup_;
}

const float &VVV0Tree::HTjesPileUpPtHFup() {
  if (not HTjesPileUpPtHFup_isLoaded) {
    if (HTjesPileUpPtHFup_branch != 0) {
      HTjesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch HTjesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    HTjesPileUpPtHFup_isLoaded = true;
  }
  return HTjesPileUpPtHFup_;
}

const float &VVV0Tree::HTJjesPileUpPtHFup() {
  if (not HTJjesPileUpPtHFup_isLoaded) {
    if (HTJjesPileUpPtHFup_branch != 0) {
      HTJjesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch HTJjesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    HTJjesPileUpPtHFup_isLoaded = true;
  }
  return HTJjesPileUpPtHFup_;
}

const float &VVV0Tree::HTFJjesPileUpPtHFup() {
  if (not HTFJjesPileUpPtHFup_isLoaded) {
    if (HTFJjesPileUpPtHFup_branch != 0) {
      HTFJjesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    HTFJjesPileUpPtHFup_isLoaded = true;
  }
  return HTFJjesPileUpPtHFup_;
}

const float &VVV0Tree::SumPtFJjesPileUpPtHFup() {
  if (not SumPtFJjesPileUpPtHFup_isLoaded) {
    if (SumPtFJjesPileUpPtHFup_branch != 0) {
      SumPtFJjesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesPileUpPtHFup_isLoaded = true;
  }
  return SumPtFJjesPileUpPtHFup_;
}

const float &VVV0Tree::SumPtJjesPileUpPtHFup() {
  if (not SumPtJjesPileUpPtHFup_isLoaded) {
    if (SumPtJjesPileUpPtHFup_branch != 0) {
      SumPtJjesPileUpPtHFup_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesPileUpPtHFup_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesPileUpPtHFup_isLoaded = true;
  }
  return SumPtJjesPileUpPtHFup_;
}

const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &VVV0Tree::JsjesPileUpPtHFdn() {
  if (not JsjesPileUpPtHFdn_isLoaded) {
    if (JsjesPileUpPtHFdn_branch != 0) {
      JsjesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch JsjesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    JsjesPileUpPtHFdn_isLoaded = true;
  }
  return *JsjesPileUpPtHFdn_;
}

const int &VVV0Tree::NFJjesPileUpPtHFdn() {
  if (not NFJjesPileUpPtHFdn_isLoaded) {
    if (NFJjesPileUpPtHFdn_branch != 0) {
      NFJjesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NFJjesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    NFJjesPileUpPtHFdn_isLoaded = true;
  }
  return NFJjesPileUpPtHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ0jesPileUpPtHFdn() {
  if (not FJ0jesPileUpPtHFdn_isLoaded) {
    if (FJ0jesPileUpPtHFdn_branch != 0) {
      FJ0jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch FJ0jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    FJ0jesPileUpPtHFdn_isLoaded = true;
  }
  return *FJ0jesPileUpPtHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ1jesPileUpPtHFdn() {
  if (not FJ1jesPileUpPtHFdn_isLoaded) {
    if (FJ1jesPileUpPtHFdn_branch != 0) {
      FJ1jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch FJ1jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    FJ1jesPileUpPtHFdn_isLoaded = true;
  }
  return *FJ1jesPileUpPtHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ2jesPileUpPtHFdn() {
  if (not FJ2jesPileUpPtHFdn_isLoaded) {
    if (FJ2jesPileUpPtHFdn_branch != 0) {
      FJ2jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch FJ2jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    FJ2jesPileUpPtHFdn_isLoaded = true;
  }
  return *FJ2jesPileUpPtHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ3jesPileUpPtHFdn() {
  if (not FJ3jesPileUpPtHFdn_isLoaded) {
    if (FJ3jesPileUpPtHFdn_branch != 0) {
      FJ3jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch FJ3jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    FJ3jesPileUpPtHFdn_isLoaded = true;
  }
  return *FJ3jesPileUpPtHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::FJ4jesPileUpPtHFdn() {
  if (not FJ4jesPileUpPtHFdn_isLoaded) {
    if (FJ4jesPileUpPtHFdn_branch != 0) {
      FJ4jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch FJ4jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    FJ4jesPileUpPtHFdn_isLoaded = true;
  }
  return *FJ4jesPileUpPtHFdn_;
}

const float &VVV0Tree::VMD0jesPileUpPtHFdn() {
  if (not VMD0jesPileUpPtHFdn_isLoaded) {
    if (VMD0jesPileUpPtHFdn_branch != 0) {
      VMD0jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch VMD0jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    VMD0jesPileUpPtHFdn_isLoaded = true;
  }
  return VMD0jesPileUpPtHFdn_;
}

const float &VVV0Tree::VMD1jesPileUpPtHFdn() {
  if (not VMD1jesPileUpPtHFdn_isLoaded) {
    if (VMD1jesPileUpPtHFdn_branch != 0) {
      VMD1jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch VMD1jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    VMD1jesPileUpPtHFdn_isLoaded = true;
  }
  return VMD1jesPileUpPtHFdn_;
}

const float &VVV0Tree::VMD2jesPileUpPtHFdn() {
  if (not VMD2jesPileUpPtHFdn_isLoaded) {
    if (VMD2jesPileUpPtHFdn_branch != 0) {
      VMD2jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch VMD2jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    VMD2jesPileUpPtHFdn_isLoaded = true;
  }
  return VMD2jesPileUpPtHFdn_;
}

const float &VVV0Tree::VMD3jesPileUpPtHFdn() {
  if (not VMD3jesPileUpPtHFdn_isLoaded) {
    if (VMD3jesPileUpPtHFdn_branch != 0) {
      VMD3jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch VMD3jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    VMD3jesPileUpPtHFdn_isLoaded = true;
  }
  return VMD3jesPileUpPtHFdn_;
}

const float &VVV0Tree::VMD4jesPileUpPtHFdn() {
  if (not VMD4jesPileUpPtHFdn_isLoaded) {
    if (VMD4jesPileUpPtHFdn_branch != 0) {
      VMD4jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch VMD4jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    VMD4jesPileUpPtHFdn_isLoaded = true;
  }
  return VMD4jesPileUpPtHFdn_;
}

const float &VVV0Tree::WMD0jesPileUpPtHFdn() {
  if (not WMD0jesPileUpPtHFdn_isLoaded) {
    if (WMD0jesPileUpPtHFdn_branch != 0) {
      WMD0jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch WMD0jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    WMD0jesPileUpPtHFdn_isLoaded = true;
  }
  return WMD0jesPileUpPtHFdn_;
}

const float &VVV0Tree::WMD1jesPileUpPtHFdn() {
  if (not WMD1jesPileUpPtHFdn_isLoaded) {
    if (WMD1jesPileUpPtHFdn_branch != 0) {
      WMD1jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch WMD1jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    WMD1jesPileUpPtHFdn_isLoaded = true;
  }
  return WMD1jesPileUpPtHFdn_;
}

const float &VVV0Tree::WMD2jesPileUpPtHFdn() {
  if (not WMD2jesPileUpPtHFdn_isLoaded) {
    if (WMD2jesPileUpPtHFdn_branch != 0) {
      WMD2jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch WMD2jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    WMD2jesPileUpPtHFdn_isLoaded = true;
  }
  return WMD2jesPileUpPtHFdn_;
}

const float &VVV0Tree::WMD3jesPileUpPtHFdn() {
  if (not WMD3jesPileUpPtHFdn_isLoaded) {
    if (WMD3jesPileUpPtHFdn_branch != 0) {
      WMD3jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch WMD3jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    WMD3jesPileUpPtHFdn_isLoaded = true;
  }
  return WMD3jesPileUpPtHFdn_;
}

const float &VVV0Tree::WMD4jesPileUpPtHFdn() {
  if (not WMD4jesPileUpPtHFdn_isLoaded) {
    if (WMD4jesPileUpPtHFdn_branch != 0) {
      WMD4jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch WMD4jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    WMD4jesPileUpPtHFdn_isLoaded = true;
  }
  return WMD4jesPileUpPtHFdn_;
}

const int &VVV0Tree::NQGen0jesPileUpPtHFdn() {
  if (not NQGen0jesPileUpPtHFdn_isLoaded) {
    if (NQGen0jesPileUpPtHFdn_branch != 0) {
      NQGen0jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen0jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    NQGen0jesPileUpPtHFdn_isLoaded = true;
  }
  return NQGen0jesPileUpPtHFdn_;
}

const int &VVV0Tree::NQGen1jesPileUpPtHFdn() {
  if (not NQGen1jesPileUpPtHFdn_isLoaded) {
    if (NQGen1jesPileUpPtHFdn_branch != 0) {
      NQGen1jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen1jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    NQGen1jesPileUpPtHFdn_isLoaded = true;
  }
  return NQGen1jesPileUpPtHFdn_;
}

const int &VVV0Tree::NQGen2jesPileUpPtHFdn() {
  if (not NQGen2jesPileUpPtHFdn_isLoaded) {
    if (NQGen2jesPileUpPtHFdn_branch != 0) {
      NQGen2jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen2jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    NQGen2jesPileUpPtHFdn_isLoaded = true;
  }
  return NQGen2jesPileUpPtHFdn_;
}

const int &VVV0Tree::NQGen3jesPileUpPtHFdn() {
  if (not NQGen3jesPileUpPtHFdn_isLoaded) {
    if (NQGen3jesPileUpPtHFdn_branch != 0) {
      NQGen3jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen3jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    NQGen3jesPileUpPtHFdn_isLoaded = true;
  }
  return NQGen3jesPileUpPtHFdn_;
}

const int &VVV0Tree::NQGen4jesPileUpPtHFdn() {
  if (not NQGen4jesPileUpPtHFdn_isLoaded) {
    if (NQGen4jesPileUpPtHFdn_branch != 0) {
      NQGen4jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NQGen4jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    NQGen4jesPileUpPtHFdn_isLoaded = true;
  }
  return NQGen4jesPileUpPtHFdn_;
}

const int &VVV0Tree::NBGen0jesPileUpPtHFdn() {
  if (not NBGen0jesPileUpPtHFdn_isLoaded) {
    if (NBGen0jesPileUpPtHFdn_branch != 0) {
      NBGen0jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen0jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    NBGen0jesPileUpPtHFdn_isLoaded = true;
  }
  return NBGen0jesPileUpPtHFdn_;
}

const int &VVV0Tree::NBGen1jesPileUpPtHFdn() {
  if (not NBGen1jesPileUpPtHFdn_isLoaded) {
    if (NBGen1jesPileUpPtHFdn_branch != 0) {
      NBGen1jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen1jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    NBGen1jesPileUpPtHFdn_isLoaded = true;
  }
  return NBGen1jesPileUpPtHFdn_;
}

const int &VVV0Tree::NBGen2jesPileUpPtHFdn() {
  if (not NBGen2jesPileUpPtHFdn_isLoaded) {
    if (NBGen2jesPileUpPtHFdn_branch != 0) {
      NBGen2jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen2jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    NBGen2jesPileUpPtHFdn_isLoaded = true;
  }
  return NBGen2jesPileUpPtHFdn_;
}

const int &VVV0Tree::NBGen3jesPileUpPtHFdn() {
  if (not NBGen3jesPileUpPtHFdn_isLoaded) {
    if (NBGen3jesPileUpPtHFdn_branch != 0) {
      NBGen3jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen3jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    NBGen3jesPileUpPtHFdn_isLoaded = true;
  }
  return NBGen3jesPileUpPtHFdn_;
}

const int &VVV0Tree::NBGen4jesPileUpPtHFdn() {
  if (not NBGen4jesPileUpPtHFdn_isLoaded) {
    if (NBGen4jesPileUpPtHFdn_branch != 0) {
      NBGen4jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NBGen4jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    NBGen4jesPileUpPtHFdn_isLoaded = true;
  }
  return NBGen4jesPileUpPtHFdn_;
}

const int &VVV0Tree::NLGen0jesPileUpPtHFdn() {
  if (not NLGen0jesPileUpPtHFdn_isLoaded) {
    if (NLGen0jesPileUpPtHFdn_branch != 0) {
      NLGen0jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen0jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    NLGen0jesPileUpPtHFdn_isLoaded = true;
  }
  return NLGen0jesPileUpPtHFdn_;
}

const int &VVV0Tree::NLGen1jesPileUpPtHFdn() {
  if (not NLGen1jesPileUpPtHFdn_isLoaded) {
    if (NLGen1jesPileUpPtHFdn_branch != 0) {
      NLGen1jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen1jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    NLGen1jesPileUpPtHFdn_isLoaded = true;
  }
  return NLGen1jesPileUpPtHFdn_;
}

const int &VVV0Tree::NLGen2jesPileUpPtHFdn() {
  if (not NLGen2jesPileUpPtHFdn_isLoaded) {
    if (NLGen2jesPileUpPtHFdn_branch != 0) {
      NLGen2jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen2jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    NLGen2jesPileUpPtHFdn_isLoaded = true;
  }
  return NLGen2jesPileUpPtHFdn_;
}

const int &VVV0Tree::NLGen3jesPileUpPtHFdn() {
  if (not NLGen3jesPileUpPtHFdn_isLoaded) {
    if (NLGen3jesPileUpPtHFdn_branch != 0) {
      NLGen3jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen3jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    NLGen3jesPileUpPtHFdn_isLoaded = true;
  }
  return NLGen3jesPileUpPtHFdn_;
}

const int &VVV0Tree::NLGen4jesPileUpPtHFdn() {
  if (not NLGen4jesPileUpPtHFdn_isLoaded) {
    if (NLGen4jesPileUpPtHFdn_branch != 0) {
      NLGen4jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NLGen4jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    NLGen4jesPileUpPtHFdn_isLoaded = true;
  }
  return NLGen4jesPileUpPtHFdn_;
}

const int &VVV0Tree::NVQGen0jesPileUpPtHFdn() {
  if (not NVQGen0jesPileUpPtHFdn_isLoaded) {
    if (NVQGen0jesPileUpPtHFdn_branch != 0) {
      NVQGen0jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen0jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen0jesPileUpPtHFdn_isLoaded = true;
  }
  return NVQGen0jesPileUpPtHFdn_;
}

const int &VVV0Tree::NVQGen1jesPileUpPtHFdn() {
  if (not NVQGen1jesPileUpPtHFdn_isLoaded) {
    if (NVQGen1jesPileUpPtHFdn_branch != 0) {
      NVQGen1jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen1jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen1jesPileUpPtHFdn_isLoaded = true;
  }
  return NVQGen1jesPileUpPtHFdn_;
}

const int &VVV0Tree::NVQGen2jesPileUpPtHFdn() {
  if (not NVQGen2jesPileUpPtHFdn_isLoaded) {
    if (NVQGen2jesPileUpPtHFdn_branch != 0) {
      NVQGen2jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen2jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen2jesPileUpPtHFdn_isLoaded = true;
  }
  return NVQGen2jesPileUpPtHFdn_;
}

const int &VVV0Tree::NVQGen3jesPileUpPtHFdn() {
  if (not NVQGen3jesPileUpPtHFdn_isLoaded) {
    if (NVQGen3jesPileUpPtHFdn_branch != 0) {
      NVQGen3jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen3jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen3jesPileUpPtHFdn_isLoaded = true;
  }
  return NVQGen3jesPileUpPtHFdn_;
}

const int &VVV0Tree::NVQGen4jesPileUpPtHFdn() {
  if (not NVQGen4jesPileUpPtHFdn_isLoaded) {
    if (NVQGen4jesPileUpPtHFdn_branch != 0) {
      NVQGen4jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NVQGen4jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    NVQGen4jesPileUpPtHFdn_isLoaded = true;
  }
  return NVQGen4jesPileUpPtHFdn_;
}

const int &VVV0Tree::NiFJjesPileUpPtHFdn() {
  if (not NiFJjesPileUpPtHFdn_isLoaded) {
    if (NiFJjesPileUpPtHFdn_branch != 0) {
      NiFJjesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NiFJjesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    NiFJjesPileUpPtHFdn_isLoaded = true;
  }
  return NiFJjesPileUpPtHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ0jesPileUpPtHFdn() {
  if (not iFJ0jesPileUpPtHFdn_isLoaded) {
    if (iFJ0jesPileUpPtHFdn_branch != 0) {
      iFJ0jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ0jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    iFJ0jesPileUpPtHFdn_isLoaded = true;
  }
  return *iFJ0jesPileUpPtHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ1jesPileUpPtHFdn() {
  if (not iFJ1jesPileUpPtHFdn_isLoaded) {
    if (iFJ1jesPileUpPtHFdn_branch != 0) {
      iFJ1jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ1jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    iFJ1jesPileUpPtHFdn_isLoaded = true;
  }
  return *iFJ1jesPileUpPtHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ2jesPileUpPtHFdn() {
  if (not iFJ2jesPileUpPtHFdn_isLoaded) {
    if (iFJ2jesPileUpPtHFdn_branch != 0) {
      iFJ2jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ2jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    iFJ2jesPileUpPtHFdn_isLoaded = true;
  }
  return *iFJ2jesPileUpPtHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ3jesPileUpPtHFdn() {
  if (not iFJ3jesPileUpPtHFdn_isLoaded) {
    if (iFJ3jesPileUpPtHFdn_branch != 0) {
      iFJ3jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ3jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    iFJ3jesPileUpPtHFdn_isLoaded = true;
  }
  return *iFJ3jesPileUpPtHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::iFJ4jesPileUpPtHFdn() {
  if (not iFJ4jesPileUpPtHFdn_isLoaded) {
    if (iFJ4jesPileUpPtHFdn_branch != 0) {
      iFJ4jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch iFJ4jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    iFJ4jesPileUpPtHFdn_isLoaded = true;
  }
  return *iFJ4jesPileUpPtHFdn_;
}

const float &VVV0Tree::iVMD0jesPileUpPtHFdn() {
  if (not iVMD0jesPileUpPtHFdn_isLoaded) {
    if (iVMD0jesPileUpPtHFdn_branch != 0) {
      iVMD0jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD0jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    iVMD0jesPileUpPtHFdn_isLoaded = true;
  }
  return iVMD0jesPileUpPtHFdn_;
}

const float &VVV0Tree::iVMD1jesPileUpPtHFdn() {
  if (not iVMD1jesPileUpPtHFdn_isLoaded) {
    if (iVMD1jesPileUpPtHFdn_branch != 0) {
      iVMD1jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD1jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    iVMD1jesPileUpPtHFdn_isLoaded = true;
  }
  return iVMD1jesPileUpPtHFdn_;
}

const float &VVV0Tree::iVMD2jesPileUpPtHFdn() {
  if (not iVMD2jesPileUpPtHFdn_isLoaded) {
    if (iVMD2jesPileUpPtHFdn_branch != 0) {
      iVMD2jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD2jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    iVMD2jesPileUpPtHFdn_isLoaded = true;
  }
  return iVMD2jesPileUpPtHFdn_;
}

const float &VVV0Tree::iVMD3jesPileUpPtHFdn() {
  if (not iVMD3jesPileUpPtHFdn_isLoaded) {
    if (iVMD3jesPileUpPtHFdn_branch != 0) {
      iVMD3jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD3jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    iVMD3jesPileUpPtHFdn_isLoaded = true;
  }
  return iVMD3jesPileUpPtHFdn_;
}

const float &VVV0Tree::iVMD4jesPileUpPtHFdn() {
  if (not iVMD4jesPileUpPtHFdn_isLoaded) {
    if (iVMD4jesPileUpPtHFdn_branch != 0) {
      iVMD4jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch iVMD4jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    iVMD4jesPileUpPtHFdn_isLoaded = true;
  }
  return iVMD4jesPileUpPtHFdn_;
}

const float &VVV0Tree::iWMD0jesPileUpPtHFdn() {
  if (not iWMD0jesPileUpPtHFdn_isLoaded) {
    if (iWMD0jesPileUpPtHFdn_branch != 0) {
      iWMD0jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD0jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    iWMD0jesPileUpPtHFdn_isLoaded = true;
  }
  return iWMD0jesPileUpPtHFdn_;
}

const float &VVV0Tree::iWMD1jesPileUpPtHFdn() {
  if (not iWMD1jesPileUpPtHFdn_isLoaded) {
    if (iWMD1jesPileUpPtHFdn_branch != 0) {
      iWMD1jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD1jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    iWMD1jesPileUpPtHFdn_isLoaded = true;
  }
  return iWMD1jesPileUpPtHFdn_;
}

const float &VVV0Tree::iWMD2jesPileUpPtHFdn() {
  if (not iWMD2jesPileUpPtHFdn_isLoaded) {
    if (iWMD2jesPileUpPtHFdn_branch != 0) {
      iWMD2jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD2jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    iWMD2jesPileUpPtHFdn_isLoaded = true;
  }
  return iWMD2jesPileUpPtHFdn_;
}

const float &VVV0Tree::iWMD3jesPileUpPtHFdn() {
  if (not iWMD3jesPileUpPtHFdn_isLoaded) {
    if (iWMD3jesPileUpPtHFdn_branch != 0) {
      iWMD3jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD3jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    iWMD3jesPileUpPtHFdn_isLoaded = true;
  }
  return iWMD3jesPileUpPtHFdn_;
}

const float &VVV0Tree::iWMD4jesPileUpPtHFdn() {
  if (not iWMD4jesPileUpPtHFdn_isLoaded) {
    if (iWMD4jesPileUpPtHFdn_branch != 0) {
      iWMD4jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch iWMD4jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    iWMD4jesPileUpPtHFdn_isLoaded = true;
  }
  return iWMD4jesPileUpPtHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::METjesPileUpPtHFdn() {
  if (not METjesPileUpPtHFdn_isLoaded) {
    if (METjesPileUpPtHFdn_branch != 0) {
      METjesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch METjesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    METjesPileUpPtHFdn_isLoaded = true;
  }
  return *METjesPileUpPtHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::NujesPileUpPtHFdn() {
  if (not NujesPileUpPtHFdn_isLoaded) {
    if (NujesPileUpPtHFdn_branch != 0) {
      NujesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NujesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    NujesPileUpPtHFdn_isLoaded = true;
  }
  return *NujesPileUpPtHFdn_;
}

const int &VVV0Tree::NJjesPileUpPtHFdn() {
  if (not NJjesPileUpPtHFdn_isLoaded) {
    if (NJjesPileUpPtHFdn_branch != 0) {
      NJjesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NJjesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    NJjesPileUpPtHFdn_isLoaded = true;
  }
  return NJjesPileUpPtHFdn_;
}

const int &VVV0Tree::NbLoosejesPileUpPtHFdn() {
  if (not NbLoosejesPileUpPtHFdn_isLoaded) {
    if (NbLoosejesPileUpPtHFdn_branch != 0) {
      NbLoosejesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NbLoosejesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    NbLoosejesPileUpPtHFdn_isLoaded = true;
  }
  return NbLoosejesPileUpPtHFdn_;
}

const int &VVV0Tree::NbMediumjesPileUpPtHFdn() {
  if (not NbMediumjesPileUpPtHFdn_isLoaded) {
    if (NbMediumjesPileUpPtHFdn_branch != 0) {
      NbMediumjesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NbMediumjesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    NbMediumjesPileUpPtHFdn_isLoaded = true;
  }
  return NbMediumjesPileUpPtHFdn_;
}

const int &VVV0Tree::NbTightjesPileUpPtHFdn() {
  if (not NbTightjesPileUpPtHFdn_isLoaded) {
    if (NbTightjesPileUpPtHFdn_branch != 0) {
      NbTightjesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NbTightjesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    NbTightjesPileUpPtHFdn_isLoaded = true;
  }
  return NbTightjesPileUpPtHFdn_;
}

const int &VVV0Tree::NoORNbLoosejesPileUpPtHFdn() {
  if (not NoORNbLoosejesPileUpPtHFdn_isLoaded) {
    if (NoORNbLoosejesPileUpPtHFdn_branch != 0) {
      NoORNbLoosejesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbLoosejesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbLoosejesPileUpPtHFdn_isLoaded = true;
  }
  return NoORNbLoosejesPileUpPtHFdn_;
}

const int &VVV0Tree::NoORNbMediumjesPileUpPtHFdn() {
  if (not NoORNbMediumjesPileUpPtHFdn_isLoaded) {
    if (NoORNbMediumjesPileUpPtHFdn_branch != 0) {
      NoORNbMediumjesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbMediumjesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbMediumjesPileUpPtHFdn_isLoaded = true;
  }
  return NoORNbMediumjesPileUpPtHFdn_;
}

const int &VVV0Tree::NoORNbTightjesPileUpPtHFdn() {
  if (not NoORNbTightjesPileUpPtHFdn_isLoaded) {
    if (NoORNbTightjesPileUpPtHFdn_branch != 0) {
      NoORNbTightjesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NoORNbTightjesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    NoORNbTightjesPileUpPtHFdn_isLoaded = true;
  }
  return NoORNbTightjesPileUpPtHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J0jesPileUpPtHFdn() {
  if (not J0jesPileUpPtHFdn_isLoaded) {
    if (J0jesPileUpPtHFdn_branch != 0) {
      J0jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch J0jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    J0jesPileUpPtHFdn_isLoaded = true;
  }
  return *J0jesPileUpPtHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J1jesPileUpPtHFdn() {
  if (not J1jesPileUpPtHFdn_isLoaded) {
    if (J1jesPileUpPtHFdn_branch != 0) {
      J1jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch J1jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    J1jesPileUpPtHFdn_isLoaded = true;
  }
  return *J1jesPileUpPtHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J2jesPileUpPtHFdn() {
  if (not J2jesPileUpPtHFdn_isLoaded) {
    if (J2jesPileUpPtHFdn_branch != 0) {
      J2jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch J2jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    J2jesPileUpPtHFdn_isLoaded = true;
  }
  return *J2jesPileUpPtHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J3jesPileUpPtHFdn() {
  if (not J3jesPileUpPtHFdn_isLoaded) {
    if (J3jesPileUpPtHFdn_branch != 0) {
      J3jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch J3jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    J3jesPileUpPtHFdn_isLoaded = true;
  }
  return *J3jesPileUpPtHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J4jesPileUpPtHFdn() {
  if (not J4jesPileUpPtHFdn_isLoaded) {
    if (J4jesPileUpPtHFdn_branch != 0) {
      J4jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch J4jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    J4jesPileUpPtHFdn_isLoaded = true;
  }
  return *J4jesPileUpPtHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J5jesPileUpPtHFdn() {
  if (not J5jesPileUpPtHFdn_isLoaded) {
    if (J5jesPileUpPtHFdn_branch != 0) {
      J5jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch J5jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    J5jesPileUpPtHFdn_isLoaded = true;
  }
  return *J5jesPileUpPtHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J6jesPileUpPtHFdn() {
  if (not J6jesPileUpPtHFdn_isLoaded) {
    if (J6jesPileUpPtHFdn_branch != 0) {
      J6jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch J6jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    J6jesPileUpPtHFdn_isLoaded = true;
  }
  return *J6jesPileUpPtHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::J7jesPileUpPtHFdn() {
  if (not J7jesPileUpPtHFdn_isLoaded) {
    if (J7jesPileUpPtHFdn_branch != 0) {
      J7jesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch J7jesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    J7jesPileUpPtHFdn_isLoaded = true;
  }
  return *J7jesPileUpPtHFdn_;
}

const vector<int> &VVV0Tree::NQJGenjesPileUpPtHFdn() {
  if (not NQJGenjesPileUpPtHFdn_isLoaded) {
    if (NQJGenjesPileUpPtHFdn_branch != 0) {
      NQJGenjesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NQJGenjesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    NQJGenjesPileUpPtHFdn_isLoaded = true;
  }
  return *NQJGenjesPileUpPtHFdn_;
}

const vector<int> &VVV0Tree::NBJGenjesPileUpPtHFdn() {
  if (not NBJGenjesPileUpPtHFdn_isLoaded) {
    if (NBJGenjesPileUpPtHFdn_branch != 0) {
      NBJGenjesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NBJGenjesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    NBJGenjesPileUpPtHFdn_isLoaded = true;
  }
  return *NBJGenjesPileUpPtHFdn_;
}

const vector<int> &VVV0Tree::NLJGenjesPileUpPtHFdn() {
  if (not NLJGenjesPileUpPtHFdn_isLoaded) {
    if (NLJGenjesPileUpPtHFdn_branch != 0) {
      NLJGenjesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch NLJGenjesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    NLJGenjesPileUpPtHFdn_isLoaded = true;
  }
  return *NLJGenjesPileUpPtHFdn_;
}

const float &VVV0Tree::MVVXjesPileUpPtHFdn() {
  if (not MVVXjesPileUpPtHFdn_isLoaded) {
    if (MVVXjesPileUpPtHFdn_branch != 0) {
      MVVXjesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch MVVXjesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    MVVXjesPileUpPtHFdn_isLoaded = true;
  }
  return MVVXjesPileUpPtHFdn_;
}

const float &VVV0Tree::PtVVXjesPileUpPtHFdn() {
  if (not PtVVXjesPileUpPtHFdn_isLoaded) {
    if (PtVVXjesPileUpPtHFdn_branch != 0) {
      PtVVXjesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch PtVVXjesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    PtVVXjesPileUpPtHFdn_isLoaded = true;
  }
  return PtVVXjesPileUpPtHFdn_;
}

const float &VVV0Tree::HTjesPileUpPtHFdn() {
  if (not HTjesPileUpPtHFdn_isLoaded) {
    if (HTjesPileUpPtHFdn_branch != 0) {
      HTjesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch HTjesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    HTjesPileUpPtHFdn_isLoaded = true;
  }
  return HTjesPileUpPtHFdn_;
}

const float &VVV0Tree::HTJjesPileUpPtHFdn() {
  if (not HTJjesPileUpPtHFdn_isLoaded) {
    if (HTJjesPileUpPtHFdn_branch != 0) {
      HTJjesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch HTJjesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    HTJjesPileUpPtHFdn_isLoaded = true;
  }
  return HTJjesPileUpPtHFdn_;
}

const float &VVV0Tree::HTFJjesPileUpPtHFdn() {
  if (not HTFJjesPileUpPtHFdn_isLoaded) {
    if (HTFJjesPileUpPtHFdn_branch != 0) {
      HTFJjesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch HTFJjesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    HTFJjesPileUpPtHFdn_isLoaded = true;
  }
  return HTFJjesPileUpPtHFdn_;
}

const float &VVV0Tree::SumPtFJjesPileUpPtHFdn() {
  if (not SumPtFJjesPileUpPtHFdn_isLoaded) {
    if (SumPtFJjesPileUpPtHFdn_branch != 0) {
      SumPtFJjesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch SumPtFJjesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    SumPtFJjesPileUpPtHFdn_isLoaded = true;
  }
  return SumPtFJjesPileUpPtHFdn_;
}

const float &VVV0Tree::SumPtJjesPileUpPtHFdn() {
  if (not SumPtJjesPileUpPtHFdn_isLoaded) {
    if (SumPtJjesPileUpPtHFdn_branch != 0) {
      SumPtJjesPileUpPtHFdn_branch->GetEntry(index);
    } else {
      printf("branch SumPtJjesPileUpPtHFdn_branch does not exist!\n");
      exit(1);
    }
    SumPtJjesPileUpPtHFdn_isLoaded = true;
  }
  return SumPtJjesPileUpPtHFdn_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::GenV0() {
  if (not GenV0_isLoaded) {
    if (GenV0_branch != 0) {
      GenV0_branch->GetEntry(index);
    } else {
      printf("branch GenV0_branch does not exist!\n");
      exit(1);
    }
    GenV0_isLoaded = true;
  }
  return *GenV0_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::GenV1() {
  if (not GenV1_isLoaded) {
    if (GenV1_branch != 0) {
      GenV1_branch->GetEntry(index);
    } else {
      printf("branch GenV1_branch does not exist!\n");
      exit(1);
    }
    GenV1_isLoaded = true;
  }
  return *GenV1_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::GenV2() {
  if (not GenV2_isLoaded) {
    if (GenV2_branch != 0) {
      GenV2_branch->GetEntry(index);
    } else {
      printf("branch GenV2_branch does not exist!\n");
      exit(1);
    }
    GenV2_isLoaded = true;
  }
  return *GenV2_;
}

const int &VVV0Tree::isHad0() {
  if (not isHad0_isLoaded) {
    if (isHad0_branch != 0) {
      isHad0_branch->GetEntry(index);
    } else {
      printf("branch isHad0_branch does not exist!\n");
      exit(1);
    }
    isHad0_isLoaded = true;
  }
  return isHad0_;
}

const int &VVV0Tree::isHad1() {
  if (not isHad1_isLoaded) {
    if (isHad1_branch != 0) {
      isHad1_branch->GetEntry(index);
    } else {
      printf("branch isHad1_branch does not exist!\n");
      exit(1);
    }
    isHad1_isLoaded = true;
  }
  return isHad1_;
}

const int &VVV0Tree::isHad2() {
  if (not isHad2_isLoaded) {
    if (isHad2_branch != 0) {
      isHad2_branch->GetEntry(index);
    } else {
      printf("branch isHad2_branch does not exist!\n");
      exit(1);
    }
    isHad2_isLoaded = true;
  }
  return isHad2_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::GenF00() {
  if (not GenF00_isLoaded) {
    if (GenF00_branch != 0) {
      GenF00_branch->GetEntry(index);
    } else {
      printf("branch GenF00_branch does not exist!\n");
      exit(1);
    }
    GenF00_isLoaded = true;
  }
  return *GenF00_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::GenF01() {
  if (not GenF01_isLoaded) {
    if (GenF01_branch != 0) {
      GenF01_branch->GetEntry(index);
    } else {
      printf("branch GenF01_branch does not exist!\n");
      exit(1);
    }
    GenF01_isLoaded = true;
  }
  return *GenF01_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::GenF10() {
  if (not GenF10_isLoaded) {
    if (GenF10_branch != 0) {
      GenF10_branch->GetEntry(index);
    } else {
      printf("branch GenF10_branch does not exist!\n");
      exit(1);
    }
    GenF10_isLoaded = true;
  }
  return *GenF10_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::GenF11() {
  if (not GenF11_isLoaded) {
    if (GenF11_branch != 0) {
      GenF11_branch->GetEntry(index);
    } else {
      printf("branch GenF11_branch does not exist!\n");
      exit(1);
    }
    GenF11_isLoaded = true;
  }
  return *GenF11_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::GenF20() {
  if (not GenF20_isLoaded) {
    if (GenF20_branch != 0) {
      GenF20_branch->GetEntry(index);
    } else {
      printf("branch GenF20_branch does not exist!\n");
      exit(1);
    }
    GenF20_isLoaded = true;
  }
  return *GenF20_;
}

const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &VVV0Tree::GenF21() {
  if (not GenF21_isLoaded) {
    if (GenF21_branch != 0) {
      GenF21_branch->GetEntry(index);
    } else {
      printf("branch GenF21_branch does not exist!\n");
      exit(1);
    }
    GenF21_isLoaded = true;
  }
  return *GenF21_;
}


void VVV0Tree::progress( int nEventsTotal, int nEventsChain ){
  int period = 1000;
  if (nEventsTotal%1000 == 0) {
    // xterm magic from L. Vacavant and A. Cerri
    if (isatty(1)) {
      if ((nEventsChain - nEventsTotal) > period) {
        float frac = (float)nEventsTotal/(nEventsChain*0.01);
        printf("\015\033[32m ---> \033[1m\033[31m%4.1f%%"
             "\033[0m\033[32m <---\033[0m\015", frac);
        fflush(stdout);
      }
      else {
        printf("\015\033[32m ---> \033[1m\033[31m%4.1f%%"
               "\033[0m\033[32m <---\033[0m\015", 100.);
        cout << endl;
      }
    }
  }
}

namespace tas {

const int &isData() { return vvv.isData(); }
const int &run() { return vvv.run(); }
const int &lumi() { return vvv.lumi(); }
const unsigned long long &evt() { return vvv.evt(); }
const int &year() { return vvv.year(); }
const float &genWeight() { return vvv.genWeight(); }
const float &wgt() { return vvv.wgt(); }
const vector<float> &LHEReweightingWeight() { return vvv.LHEReweightingWeight(); }
const float &prefireWgt() { return vvv.prefireWgt(); }
const float &prefireWgtUp() { return vvv.prefireWgtUp(); }
const float &prefireWgtDn() { return vvv.prefireWgtDn(); }
const float &puWgt() { return vvv.puWgt(); }
const float &puWgtUp() { return vvv.puWgtUp(); }
const float &puWgtDn() { return vvv.puWgtDn(); }
const int &pu_nPU() { return vvv.pu_nPU(); }
const float &pu_nTrueInt() { return vvv.pu_nTrueInt(); }
const float &trigWgt() { return vvv.trigWgt(); }
const float &trigWgtUp() { return vvv.trigWgtUp(); }
const float &trigWgtDn() { return vvv.trigWgtDn(); }
const vector<float> &PDF() { return vvv.PDF(); }
const vector<float> &QCDScale() { return vvv.QCDScale(); }
const int &trigger() { return vvv.trigger(); }
const int &is0Lep() { return vvv.is0Lep(); }
const int &is1Lep() { return vvv.is1Lep(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &Lep() { return vvv.Lep(); }
const int &LepFlav() { return vvv.LepFlav(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &Js() { return vvv.Js(); }
const int &NFJ() { return vvv.NFJ(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0() { return vvv.FJ0(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1() { return vvv.FJ1(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2() { return vvv.FJ2(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3() { return vvv.FJ3(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4() { return vvv.FJ4(); }
const float &VMD0() { return vvv.VMD0(); }
const float &VMD1() { return vvv.VMD1(); }
const float &VMD2() { return vvv.VMD2(); }
const float &VMD3() { return vvv.VMD3(); }
const float &VMD4() { return vvv.VMD4(); }
const float &WMD0() { return vvv.WMD0(); }
const float &WMD1() { return vvv.WMD1(); }
const float &WMD2() { return vvv.WMD2(); }
const float &WMD3() { return vvv.WMD3(); }
const float &WMD4() { return vvv.WMD4(); }
const int &NQGen0() { return vvv.NQGen0(); }
const int &NQGen1() { return vvv.NQGen1(); }
const int &NQGen2() { return vvv.NQGen2(); }
const int &NQGen3() { return vvv.NQGen3(); }
const int &NQGen4() { return vvv.NQGen4(); }
const int &NBGen0() { return vvv.NBGen0(); }
const int &NBGen1() { return vvv.NBGen1(); }
const int &NBGen2() { return vvv.NBGen2(); }
const int &NBGen3() { return vvv.NBGen3(); }
const int &NBGen4() { return vvv.NBGen4(); }
const int &NLGen0() { return vvv.NLGen0(); }
const int &NLGen1() { return vvv.NLGen1(); }
const int &NLGen2() { return vvv.NLGen2(); }
const int &NLGen3() { return vvv.NLGen3(); }
const int &NLGen4() { return vvv.NLGen4(); }
const int &NVQGen0() { return vvv.NVQGen0(); }
const int &NVQGen1() { return vvv.NVQGen1(); }
const int &NVQGen2() { return vvv.NVQGen2(); }
const int &NVQGen3() { return vvv.NVQGen3(); }
const int &NVQGen4() { return vvv.NVQGen4(); }
const int &NiFJ() { return vvv.NiFJ(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0() { return vvv.iFJ0(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1() { return vvv.iFJ1(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2() { return vvv.iFJ2(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3() { return vvv.iFJ3(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4() { return vvv.iFJ4(); }
const float &iVMD0() { return vvv.iVMD0(); }
const float &iVMD1() { return vvv.iVMD1(); }
const float &iVMD2() { return vvv.iVMD2(); }
const float &iVMD3() { return vvv.iVMD3(); }
const float &iVMD4() { return vvv.iVMD4(); }
const float &iWMD0() { return vvv.iWMD0(); }
const float &iWMD1() { return vvv.iWMD1(); }
const float &iWMD2() { return vvv.iWMD2(); }
const float &iWMD3() { return vvv.iWMD3(); }
const float &iWMD4() { return vvv.iWMD4(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &MET() { return vvv.MET(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &Nu() { return vvv.Nu(); }
const int &NJ() { return vvv.NJ(); }
const int &NbLoose() { return vvv.NbLoose(); }
const int &NbMedium() { return vvv.NbMedium(); }
const int &NbTight() { return vvv.NbTight(); }
const int &NoORNbLoose() { return vvv.NoORNbLoose(); }
const int &NoORNbMedium() { return vvv.NoORNbMedium(); }
const int &NoORNbTight() { return vvv.NoORNbTight(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0() { return vvv.J0(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1() { return vvv.J1(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2() { return vvv.J2(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3() { return vvv.J3(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4() { return vvv.J4(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5() { return vvv.J5(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6() { return vvv.J6(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7() { return vvv.J7(); }
const vector<int> &NQJGen() { return vvv.NQJGen(); }
const vector<int> &NBJGen() { return vvv.NBJGen(); }
const vector<int> &NLJGen() { return vvv.NLJGen(); }
const float &MVVX() { return vvv.MVVX(); }
const float &PtVVX() { return vvv.PtVVX(); }
const float &HT() { return vvv.HT(); }
const float &HTJ() { return vvv.HTJ(); }
const float &HTFJ() { return vvv.HTFJ(); }
const float &SumPtFJ() { return vvv.SumPtFJ(); }
const float &SumPtJ() { return vvv.SumPtJ(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsJESUp() { return vvv.JsJESUp(); }
const int &NFJJESUp() { return vvv.NFJJESUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0JESUp() { return vvv.FJ0JESUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1JESUp() { return vvv.FJ1JESUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2JESUp() { return vvv.FJ2JESUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3JESUp() { return vvv.FJ3JESUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4JESUp() { return vvv.FJ4JESUp(); }
const float &VMD0JESUp() { return vvv.VMD0JESUp(); }
const float &VMD1JESUp() { return vvv.VMD1JESUp(); }
const float &VMD2JESUp() { return vvv.VMD2JESUp(); }
const float &VMD3JESUp() { return vvv.VMD3JESUp(); }
const float &VMD4JESUp() { return vvv.VMD4JESUp(); }
const float &WMD0JESUp() { return vvv.WMD0JESUp(); }
const float &WMD1JESUp() { return vvv.WMD1JESUp(); }
const float &WMD2JESUp() { return vvv.WMD2JESUp(); }
const float &WMD3JESUp() { return vvv.WMD3JESUp(); }
const float &WMD4JESUp() { return vvv.WMD4JESUp(); }
const int &NQGen0JESUp() { return vvv.NQGen0JESUp(); }
const int &NQGen1JESUp() { return vvv.NQGen1JESUp(); }
const int &NQGen2JESUp() { return vvv.NQGen2JESUp(); }
const int &NQGen3JESUp() { return vvv.NQGen3JESUp(); }
const int &NQGen4JESUp() { return vvv.NQGen4JESUp(); }
const int &NBGen0JESUp() { return vvv.NBGen0JESUp(); }
const int &NBGen1JESUp() { return vvv.NBGen1JESUp(); }
const int &NBGen2JESUp() { return vvv.NBGen2JESUp(); }
const int &NBGen3JESUp() { return vvv.NBGen3JESUp(); }
const int &NBGen4JESUp() { return vvv.NBGen4JESUp(); }
const int &NLGen0JESUp() { return vvv.NLGen0JESUp(); }
const int &NLGen1JESUp() { return vvv.NLGen1JESUp(); }
const int &NLGen2JESUp() { return vvv.NLGen2JESUp(); }
const int &NLGen3JESUp() { return vvv.NLGen3JESUp(); }
const int &NLGen4JESUp() { return vvv.NLGen4JESUp(); }
const int &NVQGen0JESUp() { return vvv.NVQGen0JESUp(); }
const int &NVQGen1JESUp() { return vvv.NVQGen1JESUp(); }
const int &NVQGen2JESUp() { return vvv.NVQGen2JESUp(); }
const int &NVQGen3JESUp() { return vvv.NVQGen3JESUp(); }
const int &NVQGen4JESUp() { return vvv.NVQGen4JESUp(); }
const int &NiFJJESUp() { return vvv.NiFJJESUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0JESUp() { return vvv.iFJ0JESUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1JESUp() { return vvv.iFJ1JESUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2JESUp() { return vvv.iFJ2JESUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3JESUp() { return vvv.iFJ3JESUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4JESUp() { return vvv.iFJ4JESUp(); }
const float &iVMD0JESUp() { return vvv.iVMD0JESUp(); }
const float &iVMD1JESUp() { return vvv.iVMD1JESUp(); }
const float &iVMD2JESUp() { return vvv.iVMD2JESUp(); }
const float &iVMD3JESUp() { return vvv.iVMD3JESUp(); }
const float &iVMD4JESUp() { return vvv.iVMD4JESUp(); }
const float &iWMD0JESUp() { return vvv.iWMD0JESUp(); }
const float &iWMD1JESUp() { return vvv.iWMD1JESUp(); }
const float &iWMD2JESUp() { return vvv.iWMD2JESUp(); }
const float &iWMD3JESUp() { return vvv.iWMD3JESUp(); }
const float &iWMD4JESUp() { return vvv.iWMD4JESUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METJESUp() { return vvv.METJESUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NuJESUp() { return vvv.NuJESUp(); }
const int &NJJESUp() { return vvv.NJJESUp(); }
const int &NbLooseJESUp() { return vvv.NbLooseJESUp(); }
const int &NbMediumJESUp() { return vvv.NbMediumJESUp(); }
const int &NbTightJESUp() { return vvv.NbTightJESUp(); }
const int &NoORNbLooseJESUp() { return vvv.NoORNbLooseJESUp(); }
const int &NoORNbMediumJESUp() { return vvv.NoORNbMediumJESUp(); }
const int &NoORNbTightJESUp() { return vvv.NoORNbTightJESUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0JESUp() { return vvv.J0JESUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1JESUp() { return vvv.J1JESUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2JESUp() { return vvv.J2JESUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3JESUp() { return vvv.J3JESUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4JESUp() { return vvv.J4JESUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5JESUp() { return vvv.J5JESUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6JESUp() { return vvv.J6JESUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7JESUp() { return vvv.J7JESUp(); }
const vector<int> &NQJGenJESUp() { return vvv.NQJGenJESUp(); }
const vector<int> &NBJGenJESUp() { return vvv.NBJGenJESUp(); }
const vector<int> &NLJGenJESUp() { return vvv.NLJGenJESUp(); }
const float &MVVXJESUp() { return vvv.MVVXJESUp(); }
const float &PtVVXJESUp() { return vvv.PtVVXJESUp(); }
const float &HTJESUp() { return vvv.HTJESUp(); }
const float &HTJJESUp() { return vvv.HTJJESUp(); }
const float &HTFJJESUp() { return vvv.HTFJJESUp(); }
const float &SumPtFJJESUp() { return vvv.SumPtFJJESUp(); }
const float &SumPtJJESUp() { return vvv.SumPtJJESUp(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsJESDn() { return vvv.JsJESDn(); }
const int &NFJJESDn() { return vvv.NFJJESDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0JESDn() { return vvv.FJ0JESDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1JESDn() { return vvv.FJ1JESDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2JESDn() { return vvv.FJ2JESDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3JESDn() { return vvv.FJ3JESDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4JESDn() { return vvv.FJ4JESDn(); }
const float &VMD0JESDn() { return vvv.VMD0JESDn(); }
const float &VMD1JESDn() { return vvv.VMD1JESDn(); }
const float &VMD2JESDn() { return vvv.VMD2JESDn(); }
const float &VMD3JESDn() { return vvv.VMD3JESDn(); }
const float &VMD4JESDn() { return vvv.VMD4JESDn(); }
const float &WMD0JESDn() { return vvv.WMD0JESDn(); }
const float &WMD1JESDn() { return vvv.WMD1JESDn(); }
const float &WMD2JESDn() { return vvv.WMD2JESDn(); }
const float &WMD3JESDn() { return vvv.WMD3JESDn(); }
const float &WMD4JESDn() { return vvv.WMD4JESDn(); }
const int &NQGen0JESDn() { return vvv.NQGen0JESDn(); }
const int &NQGen1JESDn() { return vvv.NQGen1JESDn(); }
const int &NQGen2JESDn() { return vvv.NQGen2JESDn(); }
const int &NQGen3JESDn() { return vvv.NQGen3JESDn(); }
const int &NQGen4JESDn() { return vvv.NQGen4JESDn(); }
const int &NBGen0JESDn() { return vvv.NBGen0JESDn(); }
const int &NBGen1JESDn() { return vvv.NBGen1JESDn(); }
const int &NBGen2JESDn() { return vvv.NBGen2JESDn(); }
const int &NBGen3JESDn() { return vvv.NBGen3JESDn(); }
const int &NBGen4JESDn() { return vvv.NBGen4JESDn(); }
const int &NLGen0JESDn() { return vvv.NLGen0JESDn(); }
const int &NLGen1JESDn() { return vvv.NLGen1JESDn(); }
const int &NLGen2JESDn() { return vvv.NLGen2JESDn(); }
const int &NLGen3JESDn() { return vvv.NLGen3JESDn(); }
const int &NLGen4JESDn() { return vvv.NLGen4JESDn(); }
const int &NVQGen0JESDn() { return vvv.NVQGen0JESDn(); }
const int &NVQGen1JESDn() { return vvv.NVQGen1JESDn(); }
const int &NVQGen2JESDn() { return vvv.NVQGen2JESDn(); }
const int &NVQGen3JESDn() { return vvv.NVQGen3JESDn(); }
const int &NVQGen4JESDn() { return vvv.NVQGen4JESDn(); }
const int &NiFJJESDn() { return vvv.NiFJJESDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0JESDn() { return vvv.iFJ0JESDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1JESDn() { return vvv.iFJ1JESDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2JESDn() { return vvv.iFJ2JESDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3JESDn() { return vvv.iFJ3JESDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4JESDn() { return vvv.iFJ4JESDn(); }
const float &iVMD0JESDn() { return vvv.iVMD0JESDn(); }
const float &iVMD1JESDn() { return vvv.iVMD1JESDn(); }
const float &iVMD2JESDn() { return vvv.iVMD2JESDn(); }
const float &iVMD3JESDn() { return vvv.iVMD3JESDn(); }
const float &iVMD4JESDn() { return vvv.iVMD4JESDn(); }
const float &iWMD0JESDn() { return vvv.iWMD0JESDn(); }
const float &iWMD1JESDn() { return vvv.iWMD1JESDn(); }
const float &iWMD2JESDn() { return vvv.iWMD2JESDn(); }
const float &iWMD3JESDn() { return vvv.iWMD3JESDn(); }
const float &iWMD4JESDn() { return vvv.iWMD4JESDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METJESDn() { return vvv.METJESDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NuJESDn() { return vvv.NuJESDn(); }
const int &NJJESDn() { return vvv.NJJESDn(); }
const int &NbLooseJESDn() { return vvv.NbLooseJESDn(); }
const int &NbMediumJESDn() { return vvv.NbMediumJESDn(); }
const int &NbTightJESDn() { return vvv.NbTightJESDn(); }
const int &NoORNbLooseJESDn() { return vvv.NoORNbLooseJESDn(); }
const int &NoORNbMediumJESDn() { return vvv.NoORNbMediumJESDn(); }
const int &NoORNbTightJESDn() { return vvv.NoORNbTightJESDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0JESDn() { return vvv.J0JESDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1JESDn() { return vvv.J1JESDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2JESDn() { return vvv.J2JESDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3JESDn() { return vvv.J3JESDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4JESDn() { return vvv.J4JESDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5JESDn() { return vvv.J5JESDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6JESDn() { return vvv.J6JESDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7JESDn() { return vvv.J7JESDn(); }
const vector<int> &NQJGenJESDn() { return vvv.NQJGenJESDn(); }
const vector<int> &NBJGenJESDn() { return vvv.NBJGenJESDn(); }
const vector<int> &NLJGenJESDn() { return vvv.NLJGenJESDn(); }
const float &MVVXJESDn() { return vvv.MVVXJESDn(); }
const float &PtVVXJESDn() { return vvv.PtVVXJESDn(); }
const float &HTJESDn() { return vvv.HTJESDn(); }
const float &HTJJESDn() { return vvv.HTJJESDn(); }
const float &HTFJJESDn() { return vvv.HTFJJESDn(); }
const float &SumPtFJJESDn() { return vvv.SumPtFJJESDn(); }
const float &SumPtJJESDn() { return vvv.SumPtJJESDn(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsJERUp() { return vvv.JsJERUp(); }
const int &NFJJERUp() { return vvv.NFJJERUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0JERUp() { return vvv.FJ0JERUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1JERUp() { return vvv.FJ1JERUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2JERUp() { return vvv.FJ2JERUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3JERUp() { return vvv.FJ3JERUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4JERUp() { return vvv.FJ4JERUp(); }
const float &VMD0JERUp() { return vvv.VMD0JERUp(); }
const float &VMD1JERUp() { return vvv.VMD1JERUp(); }
const float &VMD2JERUp() { return vvv.VMD2JERUp(); }
const float &VMD3JERUp() { return vvv.VMD3JERUp(); }
const float &VMD4JERUp() { return vvv.VMD4JERUp(); }
const float &WMD0JERUp() { return vvv.WMD0JERUp(); }
const float &WMD1JERUp() { return vvv.WMD1JERUp(); }
const float &WMD2JERUp() { return vvv.WMD2JERUp(); }
const float &WMD3JERUp() { return vvv.WMD3JERUp(); }
const float &WMD4JERUp() { return vvv.WMD4JERUp(); }
const int &NQGen0JERUp() { return vvv.NQGen0JERUp(); }
const int &NQGen1JERUp() { return vvv.NQGen1JERUp(); }
const int &NQGen2JERUp() { return vvv.NQGen2JERUp(); }
const int &NQGen3JERUp() { return vvv.NQGen3JERUp(); }
const int &NQGen4JERUp() { return vvv.NQGen4JERUp(); }
const int &NBGen0JERUp() { return vvv.NBGen0JERUp(); }
const int &NBGen1JERUp() { return vvv.NBGen1JERUp(); }
const int &NBGen2JERUp() { return vvv.NBGen2JERUp(); }
const int &NBGen3JERUp() { return vvv.NBGen3JERUp(); }
const int &NBGen4JERUp() { return vvv.NBGen4JERUp(); }
const int &NLGen0JERUp() { return vvv.NLGen0JERUp(); }
const int &NLGen1JERUp() { return vvv.NLGen1JERUp(); }
const int &NLGen2JERUp() { return vvv.NLGen2JERUp(); }
const int &NLGen3JERUp() { return vvv.NLGen3JERUp(); }
const int &NLGen4JERUp() { return vvv.NLGen4JERUp(); }
const int &NVQGen0JERUp() { return vvv.NVQGen0JERUp(); }
const int &NVQGen1JERUp() { return vvv.NVQGen1JERUp(); }
const int &NVQGen2JERUp() { return vvv.NVQGen2JERUp(); }
const int &NVQGen3JERUp() { return vvv.NVQGen3JERUp(); }
const int &NVQGen4JERUp() { return vvv.NVQGen4JERUp(); }
const int &NiFJJERUp() { return vvv.NiFJJERUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0JERUp() { return vvv.iFJ0JERUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1JERUp() { return vvv.iFJ1JERUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2JERUp() { return vvv.iFJ2JERUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3JERUp() { return vvv.iFJ3JERUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4JERUp() { return vvv.iFJ4JERUp(); }
const float &iVMD0JERUp() { return vvv.iVMD0JERUp(); }
const float &iVMD1JERUp() { return vvv.iVMD1JERUp(); }
const float &iVMD2JERUp() { return vvv.iVMD2JERUp(); }
const float &iVMD3JERUp() { return vvv.iVMD3JERUp(); }
const float &iVMD4JERUp() { return vvv.iVMD4JERUp(); }
const float &iWMD0JERUp() { return vvv.iWMD0JERUp(); }
const float &iWMD1JERUp() { return vvv.iWMD1JERUp(); }
const float &iWMD2JERUp() { return vvv.iWMD2JERUp(); }
const float &iWMD3JERUp() { return vvv.iWMD3JERUp(); }
const float &iWMD4JERUp() { return vvv.iWMD4JERUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METJERUp() { return vvv.METJERUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NuJERUp() { return vvv.NuJERUp(); }
const int &NJJERUp() { return vvv.NJJERUp(); }
const int &NbLooseJERUp() { return vvv.NbLooseJERUp(); }
const int &NbMediumJERUp() { return vvv.NbMediumJERUp(); }
const int &NbTightJERUp() { return vvv.NbTightJERUp(); }
const int &NoORNbLooseJERUp() { return vvv.NoORNbLooseJERUp(); }
const int &NoORNbMediumJERUp() { return vvv.NoORNbMediumJERUp(); }
const int &NoORNbTightJERUp() { return vvv.NoORNbTightJERUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0JERUp() { return vvv.J0JERUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1JERUp() { return vvv.J1JERUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2JERUp() { return vvv.J2JERUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3JERUp() { return vvv.J3JERUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4JERUp() { return vvv.J4JERUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5JERUp() { return vvv.J5JERUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6JERUp() { return vvv.J6JERUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7JERUp() { return vvv.J7JERUp(); }
const vector<int> &NQJGenJERUp() { return vvv.NQJGenJERUp(); }
const vector<int> &NBJGenJERUp() { return vvv.NBJGenJERUp(); }
const vector<int> &NLJGenJERUp() { return vvv.NLJGenJERUp(); }
const float &MVVXJERUp() { return vvv.MVVXJERUp(); }
const float &PtVVXJERUp() { return vvv.PtVVXJERUp(); }
const float &HTJERUp() { return vvv.HTJERUp(); }
const float &HTJJERUp() { return vvv.HTJJERUp(); }
const float &HTFJJERUp() { return vvv.HTFJJERUp(); }
const float &SumPtFJJERUp() { return vvv.SumPtFJJERUp(); }
const float &SumPtJJERUp() { return vvv.SumPtJJERUp(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsJERDn() { return vvv.JsJERDn(); }
const int &NFJJERDn() { return vvv.NFJJERDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0JERDn() { return vvv.FJ0JERDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1JERDn() { return vvv.FJ1JERDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2JERDn() { return vvv.FJ2JERDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3JERDn() { return vvv.FJ3JERDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4JERDn() { return vvv.FJ4JERDn(); }
const float &VMD0JERDn() { return vvv.VMD0JERDn(); }
const float &VMD1JERDn() { return vvv.VMD1JERDn(); }
const float &VMD2JERDn() { return vvv.VMD2JERDn(); }
const float &VMD3JERDn() { return vvv.VMD3JERDn(); }
const float &VMD4JERDn() { return vvv.VMD4JERDn(); }
const float &WMD0JERDn() { return vvv.WMD0JERDn(); }
const float &WMD1JERDn() { return vvv.WMD1JERDn(); }
const float &WMD2JERDn() { return vvv.WMD2JERDn(); }
const float &WMD3JERDn() { return vvv.WMD3JERDn(); }
const float &WMD4JERDn() { return vvv.WMD4JERDn(); }
const int &NQGen0JERDn() { return vvv.NQGen0JERDn(); }
const int &NQGen1JERDn() { return vvv.NQGen1JERDn(); }
const int &NQGen2JERDn() { return vvv.NQGen2JERDn(); }
const int &NQGen3JERDn() { return vvv.NQGen3JERDn(); }
const int &NQGen4JERDn() { return vvv.NQGen4JERDn(); }
const int &NBGen0JERDn() { return vvv.NBGen0JERDn(); }
const int &NBGen1JERDn() { return vvv.NBGen1JERDn(); }
const int &NBGen2JERDn() { return vvv.NBGen2JERDn(); }
const int &NBGen3JERDn() { return vvv.NBGen3JERDn(); }
const int &NBGen4JERDn() { return vvv.NBGen4JERDn(); }
const int &NLGen0JERDn() { return vvv.NLGen0JERDn(); }
const int &NLGen1JERDn() { return vvv.NLGen1JERDn(); }
const int &NLGen2JERDn() { return vvv.NLGen2JERDn(); }
const int &NLGen3JERDn() { return vvv.NLGen3JERDn(); }
const int &NLGen4JERDn() { return vvv.NLGen4JERDn(); }
const int &NVQGen0JERDn() { return vvv.NVQGen0JERDn(); }
const int &NVQGen1JERDn() { return vvv.NVQGen1JERDn(); }
const int &NVQGen2JERDn() { return vvv.NVQGen2JERDn(); }
const int &NVQGen3JERDn() { return vvv.NVQGen3JERDn(); }
const int &NVQGen4JERDn() { return vvv.NVQGen4JERDn(); }
const int &NiFJJERDn() { return vvv.NiFJJERDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0JERDn() { return vvv.iFJ0JERDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1JERDn() { return vvv.iFJ1JERDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2JERDn() { return vvv.iFJ2JERDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3JERDn() { return vvv.iFJ3JERDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4JERDn() { return vvv.iFJ4JERDn(); }
const float &iVMD0JERDn() { return vvv.iVMD0JERDn(); }
const float &iVMD1JERDn() { return vvv.iVMD1JERDn(); }
const float &iVMD2JERDn() { return vvv.iVMD2JERDn(); }
const float &iVMD3JERDn() { return vvv.iVMD3JERDn(); }
const float &iVMD4JERDn() { return vvv.iVMD4JERDn(); }
const float &iWMD0JERDn() { return vvv.iWMD0JERDn(); }
const float &iWMD1JERDn() { return vvv.iWMD1JERDn(); }
const float &iWMD2JERDn() { return vvv.iWMD2JERDn(); }
const float &iWMD3JERDn() { return vvv.iWMD3JERDn(); }
const float &iWMD4JERDn() { return vvv.iWMD4JERDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METJERDn() { return vvv.METJERDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NuJERDn() { return vvv.NuJERDn(); }
const int &NJJERDn() { return vvv.NJJERDn(); }
const int &NbLooseJERDn() { return vvv.NbLooseJERDn(); }
const int &NbMediumJERDn() { return vvv.NbMediumJERDn(); }
const int &NbTightJERDn() { return vvv.NbTightJERDn(); }
const int &NoORNbLooseJERDn() { return vvv.NoORNbLooseJERDn(); }
const int &NoORNbMediumJERDn() { return vvv.NoORNbMediumJERDn(); }
const int &NoORNbTightJERDn() { return vvv.NoORNbTightJERDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0JERDn() { return vvv.J0JERDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1JERDn() { return vvv.J1JERDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2JERDn() { return vvv.J2JERDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3JERDn() { return vvv.J3JERDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4JERDn() { return vvv.J4JERDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5JERDn() { return vvv.J5JERDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6JERDn() { return vvv.J6JERDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7JERDn() { return vvv.J7JERDn(); }
const vector<int> &NQJGenJERDn() { return vvv.NQJGenJERDn(); }
const vector<int> &NBJGenJERDn() { return vvv.NBJGenJERDn(); }
const vector<int> &NLJGenJERDn() { return vvv.NLJGenJERDn(); }
const float &MVVXJERDn() { return vvv.MVVXJERDn(); }
const float &PtVVXJERDn() { return vvv.PtVVXJERDn(); }
const float &HTJERDn() { return vvv.HTJERDn(); }
const float &HTJJERDn() { return vvv.HTJJERDn(); }
const float &HTFJJERDn() { return vvv.HTFJJERDn(); }
const float &SumPtFJJERDn() { return vvv.SumPtFJJERDn(); }
const float &SumPtJJERDn() { return vvv.SumPtJJERDn(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsJMSUp() { return vvv.JsJMSUp(); }
const int &NFJJMSUp() { return vvv.NFJJMSUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0JMSUp() { return vvv.FJ0JMSUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1JMSUp() { return vvv.FJ1JMSUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2JMSUp() { return vvv.FJ2JMSUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3JMSUp() { return vvv.FJ3JMSUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4JMSUp() { return vvv.FJ4JMSUp(); }
const float &VMD0JMSUp() { return vvv.VMD0JMSUp(); }
const float &VMD1JMSUp() { return vvv.VMD1JMSUp(); }
const float &VMD2JMSUp() { return vvv.VMD2JMSUp(); }
const float &VMD3JMSUp() { return vvv.VMD3JMSUp(); }
const float &VMD4JMSUp() { return vvv.VMD4JMSUp(); }
const float &WMD0JMSUp() { return vvv.WMD0JMSUp(); }
const float &WMD1JMSUp() { return vvv.WMD1JMSUp(); }
const float &WMD2JMSUp() { return vvv.WMD2JMSUp(); }
const float &WMD3JMSUp() { return vvv.WMD3JMSUp(); }
const float &WMD4JMSUp() { return vvv.WMD4JMSUp(); }
const int &NQGen0JMSUp() { return vvv.NQGen0JMSUp(); }
const int &NQGen1JMSUp() { return vvv.NQGen1JMSUp(); }
const int &NQGen2JMSUp() { return vvv.NQGen2JMSUp(); }
const int &NQGen3JMSUp() { return vvv.NQGen3JMSUp(); }
const int &NQGen4JMSUp() { return vvv.NQGen4JMSUp(); }
const int &NBGen0JMSUp() { return vvv.NBGen0JMSUp(); }
const int &NBGen1JMSUp() { return vvv.NBGen1JMSUp(); }
const int &NBGen2JMSUp() { return vvv.NBGen2JMSUp(); }
const int &NBGen3JMSUp() { return vvv.NBGen3JMSUp(); }
const int &NBGen4JMSUp() { return vvv.NBGen4JMSUp(); }
const int &NLGen0JMSUp() { return vvv.NLGen0JMSUp(); }
const int &NLGen1JMSUp() { return vvv.NLGen1JMSUp(); }
const int &NLGen2JMSUp() { return vvv.NLGen2JMSUp(); }
const int &NLGen3JMSUp() { return vvv.NLGen3JMSUp(); }
const int &NLGen4JMSUp() { return vvv.NLGen4JMSUp(); }
const int &NVQGen0JMSUp() { return vvv.NVQGen0JMSUp(); }
const int &NVQGen1JMSUp() { return vvv.NVQGen1JMSUp(); }
const int &NVQGen2JMSUp() { return vvv.NVQGen2JMSUp(); }
const int &NVQGen3JMSUp() { return vvv.NVQGen3JMSUp(); }
const int &NVQGen4JMSUp() { return vvv.NVQGen4JMSUp(); }
const int &NiFJJMSUp() { return vvv.NiFJJMSUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0JMSUp() { return vvv.iFJ0JMSUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1JMSUp() { return vvv.iFJ1JMSUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2JMSUp() { return vvv.iFJ2JMSUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3JMSUp() { return vvv.iFJ3JMSUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4JMSUp() { return vvv.iFJ4JMSUp(); }
const float &iVMD0JMSUp() { return vvv.iVMD0JMSUp(); }
const float &iVMD1JMSUp() { return vvv.iVMD1JMSUp(); }
const float &iVMD2JMSUp() { return vvv.iVMD2JMSUp(); }
const float &iVMD3JMSUp() { return vvv.iVMD3JMSUp(); }
const float &iVMD4JMSUp() { return vvv.iVMD4JMSUp(); }
const float &iWMD0JMSUp() { return vvv.iWMD0JMSUp(); }
const float &iWMD1JMSUp() { return vvv.iWMD1JMSUp(); }
const float &iWMD2JMSUp() { return vvv.iWMD2JMSUp(); }
const float &iWMD3JMSUp() { return vvv.iWMD3JMSUp(); }
const float &iWMD4JMSUp() { return vvv.iWMD4JMSUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METJMSUp() { return vvv.METJMSUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NuJMSUp() { return vvv.NuJMSUp(); }
const int &NJJMSUp() { return vvv.NJJMSUp(); }
const int &NbLooseJMSUp() { return vvv.NbLooseJMSUp(); }
const int &NbMediumJMSUp() { return vvv.NbMediumJMSUp(); }
const int &NbTightJMSUp() { return vvv.NbTightJMSUp(); }
const int &NoORNbLooseJMSUp() { return vvv.NoORNbLooseJMSUp(); }
const int &NoORNbMediumJMSUp() { return vvv.NoORNbMediumJMSUp(); }
const int &NoORNbTightJMSUp() { return vvv.NoORNbTightJMSUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0JMSUp() { return vvv.J0JMSUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1JMSUp() { return vvv.J1JMSUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2JMSUp() { return vvv.J2JMSUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3JMSUp() { return vvv.J3JMSUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4JMSUp() { return vvv.J4JMSUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5JMSUp() { return vvv.J5JMSUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6JMSUp() { return vvv.J6JMSUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7JMSUp() { return vvv.J7JMSUp(); }
const vector<int> &NQJGenJMSUp() { return vvv.NQJGenJMSUp(); }
const vector<int> &NBJGenJMSUp() { return vvv.NBJGenJMSUp(); }
const vector<int> &NLJGenJMSUp() { return vvv.NLJGenJMSUp(); }
const float &MVVXJMSUp() { return vvv.MVVXJMSUp(); }
const float &PtVVXJMSUp() { return vvv.PtVVXJMSUp(); }
const float &HTJMSUp() { return vvv.HTJMSUp(); }
const float &HTJJMSUp() { return vvv.HTJJMSUp(); }
const float &HTFJJMSUp() { return vvv.HTFJJMSUp(); }
const float &SumPtFJJMSUp() { return vvv.SumPtFJJMSUp(); }
const float &SumPtJJMSUp() { return vvv.SumPtJJMSUp(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsJMSDn() { return vvv.JsJMSDn(); }
const int &NFJJMSDn() { return vvv.NFJJMSDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0JMSDn() { return vvv.FJ0JMSDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1JMSDn() { return vvv.FJ1JMSDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2JMSDn() { return vvv.FJ2JMSDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3JMSDn() { return vvv.FJ3JMSDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4JMSDn() { return vvv.FJ4JMSDn(); }
const float &VMD0JMSDn() { return vvv.VMD0JMSDn(); }
const float &VMD1JMSDn() { return vvv.VMD1JMSDn(); }
const float &VMD2JMSDn() { return vvv.VMD2JMSDn(); }
const float &VMD3JMSDn() { return vvv.VMD3JMSDn(); }
const float &VMD4JMSDn() { return vvv.VMD4JMSDn(); }
const float &WMD0JMSDn() { return vvv.WMD0JMSDn(); }
const float &WMD1JMSDn() { return vvv.WMD1JMSDn(); }
const float &WMD2JMSDn() { return vvv.WMD2JMSDn(); }
const float &WMD3JMSDn() { return vvv.WMD3JMSDn(); }
const float &WMD4JMSDn() { return vvv.WMD4JMSDn(); }
const int &NQGen0JMSDn() { return vvv.NQGen0JMSDn(); }
const int &NQGen1JMSDn() { return vvv.NQGen1JMSDn(); }
const int &NQGen2JMSDn() { return vvv.NQGen2JMSDn(); }
const int &NQGen3JMSDn() { return vvv.NQGen3JMSDn(); }
const int &NQGen4JMSDn() { return vvv.NQGen4JMSDn(); }
const int &NBGen0JMSDn() { return vvv.NBGen0JMSDn(); }
const int &NBGen1JMSDn() { return vvv.NBGen1JMSDn(); }
const int &NBGen2JMSDn() { return vvv.NBGen2JMSDn(); }
const int &NBGen3JMSDn() { return vvv.NBGen3JMSDn(); }
const int &NBGen4JMSDn() { return vvv.NBGen4JMSDn(); }
const int &NLGen0JMSDn() { return vvv.NLGen0JMSDn(); }
const int &NLGen1JMSDn() { return vvv.NLGen1JMSDn(); }
const int &NLGen2JMSDn() { return vvv.NLGen2JMSDn(); }
const int &NLGen3JMSDn() { return vvv.NLGen3JMSDn(); }
const int &NLGen4JMSDn() { return vvv.NLGen4JMSDn(); }
const int &NVQGen0JMSDn() { return vvv.NVQGen0JMSDn(); }
const int &NVQGen1JMSDn() { return vvv.NVQGen1JMSDn(); }
const int &NVQGen2JMSDn() { return vvv.NVQGen2JMSDn(); }
const int &NVQGen3JMSDn() { return vvv.NVQGen3JMSDn(); }
const int &NVQGen4JMSDn() { return vvv.NVQGen4JMSDn(); }
const int &NiFJJMSDn() { return vvv.NiFJJMSDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0JMSDn() { return vvv.iFJ0JMSDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1JMSDn() { return vvv.iFJ1JMSDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2JMSDn() { return vvv.iFJ2JMSDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3JMSDn() { return vvv.iFJ3JMSDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4JMSDn() { return vvv.iFJ4JMSDn(); }
const float &iVMD0JMSDn() { return vvv.iVMD0JMSDn(); }
const float &iVMD1JMSDn() { return vvv.iVMD1JMSDn(); }
const float &iVMD2JMSDn() { return vvv.iVMD2JMSDn(); }
const float &iVMD3JMSDn() { return vvv.iVMD3JMSDn(); }
const float &iVMD4JMSDn() { return vvv.iVMD4JMSDn(); }
const float &iWMD0JMSDn() { return vvv.iWMD0JMSDn(); }
const float &iWMD1JMSDn() { return vvv.iWMD1JMSDn(); }
const float &iWMD2JMSDn() { return vvv.iWMD2JMSDn(); }
const float &iWMD3JMSDn() { return vvv.iWMD3JMSDn(); }
const float &iWMD4JMSDn() { return vvv.iWMD4JMSDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METJMSDn() { return vvv.METJMSDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NuJMSDn() { return vvv.NuJMSDn(); }
const int &NJJMSDn() { return vvv.NJJMSDn(); }
const int &NbLooseJMSDn() { return vvv.NbLooseJMSDn(); }
const int &NbMediumJMSDn() { return vvv.NbMediumJMSDn(); }
const int &NbTightJMSDn() { return vvv.NbTightJMSDn(); }
const int &NoORNbLooseJMSDn() { return vvv.NoORNbLooseJMSDn(); }
const int &NoORNbMediumJMSDn() { return vvv.NoORNbMediumJMSDn(); }
const int &NoORNbTightJMSDn() { return vvv.NoORNbTightJMSDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0JMSDn() { return vvv.J0JMSDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1JMSDn() { return vvv.J1JMSDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2JMSDn() { return vvv.J2JMSDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3JMSDn() { return vvv.J3JMSDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4JMSDn() { return vvv.J4JMSDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5JMSDn() { return vvv.J5JMSDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6JMSDn() { return vvv.J6JMSDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7JMSDn() { return vvv.J7JMSDn(); }
const vector<int> &NQJGenJMSDn() { return vvv.NQJGenJMSDn(); }
const vector<int> &NBJGenJMSDn() { return vvv.NBJGenJMSDn(); }
const vector<int> &NLJGenJMSDn() { return vvv.NLJGenJMSDn(); }
const float &MVVXJMSDn() { return vvv.MVVXJMSDn(); }
const float &PtVVXJMSDn() { return vvv.PtVVXJMSDn(); }
const float &HTJMSDn() { return vvv.HTJMSDn(); }
const float &HTJJMSDn() { return vvv.HTJJMSDn(); }
const float &HTFJJMSDn() { return vvv.HTFJJMSDn(); }
const float &SumPtFJJMSDn() { return vvv.SumPtFJJMSDn(); }
const float &SumPtJJMSDn() { return vvv.SumPtJJMSDn(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsJMRUp() { return vvv.JsJMRUp(); }
const int &NFJJMRUp() { return vvv.NFJJMRUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0JMRUp() { return vvv.FJ0JMRUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1JMRUp() { return vvv.FJ1JMRUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2JMRUp() { return vvv.FJ2JMRUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3JMRUp() { return vvv.FJ3JMRUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4JMRUp() { return vvv.FJ4JMRUp(); }
const float &VMD0JMRUp() { return vvv.VMD0JMRUp(); }
const float &VMD1JMRUp() { return vvv.VMD1JMRUp(); }
const float &VMD2JMRUp() { return vvv.VMD2JMRUp(); }
const float &VMD3JMRUp() { return vvv.VMD3JMRUp(); }
const float &VMD4JMRUp() { return vvv.VMD4JMRUp(); }
const float &WMD0JMRUp() { return vvv.WMD0JMRUp(); }
const float &WMD1JMRUp() { return vvv.WMD1JMRUp(); }
const float &WMD2JMRUp() { return vvv.WMD2JMRUp(); }
const float &WMD3JMRUp() { return vvv.WMD3JMRUp(); }
const float &WMD4JMRUp() { return vvv.WMD4JMRUp(); }
const int &NQGen0JMRUp() { return vvv.NQGen0JMRUp(); }
const int &NQGen1JMRUp() { return vvv.NQGen1JMRUp(); }
const int &NQGen2JMRUp() { return vvv.NQGen2JMRUp(); }
const int &NQGen3JMRUp() { return vvv.NQGen3JMRUp(); }
const int &NQGen4JMRUp() { return vvv.NQGen4JMRUp(); }
const int &NBGen0JMRUp() { return vvv.NBGen0JMRUp(); }
const int &NBGen1JMRUp() { return vvv.NBGen1JMRUp(); }
const int &NBGen2JMRUp() { return vvv.NBGen2JMRUp(); }
const int &NBGen3JMRUp() { return vvv.NBGen3JMRUp(); }
const int &NBGen4JMRUp() { return vvv.NBGen4JMRUp(); }
const int &NLGen0JMRUp() { return vvv.NLGen0JMRUp(); }
const int &NLGen1JMRUp() { return vvv.NLGen1JMRUp(); }
const int &NLGen2JMRUp() { return vvv.NLGen2JMRUp(); }
const int &NLGen3JMRUp() { return vvv.NLGen3JMRUp(); }
const int &NLGen4JMRUp() { return vvv.NLGen4JMRUp(); }
const int &NVQGen0JMRUp() { return vvv.NVQGen0JMRUp(); }
const int &NVQGen1JMRUp() { return vvv.NVQGen1JMRUp(); }
const int &NVQGen2JMRUp() { return vvv.NVQGen2JMRUp(); }
const int &NVQGen3JMRUp() { return vvv.NVQGen3JMRUp(); }
const int &NVQGen4JMRUp() { return vvv.NVQGen4JMRUp(); }
const int &NiFJJMRUp() { return vvv.NiFJJMRUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0JMRUp() { return vvv.iFJ0JMRUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1JMRUp() { return vvv.iFJ1JMRUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2JMRUp() { return vvv.iFJ2JMRUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3JMRUp() { return vvv.iFJ3JMRUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4JMRUp() { return vvv.iFJ4JMRUp(); }
const float &iVMD0JMRUp() { return vvv.iVMD0JMRUp(); }
const float &iVMD1JMRUp() { return vvv.iVMD1JMRUp(); }
const float &iVMD2JMRUp() { return vvv.iVMD2JMRUp(); }
const float &iVMD3JMRUp() { return vvv.iVMD3JMRUp(); }
const float &iVMD4JMRUp() { return vvv.iVMD4JMRUp(); }
const float &iWMD0JMRUp() { return vvv.iWMD0JMRUp(); }
const float &iWMD1JMRUp() { return vvv.iWMD1JMRUp(); }
const float &iWMD2JMRUp() { return vvv.iWMD2JMRUp(); }
const float &iWMD3JMRUp() { return vvv.iWMD3JMRUp(); }
const float &iWMD4JMRUp() { return vvv.iWMD4JMRUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METJMRUp() { return vvv.METJMRUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NuJMRUp() { return vvv.NuJMRUp(); }
const int &NJJMRUp() { return vvv.NJJMRUp(); }
const int &NbLooseJMRUp() { return vvv.NbLooseJMRUp(); }
const int &NbMediumJMRUp() { return vvv.NbMediumJMRUp(); }
const int &NbTightJMRUp() { return vvv.NbTightJMRUp(); }
const int &NoORNbLooseJMRUp() { return vvv.NoORNbLooseJMRUp(); }
const int &NoORNbMediumJMRUp() { return vvv.NoORNbMediumJMRUp(); }
const int &NoORNbTightJMRUp() { return vvv.NoORNbTightJMRUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0JMRUp() { return vvv.J0JMRUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1JMRUp() { return vvv.J1JMRUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2JMRUp() { return vvv.J2JMRUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3JMRUp() { return vvv.J3JMRUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4JMRUp() { return vvv.J4JMRUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5JMRUp() { return vvv.J5JMRUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6JMRUp() { return vvv.J6JMRUp(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7JMRUp() { return vvv.J7JMRUp(); }
const vector<int> &NQJGenJMRUp() { return vvv.NQJGenJMRUp(); }
const vector<int> &NBJGenJMRUp() { return vvv.NBJGenJMRUp(); }
const vector<int> &NLJGenJMRUp() { return vvv.NLJGenJMRUp(); }
const float &MVVXJMRUp() { return vvv.MVVXJMRUp(); }
const float &PtVVXJMRUp() { return vvv.PtVVXJMRUp(); }
const float &HTJMRUp() { return vvv.HTJMRUp(); }
const float &HTJJMRUp() { return vvv.HTJJMRUp(); }
const float &HTFJJMRUp() { return vvv.HTFJJMRUp(); }
const float &SumPtFJJMRUp() { return vvv.SumPtFJJMRUp(); }
const float &SumPtJJMRUp() { return vvv.SumPtJJMRUp(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsJMRDn() { return vvv.JsJMRDn(); }
const int &NFJJMRDn() { return vvv.NFJJMRDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0JMRDn() { return vvv.FJ0JMRDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1JMRDn() { return vvv.FJ1JMRDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2JMRDn() { return vvv.FJ2JMRDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3JMRDn() { return vvv.FJ3JMRDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4JMRDn() { return vvv.FJ4JMRDn(); }
const float &VMD0JMRDn() { return vvv.VMD0JMRDn(); }
const float &VMD1JMRDn() { return vvv.VMD1JMRDn(); }
const float &VMD2JMRDn() { return vvv.VMD2JMRDn(); }
const float &VMD3JMRDn() { return vvv.VMD3JMRDn(); }
const float &VMD4JMRDn() { return vvv.VMD4JMRDn(); }
const float &WMD0JMRDn() { return vvv.WMD0JMRDn(); }
const float &WMD1JMRDn() { return vvv.WMD1JMRDn(); }
const float &WMD2JMRDn() { return vvv.WMD2JMRDn(); }
const float &WMD3JMRDn() { return vvv.WMD3JMRDn(); }
const float &WMD4JMRDn() { return vvv.WMD4JMRDn(); }
const int &NQGen0JMRDn() { return vvv.NQGen0JMRDn(); }
const int &NQGen1JMRDn() { return vvv.NQGen1JMRDn(); }
const int &NQGen2JMRDn() { return vvv.NQGen2JMRDn(); }
const int &NQGen3JMRDn() { return vvv.NQGen3JMRDn(); }
const int &NQGen4JMRDn() { return vvv.NQGen4JMRDn(); }
const int &NBGen0JMRDn() { return vvv.NBGen0JMRDn(); }
const int &NBGen1JMRDn() { return vvv.NBGen1JMRDn(); }
const int &NBGen2JMRDn() { return vvv.NBGen2JMRDn(); }
const int &NBGen3JMRDn() { return vvv.NBGen3JMRDn(); }
const int &NBGen4JMRDn() { return vvv.NBGen4JMRDn(); }
const int &NLGen0JMRDn() { return vvv.NLGen0JMRDn(); }
const int &NLGen1JMRDn() { return vvv.NLGen1JMRDn(); }
const int &NLGen2JMRDn() { return vvv.NLGen2JMRDn(); }
const int &NLGen3JMRDn() { return vvv.NLGen3JMRDn(); }
const int &NLGen4JMRDn() { return vvv.NLGen4JMRDn(); }
const int &NVQGen0JMRDn() { return vvv.NVQGen0JMRDn(); }
const int &NVQGen1JMRDn() { return vvv.NVQGen1JMRDn(); }
const int &NVQGen2JMRDn() { return vvv.NVQGen2JMRDn(); }
const int &NVQGen3JMRDn() { return vvv.NVQGen3JMRDn(); }
const int &NVQGen4JMRDn() { return vvv.NVQGen4JMRDn(); }
const int &NiFJJMRDn() { return vvv.NiFJJMRDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0JMRDn() { return vvv.iFJ0JMRDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1JMRDn() { return vvv.iFJ1JMRDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2JMRDn() { return vvv.iFJ2JMRDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3JMRDn() { return vvv.iFJ3JMRDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4JMRDn() { return vvv.iFJ4JMRDn(); }
const float &iVMD0JMRDn() { return vvv.iVMD0JMRDn(); }
const float &iVMD1JMRDn() { return vvv.iVMD1JMRDn(); }
const float &iVMD2JMRDn() { return vvv.iVMD2JMRDn(); }
const float &iVMD3JMRDn() { return vvv.iVMD3JMRDn(); }
const float &iVMD4JMRDn() { return vvv.iVMD4JMRDn(); }
const float &iWMD0JMRDn() { return vvv.iWMD0JMRDn(); }
const float &iWMD1JMRDn() { return vvv.iWMD1JMRDn(); }
const float &iWMD2JMRDn() { return vvv.iWMD2JMRDn(); }
const float &iWMD3JMRDn() { return vvv.iWMD3JMRDn(); }
const float &iWMD4JMRDn() { return vvv.iWMD4JMRDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METJMRDn() { return vvv.METJMRDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NuJMRDn() { return vvv.NuJMRDn(); }
const int &NJJMRDn() { return vvv.NJJMRDn(); }
const int &NbLooseJMRDn() { return vvv.NbLooseJMRDn(); }
const int &NbMediumJMRDn() { return vvv.NbMediumJMRDn(); }
const int &NbTightJMRDn() { return vvv.NbTightJMRDn(); }
const int &NoORNbLooseJMRDn() { return vvv.NoORNbLooseJMRDn(); }
const int &NoORNbMediumJMRDn() { return vvv.NoORNbMediumJMRDn(); }
const int &NoORNbTightJMRDn() { return vvv.NoORNbTightJMRDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0JMRDn() { return vvv.J0JMRDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1JMRDn() { return vvv.J1JMRDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2JMRDn() { return vvv.J2JMRDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3JMRDn() { return vvv.J3JMRDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4JMRDn() { return vvv.J4JMRDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5JMRDn() { return vvv.J5JMRDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6JMRDn() { return vvv.J6JMRDn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7JMRDn() { return vvv.J7JMRDn(); }
const vector<int> &NQJGenJMRDn() { return vvv.NQJGenJMRDn(); }
const vector<int> &NBJGenJMRDn() { return vvv.NBJGenJMRDn(); }
const vector<int> &NLJGenJMRDn() { return vvv.NLJGenJMRDn(); }
const float &MVVXJMRDn() { return vvv.MVVXJMRDn(); }
const float &PtVVXJMRDn() { return vvv.PtVVXJMRDn(); }
const float &HTJMRDn() { return vvv.HTJMRDn(); }
const float &HTJJMRDn() { return vvv.HTJJMRDn(); }
const float &HTFJJMRDn() { return vvv.HTFJJMRDn(); }
const float &SumPtFJJMRDn() { return vvv.SumPtFJJMRDn(); }
const float &SumPtJJMRDn() { return vvv.SumPtJJMRDn(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesAbsoluteStatup() { return vvv.JsjesAbsoluteStatup(); }
const int &NFJjesAbsoluteStatup() { return vvv.NFJjesAbsoluteStatup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesAbsoluteStatup() { return vvv.FJ0jesAbsoluteStatup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesAbsoluteStatup() { return vvv.FJ1jesAbsoluteStatup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesAbsoluteStatup() { return vvv.FJ2jesAbsoluteStatup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesAbsoluteStatup() { return vvv.FJ3jesAbsoluteStatup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesAbsoluteStatup() { return vvv.FJ4jesAbsoluteStatup(); }
const float &VMD0jesAbsoluteStatup() { return vvv.VMD0jesAbsoluteStatup(); }
const float &VMD1jesAbsoluteStatup() { return vvv.VMD1jesAbsoluteStatup(); }
const float &VMD2jesAbsoluteStatup() { return vvv.VMD2jesAbsoluteStatup(); }
const float &VMD3jesAbsoluteStatup() { return vvv.VMD3jesAbsoluteStatup(); }
const float &VMD4jesAbsoluteStatup() { return vvv.VMD4jesAbsoluteStatup(); }
const float &WMD0jesAbsoluteStatup() { return vvv.WMD0jesAbsoluteStatup(); }
const float &WMD1jesAbsoluteStatup() { return vvv.WMD1jesAbsoluteStatup(); }
const float &WMD2jesAbsoluteStatup() { return vvv.WMD2jesAbsoluteStatup(); }
const float &WMD3jesAbsoluteStatup() { return vvv.WMD3jesAbsoluteStatup(); }
const float &WMD4jesAbsoluteStatup() { return vvv.WMD4jesAbsoluteStatup(); }
const int &NQGen0jesAbsoluteStatup() { return vvv.NQGen0jesAbsoluteStatup(); }
const int &NQGen1jesAbsoluteStatup() { return vvv.NQGen1jesAbsoluteStatup(); }
const int &NQGen2jesAbsoluteStatup() { return vvv.NQGen2jesAbsoluteStatup(); }
const int &NQGen3jesAbsoluteStatup() { return vvv.NQGen3jesAbsoluteStatup(); }
const int &NQGen4jesAbsoluteStatup() { return vvv.NQGen4jesAbsoluteStatup(); }
const int &NBGen0jesAbsoluteStatup() { return vvv.NBGen0jesAbsoluteStatup(); }
const int &NBGen1jesAbsoluteStatup() { return vvv.NBGen1jesAbsoluteStatup(); }
const int &NBGen2jesAbsoluteStatup() { return vvv.NBGen2jesAbsoluteStatup(); }
const int &NBGen3jesAbsoluteStatup() { return vvv.NBGen3jesAbsoluteStatup(); }
const int &NBGen4jesAbsoluteStatup() { return vvv.NBGen4jesAbsoluteStatup(); }
const int &NLGen0jesAbsoluteStatup() { return vvv.NLGen0jesAbsoluteStatup(); }
const int &NLGen1jesAbsoluteStatup() { return vvv.NLGen1jesAbsoluteStatup(); }
const int &NLGen2jesAbsoluteStatup() { return vvv.NLGen2jesAbsoluteStatup(); }
const int &NLGen3jesAbsoluteStatup() { return vvv.NLGen3jesAbsoluteStatup(); }
const int &NLGen4jesAbsoluteStatup() { return vvv.NLGen4jesAbsoluteStatup(); }
const int &NVQGen0jesAbsoluteStatup() { return vvv.NVQGen0jesAbsoluteStatup(); }
const int &NVQGen1jesAbsoluteStatup() { return vvv.NVQGen1jesAbsoluteStatup(); }
const int &NVQGen2jesAbsoluteStatup() { return vvv.NVQGen2jesAbsoluteStatup(); }
const int &NVQGen3jesAbsoluteStatup() { return vvv.NVQGen3jesAbsoluteStatup(); }
const int &NVQGen4jesAbsoluteStatup() { return vvv.NVQGen4jesAbsoluteStatup(); }
const int &NiFJjesAbsoluteStatup() { return vvv.NiFJjesAbsoluteStatup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesAbsoluteStatup() { return vvv.iFJ0jesAbsoluteStatup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesAbsoluteStatup() { return vvv.iFJ1jesAbsoluteStatup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesAbsoluteStatup() { return vvv.iFJ2jesAbsoluteStatup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesAbsoluteStatup() { return vvv.iFJ3jesAbsoluteStatup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesAbsoluteStatup() { return vvv.iFJ4jesAbsoluteStatup(); }
const float &iVMD0jesAbsoluteStatup() { return vvv.iVMD0jesAbsoluteStatup(); }
const float &iVMD1jesAbsoluteStatup() { return vvv.iVMD1jesAbsoluteStatup(); }
const float &iVMD2jesAbsoluteStatup() { return vvv.iVMD2jesAbsoluteStatup(); }
const float &iVMD3jesAbsoluteStatup() { return vvv.iVMD3jesAbsoluteStatup(); }
const float &iVMD4jesAbsoluteStatup() { return vvv.iVMD4jesAbsoluteStatup(); }
const float &iWMD0jesAbsoluteStatup() { return vvv.iWMD0jesAbsoluteStatup(); }
const float &iWMD1jesAbsoluteStatup() { return vvv.iWMD1jesAbsoluteStatup(); }
const float &iWMD2jesAbsoluteStatup() { return vvv.iWMD2jesAbsoluteStatup(); }
const float &iWMD3jesAbsoluteStatup() { return vvv.iWMD3jesAbsoluteStatup(); }
const float &iWMD4jesAbsoluteStatup() { return vvv.iWMD4jesAbsoluteStatup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesAbsoluteStatup() { return vvv.METjesAbsoluteStatup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesAbsoluteStatup() { return vvv.NujesAbsoluteStatup(); }
const int &NJjesAbsoluteStatup() { return vvv.NJjesAbsoluteStatup(); }
const int &NbLoosejesAbsoluteStatup() { return vvv.NbLoosejesAbsoluteStatup(); }
const int &NbMediumjesAbsoluteStatup() { return vvv.NbMediumjesAbsoluteStatup(); }
const int &NbTightjesAbsoluteStatup() { return vvv.NbTightjesAbsoluteStatup(); }
const int &NoORNbLoosejesAbsoluteStatup() { return vvv.NoORNbLoosejesAbsoluteStatup(); }
const int &NoORNbMediumjesAbsoluteStatup() { return vvv.NoORNbMediumjesAbsoluteStatup(); }
const int &NoORNbTightjesAbsoluteStatup() { return vvv.NoORNbTightjesAbsoluteStatup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesAbsoluteStatup() { return vvv.J0jesAbsoluteStatup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesAbsoluteStatup() { return vvv.J1jesAbsoluteStatup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesAbsoluteStatup() { return vvv.J2jesAbsoluteStatup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesAbsoluteStatup() { return vvv.J3jesAbsoluteStatup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesAbsoluteStatup() { return vvv.J4jesAbsoluteStatup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesAbsoluteStatup() { return vvv.J5jesAbsoluteStatup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesAbsoluteStatup() { return vvv.J6jesAbsoluteStatup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesAbsoluteStatup() { return vvv.J7jesAbsoluteStatup(); }
const vector<int> &NQJGenjesAbsoluteStatup() { return vvv.NQJGenjesAbsoluteStatup(); }
const vector<int> &NBJGenjesAbsoluteStatup() { return vvv.NBJGenjesAbsoluteStatup(); }
const vector<int> &NLJGenjesAbsoluteStatup() { return vvv.NLJGenjesAbsoluteStatup(); }
const float &MVVXjesAbsoluteStatup() { return vvv.MVVXjesAbsoluteStatup(); }
const float &PtVVXjesAbsoluteStatup() { return vvv.PtVVXjesAbsoluteStatup(); }
const float &HTjesAbsoluteStatup() { return vvv.HTjesAbsoluteStatup(); }
const float &HTJjesAbsoluteStatup() { return vvv.HTJjesAbsoluteStatup(); }
const float &HTFJjesAbsoluteStatup() { return vvv.HTFJjesAbsoluteStatup(); }
const float &SumPtFJjesAbsoluteStatup() { return vvv.SumPtFJjesAbsoluteStatup(); }
const float &SumPtJjesAbsoluteStatup() { return vvv.SumPtJjesAbsoluteStatup(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesAbsoluteStatdn() { return vvv.JsjesAbsoluteStatdn(); }
const int &NFJjesAbsoluteStatdn() { return vvv.NFJjesAbsoluteStatdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesAbsoluteStatdn() { return vvv.FJ0jesAbsoluteStatdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesAbsoluteStatdn() { return vvv.FJ1jesAbsoluteStatdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesAbsoluteStatdn() { return vvv.FJ2jesAbsoluteStatdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesAbsoluteStatdn() { return vvv.FJ3jesAbsoluteStatdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesAbsoluteStatdn() { return vvv.FJ4jesAbsoluteStatdn(); }
const float &VMD0jesAbsoluteStatdn() { return vvv.VMD0jesAbsoluteStatdn(); }
const float &VMD1jesAbsoluteStatdn() { return vvv.VMD1jesAbsoluteStatdn(); }
const float &VMD2jesAbsoluteStatdn() { return vvv.VMD2jesAbsoluteStatdn(); }
const float &VMD3jesAbsoluteStatdn() { return vvv.VMD3jesAbsoluteStatdn(); }
const float &VMD4jesAbsoluteStatdn() { return vvv.VMD4jesAbsoluteStatdn(); }
const float &WMD0jesAbsoluteStatdn() { return vvv.WMD0jesAbsoluteStatdn(); }
const float &WMD1jesAbsoluteStatdn() { return vvv.WMD1jesAbsoluteStatdn(); }
const float &WMD2jesAbsoluteStatdn() { return vvv.WMD2jesAbsoluteStatdn(); }
const float &WMD3jesAbsoluteStatdn() { return vvv.WMD3jesAbsoluteStatdn(); }
const float &WMD4jesAbsoluteStatdn() { return vvv.WMD4jesAbsoluteStatdn(); }
const int &NQGen0jesAbsoluteStatdn() { return vvv.NQGen0jesAbsoluteStatdn(); }
const int &NQGen1jesAbsoluteStatdn() { return vvv.NQGen1jesAbsoluteStatdn(); }
const int &NQGen2jesAbsoluteStatdn() { return vvv.NQGen2jesAbsoluteStatdn(); }
const int &NQGen3jesAbsoluteStatdn() { return vvv.NQGen3jesAbsoluteStatdn(); }
const int &NQGen4jesAbsoluteStatdn() { return vvv.NQGen4jesAbsoluteStatdn(); }
const int &NBGen0jesAbsoluteStatdn() { return vvv.NBGen0jesAbsoluteStatdn(); }
const int &NBGen1jesAbsoluteStatdn() { return vvv.NBGen1jesAbsoluteStatdn(); }
const int &NBGen2jesAbsoluteStatdn() { return vvv.NBGen2jesAbsoluteStatdn(); }
const int &NBGen3jesAbsoluteStatdn() { return vvv.NBGen3jesAbsoluteStatdn(); }
const int &NBGen4jesAbsoluteStatdn() { return vvv.NBGen4jesAbsoluteStatdn(); }
const int &NLGen0jesAbsoluteStatdn() { return vvv.NLGen0jesAbsoluteStatdn(); }
const int &NLGen1jesAbsoluteStatdn() { return vvv.NLGen1jesAbsoluteStatdn(); }
const int &NLGen2jesAbsoluteStatdn() { return vvv.NLGen2jesAbsoluteStatdn(); }
const int &NLGen3jesAbsoluteStatdn() { return vvv.NLGen3jesAbsoluteStatdn(); }
const int &NLGen4jesAbsoluteStatdn() { return vvv.NLGen4jesAbsoluteStatdn(); }
const int &NVQGen0jesAbsoluteStatdn() { return vvv.NVQGen0jesAbsoluteStatdn(); }
const int &NVQGen1jesAbsoluteStatdn() { return vvv.NVQGen1jesAbsoluteStatdn(); }
const int &NVQGen2jesAbsoluteStatdn() { return vvv.NVQGen2jesAbsoluteStatdn(); }
const int &NVQGen3jesAbsoluteStatdn() { return vvv.NVQGen3jesAbsoluteStatdn(); }
const int &NVQGen4jesAbsoluteStatdn() { return vvv.NVQGen4jesAbsoluteStatdn(); }
const int &NiFJjesAbsoluteStatdn() { return vvv.NiFJjesAbsoluteStatdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesAbsoluteStatdn() { return vvv.iFJ0jesAbsoluteStatdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesAbsoluteStatdn() { return vvv.iFJ1jesAbsoluteStatdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesAbsoluteStatdn() { return vvv.iFJ2jesAbsoluteStatdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesAbsoluteStatdn() { return vvv.iFJ3jesAbsoluteStatdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesAbsoluteStatdn() { return vvv.iFJ4jesAbsoluteStatdn(); }
const float &iVMD0jesAbsoluteStatdn() { return vvv.iVMD0jesAbsoluteStatdn(); }
const float &iVMD1jesAbsoluteStatdn() { return vvv.iVMD1jesAbsoluteStatdn(); }
const float &iVMD2jesAbsoluteStatdn() { return vvv.iVMD2jesAbsoluteStatdn(); }
const float &iVMD3jesAbsoluteStatdn() { return vvv.iVMD3jesAbsoluteStatdn(); }
const float &iVMD4jesAbsoluteStatdn() { return vvv.iVMD4jesAbsoluteStatdn(); }
const float &iWMD0jesAbsoluteStatdn() { return vvv.iWMD0jesAbsoluteStatdn(); }
const float &iWMD1jesAbsoluteStatdn() { return vvv.iWMD1jesAbsoluteStatdn(); }
const float &iWMD2jesAbsoluteStatdn() { return vvv.iWMD2jesAbsoluteStatdn(); }
const float &iWMD3jesAbsoluteStatdn() { return vvv.iWMD3jesAbsoluteStatdn(); }
const float &iWMD4jesAbsoluteStatdn() { return vvv.iWMD4jesAbsoluteStatdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesAbsoluteStatdn() { return vvv.METjesAbsoluteStatdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesAbsoluteStatdn() { return vvv.NujesAbsoluteStatdn(); }
const int &NJjesAbsoluteStatdn() { return vvv.NJjesAbsoluteStatdn(); }
const int &NbLoosejesAbsoluteStatdn() { return vvv.NbLoosejesAbsoluteStatdn(); }
const int &NbMediumjesAbsoluteStatdn() { return vvv.NbMediumjesAbsoluteStatdn(); }
const int &NbTightjesAbsoluteStatdn() { return vvv.NbTightjesAbsoluteStatdn(); }
const int &NoORNbLoosejesAbsoluteStatdn() { return vvv.NoORNbLoosejesAbsoluteStatdn(); }
const int &NoORNbMediumjesAbsoluteStatdn() { return vvv.NoORNbMediumjesAbsoluteStatdn(); }
const int &NoORNbTightjesAbsoluteStatdn() { return vvv.NoORNbTightjesAbsoluteStatdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesAbsoluteStatdn() { return vvv.J0jesAbsoluteStatdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesAbsoluteStatdn() { return vvv.J1jesAbsoluteStatdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesAbsoluteStatdn() { return vvv.J2jesAbsoluteStatdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesAbsoluteStatdn() { return vvv.J3jesAbsoluteStatdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesAbsoluteStatdn() { return vvv.J4jesAbsoluteStatdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesAbsoluteStatdn() { return vvv.J5jesAbsoluteStatdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesAbsoluteStatdn() { return vvv.J6jesAbsoluteStatdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesAbsoluteStatdn() { return vvv.J7jesAbsoluteStatdn(); }
const vector<int> &NQJGenjesAbsoluteStatdn() { return vvv.NQJGenjesAbsoluteStatdn(); }
const vector<int> &NBJGenjesAbsoluteStatdn() { return vvv.NBJGenjesAbsoluteStatdn(); }
const vector<int> &NLJGenjesAbsoluteStatdn() { return vvv.NLJGenjesAbsoluteStatdn(); }
const float &MVVXjesAbsoluteStatdn() { return vvv.MVVXjesAbsoluteStatdn(); }
const float &PtVVXjesAbsoluteStatdn() { return vvv.PtVVXjesAbsoluteStatdn(); }
const float &HTjesAbsoluteStatdn() { return vvv.HTjesAbsoluteStatdn(); }
const float &HTJjesAbsoluteStatdn() { return vvv.HTJjesAbsoluteStatdn(); }
const float &HTFJjesAbsoluteStatdn() { return vvv.HTFJjesAbsoluteStatdn(); }
const float &SumPtFJjesAbsoluteStatdn() { return vvv.SumPtFJjesAbsoluteStatdn(); }
const float &SumPtJjesAbsoluteStatdn() { return vvv.SumPtJjesAbsoluteStatdn(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesAbsoluteScaleup() { return vvv.JsjesAbsoluteScaleup(); }
const int &NFJjesAbsoluteScaleup() { return vvv.NFJjesAbsoluteScaleup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesAbsoluteScaleup() { return vvv.FJ0jesAbsoluteScaleup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesAbsoluteScaleup() { return vvv.FJ1jesAbsoluteScaleup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesAbsoluteScaleup() { return vvv.FJ2jesAbsoluteScaleup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesAbsoluteScaleup() { return vvv.FJ3jesAbsoluteScaleup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesAbsoluteScaleup() { return vvv.FJ4jesAbsoluteScaleup(); }
const float &VMD0jesAbsoluteScaleup() { return vvv.VMD0jesAbsoluteScaleup(); }
const float &VMD1jesAbsoluteScaleup() { return vvv.VMD1jesAbsoluteScaleup(); }
const float &VMD2jesAbsoluteScaleup() { return vvv.VMD2jesAbsoluteScaleup(); }
const float &VMD3jesAbsoluteScaleup() { return vvv.VMD3jesAbsoluteScaleup(); }
const float &VMD4jesAbsoluteScaleup() { return vvv.VMD4jesAbsoluteScaleup(); }
const float &WMD0jesAbsoluteScaleup() { return vvv.WMD0jesAbsoluteScaleup(); }
const float &WMD1jesAbsoluteScaleup() { return vvv.WMD1jesAbsoluteScaleup(); }
const float &WMD2jesAbsoluteScaleup() { return vvv.WMD2jesAbsoluteScaleup(); }
const float &WMD3jesAbsoluteScaleup() { return vvv.WMD3jesAbsoluteScaleup(); }
const float &WMD4jesAbsoluteScaleup() { return vvv.WMD4jesAbsoluteScaleup(); }
const int &NQGen0jesAbsoluteScaleup() { return vvv.NQGen0jesAbsoluteScaleup(); }
const int &NQGen1jesAbsoluteScaleup() { return vvv.NQGen1jesAbsoluteScaleup(); }
const int &NQGen2jesAbsoluteScaleup() { return vvv.NQGen2jesAbsoluteScaleup(); }
const int &NQGen3jesAbsoluteScaleup() { return vvv.NQGen3jesAbsoluteScaleup(); }
const int &NQGen4jesAbsoluteScaleup() { return vvv.NQGen4jesAbsoluteScaleup(); }
const int &NBGen0jesAbsoluteScaleup() { return vvv.NBGen0jesAbsoluteScaleup(); }
const int &NBGen1jesAbsoluteScaleup() { return vvv.NBGen1jesAbsoluteScaleup(); }
const int &NBGen2jesAbsoluteScaleup() { return vvv.NBGen2jesAbsoluteScaleup(); }
const int &NBGen3jesAbsoluteScaleup() { return vvv.NBGen3jesAbsoluteScaleup(); }
const int &NBGen4jesAbsoluteScaleup() { return vvv.NBGen4jesAbsoluteScaleup(); }
const int &NLGen0jesAbsoluteScaleup() { return vvv.NLGen0jesAbsoluteScaleup(); }
const int &NLGen1jesAbsoluteScaleup() { return vvv.NLGen1jesAbsoluteScaleup(); }
const int &NLGen2jesAbsoluteScaleup() { return vvv.NLGen2jesAbsoluteScaleup(); }
const int &NLGen3jesAbsoluteScaleup() { return vvv.NLGen3jesAbsoluteScaleup(); }
const int &NLGen4jesAbsoluteScaleup() { return vvv.NLGen4jesAbsoluteScaleup(); }
const int &NVQGen0jesAbsoluteScaleup() { return vvv.NVQGen0jesAbsoluteScaleup(); }
const int &NVQGen1jesAbsoluteScaleup() { return vvv.NVQGen1jesAbsoluteScaleup(); }
const int &NVQGen2jesAbsoluteScaleup() { return vvv.NVQGen2jesAbsoluteScaleup(); }
const int &NVQGen3jesAbsoluteScaleup() { return vvv.NVQGen3jesAbsoluteScaleup(); }
const int &NVQGen4jesAbsoluteScaleup() { return vvv.NVQGen4jesAbsoluteScaleup(); }
const int &NiFJjesAbsoluteScaleup() { return vvv.NiFJjesAbsoluteScaleup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesAbsoluteScaleup() { return vvv.iFJ0jesAbsoluteScaleup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesAbsoluteScaleup() { return vvv.iFJ1jesAbsoluteScaleup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesAbsoluteScaleup() { return vvv.iFJ2jesAbsoluteScaleup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesAbsoluteScaleup() { return vvv.iFJ3jesAbsoluteScaleup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesAbsoluteScaleup() { return vvv.iFJ4jesAbsoluteScaleup(); }
const float &iVMD0jesAbsoluteScaleup() { return vvv.iVMD0jesAbsoluteScaleup(); }
const float &iVMD1jesAbsoluteScaleup() { return vvv.iVMD1jesAbsoluteScaleup(); }
const float &iVMD2jesAbsoluteScaleup() { return vvv.iVMD2jesAbsoluteScaleup(); }
const float &iVMD3jesAbsoluteScaleup() { return vvv.iVMD3jesAbsoluteScaleup(); }
const float &iVMD4jesAbsoluteScaleup() { return vvv.iVMD4jesAbsoluteScaleup(); }
const float &iWMD0jesAbsoluteScaleup() { return vvv.iWMD0jesAbsoluteScaleup(); }
const float &iWMD1jesAbsoluteScaleup() { return vvv.iWMD1jesAbsoluteScaleup(); }
const float &iWMD2jesAbsoluteScaleup() { return vvv.iWMD2jesAbsoluteScaleup(); }
const float &iWMD3jesAbsoluteScaleup() { return vvv.iWMD3jesAbsoluteScaleup(); }
const float &iWMD4jesAbsoluteScaleup() { return vvv.iWMD4jesAbsoluteScaleup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesAbsoluteScaleup() { return vvv.METjesAbsoluteScaleup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesAbsoluteScaleup() { return vvv.NujesAbsoluteScaleup(); }
const int &NJjesAbsoluteScaleup() { return vvv.NJjesAbsoluteScaleup(); }
const int &NbLoosejesAbsoluteScaleup() { return vvv.NbLoosejesAbsoluteScaleup(); }
const int &NbMediumjesAbsoluteScaleup() { return vvv.NbMediumjesAbsoluteScaleup(); }
const int &NbTightjesAbsoluteScaleup() { return vvv.NbTightjesAbsoluteScaleup(); }
const int &NoORNbLoosejesAbsoluteScaleup() { return vvv.NoORNbLoosejesAbsoluteScaleup(); }
const int &NoORNbMediumjesAbsoluteScaleup() { return vvv.NoORNbMediumjesAbsoluteScaleup(); }
const int &NoORNbTightjesAbsoluteScaleup() { return vvv.NoORNbTightjesAbsoluteScaleup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesAbsoluteScaleup() { return vvv.J0jesAbsoluteScaleup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesAbsoluteScaleup() { return vvv.J1jesAbsoluteScaleup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesAbsoluteScaleup() { return vvv.J2jesAbsoluteScaleup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesAbsoluteScaleup() { return vvv.J3jesAbsoluteScaleup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesAbsoluteScaleup() { return vvv.J4jesAbsoluteScaleup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesAbsoluteScaleup() { return vvv.J5jesAbsoluteScaleup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesAbsoluteScaleup() { return vvv.J6jesAbsoluteScaleup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesAbsoluteScaleup() { return vvv.J7jesAbsoluteScaleup(); }
const vector<int> &NQJGenjesAbsoluteScaleup() { return vvv.NQJGenjesAbsoluteScaleup(); }
const vector<int> &NBJGenjesAbsoluteScaleup() { return vvv.NBJGenjesAbsoluteScaleup(); }
const vector<int> &NLJGenjesAbsoluteScaleup() { return vvv.NLJGenjesAbsoluteScaleup(); }
const float &MVVXjesAbsoluteScaleup() { return vvv.MVVXjesAbsoluteScaleup(); }
const float &PtVVXjesAbsoluteScaleup() { return vvv.PtVVXjesAbsoluteScaleup(); }
const float &HTjesAbsoluteScaleup() { return vvv.HTjesAbsoluteScaleup(); }
const float &HTJjesAbsoluteScaleup() { return vvv.HTJjesAbsoluteScaleup(); }
const float &HTFJjesAbsoluteScaleup() { return vvv.HTFJjesAbsoluteScaleup(); }
const float &SumPtFJjesAbsoluteScaleup() { return vvv.SumPtFJjesAbsoluteScaleup(); }
const float &SumPtJjesAbsoluteScaleup() { return vvv.SumPtJjesAbsoluteScaleup(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesAbsoluteScaledn() { return vvv.JsjesAbsoluteScaledn(); }
const int &NFJjesAbsoluteScaledn() { return vvv.NFJjesAbsoluteScaledn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesAbsoluteScaledn() { return vvv.FJ0jesAbsoluteScaledn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesAbsoluteScaledn() { return vvv.FJ1jesAbsoluteScaledn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesAbsoluteScaledn() { return vvv.FJ2jesAbsoluteScaledn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesAbsoluteScaledn() { return vvv.FJ3jesAbsoluteScaledn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesAbsoluteScaledn() { return vvv.FJ4jesAbsoluteScaledn(); }
const float &VMD0jesAbsoluteScaledn() { return vvv.VMD0jesAbsoluteScaledn(); }
const float &VMD1jesAbsoluteScaledn() { return vvv.VMD1jesAbsoluteScaledn(); }
const float &VMD2jesAbsoluteScaledn() { return vvv.VMD2jesAbsoluteScaledn(); }
const float &VMD3jesAbsoluteScaledn() { return vvv.VMD3jesAbsoluteScaledn(); }
const float &VMD4jesAbsoluteScaledn() { return vvv.VMD4jesAbsoluteScaledn(); }
const float &WMD0jesAbsoluteScaledn() { return vvv.WMD0jesAbsoluteScaledn(); }
const float &WMD1jesAbsoluteScaledn() { return vvv.WMD1jesAbsoluteScaledn(); }
const float &WMD2jesAbsoluteScaledn() { return vvv.WMD2jesAbsoluteScaledn(); }
const float &WMD3jesAbsoluteScaledn() { return vvv.WMD3jesAbsoluteScaledn(); }
const float &WMD4jesAbsoluteScaledn() { return vvv.WMD4jesAbsoluteScaledn(); }
const int &NQGen0jesAbsoluteScaledn() { return vvv.NQGen0jesAbsoluteScaledn(); }
const int &NQGen1jesAbsoluteScaledn() { return vvv.NQGen1jesAbsoluteScaledn(); }
const int &NQGen2jesAbsoluteScaledn() { return vvv.NQGen2jesAbsoluteScaledn(); }
const int &NQGen3jesAbsoluteScaledn() { return vvv.NQGen3jesAbsoluteScaledn(); }
const int &NQGen4jesAbsoluteScaledn() { return vvv.NQGen4jesAbsoluteScaledn(); }
const int &NBGen0jesAbsoluteScaledn() { return vvv.NBGen0jesAbsoluteScaledn(); }
const int &NBGen1jesAbsoluteScaledn() { return vvv.NBGen1jesAbsoluteScaledn(); }
const int &NBGen2jesAbsoluteScaledn() { return vvv.NBGen2jesAbsoluteScaledn(); }
const int &NBGen3jesAbsoluteScaledn() { return vvv.NBGen3jesAbsoluteScaledn(); }
const int &NBGen4jesAbsoluteScaledn() { return vvv.NBGen4jesAbsoluteScaledn(); }
const int &NLGen0jesAbsoluteScaledn() { return vvv.NLGen0jesAbsoluteScaledn(); }
const int &NLGen1jesAbsoluteScaledn() { return vvv.NLGen1jesAbsoluteScaledn(); }
const int &NLGen2jesAbsoluteScaledn() { return vvv.NLGen2jesAbsoluteScaledn(); }
const int &NLGen3jesAbsoluteScaledn() { return vvv.NLGen3jesAbsoluteScaledn(); }
const int &NLGen4jesAbsoluteScaledn() { return vvv.NLGen4jesAbsoluteScaledn(); }
const int &NVQGen0jesAbsoluteScaledn() { return vvv.NVQGen0jesAbsoluteScaledn(); }
const int &NVQGen1jesAbsoluteScaledn() { return vvv.NVQGen1jesAbsoluteScaledn(); }
const int &NVQGen2jesAbsoluteScaledn() { return vvv.NVQGen2jesAbsoluteScaledn(); }
const int &NVQGen3jesAbsoluteScaledn() { return vvv.NVQGen3jesAbsoluteScaledn(); }
const int &NVQGen4jesAbsoluteScaledn() { return vvv.NVQGen4jesAbsoluteScaledn(); }
const int &NiFJjesAbsoluteScaledn() { return vvv.NiFJjesAbsoluteScaledn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesAbsoluteScaledn() { return vvv.iFJ0jesAbsoluteScaledn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesAbsoluteScaledn() { return vvv.iFJ1jesAbsoluteScaledn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesAbsoluteScaledn() { return vvv.iFJ2jesAbsoluteScaledn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesAbsoluteScaledn() { return vvv.iFJ3jesAbsoluteScaledn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesAbsoluteScaledn() { return vvv.iFJ4jesAbsoluteScaledn(); }
const float &iVMD0jesAbsoluteScaledn() { return vvv.iVMD0jesAbsoluteScaledn(); }
const float &iVMD1jesAbsoluteScaledn() { return vvv.iVMD1jesAbsoluteScaledn(); }
const float &iVMD2jesAbsoluteScaledn() { return vvv.iVMD2jesAbsoluteScaledn(); }
const float &iVMD3jesAbsoluteScaledn() { return vvv.iVMD3jesAbsoluteScaledn(); }
const float &iVMD4jesAbsoluteScaledn() { return vvv.iVMD4jesAbsoluteScaledn(); }
const float &iWMD0jesAbsoluteScaledn() { return vvv.iWMD0jesAbsoluteScaledn(); }
const float &iWMD1jesAbsoluteScaledn() { return vvv.iWMD1jesAbsoluteScaledn(); }
const float &iWMD2jesAbsoluteScaledn() { return vvv.iWMD2jesAbsoluteScaledn(); }
const float &iWMD3jesAbsoluteScaledn() { return vvv.iWMD3jesAbsoluteScaledn(); }
const float &iWMD4jesAbsoluteScaledn() { return vvv.iWMD4jesAbsoluteScaledn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesAbsoluteScaledn() { return vvv.METjesAbsoluteScaledn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesAbsoluteScaledn() { return vvv.NujesAbsoluteScaledn(); }
const int &NJjesAbsoluteScaledn() { return vvv.NJjesAbsoluteScaledn(); }
const int &NbLoosejesAbsoluteScaledn() { return vvv.NbLoosejesAbsoluteScaledn(); }
const int &NbMediumjesAbsoluteScaledn() { return vvv.NbMediumjesAbsoluteScaledn(); }
const int &NbTightjesAbsoluteScaledn() { return vvv.NbTightjesAbsoluteScaledn(); }
const int &NoORNbLoosejesAbsoluteScaledn() { return vvv.NoORNbLoosejesAbsoluteScaledn(); }
const int &NoORNbMediumjesAbsoluteScaledn() { return vvv.NoORNbMediumjesAbsoluteScaledn(); }
const int &NoORNbTightjesAbsoluteScaledn() { return vvv.NoORNbTightjesAbsoluteScaledn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesAbsoluteScaledn() { return vvv.J0jesAbsoluteScaledn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesAbsoluteScaledn() { return vvv.J1jesAbsoluteScaledn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesAbsoluteScaledn() { return vvv.J2jesAbsoluteScaledn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesAbsoluteScaledn() { return vvv.J3jesAbsoluteScaledn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesAbsoluteScaledn() { return vvv.J4jesAbsoluteScaledn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesAbsoluteScaledn() { return vvv.J5jesAbsoluteScaledn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesAbsoluteScaledn() { return vvv.J6jesAbsoluteScaledn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesAbsoluteScaledn() { return vvv.J7jesAbsoluteScaledn(); }
const vector<int> &NQJGenjesAbsoluteScaledn() { return vvv.NQJGenjesAbsoluteScaledn(); }
const vector<int> &NBJGenjesAbsoluteScaledn() { return vvv.NBJGenjesAbsoluteScaledn(); }
const vector<int> &NLJGenjesAbsoluteScaledn() { return vvv.NLJGenjesAbsoluteScaledn(); }
const float &MVVXjesAbsoluteScaledn() { return vvv.MVVXjesAbsoluteScaledn(); }
const float &PtVVXjesAbsoluteScaledn() { return vvv.PtVVXjesAbsoluteScaledn(); }
const float &HTjesAbsoluteScaledn() { return vvv.HTjesAbsoluteScaledn(); }
const float &HTJjesAbsoluteScaledn() { return vvv.HTJjesAbsoluteScaledn(); }
const float &HTFJjesAbsoluteScaledn() { return vvv.HTFJjesAbsoluteScaledn(); }
const float &SumPtFJjesAbsoluteScaledn() { return vvv.SumPtFJjesAbsoluteScaledn(); }
const float &SumPtJjesAbsoluteScaledn() { return vvv.SumPtJjesAbsoluteScaledn(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesAbsoluteMPFBiasup() { return vvv.JsjesAbsoluteMPFBiasup(); }
const int &NFJjesAbsoluteMPFBiasup() { return vvv.NFJjesAbsoluteMPFBiasup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesAbsoluteMPFBiasup() { return vvv.FJ0jesAbsoluteMPFBiasup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesAbsoluteMPFBiasup() { return vvv.FJ1jesAbsoluteMPFBiasup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesAbsoluteMPFBiasup() { return vvv.FJ2jesAbsoluteMPFBiasup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesAbsoluteMPFBiasup() { return vvv.FJ3jesAbsoluteMPFBiasup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesAbsoluteMPFBiasup() { return vvv.FJ4jesAbsoluteMPFBiasup(); }
const float &VMD0jesAbsoluteMPFBiasup() { return vvv.VMD0jesAbsoluteMPFBiasup(); }
const float &VMD1jesAbsoluteMPFBiasup() { return vvv.VMD1jesAbsoluteMPFBiasup(); }
const float &VMD2jesAbsoluteMPFBiasup() { return vvv.VMD2jesAbsoluteMPFBiasup(); }
const float &VMD3jesAbsoluteMPFBiasup() { return vvv.VMD3jesAbsoluteMPFBiasup(); }
const float &VMD4jesAbsoluteMPFBiasup() { return vvv.VMD4jesAbsoluteMPFBiasup(); }
const float &WMD0jesAbsoluteMPFBiasup() { return vvv.WMD0jesAbsoluteMPFBiasup(); }
const float &WMD1jesAbsoluteMPFBiasup() { return vvv.WMD1jesAbsoluteMPFBiasup(); }
const float &WMD2jesAbsoluteMPFBiasup() { return vvv.WMD2jesAbsoluteMPFBiasup(); }
const float &WMD3jesAbsoluteMPFBiasup() { return vvv.WMD3jesAbsoluteMPFBiasup(); }
const float &WMD4jesAbsoluteMPFBiasup() { return vvv.WMD4jesAbsoluteMPFBiasup(); }
const int &NQGen0jesAbsoluteMPFBiasup() { return vvv.NQGen0jesAbsoluteMPFBiasup(); }
const int &NQGen1jesAbsoluteMPFBiasup() { return vvv.NQGen1jesAbsoluteMPFBiasup(); }
const int &NQGen2jesAbsoluteMPFBiasup() { return vvv.NQGen2jesAbsoluteMPFBiasup(); }
const int &NQGen3jesAbsoluteMPFBiasup() { return vvv.NQGen3jesAbsoluteMPFBiasup(); }
const int &NQGen4jesAbsoluteMPFBiasup() { return vvv.NQGen4jesAbsoluteMPFBiasup(); }
const int &NBGen0jesAbsoluteMPFBiasup() { return vvv.NBGen0jesAbsoluteMPFBiasup(); }
const int &NBGen1jesAbsoluteMPFBiasup() { return vvv.NBGen1jesAbsoluteMPFBiasup(); }
const int &NBGen2jesAbsoluteMPFBiasup() { return vvv.NBGen2jesAbsoluteMPFBiasup(); }
const int &NBGen3jesAbsoluteMPFBiasup() { return vvv.NBGen3jesAbsoluteMPFBiasup(); }
const int &NBGen4jesAbsoluteMPFBiasup() { return vvv.NBGen4jesAbsoluteMPFBiasup(); }
const int &NLGen0jesAbsoluteMPFBiasup() { return vvv.NLGen0jesAbsoluteMPFBiasup(); }
const int &NLGen1jesAbsoluteMPFBiasup() { return vvv.NLGen1jesAbsoluteMPFBiasup(); }
const int &NLGen2jesAbsoluteMPFBiasup() { return vvv.NLGen2jesAbsoluteMPFBiasup(); }
const int &NLGen3jesAbsoluteMPFBiasup() { return vvv.NLGen3jesAbsoluteMPFBiasup(); }
const int &NLGen4jesAbsoluteMPFBiasup() { return vvv.NLGen4jesAbsoluteMPFBiasup(); }
const int &NVQGen0jesAbsoluteMPFBiasup() { return vvv.NVQGen0jesAbsoluteMPFBiasup(); }
const int &NVQGen1jesAbsoluteMPFBiasup() { return vvv.NVQGen1jesAbsoluteMPFBiasup(); }
const int &NVQGen2jesAbsoluteMPFBiasup() { return vvv.NVQGen2jesAbsoluteMPFBiasup(); }
const int &NVQGen3jesAbsoluteMPFBiasup() { return vvv.NVQGen3jesAbsoluteMPFBiasup(); }
const int &NVQGen4jesAbsoluteMPFBiasup() { return vvv.NVQGen4jesAbsoluteMPFBiasup(); }
const int &NiFJjesAbsoluteMPFBiasup() { return vvv.NiFJjesAbsoluteMPFBiasup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesAbsoluteMPFBiasup() { return vvv.iFJ0jesAbsoluteMPFBiasup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesAbsoluteMPFBiasup() { return vvv.iFJ1jesAbsoluteMPFBiasup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesAbsoluteMPFBiasup() { return vvv.iFJ2jesAbsoluteMPFBiasup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesAbsoluteMPFBiasup() { return vvv.iFJ3jesAbsoluteMPFBiasup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesAbsoluteMPFBiasup() { return vvv.iFJ4jesAbsoluteMPFBiasup(); }
const float &iVMD0jesAbsoluteMPFBiasup() { return vvv.iVMD0jesAbsoluteMPFBiasup(); }
const float &iVMD1jesAbsoluteMPFBiasup() { return vvv.iVMD1jesAbsoluteMPFBiasup(); }
const float &iVMD2jesAbsoluteMPFBiasup() { return vvv.iVMD2jesAbsoluteMPFBiasup(); }
const float &iVMD3jesAbsoluteMPFBiasup() { return vvv.iVMD3jesAbsoluteMPFBiasup(); }
const float &iVMD4jesAbsoluteMPFBiasup() { return vvv.iVMD4jesAbsoluteMPFBiasup(); }
const float &iWMD0jesAbsoluteMPFBiasup() { return vvv.iWMD0jesAbsoluteMPFBiasup(); }
const float &iWMD1jesAbsoluteMPFBiasup() { return vvv.iWMD1jesAbsoluteMPFBiasup(); }
const float &iWMD2jesAbsoluteMPFBiasup() { return vvv.iWMD2jesAbsoluteMPFBiasup(); }
const float &iWMD3jesAbsoluteMPFBiasup() { return vvv.iWMD3jesAbsoluteMPFBiasup(); }
const float &iWMD4jesAbsoluteMPFBiasup() { return vvv.iWMD4jesAbsoluteMPFBiasup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesAbsoluteMPFBiasup() { return vvv.METjesAbsoluteMPFBiasup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesAbsoluteMPFBiasup() { return vvv.NujesAbsoluteMPFBiasup(); }
const int &NJjesAbsoluteMPFBiasup() { return vvv.NJjesAbsoluteMPFBiasup(); }
const int &NbLoosejesAbsoluteMPFBiasup() { return vvv.NbLoosejesAbsoluteMPFBiasup(); }
const int &NbMediumjesAbsoluteMPFBiasup() { return vvv.NbMediumjesAbsoluteMPFBiasup(); }
const int &NbTightjesAbsoluteMPFBiasup() { return vvv.NbTightjesAbsoluteMPFBiasup(); }
const int &NoORNbLoosejesAbsoluteMPFBiasup() { return vvv.NoORNbLoosejesAbsoluteMPFBiasup(); }
const int &NoORNbMediumjesAbsoluteMPFBiasup() { return vvv.NoORNbMediumjesAbsoluteMPFBiasup(); }
const int &NoORNbTightjesAbsoluteMPFBiasup() { return vvv.NoORNbTightjesAbsoluteMPFBiasup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesAbsoluteMPFBiasup() { return vvv.J0jesAbsoluteMPFBiasup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesAbsoluteMPFBiasup() { return vvv.J1jesAbsoluteMPFBiasup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesAbsoluteMPFBiasup() { return vvv.J2jesAbsoluteMPFBiasup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesAbsoluteMPFBiasup() { return vvv.J3jesAbsoluteMPFBiasup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesAbsoluteMPFBiasup() { return vvv.J4jesAbsoluteMPFBiasup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesAbsoluteMPFBiasup() { return vvv.J5jesAbsoluteMPFBiasup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesAbsoluteMPFBiasup() { return vvv.J6jesAbsoluteMPFBiasup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesAbsoluteMPFBiasup() { return vvv.J7jesAbsoluteMPFBiasup(); }
const vector<int> &NQJGenjesAbsoluteMPFBiasup() { return vvv.NQJGenjesAbsoluteMPFBiasup(); }
const vector<int> &NBJGenjesAbsoluteMPFBiasup() { return vvv.NBJGenjesAbsoluteMPFBiasup(); }
const vector<int> &NLJGenjesAbsoluteMPFBiasup() { return vvv.NLJGenjesAbsoluteMPFBiasup(); }
const float &MVVXjesAbsoluteMPFBiasup() { return vvv.MVVXjesAbsoluteMPFBiasup(); }
const float &PtVVXjesAbsoluteMPFBiasup() { return vvv.PtVVXjesAbsoluteMPFBiasup(); }
const float &HTjesAbsoluteMPFBiasup() { return vvv.HTjesAbsoluteMPFBiasup(); }
const float &HTJjesAbsoluteMPFBiasup() { return vvv.HTJjesAbsoluteMPFBiasup(); }
const float &HTFJjesAbsoluteMPFBiasup() { return vvv.HTFJjesAbsoluteMPFBiasup(); }
const float &SumPtFJjesAbsoluteMPFBiasup() { return vvv.SumPtFJjesAbsoluteMPFBiasup(); }
const float &SumPtJjesAbsoluteMPFBiasup() { return vvv.SumPtJjesAbsoluteMPFBiasup(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesAbsoluteMPFBiasdn() { return vvv.JsjesAbsoluteMPFBiasdn(); }
const int &NFJjesAbsoluteMPFBiasdn() { return vvv.NFJjesAbsoluteMPFBiasdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesAbsoluteMPFBiasdn() { return vvv.FJ0jesAbsoluteMPFBiasdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesAbsoluteMPFBiasdn() { return vvv.FJ1jesAbsoluteMPFBiasdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesAbsoluteMPFBiasdn() { return vvv.FJ2jesAbsoluteMPFBiasdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesAbsoluteMPFBiasdn() { return vvv.FJ3jesAbsoluteMPFBiasdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesAbsoluteMPFBiasdn() { return vvv.FJ4jesAbsoluteMPFBiasdn(); }
const float &VMD0jesAbsoluteMPFBiasdn() { return vvv.VMD0jesAbsoluteMPFBiasdn(); }
const float &VMD1jesAbsoluteMPFBiasdn() { return vvv.VMD1jesAbsoluteMPFBiasdn(); }
const float &VMD2jesAbsoluteMPFBiasdn() { return vvv.VMD2jesAbsoluteMPFBiasdn(); }
const float &VMD3jesAbsoluteMPFBiasdn() { return vvv.VMD3jesAbsoluteMPFBiasdn(); }
const float &VMD4jesAbsoluteMPFBiasdn() { return vvv.VMD4jesAbsoluteMPFBiasdn(); }
const float &WMD0jesAbsoluteMPFBiasdn() { return vvv.WMD0jesAbsoluteMPFBiasdn(); }
const float &WMD1jesAbsoluteMPFBiasdn() { return vvv.WMD1jesAbsoluteMPFBiasdn(); }
const float &WMD2jesAbsoluteMPFBiasdn() { return vvv.WMD2jesAbsoluteMPFBiasdn(); }
const float &WMD3jesAbsoluteMPFBiasdn() { return vvv.WMD3jesAbsoluteMPFBiasdn(); }
const float &WMD4jesAbsoluteMPFBiasdn() { return vvv.WMD4jesAbsoluteMPFBiasdn(); }
const int &NQGen0jesAbsoluteMPFBiasdn() { return vvv.NQGen0jesAbsoluteMPFBiasdn(); }
const int &NQGen1jesAbsoluteMPFBiasdn() { return vvv.NQGen1jesAbsoluteMPFBiasdn(); }
const int &NQGen2jesAbsoluteMPFBiasdn() { return vvv.NQGen2jesAbsoluteMPFBiasdn(); }
const int &NQGen3jesAbsoluteMPFBiasdn() { return vvv.NQGen3jesAbsoluteMPFBiasdn(); }
const int &NQGen4jesAbsoluteMPFBiasdn() { return vvv.NQGen4jesAbsoluteMPFBiasdn(); }
const int &NBGen0jesAbsoluteMPFBiasdn() { return vvv.NBGen0jesAbsoluteMPFBiasdn(); }
const int &NBGen1jesAbsoluteMPFBiasdn() { return vvv.NBGen1jesAbsoluteMPFBiasdn(); }
const int &NBGen2jesAbsoluteMPFBiasdn() { return vvv.NBGen2jesAbsoluteMPFBiasdn(); }
const int &NBGen3jesAbsoluteMPFBiasdn() { return vvv.NBGen3jesAbsoluteMPFBiasdn(); }
const int &NBGen4jesAbsoluteMPFBiasdn() { return vvv.NBGen4jesAbsoluteMPFBiasdn(); }
const int &NLGen0jesAbsoluteMPFBiasdn() { return vvv.NLGen0jesAbsoluteMPFBiasdn(); }
const int &NLGen1jesAbsoluteMPFBiasdn() { return vvv.NLGen1jesAbsoluteMPFBiasdn(); }
const int &NLGen2jesAbsoluteMPFBiasdn() { return vvv.NLGen2jesAbsoluteMPFBiasdn(); }
const int &NLGen3jesAbsoluteMPFBiasdn() { return vvv.NLGen3jesAbsoluteMPFBiasdn(); }
const int &NLGen4jesAbsoluteMPFBiasdn() { return vvv.NLGen4jesAbsoluteMPFBiasdn(); }
const int &NVQGen0jesAbsoluteMPFBiasdn() { return vvv.NVQGen0jesAbsoluteMPFBiasdn(); }
const int &NVQGen1jesAbsoluteMPFBiasdn() { return vvv.NVQGen1jesAbsoluteMPFBiasdn(); }
const int &NVQGen2jesAbsoluteMPFBiasdn() { return vvv.NVQGen2jesAbsoluteMPFBiasdn(); }
const int &NVQGen3jesAbsoluteMPFBiasdn() { return vvv.NVQGen3jesAbsoluteMPFBiasdn(); }
const int &NVQGen4jesAbsoluteMPFBiasdn() { return vvv.NVQGen4jesAbsoluteMPFBiasdn(); }
const int &NiFJjesAbsoluteMPFBiasdn() { return vvv.NiFJjesAbsoluteMPFBiasdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesAbsoluteMPFBiasdn() { return vvv.iFJ0jesAbsoluteMPFBiasdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesAbsoluteMPFBiasdn() { return vvv.iFJ1jesAbsoluteMPFBiasdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesAbsoluteMPFBiasdn() { return vvv.iFJ2jesAbsoluteMPFBiasdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesAbsoluteMPFBiasdn() { return vvv.iFJ3jesAbsoluteMPFBiasdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesAbsoluteMPFBiasdn() { return vvv.iFJ4jesAbsoluteMPFBiasdn(); }
const float &iVMD0jesAbsoluteMPFBiasdn() { return vvv.iVMD0jesAbsoluteMPFBiasdn(); }
const float &iVMD1jesAbsoluteMPFBiasdn() { return vvv.iVMD1jesAbsoluteMPFBiasdn(); }
const float &iVMD2jesAbsoluteMPFBiasdn() { return vvv.iVMD2jesAbsoluteMPFBiasdn(); }
const float &iVMD3jesAbsoluteMPFBiasdn() { return vvv.iVMD3jesAbsoluteMPFBiasdn(); }
const float &iVMD4jesAbsoluteMPFBiasdn() { return vvv.iVMD4jesAbsoluteMPFBiasdn(); }
const float &iWMD0jesAbsoluteMPFBiasdn() { return vvv.iWMD0jesAbsoluteMPFBiasdn(); }
const float &iWMD1jesAbsoluteMPFBiasdn() { return vvv.iWMD1jesAbsoluteMPFBiasdn(); }
const float &iWMD2jesAbsoluteMPFBiasdn() { return vvv.iWMD2jesAbsoluteMPFBiasdn(); }
const float &iWMD3jesAbsoluteMPFBiasdn() { return vvv.iWMD3jesAbsoluteMPFBiasdn(); }
const float &iWMD4jesAbsoluteMPFBiasdn() { return vvv.iWMD4jesAbsoluteMPFBiasdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesAbsoluteMPFBiasdn() { return vvv.METjesAbsoluteMPFBiasdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesAbsoluteMPFBiasdn() { return vvv.NujesAbsoluteMPFBiasdn(); }
const int &NJjesAbsoluteMPFBiasdn() { return vvv.NJjesAbsoluteMPFBiasdn(); }
const int &NbLoosejesAbsoluteMPFBiasdn() { return vvv.NbLoosejesAbsoluteMPFBiasdn(); }
const int &NbMediumjesAbsoluteMPFBiasdn() { return vvv.NbMediumjesAbsoluteMPFBiasdn(); }
const int &NbTightjesAbsoluteMPFBiasdn() { return vvv.NbTightjesAbsoluteMPFBiasdn(); }
const int &NoORNbLoosejesAbsoluteMPFBiasdn() { return vvv.NoORNbLoosejesAbsoluteMPFBiasdn(); }
const int &NoORNbMediumjesAbsoluteMPFBiasdn() { return vvv.NoORNbMediumjesAbsoluteMPFBiasdn(); }
const int &NoORNbTightjesAbsoluteMPFBiasdn() { return vvv.NoORNbTightjesAbsoluteMPFBiasdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesAbsoluteMPFBiasdn() { return vvv.J0jesAbsoluteMPFBiasdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesAbsoluteMPFBiasdn() { return vvv.J1jesAbsoluteMPFBiasdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesAbsoluteMPFBiasdn() { return vvv.J2jesAbsoluteMPFBiasdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesAbsoluteMPFBiasdn() { return vvv.J3jesAbsoluteMPFBiasdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesAbsoluteMPFBiasdn() { return vvv.J4jesAbsoluteMPFBiasdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesAbsoluteMPFBiasdn() { return vvv.J5jesAbsoluteMPFBiasdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesAbsoluteMPFBiasdn() { return vvv.J6jesAbsoluteMPFBiasdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesAbsoluteMPFBiasdn() { return vvv.J7jesAbsoluteMPFBiasdn(); }
const vector<int> &NQJGenjesAbsoluteMPFBiasdn() { return vvv.NQJGenjesAbsoluteMPFBiasdn(); }
const vector<int> &NBJGenjesAbsoluteMPFBiasdn() { return vvv.NBJGenjesAbsoluteMPFBiasdn(); }
const vector<int> &NLJGenjesAbsoluteMPFBiasdn() { return vvv.NLJGenjesAbsoluteMPFBiasdn(); }
const float &MVVXjesAbsoluteMPFBiasdn() { return vvv.MVVXjesAbsoluteMPFBiasdn(); }
const float &PtVVXjesAbsoluteMPFBiasdn() { return vvv.PtVVXjesAbsoluteMPFBiasdn(); }
const float &HTjesAbsoluteMPFBiasdn() { return vvv.HTjesAbsoluteMPFBiasdn(); }
const float &HTJjesAbsoluteMPFBiasdn() { return vvv.HTJjesAbsoluteMPFBiasdn(); }
const float &HTFJjesAbsoluteMPFBiasdn() { return vvv.HTFJjesAbsoluteMPFBiasdn(); }
const float &SumPtFJjesAbsoluteMPFBiasdn() { return vvv.SumPtFJjesAbsoluteMPFBiasdn(); }
const float &SumPtJjesAbsoluteMPFBiasdn() { return vvv.SumPtJjesAbsoluteMPFBiasdn(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesFragmentationup() { return vvv.JsjesFragmentationup(); }
const int &NFJjesFragmentationup() { return vvv.NFJjesFragmentationup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesFragmentationup() { return vvv.FJ0jesFragmentationup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesFragmentationup() { return vvv.FJ1jesFragmentationup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesFragmentationup() { return vvv.FJ2jesFragmentationup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesFragmentationup() { return vvv.FJ3jesFragmentationup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesFragmentationup() { return vvv.FJ4jesFragmentationup(); }
const float &VMD0jesFragmentationup() { return vvv.VMD0jesFragmentationup(); }
const float &VMD1jesFragmentationup() { return vvv.VMD1jesFragmentationup(); }
const float &VMD2jesFragmentationup() { return vvv.VMD2jesFragmentationup(); }
const float &VMD3jesFragmentationup() { return vvv.VMD3jesFragmentationup(); }
const float &VMD4jesFragmentationup() { return vvv.VMD4jesFragmentationup(); }
const float &WMD0jesFragmentationup() { return vvv.WMD0jesFragmentationup(); }
const float &WMD1jesFragmentationup() { return vvv.WMD1jesFragmentationup(); }
const float &WMD2jesFragmentationup() { return vvv.WMD2jesFragmentationup(); }
const float &WMD3jesFragmentationup() { return vvv.WMD3jesFragmentationup(); }
const float &WMD4jesFragmentationup() { return vvv.WMD4jesFragmentationup(); }
const int &NQGen0jesFragmentationup() { return vvv.NQGen0jesFragmentationup(); }
const int &NQGen1jesFragmentationup() { return vvv.NQGen1jesFragmentationup(); }
const int &NQGen2jesFragmentationup() { return vvv.NQGen2jesFragmentationup(); }
const int &NQGen3jesFragmentationup() { return vvv.NQGen3jesFragmentationup(); }
const int &NQGen4jesFragmentationup() { return vvv.NQGen4jesFragmentationup(); }
const int &NBGen0jesFragmentationup() { return vvv.NBGen0jesFragmentationup(); }
const int &NBGen1jesFragmentationup() { return vvv.NBGen1jesFragmentationup(); }
const int &NBGen2jesFragmentationup() { return vvv.NBGen2jesFragmentationup(); }
const int &NBGen3jesFragmentationup() { return vvv.NBGen3jesFragmentationup(); }
const int &NBGen4jesFragmentationup() { return vvv.NBGen4jesFragmentationup(); }
const int &NLGen0jesFragmentationup() { return vvv.NLGen0jesFragmentationup(); }
const int &NLGen1jesFragmentationup() { return vvv.NLGen1jesFragmentationup(); }
const int &NLGen2jesFragmentationup() { return vvv.NLGen2jesFragmentationup(); }
const int &NLGen3jesFragmentationup() { return vvv.NLGen3jesFragmentationup(); }
const int &NLGen4jesFragmentationup() { return vvv.NLGen4jesFragmentationup(); }
const int &NVQGen0jesFragmentationup() { return vvv.NVQGen0jesFragmentationup(); }
const int &NVQGen1jesFragmentationup() { return vvv.NVQGen1jesFragmentationup(); }
const int &NVQGen2jesFragmentationup() { return vvv.NVQGen2jesFragmentationup(); }
const int &NVQGen3jesFragmentationup() { return vvv.NVQGen3jesFragmentationup(); }
const int &NVQGen4jesFragmentationup() { return vvv.NVQGen4jesFragmentationup(); }
const int &NiFJjesFragmentationup() { return vvv.NiFJjesFragmentationup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesFragmentationup() { return vvv.iFJ0jesFragmentationup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesFragmentationup() { return vvv.iFJ1jesFragmentationup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesFragmentationup() { return vvv.iFJ2jesFragmentationup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesFragmentationup() { return vvv.iFJ3jesFragmentationup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesFragmentationup() { return vvv.iFJ4jesFragmentationup(); }
const float &iVMD0jesFragmentationup() { return vvv.iVMD0jesFragmentationup(); }
const float &iVMD1jesFragmentationup() { return vvv.iVMD1jesFragmentationup(); }
const float &iVMD2jesFragmentationup() { return vvv.iVMD2jesFragmentationup(); }
const float &iVMD3jesFragmentationup() { return vvv.iVMD3jesFragmentationup(); }
const float &iVMD4jesFragmentationup() { return vvv.iVMD4jesFragmentationup(); }
const float &iWMD0jesFragmentationup() { return vvv.iWMD0jesFragmentationup(); }
const float &iWMD1jesFragmentationup() { return vvv.iWMD1jesFragmentationup(); }
const float &iWMD2jesFragmentationup() { return vvv.iWMD2jesFragmentationup(); }
const float &iWMD3jesFragmentationup() { return vvv.iWMD3jesFragmentationup(); }
const float &iWMD4jesFragmentationup() { return vvv.iWMD4jesFragmentationup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesFragmentationup() { return vvv.METjesFragmentationup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesFragmentationup() { return vvv.NujesFragmentationup(); }
const int &NJjesFragmentationup() { return vvv.NJjesFragmentationup(); }
const int &NbLoosejesFragmentationup() { return vvv.NbLoosejesFragmentationup(); }
const int &NbMediumjesFragmentationup() { return vvv.NbMediumjesFragmentationup(); }
const int &NbTightjesFragmentationup() { return vvv.NbTightjesFragmentationup(); }
const int &NoORNbLoosejesFragmentationup() { return vvv.NoORNbLoosejesFragmentationup(); }
const int &NoORNbMediumjesFragmentationup() { return vvv.NoORNbMediumjesFragmentationup(); }
const int &NoORNbTightjesFragmentationup() { return vvv.NoORNbTightjesFragmentationup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesFragmentationup() { return vvv.J0jesFragmentationup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesFragmentationup() { return vvv.J1jesFragmentationup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesFragmentationup() { return vvv.J2jesFragmentationup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesFragmentationup() { return vvv.J3jesFragmentationup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesFragmentationup() { return vvv.J4jesFragmentationup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesFragmentationup() { return vvv.J5jesFragmentationup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesFragmentationup() { return vvv.J6jesFragmentationup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesFragmentationup() { return vvv.J7jesFragmentationup(); }
const vector<int> &NQJGenjesFragmentationup() { return vvv.NQJGenjesFragmentationup(); }
const vector<int> &NBJGenjesFragmentationup() { return vvv.NBJGenjesFragmentationup(); }
const vector<int> &NLJGenjesFragmentationup() { return vvv.NLJGenjesFragmentationup(); }
const float &MVVXjesFragmentationup() { return vvv.MVVXjesFragmentationup(); }
const float &PtVVXjesFragmentationup() { return vvv.PtVVXjesFragmentationup(); }
const float &HTjesFragmentationup() { return vvv.HTjesFragmentationup(); }
const float &HTJjesFragmentationup() { return vvv.HTJjesFragmentationup(); }
const float &HTFJjesFragmentationup() { return vvv.HTFJjesFragmentationup(); }
const float &SumPtFJjesFragmentationup() { return vvv.SumPtFJjesFragmentationup(); }
const float &SumPtJjesFragmentationup() { return vvv.SumPtJjesFragmentationup(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesFragmentationdn() { return vvv.JsjesFragmentationdn(); }
const int &NFJjesFragmentationdn() { return vvv.NFJjesFragmentationdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesFragmentationdn() { return vvv.FJ0jesFragmentationdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesFragmentationdn() { return vvv.FJ1jesFragmentationdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesFragmentationdn() { return vvv.FJ2jesFragmentationdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesFragmentationdn() { return vvv.FJ3jesFragmentationdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesFragmentationdn() { return vvv.FJ4jesFragmentationdn(); }
const float &VMD0jesFragmentationdn() { return vvv.VMD0jesFragmentationdn(); }
const float &VMD1jesFragmentationdn() { return vvv.VMD1jesFragmentationdn(); }
const float &VMD2jesFragmentationdn() { return vvv.VMD2jesFragmentationdn(); }
const float &VMD3jesFragmentationdn() { return vvv.VMD3jesFragmentationdn(); }
const float &VMD4jesFragmentationdn() { return vvv.VMD4jesFragmentationdn(); }
const float &WMD0jesFragmentationdn() { return vvv.WMD0jesFragmentationdn(); }
const float &WMD1jesFragmentationdn() { return vvv.WMD1jesFragmentationdn(); }
const float &WMD2jesFragmentationdn() { return vvv.WMD2jesFragmentationdn(); }
const float &WMD3jesFragmentationdn() { return vvv.WMD3jesFragmentationdn(); }
const float &WMD4jesFragmentationdn() { return vvv.WMD4jesFragmentationdn(); }
const int &NQGen0jesFragmentationdn() { return vvv.NQGen0jesFragmentationdn(); }
const int &NQGen1jesFragmentationdn() { return vvv.NQGen1jesFragmentationdn(); }
const int &NQGen2jesFragmentationdn() { return vvv.NQGen2jesFragmentationdn(); }
const int &NQGen3jesFragmentationdn() { return vvv.NQGen3jesFragmentationdn(); }
const int &NQGen4jesFragmentationdn() { return vvv.NQGen4jesFragmentationdn(); }
const int &NBGen0jesFragmentationdn() { return vvv.NBGen0jesFragmentationdn(); }
const int &NBGen1jesFragmentationdn() { return vvv.NBGen1jesFragmentationdn(); }
const int &NBGen2jesFragmentationdn() { return vvv.NBGen2jesFragmentationdn(); }
const int &NBGen3jesFragmentationdn() { return vvv.NBGen3jesFragmentationdn(); }
const int &NBGen4jesFragmentationdn() { return vvv.NBGen4jesFragmentationdn(); }
const int &NLGen0jesFragmentationdn() { return vvv.NLGen0jesFragmentationdn(); }
const int &NLGen1jesFragmentationdn() { return vvv.NLGen1jesFragmentationdn(); }
const int &NLGen2jesFragmentationdn() { return vvv.NLGen2jesFragmentationdn(); }
const int &NLGen3jesFragmentationdn() { return vvv.NLGen3jesFragmentationdn(); }
const int &NLGen4jesFragmentationdn() { return vvv.NLGen4jesFragmentationdn(); }
const int &NVQGen0jesFragmentationdn() { return vvv.NVQGen0jesFragmentationdn(); }
const int &NVQGen1jesFragmentationdn() { return vvv.NVQGen1jesFragmentationdn(); }
const int &NVQGen2jesFragmentationdn() { return vvv.NVQGen2jesFragmentationdn(); }
const int &NVQGen3jesFragmentationdn() { return vvv.NVQGen3jesFragmentationdn(); }
const int &NVQGen4jesFragmentationdn() { return vvv.NVQGen4jesFragmentationdn(); }
const int &NiFJjesFragmentationdn() { return vvv.NiFJjesFragmentationdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesFragmentationdn() { return vvv.iFJ0jesFragmentationdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesFragmentationdn() { return vvv.iFJ1jesFragmentationdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesFragmentationdn() { return vvv.iFJ2jesFragmentationdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesFragmentationdn() { return vvv.iFJ3jesFragmentationdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesFragmentationdn() { return vvv.iFJ4jesFragmentationdn(); }
const float &iVMD0jesFragmentationdn() { return vvv.iVMD0jesFragmentationdn(); }
const float &iVMD1jesFragmentationdn() { return vvv.iVMD1jesFragmentationdn(); }
const float &iVMD2jesFragmentationdn() { return vvv.iVMD2jesFragmentationdn(); }
const float &iVMD3jesFragmentationdn() { return vvv.iVMD3jesFragmentationdn(); }
const float &iVMD4jesFragmentationdn() { return vvv.iVMD4jesFragmentationdn(); }
const float &iWMD0jesFragmentationdn() { return vvv.iWMD0jesFragmentationdn(); }
const float &iWMD1jesFragmentationdn() { return vvv.iWMD1jesFragmentationdn(); }
const float &iWMD2jesFragmentationdn() { return vvv.iWMD2jesFragmentationdn(); }
const float &iWMD3jesFragmentationdn() { return vvv.iWMD3jesFragmentationdn(); }
const float &iWMD4jesFragmentationdn() { return vvv.iWMD4jesFragmentationdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesFragmentationdn() { return vvv.METjesFragmentationdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesFragmentationdn() { return vvv.NujesFragmentationdn(); }
const int &NJjesFragmentationdn() { return vvv.NJjesFragmentationdn(); }
const int &NbLoosejesFragmentationdn() { return vvv.NbLoosejesFragmentationdn(); }
const int &NbMediumjesFragmentationdn() { return vvv.NbMediumjesFragmentationdn(); }
const int &NbTightjesFragmentationdn() { return vvv.NbTightjesFragmentationdn(); }
const int &NoORNbLoosejesFragmentationdn() { return vvv.NoORNbLoosejesFragmentationdn(); }
const int &NoORNbMediumjesFragmentationdn() { return vvv.NoORNbMediumjesFragmentationdn(); }
const int &NoORNbTightjesFragmentationdn() { return vvv.NoORNbTightjesFragmentationdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesFragmentationdn() { return vvv.J0jesFragmentationdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesFragmentationdn() { return vvv.J1jesFragmentationdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesFragmentationdn() { return vvv.J2jesFragmentationdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesFragmentationdn() { return vvv.J3jesFragmentationdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesFragmentationdn() { return vvv.J4jesFragmentationdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesFragmentationdn() { return vvv.J5jesFragmentationdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesFragmentationdn() { return vvv.J6jesFragmentationdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesFragmentationdn() { return vvv.J7jesFragmentationdn(); }
const vector<int> &NQJGenjesFragmentationdn() { return vvv.NQJGenjesFragmentationdn(); }
const vector<int> &NBJGenjesFragmentationdn() { return vvv.NBJGenjesFragmentationdn(); }
const vector<int> &NLJGenjesFragmentationdn() { return vvv.NLJGenjesFragmentationdn(); }
const float &MVVXjesFragmentationdn() { return vvv.MVVXjesFragmentationdn(); }
const float &PtVVXjesFragmentationdn() { return vvv.PtVVXjesFragmentationdn(); }
const float &HTjesFragmentationdn() { return vvv.HTjesFragmentationdn(); }
const float &HTJjesFragmentationdn() { return vvv.HTJjesFragmentationdn(); }
const float &HTFJjesFragmentationdn() { return vvv.HTFJjesFragmentationdn(); }
const float &SumPtFJjesFragmentationdn() { return vvv.SumPtFJjesFragmentationdn(); }
const float &SumPtJjesFragmentationdn() { return vvv.SumPtJjesFragmentationdn(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesSinglePionECALup() { return vvv.JsjesSinglePionECALup(); }
const int &NFJjesSinglePionECALup() { return vvv.NFJjesSinglePionECALup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesSinglePionECALup() { return vvv.FJ0jesSinglePionECALup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesSinglePionECALup() { return vvv.FJ1jesSinglePionECALup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesSinglePionECALup() { return vvv.FJ2jesSinglePionECALup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesSinglePionECALup() { return vvv.FJ3jesSinglePionECALup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesSinglePionECALup() { return vvv.FJ4jesSinglePionECALup(); }
const float &VMD0jesSinglePionECALup() { return vvv.VMD0jesSinglePionECALup(); }
const float &VMD1jesSinglePionECALup() { return vvv.VMD1jesSinglePionECALup(); }
const float &VMD2jesSinglePionECALup() { return vvv.VMD2jesSinglePionECALup(); }
const float &VMD3jesSinglePionECALup() { return vvv.VMD3jesSinglePionECALup(); }
const float &VMD4jesSinglePionECALup() { return vvv.VMD4jesSinglePionECALup(); }
const float &WMD0jesSinglePionECALup() { return vvv.WMD0jesSinglePionECALup(); }
const float &WMD1jesSinglePionECALup() { return vvv.WMD1jesSinglePionECALup(); }
const float &WMD2jesSinglePionECALup() { return vvv.WMD2jesSinglePionECALup(); }
const float &WMD3jesSinglePionECALup() { return vvv.WMD3jesSinglePionECALup(); }
const float &WMD4jesSinglePionECALup() { return vvv.WMD4jesSinglePionECALup(); }
const int &NQGen0jesSinglePionECALup() { return vvv.NQGen0jesSinglePionECALup(); }
const int &NQGen1jesSinglePionECALup() { return vvv.NQGen1jesSinglePionECALup(); }
const int &NQGen2jesSinglePionECALup() { return vvv.NQGen2jesSinglePionECALup(); }
const int &NQGen3jesSinglePionECALup() { return vvv.NQGen3jesSinglePionECALup(); }
const int &NQGen4jesSinglePionECALup() { return vvv.NQGen4jesSinglePionECALup(); }
const int &NBGen0jesSinglePionECALup() { return vvv.NBGen0jesSinglePionECALup(); }
const int &NBGen1jesSinglePionECALup() { return vvv.NBGen1jesSinglePionECALup(); }
const int &NBGen2jesSinglePionECALup() { return vvv.NBGen2jesSinglePionECALup(); }
const int &NBGen3jesSinglePionECALup() { return vvv.NBGen3jesSinglePionECALup(); }
const int &NBGen4jesSinglePionECALup() { return vvv.NBGen4jesSinglePionECALup(); }
const int &NLGen0jesSinglePionECALup() { return vvv.NLGen0jesSinglePionECALup(); }
const int &NLGen1jesSinglePionECALup() { return vvv.NLGen1jesSinglePionECALup(); }
const int &NLGen2jesSinglePionECALup() { return vvv.NLGen2jesSinglePionECALup(); }
const int &NLGen3jesSinglePionECALup() { return vvv.NLGen3jesSinglePionECALup(); }
const int &NLGen4jesSinglePionECALup() { return vvv.NLGen4jesSinglePionECALup(); }
const int &NVQGen0jesSinglePionECALup() { return vvv.NVQGen0jesSinglePionECALup(); }
const int &NVQGen1jesSinglePionECALup() { return vvv.NVQGen1jesSinglePionECALup(); }
const int &NVQGen2jesSinglePionECALup() { return vvv.NVQGen2jesSinglePionECALup(); }
const int &NVQGen3jesSinglePionECALup() { return vvv.NVQGen3jesSinglePionECALup(); }
const int &NVQGen4jesSinglePionECALup() { return vvv.NVQGen4jesSinglePionECALup(); }
const int &NiFJjesSinglePionECALup() { return vvv.NiFJjesSinglePionECALup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesSinglePionECALup() { return vvv.iFJ0jesSinglePionECALup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesSinglePionECALup() { return vvv.iFJ1jesSinglePionECALup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesSinglePionECALup() { return vvv.iFJ2jesSinglePionECALup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesSinglePionECALup() { return vvv.iFJ3jesSinglePionECALup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesSinglePionECALup() { return vvv.iFJ4jesSinglePionECALup(); }
const float &iVMD0jesSinglePionECALup() { return vvv.iVMD0jesSinglePionECALup(); }
const float &iVMD1jesSinglePionECALup() { return vvv.iVMD1jesSinglePionECALup(); }
const float &iVMD2jesSinglePionECALup() { return vvv.iVMD2jesSinglePionECALup(); }
const float &iVMD3jesSinglePionECALup() { return vvv.iVMD3jesSinglePionECALup(); }
const float &iVMD4jesSinglePionECALup() { return vvv.iVMD4jesSinglePionECALup(); }
const float &iWMD0jesSinglePionECALup() { return vvv.iWMD0jesSinglePionECALup(); }
const float &iWMD1jesSinglePionECALup() { return vvv.iWMD1jesSinglePionECALup(); }
const float &iWMD2jesSinglePionECALup() { return vvv.iWMD2jesSinglePionECALup(); }
const float &iWMD3jesSinglePionECALup() { return vvv.iWMD3jesSinglePionECALup(); }
const float &iWMD4jesSinglePionECALup() { return vvv.iWMD4jesSinglePionECALup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesSinglePionECALup() { return vvv.METjesSinglePionECALup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesSinglePionECALup() { return vvv.NujesSinglePionECALup(); }
const int &NJjesSinglePionECALup() { return vvv.NJjesSinglePionECALup(); }
const int &NbLoosejesSinglePionECALup() { return vvv.NbLoosejesSinglePionECALup(); }
const int &NbMediumjesSinglePionECALup() { return vvv.NbMediumjesSinglePionECALup(); }
const int &NbTightjesSinglePionECALup() { return vvv.NbTightjesSinglePionECALup(); }
const int &NoORNbLoosejesSinglePionECALup() { return vvv.NoORNbLoosejesSinglePionECALup(); }
const int &NoORNbMediumjesSinglePionECALup() { return vvv.NoORNbMediumjesSinglePionECALup(); }
const int &NoORNbTightjesSinglePionECALup() { return vvv.NoORNbTightjesSinglePionECALup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesSinglePionECALup() { return vvv.J0jesSinglePionECALup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesSinglePionECALup() { return vvv.J1jesSinglePionECALup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesSinglePionECALup() { return vvv.J2jesSinglePionECALup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesSinglePionECALup() { return vvv.J3jesSinglePionECALup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesSinglePionECALup() { return vvv.J4jesSinglePionECALup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesSinglePionECALup() { return vvv.J5jesSinglePionECALup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesSinglePionECALup() { return vvv.J6jesSinglePionECALup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesSinglePionECALup() { return vvv.J7jesSinglePionECALup(); }
const vector<int> &NQJGenjesSinglePionECALup() { return vvv.NQJGenjesSinglePionECALup(); }
const vector<int> &NBJGenjesSinglePionECALup() { return vvv.NBJGenjesSinglePionECALup(); }
const vector<int> &NLJGenjesSinglePionECALup() { return vvv.NLJGenjesSinglePionECALup(); }
const float &MVVXjesSinglePionECALup() { return vvv.MVVXjesSinglePionECALup(); }
const float &PtVVXjesSinglePionECALup() { return vvv.PtVVXjesSinglePionECALup(); }
const float &HTjesSinglePionECALup() { return vvv.HTjesSinglePionECALup(); }
const float &HTJjesSinglePionECALup() { return vvv.HTJjesSinglePionECALup(); }
const float &HTFJjesSinglePionECALup() { return vvv.HTFJjesSinglePionECALup(); }
const float &SumPtFJjesSinglePionECALup() { return vvv.SumPtFJjesSinglePionECALup(); }
const float &SumPtJjesSinglePionECALup() { return vvv.SumPtJjesSinglePionECALup(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesSinglePionECALdn() { return vvv.JsjesSinglePionECALdn(); }
const int &NFJjesSinglePionECALdn() { return vvv.NFJjesSinglePionECALdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesSinglePionECALdn() { return vvv.FJ0jesSinglePionECALdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesSinglePionECALdn() { return vvv.FJ1jesSinglePionECALdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesSinglePionECALdn() { return vvv.FJ2jesSinglePionECALdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesSinglePionECALdn() { return vvv.FJ3jesSinglePionECALdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesSinglePionECALdn() { return vvv.FJ4jesSinglePionECALdn(); }
const float &VMD0jesSinglePionECALdn() { return vvv.VMD0jesSinglePionECALdn(); }
const float &VMD1jesSinglePionECALdn() { return vvv.VMD1jesSinglePionECALdn(); }
const float &VMD2jesSinglePionECALdn() { return vvv.VMD2jesSinglePionECALdn(); }
const float &VMD3jesSinglePionECALdn() { return vvv.VMD3jesSinglePionECALdn(); }
const float &VMD4jesSinglePionECALdn() { return vvv.VMD4jesSinglePionECALdn(); }
const float &WMD0jesSinglePionECALdn() { return vvv.WMD0jesSinglePionECALdn(); }
const float &WMD1jesSinglePionECALdn() { return vvv.WMD1jesSinglePionECALdn(); }
const float &WMD2jesSinglePionECALdn() { return vvv.WMD2jesSinglePionECALdn(); }
const float &WMD3jesSinglePionECALdn() { return vvv.WMD3jesSinglePionECALdn(); }
const float &WMD4jesSinglePionECALdn() { return vvv.WMD4jesSinglePionECALdn(); }
const int &NQGen0jesSinglePionECALdn() { return vvv.NQGen0jesSinglePionECALdn(); }
const int &NQGen1jesSinglePionECALdn() { return vvv.NQGen1jesSinglePionECALdn(); }
const int &NQGen2jesSinglePionECALdn() { return vvv.NQGen2jesSinglePionECALdn(); }
const int &NQGen3jesSinglePionECALdn() { return vvv.NQGen3jesSinglePionECALdn(); }
const int &NQGen4jesSinglePionECALdn() { return vvv.NQGen4jesSinglePionECALdn(); }
const int &NBGen0jesSinglePionECALdn() { return vvv.NBGen0jesSinglePionECALdn(); }
const int &NBGen1jesSinglePionECALdn() { return vvv.NBGen1jesSinglePionECALdn(); }
const int &NBGen2jesSinglePionECALdn() { return vvv.NBGen2jesSinglePionECALdn(); }
const int &NBGen3jesSinglePionECALdn() { return vvv.NBGen3jesSinglePionECALdn(); }
const int &NBGen4jesSinglePionECALdn() { return vvv.NBGen4jesSinglePionECALdn(); }
const int &NLGen0jesSinglePionECALdn() { return vvv.NLGen0jesSinglePionECALdn(); }
const int &NLGen1jesSinglePionECALdn() { return vvv.NLGen1jesSinglePionECALdn(); }
const int &NLGen2jesSinglePionECALdn() { return vvv.NLGen2jesSinglePionECALdn(); }
const int &NLGen3jesSinglePionECALdn() { return vvv.NLGen3jesSinglePionECALdn(); }
const int &NLGen4jesSinglePionECALdn() { return vvv.NLGen4jesSinglePionECALdn(); }
const int &NVQGen0jesSinglePionECALdn() { return vvv.NVQGen0jesSinglePionECALdn(); }
const int &NVQGen1jesSinglePionECALdn() { return vvv.NVQGen1jesSinglePionECALdn(); }
const int &NVQGen2jesSinglePionECALdn() { return vvv.NVQGen2jesSinglePionECALdn(); }
const int &NVQGen3jesSinglePionECALdn() { return vvv.NVQGen3jesSinglePionECALdn(); }
const int &NVQGen4jesSinglePionECALdn() { return vvv.NVQGen4jesSinglePionECALdn(); }
const int &NiFJjesSinglePionECALdn() { return vvv.NiFJjesSinglePionECALdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesSinglePionECALdn() { return vvv.iFJ0jesSinglePionECALdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesSinglePionECALdn() { return vvv.iFJ1jesSinglePionECALdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesSinglePionECALdn() { return vvv.iFJ2jesSinglePionECALdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesSinglePionECALdn() { return vvv.iFJ3jesSinglePionECALdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesSinglePionECALdn() { return vvv.iFJ4jesSinglePionECALdn(); }
const float &iVMD0jesSinglePionECALdn() { return vvv.iVMD0jesSinglePionECALdn(); }
const float &iVMD1jesSinglePionECALdn() { return vvv.iVMD1jesSinglePionECALdn(); }
const float &iVMD2jesSinglePionECALdn() { return vvv.iVMD2jesSinglePionECALdn(); }
const float &iVMD3jesSinglePionECALdn() { return vvv.iVMD3jesSinglePionECALdn(); }
const float &iVMD4jesSinglePionECALdn() { return vvv.iVMD4jesSinglePionECALdn(); }
const float &iWMD0jesSinglePionECALdn() { return vvv.iWMD0jesSinglePionECALdn(); }
const float &iWMD1jesSinglePionECALdn() { return vvv.iWMD1jesSinglePionECALdn(); }
const float &iWMD2jesSinglePionECALdn() { return vvv.iWMD2jesSinglePionECALdn(); }
const float &iWMD3jesSinglePionECALdn() { return vvv.iWMD3jesSinglePionECALdn(); }
const float &iWMD4jesSinglePionECALdn() { return vvv.iWMD4jesSinglePionECALdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesSinglePionECALdn() { return vvv.METjesSinglePionECALdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesSinglePionECALdn() { return vvv.NujesSinglePionECALdn(); }
const int &NJjesSinglePionECALdn() { return vvv.NJjesSinglePionECALdn(); }
const int &NbLoosejesSinglePionECALdn() { return vvv.NbLoosejesSinglePionECALdn(); }
const int &NbMediumjesSinglePionECALdn() { return vvv.NbMediumjesSinglePionECALdn(); }
const int &NbTightjesSinglePionECALdn() { return vvv.NbTightjesSinglePionECALdn(); }
const int &NoORNbLoosejesSinglePionECALdn() { return vvv.NoORNbLoosejesSinglePionECALdn(); }
const int &NoORNbMediumjesSinglePionECALdn() { return vvv.NoORNbMediumjesSinglePionECALdn(); }
const int &NoORNbTightjesSinglePionECALdn() { return vvv.NoORNbTightjesSinglePionECALdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesSinglePionECALdn() { return vvv.J0jesSinglePionECALdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesSinglePionECALdn() { return vvv.J1jesSinglePionECALdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesSinglePionECALdn() { return vvv.J2jesSinglePionECALdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesSinglePionECALdn() { return vvv.J3jesSinglePionECALdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesSinglePionECALdn() { return vvv.J4jesSinglePionECALdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesSinglePionECALdn() { return vvv.J5jesSinglePionECALdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesSinglePionECALdn() { return vvv.J6jesSinglePionECALdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesSinglePionECALdn() { return vvv.J7jesSinglePionECALdn(); }
const vector<int> &NQJGenjesSinglePionECALdn() { return vvv.NQJGenjesSinglePionECALdn(); }
const vector<int> &NBJGenjesSinglePionECALdn() { return vvv.NBJGenjesSinglePionECALdn(); }
const vector<int> &NLJGenjesSinglePionECALdn() { return vvv.NLJGenjesSinglePionECALdn(); }
const float &MVVXjesSinglePionECALdn() { return vvv.MVVXjesSinglePionECALdn(); }
const float &PtVVXjesSinglePionECALdn() { return vvv.PtVVXjesSinglePionECALdn(); }
const float &HTjesSinglePionECALdn() { return vvv.HTjesSinglePionECALdn(); }
const float &HTJjesSinglePionECALdn() { return vvv.HTJjesSinglePionECALdn(); }
const float &HTFJjesSinglePionECALdn() { return vvv.HTFJjesSinglePionECALdn(); }
const float &SumPtFJjesSinglePionECALdn() { return vvv.SumPtFJjesSinglePionECALdn(); }
const float &SumPtJjesSinglePionECALdn() { return vvv.SumPtJjesSinglePionECALdn(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesSinglePionHCALup() { return vvv.JsjesSinglePionHCALup(); }
const int &NFJjesSinglePionHCALup() { return vvv.NFJjesSinglePionHCALup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesSinglePionHCALup() { return vvv.FJ0jesSinglePionHCALup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesSinglePionHCALup() { return vvv.FJ1jesSinglePionHCALup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesSinglePionHCALup() { return vvv.FJ2jesSinglePionHCALup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesSinglePionHCALup() { return vvv.FJ3jesSinglePionHCALup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesSinglePionHCALup() { return vvv.FJ4jesSinglePionHCALup(); }
const float &VMD0jesSinglePionHCALup() { return vvv.VMD0jesSinglePionHCALup(); }
const float &VMD1jesSinglePionHCALup() { return vvv.VMD1jesSinglePionHCALup(); }
const float &VMD2jesSinglePionHCALup() { return vvv.VMD2jesSinglePionHCALup(); }
const float &VMD3jesSinglePionHCALup() { return vvv.VMD3jesSinglePionHCALup(); }
const float &VMD4jesSinglePionHCALup() { return vvv.VMD4jesSinglePionHCALup(); }
const float &WMD0jesSinglePionHCALup() { return vvv.WMD0jesSinglePionHCALup(); }
const float &WMD1jesSinglePionHCALup() { return vvv.WMD1jesSinglePionHCALup(); }
const float &WMD2jesSinglePionHCALup() { return vvv.WMD2jesSinglePionHCALup(); }
const float &WMD3jesSinglePionHCALup() { return vvv.WMD3jesSinglePionHCALup(); }
const float &WMD4jesSinglePionHCALup() { return vvv.WMD4jesSinglePionHCALup(); }
const int &NQGen0jesSinglePionHCALup() { return vvv.NQGen0jesSinglePionHCALup(); }
const int &NQGen1jesSinglePionHCALup() { return vvv.NQGen1jesSinglePionHCALup(); }
const int &NQGen2jesSinglePionHCALup() { return vvv.NQGen2jesSinglePionHCALup(); }
const int &NQGen3jesSinglePionHCALup() { return vvv.NQGen3jesSinglePionHCALup(); }
const int &NQGen4jesSinglePionHCALup() { return vvv.NQGen4jesSinglePionHCALup(); }
const int &NBGen0jesSinglePionHCALup() { return vvv.NBGen0jesSinglePionHCALup(); }
const int &NBGen1jesSinglePionHCALup() { return vvv.NBGen1jesSinglePionHCALup(); }
const int &NBGen2jesSinglePionHCALup() { return vvv.NBGen2jesSinglePionHCALup(); }
const int &NBGen3jesSinglePionHCALup() { return vvv.NBGen3jesSinglePionHCALup(); }
const int &NBGen4jesSinglePionHCALup() { return vvv.NBGen4jesSinglePionHCALup(); }
const int &NLGen0jesSinglePionHCALup() { return vvv.NLGen0jesSinglePionHCALup(); }
const int &NLGen1jesSinglePionHCALup() { return vvv.NLGen1jesSinglePionHCALup(); }
const int &NLGen2jesSinglePionHCALup() { return vvv.NLGen2jesSinglePionHCALup(); }
const int &NLGen3jesSinglePionHCALup() { return vvv.NLGen3jesSinglePionHCALup(); }
const int &NLGen4jesSinglePionHCALup() { return vvv.NLGen4jesSinglePionHCALup(); }
const int &NVQGen0jesSinglePionHCALup() { return vvv.NVQGen0jesSinglePionHCALup(); }
const int &NVQGen1jesSinglePionHCALup() { return vvv.NVQGen1jesSinglePionHCALup(); }
const int &NVQGen2jesSinglePionHCALup() { return vvv.NVQGen2jesSinglePionHCALup(); }
const int &NVQGen3jesSinglePionHCALup() { return vvv.NVQGen3jesSinglePionHCALup(); }
const int &NVQGen4jesSinglePionHCALup() { return vvv.NVQGen4jesSinglePionHCALup(); }
const int &NiFJjesSinglePionHCALup() { return vvv.NiFJjesSinglePionHCALup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesSinglePionHCALup() { return vvv.iFJ0jesSinglePionHCALup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesSinglePionHCALup() { return vvv.iFJ1jesSinglePionHCALup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesSinglePionHCALup() { return vvv.iFJ2jesSinglePionHCALup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesSinglePionHCALup() { return vvv.iFJ3jesSinglePionHCALup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesSinglePionHCALup() { return vvv.iFJ4jesSinglePionHCALup(); }
const float &iVMD0jesSinglePionHCALup() { return vvv.iVMD0jesSinglePionHCALup(); }
const float &iVMD1jesSinglePionHCALup() { return vvv.iVMD1jesSinglePionHCALup(); }
const float &iVMD2jesSinglePionHCALup() { return vvv.iVMD2jesSinglePionHCALup(); }
const float &iVMD3jesSinglePionHCALup() { return vvv.iVMD3jesSinglePionHCALup(); }
const float &iVMD4jesSinglePionHCALup() { return vvv.iVMD4jesSinglePionHCALup(); }
const float &iWMD0jesSinglePionHCALup() { return vvv.iWMD0jesSinglePionHCALup(); }
const float &iWMD1jesSinglePionHCALup() { return vvv.iWMD1jesSinglePionHCALup(); }
const float &iWMD2jesSinglePionHCALup() { return vvv.iWMD2jesSinglePionHCALup(); }
const float &iWMD3jesSinglePionHCALup() { return vvv.iWMD3jesSinglePionHCALup(); }
const float &iWMD4jesSinglePionHCALup() { return vvv.iWMD4jesSinglePionHCALup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesSinglePionHCALup() { return vvv.METjesSinglePionHCALup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesSinglePionHCALup() { return vvv.NujesSinglePionHCALup(); }
const int &NJjesSinglePionHCALup() { return vvv.NJjesSinglePionHCALup(); }
const int &NbLoosejesSinglePionHCALup() { return vvv.NbLoosejesSinglePionHCALup(); }
const int &NbMediumjesSinglePionHCALup() { return vvv.NbMediumjesSinglePionHCALup(); }
const int &NbTightjesSinglePionHCALup() { return vvv.NbTightjesSinglePionHCALup(); }
const int &NoORNbLoosejesSinglePionHCALup() { return vvv.NoORNbLoosejesSinglePionHCALup(); }
const int &NoORNbMediumjesSinglePionHCALup() { return vvv.NoORNbMediumjesSinglePionHCALup(); }
const int &NoORNbTightjesSinglePionHCALup() { return vvv.NoORNbTightjesSinglePionHCALup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesSinglePionHCALup() { return vvv.J0jesSinglePionHCALup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesSinglePionHCALup() { return vvv.J1jesSinglePionHCALup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesSinglePionHCALup() { return vvv.J2jesSinglePionHCALup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesSinglePionHCALup() { return vvv.J3jesSinglePionHCALup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesSinglePionHCALup() { return vvv.J4jesSinglePionHCALup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesSinglePionHCALup() { return vvv.J5jesSinglePionHCALup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesSinglePionHCALup() { return vvv.J6jesSinglePionHCALup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesSinglePionHCALup() { return vvv.J7jesSinglePionHCALup(); }
const vector<int> &NQJGenjesSinglePionHCALup() { return vvv.NQJGenjesSinglePionHCALup(); }
const vector<int> &NBJGenjesSinglePionHCALup() { return vvv.NBJGenjesSinglePionHCALup(); }
const vector<int> &NLJGenjesSinglePionHCALup() { return vvv.NLJGenjesSinglePionHCALup(); }
const float &MVVXjesSinglePionHCALup() { return vvv.MVVXjesSinglePionHCALup(); }
const float &PtVVXjesSinglePionHCALup() { return vvv.PtVVXjesSinglePionHCALup(); }
const float &HTjesSinglePionHCALup() { return vvv.HTjesSinglePionHCALup(); }
const float &HTJjesSinglePionHCALup() { return vvv.HTJjesSinglePionHCALup(); }
const float &HTFJjesSinglePionHCALup() { return vvv.HTFJjesSinglePionHCALup(); }
const float &SumPtFJjesSinglePionHCALup() { return vvv.SumPtFJjesSinglePionHCALup(); }
const float &SumPtJjesSinglePionHCALup() { return vvv.SumPtJjesSinglePionHCALup(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesSinglePionHCALdn() { return vvv.JsjesSinglePionHCALdn(); }
const int &NFJjesSinglePionHCALdn() { return vvv.NFJjesSinglePionHCALdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesSinglePionHCALdn() { return vvv.FJ0jesSinglePionHCALdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesSinglePionHCALdn() { return vvv.FJ1jesSinglePionHCALdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesSinglePionHCALdn() { return vvv.FJ2jesSinglePionHCALdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesSinglePionHCALdn() { return vvv.FJ3jesSinglePionHCALdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesSinglePionHCALdn() { return vvv.FJ4jesSinglePionHCALdn(); }
const float &VMD0jesSinglePionHCALdn() { return vvv.VMD0jesSinglePionHCALdn(); }
const float &VMD1jesSinglePionHCALdn() { return vvv.VMD1jesSinglePionHCALdn(); }
const float &VMD2jesSinglePionHCALdn() { return vvv.VMD2jesSinglePionHCALdn(); }
const float &VMD3jesSinglePionHCALdn() { return vvv.VMD3jesSinglePionHCALdn(); }
const float &VMD4jesSinglePionHCALdn() { return vvv.VMD4jesSinglePionHCALdn(); }
const float &WMD0jesSinglePionHCALdn() { return vvv.WMD0jesSinglePionHCALdn(); }
const float &WMD1jesSinglePionHCALdn() { return vvv.WMD1jesSinglePionHCALdn(); }
const float &WMD2jesSinglePionHCALdn() { return vvv.WMD2jesSinglePionHCALdn(); }
const float &WMD3jesSinglePionHCALdn() { return vvv.WMD3jesSinglePionHCALdn(); }
const float &WMD4jesSinglePionHCALdn() { return vvv.WMD4jesSinglePionHCALdn(); }
const int &NQGen0jesSinglePionHCALdn() { return vvv.NQGen0jesSinglePionHCALdn(); }
const int &NQGen1jesSinglePionHCALdn() { return vvv.NQGen1jesSinglePionHCALdn(); }
const int &NQGen2jesSinglePionHCALdn() { return vvv.NQGen2jesSinglePionHCALdn(); }
const int &NQGen3jesSinglePionHCALdn() { return vvv.NQGen3jesSinglePionHCALdn(); }
const int &NQGen4jesSinglePionHCALdn() { return vvv.NQGen4jesSinglePionHCALdn(); }
const int &NBGen0jesSinglePionHCALdn() { return vvv.NBGen0jesSinglePionHCALdn(); }
const int &NBGen1jesSinglePionHCALdn() { return vvv.NBGen1jesSinglePionHCALdn(); }
const int &NBGen2jesSinglePionHCALdn() { return vvv.NBGen2jesSinglePionHCALdn(); }
const int &NBGen3jesSinglePionHCALdn() { return vvv.NBGen3jesSinglePionHCALdn(); }
const int &NBGen4jesSinglePionHCALdn() { return vvv.NBGen4jesSinglePionHCALdn(); }
const int &NLGen0jesSinglePionHCALdn() { return vvv.NLGen0jesSinglePionHCALdn(); }
const int &NLGen1jesSinglePionHCALdn() { return vvv.NLGen1jesSinglePionHCALdn(); }
const int &NLGen2jesSinglePionHCALdn() { return vvv.NLGen2jesSinglePionHCALdn(); }
const int &NLGen3jesSinglePionHCALdn() { return vvv.NLGen3jesSinglePionHCALdn(); }
const int &NLGen4jesSinglePionHCALdn() { return vvv.NLGen4jesSinglePionHCALdn(); }
const int &NVQGen0jesSinglePionHCALdn() { return vvv.NVQGen0jesSinglePionHCALdn(); }
const int &NVQGen1jesSinglePionHCALdn() { return vvv.NVQGen1jesSinglePionHCALdn(); }
const int &NVQGen2jesSinglePionHCALdn() { return vvv.NVQGen2jesSinglePionHCALdn(); }
const int &NVQGen3jesSinglePionHCALdn() { return vvv.NVQGen3jesSinglePionHCALdn(); }
const int &NVQGen4jesSinglePionHCALdn() { return vvv.NVQGen4jesSinglePionHCALdn(); }
const int &NiFJjesSinglePionHCALdn() { return vvv.NiFJjesSinglePionHCALdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesSinglePionHCALdn() { return vvv.iFJ0jesSinglePionHCALdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesSinglePionHCALdn() { return vvv.iFJ1jesSinglePionHCALdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesSinglePionHCALdn() { return vvv.iFJ2jesSinglePionHCALdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesSinglePionHCALdn() { return vvv.iFJ3jesSinglePionHCALdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesSinglePionHCALdn() { return vvv.iFJ4jesSinglePionHCALdn(); }
const float &iVMD0jesSinglePionHCALdn() { return vvv.iVMD0jesSinglePionHCALdn(); }
const float &iVMD1jesSinglePionHCALdn() { return vvv.iVMD1jesSinglePionHCALdn(); }
const float &iVMD2jesSinglePionHCALdn() { return vvv.iVMD2jesSinglePionHCALdn(); }
const float &iVMD3jesSinglePionHCALdn() { return vvv.iVMD3jesSinglePionHCALdn(); }
const float &iVMD4jesSinglePionHCALdn() { return vvv.iVMD4jesSinglePionHCALdn(); }
const float &iWMD0jesSinglePionHCALdn() { return vvv.iWMD0jesSinglePionHCALdn(); }
const float &iWMD1jesSinglePionHCALdn() { return vvv.iWMD1jesSinglePionHCALdn(); }
const float &iWMD2jesSinglePionHCALdn() { return vvv.iWMD2jesSinglePionHCALdn(); }
const float &iWMD3jesSinglePionHCALdn() { return vvv.iWMD3jesSinglePionHCALdn(); }
const float &iWMD4jesSinglePionHCALdn() { return vvv.iWMD4jesSinglePionHCALdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesSinglePionHCALdn() { return vvv.METjesSinglePionHCALdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesSinglePionHCALdn() { return vvv.NujesSinglePionHCALdn(); }
const int &NJjesSinglePionHCALdn() { return vvv.NJjesSinglePionHCALdn(); }
const int &NbLoosejesSinglePionHCALdn() { return vvv.NbLoosejesSinglePionHCALdn(); }
const int &NbMediumjesSinglePionHCALdn() { return vvv.NbMediumjesSinglePionHCALdn(); }
const int &NbTightjesSinglePionHCALdn() { return vvv.NbTightjesSinglePionHCALdn(); }
const int &NoORNbLoosejesSinglePionHCALdn() { return vvv.NoORNbLoosejesSinglePionHCALdn(); }
const int &NoORNbMediumjesSinglePionHCALdn() { return vvv.NoORNbMediumjesSinglePionHCALdn(); }
const int &NoORNbTightjesSinglePionHCALdn() { return vvv.NoORNbTightjesSinglePionHCALdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesSinglePionHCALdn() { return vvv.J0jesSinglePionHCALdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesSinglePionHCALdn() { return vvv.J1jesSinglePionHCALdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesSinglePionHCALdn() { return vvv.J2jesSinglePionHCALdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesSinglePionHCALdn() { return vvv.J3jesSinglePionHCALdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesSinglePionHCALdn() { return vvv.J4jesSinglePionHCALdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesSinglePionHCALdn() { return vvv.J5jesSinglePionHCALdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesSinglePionHCALdn() { return vvv.J6jesSinglePionHCALdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesSinglePionHCALdn() { return vvv.J7jesSinglePionHCALdn(); }
const vector<int> &NQJGenjesSinglePionHCALdn() { return vvv.NQJGenjesSinglePionHCALdn(); }
const vector<int> &NBJGenjesSinglePionHCALdn() { return vvv.NBJGenjesSinglePionHCALdn(); }
const vector<int> &NLJGenjesSinglePionHCALdn() { return vvv.NLJGenjesSinglePionHCALdn(); }
const float &MVVXjesSinglePionHCALdn() { return vvv.MVVXjesSinglePionHCALdn(); }
const float &PtVVXjesSinglePionHCALdn() { return vvv.PtVVXjesSinglePionHCALdn(); }
const float &HTjesSinglePionHCALdn() { return vvv.HTjesSinglePionHCALdn(); }
const float &HTJjesSinglePionHCALdn() { return vvv.HTJjesSinglePionHCALdn(); }
const float &HTFJjesSinglePionHCALdn() { return vvv.HTFJjesSinglePionHCALdn(); }
const float &SumPtFJjesSinglePionHCALdn() { return vvv.SumPtFJjesSinglePionHCALdn(); }
const float &SumPtJjesSinglePionHCALdn() { return vvv.SumPtJjesSinglePionHCALdn(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesFlavorQCDup() { return vvv.JsjesFlavorQCDup(); }
const int &NFJjesFlavorQCDup() { return vvv.NFJjesFlavorQCDup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesFlavorQCDup() { return vvv.FJ0jesFlavorQCDup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesFlavorQCDup() { return vvv.FJ1jesFlavorQCDup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesFlavorQCDup() { return vvv.FJ2jesFlavorQCDup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesFlavorQCDup() { return vvv.FJ3jesFlavorQCDup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesFlavorQCDup() { return vvv.FJ4jesFlavorQCDup(); }
const float &VMD0jesFlavorQCDup() { return vvv.VMD0jesFlavorQCDup(); }
const float &VMD1jesFlavorQCDup() { return vvv.VMD1jesFlavorQCDup(); }
const float &VMD2jesFlavorQCDup() { return vvv.VMD2jesFlavorQCDup(); }
const float &VMD3jesFlavorQCDup() { return vvv.VMD3jesFlavorQCDup(); }
const float &VMD4jesFlavorQCDup() { return vvv.VMD4jesFlavorQCDup(); }
const float &WMD0jesFlavorQCDup() { return vvv.WMD0jesFlavorQCDup(); }
const float &WMD1jesFlavorQCDup() { return vvv.WMD1jesFlavorQCDup(); }
const float &WMD2jesFlavorQCDup() { return vvv.WMD2jesFlavorQCDup(); }
const float &WMD3jesFlavorQCDup() { return vvv.WMD3jesFlavorQCDup(); }
const float &WMD4jesFlavorQCDup() { return vvv.WMD4jesFlavorQCDup(); }
const int &NQGen0jesFlavorQCDup() { return vvv.NQGen0jesFlavorQCDup(); }
const int &NQGen1jesFlavorQCDup() { return vvv.NQGen1jesFlavorQCDup(); }
const int &NQGen2jesFlavorQCDup() { return vvv.NQGen2jesFlavorQCDup(); }
const int &NQGen3jesFlavorQCDup() { return vvv.NQGen3jesFlavorQCDup(); }
const int &NQGen4jesFlavorQCDup() { return vvv.NQGen4jesFlavorQCDup(); }
const int &NBGen0jesFlavorQCDup() { return vvv.NBGen0jesFlavorQCDup(); }
const int &NBGen1jesFlavorQCDup() { return vvv.NBGen1jesFlavorQCDup(); }
const int &NBGen2jesFlavorQCDup() { return vvv.NBGen2jesFlavorQCDup(); }
const int &NBGen3jesFlavorQCDup() { return vvv.NBGen3jesFlavorQCDup(); }
const int &NBGen4jesFlavorQCDup() { return vvv.NBGen4jesFlavorQCDup(); }
const int &NLGen0jesFlavorQCDup() { return vvv.NLGen0jesFlavorQCDup(); }
const int &NLGen1jesFlavorQCDup() { return vvv.NLGen1jesFlavorQCDup(); }
const int &NLGen2jesFlavorQCDup() { return vvv.NLGen2jesFlavorQCDup(); }
const int &NLGen3jesFlavorQCDup() { return vvv.NLGen3jesFlavorQCDup(); }
const int &NLGen4jesFlavorQCDup() { return vvv.NLGen4jesFlavorQCDup(); }
const int &NVQGen0jesFlavorQCDup() { return vvv.NVQGen0jesFlavorQCDup(); }
const int &NVQGen1jesFlavorQCDup() { return vvv.NVQGen1jesFlavorQCDup(); }
const int &NVQGen2jesFlavorQCDup() { return vvv.NVQGen2jesFlavorQCDup(); }
const int &NVQGen3jesFlavorQCDup() { return vvv.NVQGen3jesFlavorQCDup(); }
const int &NVQGen4jesFlavorQCDup() { return vvv.NVQGen4jesFlavorQCDup(); }
const int &NiFJjesFlavorQCDup() { return vvv.NiFJjesFlavorQCDup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesFlavorQCDup() { return vvv.iFJ0jesFlavorQCDup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesFlavorQCDup() { return vvv.iFJ1jesFlavorQCDup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesFlavorQCDup() { return vvv.iFJ2jesFlavorQCDup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesFlavorQCDup() { return vvv.iFJ3jesFlavorQCDup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesFlavorQCDup() { return vvv.iFJ4jesFlavorQCDup(); }
const float &iVMD0jesFlavorQCDup() { return vvv.iVMD0jesFlavorQCDup(); }
const float &iVMD1jesFlavorQCDup() { return vvv.iVMD1jesFlavorQCDup(); }
const float &iVMD2jesFlavorQCDup() { return vvv.iVMD2jesFlavorQCDup(); }
const float &iVMD3jesFlavorQCDup() { return vvv.iVMD3jesFlavorQCDup(); }
const float &iVMD4jesFlavorQCDup() { return vvv.iVMD4jesFlavorQCDup(); }
const float &iWMD0jesFlavorQCDup() { return vvv.iWMD0jesFlavorQCDup(); }
const float &iWMD1jesFlavorQCDup() { return vvv.iWMD1jesFlavorQCDup(); }
const float &iWMD2jesFlavorQCDup() { return vvv.iWMD2jesFlavorQCDup(); }
const float &iWMD3jesFlavorQCDup() { return vvv.iWMD3jesFlavorQCDup(); }
const float &iWMD4jesFlavorQCDup() { return vvv.iWMD4jesFlavorQCDup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesFlavorQCDup() { return vvv.METjesFlavorQCDup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesFlavorQCDup() { return vvv.NujesFlavorQCDup(); }
const int &NJjesFlavorQCDup() { return vvv.NJjesFlavorQCDup(); }
const int &NbLoosejesFlavorQCDup() { return vvv.NbLoosejesFlavorQCDup(); }
const int &NbMediumjesFlavorQCDup() { return vvv.NbMediumjesFlavorQCDup(); }
const int &NbTightjesFlavorQCDup() { return vvv.NbTightjesFlavorQCDup(); }
const int &NoORNbLoosejesFlavorQCDup() { return vvv.NoORNbLoosejesFlavorQCDup(); }
const int &NoORNbMediumjesFlavorQCDup() { return vvv.NoORNbMediumjesFlavorQCDup(); }
const int &NoORNbTightjesFlavorQCDup() { return vvv.NoORNbTightjesFlavorQCDup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesFlavorQCDup() { return vvv.J0jesFlavorQCDup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesFlavorQCDup() { return vvv.J1jesFlavorQCDup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesFlavorQCDup() { return vvv.J2jesFlavorQCDup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesFlavorQCDup() { return vvv.J3jesFlavorQCDup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesFlavorQCDup() { return vvv.J4jesFlavorQCDup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesFlavorQCDup() { return vvv.J5jesFlavorQCDup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesFlavorQCDup() { return vvv.J6jesFlavorQCDup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesFlavorQCDup() { return vvv.J7jesFlavorQCDup(); }
const vector<int> &NQJGenjesFlavorQCDup() { return vvv.NQJGenjesFlavorQCDup(); }
const vector<int> &NBJGenjesFlavorQCDup() { return vvv.NBJGenjesFlavorQCDup(); }
const vector<int> &NLJGenjesFlavorQCDup() { return vvv.NLJGenjesFlavorQCDup(); }
const float &MVVXjesFlavorQCDup() { return vvv.MVVXjesFlavorQCDup(); }
const float &PtVVXjesFlavorQCDup() { return vvv.PtVVXjesFlavorQCDup(); }
const float &HTjesFlavorQCDup() { return vvv.HTjesFlavorQCDup(); }
const float &HTJjesFlavorQCDup() { return vvv.HTJjesFlavorQCDup(); }
const float &HTFJjesFlavorQCDup() { return vvv.HTFJjesFlavorQCDup(); }
const float &SumPtFJjesFlavorQCDup() { return vvv.SumPtFJjesFlavorQCDup(); }
const float &SumPtJjesFlavorQCDup() { return vvv.SumPtJjesFlavorQCDup(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesFlavorQCDdn() { return vvv.JsjesFlavorQCDdn(); }
const int &NFJjesFlavorQCDdn() { return vvv.NFJjesFlavorQCDdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesFlavorQCDdn() { return vvv.FJ0jesFlavorQCDdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesFlavorQCDdn() { return vvv.FJ1jesFlavorQCDdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesFlavorQCDdn() { return vvv.FJ2jesFlavorQCDdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesFlavorQCDdn() { return vvv.FJ3jesFlavorQCDdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesFlavorQCDdn() { return vvv.FJ4jesFlavorQCDdn(); }
const float &VMD0jesFlavorQCDdn() { return vvv.VMD0jesFlavorQCDdn(); }
const float &VMD1jesFlavorQCDdn() { return vvv.VMD1jesFlavorQCDdn(); }
const float &VMD2jesFlavorQCDdn() { return vvv.VMD2jesFlavorQCDdn(); }
const float &VMD3jesFlavorQCDdn() { return vvv.VMD3jesFlavorQCDdn(); }
const float &VMD4jesFlavorQCDdn() { return vvv.VMD4jesFlavorQCDdn(); }
const float &WMD0jesFlavorQCDdn() { return vvv.WMD0jesFlavorQCDdn(); }
const float &WMD1jesFlavorQCDdn() { return vvv.WMD1jesFlavorQCDdn(); }
const float &WMD2jesFlavorQCDdn() { return vvv.WMD2jesFlavorQCDdn(); }
const float &WMD3jesFlavorQCDdn() { return vvv.WMD3jesFlavorQCDdn(); }
const float &WMD4jesFlavorQCDdn() { return vvv.WMD4jesFlavorQCDdn(); }
const int &NQGen0jesFlavorQCDdn() { return vvv.NQGen0jesFlavorQCDdn(); }
const int &NQGen1jesFlavorQCDdn() { return vvv.NQGen1jesFlavorQCDdn(); }
const int &NQGen2jesFlavorQCDdn() { return vvv.NQGen2jesFlavorQCDdn(); }
const int &NQGen3jesFlavorQCDdn() { return vvv.NQGen3jesFlavorQCDdn(); }
const int &NQGen4jesFlavorQCDdn() { return vvv.NQGen4jesFlavorQCDdn(); }
const int &NBGen0jesFlavorQCDdn() { return vvv.NBGen0jesFlavorQCDdn(); }
const int &NBGen1jesFlavorQCDdn() { return vvv.NBGen1jesFlavorQCDdn(); }
const int &NBGen2jesFlavorQCDdn() { return vvv.NBGen2jesFlavorQCDdn(); }
const int &NBGen3jesFlavorQCDdn() { return vvv.NBGen3jesFlavorQCDdn(); }
const int &NBGen4jesFlavorQCDdn() { return vvv.NBGen4jesFlavorQCDdn(); }
const int &NLGen0jesFlavorQCDdn() { return vvv.NLGen0jesFlavorQCDdn(); }
const int &NLGen1jesFlavorQCDdn() { return vvv.NLGen1jesFlavorQCDdn(); }
const int &NLGen2jesFlavorQCDdn() { return vvv.NLGen2jesFlavorQCDdn(); }
const int &NLGen3jesFlavorQCDdn() { return vvv.NLGen3jesFlavorQCDdn(); }
const int &NLGen4jesFlavorQCDdn() { return vvv.NLGen4jesFlavorQCDdn(); }
const int &NVQGen0jesFlavorQCDdn() { return vvv.NVQGen0jesFlavorQCDdn(); }
const int &NVQGen1jesFlavorQCDdn() { return vvv.NVQGen1jesFlavorQCDdn(); }
const int &NVQGen2jesFlavorQCDdn() { return vvv.NVQGen2jesFlavorQCDdn(); }
const int &NVQGen3jesFlavorQCDdn() { return vvv.NVQGen3jesFlavorQCDdn(); }
const int &NVQGen4jesFlavorQCDdn() { return vvv.NVQGen4jesFlavorQCDdn(); }
const int &NiFJjesFlavorQCDdn() { return vvv.NiFJjesFlavorQCDdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesFlavorQCDdn() { return vvv.iFJ0jesFlavorQCDdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesFlavorQCDdn() { return vvv.iFJ1jesFlavorQCDdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesFlavorQCDdn() { return vvv.iFJ2jesFlavorQCDdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesFlavorQCDdn() { return vvv.iFJ3jesFlavorQCDdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesFlavorQCDdn() { return vvv.iFJ4jesFlavorQCDdn(); }
const float &iVMD0jesFlavorQCDdn() { return vvv.iVMD0jesFlavorQCDdn(); }
const float &iVMD1jesFlavorQCDdn() { return vvv.iVMD1jesFlavorQCDdn(); }
const float &iVMD2jesFlavorQCDdn() { return vvv.iVMD2jesFlavorQCDdn(); }
const float &iVMD3jesFlavorQCDdn() { return vvv.iVMD3jesFlavorQCDdn(); }
const float &iVMD4jesFlavorQCDdn() { return vvv.iVMD4jesFlavorQCDdn(); }
const float &iWMD0jesFlavorQCDdn() { return vvv.iWMD0jesFlavorQCDdn(); }
const float &iWMD1jesFlavorQCDdn() { return vvv.iWMD1jesFlavorQCDdn(); }
const float &iWMD2jesFlavorQCDdn() { return vvv.iWMD2jesFlavorQCDdn(); }
const float &iWMD3jesFlavorQCDdn() { return vvv.iWMD3jesFlavorQCDdn(); }
const float &iWMD4jesFlavorQCDdn() { return vvv.iWMD4jesFlavorQCDdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesFlavorQCDdn() { return vvv.METjesFlavorQCDdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesFlavorQCDdn() { return vvv.NujesFlavorQCDdn(); }
const int &NJjesFlavorQCDdn() { return vvv.NJjesFlavorQCDdn(); }
const int &NbLoosejesFlavorQCDdn() { return vvv.NbLoosejesFlavorQCDdn(); }
const int &NbMediumjesFlavorQCDdn() { return vvv.NbMediumjesFlavorQCDdn(); }
const int &NbTightjesFlavorQCDdn() { return vvv.NbTightjesFlavorQCDdn(); }
const int &NoORNbLoosejesFlavorQCDdn() { return vvv.NoORNbLoosejesFlavorQCDdn(); }
const int &NoORNbMediumjesFlavorQCDdn() { return vvv.NoORNbMediumjesFlavorQCDdn(); }
const int &NoORNbTightjesFlavorQCDdn() { return vvv.NoORNbTightjesFlavorQCDdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesFlavorQCDdn() { return vvv.J0jesFlavorQCDdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesFlavorQCDdn() { return vvv.J1jesFlavorQCDdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesFlavorQCDdn() { return vvv.J2jesFlavorQCDdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesFlavorQCDdn() { return vvv.J3jesFlavorQCDdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesFlavorQCDdn() { return vvv.J4jesFlavorQCDdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesFlavorQCDdn() { return vvv.J5jesFlavorQCDdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesFlavorQCDdn() { return vvv.J6jesFlavorQCDdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesFlavorQCDdn() { return vvv.J7jesFlavorQCDdn(); }
const vector<int> &NQJGenjesFlavorQCDdn() { return vvv.NQJGenjesFlavorQCDdn(); }
const vector<int> &NBJGenjesFlavorQCDdn() { return vvv.NBJGenjesFlavorQCDdn(); }
const vector<int> &NLJGenjesFlavorQCDdn() { return vvv.NLJGenjesFlavorQCDdn(); }
const float &MVVXjesFlavorQCDdn() { return vvv.MVVXjesFlavorQCDdn(); }
const float &PtVVXjesFlavorQCDdn() { return vvv.PtVVXjesFlavorQCDdn(); }
const float &HTjesFlavorQCDdn() { return vvv.HTjesFlavorQCDdn(); }
const float &HTJjesFlavorQCDdn() { return vvv.HTJjesFlavorQCDdn(); }
const float &HTFJjesFlavorQCDdn() { return vvv.HTFJjesFlavorQCDdn(); }
const float &SumPtFJjesFlavorQCDdn() { return vvv.SumPtFJjesFlavorQCDdn(); }
const float &SumPtJjesFlavorQCDdn() { return vvv.SumPtJjesFlavorQCDdn(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesTimePtEtaup() { return vvv.JsjesTimePtEtaup(); }
const int &NFJjesTimePtEtaup() { return vvv.NFJjesTimePtEtaup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesTimePtEtaup() { return vvv.FJ0jesTimePtEtaup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesTimePtEtaup() { return vvv.FJ1jesTimePtEtaup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesTimePtEtaup() { return vvv.FJ2jesTimePtEtaup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesTimePtEtaup() { return vvv.FJ3jesTimePtEtaup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesTimePtEtaup() { return vvv.FJ4jesTimePtEtaup(); }
const float &VMD0jesTimePtEtaup() { return vvv.VMD0jesTimePtEtaup(); }
const float &VMD1jesTimePtEtaup() { return vvv.VMD1jesTimePtEtaup(); }
const float &VMD2jesTimePtEtaup() { return vvv.VMD2jesTimePtEtaup(); }
const float &VMD3jesTimePtEtaup() { return vvv.VMD3jesTimePtEtaup(); }
const float &VMD4jesTimePtEtaup() { return vvv.VMD4jesTimePtEtaup(); }
const float &WMD0jesTimePtEtaup() { return vvv.WMD0jesTimePtEtaup(); }
const float &WMD1jesTimePtEtaup() { return vvv.WMD1jesTimePtEtaup(); }
const float &WMD2jesTimePtEtaup() { return vvv.WMD2jesTimePtEtaup(); }
const float &WMD3jesTimePtEtaup() { return vvv.WMD3jesTimePtEtaup(); }
const float &WMD4jesTimePtEtaup() { return vvv.WMD4jesTimePtEtaup(); }
const int &NQGen0jesTimePtEtaup() { return vvv.NQGen0jesTimePtEtaup(); }
const int &NQGen1jesTimePtEtaup() { return vvv.NQGen1jesTimePtEtaup(); }
const int &NQGen2jesTimePtEtaup() { return vvv.NQGen2jesTimePtEtaup(); }
const int &NQGen3jesTimePtEtaup() { return vvv.NQGen3jesTimePtEtaup(); }
const int &NQGen4jesTimePtEtaup() { return vvv.NQGen4jesTimePtEtaup(); }
const int &NBGen0jesTimePtEtaup() { return vvv.NBGen0jesTimePtEtaup(); }
const int &NBGen1jesTimePtEtaup() { return vvv.NBGen1jesTimePtEtaup(); }
const int &NBGen2jesTimePtEtaup() { return vvv.NBGen2jesTimePtEtaup(); }
const int &NBGen3jesTimePtEtaup() { return vvv.NBGen3jesTimePtEtaup(); }
const int &NBGen4jesTimePtEtaup() { return vvv.NBGen4jesTimePtEtaup(); }
const int &NLGen0jesTimePtEtaup() { return vvv.NLGen0jesTimePtEtaup(); }
const int &NLGen1jesTimePtEtaup() { return vvv.NLGen1jesTimePtEtaup(); }
const int &NLGen2jesTimePtEtaup() { return vvv.NLGen2jesTimePtEtaup(); }
const int &NLGen3jesTimePtEtaup() { return vvv.NLGen3jesTimePtEtaup(); }
const int &NLGen4jesTimePtEtaup() { return vvv.NLGen4jesTimePtEtaup(); }
const int &NVQGen0jesTimePtEtaup() { return vvv.NVQGen0jesTimePtEtaup(); }
const int &NVQGen1jesTimePtEtaup() { return vvv.NVQGen1jesTimePtEtaup(); }
const int &NVQGen2jesTimePtEtaup() { return vvv.NVQGen2jesTimePtEtaup(); }
const int &NVQGen3jesTimePtEtaup() { return vvv.NVQGen3jesTimePtEtaup(); }
const int &NVQGen4jesTimePtEtaup() { return vvv.NVQGen4jesTimePtEtaup(); }
const int &NiFJjesTimePtEtaup() { return vvv.NiFJjesTimePtEtaup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesTimePtEtaup() { return vvv.iFJ0jesTimePtEtaup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesTimePtEtaup() { return vvv.iFJ1jesTimePtEtaup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesTimePtEtaup() { return vvv.iFJ2jesTimePtEtaup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesTimePtEtaup() { return vvv.iFJ3jesTimePtEtaup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesTimePtEtaup() { return vvv.iFJ4jesTimePtEtaup(); }
const float &iVMD0jesTimePtEtaup() { return vvv.iVMD0jesTimePtEtaup(); }
const float &iVMD1jesTimePtEtaup() { return vvv.iVMD1jesTimePtEtaup(); }
const float &iVMD2jesTimePtEtaup() { return vvv.iVMD2jesTimePtEtaup(); }
const float &iVMD3jesTimePtEtaup() { return vvv.iVMD3jesTimePtEtaup(); }
const float &iVMD4jesTimePtEtaup() { return vvv.iVMD4jesTimePtEtaup(); }
const float &iWMD0jesTimePtEtaup() { return vvv.iWMD0jesTimePtEtaup(); }
const float &iWMD1jesTimePtEtaup() { return vvv.iWMD1jesTimePtEtaup(); }
const float &iWMD2jesTimePtEtaup() { return vvv.iWMD2jesTimePtEtaup(); }
const float &iWMD3jesTimePtEtaup() { return vvv.iWMD3jesTimePtEtaup(); }
const float &iWMD4jesTimePtEtaup() { return vvv.iWMD4jesTimePtEtaup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesTimePtEtaup() { return vvv.METjesTimePtEtaup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesTimePtEtaup() { return vvv.NujesTimePtEtaup(); }
const int &NJjesTimePtEtaup() { return vvv.NJjesTimePtEtaup(); }
const int &NbLoosejesTimePtEtaup() { return vvv.NbLoosejesTimePtEtaup(); }
const int &NbMediumjesTimePtEtaup() { return vvv.NbMediumjesTimePtEtaup(); }
const int &NbTightjesTimePtEtaup() { return vvv.NbTightjesTimePtEtaup(); }
const int &NoORNbLoosejesTimePtEtaup() { return vvv.NoORNbLoosejesTimePtEtaup(); }
const int &NoORNbMediumjesTimePtEtaup() { return vvv.NoORNbMediumjesTimePtEtaup(); }
const int &NoORNbTightjesTimePtEtaup() { return vvv.NoORNbTightjesTimePtEtaup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesTimePtEtaup() { return vvv.J0jesTimePtEtaup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesTimePtEtaup() { return vvv.J1jesTimePtEtaup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesTimePtEtaup() { return vvv.J2jesTimePtEtaup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesTimePtEtaup() { return vvv.J3jesTimePtEtaup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesTimePtEtaup() { return vvv.J4jesTimePtEtaup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesTimePtEtaup() { return vvv.J5jesTimePtEtaup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesTimePtEtaup() { return vvv.J6jesTimePtEtaup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesTimePtEtaup() { return vvv.J7jesTimePtEtaup(); }
const vector<int> &NQJGenjesTimePtEtaup() { return vvv.NQJGenjesTimePtEtaup(); }
const vector<int> &NBJGenjesTimePtEtaup() { return vvv.NBJGenjesTimePtEtaup(); }
const vector<int> &NLJGenjesTimePtEtaup() { return vvv.NLJGenjesTimePtEtaup(); }
const float &MVVXjesTimePtEtaup() { return vvv.MVVXjesTimePtEtaup(); }
const float &PtVVXjesTimePtEtaup() { return vvv.PtVVXjesTimePtEtaup(); }
const float &HTjesTimePtEtaup() { return vvv.HTjesTimePtEtaup(); }
const float &HTJjesTimePtEtaup() { return vvv.HTJjesTimePtEtaup(); }
const float &HTFJjesTimePtEtaup() { return vvv.HTFJjesTimePtEtaup(); }
const float &SumPtFJjesTimePtEtaup() { return vvv.SumPtFJjesTimePtEtaup(); }
const float &SumPtJjesTimePtEtaup() { return vvv.SumPtJjesTimePtEtaup(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesTimePtEtadn() { return vvv.JsjesTimePtEtadn(); }
const int &NFJjesTimePtEtadn() { return vvv.NFJjesTimePtEtadn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesTimePtEtadn() { return vvv.FJ0jesTimePtEtadn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesTimePtEtadn() { return vvv.FJ1jesTimePtEtadn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesTimePtEtadn() { return vvv.FJ2jesTimePtEtadn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesTimePtEtadn() { return vvv.FJ3jesTimePtEtadn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesTimePtEtadn() { return vvv.FJ4jesTimePtEtadn(); }
const float &VMD0jesTimePtEtadn() { return vvv.VMD0jesTimePtEtadn(); }
const float &VMD1jesTimePtEtadn() { return vvv.VMD1jesTimePtEtadn(); }
const float &VMD2jesTimePtEtadn() { return vvv.VMD2jesTimePtEtadn(); }
const float &VMD3jesTimePtEtadn() { return vvv.VMD3jesTimePtEtadn(); }
const float &VMD4jesTimePtEtadn() { return vvv.VMD4jesTimePtEtadn(); }
const float &WMD0jesTimePtEtadn() { return vvv.WMD0jesTimePtEtadn(); }
const float &WMD1jesTimePtEtadn() { return vvv.WMD1jesTimePtEtadn(); }
const float &WMD2jesTimePtEtadn() { return vvv.WMD2jesTimePtEtadn(); }
const float &WMD3jesTimePtEtadn() { return vvv.WMD3jesTimePtEtadn(); }
const float &WMD4jesTimePtEtadn() { return vvv.WMD4jesTimePtEtadn(); }
const int &NQGen0jesTimePtEtadn() { return vvv.NQGen0jesTimePtEtadn(); }
const int &NQGen1jesTimePtEtadn() { return vvv.NQGen1jesTimePtEtadn(); }
const int &NQGen2jesTimePtEtadn() { return vvv.NQGen2jesTimePtEtadn(); }
const int &NQGen3jesTimePtEtadn() { return vvv.NQGen3jesTimePtEtadn(); }
const int &NQGen4jesTimePtEtadn() { return vvv.NQGen4jesTimePtEtadn(); }
const int &NBGen0jesTimePtEtadn() { return vvv.NBGen0jesTimePtEtadn(); }
const int &NBGen1jesTimePtEtadn() { return vvv.NBGen1jesTimePtEtadn(); }
const int &NBGen2jesTimePtEtadn() { return vvv.NBGen2jesTimePtEtadn(); }
const int &NBGen3jesTimePtEtadn() { return vvv.NBGen3jesTimePtEtadn(); }
const int &NBGen4jesTimePtEtadn() { return vvv.NBGen4jesTimePtEtadn(); }
const int &NLGen0jesTimePtEtadn() { return vvv.NLGen0jesTimePtEtadn(); }
const int &NLGen1jesTimePtEtadn() { return vvv.NLGen1jesTimePtEtadn(); }
const int &NLGen2jesTimePtEtadn() { return vvv.NLGen2jesTimePtEtadn(); }
const int &NLGen3jesTimePtEtadn() { return vvv.NLGen3jesTimePtEtadn(); }
const int &NLGen4jesTimePtEtadn() { return vvv.NLGen4jesTimePtEtadn(); }
const int &NVQGen0jesTimePtEtadn() { return vvv.NVQGen0jesTimePtEtadn(); }
const int &NVQGen1jesTimePtEtadn() { return vvv.NVQGen1jesTimePtEtadn(); }
const int &NVQGen2jesTimePtEtadn() { return vvv.NVQGen2jesTimePtEtadn(); }
const int &NVQGen3jesTimePtEtadn() { return vvv.NVQGen3jesTimePtEtadn(); }
const int &NVQGen4jesTimePtEtadn() { return vvv.NVQGen4jesTimePtEtadn(); }
const int &NiFJjesTimePtEtadn() { return vvv.NiFJjesTimePtEtadn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesTimePtEtadn() { return vvv.iFJ0jesTimePtEtadn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesTimePtEtadn() { return vvv.iFJ1jesTimePtEtadn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesTimePtEtadn() { return vvv.iFJ2jesTimePtEtadn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesTimePtEtadn() { return vvv.iFJ3jesTimePtEtadn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesTimePtEtadn() { return vvv.iFJ4jesTimePtEtadn(); }
const float &iVMD0jesTimePtEtadn() { return vvv.iVMD0jesTimePtEtadn(); }
const float &iVMD1jesTimePtEtadn() { return vvv.iVMD1jesTimePtEtadn(); }
const float &iVMD2jesTimePtEtadn() { return vvv.iVMD2jesTimePtEtadn(); }
const float &iVMD3jesTimePtEtadn() { return vvv.iVMD3jesTimePtEtadn(); }
const float &iVMD4jesTimePtEtadn() { return vvv.iVMD4jesTimePtEtadn(); }
const float &iWMD0jesTimePtEtadn() { return vvv.iWMD0jesTimePtEtadn(); }
const float &iWMD1jesTimePtEtadn() { return vvv.iWMD1jesTimePtEtadn(); }
const float &iWMD2jesTimePtEtadn() { return vvv.iWMD2jesTimePtEtadn(); }
const float &iWMD3jesTimePtEtadn() { return vvv.iWMD3jesTimePtEtadn(); }
const float &iWMD4jesTimePtEtadn() { return vvv.iWMD4jesTimePtEtadn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesTimePtEtadn() { return vvv.METjesTimePtEtadn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesTimePtEtadn() { return vvv.NujesTimePtEtadn(); }
const int &NJjesTimePtEtadn() { return vvv.NJjesTimePtEtadn(); }
const int &NbLoosejesTimePtEtadn() { return vvv.NbLoosejesTimePtEtadn(); }
const int &NbMediumjesTimePtEtadn() { return vvv.NbMediumjesTimePtEtadn(); }
const int &NbTightjesTimePtEtadn() { return vvv.NbTightjesTimePtEtadn(); }
const int &NoORNbLoosejesTimePtEtadn() { return vvv.NoORNbLoosejesTimePtEtadn(); }
const int &NoORNbMediumjesTimePtEtadn() { return vvv.NoORNbMediumjesTimePtEtadn(); }
const int &NoORNbTightjesTimePtEtadn() { return vvv.NoORNbTightjesTimePtEtadn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesTimePtEtadn() { return vvv.J0jesTimePtEtadn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesTimePtEtadn() { return vvv.J1jesTimePtEtadn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesTimePtEtadn() { return vvv.J2jesTimePtEtadn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesTimePtEtadn() { return vvv.J3jesTimePtEtadn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesTimePtEtadn() { return vvv.J4jesTimePtEtadn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesTimePtEtadn() { return vvv.J5jesTimePtEtadn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesTimePtEtadn() { return vvv.J6jesTimePtEtadn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesTimePtEtadn() { return vvv.J7jesTimePtEtadn(); }
const vector<int> &NQJGenjesTimePtEtadn() { return vvv.NQJGenjesTimePtEtadn(); }
const vector<int> &NBJGenjesTimePtEtadn() { return vvv.NBJGenjesTimePtEtadn(); }
const vector<int> &NLJGenjesTimePtEtadn() { return vvv.NLJGenjesTimePtEtadn(); }
const float &MVVXjesTimePtEtadn() { return vvv.MVVXjesTimePtEtadn(); }
const float &PtVVXjesTimePtEtadn() { return vvv.PtVVXjesTimePtEtadn(); }
const float &HTjesTimePtEtadn() { return vvv.HTjesTimePtEtadn(); }
const float &HTJjesTimePtEtadn() { return vvv.HTJjesTimePtEtadn(); }
const float &HTFJjesTimePtEtadn() { return vvv.HTFJjesTimePtEtadn(); }
const float &SumPtFJjesTimePtEtadn() { return vvv.SumPtFJjesTimePtEtadn(); }
const float &SumPtJjesTimePtEtadn() { return vvv.SumPtJjesTimePtEtadn(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesRelativeJEREC1up() { return vvv.JsjesRelativeJEREC1up(); }
const int &NFJjesRelativeJEREC1up() { return vvv.NFJjesRelativeJEREC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesRelativeJEREC1up() { return vvv.FJ0jesRelativeJEREC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesRelativeJEREC1up() { return vvv.FJ1jesRelativeJEREC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesRelativeJEREC1up() { return vvv.FJ2jesRelativeJEREC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesRelativeJEREC1up() { return vvv.FJ3jesRelativeJEREC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesRelativeJEREC1up() { return vvv.FJ4jesRelativeJEREC1up(); }
const float &VMD0jesRelativeJEREC1up() { return vvv.VMD0jesRelativeJEREC1up(); }
const float &VMD1jesRelativeJEREC1up() { return vvv.VMD1jesRelativeJEREC1up(); }
const float &VMD2jesRelativeJEREC1up() { return vvv.VMD2jesRelativeJEREC1up(); }
const float &VMD3jesRelativeJEREC1up() { return vvv.VMD3jesRelativeJEREC1up(); }
const float &VMD4jesRelativeJEREC1up() { return vvv.VMD4jesRelativeJEREC1up(); }
const float &WMD0jesRelativeJEREC1up() { return vvv.WMD0jesRelativeJEREC1up(); }
const float &WMD1jesRelativeJEREC1up() { return vvv.WMD1jesRelativeJEREC1up(); }
const float &WMD2jesRelativeJEREC1up() { return vvv.WMD2jesRelativeJEREC1up(); }
const float &WMD3jesRelativeJEREC1up() { return vvv.WMD3jesRelativeJEREC1up(); }
const float &WMD4jesRelativeJEREC1up() { return vvv.WMD4jesRelativeJEREC1up(); }
const int &NQGen0jesRelativeJEREC1up() { return vvv.NQGen0jesRelativeJEREC1up(); }
const int &NQGen1jesRelativeJEREC1up() { return vvv.NQGen1jesRelativeJEREC1up(); }
const int &NQGen2jesRelativeJEREC1up() { return vvv.NQGen2jesRelativeJEREC1up(); }
const int &NQGen3jesRelativeJEREC1up() { return vvv.NQGen3jesRelativeJEREC1up(); }
const int &NQGen4jesRelativeJEREC1up() { return vvv.NQGen4jesRelativeJEREC1up(); }
const int &NBGen0jesRelativeJEREC1up() { return vvv.NBGen0jesRelativeJEREC1up(); }
const int &NBGen1jesRelativeJEREC1up() { return vvv.NBGen1jesRelativeJEREC1up(); }
const int &NBGen2jesRelativeJEREC1up() { return vvv.NBGen2jesRelativeJEREC1up(); }
const int &NBGen3jesRelativeJEREC1up() { return vvv.NBGen3jesRelativeJEREC1up(); }
const int &NBGen4jesRelativeJEREC1up() { return vvv.NBGen4jesRelativeJEREC1up(); }
const int &NLGen0jesRelativeJEREC1up() { return vvv.NLGen0jesRelativeJEREC1up(); }
const int &NLGen1jesRelativeJEREC1up() { return vvv.NLGen1jesRelativeJEREC1up(); }
const int &NLGen2jesRelativeJEREC1up() { return vvv.NLGen2jesRelativeJEREC1up(); }
const int &NLGen3jesRelativeJEREC1up() { return vvv.NLGen3jesRelativeJEREC1up(); }
const int &NLGen4jesRelativeJEREC1up() { return vvv.NLGen4jesRelativeJEREC1up(); }
const int &NVQGen0jesRelativeJEREC1up() { return vvv.NVQGen0jesRelativeJEREC1up(); }
const int &NVQGen1jesRelativeJEREC1up() { return vvv.NVQGen1jesRelativeJEREC1up(); }
const int &NVQGen2jesRelativeJEREC1up() { return vvv.NVQGen2jesRelativeJEREC1up(); }
const int &NVQGen3jesRelativeJEREC1up() { return vvv.NVQGen3jesRelativeJEREC1up(); }
const int &NVQGen4jesRelativeJEREC1up() { return vvv.NVQGen4jesRelativeJEREC1up(); }
const int &NiFJjesRelativeJEREC1up() { return vvv.NiFJjesRelativeJEREC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesRelativeJEREC1up() { return vvv.iFJ0jesRelativeJEREC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesRelativeJEREC1up() { return vvv.iFJ1jesRelativeJEREC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesRelativeJEREC1up() { return vvv.iFJ2jesRelativeJEREC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesRelativeJEREC1up() { return vvv.iFJ3jesRelativeJEREC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesRelativeJEREC1up() { return vvv.iFJ4jesRelativeJEREC1up(); }
const float &iVMD0jesRelativeJEREC1up() { return vvv.iVMD0jesRelativeJEREC1up(); }
const float &iVMD1jesRelativeJEREC1up() { return vvv.iVMD1jesRelativeJEREC1up(); }
const float &iVMD2jesRelativeJEREC1up() { return vvv.iVMD2jesRelativeJEREC1up(); }
const float &iVMD3jesRelativeJEREC1up() { return vvv.iVMD3jesRelativeJEREC1up(); }
const float &iVMD4jesRelativeJEREC1up() { return vvv.iVMD4jesRelativeJEREC1up(); }
const float &iWMD0jesRelativeJEREC1up() { return vvv.iWMD0jesRelativeJEREC1up(); }
const float &iWMD1jesRelativeJEREC1up() { return vvv.iWMD1jesRelativeJEREC1up(); }
const float &iWMD2jesRelativeJEREC1up() { return vvv.iWMD2jesRelativeJEREC1up(); }
const float &iWMD3jesRelativeJEREC1up() { return vvv.iWMD3jesRelativeJEREC1up(); }
const float &iWMD4jesRelativeJEREC1up() { return vvv.iWMD4jesRelativeJEREC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesRelativeJEREC1up() { return vvv.METjesRelativeJEREC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesRelativeJEREC1up() { return vvv.NujesRelativeJEREC1up(); }
const int &NJjesRelativeJEREC1up() { return vvv.NJjesRelativeJEREC1up(); }
const int &NbLoosejesRelativeJEREC1up() { return vvv.NbLoosejesRelativeJEREC1up(); }
const int &NbMediumjesRelativeJEREC1up() { return vvv.NbMediumjesRelativeJEREC1up(); }
const int &NbTightjesRelativeJEREC1up() { return vvv.NbTightjesRelativeJEREC1up(); }
const int &NoORNbLoosejesRelativeJEREC1up() { return vvv.NoORNbLoosejesRelativeJEREC1up(); }
const int &NoORNbMediumjesRelativeJEREC1up() { return vvv.NoORNbMediumjesRelativeJEREC1up(); }
const int &NoORNbTightjesRelativeJEREC1up() { return vvv.NoORNbTightjesRelativeJEREC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesRelativeJEREC1up() { return vvv.J0jesRelativeJEREC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesRelativeJEREC1up() { return vvv.J1jesRelativeJEREC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesRelativeJEREC1up() { return vvv.J2jesRelativeJEREC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesRelativeJEREC1up() { return vvv.J3jesRelativeJEREC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesRelativeJEREC1up() { return vvv.J4jesRelativeJEREC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesRelativeJEREC1up() { return vvv.J5jesRelativeJEREC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesRelativeJEREC1up() { return vvv.J6jesRelativeJEREC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesRelativeJEREC1up() { return vvv.J7jesRelativeJEREC1up(); }
const vector<int> &NQJGenjesRelativeJEREC1up() { return vvv.NQJGenjesRelativeJEREC1up(); }
const vector<int> &NBJGenjesRelativeJEREC1up() { return vvv.NBJGenjesRelativeJEREC1up(); }
const vector<int> &NLJGenjesRelativeJEREC1up() { return vvv.NLJGenjesRelativeJEREC1up(); }
const float &MVVXjesRelativeJEREC1up() { return vvv.MVVXjesRelativeJEREC1up(); }
const float &PtVVXjesRelativeJEREC1up() { return vvv.PtVVXjesRelativeJEREC1up(); }
const float &HTjesRelativeJEREC1up() { return vvv.HTjesRelativeJEREC1up(); }
const float &HTJjesRelativeJEREC1up() { return vvv.HTJjesRelativeJEREC1up(); }
const float &HTFJjesRelativeJEREC1up() { return vvv.HTFJjesRelativeJEREC1up(); }
const float &SumPtFJjesRelativeJEREC1up() { return vvv.SumPtFJjesRelativeJEREC1up(); }
const float &SumPtJjesRelativeJEREC1up() { return vvv.SumPtJjesRelativeJEREC1up(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesRelativeJEREC1dn() { return vvv.JsjesRelativeJEREC1dn(); }
const int &NFJjesRelativeJEREC1dn() { return vvv.NFJjesRelativeJEREC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesRelativeJEREC1dn() { return vvv.FJ0jesRelativeJEREC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesRelativeJEREC1dn() { return vvv.FJ1jesRelativeJEREC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesRelativeJEREC1dn() { return vvv.FJ2jesRelativeJEREC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesRelativeJEREC1dn() { return vvv.FJ3jesRelativeJEREC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesRelativeJEREC1dn() { return vvv.FJ4jesRelativeJEREC1dn(); }
const float &VMD0jesRelativeJEREC1dn() { return vvv.VMD0jesRelativeJEREC1dn(); }
const float &VMD1jesRelativeJEREC1dn() { return vvv.VMD1jesRelativeJEREC1dn(); }
const float &VMD2jesRelativeJEREC1dn() { return vvv.VMD2jesRelativeJEREC1dn(); }
const float &VMD3jesRelativeJEREC1dn() { return vvv.VMD3jesRelativeJEREC1dn(); }
const float &VMD4jesRelativeJEREC1dn() { return vvv.VMD4jesRelativeJEREC1dn(); }
const float &WMD0jesRelativeJEREC1dn() { return vvv.WMD0jesRelativeJEREC1dn(); }
const float &WMD1jesRelativeJEREC1dn() { return vvv.WMD1jesRelativeJEREC1dn(); }
const float &WMD2jesRelativeJEREC1dn() { return vvv.WMD2jesRelativeJEREC1dn(); }
const float &WMD3jesRelativeJEREC1dn() { return vvv.WMD3jesRelativeJEREC1dn(); }
const float &WMD4jesRelativeJEREC1dn() { return vvv.WMD4jesRelativeJEREC1dn(); }
const int &NQGen0jesRelativeJEREC1dn() { return vvv.NQGen0jesRelativeJEREC1dn(); }
const int &NQGen1jesRelativeJEREC1dn() { return vvv.NQGen1jesRelativeJEREC1dn(); }
const int &NQGen2jesRelativeJEREC1dn() { return vvv.NQGen2jesRelativeJEREC1dn(); }
const int &NQGen3jesRelativeJEREC1dn() { return vvv.NQGen3jesRelativeJEREC1dn(); }
const int &NQGen4jesRelativeJEREC1dn() { return vvv.NQGen4jesRelativeJEREC1dn(); }
const int &NBGen0jesRelativeJEREC1dn() { return vvv.NBGen0jesRelativeJEREC1dn(); }
const int &NBGen1jesRelativeJEREC1dn() { return vvv.NBGen1jesRelativeJEREC1dn(); }
const int &NBGen2jesRelativeJEREC1dn() { return vvv.NBGen2jesRelativeJEREC1dn(); }
const int &NBGen3jesRelativeJEREC1dn() { return vvv.NBGen3jesRelativeJEREC1dn(); }
const int &NBGen4jesRelativeJEREC1dn() { return vvv.NBGen4jesRelativeJEREC1dn(); }
const int &NLGen0jesRelativeJEREC1dn() { return vvv.NLGen0jesRelativeJEREC1dn(); }
const int &NLGen1jesRelativeJEREC1dn() { return vvv.NLGen1jesRelativeJEREC1dn(); }
const int &NLGen2jesRelativeJEREC1dn() { return vvv.NLGen2jesRelativeJEREC1dn(); }
const int &NLGen3jesRelativeJEREC1dn() { return vvv.NLGen3jesRelativeJEREC1dn(); }
const int &NLGen4jesRelativeJEREC1dn() { return vvv.NLGen4jesRelativeJEREC1dn(); }
const int &NVQGen0jesRelativeJEREC1dn() { return vvv.NVQGen0jesRelativeJEREC1dn(); }
const int &NVQGen1jesRelativeJEREC1dn() { return vvv.NVQGen1jesRelativeJEREC1dn(); }
const int &NVQGen2jesRelativeJEREC1dn() { return vvv.NVQGen2jesRelativeJEREC1dn(); }
const int &NVQGen3jesRelativeJEREC1dn() { return vvv.NVQGen3jesRelativeJEREC1dn(); }
const int &NVQGen4jesRelativeJEREC1dn() { return vvv.NVQGen4jesRelativeJEREC1dn(); }
const int &NiFJjesRelativeJEREC1dn() { return vvv.NiFJjesRelativeJEREC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesRelativeJEREC1dn() { return vvv.iFJ0jesRelativeJEREC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesRelativeJEREC1dn() { return vvv.iFJ1jesRelativeJEREC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesRelativeJEREC1dn() { return vvv.iFJ2jesRelativeJEREC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesRelativeJEREC1dn() { return vvv.iFJ3jesRelativeJEREC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesRelativeJEREC1dn() { return vvv.iFJ4jesRelativeJEREC1dn(); }
const float &iVMD0jesRelativeJEREC1dn() { return vvv.iVMD0jesRelativeJEREC1dn(); }
const float &iVMD1jesRelativeJEREC1dn() { return vvv.iVMD1jesRelativeJEREC1dn(); }
const float &iVMD2jesRelativeJEREC1dn() { return vvv.iVMD2jesRelativeJEREC1dn(); }
const float &iVMD3jesRelativeJEREC1dn() { return vvv.iVMD3jesRelativeJEREC1dn(); }
const float &iVMD4jesRelativeJEREC1dn() { return vvv.iVMD4jesRelativeJEREC1dn(); }
const float &iWMD0jesRelativeJEREC1dn() { return vvv.iWMD0jesRelativeJEREC1dn(); }
const float &iWMD1jesRelativeJEREC1dn() { return vvv.iWMD1jesRelativeJEREC1dn(); }
const float &iWMD2jesRelativeJEREC1dn() { return vvv.iWMD2jesRelativeJEREC1dn(); }
const float &iWMD3jesRelativeJEREC1dn() { return vvv.iWMD3jesRelativeJEREC1dn(); }
const float &iWMD4jesRelativeJEREC1dn() { return vvv.iWMD4jesRelativeJEREC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesRelativeJEREC1dn() { return vvv.METjesRelativeJEREC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesRelativeJEREC1dn() { return vvv.NujesRelativeJEREC1dn(); }
const int &NJjesRelativeJEREC1dn() { return vvv.NJjesRelativeJEREC1dn(); }
const int &NbLoosejesRelativeJEREC1dn() { return vvv.NbLoosejesRelativeJEREC1dn(); }
const int &NbMediumjesRelativeJEREC1dn() { return vvv.NbMediumjesRelativeJEREC1dn(); }
const int &NbTightjesRelativeJEREC1dn() { return vvv.NbTightjesRelativeJEREC1dn(); }
const int &NoORNbLoosejesRelativeJEREC1dn() { return vvv.NoORNbLoosejesRelativeJEREC1dn(); }
const int &NoORNbMediumjesRelativeJEREC1dn() { return vvv.NoORNbMediumjesRelativeJEREC1dn(); }
const int &NoORNbTightjesRelativeJEREC1dn() { return vvv.NoORNbTightjesRelativeJEREC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesRelativeJEREC1dn() { return vvv.J0jesRelativeJEREC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesRelativeJEREC1dn() { return vvv.J1jesRelativeJEREC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesRelativeJEREC1dn() { return vvv.J2jesRelativeJEREC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesRelativeJEREC1dn() { return vvv.J3jesRelativeJEREC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesRelativeJEREC1dn() { return vvv.J4jesRelativeJEREC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesRelativeJEREC1dn() { return vvv.J5jesRelativeJEREC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesRelativeJEREC1dn() { return vvv.J6jesRelativeJEREC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesRelativeJEREC1dn() { return vvv.J7jesRelativeJEREC1dn(); }
const vector<int> &NQJGenjesRelativeJEREC1dn() { return vvv.NQJGenjesRelativeJEREC1dn(); }
const vector<int> &NBJGenjesRelativeJEREC1dn() { return vvv.NBJGenjesRelativeJEREC1dn(); }
const vector<int> &NLJGenjesRelativeJEREC1dn() { return vvv.NLJGenjesRelativeJEREC1dn(); }
const float &MVVXjesRelativeJEREC1dn() { return vvv.MVVXjesRelativeJEREC1dn(); }
const float &PtVVXjesRelativeJEREC1dn() { return vvv.PtVVXjesRelativeJEREC1dn(); }
const float &HTjesRelativeJEREC1dn() { return vvv.HTjesRelativeJEREC1dn(); }
const float &HTJjesRelativeJEREC1dn() { return vvv.HTJjesRelativeJEREC1dn(); }
const float &HTFJjesRelativeJEREC1dn() { return vvv.HTFJjesRelativeJEREC1dn(); }
const float &SumPtFJjesRelativeJEREC1dn() { return vvv.SumPtFJjesRelativeJEREC1dn(); }
const float &SumPtJjesRelativeJEREC1dn() { return vvv.SumPtJjesRelativeJEREC1dn(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesRelativeJEREC2up() { return vvv.JsjesRelativeJEREC2up(); }
const int &NFJjesRelativeJEREC2up() { return vvv.NFJjesRelativeJEREC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesRelativeJEREC2up() { return vvv.FJ0jesRelativeJEREC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesRelativeJEREC2up() { return vvv.FJ1jesRelativeJEREC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesRelativeJEREC2up() { return vvv.FJ2jesRelativeJEREC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesRelativeJEREC2up() { return vvv.FJ3jesRelativeJEREC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesRelativeJEREC2up() { return vvv.FJ4jesRelativeJEREC2up(); }
const float &VMD0jesRelativeJEREC2up() { return vvv.VMD0jesRelativeJEREC2up(); }
const float &VMD1jesRelativeJEREC2up() { return vvv.VMD1jesRelativeJEREC2up(); }
const float &VMD2jesRelativeJEREC2up() { return vvv.VMD2jesRelativeJEREC2up(); }
const float &VMD3jesRelativeJEREC2up() { return vvv.VMD3jesRelativeJEREC2up(); }
const float &VMD4jesRelativeJEREC2up() { return vvv.VMD4jesRelativeJEREC2up(); }
const float &WMD0jesRelativeJEREC2up() { return vvv.WMD0jesRelativeJEREC2up(); }
const float &WMD1jesRelativeJEREC2up() { return vvv.WMD1jesRelativeJEREC2up(); }
const float &WMD2jesRelativeJEREC2up() { return vvv.WMD2jesRelativeJEREC2up(); }
const float &WMD3jesRelativeJEREC2up() { return vvv.WMD3jesRelativeJEREC2up(); }
const float &WMD4jesRelativeJEREC2up() { return vvv.WMD4jesRelativeJEREC2up(); }
const int &NQGen0jesRelativeJEREC2up() { return vvv.NQGen0jesRelativeJEREC2up(); }
const int &NQGen1jesRelativeJEREC2up() { return vvv.NQGen1jesRelativeJEREC2up(); }
const int &NQGen2jesRelativeJEREC2up() { return vvv.NQGen2jesRelativeJEREC2up(); }
const int &NQGen3jesRelativeJEREC2up() { return vvv.NQGen3jesRelativeJEREC2up(); }
const int &NQGen4jesRelativeJEREC2up() { return vvv.NQGen4jesRelativeJEREC2up(); }
const int &NBGen0jesRelativeJEREC2up() { return vvv.NBGen0jesRelativeJEREC2up(); }
const int &NBGen1jesRelativeJEREC2up() { return vvv.NBGen1jesRelativeJEREC2up(); }
const int &NBGen2jesRelativeJEREC2up() { return vvv.NBGen2jesRelativeJEREC2up(); }
const int &NBGen3jesRelativeJEREC2up() { return vvv.NBGen3jesRelativeJEREC2up(); }
const int &NBGen4jesRelativeJEREC2up() { return vvv.NBGen4jesRelativeJEREC2up(); }
const int &NLGen0jesRelativeJEREC2up() { return vvv.NLGen0jesRelativeJEREC2up(); }
const int &NLGen1jesRelativeJEREC2up() { return vvv.NLGen1jesRelativeJEREC2up(); }
const int &NLGen2jesRelativeJEREC2up() { return vvv.NLGen2jesRelativeJEREC2up(); }
const int &NLGen3jesRelativeJEREC2up() { return vvv.NLGen3jesRelativeJEREC2up(); }
const int &NLGen4jesRelativeJEREC2up() { return vvv.NLGen4jesRelativeJEREC2up(); }
const int &NVQGen0jesRelativeJEREC2up() { return vvv.NVQGen0jesRelativeJEREC2up(); }
const int &NVQGen1jesRelativeJEREC2up() { return vvv.NVQGen1jesRelativeJEREC2up(); }
const int &NVQGen2jesRelativeJEREC2up() { return vvv.NVQGen2jesRelativeJEREC2up(); }
const int &NVQGen3jesRelativeJEREC2up() { return vvv.NVQGen3jesRelativeJEREC2up(); }
const int &NVQGen4jesRelativeJEREC2up() { return vvv.NVQGen4jesRelativeJEREC2up(); }
const int &NiFJjesRelativeJEREC2up() { return vvv.NiFJjesRelativeJEREC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesRelativeJEREC2up() { return vvv.iFJ0jesRelativeJEREC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesRelativeJEREC2up() { return vvv.iFJ1jesRelativeJEREC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesRelativeJEREC2up() { return vvv.iFJ2jesRelativeJEREC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesRelativeJEREC2up() { return vvv.iFJ3jesRelativeJEREC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesRelativeJEREC2up() { return vvv.iFJ4jesRelativeJEREC2up(); }
const float &iVMD0jesRelativeJEREC2up() { return vvv.iVMD0jesRelativeJEREC2up(); }
const float &iVMD1jesRelativeJEREC2up() { return vvv.iVMD1jesRelativeJEREC2up(); }
const float &iVMD2jesRelativeJEREC2up() { return vvv.iVMD2jesRelativeJEREC2up(); }
const float &iVMD3jesRelativeJEREC2up() { return vvv.iVMD3jesRelativeJEREC2up(); }
const float &iVMD4jesRelativeJEREC2up() { return vvv.iVMD4jesRelativeJEREC2up(); }
const float &iWMD0jesRelativeJEREC2up() { return vvv.iWMD0jesRelativeJEREC2up(); }
const float &iWMD1jesRelativeJEREC2up() { return vvv.iWMD1jesRelativeJEREC2up(); }
const float &iWMD2jesRelativeJEREC2up() { return vvv.iWMD2jesRelativeJEREC2up(); }
const float &iWMD3jesRelativeJEREC2up() { return vvv.iWMD3jesRelativeJEREC2up(); }
const float &iWMD4jesRelativeJEREC2up() { return vvv.iWMD4jesRelativeJEREC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesRelativeJEREC2up() { return vvv.METjesRelativeJEREC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesRelativeJEREC2up() { return vvv.NujesRelativeJEREC2up(); }
const int &NJjesRelativeJEREC2up() { return vvv.NJjesRelativeJEREC2up(); }
const int &NbLoosejesRelativeJEREC2up() { return vvv.NbLoosejesRelativeJEREC2up(); }
const int &NbMediumjesRelativeJEREC2up() { return vvv.NbMediumjesRelativeJEREC2up(); }
const int &NbTightjesRelativeJEREC2up() { return vvv.NbTightjesRelativeJEREC2up(); }
const int &NoORNbLoosejesRelativeJEREC2up() { return vvv.NoORNbLoosejesRelativeJEREC2up(); }
const int &NoORNbMediumjesRelativeJEREC2up() { return vvv.NoORNbMediumjesRelativeJEREC2up(); }
const int &NoORNbTightjesRelativeJEREC2up() { return vvv.NoORNbTightjesRelativeJEREC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesRelativeJEREC2up() { return vvv.J0jesRelativeJEREC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesRelativeJEREC2up() { return vvv.J1jesRelativeJEREC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesRelativeJEREC2up() { return vvv.J2jesRelativeJEREC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesRelativeJEREC2up() { return vvv.J3jesRelativeJEREC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesRelativeJEREC2up() { return vvv.J4jesRelativeJEREC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesRelativeJEREC2up() { return vvv.J5jesRelativeJEREC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesRelativeJEREC2up() { return vvv.J6jesRelativeJEREC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesRelativeJEREC2up() { return vvv.J7jesRelativeJEREC2up(); }
const vector<int> &NQJGenjesRelativeJEREC2up() { return vvv.NQJGenjesRelativeJEREC2up(); }
const vector<int> &NBJGenjesRelativeJEREC2up() { return vvv.NBJGenjesRelativeJEREC2up(); }
const vector<int> &NLJGenjesRelativeJEREC2up() { return vvv.NLJGenjesRelativeJEREC2up(); }
const float &MVVXjesRelativeJEREC2up() { return vvv.MVVXjesRelativeJEREC2up(); }
const float &PtVVXjesRelativeJEREC2up() { return vvv.PtVVXjesRelativeJEREC2up(); }
const float &HTjesRelativeJEREC2up() { return vvv.HTjesRelativeJEREC2up(); }
const float &HTJjesRelativeJEREC2up() { return vvv.HTJjesRelativeJEREC2up(); }
const float &HTFJjesRelativeJEREC2up() { return vvv.HTFJjesRelativeJEREC2up(); }
const float &SumPtFJjesRelativeJEREC2up() { return vvv.SumPtFJjesRelativeJEREC2up(); }
const float &SumPtJjesRelativeJEREC2up() { return vvv.SumPtJjesRelativeJEREC2up(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesRelativeJEREC2dn() { return vvv.JsjesRelativeJEREC2dn(); }
const int &NFJjesRelativeJEREC2dn() { return vvv.NFJjesRelativeJEREC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesRelativeJEREC2dn() { return vvv.FJ0jesRelativeJEREC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesRelativeJEREC2dn() { return vvv.FJ1jesRelativeJEREC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesRelativeJEREC2dn() { return vvv.FJ2jesRelativeJEREC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesRelativeJEREC2dn() { return vvv.FJ3jesRelativeJEREC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesRelativeJEREC2dn() { return vvv.FJ4jesRelativeJEREC2dn(); }
const float &VMD0jesRelativeJEREC2dn() { return vvv.VMD0jesRelativeJEREC2dn(); }
const float &VMD1jesRelativeJEREC2dn() { return vvv.VMD1jesRelativeJEREC2dn(); }
const float &VMD2jesRelativeJEREC2dn() { return vvv.VMD2jesRelativeJEREC2dn(); }
const float &VMD3jesRelativeJEREC2dn() { return vvv.VMD3jesRelativeJEREC2dn(); }
const float &VMD4jesRelativeJEREC2dn() { return vvv.VMD4jesRelativeJEREC2dn(); }
const float &WMD0jesRelativeJEREC2dn() { return vvv.WMD0jesRelativeJEREC2dn(); }
const float &WMD1jesRelativeJEREC2dn() { return vvv.WMD1jesRelativeJEREC2dn(); }
const float &WMD2jesRelativeJEREC2dn() { return vvv.WMD2jesRelativeJEREC2dn(); }
const float &WMD3jesRelativeJEREC2dn() { return vvv.WMD3jesRelativeJEREC2dn(); }
const float &WMD4jesRelativeJEREC2dn() { return vvv.WMD4jesRelativeJEREC2dn(); }
const int &NQGen0jesRelativeJEREC2dn() { return vvv.NQGen0jesRelativeJEREC2dn(); }
const int &NQGen1jesRelativeJEREC2dn() { return vvv.NQGen1jesRelativeJEREC2dn(); }
const int &NQGen2jesRelativeJEREC2dn() { return vvv.NQGen2jesRelativeJEREC2dn(); }
const int &NQGen3jesRelativeJEREC2dn() { return vvv.NQGen3jesRelativeJEREC2dn(); }
const int &NQGen4jesRelativeJEREC2dn() { return vvv.NQGen4jesRelativeJEREC2dn(); }
const int &NBGen0jesRelativeJEREC2dn() { return vvv.NBGen0jesRelativeJEREC2dn(); }
const int &NBGen1jesRelativeJEREC2dn() { return vvv.NBGen1jesRelativeJEREC2dn(); }
const int &NBGen2jesRelativeJEREC2dn() { return vvv.NBGen2jesRelativeJEREC2dn(); }
const int &NBGen3jesRelativeJEREC2dn() { return vvv.NBGen3jesRelativeJEREC2dn(); }
const int &NBGen4jesRelativeJEREC2dn() { return vvv.NBGen4jesRelativeJEREC2dn(); }
const int &NLGen0jesRelativeJEREC2dn() { return vvv.NLGen0jesRelativeJEREC2dn(); }
const int &NLGen1jesRelativeJEREC2dn() { return vvv.NLGen1jesRelativeJEREC2dn(); }
const int &NLGen2jesRelativeJEREC2dn() { return vvv.NLGen2jesRelativeJEREC2dn(); }
const int &NLGen3jesRelativeJEREC2dn() { return vvv.NLGen3jesRelativeJEREC2dn(); }
const int &NLGen4jesRelativeJEREC2dn() { return vvv.NLGen4jesRelativeJEREC2dn(); }
const int &NVQGen0jesRelativeJEREC2dn() { return vvv.NVQGen0jesRelativeJEREC2dn(); }
const int &NVQGen1jesRelativeJEREC2dn() { return vvv.NVQGen1jesRelativeJEREC2dn(); }
const int &NVQGen2jesRelativeJEREC2dn() { return vvv.NVQGen2jesRelativeJEREC2dn(); }
const int &NVQGen3jesRelativeJEREC2dn() { return vvv.NVQGen3jesRelativeJEREC2dn(); }
const int &NVQGen4jesRelativeJEREC2dn() { return vvv.NVQGen4jesRelativeJEREC2dn(); }
const int &NiFJjesRelativeJEREC2dn() { return vvv.NiFJjesRelativeJEREC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesRelativeJEREC2dn() { return vvv.iFJ0jesRelativeJEREC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesRelativeJEREC2dn() { return vvv.iFJ1jesRelativeJEREC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesRelativeJEREC2dn() { return vvv.iFJ2jesRelativeJEREC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesRelativeJEREC2dn() { return vvv.iFJ3jesRelativeJEREC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesRelativeJEREC2dn() { return vvv.iFJ4jesRelativeJEREC2dn(); }
const float &iVMD0jesRelativeJEREC2dn() { return vvv.iVMD0jesRelativeJEREC2dn(); }
const float &iVMD1jesRelativeJEREC2dn() { return vvv.iVMD1jesRelativeJEREC2dn(); }
const float &iVMD2jesRelativeJEREC2dn() { return vvv.iVMD2jesRelativeJEREC2dn(); }
const float &iVMD3jesRelativeJEREC2dn() { return vvv.iVMD3jesRelativeJEREC2dn(); }
const float &iVMD4jesRelativeJEREC2dn() { return vvv.iVMD4jesRelativeJEREC2dn(); }
const float &iWMD0jesRelativeJEREC2dn() { return vvv.iWMD0jesRelativeJEREC2dn(); }
const float &iWMD1jesRelativeJEREC2dn() { return vvv.iWMD1jesRelativeJEREC2dn(); }
const float &iWMD2jesRelativeJEREC2dn() { return vvv.iWMD2jesRelativeJEREC2dn(); }
const float &iWMD3jesRelativeJEREC2dn() { return vvv.iWMD3jesRelativeJEREC2dn(); }
const float &iWMD4jesRelativeJEREC2dn() { return vvv.iWMD4jesRelativeJEREC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesRelativeJEREC2dn() { return vvv.METjesRelativeJEREC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesRelativeJEREC2dn() { return vvv.NujesRelativeJEREC2dn(); }
const int &NJjesRelativeJEREC2dn() { return vvv.NJjesRelativeJEREC2dn(); }
const int &NbLoosejesRelativeJEREC2dn() { return vvv.NbLoosejesRelativeJEREC2dn(); }
const int &NbMediumjesRelativeJEREC2dn() { return vvv.NbMediumjesRelativeJEREC2dn(); }
const int &NbTightjesRelativeJEREC2dn() { return vvv.NbTightjesRelativeJEREC2dn(); }
const int &NoORNbLoosejesRelativeJEREC2dn() { return vvv.NoORNbLoosejesRelativeJEREC2dn(); }
const int &NoORNbMediumjesRelativeJEREC2dn() { return vvv.NoORNbMediumjesRelativeJEREC2dn(); }
const int &NoORNbTightjesRelativeJEREC2dn() { return vvv.NoORNbTightjesRelativeJEREC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesRelativeJEREC2dn() { return vvv.J0jesRelativeJEREC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesRelativeJEREC2dn() { return vvv.J1jesRelativeJEREC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesRelativeJEREC2dn() { return vvv.J2jesRelativeJEREC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesRelativeJEREC2dn() { return vvv.J3jesRelativeJEREC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesRelativeJEREC2dn() { return vvv.J4jesRelativeJEREC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesRelativeJEREC2dn() { return vvv.J5jesRelativeJEREC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesRelativeJEREC2dn() { return vvv.J6jesRelativeJEREC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesRelativeJEREC2dn() { return vvv.J7jesRelativeJEREC2dn(); }
const vector<int> &NQJGenjesRelativeJEREC2dn() { return vvv.NQJGenjesRelativeJEREC2dn(); }
const vector<int> &NBJGenjesRelativeJEREC2dn() { return vvv.NBJGenjesRelativeJEREC2dn(); }
const vector<int> &NLJGenjesRelativeJEREC2dn() { return vvv.NLJGenjesRelativeJEREC2dn(); }
const float &MVVXjesRelativeJEREC2dn() { return vvv.MVVXjesRelativeJEREC2dn(); }
const float &PtVVXjesRelativeJEREC2dn() { return vvv.PtVVXjesRelativeJEREC2dn(); }
const float &HTjesRelativeJEREC2dn() { return vvv.HTjesRelativeJEREC2dn(); }
const float &HTJjesRelativeJEREC2dn() { return vvv.HTJjesRelativeJEREC2dn(); }
const float &HTFJjesRelativeJEREC2dn() { return vvv.HTFJjesRelativeJEREC2dn(); }
const float &SumPtFJjesRelativeJEREC2dn() { return vvv.SumPtFJjesRelativeJEREC2dn(); }
const float &SumPtJjesRelativeJEREC2dn() { return vvv.SumPtJjesRelativeJEREC2dn(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesRelativeJERHFup() { return vvv.JsjesRelativeJERHFup(); }
const int &NFJjesRelativeJERHFup() { return vvv.NFJjesRelativeJERHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesRelativeJERHFup() { return vvv.FJ0jesRelativeJERHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesRelativeJERHFup() { return vvv.FJ1jesRelativeJERHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesRelativeJERHFup() { return vvv.FJ2jesRelativeJERHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesRelativeJERHFup() { return vvv.FJ3jesRelativeJERHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesRelativeJERHFup() { return vvv.FJ4jesRelativeJERHFup(); }
const float &VMD0jesRelativeJERHFup() { return vvv.VMD0jesRelativeJERHFup(); }
const float &VMD1jesRelativeJERHFup() { return vvv.VMD1jesRelativeJERHFup(); }
const float &VMD2jesRelativeJERHFup() { return vvv.VMD2jesRelativeJERHFup(); }
const float &VMD3jesRelativeJERHFup() { return vvv.VMD3jesRelativeJERHFup(); }
const float &VMD4jesRelativeJERHFup() { return vvv.VMD4jesRelativeJERHFup(); }
const float &WMD0jesRelativeJERHFup() { return vvv.WMD0jesRelativeJERHFup(); }
const float &WMD1jesRelativeJERHFup() { return vvv.WMD1jesRelativeJERHFup(); }
const float &WMD2jesRelativeJERHFup() { return vvv.WMD2jesRelativeJERHFup(); }
const float &WMD3jesRelativeJERHFup() { return vvv.WMD3jesRelativeJERHFup(); }
const float &WMD4jesRelativeJERHFup() { return vvv.WMD4jesRelativeJERHFup(); }
const int &NQGen0jesRelativeJERHFup() { return vvv.NQGen0jesRelativeJERHFup(); }
const int &NQGen1jesRelativeJERHFup() { return vvv.NQGen1jesRelativeJERHFup(); }
const int &NQGen2jesRelativeJERHFup() { return vvv.NQGen2jesRelativeJERHFup(); }
const int &NQGen3jesRelativeJERHFup() { return vvv.NQGen3jesRelativeJERHFup(); }
const int &NQGen4jesRelativeJERHFup() { return vvv.NQGen4jesRelativeJERHFup(); }
const int &NBGen0jesRelativeJERHFup() { return vvv.NBGen0jesRelativeJERHFup(); }
const int &NBGen1jesRelativeJERHFup() { return vvv.NBGen1jesRelativeJERHFup(); }
const int &NBGen2jesRelativeJERHFup() { return vvv.NBGen2jesRelativeJERHFup(); }
const int &NBGen3jesRelativeJERHFup() { return vvv.NBGen3jesRelativeJERHFup(); }
const int &NBGen4jesRelativeJERHFup() { return vvv.NBGen4jesRelativeJERHFup(); }
const int &NLGen0jesRelativeJERHFup() { return vvv.NLGen0jesRelativeJERHFup(); }
const int &NLGen1jesRelativeJERHFup() { return vvv.NLGen1jesRelativeJERHFup(); }
const int &NLGen2jesRelativeJERHFup() { return vvv.NLGen2jesRelativeJERHFup(); }
const int &NLGen3jesRelativeJERHFup() { return vvv.NLGen3jesRelativeJERHFup(); }
const int &NLGen4jesRelativeJERHFup() { return vvv.NLGen4jesRelativeJERHFup(); }
const int &NVQGen0jesRelativeJERHFup() { return vvv.NVQGen0jesRelativeJERHFup(); }
const int &NVQGen1jesRelativeJERHFup() { return vvv.NVQGen1jesRelativeJERHFup(); }
const int &NVQGen2jesRelativeJERHFup() { return vvv.NVQGen2jesRelativeJERHFup(); }
const int &NVQGen3jesRelativeJERHFup() { return vvv.NVQGen3jesRelativeJERHFup(); }
const int &NVQGen4jesRelativeJERHFup() { return vvv.NVQGen4jesRelativeJERHFup(); }
const int &NiFJjesRelativeJERHFup() { return vvv.NiFJjesRelativeJERHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesRelativeJERHFup() { return vvv.iFJ0jesRelativeJERHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesRelativeJERHFup() { return vvv.iFJ1jesRelativeJERHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesRelativeJERHFup() { return vvv.iFJ2jesRelativeJERHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesRelativeJERHFup() { return vvv.iFJ3jesRelativeJERHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesRelativeJERHFup() { return vvv.iFJ4jesRelativeJERHFup(); }
const float &iVMD0jesRelativeJERHFup() { return vvv.iVMD0jesRelativeJERHFup(); }
const float &iVMD1jesRelativeJERHFup() { return vvv.iVMD1jesRelativeJERHFup(); }
const float &iVMD2jesRelativeJERHFup() { return vvv.iVMD2jesRelativeJERHFup(); }
const float &iVMD3jesRelativeJERHFup() { return vvv.iVMD3jesRelativeJERHFup(); }
const float &iVMD4jesRelativeJERHFup() { return vvv.iVMD4jesRelativeJERHFup(); }
const float &iWMD0jesRelativeJERHFup() { return vvv.iWMD0jesRelativeJERHFup(); }
const float &iWMD1jesRelativeJERHFup() { return vvv.iWMD1jesRelativeJERHFup(); }
const float &iWMD2jesRelativeJERHFup() { return vvv.iWMD2jesRelativeJERHFup(); }
const float &iWMD3jesRelativeJERHFup() { return vvv.iWMD3jesRelativeJERHFup(); }
const float &iWMD4jesRelativeJERHFup() { return vvv.iWMD4jesRelativeJERHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesRelativeJERHFup() { return vvv.METjesRelativeJERHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesRelativeJERHFup() { return vvv.NujesRelativeJERHFup(); }
const int &NJjesRelativeJERHFup() { return vvv.NJjesRelativeJERHFup(); }
const int &NbLoosejesRelativeJERHFup() { return vvv.NbLoosejesRelativeJERHFup(); }
const int &NbMediumjesRelativeJERHFup() { return vvv.NbMediumjesRelativeJERHFup(); }
const int &NbTightjesRelativeJERHFup() { return vvv.NbTightjesRelativeJERHFup(); }
const int &NoORNbLoosejesRelativeJERHFup() { return vvv.NoORNbLoosejesRelativeJERHFup(); }
const int &NoORNbMediumjesRelativeJERHFup() { return vvv.NoORNbMediumjesRelativeJERHFup(); }
const int &NoORNbTightjesRelativeJERHFup() { return vvv.NoORNbTightjesRelativeJERHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesRelativeJERHFup() { return vvv.J0jesRelativeJERHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesRelativeJERHFup() { return vvv.J1jesRelativeJERHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesRelativeJERHFup() { return vvv.J2jesRelativeJERHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesRelativeJERHFup() { return vvv.J3jesRelativeJERHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesRelativeJERHFup() { return vvv.J4jesRelativeJERHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesRelativeJERHFup() { return vvv.J5jesRelativeJERHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesRelativeJERHFup() { return vvv.J6jesRelativeJERHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesRelativeJERHFup() { return vvv.J7jesRelativeJERHFup(); }
const vector<int> &NQJGenjesRelativeJERHFup() { return vvv.NQJGenjesRelativeJERHFup(); }
const vector<int> &NBJGenjesRelativeJERHFup() { return vvv.NBJGenjesRelativeJERHFup(); }
const vector<int> &NLJGenjesRelativeJERHFup() { return vvv.NLJGenjesRelativeJERHFup(); }
const float &MVVXjesRelativeJERHFup() { return vvv.MVVXjesRelativeJERHFup(); }
const float &PtVVXjesRelativeJERHFup() { return vvv.PtVVXjesRelativeJERHFup(); }
const float &HTjesRelativeJERHFup() { return vvv.HTjesRelativeJERHFup(); }
const float &HTJjesRelativeJERHFup() { return vvv.HTJjesRelativeJERHFup(); }
const float &HTFJjesRelativeJERHFup() { return vvv.HTFJjesRelativeJERHFup(); }
const float &SumPtFJjesRelativeJERHFup() { return vvv.SumPtFJjesRelativeJERHFup(); }
const float &SumPtJjesRelativeJERHFup() { return vvv.SumPtJjesRelativeJERHFup(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesRelativeJERHFdn() { return vvv.JsjesRelativeJERHFdn(); }
const int &NFJjesRelativeJERHFdn() { return vvv.NFJjesRelativeJERHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesRelativeJERHFdn() { return vvv.FJ0jesRelativeJERHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesRelativeJERHFdn() { return vvv.FJ1jesRelativeJERHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesRelativeJERHFdn() { return vvv.FJ2jesRelativeJERHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesRelativeJERHFdn() { return vvv.FJ3jesRelativeJERHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesRelativeJERHFdn() { return vvv.FJ4jesRelativeJERHFdn(); }
const float &VMD0jesRelativeJERHFdn() { return vvv.VMD0jesRelativeJERHFdn(); }
const float &VMD1jesRelativeJERHFdn() { return vvv.VMD1jesRelativeJERHFdn(); }
const float &VMD2jesRelativeJERHFdn() { return vvv.VMD2jesRelativeJERHFdn(); }
const float &VMD3jesRelativeJERHFdn() { return vvv.VMD3jesRelativeJERHFdn(); }
const float &VMD4jesRelativeJERHFdn() { return vvv.VMD4jesRelativeJERHFdn(); }
const float &WMD0jesRelativeJERHFdn() { return vvv.WMD0jesRelativeJERHFdn(); }
const float &WMD1jesRelativeJERHFdn() { return vvv.WMD1jesRelativeJERHFdn(); }
const float &WMD2jesRelativeJERHFdn() { return vvv.WMD2jesRelativeJERHFdn(); }
const float &WMD3jesRelativeJERHFdn() { return vvv.WMD3jesRelativeJERHFdn(); }
const float &WMD4jesRelativeJERHFdn() { return vvv.WMD4jesRelativeJERHFdn(); }
const int &NQGen0jesRelativeJERHFdn() { return vvv.NQGen0jesRelativeJERHFdn(); }
const int &NQGen1jesRelativeJERHFdn() { return vvv.NQGen1jesRelativeJERHFdn(); }
const int &NQGen2jesRelativeJERHFdn() { return vvv.NQGen2jesRelativeJERHFdn(); }
const int &NQGen3jesRelativeJERHFdn() { return vvv.NQGen3jesRelativeJERHFdn(); }
const int &NQGen4jesRelativeJERHFdn() { return vvv.NQGen4jesRelativeJERHFdn(); }
const int &NBGen0jesRelativeJERHFdn() { return vvv.NBGen0jesRelativeJERHFdn(); }
const int &NBGen1jesRelativeJERHFdn() { return vvv.NBGen1jesRelativeJERHFdn(); }
const int &NBGen2jesRelativeJERHFdn() { return vvv.NBGen2jesRelativeJERHFdn(); }
const int &NBGen3jesRelativeJERHFdn() { return vvv.NBGen3jesRelativeJERHFdn(); }
const int &NBGen4jesRelativeJERHFdn() { return vvv.NBGen4jesRelativeJERHFdn(); }
const int &NLGen0jesRelativeJERHFdn() { return vvv.NLGen0jesRelativeJERHFdn(); }
const int &NLGen1jesRelativeJERHFdn() { return vvv.NLGen1jesRelativeJERHFdn(); }
const int &NLGen2jesRelativeJERHFdn() { return vvv.NLGen2jesRelativeJERHFdn(); }
const int &NLGen3jesRelativeJERHFdn() { return vvv.NLGen3jesRelativeJERHFdn(); }
const int &NLGen4jesRelativeJERHFdn() { return vvv.NLGen4jesRelativeJERHFdn(); }
const int &NVQGen0jesRelativeJERHFdn() { return vvv.NVQGen0jesRelativeJERHFdn(); }
const int &NVQGen1jesRelativeJERHFdn() { return vvv.NVQGen1jesRelativeJERHFdn(); }
const int &NVQGen2jesRelativeJERHFdn() { return vvv.NVQGen2jesRelativeJERHFdn(); }
const int &NVQGen3jesRelativeJERHFdn() { return vvv.NVQGen3jesRelativeJERHFdn(); }
const int &NVQGen4jesRelativeJERHFdn() { return vvv.NVQGen4jesRelativeJERHFdn(); }
const int &NiFJjesRelativeJERHFdn() { return vvv.NiFJjesRelativeJERHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesRelativeJERHFdn() { return vvv.iFJ0jesRelativeJERHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesRelativeJERHFdn() { return vvv.iFJ1jesRelativeJERHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesRelativeJERHFdn() { return vvv.iFJ2jesRelativeJERHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesRelativeJERHFdn() { return vvv.iFJ3jesRelativeJERHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesRelativeJERHFdn() { return vvv.iFJ4jesRelativeJERHFdn(); }
const float &iVMD0jesRelativeJERHFdn() { return vvv.iVMD0jesRelativeJERHFdn(); }
const float &iVMD1jesRelativeJERHFdn() { return vvv.iVMD1jesRelativeJERHFdn(); }
const float &iVMD2jesRelativeJERHFdn() { return vvv.iVMD2jesRelativeJERHFdn(); }
const float &iVMD3jesRelativeJERHFdn() { return vvv.iVMD3jesRelativeJERHFdn(); }
const float &iVMD4jesRelativeJERHFdn() { return vvv.iVMD4jesRelativeJERHFdn(); }
const float &iWMD0jesRelativeJERHFdn() { return vvv.iWMD0jesRelativeJERHFdn(); }
const float &iWMD1jesRelativeJERHFdn() { return vvv.iWMD1jesRelativeJERHFdn(); }
const float &iWMD2jesRelativeJERHFdn() { return vvv.iWMD2jesRelativeJERHFdn(); }
const float &iWMD3jesRelativeJERHFdn() { return vvv.iWMD3jesRelativeJERHFdn(); }
const float &iWMD4jesRelativeJERHFdn() { return vvv.iWMD4jesRelativeJERHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesRelativeJERHFdn() { return vvv.METjesRelativeJERHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesRelativeJERHFdn() { return vvv.NujesRelativeJERHFdn(); }
const int &NJjesRelativeJERHFdn() { return vvv.NJjesRelativeJERHFdn(); }
const int &NbLoosejesRelativeJERHFdn() { return vvv.NbLoosejesRelativeJERHFdn(); }
const int &NbMediumjesRelativeJERHFdn() { return vvv.NbMediumjesRelativeJERHFdn(); }
const int &NbTightjesRelativeJERHFdn() { return vvv.NbTightjesRelativeJERHFdn(); }
const int &NoORNbLoosejesRelativeJERHFdn() { return vvv.NoORNbLoosejesRelativeJERHFdn(); }
const int &NoORNbMediumjesRelativeJERHFdn() { return vvv.NoORNbMediumjesRelativeJERHFdn(); }
const int &NoORNbTightjesRelativeJERHFdn() { return vvv.NoORNbTightjesRelativeJERHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesRelativeJERHFdn() { return vvv.J0jesRelativeJERHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesRelativeJERHFdn() { return vvv.J1jesRelativeJERHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesRelativeJERHFdn() { return vvv.J2jesRelativeJERHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesRelativeJERHFdn() { return vvv.J3jesRelativeJERHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesRelativeJERHFdn() { return vvv.J4jesRelativeJERHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesRelativeJERHFdn() { return vvv.J5jesRelativeJERHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesRelativeJERHFdn() { return vvv.J6jesRelativeJERHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesRelativeJERHFdn() { return vvv.J7jesRelativeJERHFdn(); }
const vector<int> &NQJGenjesRelativeJERHFdn() { return vvv.NQJGenjesRelativeJERHFdn(); }
const vector<int> &NBJGenjesRelativeJERHFdn() { return vvv.NBJGenjesRelativeJERHFdn(); }
const vector<int> &NLJGenjesRelativeJERHFdn() { return vvv.NLJGenjesRelativeJERHFdn(); }
const float &MVVXjesRelativeJERHFdn() { return vvv.MVVXjesRelativeJERHFdn(); }
const float &PtVVXjesRelativeJERHFdn() { return vvv.PtVVXjesRelativeJERHFdn(); }
const float &HTjesRelativeJERHFdn() { return vvv.HTjesRelativeJERHFdn(); }
const float &HTJjesRelativeJERHFdn() { return vvv.HTJjesRelativeJERHFdn(); }
const float &HTFJjesRelativeJERHFdn() { return vvv.HTFJjesRelativeJERHFdn(); }
const float &SumPtFJjesRelativeJERHFdn() { return vvv.SumPtFJjesRelativeJERHFdn(); }
const float &SumPtJjesRelativeJERHFdn() { return vvv.SumPtJjesRelativeJERHFdn(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesRelativePtBBup() { return vvv.JsjesRelativePtBBup(); }
const int &NFJjesRelativePtBBup() { return vvv.NFJjesRelativePtBBup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesRelativePtBBup() { return vvv.FJ0jesRelativePtBBup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesRelativePtBBup() { return vvv.FJ1jesRelativePtBBup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesRelativePtBBup() { return vvv.FJ2jesRelativePtBBup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesRelativePtBBup() { return vvv.FJ3jesRelativePtBBup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesRelativePtBBup() { return vvv.FJ4jesRelativePtBBup(); }
const float &VMD0jesRelativePtBBup() { return vvv.VMD0jesRelativePtBBup(); }
const float &VMD1jesRelativePtBBup() { return vvv.VMD1jesRelativePtBBup(); }
const float &VMD2jesRelativePtBBup() { return vvv.VMD2jesRelativePtBBup(); }
const float &VMD3jesRelativePtBBup() { return vvv.VMD3jesRelativePtBBup(); }
const float &VMD4jesRelativePtBBup() { return vvv.VMD4jesRelativePtBBup(); }
const float &WMD0jesRelativePtBBup() { return vvv.WMD0jesRelativePtBBup(); }
const float &WMD1jesRelativePtBBup() { return vvv.WMD1jesRelativePtBBup(); }
const float &WMD2jesRelativePtBBup() { return vvv.WMD2jesRelativePtBBup(); }
const float &WMD3jesRelativePtBBup() { return vvv.WMD3jesRelativePtBBup(); }
const float &WMD4jesRelativePtBBup() { return vvv.WMD4jesRelativePtBBup(); }
const int &NQGen0jesRelativePtBBup() { return vvv.NQGen0jesRelativePtBBup(); }
const int &NQGen1jesRelativePtBBup() { return vvv.NQGen1jesRelativePtBBup(); }
const int &NQGen2jesRelativePtBBup() { return vvv.NQGen2jesRelativePtBBup(); }
const int &NQGen3jesRelativePtBBup() { return vvv.NQGen3jesRelativePtBBup(); }
const int &NQGen4jesRelativePtBBup() { return vvv.NQGen4jesRelativePtBBup(); }
const int &NBGen0jesRelativePtBBup() { return vvv.NBGen0jesRelativePtBBup(); }
const int &NBGen1jesRelativePtBBup() { return vvv.NBGen1jesRelativePtBBup(); }
const int &NBGen2jesRelativePtBBup() { return vvv.NBGen2jesRelativePtBBup(); }
const int &NBGen3jesRelativePtBBup() { return vvv.NBGen3jesRelativePtBBup(); }
const int &NBGen4jesRelativePtBBup() { return vvv.NBGen4jesRelativePtBBup(); }
const int &NLGen0jesRelativePtBBup() { return vvv.NLGen0jesRelativePtBBup(); }
const int &NLGen1jesRelativePtBBup() { return vvv.NLGen1jesRelativePtBBup(); }
const int &NLGen2jesRelativePtBBup() { return vvv.NLGen2jesRelativePtBBup(); }
const int &NLGen3jesRelativePtBBup() { return vvv.NLGen3jesRelativePtBBup(); }
const int &NLGen4jesRelativePtBBup() { return vvv.NLGen4jesRelativePtBBup(); }
const int &NVQGen0jesRelativePtBBup() { return vvv.NVQGen0jesRelativePtBBup(); }
const int &NVQGen1jesRelativePtBBup() { return vvv.NVQGen1jesRelativePtBBup(); }
const int &NVQGen2jesRelativePtBBup() { return vvv.NVQGen2jesRelativePtBBup(); }
const int &NVQGen3jesRelativePtBBup() { return vvv.NVQGen3jesRelativePtBBup(); }
const int &NVQGen4jesRelativePtBBup() { return vvv.NVQGen4jesRelativePtBBup(); }
const int &NiFJjesRelativePtBBup() { return vvv.NiFJjesRelativePtBBup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesRelativePtBBup() { return vvv.iFJ0jesRelativePtBBup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesRelativePtBBup() { return vvv.iFJ1jesRelativePtBBup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesRelativePtBBup() { return vvv.iFJ2jesRelativePtBBup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesRelativePtBBup() { return vvv.iFJ3jesRelativePtBBup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesRelativePtBBup() { return vvv.iFJ4jesRelativePtBBup(); }
const float &iVMD0jesRelativePtBBup() { return vvv.iVMD0jesRelativePtBBup(); }
const float &iVMD1jesRelativePtBBup() { return vvv.iVMD1jesRelativePtBBup(); }
const float &iVMD2jesRelativePtBBup() { return vvv.iVMD2jesRelativePtBBup(); }
const float &iVMD3jesRelativePtBBup() { return vvv.iVMD3jesRelativePtBBup(); }
const float &iVMD4jesRelativePtBBup() { return vvv.iVMD4jesRelativePtBBup(); }
const float &iWMD0jesRelativePtBBup() { return vvv.iWMD0jesRelativePtBBup(); }
const float &iWMD1jesRelativePtBBup() { return vvv.iWMD1jesRelativePtBBup(); }
const float &iWMD2jesRelativePtBBup() { return vvv.iWMD2jesRelativePtBBup(); }
const float &iWMD3jesRelativePtBBup() { return vvv.iWMD3jesRelativePtBBup(); }
const float &iWMD4jesRelativePtBBup() { return vvv.iWMD4jesRelativePtBBup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesRelativePtBBup() { return vvv.METjesRelativePtBBup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesRelativePtBBup() { return vvv.NujesRelativePtBBup(); }
const int &NJjesRelativePtBBup() { return vvv.NJjesRelativePtBBup(); }
const int &NbLoosejesRelativePtBBup() { return vvv.NbLoosejesRelativePtBBup(); }
const int &NbMediumjesRelativePtBBup() { return vvv.NbMediumjesRelativePtBBup(); }
const int &NbTightjesRelativePtBBup() { return vvv.NbTightjesRelativePtBBup(); }
const int &NoORNbLoosejesRelativePtBBup() { return vvv.NoORNbLoosejesRelativePtBBup(); }
const int &NoORNbMediumjesRelativePtBBup() { return vvv.NoORNbMediumjesRelativePtBBup(); }
const int &NoORNbTightjesRelativePtBBup() { return vvv.NoORNbTightjesRelativePtBBup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesRelativePtBBup() { return vvv.J0jesRelativePtBBup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesRelativePtBBup() { return vvv.J1jesRelativePtBBup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesRelativePtBBup() { return vvv.J2jesRelativePtBBup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesRelativePtBBup() { return vvv.J3jesRelativePtBBup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesRelativePtBBup() { return vvv.J4jesRelativePtBBup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesRelativePtBBup() { return vvv.J5jesRelativePtBBup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesRelativePtBBup() { return vvv.J6jesRelativePtBBup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesRelativePtBBup() { return vvv.J7jesRelativePtBBup(); }
const vector<int> &NQJGenjesRelativePtBBup() { return vvv.NQJGenjesRelativePtBBup(); }
const vector<int> &NBJGenjesRelativePtBBup() { return vvv.NBJGenjesRelativePtBBup(); }
const vector<int> &NLJGenjesRelativePtBBup() { return vvv.NLJGenjesRelativePtBBup(); }
const float &MVVXjesRelativePtBBup() { return vvv.MVVXjesRelativePtBBup(); }
const float &PtVVXjesRelativePtBBup() { return vvv.PtVVXjesRelativePtBBup(); }
const float &HTjesRelativePtBBup() { return vvv.HTjesRelativePtBBup(); }
const float &HTJjesRelativePtBBup() { return vvv.HTJjesRelativePtBBup(); }
const float &HTFJjesRelativePtBBup() { return vvv.HTFJjesRelativePtBBup(); }
const float &SumPtFJjesRelativePtBBup() { return vvv.SumPtFJjesRelativePtBBup(); }
const float &SumPtJjesRelativePtBBup() { return vvv.SumPtJjesRelativePtBBup(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesRelativePtBBdn() { return vvv.JsjesRelativePtBBdn(); }
const int &NFJjesRelativePtBBdn() { return vvv.NFJjesRelativePtBBdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesRelativePtBBdn() { return vvv.FJ0jesRelativePtBBdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesRelativePtBBdn() { return vvv.FJ1jesRelativePtBBdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesRelativePtBBdn() { return vvv.FJ2jesRelativePtBBdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesRelativePtBBdn() { return vvv.FJ3jesRelativePtBBdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesRelativePtBBdn() { return vvv.FJ4jesRelativePtBBdn(); }
const float &VMD0jesRelativePtBBdn() { return vvv.VMD0jesRelativePtBBdn(); }
const float &VMD1jesRelativePtBBdn() { return vvv.VMD1jesRelativePtBBdn(); }
const float &VMD2jesRelativePtBBdn() { return vvv.VMD2jesRelativePtBBdn(); }
const float &VMD3jesRelativePtBBdn() { return vvv.VMD3jesRelativePtBBdn(); }
const float &VMD4jesRelativePtBBdn() { return vvv.VMD4jesRelativePtBBdn(); }
const float &WMD0jesRelativePtBBdn() { return vvv.WMD0jesRelativePtBBdn(); }
const float &WMD1jesRelativePtBBdn() { return vvv.WMD1jesRelativePtBBdn(); }
const float &WMD2jesRelativePtBBdn() { return vvv.WMD2jesRelativePtBBdn(); }
const float &WMD3jesRelativePtBBdn() { return vvv.WMD3jesRelativePtBBdn(); }
const float &WMD4jesRelativePtBBdn() { return vvv.WMD4jesRelativePtBBdn(); }
const int &NQGen0jesRelativePtBBdn() { return vvv.NQGen0jesRelativePtBBdn(); }
const int &NQGen1jesRelativePtBBdn() { return vvv.NQGen1jesRelativePtBBdn(); }
const int &NQGen2jesRelativePtBBdn() { return vvv.NQGen2jesRelativePtBBdn(); }
const int &NQGen3jesRelativePtBBdn() { return vvv.NQGen3jesRelativePtBBdn(); }
const int &NQGen4jesRelativePtBBdn() { return vvv.NQGen4jesRelativePtBBdn(); }
const int &NBGen0jesRelativePtBBdn() { return vvv.NBGen0jesRelativePtBBdn(); }
const int &NBGen1jesRelativePtBBdn() { return vvv.NBGen1jesRelativePtBBdn(); }
const int &NBGen2jesRelativePtBBdn() { return vvv.NBGen2jesRelativePtBBdn(); }
const int &NBGen3jesRelativePtBBdn() { return vvv.NBGen3jesRelativePtBBdn(); }
const int &NBGen4jesRelativePtBBdn() { return vvv.NBGen4jesRelativePtBBdn(); }
const int &NLGen0jesRelativePtBBdn() { return vvv.NLGen0jesRelativePtBBdn(); }
const int &NLGen1jesRelativePtBBdn() { return vvv.NLGen1jesRelativePtBBdn(); }
const int &NLGen2jesRelativePtBBdn() { return vvv.NLGen2jesRelativePtBBdn(); }
const int &NLGen3jesRelativePtBBdn() { return vvv.NLGen3jesRelativePtBBdn(); }
const int &NLGen4jesRelativePtBBdn() { return vvv.NLGen4jesRelativePtBBdn(); }
const int &NVQGen0jesRelativePtBBdn() { return vvv.NVQGen0jesRelativePtBBdn(); }
const int &NVQGen1jesRelativePtBBdn() { return vvv.NVQGen1jesRelativePtBBdn(); }
const int &NVQGen2jesRelativePtBBdn() { return vvv.NVQGen2jesRelativePtBBdn(); }
const int &NVQGen3jesRelativePtBBdn() { return vvv.NVQGen3jesRelativePtBBdn(); }
const int &NVQGen4jesRelativePtBBdn() { return vvv.NVQGen4jesRelativePtBBdn(); }
const int &NiFJjesRelativePtBBdn() { return vvv.NiFJjesRelativePtBBdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesRelativePtBBdn() { return vvv.iFJ0jesRelativePtBBdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesRelativePtBBdn() { return vvv.iFJ1jesRelativePtBBdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesRelativePtBBdn() { return vvv.iFJ2jesRelativePtBBdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesRelativePtBBdn() { return vvv.iFJ3jesRelativePtBBdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesRelativePtBBdn() { return vvv.iFJ4jesRelativePtBBdn(); }
const float &iVMD0jesRelativePtBBdn() { return vvv.iVMD0jesRelativePtBBdn(); }
const float &iVMD1jesRelativePtBBdn() { return vvv.iVMD1jesRelativePtBBdn(); }
const float &iVMD2jesRelativePtBBdn() { return vvv.iVMD2jesRelativePtBBdn(); }
const float &iVMD3jesRelativePtBBdn() { return vvv.iVMD3jesRelativePtBBdn(); }
const float &iVMD4jesRelativePtBBdn() { return vvv.iVMD4jesRelativePtBBdn(); }
const float &iWMD0jesRelativePtBBdn() { return vvv.iWMD0jesRelativePtBBdn(); }
const float &iWMD1jesRelativePtBBdn() { return vvv.iWMD1jesRelativePtBBdn(); }
const float &iWMD2jesRelativePtBBdn() { return vvv.iWMD2jesRelativePtBBdn(); }
const float &iWMD3jesRelativePtBBdn() { return vvv.iWMD3jesRelativePtBBdn(); }
const float &iWMD4jesRelativePtBBdn() { return vvv.iWMD4jesRelativePtBBdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesRelativePtBBdn() { return vvv.METjesRelativePtBBdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesRelativePtBBdn() { return vvv.NujesRelativePtBBdn(); }
const int &NJjesRelativePtBBdn() { return vvv.NJjesRelativePtBBdn(); }
const int &NbLoosejesRelativePtBBdn() { return vvv.NbLoosejesRelativePtBBdn(); }
const int &NbMediumjesRelativePtBBdn() { return vvv.NbMediumjesRelativePtBBdn(); }
const int &NbTightjesRelativePtBBdn() { return vvv.NbTightjesRelativePtBBdn(); }
const int &NoORNbLoosejesRelativePtBBdn() { return vvv.NoORNbLoosejesRelativePtBBdn(); }
const int &NoORNbMediumjesRelativePtBBdn() { return vvv.NoORNbMediumjesRelativePtBBdn(); }
const int &NoORNbTightjesRelativePtBBdn() { return vvv.NoORNbTightjesRelativePtBBdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesRelativePtBBdn() { return vvv.J0jesRelativePtBBdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesRelativePtBBdn() { return vvv.J1jesRelativePtBBdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesRelativePtBBdn() { return vvv.J2jesRelativePtBBdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesRelativePtBBdn() { return vvv.J3jesRelativePtBBdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesRelativePtBBdn() { return vvv.J4jesRelativePtBBdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesRelativePtBBdn() { return vvv.J5jesRelativePtBBdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesRelativePtBBdn() { return vvv.J6jesRelativePtBBdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesRelativePtBBdn() { return vvv.J7jesRelativePtBBdn(); }
const vector<int> &NQJGenjesRelativePtBBdn() { return vvv.NQJGenjesRelativePtBBdn(); }
const vector<int> &NBJGenjesRelativePtBBdn() { return vvv.NBJGenjesRelativePtBBdn(); }
const vector<int> &NLJGenjesRelativePtBBdn() { return vvv.NLJGenjesRelativePtBBdn(); }
const float &MVVXjesRelativePtBBdn() { return vvv.MVVXjesRelativePtBBdn(); }
const float &PtVVXjesRelativePtBBdn() { return vvv.PtVVXjesRelativePtBBdn(); }
const float &HTjesRelativePtBBdn() { return vvv.HTjesRelativePtBBdn(); }
const float &HTJjesRelativePtBBdn() { return vvv.HTJjesRelativePtBBdn(); }
const float &HTFJjesRelativePtBBdn() { return vvv.HTFJjesRelativePtBBdn(); }
const float &SumPtFJjesRelativePtBBdn() { return vvv.SumPtFJjesRelativePtBBdn(); }
const float &SumPtJjesRelativePtBBdn() { return vvv.SumPtJjesRelativePtBBdn(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesRelativePtEC1up() { return vvv.JsjesRelativePtEC1up(); }
const int &NFJjesRelativePtEC1up() { return vvv.NFJjesRelativePtEC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesRelativePtEC1up() { return vvv.FJ0jesRelativePtEC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesRelativePtEC1up() { return vvv.FJ1jesRelativePtEC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesRelativePtEC1up() { return vvv.FJ2jesRelativePtEC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesRelativePtEC1up() { return vvv.FJ3jesRelativePtEC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesRelativePtEC1up() { return vvv.FJ4jesRelativePtEC1up(); }
const float &VMD0jesRelativePtEC1up() { return vvv.VMD0jesRelativePtEC1up(); }
const float &VMD1jesRelativePtEC1up() { return vvv.VMD1jesRelativePtEC1up(); }
const float &VMD2jesRelativePtEC1up() { return vvv.VMD2jesRelativePtEC1up(); }
const float &VMD3jesRelativePtEC1up() { return vvv.VMD3jesRelativePtEC1up(); }
const float &VMD4jesRelativePtEC1up() { return vvv.VMD4jesRelativePtEC1up(); }
const float &WMD0jesRelativePtEC1up() { return vvv.WMD0jesRelativePtEC1up(); }
const float &WMD1jesRelativePtEC1up() { return vvv.WMD1jesRelativePtEC1up(); }
const float &WMD2jesRelativePtEC1up() { return vvv.WMD2jesRelativePtEC1up(); }
const float &WMD3jesRelativePtEC1up() { return vvv.WMD3jesRelativePtEC1up(); }
const float &WMD4jesRelativePtEC1up() { return vvv.WMD4jesRelativePtEC1up(); }
const int &NQGen0jesRelativePtEC1up() { return vvv.NQGen0jesRelativePtEC1up(); }
const int &NQGen1jesRelativePtEC1up() { return vvv.NQGen1jesRelativePtEC1up(); }
const int &NQGen2jesRelativePtEC1up() { return vvv.NQGen2jesRelativePtEC1up(); }
const int &NQGen3jesRelativePtEC1up() { return vvv.NQGen3jesRelativePtEC1up(); }
const int &NQGen4jesRelativePtEC1up() { return vvv.NQGen4jesRelativePtEC1up(); }
const int &NBGen0jesRelativePtEC1up() { return vvv.NBGen0jesRelativePtEC1up(); }
const int &NBGen1jesRelativePtEC1up() { return vvv.NBGen1jesRelativePtEC1up(); }
const int &NBGen2jesRelativePtEC1up() { return vvv.NBGen2jesRelativePtEC1up(); }
const int &NBGen3jesRelativePtEC1up() { return vvv.NBGen3jesRelativePtEC1up(); }
const int &NBGen4jesRelativePtEC1up() { return vvv.NBGen4jesRelativePtEC1up(); }
const int &NLGen0jesRelativePtEC1up() { return vvv.NLGen0jesRelativePtEC1up(); }
const int &NLGen1jesRelativePtEC1up() { return vvv.NLGen1jesRelativePtEC1up(); }
const int &NLGen2jesRelativePtEC1up() { return vvv.NLGen2jesRelativePtEC1up(); }
const int &NLGen3jesRelativePtEC1up() { return vvv.NLGen3jesRelativePtEC1up(); }
const int &NLGen4jesRelativePtEC1up() { return vvv.NLGen4jesRelativePtEC1up(); }
const int &NVQGen0jesRelativePtEC1up() { return vvv.NVQGen0jesRelativePtEC1up(); }
const int &NVQGen1jesRelativePtEC1up() { return vvv.NVQGen1jesRelativePtEC1up(); }
const int &NVQGen2jesRelativePtEC1up() { return vvv.NVQGen2jesRelativePtEC1up(); }
const int &NVQGen3jesRelativePtEC1up() { return vvv.NVQGen3jesRelativePtEC1up(); }
const int &NVQGen4jesRelativePtEC1up() { return vvv.NVQGen4jesRelativePtEC1up(); }
const int &NiFJjesRelativePtEC1up() { return vvv.NiFJjesRelativePtEC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesRelativePtEC1up() { return vvv.iFJ0jesRelativePtEC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesRelativePtEC1up() { return vvv.iFJ1jesRelativePtEC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesRelativePtEC1up() { return vvv.iFJ2jesRelativePtEC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesRelativePtEC1up() { return vvv.iFJ3jesRelativePtEC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesRelativePtEC1up() { return vvv.iFJ4jesRelativePtEC1up(); }
const float &iVMD0jesRelativePtEC1up() { return vvv.iVMD0jesRelativePtEC1up(); }
const float &iVMD1jesRelativePtEC1up() { return vvv.iVMD1jesRelativePtEC1up(); }
const float &iVMD2jesRelativePtEC1up() { return vvv.iVMD2jesRelativePtEC1up(); }
const float &iVMD3jesRelativePtEC1up() { return vvv.iVMD3jesRelativePtEC1up(); }
const float &iVMD4jesRelativePtEC1up() { return vvv.iVMD4jesRelativePtEC1up(); }
const float &iWMD0jesRelativePtEC1up() { return vvv.iWMD0jesRelativePtEC1up(); }
const float &iWMD1jesRelativePtEC1up() { return vvv.iWMD1jesRelativePtEC1up(); }
const float &iWMD2jesRelativePtEC1up() { return vvv.iWMD2jesRelativePtEC1up(); }
const float &iWMD3jesRelativePtEC1up() { return vvv.iWMD3jesRelativePtEC1up(); }
const float &iWMD4jesRelativePtEC1up() { return vvv.iWMD4jesRelativePtEC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesRelativePtEC1up() { return vvv.METjesRelativePtEC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesRelativePtEC1up() { return vvv.NujesRelativePtEC1up(); }
const int &NJjesRelativePtEC1up() { return vvv.NJjesRelativePtEC1up(); }
const int &NbLoosejesRelativePtEC1up() { return vvv.NbLoosejesRelativePtEC1up(); }
const int &NbMediumjesRelativePtEC1up() { return vvv.NbMediumjesRelativePtEC1up(); }
const int &NbTightjesRelativePtEC1up() { return vvv.NbTightjesRelativePtEC1up(); }
const int &NoORNbLoosejesRelativePtEC1up() { return vvv.NoORNbLoosejesRelativePtEC1up(); }
const int &NoORNbMediumjesRelativePtEC1up() { return vvv.NoORNbMediumjesRelativePtEC1up(); }
const int &NoORNbTightjesRelativePtEC1up() { return vvv.NoORNbTightjesRelativePtEC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesRelativePtEC1up() { return vvv.J0jesRelativePtEC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesRelativePtEC1up() { return vvv.J1jesRelativePtEC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesRelativePtEC1up() { return vvv.J2jesRelativePtEC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesRelativePtEC1up() { return vvv.J3jesRelativePtEC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesRelativePtEC1up() { return vvv.J4jesRelativePtEC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesRelativePtEC1up() { return vvv.J5jesRelativePtEC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesRelativePtEC1up() { return vvv.J6jesRelativePtEC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesRelativePtEC1up() { return vvv.J7jesRelativePtEC1up(); }
const vector<int> &NQJGenjesRelativePtEC1up() { return vvv.NQJGenjesRelativePtEC1up(); }
const vector<int> &NBJGenjesRelativePtEC1up() { return vvv.NBJGenjesRelativePtEC1up(); }
const vector<int> &NLJGenjesRelativePtEC1up() { return vvv.NLJGenjesRelativePtEC1up(); }
const float &MVVXjesRelativePtEC1up() { return vvv.MVVXjesRelativePtEC1up(); }
const float &PtVVXjesRelativePtEC1up() { return vvv.PtVVXjesRelativePtEC1up(); }
const float &HTjesRelativePtEC1up() { return vvv.HTjesRelativePtEC1up(); }
const float &HTJjesRelativePtEC1up() { return vvv.HTJjesRelativePtEC1up(); }
const float &HTFJjesRelativePtEC1up() { return vvv.HTFJjesRelativePtEC1up(); }
const float &SumPtFJjesRelativePtEC1up() { return vvv.SumPtFJjesRelativePtEC1up(); }
const float &SumPtJjesRelativePtEC1up() { return vvv.SumPtJjesRelativePtEC1up(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesRelativePtEC1dn() { return vvv.JsjesRelativePtEC1dn(); }
const int &NFJjesRelativePtEC1dn() { return vvv.NFJjesRelativePtEC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesRelativePtEC1dn() { return vvv.FJ0jesRelativePtEC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesRelativePtEC1dn() { return vvv.FJ1jesRelativePtEC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesRelativePtEC1dn() { return vvv.FJ2jesRelativePtEC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesRelativePtEC1dn() { return vvv.FJ3jesRelativePtEC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesRelativePtEC1dn() { return vvv.FJ4jesRelativePtEC1dn(); }
const float &VMD0jesRelativePtEC1dn() { return vvv.VMD0jesRelativePtEC1dn(); }
const float &VMD1jesRelativePtEC1dn() { return vvv.VMD1jesRelativePtEC1dn(); }
const float &VMD2jesRelativePtEC1dn() { return vvv.VMD2jesRelativePtEC1dn(); }
const float &VMD3jesRelativePtEC1dn() { return vvv.VMD3jesRelativePtEC1dn(); }
const float &VMD4jesRelativePtEC1dn() { return vvv.VMD4jesRelativePtEC1dn(); }
const float &WMD0jesRelativePtEC1dn() { return vvv.WMD0jesRelativePtEC1dn(); }
const float &WMD1jesRelativePtEC1dn() { return vvv.WMD1jesRelativePtEC1dn(); }
const float &WMD2jesRelativePtEC1dn() { return vvv.WMD2jesRelativePtEC1dn(); }
const float &WMD3jesRelativePtEC1dn() { return vvv.WMD3jesRelativePtEC1dn(); }
const float &WMD4jesRelativePtEC1dn() { return vvv.WMD4jesRelativePtEC1dn(); }
const int &NQGen0jesRelativePtEC1dn() { return vvv.NQGen0jesRelativePtEC1dn(); }
const int &NQGen1jesRelativePtEC1dn() { return vvv.NQGen1jesRelativePtEC1dn(); }
const int &NQGen2jesRelativePtEC1dn() { return vvv.NQGen2jesRelativePtEC1dn(); }
const int &NQGen3jesRelativePtEC1dn() { return vvv.NQGen3jesRelativePtEC1dn(); }
const int &NQGen4jesRelativePtEC1dn() { return vvv.NQGen4jesRelativePtEC1dn(); }
const int &NBGen0jesRelativePtEC1dn() { return vvv.NBGen0jesRelativePtEC1dn(); }
const int &NBGen1jesRelativePtEC1dn() { return vvv.NBGen1jesRelativePtEC1dn(); }
const int &NBGen2jesRelativePtEC1dn() { return vvv.NBGen2jesRelativePtEC1dn(); }
const int &NBGen3jesRelativePtEC1dn() { return vvv.NBGen3jesRelativePtEC1dn(); }
const int &NBGen4jesRelativePtEC1dn() { return vvv.NBGen4jesRelativePtEC1dn(); }
const int &NLGen0jesRelativePtEC1dn() { return vvv.NLGen0jesRelativePtEC1dn(); }
const int &NLGen1jesRelativePtEC1dn() { return vvv.NLGen1jesRelativePtEC1dn(); }
const int &NLGen2jesRelativePtEC1dn() { return vvv.NLGen2jesRelativePtEC1dn(); }
const int &NLGen3jesRelativePtEC1dn() { return vvv.NLGen3jesRelativePtEC1dn(); }
const int &NLGen4jesRelativePtEC1dn() { return vvv.NLGen4jesRelativePtEC1dn(); }
const int &NVQGen0jesRelativePtEC1dn() { return vvv.NVQGen0jesRelativePtEC1dn(); }
const int &NVQGen1jesRelativePtEC1dn() { return vvv.NVQGen1jesRelativePtEC1dn(); }
const int &NVQGen2jesRelativePtEC1dn() { return vvv.NVQGen2jesRelativePtEC1dn(); }
const int &NVQGen3jesRelativePtEC1dn() { return vvv.NVQGen3jesRelativePtEC1dn(); }
const int &NVQGen4jesRelativePtEC1dn() { return vvv.NVQGen4jesRelativePtEC1dn(); }
const int &NiFJjesRelativePtEC1dn() { return vvv.NiFJjesRelativePtEC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesRelativePtEC1dn() { return vvv.iFJ0jesRelativePtEC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesRelativePtEC1dn() { return vvv.iFJ1jesRelativePtEC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesRelativePtEC1dn() { return vvv.iFJ2jesRelativePtEC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesRelativePtEC1dn() { return vvv.iFJ3jesRelativePtEC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesRelativePtEC1dn() { return vvv.iFJ4jesRelativePtEC1dn(); }
const float &iVMD0jesRelativePtEC1dn() { return vvv.iVMD0jesRelativePtEC1dn(); }
const float &iVMD1jesRelativePtEC1dn() { return vvv.iVMD1jesRelativePtEC1dn(); }
const float &iVMD2jesRelativePtEC1dn() { return vvv.iVMD2jesRelativePtEC1dn(); }
const float &iVMD3jesRelativePtEC1dn() { return vvv.iVMD3jesRelativePtEC1dn(); }
const float &iVMD4jesRelativePtEC1dn() { return vvv.iVMD4jesRelativePtEC1dn(); }
const float &iWMD0jesRelativePtEC1dn() { return vvv.iWMD0jesRelativePtEC1dn(); }
const float &iWMD1jesRelativePtEC1dn() { return vvv.iWMD1jesRelativePtEC1dn(); }
const float &iWMD2jesRelativePtEC1dn() { return vvv.iWMD2jesRelativePtEC1dn(); }
const float &iWMD3jesRelativePtEC1dn() { return vvv.iWMD3jesRelativePtEC1dn(); }
const float &iWMD4jesRelativePtEC1dn() { return vvv.iWMD4jesRelativePtEC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesRelativePtEC1dn() { return vvv.METjesRelativePtEC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesRelativePtEC1dn() { return vvv.NujesRelativePtEC1dn(); }
const int &NJjesRelativePtEC1dn() { return vvv.NJjesRelativePtEC1dn(); }
const int &NbLoosejesRelativePtEC1dn() { return vvv.NbLoosejesRelativePtEC1dn(); }
const int &NbMediumjesRelativePtEC1dn() { return vvv.NbMediumjesRelativePtEC1dn(); }
const int &NbTightjesRelativePtEC1dn() { return vvv.NbTightjesRelativePtEC1dn(); }
const int &NoORNbLoosejesRelativePtEC1dn() { return vvv.NoORNbLoosejesRelativePtEC1dn(); }
const int &NoORNbMediumjesRelativePtEC1dn() { return vvv.NoORNbMediumjesRelativePtEC1dn(); }
const int &NoORNbTightjesRelativePtEC1dn() { return vvv.NoORNbTightjesRelativePtEC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesRelativePtEC1dn() { return vvv.J0jesRelativePtEC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesRelativePtEC1dn() { return vvv.J1jesRelativePtEC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesRelativePtEC1dn() { return vvv.J2jesRelativePtEC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesRelativePtEC1dn() { return vvv.J3jesRelativePtEC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesRelativePtEC1dn() { return vvv.J4jesRelativePtEC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesRelativePtEC1dn() { return vvv.J5jesRelativePtEC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesRelativePtEC1dn() { return vvv.J6jesRelativePtEC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesRelativePtEC1dn() { return vvv.J7jesRelativePtEC1dn(); }
const vector<int> &NQJGenjesRelativePtEC1dn() { return vvv.NQJGenjesRelativePtEC1dn(); }
const vector<int> &NBJGenjesRelativePtEC1dn() { return vvv.NBJGenjesRelativePtEC1dn(); }
const vector<int> &NLJGenjesRelativePtEC1dn() { return vvv.NLJGenjesRelativePtEC1dn(); }
const float &MVVXjesRelativePtEC1dn() { return vvv.MVVXjesRelativePtEC1dn(); }
const float &PtVVXjesRelativePtEC1dn() { return vvv.PtVVXjesRelativePtEC1dn(); }
const float &HTjesRelativePtEC1dn() { return vvv.HTjesRelativePtEC1dn(); }
const float &HTJjesRelativePtEC1dn() { return vvv.HTJjesRelativePtEC1dn(); }
const float &HTFJjesRelativePtEC1dn() { return vvv.HTFJjesRelativePtEC1dn(); }
const float &SumPtFJjesRelativePtEC1dn() { return vvv.SumPtFJjesRelativePtEC1dn(); }
const float &SumPtJjesRelativePtEC1dn() { return vvv.SumPtJjesRelativePtEC1dn(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesRelativePtEC2up() { return vvv.JsjesRelativePtEC2up(); }
const int &NFJjesRelativePtEC2up() { return vvv.NFJjesRelativePtEC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesRelativePtEC2up() { return vvv.FJ0jesRelativePtEC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesRelativePtEC2up() { return vvv.FJ1jesRelativePtEC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesRelativePtEC2up() { return vvv.FJ2jesRelativePtEC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesRelativePtEC2up() { return vvv.FJ3jesRelativePtEC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesRelativePtEC2up() { return vvv.FJ4jesRelativePtEC2up(); }
const float &VMD0jesRelativePtEC2up() { return vvv.VMD0jesRelativePtEC2up(); }
const float &VMD1jesRelativePtEC2up() { return vvv.VMD1jesRelativePtEC2up(); }
const float &VMD2jesRelativePtEC2up() { return vvv.VMD2jesRelativePtEC2up(); }
const float &VMD3jesRelativePtEC2up() { return vvv.VMD3jesRelativePtEC2up(); }
const float &VMD4jesRelativePtEC2up() { return vvv.VMD4jesRelativePtEC2up(); }
const float &WMD0jesRelativePtEC2up() { return vvv.WMD0jesRelativePtEC2up(); }
const float &WMD1jesRelativePtEC2up() { return vvv.WMD1jesRelativePtEC2up(); }
const float &WMD2jesRelativePtEC2up() { return vvv.WMD2jesRelativePtEC2up(); }
const float &WMD3jesRelativePtEC2up() { return vvv.WMD3jesRelativePtEC2up(); }
const float &WMD4jesRelativePtEC2up() { return vvv.WMD4jesRelativePtEC2up(); }
const int &NQGen0jesRelativePtEC2up() { return vvv.NQGen0jesRelativePtEC2up(); }
const int &NQGen1jesRelativePtEC2up() { return vvv.NQGen1jesRelativePtEC2up(); }
const int &NQGen2jesRelativePtEC2up() { return vvv.NQGen2jesRelativePtEC2up(); }
const int &NQGen3jesRelativePtEC2up() { return vvv.NQGen3jesRelativePtEC2up(); }
const int &NQGen4jesRelativePtEC2up() { return vvv.NQGen4jesRelativePtEC2up(); }
const int &NBGen0jesRelativePtEC2up() { return vvv.NBGen0jesRelativePtEC2up(); }
const int &NBGen1jesRelativePtEC2up() { return vvv.NBGen1jesRelativePtEC2up(); }
const int &NBGen2jesRelativePtEC2up() { return vvv.NBGen2jesRelativePtEC2up(); }
const int &NBGen3jesRelativePtEC2up() { return vvv.NBGen3jesRelativePtEC2up(); }
const int &NBGen4jesRelativePtEC2up() { return vvv.NBGen4jesRelativePtEC2up(); }
const int &NLGen0jesRelativePtEC2up() { return vvv.NLGen0jesRelativePtEC2up(); }
const int &NLGen1jesRelativePtEC2up() { return vvv.NLGen1jesRelativePtEC2up(); }
const int &NLGen2jesRelativePtEC2up() { return vvv.NLGen2jesRelativePtEC2up(); }
const int &NLGen3jesRelativePtEC2up() { return vvv.NLGen3jesRelativePtEC2up(); }
const int &NLGen4jesRelativePtEC2up() { return vvv.NLGen4jesRelativePtEC2up(); }
const int &NVQGen0jesRelativePtEC2up() { return vvv.NVQGen0jesRelativePtEC2up(); }
const int &NVQGen1jesRelativePtEC2up() { return vvv.NVQGen1jesRelativePtEC2up(); }
const int &NVQGen2jesRelativePtEC2up() { return vvv.NVQGen2jesRelativePtEC2up(); }
const int &NVQGen3jesRelativePtEC2up() { return vvv.NVQGen3jesRelativePtEC2up(); }
const int &NVQGen4jesRelativePtEC2up() { return vvv.NVQGen4jesRelativePtEC2up(); }
const int &NiFJjesRelativePtEC2up() { return vvv.NiFJjesRelativePtEC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesRelativePtEC2up() { return vvv.iFJ0jesRelativePtEC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesRelativePtEC2up() { return vvv.iFJ1jesRelativePtEC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesRelativePtEC2up() { return vvv.iFJ2jesRelativePtEC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesRelativePtEC2up() { return vvv.iFJ3jesRelativePtEC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesRelativePtEC2up() { return vvv.iFJ4jesRelativePtEC2up(); }
const float &iVMD0jesRelativePtEC2up() { return vvv.iVMD0jesRelativePtEC2up(); }
const float &iVMD1jesRelativePtEC2up() { return vvv.iVMD1jesRelativePtEC2up(); }
const float &iVMD2jesRelativePtEC2up() { return vvv.iVMD2jesRelativePtEC2up(); }
const float &iVMD3jesRelativePtEC2up() { return vvv.iVMD3jesRelativePtEC2up(); }
const float &iVMD4jesRelativePtEC2up() { return vvv.iVMD4jesRelativePtEC2up(); }
const float &iWMD0jesRelativePtEC2up() { return vvv.iWMD0jesRelativePtEC2up(); }
const float &iWMD1jesRelativePtEC2up() { return vvv.iWMD1jesRelativePtEC2up(); }
const float &iWMD2jesRelativePtEC2up() { return vvv.iWMD2jesRelativePtEC2up(); }
const float &iWMD3jesRelativePtEC2up() { return vvv.iWMD3jesRelativePtEC2up(); }
const float &iWMD4jesRelativePtEC2up() { return vvv.iWMD4jesRelativePtEC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesRelativePtEC2up() { return vvv.METjesRelativePtEC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesRelativePtEC2up() { return vvv.NujesRelativePtEC2up(); }
const int &NJjesRelativePtEC2up() { return vvv.NJjesRelativePtEC2up(); }
const int &NbLoosejesRelativePtEC2up() { return vvv.NbLoosejesRelativePtEC2up(); }
const int &NbMediumjesRelativePtEC2up() { return vvv.NbMediumjesRelativePtEC2up(); }
const int &NbTightjesRelativePtEC2up() { return vvv.NbTightjesRelativePtEC2up(); }
const int &NoORNbLoosejesRelativePtEC2up() { return vvv.NoORNbLoosejesRelativePtEC2up(); }
const int &NoORNbMediumjesRelativePtEC2up() { return vvv.NoORNbMediumjesRelativePtEC2up(); }
const int &NoORNbTightjesRelativePtEC2up() { return vvv.NoORNbTightjesRelativePtEC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesRelativePtEC2up() { return vvv.J0jesRelativePtEC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesRelativePtEC2up() { return vvv.J1jesRelativePtEC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesRelativePtEC2up() { return vvv.J2jesRelativePtEC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesRelativePtEC2up() { return vvv.J3jesRelativePtEC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesRelativePtEC2up() { return vvv.J4jesRelativePtEC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesRelativePtEC2up() { return vvv.J5jesRelativePtEC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesRelativePtEC2up() { return vvv.J6jesRelativePtEC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesRelativePtEC2up() { return vvv.J7jesRelativePtEC2up(); }
const vector<int> &NQJGenjesRelativePtEC2up() { return vvv.NQJGenjesRelativePtEC2up(); }
const vector<int> &NBJGenjesRelativePtEC2up() { return vvv.NBJGenjesRelativePtEC2up(); }
const vector<int> &NLJGenjesRelativePtEC2up() { return vvv.NLJGenjesRelativePtEC2up(); }
const float &MVVXjesRelativePtEC2up() { return vvv.MVVXjesRelativePtEC2up(); }
const float &PtVVXjesRelativePtEC2up() { return vvv.PtVVXjesRelativePtEC2up(); }
const float &HTjesRelativePtEC2up() { return vvv.HTjesRelativePtEC2up(); }
const float &HTJjesRelativePtEC2up() { return vvv.HTJjesRelativePtEC2up(); }
const float &HTFJjesRelativePtEC2up() { return vvv.HTFJjesRelativePtEC2up(); }
const float &SumPtFJjesRelativePtEC2up() { return vvv.SumPtFJjesRelativePtEC2up(); }
const float &SumPtJjesRelativePtEC2up() { return vvv.SumPtJjesRelativePtEC2up(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesRelativePtEC2dn() { return vvv.JsjesRelativePtEC2dn(); }
const int &NFJjesRelativePtEC2dn() { return vvv.NFJjesRelativePtEC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesRelativePtEC2dn() { return vvv.FJ0jesRelativePtEC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesRelativePtEC2dn() { return vvv.FJ1jesRelativePtEC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesRelativePtEC2dn() { return vvv.FJ2jesRelativePtEC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesRelativePtEC2dn() { return vvv.FJ3jesRelativePtEC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesRelativePtEC2dn() { return vvv.FJ4jesRelativePtEC2dn(); }
const float &VMD0jesRelativePtEC2dn() { return vvv.VMD0jesRelativePtEC2dn(); }
const float &VMD1jesRelativePtEC2dn() { return vvv.VMD1jesRelativePtEC2dn(); }
const float &VMD2jesRelativePtEC2dn() { return vvv.VMD2jesRelativePtEC2dn(); }
const float &VMD3jesRelativePtEC2dn() { return vvv.VMD3jesRelativePtEC2dn(); }
const float &VMD4jesRelativePtEC2dn() { return vvv.VMD4jesRelativePtEC2dn(); }
const float &WMD0jesRelativePtEC2dn() { return vvv.WMD0jesRelativePtEC2dn(); }
const float &WMD1jesRelativePtEC2dn() { return vvv.WMD1jesRelativePtEC2dn(); }
const float &WMD2jesRelativePtEC2dn() { return vvv.WMD2jesRelativePtEC2dn(); }
const float &WMD3jesRelativePtEC2dn() { return vvv.WMD3jesRelativePtEC2dn(); }
const float &WMD4jesRelativePtEC2dn() { return vvv.WMD4jesRelativePtEC2dn(); }
const int &NQGen0jesRelativePtEC2dn() { return vvv.NQGen0jesRelativePtEC2dn(); }
const int &NQGen1jesRelativePtEC2dn() { return vvv.NQGen1jesRelativePtEC2dn(); }
const int &NQGen2jesRelativePtEC2dn() { return vvv.NQGen2jesRelativePtEC2dn(); }
const int &NQGen3jesRelativePtEC2dn() { return vvv.NQGen3jesRelativePtEC2dn(); }
const int &NQGen4jesRelativePtEC2dn() { return vvv.NQGen4jesRelativePtEC2dn(); }
const int &NBGen0jesRelativePtEC2dn() { return vvv.NBGen0jesRelativePtEC2dn(); }
const int &NBGen1jesRelativePtEC2dn() { return vvv.NBGen1jesRelativePtEC2dn(); }
const int &NBGen2jesRelativePtEC2dn() { return vvv.NBGen2jesRelativePtEC2dn(); }
const int &NBGen3jesRelativePtEC2dn() { return vvv.NBGen3jesRelativePtEC2dn(); }
const int &NBGen4jesRelativePtEC2dn() { return vvv.NBGen4jesRelativePtEC2dn(); }
const int &NLGen0jesRelativePtEC2dn() { return vvv.NLGen0jesRelativePtEC2dn(); }
const int &NLGen1jesRelativePtEC2dn() { return vvv.NLGen1jesRelativePtEC2dn(); }
const int &NLGen2jesRelativePtEC2dn() { return vvv.NLGen2jesRelativePtEC2dn(); }
const int &NLGen3jesRelativePtEC2dn() { return vvv.NLGen3jesRelativePtEC2dn(); }
const int &NLGen4jesRelativePtEC2dn() { return vvv.NLGen4jesRelativePtEC2dn(); }
const int &NVQGen0jesRelativePtEC2dn() { return vvv.NVQGen0jesRelativePtEC2dn(); }
const int &NVQGen1jesRelativePtEC2dn() { return vvv.NVQGen1jesRelativePtEC2dn(); }
const int &NVQGen2jesRelativePtEC2dn() { return vvv.NVQGen2jesRelativePtEC2dn(); }
const int &NVQGen3jesRelativePtEC2dn() { return vvv.NVQGen3jesRelativePtEC2dn(); }
const int &NVQGen4jesRelativePtEC2dn() { return vvv.NVQGen4jesRelativePtEC2dn(); }
const int &NiFJjesRelativePtEC2dn() { return vvv.NiFJjesRelativePtEC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesRelativePtEC2dn() { return vvv.iFJ0jesRelativePtEC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesRelativePtEC2dn() { return vvv.iFJ1jesRelativePtEC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesRelativePtEC2dn() { return vvv.iFJ2jesRelativePtEC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesRelativePtEC2dn() { return vvv.iFJ3jesRelativePtEC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesRelativePtEC2dn() { return vvv.iFJ4jesRelativePtEC2dn(); }
const float &iVMD0jesRelativePtEC2dn() { return vvv.iVMD0jesRelativePtEC2dn(); }
const float &iVMD1jesRelativePtEC2dn() { return vvv.iVMD1jesRelativePtEC2dn(); }
const float &iVMD2jesRelativePtEC2dn() { return vvv.iVMD2jesRelativePtEC2dn(); }
const float &iVMD3jesRelativePtEC2dn() { return vvv.iVMD3jesRelativePtEC2dn(); }
const float &iVMD4jesRelativePtEC2dn() { return vvv.iVMD4jesRelativePtEC2dn(); }
const float &iWMD0jesRelativePtEC2dn() { return vvv.iWMD0jesRelativePtEC2dn(); }
const float &iWMD1jesRelativePtEC2dn() { return vvv.iWMD1jesRelativePtEC2dn(); }
const float &iWMD2jesRelativePtEC2dn() { return vvv.iWMD2jesRelativePtEC2dn(); }
const float &iWMD3jesRelativePtEC2dn() { return vvv.iWMD3jesRelativePtEC2dn(); }
const float &iWMD4jesRelativePtEC2dn() { return vvv.iWMD4jesRelativePtEC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesRelativePtEC2dn() { return vvv.METjesRelativePtEC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesRelativePtEC2dn() { return vvv.NujesRelativePtEC2dn(); }
const int &NJjesRelativePtEC2dn() { return vvv.NJjesRelativePtEC2dn(); }
const int &NbLoosejesRelativePtEC2dn() { return vvv.NbLoosejesRelativePtEC2dn(); }
const int &NbMediumjesRelativePtEC2dn() { return vvv.NbMediumjesRelativePtEC2dn(); }
const int &NbTightjesRelativePtEC2dn() { return vvv.NbTightjesRelativePtEC2dn(); }
const int &NoORNbLoosejesRelativePtEC2dn() { return vvv.NoORNbLoosejesRelativePtEC2dn(); }
const int &NoORNbMediumjesRelativePtEC2dn() { return vvv.NoORNbMediumjesRelativePtEC2dn(); }
const int &NoORNbTightjesRelativePtEC2dn() { return vvv.NoORNbTightjesRelativePtEC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesRelativePtEC2dn() { return vvv.J0jesRelativePtEC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesRelativePtEC2dn() { return vvv.J1jesRelativePtEC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesRelativePtEC2dn() { return vvv.J2jesRelativePtEC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesRelativePtEC2dn() { return vvv.J3jesRelativePtEC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesRelativePtEC2dn() { return vvv.J4jesRelativePtEC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesRelativePtEC2dn() { return vvv.J5jesRelativePtEC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesRelativePtEC2dn() { return vvv.J6jesRelativePtEC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesRelativePtEC2dn() { return vvv.J7jesRelativePtEC2dn(); }
const vector<int> &NQJGenjesRelativePtEC2dn() { return vvv.NQJGenjesRelativePtEC2dn(); }
const vector<int> &NBJGenjesRelativePtEC2dn() { return vvv.NBJGenjesRelativePtEC2dn(); }
const vector<int> &NLJGenjesRelativePtEC2dn() { return vvv.NLJGenjesRelativePtEC2dn(); }
const float &MVVXjesRelativePtEC2dn() { return vvv.MVVXjesRelativePtEC2dn(); }
const float &PtVVXjesRelativePtEC2dn() { return vvv.PtVVXjesRelativePtEC2dn(); }
const float &HTjesRelativePtEC2dn() { return vvv.HTjesRelativePtEC2dn(); }
const float &HTJjesRelativePtEC2dn() { return vvv.HTJjesRelativePtEC2dn(); }
const float &HTFJjesRelativePtEC2dn() { return vvv.HTFJjesRelativePtEC2dn(); }
const float &SumPtFJjesRelativePtEC2dn() { return vvv.SumPtFJjesRelativePtEC2dn(); }
const float &SumPtJjesRelativePtEC2dn() { return vvv.SumPtJjesRelativePtEC2dn(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesRelativePtHFup() { return vvv.JsjesRelativePtHFup(); }
const int &NFJjesRelativePtHFup() { return vvv.NFJjesRelativePtHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesRelativePtHFup() { return vvv.FJ0jesRelativePtHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesRelativePtHFup() { return vvv.FJ1jesRelativePtHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesRelativePtHFup() { return vvv.FJ2jesRelativePtHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesRelativePtHFup() { return vvv.FJ3jesRelativePtHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesRelativePtHFup() { return vvv.FJ4jesRelativePtHFup(); }
const float &VMD0jesRelativePtHFup() { return vvv.VMD0jesRelativePtHFup(); }
const float &VMD1jesRelativePtHFup() { return vvv.VMD1jesRelativePtHFup(); }
const float &VMD2jesRelativePtHFup() { return vvv.VMD2jesRelativePtHFup(); }
const float &VMD3jesRelativePtHFup() { return vvv.VMD3jesRelativePtHFup(); }
const float &VMD4jesRelativePtHFup() { return vvv.VMD4jesRelativePtHFup(); }
const float &WMD0jesRelativePtHFup() { return vvv.WMD0jesRelativePtHFup(); }
const float &WMD1jesRelativePtHFup() { return vvv.WMD1jesRelativePtHFup(); }
const float &WMD2jesRelativePtHFup() { return vvv.WMD2jesRelativePtHFup(); }
const float &WMD3jesRelativePtHFup() { return vvv.WMD3jesRelativePtHFup(); }
const float &WMD4jesRelativePtHFup() { return vvv.WMD4jesRelativePtHFup(); }
const int &NQGen0jesRelativePtHFup() { return vvv.NQGen0jesRelativePtHFup(); }
const int &NQGen1jesRelativePtHFup() { return vvv.NQGen1jesRelativePtHFup(); }
const int &NQGen2jesRelativePtHFup() { return vvv.NQGen2jesRelativePtHFup(); }
const int &NQGen3jesRelativePtHFup() { return vvv.NQGen3jesRelativePtHFup(); }
const int &NQGen4jesRelativePtHFup() { return vvv.NQGen4jesRelativePtHFup(); }
const int &NBGen0jesRelativePtHFup() { return vvv.NBGen0jesRelativePtHFup(); }
const int &NBGen1jesRelativePtHFup() { return vvv.NBGen1jesRelativePtHFup(); }
const int &NBGen2jesRelativePtHFup() { return vvv.NBGen2jesRelativePtHFup(); }
const int &NBGen3jesRelativePtHFup() { return vvv.NBGen3jesRelativePtHFup(); }
const int &NBGen4jesRelativePtHFup() { return vvv.NBGen4jesRelativePtHFup(); }
const int &NLGen0jesRelativePtHFup() { return vvv.NLGen0jesRelativePtHFup(); }
const int &NLGen1jesRelativePtHFup() { return vvv.NLGen1jesRelativePtHFup(); }
const int &NLGen2jesRelativePtHFup() { return vvv.NLGen2jesRelativePtHFup(); }
const int &NLGen3jesRelativePtHFup() { return vvv.NLGen3jesRelativePtHFup(); }
const int &NLGen4jesRelativePtHFup() { return vvv.NLGen4jesRelativePtHFup(); }
const int &NVQGen0jesRelativePtHFup() { return vvv.NVQGen0jesRelativePtHFup(); }
const int &NVQGen1jesRelativePtHFup() { return vvv.NVQGen1jesRelativePtHFup(); }
const int &NVQGen2jesRelativePtHFup() { return vvv.NVQGen2jesRelativePtHFup(); }
const int &NVQGen3jesRelativePtHFup() { return vvv.NVQGen3jesRelativePtHFup(); }
const int &NVQGen4jesRelativePtHFup() { return vvv.NVQGen4jesRelativePtHFup(); }
const int &NiFJjesRelativePtHFup() { return vvv.NiFJjesRelativePtHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesRelativePtHFup() { return vvv.iFJ0jesRelativePtHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesRelativePtHFup() { return vvv.iFJ1jesRelativePtHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesRelativePtHFup() { return vvv.iFJ2jesRelativePtHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesRelativePtHFup() { return vvv.iFJ3jesRelativePtHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesRelativePtHFup() { return vvv.iFJ4jesRelativePtHFup(); }
const float &iVMD0jesRelativePtHFup() { return vvv.iVMD0jesRelativePtHFup(); }
const float &iVMD1jesRelativePtHFup() { return vvv.iVMD1jesRelativePtHFup(); }
const float &iVMD2jesRelativePtHFup() { return vvv.iVMD2jesRelativePtHFup(); }
const float &iVMD3jesRelativePtHFup() { return vvv.iVMD3jesRelativePtHFup(); }
const float &iVMD4jesRelativePtHFup() { return vvv.iVMD4jesRelativePtHFup(); }
const float &iWMD0jesRelativePtHFup() { return vvv.iWMD0jesRelativePtHFup(); }
const float &iWMD1jesRelativePtHFup() { return vvv.iWMD1jesRelativePtHFup(); }
const float &iWMD2jesRelativePtHFup() { return vvv.iWMD2jesRelativePtHFup(); }
const float &iWMD3jesRelativePtHFup() { return vvv.iWMD3jesRelativePtHFup(); }
const float &iWMD4jesRelativePtHFup() { return vvv.iWMD4jesRelativePtHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesRelativePtHFup() { return vvv.METjesRelativePtHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesRelativePtHFup() { return vvv.NujesRelativePtHFup(); }
const int &NJjesRelativePtHFup() { return vvv.NJjesRelativePtHFup(); }
const int &NbLoosejesRelativePtHFup() { return vvv.NbLoosejesRelativePtHFup(); }
const int &NbMediumjesRelativePtHFup() { return vvv.NbMediumjesRelativePtHFup(); }
const int &NbTightjesRelativePtHFup() { return vvv.NbTightjesRelativePtHFup(); }
const int &NoORNbLoosejesRelativePtHFup() { return vvv.NoORNbLoosejesRelativePtHFup(); }
const int &NoORNbMediumjesRelativePtHFup() { return vvv.NoORNbMediumjesRelativePtHFup(); }
const int &NoORNbTightjesRelativePtHFup() { return vvv.NoORNbTightjesRelativePtHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesRelativePtHFup() { return vvv.J0jesRelativePtHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesRelativePtHFup() { return vvv.J1jesRelativePtHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesRelativePtHFup() { return vvv.J2jesRelativePtHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesRelativePtHFup() { return vvv.J3jesRelativePtHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesRelativePtHFup() { return vvv.J4jesRelativePtHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesRelativePtHFup() { return vvv.J5jesRelativePtHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesRelativePtHFup() { return vvv.J6jesRelativePtHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesRelativePtHFup() { return vvv.J7jesRelativePtHFup(); }
const vector<int> &NQJGenjesRelativePtHFup() { return vvv.NQJGenjesRelativePtHFup(); }
const vector<int> &NBJGenjesRelativePtHFup() { return vvv.NBJGenjesRelativePtHFup(); }
const vector<int> &NLJGenjesRelativePtHFup() { return vvv.NLJGenjesRelativePtHFup(); }
const float &MVVXjesRelativePtHFup() { return vvv.MVVXjesRelativePtHFup(); }
const float &PtVVXjesRelativePtHFup() { return vvv.PtVVXjesRelativePtHFup(); }
const float &HTjesRelativePtHFup() { return vvv.HTjesRelativePtHFup(); }
const float &HTJjesRelativePtHFup() { return vvv.HTJjesRelativePtHFup(); }
const float &HTFJjesRelativePtHFup() { return vvv.HTFJjesRelativePtHFup(); }
const float &SumPtFJjesRelativePtHFup() { return vvv.SumPtFJjesRelativePtHFup(); }
const float &SumPtJjesRelativePtHFup() { return vvv.SumPtJjesRelativePtHFup(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesRelativePtHFdn() { return vvv.JsjesRelativePtHFdn(); }
const int &NFJjesRelativePtHFdn() { return vvv.NFJjesRelativePtHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesRelativePtHFdn() { return vvv.FJ0jesRelativePtHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesRelativePtHFdn() { return vvv.FJ1jesRelativePtHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesRelativePtHFdn() { return vvv.FJ2jesRelativePtHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesRelativePtHFdn() { return vvv.FJ3jesRelativePtHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesRelativePtHFdn() { return vvv.FJ4jesRelativePtHFdn(); }
const float &VMD0jesRelativePtHFdn() { return vvv.VMD0jesRelativePtHFdn(); }
const float &VMD1jesRelativePtHFdn() { return vvv.VMD1jesRelativePtHFdn(); }
const float &VMD2jesRelativePtHFdn() { return vvv.VMD2jesRelativePtHFdn(); }
const float &VMD3jesRelativePtHFdn() { return vvv.VMD3jesRelativePtHFdn(); }
const float &VMD4jesRelativePtHFdn() { return vvv.VMD4jesRelativePtHFdn(); }
const float &WMD0jesRelativePtHFdn() { return vvv.WMD0jesRelativePtHFdn(); }
const float &WMD1jesRelativePtHFdn() { return vvv.WMD1jesRelativePtHFdn(); }
const float &WMD2jesRelativePtHFdn() { return vvv.WMD2jesRelativePtHFdn(); }
const float &WMD3jesRelativePtHFdn() { return vvv.WMD3jesRelativePtHFdn(); }
const float &WMD4jesRelativePtHFdn() { return vvv.WMD4jesRelativePtHFdn(); }
const int &NQGen0jesRelativePtHFdn() { return vvv.NQGen0jesRelativePtHFdn(); }
const int &NQGen1jesRelativePtHFdn() { return vvv.NQGen1jesRelativePtHFdn(); }
const int &NQGen2jesRelativePtHFdn() { return vvv.NQGen2jesRelativePtHFdn(); }
const int &NQGen3jesRelativePtHFdn() { return vvv.NQGen3jesRelativePtHFdn(); }
const int &NQGen4jesRelativePtHFdn() { return vvv.NQGen4jesRelativePtHFdn(); }
const int &NBGen0jesRelativePtHFdn() { return vvv.NBGen0jesRelativePtHFdn(); }
const int &NBGen1jesRelativePtHFdn() { return vvv.NBGen1jesRelativePtHFdn(); }
const int &NBGen2jesRelativePtHFdn() { return vvv.NBGen2jesRelativePtHFdn(); }
const int &NBGen3jesRelativePtHFdn() { return vvv.NBGen3jesRelativePtHFdn(); }
const int &NBGen4jesRelativePtHFdn() { return vvv.NBGen4jesRelativePtHFdn(); }
const int &NLGen0jesRelativePtHFdn() { return vvv.NLGen0jesRelativePtHFdn(); }
const int &NLGen1jesRelativePtHFdn() { return vvv.NLGen1jesRelativePtHFdn(); }
const int &NLGen2jesRelativePtHFdn() { return vvv.NLGen2jesRelativePtHFdn(); }
const int &NLGen3jesRelativePtHFdn() { return vvv.NLGen3jesRelativePtHFdn(); }
const int &NLGen4jesRelativePtHFdn() { return vvv.NLGen4jesRelativePtHFdn(); }
const int &NVQGen0jesRelativePtHFdn() { return vvv.NVQGen0jesRelativePtHFdn(); }
const int &NVQGen1jesRelativePtHFdn() { return vvv.NVQGen1jesRelativePtHFdn(); }
const int &NVQGen2jesRelativePtHFdn() { return vvv.NVQGen2jesRelativePtHFdn(); }
const int &NVQGen3jesRelativePtHFdn() { return vvv.NVQGen3jesRelativePtHFdn(); }
const int &NVQGen4jesRelativePtHFdn() { return vvv.NVQGen4jesRelativePtHFdn(); }
const int &NiFJjesRelativePtHFdn() { return vvv.NiFJjesRelativePtHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesRelativePtHFdn() { return vvv.iFJ0jesRelativePtHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesRelativePtHFdn() { return vvv.iFJ1jesRelativePtHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesRelativePtHFdn() { return vvv.iFJ2jesRelativePtHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesRelativePtHFdn() { return vvv.iFJ3jesRelativePtHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesRelativePtHFdn() { return vvv.iFJ4jesRelativePtHFdn(); }
const float &iVMD0jesRelativePtHFdn() { return vvv.iVMD0jesRelativePtHFdn(); }
const float &iVMD1jesRelativePtHFdn() { return vvv.iVMD1jesRelativePtHFdn(); }
const float &iVMD2jesRelativePtHFdn() { return vvv.iVMD2jesRelativePtHFdn(); }
const float &iVMD3jesRelativePtHFdn() { return vvv.iVMD3jesRelativePtHFdn(); }
const float &iVMD4jesRelativePtHFdn() { return vvv.iVMD4jesRelativePtHFdn(); }
const float &iWMD0jesRelativePtHFdn() { return vvv.iWMD0jesRelativePtHFdn(); }
const float &iWMD1jesRelativePtHFdn() { return vvv.iWMD1jesRelativePtHFdn(); }
const float &iWMD2jesRelativePtHFdn() { return vvv.iWMD2jesRelativePtHFdn(); }
const float &iWMD3jesRelativePtHFdn() { return vvv.iWMD3jesRelativePtHFdn(); }
const float &iWMD4jesRelativePtHFdn() { return vvv.iWMD4jesRelativePtHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesRelativePtHFdn() { return vvv.METjesRelativePtHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesRelativePtHFdn() { return vvv.NujesRelativePtHFdn(); }
const int &NJjesRelativePtHFdn() { return vvv.NJjesRelativePtHFdn(); }
const int &NbLoosejesRelativePtHFdn() { return vvv.NbLoosejesRelativePtHFdn(); }
const int &NbMediumjesRelativePtHFdn() { return vvv.NbMediumjesRelativePtHFdn(); }
const int &NbTightjesRelativePtHFdn() { return vvv.NbTightjesRelativePtHFdn(); }
const int &NoORNbLoosejesRelativePtHFdn() { return vvv.NoORNbLoosejesRelativePtHFdn(); }
const int &NoORNbMediumjesRelativePtHFdn() { return vvv.NoORNbMediumjesRelativePtHFdn(); }
const int &NoORNbTightjesRelativePtHFdn() { return vvv.NoORNbTightjesRelativePtHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesRelativePtHFdn() { return vvv.J0jesRelativePtHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesRelativePtHFdn() { return vvv.J1jesRelativePtHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesRelativePtHFdn() { return vvv.J2jesRelativePtHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesRelativePtHFdn() { return vvv.J3jesRelativePtHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesRelativePtHFdn() { return vvv.J4jesRelativePtHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesRelativePtHFdn() { return vvv.J5jesRelativePtHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesRelativePtHFdn() { return vvv.J6jesRelativePtHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesRelativePtHFdn() { return vvv.J7jesRelativePtHFdn(); }
const vector<int> &NQJGenjesRelativePtHFdn() { return vvv.NQJGenjesRelativePtHFdn(); }
const vector<int> &NBJGenjesRelativePtHFdn() { return vvv.NBJGenjesRelativePtHFdn(); }
const vector<int> &NLJGenjesRelativePtHFdn() { return vvv.NLJGenjesRelativePtHFdn(); }
const float &MVVXjesRelativePtHFdn() { return vvv.MVVXjesRelativePtHFdn(); }
const float &PtVVXjesRelativePtHFdn() { return vvv.PtVVXjesRelativePtHFdn(); }
const float &HTjesRelativePtHFdn() { return vvv.HTjesRelativePtHFdn(); }
const float &HTJjesRelativePtHFdn() { return vvv.HTJjesRelativePtHFdn(); }
const float &HTFJjesRelativePtHFdn() { return vvv.HTFJjesRelativePtHFdn(); }
const float &SumPtFJjesRelativePtHFdn() { return vvv.SumPtFJjesRelativePtHFdn(); }
const float &SumPtJjesRelativePtHFdn() { return vvv.SumPtJjesRelativePtHFdn(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesRelativeBalup() { return vvv.JsjesRelativeBalup(); }
const int &NFJjesRelativeBalup() { return vvv.NFJjesRelativeBalup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesRelativeBalup() { return vvv.FJ0jesRelativeBalup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesRelativeBalup() { return vvv.FJ1jesRelativeBalup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesRelativeBalup() { return vvv.FJ2jesRelativeBalup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesRelativeBalup() { return vvv.FJ3jesRelativeBalup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesRelativeBalup() { return vvv.FJ4jesRelativeBalup(); }
const float &VMD0jesRelativeBalup() { return vvv.VMD0jesRelativeBalup(); }
const float &VMD1jesRelativeBalup() { return vvv.VMD1jesRelativeBalup(); }
const float &VMD2jesRelativeBalup() { return vvv.VMD2jesRelativeBalup(); }
const float &VMD3jesRelativeBalup() { return vvv.VMD3jesRelativeBalup(); }
const float &VMD4jesRelativeBalup() { return vvv.VMD4jesRelativeBalup(); }
const float &WMD0jesRelativeBalup() { return vvv.WMD0jesRelativeBalup(); }
const float &WMD1jesRelativeBalup() { return vvv.WMD1jesRelativeBalup(); }
const float &WMD2jesRelativeBalup() { return vvv.WMD2jesRelativeBalup(); }
const float &WMD3jesRelativeBalup() { return vvv.WMD3jesRelativeBalup(); }
const float &WMD4jesRelativeBalup() { return vvv.WMD4jesRelativeBalup(); }
const int &NQGen0jesRelativeBalup() { return vvv.NQGen0jesRelativeBalup(); }
const int &NQGen1jesRelativeBalup() { return vvv.NQGen1jesRelativeBalup(); }
const int &NQGen2jesRelativeBalup() { return vvv.NQGen2jesRelativeBalup(); }
const int &NQGen3jesRelativeBalup() { return vvv.NQGen3jesRelativeBalup(); }
const int &NQGen4jesRelativeBalup() { return vvv.NQGen4jesRelativeBalup(); }
const int &NBGen0jesRelativeBalup() { return vvv.NBGen0jesRelativeBalup(); }
const int &NBGen1jesRelativeBalup() { return vvv.NBGen1jesRelativeBalup(); }
const int &NBGen2jesRelativeBalup() { return vvv.NBGen2jesRelativeBalup(); }
const int &NBGen3jesRelativeBalup() { return vvv.NBGen3jesRelativeBalup(); }
const int &NBGen4jesRelativeBalup() { return vvv.NBGen4jesRelativeBalup(); }
const int &NLGen0jesRelativeBalup() { return vvv.NLGen0jesRelativeBalup(); }
const int &NLGen1jesRelativeBalup() { return vvv.NLGen1jesRelativeBalup(); }
const int &NLGen2jesRelativeBalup() { return vvv.NLGen2jesRelativeBalup(); }
const int &NLGen3jesRelativeBalup() { return vvv.NLGen3jesRelativeBalup(); }
const int &NLGen4jesRelativeBalup() { return vvv.NLGen4jesRelativeBalup(); }
const int &NVQGen0jesRelativeBalup() { return vvv.NVQGen0jesRelativeBalup(); }
const int &NVQGen1jesRelativeBalup() { return vvv.NVQGen1jesRelativeBalup(); }
const int &NVQGen2jesRelativeBalup() { return vvv.NVQGen2jesRelativeBalup(); }
const int &NVQGen3jesRelativeBalup() { return vvv.NVQGen3jesRelativeBalup(); }
const int &NVQGen4jesRelativeBalup() { return vvv.NVQGen4jesRelativeBalup(); }
const int &NiFJjesRelativeBalup() { return vvv.NiFJjesRelativeBalup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesRelativeBalup() { return vvv.iFJ0jesRelativeBalup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesRelativeBalup() { return vvv.iFJ1jesRelativeBalup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesRelativeBalup() { return vvv.iFJ2jesRelativeBalup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesRelativeBalup() { return vvv.iFJ3jesRelativeBalup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesRelativeBalup() { return vvv.iFJ4jesRelativeBalup(); }
const float &iVMD0jesRelativeBalup() { return vvv.iVMD0jesRelativeBalup(); }
const float &iVMD1jesRelativeBalup() { return vvv.iVMD1jesRelativeBalup(); }
const float &iVMD2jesRelativeBalup() { return vvv.iVMD2jesRelativeBalup(); }
const float &iVMD3jesRelativeBalup() { return vvv.iVMD3jesRelativeBalup(); }
const float &iVMD4jesRelativeBalup() { return vvv.iVMD4jesRelativeBalup(); }
const float &iWMD0jesRelativeBalup() { return vvv.iWMD0jesRelativeBalup(); }
const float &iWMD1jesRelativeBalup() { return vvv.iWMD1jesRelativeBalup(); }
const float &iWMD2jesRelativeBalup() { return vvv.iWMD2jesRelativeBalup(); }
const float &iWMD3jesRelativeBalup() { return vvv.iWMD3jesRelativeBalup(); }
const float &iWMD4jesRelativeBalup() { return vvv.iWMD4jesRelativeBalup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesRelativeBalup() { return vvv.METjesRelativeBalup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesRelativeBalup() { return vvv.NujesRelativeBalup(); }
const int &NJjesRelativeBalup() { return vvv.NJjesRelativeBalup(); }
const int &NbLoosejesRelativeBalup() { return vvv.NbLoosejesRelativeBalup(); }
const int &NbMediumjesRelativeBalup() { return vvv.NbMediumjesRelativeBalup(); }
const int &NbTightjesRelativeBalup() { return vvv.NbTightjesRelativeBalup(); }
const int &NoORNbLoosejesRelativeBalup() { return vvv.NoORNbLoosejesRelativeBalup(); }
const int &NoORNbMediumjesRelativeBalup() { return vvv.NoORNbMediumjesRelativeBalup(); }
const int &NoORNbTightjesRelativeBalup() { return vvv.NoORNbTightjesRelativeBalup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesRelativeBalup() { return vvv.J0jesRelativeBalup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesRelativeBalup() { return vvv.J1jesRelativeBalup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesRelativeBalup() { return vvv.J2jesRelativeBalup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesRelativeBalup() { return vvv.J3jesRelativeBalup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesRelativeBalup() { return vvv.J4jesRelativeBalup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesRelativeBalup() { return vvv.J5jesRelativeBalup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesRelativeBalup() { return vvv.J6jesRelativeBalup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesRelativeBalup() { return vvv.J7jesRelativeBalup(); }
const vector<int> &NQJGenjesRelativeBalup() { return vvv.NQJGenjesRelativeBalup(); }
const vector<int> &NBJGenjesRelativeBalup() { return vvv.NBJGenjesRelativeBalup(); }
const vector<int> &NLJGenjesRelativeBalup() { return vvv.NLJGenjesRelativeBalup(); }
const float &MVVXjesRelativeBalup() { return vvv.MVVXjesRelativeBalup(); }
const float &PtVVXjesRelativeBalup() { return vvv.PtVVXjesRelativeBalup(); }
const float &HTjesRelativeBalup() { return vvv.HTjesRelativeBalup(); }
const float &HTJjesRelativeBalup() { return vvv.HTJjesRelativeBalup(); }
const float &HTFJjesRelativeBalup() { return vvv.HTFJjesRelativeBalup(); }
const float &SumPtFJjesRelativeBalup() { return vvv.SumPtFJjesRelativeBalup(); }
const float &SumPtJjesRelativeBalup() { return vvv.SumPtJjesRelativeBalup(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesRelativeBaldn() { return vvv.JsjesRelativeBaldn(); }
const int &NFJjesRelativeBaldn() { return vvv.NFJjesRelativeBaldn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesRelativeBaldn() { return vvv.FJ0jesRelativeBaldn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesRelativeBaldn() { return vvv.FJ1jesRelativeBaldn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesRelativeBaldn() { return vvv.FJ2jesRelativeBaldn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesRelativeBaldn() { return vvv.FJ3jesRelativeBaldn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesRelativeBaldn() { return vvv.FJ4jesRelativeBaldn(); }
const float &VMD0jesRelativeBaldn() { return vvv.VMD0jesRelativeBaldn(); }
const float &VMD1jesRelativeBaldn() { return vvv.VMD1jesRelativeBaldn(); }
const float &VMD2jesRelativeBaldn() { return vvv.VMD2jesRelativeBaldn(); }
const float &VMD3jesRelativeBaldn() { return vvv.VMD3jesRelativeBaldn(); }
const float &VMD4jesRelativeBaldn() { return vvv.VMD4jesRelativeBaldn(); }
const float &WMD0jesRelativeBaldn() { return vvv.WMD0jesRelativeBaldn(); }
const float &WMD1jesRelativeBaldn() { return vvv.WMD1jesRelativeBaldn(); }
const float &WMD2jesRelativeBaldn() { return vvv.WMD2jesRelativeBaldn(); }
const float &WMD3jesRelativeBaldn() { return vvv.WMD3jesRelativeBaldn(); }
const float &WMD4jesRelativeBaldn() { return vvv.WMD4jesRelativeBaldn(); }
const int &NQGen0jesRelativeBaldn() { return vvv.NQGen0jesRelativeBaldn(); }
const int &NQGen1jesRelativeBaldn() { return vvv.NQGen1jesRelativeBaldn(); }
const int &NQGen2jesRelativeBaldn() { return vvv.NQGen2jesRelativeBaldn(); }
const int &NQGen3jesRelativeBaldn() { return vvv.NQGen3jesRelativeBaldn(); }
const int &NQGen4jesRelativeBaldn() { return vvv.NQGen4jesRelativeBaldn(); }
const int &NBGen0jesRelativeBaldn() { return vvv.NBGen0jesRelativeBaldn(); }
const int &NBGen1jesRelativeBaldn() { return vvv.NBGen1jesRelativeBaldn(); }
const int &NBGen2jesRelativeBaldn() { return vvv.NBGen2jesRelativeBaldn(); }
const int &NBGen3jesRelativeBaldn() { return vvv.NBGen3jesRelativeBaldn(); }
const int &NBGen4jesRelativeBaldn() { return vvv.NBGen4jesRelativeBaldn(); }
const int &NLGen0jesRelativeBaldn() { return vvv.NLGen0jesRelativeBaldn(); }
const int &NLGen1jesRelativeBaldn() { return vvv.NLGen1jesRelativeBaldn(); }
const int &NLGen2jesRelativeBaldn() { return vvv.NLGen2jesRelativeBaldn(); }
const int &NLGen3jesRelativeBaldn() { return vvv.NLGen3jesRelativeBaldn(); }
const int &NLGen4jesRelativeBaldn() { return vvv.NLGen4jesRelativeBaldn(); }
const int &NVQGen0jesRelativeBaldn() { return vvv.NVQGen0jesRelativeBaldn(); }
const int &NVQGen1jesRelativeBaldn() { return vvv.NVQGen1jesRelativeBaldn(); }
const int &NVQGen2jesRelativeBaldn() { return vvv.NVQGen2jesRelativeBaldn(); }
const int &NVQGen3jesRelativeBaldn() { return vvv.NVQGen3jesRelativeBaldn(); }
const int &NVQGen4jesRelativeBaldn() { return vvv.NVQGen4jesRelativeBaldn(); }
const int &NiFJjesRelativeBaldn() { return vvv.NiFJjesRelativeBaldn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesRelativeBaldn() { return vvv.iFJ0jesRelativeBaldn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesRelativeBaldn() { return vvv.iFJ1jesRelativeBaldn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesRelativeBaldn() { return vvv.iFJ2jesRelativeBaldn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesRelativeBaldn() { return vvv.iFJ3jesRelativeBaldn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesRelativeBaldn() { return vvv.iFJ4jesRelativeBaldn(); }
const float &iVMD0jesRelativeBaldn() { return vvv.iVMD0jesRelativeBaldn(); }
const float &iVMD1jesRelativeBaldn() { return vvv.iVMD1jesRelativeBaldn(); }
const float &iVMD2jesRelativeBaldn() { return vvv.iVMD2jesRelativeBaldn(); }
const float &iVMD3jesRelativeBaldn() { return vvv.iVMD3jesRelativeBaldn(); }
const float &iVMD4jesRelativeBaldn() { return vvv.iVMD4jesRelativeBaldn(); }
const float &iWMD0jesRelativeBaldn() { return vvv.iWMD0jesRelativeBaldn(); }
const float &iWMD1jesRelativeBaldn() { return vvv.iWMD1jesRelativeBaldn(); }
const float &iWMD2jesRelativeBaldn() { return vvv.iWMD2jesRelativeBaldn(); }
const float &iWMD3jesRelativeBaldn() { return vvv.iWMD3jesRelativeBaldn(); }
const float &iWMD4jesRelativeBaldn() { return vvv.iWMD4jesRelativeBaldn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesRelativeBaldn() { return vvv.METjesRelativeBaldn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesRelativeBaldn() { return vvv.NujesRelativeBaldn(); }
const int &NJjesRelativeBaldn() { return vvv.NJjesRelativeBaldn(); }
const int &NbLoosejesRelativeBaldn() { return vvv.NbLoosejesRelativeBaldn(); }
const int &NbMediumjesRelativeBaldn() { return vvv.NbMediumjesRelativeBaldn(); }
const int &NbTightjesRelativeBaldn() { return vvv.NbTightjesRelativeBaldn(); }
const int &NoORNbLoosejesRelativeBaldn() { return vvv.NoORNbLoosejesRelativeBaldn(); }
const int &NoORNbMediumjesRelativeBaldn() { return vvv.NoORNbMediumjesRelativeBaldn(); }
const int &NoORNbTightjesRelativeBaldn() { return vvv.NoORNbTightjesRelativeBaldn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesRelativeBaldn() { return vvv.J0jesRelativeBaldn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesRelativeBaldn() { return vvv.J1jesRelativeBaldn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesRelativeBaldn() { return vvv.J2jesRelativeBaldn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesRelativeBaldn() { return vvv.J3jesRelativeBaldn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesRelativeBaldn() { return vvv.J4jesRelativeBaldn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesRelativeBaldn() { return vvv.J5jesRelativeBaldn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesRelativeBaldn() { return vvv.J6jesRelativeBaldn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesRelativeBaldn() { return vvv.J7jesRelativeBaldn(); }
const vector<int> &NQJGenjesRelativeBaldn() { return vvv.NQJGenjesRelativeBaldn(); }
const vector<int> &NBJGenjesRelativeBaldn() { return vvv.NBJGenjesRelativeBaldn(); }
const vector<int> &NLJGenjesRelativeBaldn() { return vvv.NLJGenjesRelativeBaldn(); }
const float &MVVXjesRelativeBaldn() { return vvv.MVVXjesRelativeBaldn(); }
const float &PtVVXjesRelativeBaldn() { return vvv.PtVVXjesRelativeBaldn(); }
const float &HTjesRelativeBaldn() { return vvv.HTjesRelativeBaldn(); }
const float &HTJjesRelativeBaldn() { return vvv.HTJjesRelativeBaldn(); }
const float &HTFJjesRelativeBaldn() { return vvv.HTFJjesRelativeBaldn(); }
const float &SumPtFJjesRelativeBaldn() { return vvv.SumPtFJjesRelativeBaldn(); }
const float &SumPtJjesRelativeBaldn() { return vvv.SumPtJjesRelativeBaldn(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesRelativeSampleup() { return vvv.JsjesRelativeSampleup(); }
const int &NFJjesRelativeSampleup() { return vvv.NFJjesRelativeSampleup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesRelativeSampleup() { return vvv.FJ0jesRelativeSampleup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesRelativeSampleup() { return vvv.FJ1jesRelativeSampleup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesRelativeSampleup() { return vvv.FJ2jesRelativeSampleup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesRelativeSampleup() { return vvv.FJ3jesRelativeSampleup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesRelativeSampleup() { return vvv.FJ4jesRelativeSampleup(); }
const float &VMD0jesRelativeSampleup() { return vvv.VMD0jesRelativeSampleup(); }
const float &VMD1jesRelativeSampleup() { return vvv.VMD1jesRelativeSampleup(); }
const float &VMD2jesRelativeSampleup() { return vvv.VMD2jesRelativeSampleup(); }
const float &VMD3jesRelativeSampleup() { return vvv.VMD3jesRelativeSampleup(); }
const float &VMD4jesRelativeSampleup() { return vvv.VMD4jesRelativeSampleup(); }
const float &WMD0jesRelativeSampleup() { return vvv.WMD0jesRelativeSampleup(); }
const float &WMD1jesRelativeSampleup() { return vvv.WMD1jesRelativeSampleup(); }
const float &WMD2jesRelativeSampleup() { return vvv.WMD2jesRelativeSampleup(); }
const float &WMD3jesRelativeSampleup() { return vvv.WMD3jesRelativeSampleup(); }
const float &WMD4jesRelativeSampleup() { return vvv.WMD4jesRelativeSampleup(); }
const int &NQGen0jesRelativeSampleup() { return vvv.NQGen0jesRelativeSampleup(); }
const int &NQGen1jesRelativeSampleup() { return vvv.NQGen1jesRelativeSampleup(); }
const int &NQGen2jesRelativeSampleup() { return vvv.NQGen2jesRelativeSampleup(); }
const int &NQGen3jesRelativeSampleup() { return vvv.NQGen3jesRelativeSampleup(); }
const int &NQGen4jesRelativeSampleup() { return vvv.NQGen4jesRelativeSampleup(); }
const int &NBGen0jesRelativeSampleup() { return vvv.NBGen0jesRelativeSampleup(); }
const int &NBGen1jesRelativeSampleup() { return vvv.NBGen1jesRelativeSampleup(); }
const int &NBGen2jesRelativeSampleup() { return vvv.NBGen2jesRelativeSampleup(); }
const int &NBGen3jesRelativeSampleup() { return vvv.NBGen3jesRelativeSampleup(); }
const int &NBGen4jesRelativeSampleup() { return vvv.NBGen4jesRelativeSampleup(); }
const int &NLGen0jesRelativeSampleup() { return vvv.NLGen0jesRelativeSampleup(); }
const int &NLGen1jesRelativeSampleup() { return vvv.NLGen1jesRelativeSampleup(); }
const int &NLGen2jesRelativeSampleup() { return vvv.NLGen2jesRelativeSampleup(); }
const int &NLGen3jesRelativeSampleup() { return vvv.NLGen3jesRelativeSampleup(); }
const int &NLGen4jesRelativeSampleup() { return vvv.NLGen4jesRelativeSampleup(); }
const int &NVQGen0jesRelativeSampleup() { return vvv.NVQGen0jesRelativeSampleup(); }
const int &NVQGen1jesRelativeSampleup() { return vvv.NVQGen1jesRelativeSampleup(); }
const int &NVQGen2jesRelativeSampleup() { return vvv.NVQGen2jesRelativeSampleup(); }
const int &NVQGen3jesRelativeSampleup() { return vvv.NVQGen3jesRelativeSampleup(); }
const int &NVQGen4jesRelativeSampleup() { return vvv.NVQGen4jesRelativeSampleup(); }
const int &NiFJjesRelativeSampleup() { return vvv.NiFJjesRelativeSampleup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesRelativeSampleup() { return vvv.iFJ0jesRelativeSampleup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesRelativeSampleup() { return vvv.iFJ1jesRelativeSampleup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesRelativeSampleup() { return vvv.iFJ2jesRelativeSampleup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesRelativeSampleup() { return vvv.iFJ3jesRelativeSampleup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesRelativeSampleup() { return vvv.iFJ4jesRelativeSampleup(); }
const float &iVMD0jesRelativeSampleup() { return vvv.iVMD0jesRelativeSampleup(); }
const float &iVMD1jesRelativeSampleup() { return vvv.iVMD1jesRelativeSampleup(); }
const float &iVMD2jesRelativeSampleup() { return vvv.iVMD2jesRelativeSampleup(); }
const float &iVMD3jesRelativeSampleup() { return vvv.iVMD3jesRelativeSampleup(); }
const float &iVMD4jesRelativeSampleup() { return vvv.iVMD4jesRelativeSampleup(); }
const float &iWMD0jesRelativeSampleup() { return vvv.iWMD0jesRelativeSampleup(); }
const float &iWMD1jesRelativeSampleup() { return vvv.iWMD1jesRelativeSampleup(); }
const float &iWMD2jesRelativeSampleup() { return vvv.iWMD2jesRelativeSampleup(); }
const float &iWMD3jesRelativeSampleup() { return vvv.iWMD3jesRelativeSampleup(); }
const float &iWMD4jesRelativeSampleup() { return vvv.iWMD4jesRelativeSampleup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesRelativeSampleup() { return vvv.METjesRelativeSampleup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesRelativeSampleup() { return vvv.NujesRelativeSampleup(); }
const int &NJjesRelativeSampleup() { return vvv.NJjesRelativeSampleup(); }
const int &NbLoosejesRelativeSampleup() { return vvv.NbLoosejesRelativeSampleup(); }
const int &NbMediumjesRelativeSampleup() { return vvv.NbMediumjesRelativeSampleup(); }
const int &NbTightjesRelativeSampleup() { return vvv.NbTightjesRelativeSampleup(); }
const int &NoORNbLoosejesRelativeSampleup() { return vvv.NoORNbLoosejesRelativeSampleup(); }
const int &NoORNbMediumjesRelativeSampleup() { return vvv.NoORNbMediumjesRelativeSampleup(); }
const int &NoORNbTightjesRelativeSampleup() { return vvv.NoORNbTightjesRelativeSampleup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesRelativeSampleup() { return vvv.J0jesRelativeSampleup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesRelativeSampleup() { return vvv.J1jesRelativeSampleup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesRelativeSampleup() { return vvv.J2jesRelativeSampleup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesRelativeSampleup() { return vvv.J3jesRelativeSampleup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesRelativeSampleup() { return vvv.J4jesRelativeSampleup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesRelativeSampleup() { return vvv.J5jesRelativeSampleup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesRelativeSampleup() { return vvv.J6jesRelativeSampleup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesRelativeSampleup() { return vvv.J7jesRelativeSampleup(); }
const vector<int> &NQJGenjesRelativeSampleup() { return vvv.NQJGenjesRelativeSampleup(); }
const vector<int> &NBJGenjesRelativeSampleup() { return vvv.NBJGenjesRelativeSampleup(); }
const vector<int> &NLJGenjesRelativeSampleup() { return vvv.NLJGenjesRelativeSampleup(); }
const float &MVVXjesRelativeSampleup() { return vvv.MVVXjesRelativeSampleup(); }
const float &PtVVXjesRelativeSampleup() { return vvv.PtVVXjesRelativeSampleup(); }
const float &HTjesRelativeSampleup() { return vvv.HTjesRelativeSampleup(); }
const float &HTJjesRelativeSampleup() { return vvv.HTJjesRelativeSampleup(); }
const float &HTFJjesRelativeSampleup() { return vvv.HTFJjesRelativeSampleup(); }
const float &SumPtFJjesRelativeSampleup() { return vvv.SumPtFJjesRelativeSampleup(); }
const float &SumPtJjesRelativeSampleup() { return vvv.SumPtJjesRelativeSampleup(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesRelativeSampledn() { return vvv.JsjesRelativeSampledn(); }
const int &NFJjesRelativeSampledn() { return vvv.NFJjesRelativeSampledn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesRelativeSampledn() { return vvv.FJ0jesRelativeSampledn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesRelativeSampledn() { return vvv.FJ1jesRelativeSampledn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesRelativeSampledn() { return vvv.FJ2jesRelativeSampledn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesRelativeSampledn() { return vvv.FJ3jesRelativeSampledn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesRelativeSampledn() { return vvv.FJ4jesRelativeSampledn(); }
const float &VMD0jesRelativeSampledn() { return vvv.VMD0jesRelativeSampledn(); }
const float &VMD1jesRelativeSampledn() { return vvv.VMD1jesRelativeSampledn(); }
const float &VMD2jesRelativeSampledn() { return vvv.VMD2jesRelativeSampledn(); }
const float &VMD3jesRelativeSampledn() { return vvv.VMD3jesRelativeSampledn(); }
const float &VMD4jesRelativeSampledn() { return vvv.VMD4jesRelativeSampledn(); }
const float &WMD0jesRelativeSampledn() { return vvv.WMD0jesRelativeSampledn(); }
const float &WMD1jesRelativeSampledn() { return vvv.WMD1jesRelativeSampledn(); }
const float &WMD2jesRelativeSampledn() { return vvv.WMD2jesRelativeSampledn(); }
const float &WMD3jesRelativeSampledn() { return vvv.WMD3jesRelativeSampledn(); }
const float &WMD4jesRelativeSampledn() { return vvv.WMD4jesRelativeSampledn(); }
const int &NQGen0jesRelativeSampledn() { return vvv.NQGen0jesRelativeSampledn(); }
const int &NQGen1jesRelativeSampledn() { return vvv.NQGen1jesRelativeSampledn(); }
const int &NQGen2jesRelativeSampledn() { return vvv.NQGen2jesRelativeSampledn(); }
const int &NQGen3jesRelativeSampledn() { return vvv.NQGen3jesRelativeSampledn(); }
const int &NQGen4jesRelativeSampledn() { return vvv.NQGen4jesRelativeSampledn(); }
const int &NBGen0jesRelativeSampledn() { return vvv.NBGen0jesRelativeSampledn(); }
const int &NBGen1jesRelativeSampledn() { return vvv.NBGen1jesRelativeSampledn(); }
const int &NBGen2jesRelativeSampledn() { return vvv.NBGen2jesRelativeSampledn(); }
const int &NBGen3jesRelativeSampledn() { return vvv.NBGen3jesRelativeSampledn(); }
const int &NBGen4jesRelativeSampledn() { return vvv.NBGen4jesRelativeSampledn(); }
const int &NLGen0jesRelativeSampledn() { return vvv.NLGen0jesRelativeSampledn(); }
const int &NLGen1jesRelativeSampledn() { return vvv.NLGen1jesRelativeSampledn(); }
const int &NLGen2jesRelativeSampledn() { return vvv.NLGen2jesRelativeSampledn(); }
const int &NLGen3jesRelativeSampledn() { return vvv.NLGen3jesRelativeSampledn(); }
const int &NLGen4jesRelativeSampledn() { return vvv.NLGen4jesRelativeSampledn(); }
const int &NVQGen0jesRelativeSampledn() { return vvv.NVQGen0jesRelativeSampledn(); }
const int &NVQGen1jesRelativeSampledn() { return vvv.NVQGen1jesRelativeSampledn(); }
const int &NVQGen2jesRelativeSampledn() { return vvv.NVQGen2jesRelativeSampledn(); }
const int &NVQGen3jesRelativeSampledn() { return vvv.NVQGen3jesRelativeSampledn(); }
const int &NVQGen4jesRelativeSampledn() { return vvv.NVQGen4jesRelativeSampledn(); }
const int &NiFJjesRelativeSampledn() { return vvv.NiFJjesRelativeSampledn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesRelativeSampledn() { return vvv.iFJ0jesRelativeSampledn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesRelativeSampledn() { return vvv.iFJ1jesRelativeSampledn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesRelativeSampledn() { return vvv.iFJ2jesRelativeSampledn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesRelativeSampledn() { return vvv.iFJ3jesRelativeSampledn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesRelativeSampledn() { return vvv.iFJ4jesRelativeSampledn(); }
const float &iVMD0jesRelativeSampledn() { return vvv.iVMD0jesRelativeSampledn(); }
const float &iVMD1jesRelativeSampledn() { return vvv.iVMD1jesRelativeSampledn(); }
const float &iVMD2jesRelativeSampledn() { return vvv.iVMD2jesRelativeSampledn(); }
const float &iVMD3jesRelativeSampledn() { return vvv.iVMD3jesRelativeSampledn(); }
const float &iVMD4jesRelativeSampledn() { return vvv.iVMD4jesRelativeSampledn(); }
const float &iWMD0jesRelativeSampledn() { return vvv.iWMD0jesRelativeSampledn(); }
const float &iWMD1jesRelativeSampledn() { return vvv.iWMD1jesRelativeSampledn(); }
const float &iWMD2jesRelativeSampledn() { return vvv.iWMD2jesRelativeSampledn(); }
const float &iWMD3jesRelativeSampledn() { return vvv.iWMD3jesRelativeSampledn(); }
const float &iWMD4jesRelativeSampledn() { return vvv.iWMD4jesRelativeSampledn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesRelativeSampledn() { return vvv.METjesRelativeSampledn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesRelativeSampledn() { return vvv.NujesRelativeSampledn(); }
const int &NJjesRelativeSampledn() { return vvv.NJjesRelativeSampledn(); }
const int &NbLoosejesRelativeSampledn() { return vvv.NbLoosejesRelativeSampledn(); }
const int &NbMediumjesRelativeSampledn() { return vvv.NbMediumjesRelativeSampledn(); }
const int &NbTightjesRelativeSampledn() { return vvv.NbTightjesRelativeSampledn(); }
const int &NoORNbLoosejesRelativeSampledn() { return vvv.NoORNbLoosejesRelativeSampledn(); }
const int &NoORNbMediumjesRelativeSampledn() { return vvv.NoORNbMediumjesRelativeSampledn(); }
const int &NoORNbTightjesRelativeSampledn() { return vvv.NoORNbTightjesRelativeSampledn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesRelativeSampledn() { return vvv.J0jesRelativeSampledn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesRelativeSampledn() { return vvv.J1jesRelativeSampledn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesRelativeSampledn() { return vvv.J2jesRelativeSampledn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesRelativeSampledn() { return vvv.J3jesRelativeSampledn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesRelativeSampledn() { return vvv.J4jesRelativeSampledn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesRelativeSampledn() { return vvv.J5jesRelativeSampledn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesRelativeSampledn() { return vvv.J6jesRelativeSampledn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesRelativeSampledn() { return vvv.J7jesRelativeSampledn(); }
const vector<int> &NQJGenjesRelativeSampledn() { return vvv.NQJGenjesRelativeSampledn(); }
const vector<int> &NBJGenjesRelativeSampledn() { return vvv.NBJGenjesRelativeSampledn(); }
const vector<int> &NLJGenjesRelativeSampledn() { return vvv.NLJGenjesRelativeSampledn(); }
const float &MVVXjesRelativeSampledn() { return vvv.MVVXjesRelativeSampledn(); }
const float &PtVVXjesRelativeSampledn() { return vvv.PtVVXjesRelativeSampledn(); }
const float &HTjesRelativeSampledn() { return vvv.HTjesRelativeSampledn(); }
const float &HTJjesRelativeSampledn() { return vvv.HTJjesRelativeSampledn(); }
const float &HTFJjesRelativeSampledn() { return vvv.HTFJjesRelativeSampledn(); }
const float &SumPtFJjesRelativeSampledn() { return vvv.SumPtFJjesRelativeSampledn(); }
const float &SumPtJjesRelativeSampledn() { return vvv.SumPtJjesRelativeSampledn(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesRelativeFSRup() { return vvv.JsjesRelativeFSRup(); }
const int &NFJjesRelativeFSRup() { return vvv.NFJjesRelativeFSRup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesRelativeFSRup() { return vvv.FJ0jesRelativeFSRup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesRelativeFSRup() { return vvv.FJ1jesRelativeFSRup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesRelativeFSRup() { return vvv.FJ2jesRelativeFSRup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesRelativeFSRup() { return vvv.FJ3jesRelativeFSRup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesRelativeFSRup() { return vvv.FJ4jesRelativeFSRup(); }
const float &VMD0jesRelativeFSRup() { return vvv.VMD0jesRelativeFSRup(); }
const float &VMD1jesRelativeFSRup() { return vvv.VMD1jesRelativeFSRup(); }
const float &VMD2jesRelativeFSRup() { return vvv.VMD2jesRelativeFSRup(); }
const float &VMD3jesRelativeFSRup() { return vvv.VMD3jesRelativeFSRup(); }
const float &VMD4jesRelativeFSRup() { return vvv.VMD4jesRelativeFSRup(); }
const float &WMD0jesRelativeFSRup() { return vvv.WMD0jesRelativeFSRup(); }
const float &WMD1jesRelativeFSRup() { return vvv.WMD1jesRelativeFSRup(); }
const float &WMD2jesRelativeFSRup() { return vvv.WMD2jesRelativeFSRup(); }
const float &WMD3jesRelativeFSRup() { return vvv.WMD3jesRelativeFSRup(); }
const float &WMD4jesRelativeFSRup() { return vvv.WMD4jesRelativeFSRup(); }
const int &NQGen0jesRelativeFSRup() { return vvv.NQGen0jesRelativeFSRup(); }
const int &NQGen1jesRelativeFSRup() { return vvv.NQGen1jesRelativeFSRup(); }
const int &NQGen2jesRelativeFSRup() { return vvv.NQGen2jesRelativeFSRup(); }
const int &NQGen3jesRelativeFSRup() { return vvv.NQGen3jesRelativeFSRup(); }
const int &NQGen4jesRelativeFSRup() { return vvv.NQGen4jesRelativeFSRup(); }
const int &NBGen0jesRelativeFSRup() { return vvv.NBGen0jesRelativeFSRup(); }
const int &NBGen1jesRelativeFSRup() { return vvv.NBGen1jesRelativeFSRup(); }
const int &NBGen2jesRelativeFSRup() { return vvv.NBGen2jesRelativeFSRup(); }
const int &NBGen3jesRelativeFSRup() { return vvv.NBGen3jesRelativeFSRup(); }
const int &NBGen4jesRelativeFSRup() { return vvv.NBGen4jesRelativeFSRup(); }
const int &NLGen0jesRelativeFSRup() { return vvv.NLGen0jesRelativeFSRup(); }
const int &NLGen1jesRelativeFSRup() { return vvv.NLGen1jesRelativeFSRup(); }
const int &NLGen2jesRelativeFSRup() { return vvv.NLGen2jesRelativeFSRup(); }
const int &NLGen3jesRelativeFSRup() { return vvv.NLGen3jesRelativeFSRup(); }
const int &NLGen4jesRelativeFSRup() { return vvv.NLGen4jesRelativeFSRup(); }
const int &NVQGen0jesRelativeFSRup() { return vvv.NVQGen0jesRelativeFSRup(); }
const int &NVQGen1jesRelativeFSRup() { return vvv.NVQGen1jesRelativeFSRup(); }
const int &NVQGen2jesRelativeFSRup() { return vvv.NVQGen2jesRelativeFSRup(); }
const int &NVQGen3jesRelativeFSRup() { return vvv.NVQGen3jesRelativeFSRup(); }
const int &NVQGen4jesRelativeFSRup() { return vvv.NVQGen4jesRelativeFSRup(); }
const int &NiFJjesRelativeFSRup() { return vvv.NiFJjesRelativeFSRup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesRelativeFSRup() { return vvv.iFJ0jesRelativeFSRup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesRelativeFSRup() { return vvv.iFJ1jesRelativeFSRup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesRelativeFSRup() { return vvv.iFJ2jesRelativeFSRup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesRelativeFSRup() { return vvv.iFJ3jesRelativeFSRup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesRelativeFSRup() { return vvv.iFJ4jesRelativeFSRup(); }
const float &iVMD0jesRelativeFSRup() { return vvv.iVMD0jesRelativeFSRup(); }
const float &iVMD1jesRelativeFSRup() { return vvv.iVMD1jesRelativeFSRup(); }
const float &iVMD2jesRelativeFSRup() { return vvv.iVMD2jesRelativeFSRup(); }
const float &iVMD3jesRelativeFSRup() { return vvv.iVMD3jesRelativeFSRup(); }
const float &iVMD4jesRelativeFSRup() { return vvv.iVMD4jesRelativeFSRup(); }
const float &iWMD0jesRelativeFSRup() { return vvv.iWMD0jesRelativeFSRup(); }
const float &iWMD1jesRelativeFSRup() { return vvv.iWMD1jesRelativeFSRup(); }
const float &iWMD2jesRelativeFSRup() { return vvv.iWMD2jesRelativeFSRup(); }
const float &iWMD3jesRelativeFSRup() { return vvv.iWMD3jesRelativeFSRup(); }
const float &iWMD4jesRelativeFSRup() { return vvv.iWMD4jesRelativeFSRup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesRelativeFSRup() { return vvv.METjesRelativeFSRup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesRelativeFSRup() { return vvv.NujesRelativeFSRup(); }
const int &NJjesRelativeFSRup() { return vvv.NJjesRelativeFSRup(); }
const int &NbLoosejesRelativeFSRup() { return vvv.NbLoosejesRelativeFSRup(); }
const int &NbMediumjesRelativeFSRup() { return vvv.NbMediumjesRelativeFSRup(); }
const int &NbTightjesRelativeFSRup() { return vvv.NbTightjesRelativeFSRup(); }
const int &NoORNbLoosejesRelativeFSRup() { return vvv.NoORNbLoosejesRelativeFSRup(); }
const int &NoORNbMediumjesRelativeFSRup() { return vvv.NoORNbMediumjesRelativeFSRup(); }
const int &NoORNbTightjesRelativeFSRup() { return vvv.NoORNbTightjesRelativeFSRup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesRelativeFSRup() { return vvv.J0jesRelativeFSRup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesRelativeFSRup() { return vvv.J1jesRelativeFSRup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesRelativeFSRup() { return vvv.J2jesRelativeFSRup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesRelativeFSRup() { return vvv.J3jesRelativeFSRup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesRelativeFSRup() { return vvv.J4jesRelativeFSRup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesRelativeFSRup() { return vvv.J5jesRelativeFSRup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesRelativeFSRup() { return vvv.J6jesRelativeFSRup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesRelativeFSRup() { return vvv.J7jesRelativeFSRup(); }
const vector<int> &NQJGenjesRelativeFSRup() { return vvv.NQJGenjesRelativeFSRup(); }
const vector<int> &NBJGenjesRelativeFSRup() { return vvv.NBJGenjesRelativeFSRup(); }
const vector<int> &NLJGenjesRelativeFSRup() { return vvv.NLJGenjesRelativeFSRup(); }
const float &MVVXjesRelativeFSRup() { return vvv.MVVXjesRelativeFSRup(); }
const float &PtVVXjesRelativeFSRup() { return vvv.PtVVXjesRelativeFSRup(); }
const float &HTjesRelativeFSRup() { return vvv.HTjesRelativeFSRup(); }
const float &HTJjesRelativeFSRup() { return vvv.HTJjesRelativeFSRup(); }
const float &HTFJjesRelativeFSRup() { return vvv.HTFJjesRelativeFSRup(); }
const float &SumPtFJjesRelativeFSRup() { return vvv.SumPtFJjesRelativeFSRup(); }
const float &SumPtJjesRelativeFSRup() { return vvv.SumPtJjesRelativeFSRup(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesRelativeFSRdn() { return vvv.JsjesRelativeFSRdn(); }
const int &NFJjesRelativeFSRdn() { return vvv.NFJjesRelativeFSRdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesRelativeFSRdn() { return vvv.FJ0jesRelativeFSRdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesRelativeFSRdn() { return vvv.FJ1jesRelativeFSRdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesRelativeFSRdn() { return vvv.FJ2jesRelativeFSRdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesRelativeFSRdn() { return vvv.FJ3jesRelativeFSRdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesRelativeFSRdn() { return vvv.FJ4jesRelativeFSRdn(); }
const float &VMD0jesRelativeFSRdn() { return vvv.VMD0jesRelativeFSRdn(); }
const float &VMD1jesRelativeFSRdn() { return vvv.VMD1jesRelativeFSRdn(); }
const float &VMD2jesRelativeFSRdn() { return vvv.VMD2jesRelativeFSRdn(); }
const float &VMD3jesRelativeFSRdn() { return vvv.VMD3jesRelativeFSRdn(); }
const float &VMD4jesRelativeFSRdn() { return vvv.VMD4jesRelativeFSRdn(); }
const float &WMD0jesRelativeFSRdn() { return vvv.WMD0jesRelativeFSRdn(); }
const float &WMD1jesRelativeFSRdn() { return vvv.WMD1jesRelativeFSRdn(); }
const float &WMD2jesRelativeFSRdn() { return vvv.WMD2jesRelativeFSRdn(); }
const float &WMD3jesRelativeFSRdn() { return vvv.WMD3jesRelativeFSRdn(); }
const float &WMD4jesRelativeFSRdn() { return vvv.WMD4jesRelativeFSRdn(); }
const int &NQGen0jesRelativeFSRdn() { return vvv.NQGen0jesRelativeFSRdn(); }
const int &NQGen1jesRelativeFSRdn() { return vvv.NQGen1jesRelativeFSRdn(); }
const int &NQGen2jesRelativeFSRdn() { return vvv.NQGen2jesRelativeFSRdn(); }
const int &NQGen3jesRelativeFSRdn() { return vvv.NQGen3jesRelativeFSRdn(); }
const int &NQGen4jesRelativeFSRdn() { return vvv.NQGen4jesRelativeFSRdn(); }
const int &NBGen0jesRelativeFSRdn() { return vvv.NBGen0jesRelativeFSRdn(); }
const int &NBGen1jesRelativeFSRdn() { return vvv.NBGen1jesRelativeFSRdn(); }
const int &NBGen2jesRelativeFSRdn() { return vvv.NBGen2jesRelativeFSRdn(); }
const int &NBGen3jesRelativeFSRdn() { return vvv.NBGen3jesRelativeFSRdn(); }
const int &NBGen4jesRelativeFSRdn() { return vvv.NBGen4jesRelativeFSRdn(); }
const int &NLGen0jesRelativeFSRdn() { return vvv.NLGen0jesRelativeFSRdn(); }
const int &NLGen1jesRelativeFSRdn() { return vvv.NLGen1jesRelativeFSRdn(); }
const int &NLGen2jesRelativeFSRdn() { return vvv.NLGen2jesRelativeFSRdn(); }
const int &NLGen3jesRelativeFSRdn() { return vvv.NLGen3jesRelativeFSRdn(); }
const int &NLGen4jesRelativeFSRdn() { return vvv.NLGen4jesRelativeFSRdn(); }
const int &NVQGen0jesRelativeFSRdn() { return vvv.NVQGen0jesRelativeFSRdn(); }
const int &NVQGen1jesRelativeFSRdn() { return vvv.NVQGen1jesRelativeFSRdn(); }
const int &NVQGen2jesRelativeFSRdn() { return vvv.NVQGen2jesRelativeFSRdn(); }
const int &NVQGen3jesRelativeFSRdn() { return vvv.NVQGen3jesRelativeFSRdn(); }
const int &NVQGen4jesRelativeFSRdn() { return vvv.NVQGen4jesRelativeFSRdn(); }
const int &NiFJjesRelativeFSRdn() { return vvv.NiFJjesRelativeFSRdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesRelativeFSRdn() { return vvv.iFJ0jesRelativeFSRdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesRelativeFSRdn() { return vvv.iFJ1jesRelativeFSRdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesRelativeFSRdn() { return vvv.iFJ2jesRelativeFSRdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesRelativeFSRdn() { return vvv.iFJ3jesRelativeFSRdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesRelativeFSRdn() { return vvv.iFJ4jesRelativeFSRdn(); }
const float &iVMD0jesRelativeFSRdn() { return vvv.iVMD0jesRelativeFSRdn(); }
const float &iVMD1jesRelativeFSRdn() { return vvv.iVMD1jesRelativeFSRdn(); }
const float &iVMD2jesRelativeFSRdn() { return vvv.iVMD2jesRelativeFSRdn(); }
const float &iVMD3jesRelativeFSRdn() { return vvv.iVMD3jesRelativeFSRdn(); }
const float &iVMD4jesRelativeFSRdn() { return vvv.iVMD4jesRelativeFSRdn(); }
const float &iWMD0jesRelativeFSRdn() { return vvv.iWMD0jesRelativeFSRdn(); }
const float &iWMD1jesRelativeFSRdn() { return vvv.iWMD1jesRelativeFSRdn(); }
const float &iWMD2jesRelativeFSRdn() { return vvv.iWMD2jesRelativeFSRdn(); }
const float &iWMD3jesRelativeFSRdn() { return vvv.iWMD3jesRelativeFSRdn(); }
const float &iWMD4jesRelativeFSRdn() { return vvv.iWMD4jesRelativeFSRdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesRelativeFSRdn() { return vvv.METjesRelativeFSRdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesRelativeFSRdn() { return vvv.NujesRelativeFSRdn(); }
const int &NJjesRelativeFSRdn() { return vvv.NJjesRelativeFSRdn(); }
const int &NbLoosejesRelativeFSRdn() { return vvv.NbLoosejesRelativeFSRdn(); }
const int &NbMediumjesRelativeFSRdn() { return vvv.NbMediumjesRelativeFSRdn(); }
const int &NbTightjesRelativeFSRdn() { return vvv.NbTightjesRelativeFSRdn(); }
const int &NoORNbLoosejesRelativeFSRdn() { return vvv.NoORNbLoosejesRelativeFSRdn(); }
const int &NoORNbMediumjesRelativeFSRdn() { return vvv.NoORNbMediumjesRelativeFSRdn(); }
const int &NoORNbTightjesRelativeFSRdn() { return vvv.NoORNbTightjesRelativeFSRdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesRelativeFSRdn() { return vvv.J0jesRelativeFSRdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesRelativeFSRdn() { return vvv.J1jesRelativeFSRdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesRelativeFSRdn() { return vvv.J2jesRelativeFSRdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesRelativeFSRdn() { return vvv.J3jesRelativeFSRdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesRelativeFSRdn() { return vvv.J4jesRelativeFSRdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesRelativeFSRdn() { return vvv.J5jesRelativeFSRdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesRelativeFSRdn() { return vvv.J6jesRelativeFSRdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesRelativeFSRdn() { return vvv.J7jesRelativeFSRdn(); }
const vector<int> &NQJGenjesRelativeFSRdn() { return vvv.NQJGenjesRelativeFSRdn(); }
const vector<int> &NBJGenjesRelativeFSRdn() { return vvv.NBJGenjesRelativeFSRdn(); }
const vector<int> &NLJGenjesRelativeFSRdn() { return vvv.NLJGenjesRelativeFSRdn(); }
const float &MVVXjesRelativeFSRdn() { return vvv.MVVXjesRelativeFSRdn(); }
const float &PtVVXjesRelativeFSRdn() { return vvv.PtVVXjesRelativeFSRdn(); }
const float &HTjesRelativeFSRdn() { return vvv.HTjesRelativeFSRdn(); }
const float &HTJjesRelativeFSRdn() { return vvv.HTJjesRelativeFSRdn(); }
const float &HTFJjesRelativeFSRdn() { return vvv.HTFJjesRelativeFSRdn(); }
const float &SumPtFJjesRelativeFSRdn() { return vvv.SumPtFJjesRelativeFSRdn(); }
const float &SumPtJjesRelativeFSRdn() { return vvv.SumPtJjesRelativeFSRdn(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesRelativeStatFSRup() { return vvv.JsjesRelativeStatFSRup(); }
const int &NFJjesRelativeStatFSRup() { return vvv.NFJjesRelativeStatFSRup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesRelativeStatFSRup() { return vvv.FJ0jesRelativeStatFSRup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesRelativeStatFSRup() { return vvv.FJ1jesRelativeStatFSRup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesRelativeStatFSRup() { return vvv.FJ2jesRelativeStatFSRup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesRelativeStatFSRup() { return vvv.FJ3jesRelativeStatFSRup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesRelativeStatFSRup() { return vvv.FJ4jesRelativeStatFSRup(); }
const float &VMD0jesRelativeStatFSRup() { return vvv.VMD0jesRelativeStatFSRup(); }
const float &VMD1jesRelativeStatFSRup() { return vvv.VMD1jesRelativeStatFSRup(); }
const float &VMD2jesRelativeStatFSRup() { return vvv.VMD2jesRelativeStatFSRup(); }
const float &VMD3jesRelativeStatFSRup() { return vvv.VMD3jesRelativeStatFSRup(); }
const float &VMD4jesRelativeStatFSRup() { return vvv.VMD4jesRelativeStatFSRup(); }
const float &WMD0jesRelativeStatFSRup() { return vvv.WMD0jesRelativeStatFSRup(); }
const float &WMD1jesRelativeStatFSRup() { return vvv.WMD1jesRelativeStatFSRup(); }
const float &WMD2jesRelativeStatFSRup() { return vvv.WMD2jesRelativeStatFSRup(); }
const float &WMD3jesRelativeStatFSRup() { return vvv.WMD3jesRelativeStatFSRup(); }
const float &WMD4jesRelativeStatFSRup() { return vvv.WMD4jesRelativeStatFSRup(); }
const int &NQGen0jesRelativeStatFSRup() { return vvv.NQGen0jesRelativeStatFSRup(); }
const int &NQGen1jesRelativeStatFSRup() { return vvv.NQGen1jesRelativeStatFSRup(); }
const int &NQGen2jesRelativeStatFSRup() { return vvv.NQGen2jesRelativeStatFSRup(); }
const int &NQGen3jesRelativeStatFSRup() { return vvv.NQGen3jesRelativeStatFSRup(); }
const int &NQGen4jesRelativeStatFSRup() { return vvv.NQGen4jesRelativeStatFSRup(); }
const int &NBGen0jesRelativeStatFSRup() { return vvv.NBGen0jesRelativeStatFSRup(); }
const int &NBGen1jesRelativeStatFSRup() { return vvv.NBGen1jesRelativeStatFSRup(); }
const int &NBGen2jesRelativeStatFSRup() { return vvv.NBGen2jesRelativeStatFSRup(); }
const int &NBGen3jesRelativeStatFSRup() { return vvv.NBGen3jesRelativeStatFSRup(); }
const int &NBGen4jesRelativeStatFSRup() { return vvv.NBGen4jesRelativeStatFSRup(); }
const int &NLGen0jesRelativeStatFSRup() { return vvv.NLGen0jesRelativeStatFSRup(); }
const int &NLGen1jesRelativeStatFSRup() { return vvv.NLGen1jesRelativeStatFSRup(); }
const int &NLGen2jesRelativeStatFSRup() { return vvv.NLGen2jesRelativeStatFSRup(); }
const int &NLGen3jesRelativeStatFSRup() { return vvv.NLGen3jesRelativeStatFSRup(); }
const int &NLGen4jesRelativeStatFSRup() { return vvv.NLGen4jesRelativeStatFSRup(); }
const int &NVQGen0jesRelativeStatFSRup() { return vvv.NVQGen0jesRelativeStatFSRup(); }
const int &NVQGen1jesRelativeStatFSRup() { return vvv.NVQGen1jesRelativeStatFSRup(); }
const int &NVQGen2jesRelativeStatFSRup() { return vvv.NVQGen2jesRelativeStatFSRup(); }
const int &NVQGen3jesRelativeStatFSRup() { return vvv.NVQGen3jesRelativeStatFSRup(); }
const int &NVQGen4jesRelativeStatFSRup() { return vvv.NVQGen4jesRelativeStatFSRup(); }
const int &NiFJjesRelativeStatFSRup() { return vvv.NiFJjesRelativeStatFSRup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesRelativeStatFSRup() { return vvv.iFJ0jesRelativeStatFSRup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesRelativeStatFSRup() { return vvv.iFJ1jesRelativeStatFSRup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesRelativeStatFSRup() { return vvv.iFJ2jesRelativeStatFSRup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesRelativeStatFSRup() { return vvv.iFJ3jesRelativeStatFSRup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesRelativeStatFSRup() { return vvv.iFJ4jesRelativeStatFSRup(); }
const float &iVMD0jesRelativeStatFSRup() { return vvv.iVMD0jesRelativeStatFSRup(); }
const float &iVMD1jesRelativeStatFSRup() { return vvv.iVMD1jesRelativeStatFSRup(); }
const float &iVMD2jesRelativeStatFSRup() { return vvv.iVMD2jesRelativeStatFSRup(); }
const float &iVMD3jesRelativeStatFSRup() { return vvv.iVMD3jesRelativeStatFSRup(); }
const float &iVMD4jesRelativeStatFSRup() { return vvv.iVMD4jesRelativeStatFSRup(); }
const float &iWMD0jesRelativeStatFSRup() { return vvv.iWMD0jesRelativeStatFSRup(); }
const float &iWMD1jesRelativeStatFSRup() { return vvv.iWMD1jesRelativeStatFSRup(); }
const float &iWMD2jesRelativeStatFSRup() { return vvv.iWMD2jesRelativeStatFSRup(); }
const float &iWMD3jesRelativeStatFSRup() { return vvv.iWMD3jesRelativeStatFSRup(); }
const float &iWMD4jesRelativeStatFSRup() { return vvv.iWMD4jesRelativeStatFSRup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesRelativeStatFSRup() { return vvv.METjesRelativeStatFSRup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesRelativeStatFSRup() { return vvv.NujesRelativeStatFSRup(); }
const int &NJjesRelativeStatFSRup() { return vvv.NJjesRelativeStatFSRup(); }
const int &NbLoosejesRelativeStatFSRup() { return vvv.NbLoosejesRelativeStatFSRup(); }
const int &NbMediumjesRelativeStatFSRup() { return vvv.NbMediumjesRelativeStatFSRup(); }
const int &NbTightjesRelativeStatFSRup() { return vvv.NbTightjesRelativeStatFSRup(); }
const int &NoORNbLoosejesRelativeStatFSRup() { return vvv.NoORNbLoosejesRelativeStatFSRup(); }
const int &NoORNbMediumjesRelativeStatFSRup() { return vvv.NoORNbMediumjesRelativeStatFSRup(); }
const int &NoORNbTightjesRelativeStatFSRup() { return vvv.NoORNbTightjesRelativeStatFSRup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesRelativeStatFSRup() { return vvv.J0jesRelativeStatFSRup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesRelativeStatFSRup() { return vvv.J1jesRelativeStatFSRup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesRelativeStatFSRup() { return vvv.J2jesRelativeStatFSRup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesRelativeStatFSRup() { return vvv.J3jesRelativeStatFSRup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesRelativeStatFSRup() { return vvv.J4jesRelativeStatFSRup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesRelativeStatFSRup() { return vvv.J5jesRelativeStatFSRup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesRelativeStatFSRup() { return vvv.J6jesRelativeStatFSRup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesRelativeStatFSRup() { return vvv.J7jesRelativeStatFSRup(); }
const vector<int> &NQJGenjesRelativeStatFSRup() { return vvv.NQJGenjesRelativeStatFSRup(); }
const vector<int> &NBJGenjesRelativeStatFSRup() { return vvv.NBJGenjesRelativeStatFSRup(); }
const vector<int> &NLJGenjesRelativeStatFSRup() { return vvv.NLJGenjesRelativeStatFSRup(); }
const float &MVVXjesRelativeStatFSRup() { return vvv.MVVXjesRelativeStatFSRup(); }
const float &PtVVXjesRelativeStatFSRup() { return vvv.PtVVXjesRelativeStatFSRup(); }
const float &HTjesRelativeStatFSRup() { return vvv.HTjesRelativeStatFSRup(); }
const float &HTJjesRelativeStatFSRup() { return vvv.HTJjesRelativeStatFSRup(); }
const float &HTFJjesRelativeStatFSRup() { return vvv.HTFJjesRelativeStatFSRup(); }
const float &SumPtFJjesRelativeStatFSRup() { return vvv.SumPtFJjesRelativeStatFSRup(); }
const float &SumPtJjesRelativeStatFSRup() { return vvv.SumPtJjesRelativeStatFSRup(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesRelativeStatFSRdn() { return vvv.JsjesRelativeStatFSRdn(); }
const int &NFJjesRelativeStatFSRdn() { return vvv.NFJjesRelativeStatFSRdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesRelativeStatFSRdn() { return vvv.FJ0jesRelativeStatFSRdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesRelativeStatFSRdn() { return vvv.FJ1jesRelativeStatFSRdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesRelativeStatFSRdn() { return vvv.FJ2jesRelativeStatFSRdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesRelativeStatFSRdn() { return vvv.FJ3jesRelativeStatFSRdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesRelativeStatFSRdn() { return vvv.FJ4jesRelativeStatFSRdn(); }
const float &VMD0jesRelativeStatFSRdn() { return vvv.VMD0jesRelativeStatFSRdn(); }
const float &VMD1jesRelativeStatFSRdn() { return vvv.VMD1jesRelativeStatFSRdn(); }
const float &VMD2jesRelativeStatFSRdn() { return vvv.VMD2jesRelativeStatFSRdn(); }
const float &VMD3jesRelativeStatFSRdn() { return vvv.VMD3jesRelativeStatFSRdn(); }
const float &VMD4jesRelativeStatFSRdn() { return vvv.VMD4jesRelativeStatFSRdn(); }
const float &WMD0jesRelativeStatFSRdn() { return vvv.WMD0jesRelativeStatFSRdn(); }
const float &WMD1jesRelativeStatFSRdn() { return vvv.WMD1jesRelativeStatFSRdn(); }
const float &WMD2jesRelativeStatFSRdn() { return vvv.WMD2jesRelativeStatFSRdn(); }
const float &WMD3jesRelativeStatFSRdn() { return vvv.WMD3jesRelativeStatFSRdn(); }
const float &WMD4jesRelativeStatFSRdn() { return vvv.WMD4jesRelativeStatFSRdn(); }
const int &NQGen0jesRelativeStatFSRdn() { return vvv.NQGen0jesRelativeStatFSRdn(); }
const int &NQGen1jesRelativeStatFSRdn() { return vvv.NQGen1jesRelativeStatFSRdn(); }
const int &NQGen2jesRelativeStatFSRdn() { return vvv.NQGen2jesRelativeStatFSRdn(); }
const int &NQGen3jesRelativeStatFSRdn() { return vvv.NQGen3jesRelativeStatFSRdn(); }
const int &NQGen4jesRelativeStatFSRdn() { return vvv.NQGen4jesRelativeStatFSRdn(); }
const int &NBGen0jesRelativeStatFSRdn() { return vvv.NBGen0jesRelativeStatFSRdn(); }
const int &NBGen1jesRelativeStatFSRdn() { return vvv.NBGen1jesRelativeStatFSRdn(); }
const int &NBGen2jesRelativeStatFSRdn() { return vvv.NBGen2jesRelativeStatFSRdn(); }
const int &NBGen3jesRelativeStatFSRdn() { return vvv.NBGen3jesRelativeStatFSRdn(); }
const int &NBGen4jesRelativeStatFSRdn() { return vvv.NBGen4jesRelativeStatFSRdn(); }
const int &NLGen0jesRelativeStatFSRdn() { return vvv.NLGen0jesRelativeStatFSRdn(); }
const int &NLGen1jesRelativeStatFSRdn() { return vvv.NLGen1jesRelativeStatFSRdn(); }
const int &NLGen2jesRelativeStatFSRdn() { return vvv.NLGen2jesRelativeStatFSRdn(); }
const int &NLGen3jesRelativeStatFSRdn() { return vvv.NLGen3jesRelativeStatFSRdn(); }
const int &NLGen4jesRelativeStatFSRdn() { return vvv.NLGen4jesRelativeStatFSRdn(); }
const int &NVQGen0jesRelativeStatFSRdn() { return vvv.NVQGen0jesRelativeStatFSRdn(); }
const int &NVQGen1jesRelativeStatFSRdn() { return vvv.NVQGen1jesRelativeStatFSRdn(); }
const int &NVQGen2jesRelativeStatFSRdn() { return vvv.NVQGen2jesRelativeStatFSRdn(); }
const int &NVQGen3jesRelativeStatFSRdn() { return vvv.NVQGen3jesRelativeStatFSRdn(); }
const int &NVQGen4jesRelativeStatFSRdn() { return vvv.NVQGen4jesRelativeStatFSRdn(); }
const int &NiFJjesRelativeStatFSRdn() { return vvv.NiFJjesRelativeStatFSRdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesRelativeStatFSRdn() { return vvv.iFJ0jesRelativeStatFSRdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesRelativeStatFSRdn() { return vvv.iFJ1jesRelativeStatFSRdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesRelativeStatFSRdn() { return vvv.iFJ2jesRelativeStatFSRdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesRelativeStatFSRdn() { return vvv.iFJ3jesRelativeStatFSRdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesRelativeStatFSRdn() { return vvv.iFJ4jesRelativeStatFSRdn(); }
const float &iVMD0jesRelativeStatFSRdn() { return vvv.iVMD0jesRelativeStatFSRdn(); }
const float &iVMD1jesRelativeStatFSRdn() { return vvv.iVMD1jesRelativeStatFSRdn(); }
const float &iVMD2jesRelativeStatFSRdn() { return vvv.iVMD2jesRelativeStatFSRdn(); }
const float &iVMD3jesRelativeStatFSRdn() { return vvv.iVMD3jesRelativeStatFSRdn(); }
const float &iVMD4jesRelativeStatFSRdn() { return vvv.iVMD4jesRelativeStatFSRdn(); }
const float &iWMD0jesRelativeStatFSRdn() { return vvv.iWMD0jesRelativeStatFSRdn(); }
const float &iWMD1jesRelativeStatFSRdn() { return vvv.iWMD1jesRelativeStatFSRdn(); }
const float &iWMD2jesRelativeStatFSRdn() { return vvv.iWMD2jesRelativeStatFSRdn(); }
const float &iWMD3jesRelativeStatFSRdn() { return vvv.iWMD3jesRelativeStatFSRdn(); }
const float &iWMD4jesRelativeStatFSRdn() { return vvv.iWMD4jesRelativeStatFSRdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesRelativeStatFSRdn() { return vvv.METjesRelativeStatFSRdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesRelativeStatFSRdn() { return vvv.NujesRelativeStatFSRdn(); }
const int &NJjesRelativeStatFSRdn() { return vvv.NJjesRelativeStatFSRdn(); }
const int &NbLoosejesRelativeStatFSRdn() { return vvv.NbLoosejesRelativeStatFSRdn(); }
const int &NbMediumjesRelativeStatFSRdn() { return vvv.NbMediumjesRelativeStatFSRdn(); }
const int &NbTightjesRelativeStatFSRdn() { return vvv.NbTightjesRelativeStatFSRdn(); }
const int &NoORNbLoosejesRelativeStatFSRdn() { return vvv.NoORNbLoosejesRelativeStatFSRdn(); }
const int &NoORNbMediumjesRelativeStatFSRdn() { return vvv.NoORNbMediumjesRelativeStatFSRdn(); }
const int &NoORNbTightjesRelativeStatFSRdn() { return vvv.NoORNbTightjesRelativeStatFSRdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesRelativeStatFSRdn() { return vvv.J0jesRelativeStatFSRdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesRelativeStatFSRdn() { return vvv.J1jesRelativeStatFSRdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesRelativeStatFSRdn() { return vvv.J2jesRelativeStatFSRdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesRelativeStatFSRdn() { return vvv.J3jesRelativeStatFSRdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesRelativeStatFSRdn() { return vvv.J4jesRelativeStatFSRdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesRelativeStatFSRdn() { return vvv.J5jesRelativeStatFSRdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesRelativeStatFSRdn() { return vvv.J6jesRelativeStatFSRdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesRelativeStatFSRdn() { return vvv.J7jesRelativeStatFSRdn(); }
const vector<int> &NQJGenjesRelativeStatFSRdn() { return vvv.NQJGenjesRelativeStatFSRdn(); }
const vector<int> &NBJGenjesRelativeStatFSRdn() { return vvv.NBJGenjesRelativeStatFSRdn(); }
const vector<int> &NLJGenjesRelativeStatFSRdn() { return vvv.NLJGenjesRelativeStatFSRdn(); }
const float &MVVXjesRelativeStatFSRdn() { return vvv.MVVXjesRelativeStatFSRdn(); }
const float &PtVVXjesRelativeStatFSRdn() { return vvv.PtVVXjesRelativeStatFSRdn(); }
const float &HTjesRelativeStatFSRdn() { return vvv.HTjesRelativeStatFSRdn(); }
const float &HTJjesRelativeStatFSRdn() { return vvv.HTJjesRelativeStatFSRdn(); }
const float &HTFJjesRelativeStatFSRdn() { return vvv.HTFJjesRelativeStatFSRdn(); }
const float &SumPtFJjesRelativeStatFSRdn() { return vvv.SumPtFJjesRelativeStatFSRdn(); }
const float &SumPtJjesRelativeStatFSRdn() { return vvv.SumPtJjesRelativeStatFSRdn(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesRelativeStatECup() { return vvv.JsjesRelativeStatECup(); }
const int &NFJjesRelativeStatECup() { return vvv.NFJjesRelativeStatECup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesRelativeStatECup() { return vvv.FJ0jesRelativeStatECup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesRelativeStatECup() { return vvv.FJ1jesRelativeStatECup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesRelativeStatECup() { return vvv.FJ2jesRelativeStatECup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesRelativeStatECup() { return vvv.FJ3jesRelativeStatECup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesRelativeStatECup() { return vvv.FJ4jesRelativeStatECup(); }
const float &VMD0jesRelativeStatECup() { return vvv.VMD0jesRelativeStatECup(); }
const float &VMD1jesRelativeStatECup() { return vvv.VMD1jesRelativeStatECup(); }
const float &VMD2jesRelativeStatECup() { return vvv.VMD2jesRelativeStatECup(); }
const float &VMD3jesRelativeStatECup() { return vvv.VMD3jesRelativeStatECup(); }
const float &VMD4jesRelativeStatECup() { return vvv.VMD4jesRelativeStatECup(); }
const float &WMD0jesRelativeStatECup() { return vvv.WMD0jesRelativeStatECup(); }
const float &WMD1jesRelativeStatECup() { return vvv.WMD1jesRelativeStatECup(); }
const float &WMD2jesRelativeStatECup() { return vvv.WMD2jesRelativeStatECup(); }
const float &WMD3jesRelativeStatECup() { return vvv.WMD3jesRelativeStatECup(); }
const float &WMD4jesRelativeStatECup() { return vvv.WMD4jesRelativeStatECup(); }
const int &NQGen0jesRelativeStatECup() { return vvv.NQGen0jesRelativeStatECup(); }
const int &NQGen1jesRelativeStatECup() { return vvv.NQGen1jesRelativeStatECup(); }
const int &NQGen2jesRelativeStatECup() { return vvv.NQGen2jesRelativeStatECup(); }
const int &NQGen3jesRelativeStatECup() { return vvv.NQGen3jesRelativeStatECup(); }
const int &NQGen4jesRelativeStatECup() { return vvv.NQGen4jesRelativeStatECup(); }
const int &NBGen0jesRelativeStatECup() { return vvv.NBGen0jesRelativeStatECup(); }
const int &NBGen1jesRelativeStatECup() { return vvv.NBGen1jesRelativeStatECup(); }
const int &NBGen2jesRelativeStatECup() { return vvv.NBGen2jesRelativeStatECup(); }
const int &NBGen3jesRelativeStatECup() { return vvv.NBGen3jesRelativeStatECup(); }
const int &NBGen4jesRelativeStatECup() { return vvv.NBGen4jesRelativeStatECup(); }
const int &NLGen0jesRelativeStatECup() { return vvv.NLGen0jesRelativeStatECup(); }
const int &NLGen1jesRelativeStatECup() { return vvv.NLGen1jesRelativeStatECup(); }
const int &NLGen2jesRelativeStatECup() { return vvv.NLGen2jesRelativeStatECup(); }
const int &NLGen3jesRelativeStatECup() { return vvv.NLGen3jesRelativeStatECup(); }
const int &NLGen4jesRelativeStatECup() { return vvv.NLGen4jesRelativeStatECup(); }
const int &NVQGen0jesRelativeStatECup() { return vvv.NVQGen0jesRelativeStatECup(); }
const int &NVQGen1jesRelativeStatECup() { return vvv.NVQGen1jesRelativeStatECup(); }
const int &NVQGen2jesRelativeStatECup() { return vvv.NVQGen2jesRelativeStatECup(); }
const int &NVQGen3jesRelativeStatECup() { return vvv.NVQGen3jesRelativeStatECup(); }
const int &NVQGen4jesRelativeStatECup() { return vvv.NVQGen4jesRelativeStatECup(); }
const int &NiFJjesRelativeStatECup() { return vvv.NiFJjesRelativeStatECup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesRelativeStatECup() { return vvv.iFJ0jesRelativeStatECup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesRelativeStatECup() { return vvv.iFJ1jesRelativeStatECup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesRelativeStatECup() { return vvv.iFJ2jesRelativeStatECup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesRelativeStatECup() { return vvv.iFJ3jesRelativeStatECup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesRelativeStatECup() { return vvv.iFJ4jesRelativeStatECup(); }
const float &iVMD0jesRelativeStatECup() { return vvv.iVMD0jesRelativeStatECup(); }
const float &iVMD1jesRelativeStatECup() { return vvv.iVMD1jesRelativeStatECup(); }
const float &iVMD2jesRelativeStatECup() { return vvv.iVMD2jesRelativeStatECup(); }
const float &iVMD3jesRelativeStatECup() { return vvv.iVMD3jesRelativeStatECup(); }
const float &iVMD4jesRelativeStatECup() { return vvv.iVMD4jesRelativeStatECup(); }
const float &iWMD0jesRelativeStatECup() { return vvv.iWMD0jesRelativeStatECup(); }
const float &iWMD1jesRelativeStatECup() { return vvv.iWMD1jesRelativeStatECup(); }
const float &iWMD2jesRelativeStatECup() { return vvv.iWMD2jesRelativeStatECup(); }
const float &iWMD3jesRelativeStatECup() { return vvv.iWMD3jesRelativeStatECup(); }
const float &iWMD4jesRelativeStatECup() { return vvv.iWMD4jesRelativeStatECup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesRelativeStatECup() { return vvv.METjesRelativeStatECup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesRelativeStatECup() { return vvv.NujesRelativeStatECup(); }
const int &NJjesRelativeStatECup() { return vvv.NJjesRelativeStatECup(); }
const int &NbLoosejesRelativeStatECup() { return vvv.NbLoosejesRelativeStatECup(); }
const int &NbMediumjesRelativeStatECup() { return vvv.NbMediumjesRelativeStatECup(); }
const int &NbTightjesRelativeStatECup() { return vvv.NbTightjesRelativeStatECup(); }
const int &NoORNbLoosejesRelativeStatECup() { return vvv.NoORNbLoosejesRelativeStatECup(); }
const int &NoORNbMediumjesRelativeStatECup() { return vvv.NoORNbMediumjesRelativeStatECup(); }
const int &NoORNbTightjesRelativeStatECup() { return vvv.NoORNbTightjesRelativeStatECup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesRelativeStatECup() { return vvv.J0jesRelativeStatECup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesRelativeStatECup() { return vvv.J1jesRelativeStatECup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesRelativeStatECup() { return vvv.J2jesRelativeStatECup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesRelativeStatECup() { return vvv.J3jesRelativeStatECup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesRelativeStatECup() { return vvv.J4jesRelativeStatECup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesRelativeStatECup() { return vvv.J5jesRelativeStatECup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesRelativeStatECup() { return vvv.J6jesRelativeStatECup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesRelativeStatECup() { return vvv.J7jesRelativeStatECup(); }
const vector<int> &NQJGenjesRelativeStatECup() { return vvv.NQJGenjesRelativeStatECup(); }
const vector<int> &NBJGenjesRelativeStatECup() { return vvv.NBJGenjesRelativeStatECup(); }
const vector<int> &NLJGenjesRelativeStatECup() { return vvv.NLJGenjesRelativeStatECup(); }
const float &MVVXjesRelativeStatECup() { return vvv.MVVXjesRelativeStatECup(); }
const float &PtVVXjesRelativeStatECup() { return vvv.PtVVXjesRelativeStatECup(); }
const float &HTjesRelativeStatECup() { return vvv.HTjesRelativeStatECup(); }
const float &HTJjesRelativeStatECup() { return vvv.HTJjesRelativeStatECup(); }
const float &HTFJjesRelativeStatECup() { return vvv.HTFJjesRelativeStatECup(); }
const float &SumPtFJjesRelativeStatECup() { return vvv.SumPtFJjesRelativeStatECup(); }
const float &SumPtJjesRelativeStatECup() { return vvv.SumPtJjesRelativeStatECup(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesRelativeStatECdn() { return vvv.JsjesRelativeStatECdn(); }
const int &NFJjesRelativeStatECdn() { return vvv.NFJjesRelativeStatECdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesRelativeStatECdn() { return vvv.FJ0jesRelativeStatECdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesRelativeStatECdn() { return vvv.FJ1jesRelativeStatECdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesRelativeStatECdn() { return vvv.FJ2jesRelativeStatECdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesRelativeStatECdn() { return vvv.FJ3jesRelativeStatECdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesRelativeStatECdn() { return vvv.FJ4jesRelativeStatECdn(); }
const float &VMD0jesRelativeStatECdn() { return vvv.VMD0jesRelativeStatECdn(); }
const float &VMD1jesRelativeStatECdn() { return vvv.VMD1jesRelativeStatECdn(); }
const float &VMD2jesRelativeStatECdn() { return vvv.VMD2jesRelativeStatECdn(); }
const float &VMD3jesRelativeStatECdn() { return vvv.VMD3jesRelativeStatECdn(); }
const float &VMD4jesRelativeStatECdn() { return vvv.VMD4jesRelativeStatECdn(); }
const float &WMD0jesRelativeStatECdn() { return vvv.WMD0jesRelativeStatECdn(); }
const float &WMD1jesRelativeStatECdn() { return vvv.WMD1jesRelativeStatECdn(); }
const float &WMD2jesRelativeStatECdn() { return vvv.WMD2jesRelativeStatECdn(); }
const float &WMD3jesRelativeStatECdn() { return vvv.WMD3jesRelativeStatECdn(); }
const float &WMD4jesRelativeStatECdn() { return vvv.WMD4jesRelativeStatECdn(); }
const int &NQGen0jesRelativeStatECdn() { return vvv.NQGen0jesRelativeStatECdn(); }
const int &NQGen1jesRelativeStatECdn() { return vvv.NQGen1jesRelativeStatECdn(); }
const int &NQGen2jesRelativeStatECdn() { return vvv.NQGen2jesRelativeStatECdn(); }
const int &NQGen3jesRelativeStatECdn() { return vvv.NQGen3jesRelativeStatECdn(); }
const int &NQGen4jesRelativeStatECdn() { return vvv.NQGen4jesRelativeStatECdn(); }
const int &NBGen0jesRelativeStatECdn() { return vvv.NBGen0jesRelativeStatECdn(); }
const int &NBGen1jesRelativeStatECdn() { return vvv.NBGen1jesRelativeStatECdn(); }
const int &NBGen2jesRelativeStatECdn() { return vvv.NBGen2jesRelativeStatECdn(); }
const int &NBGen3jesRelativeStatECdn() { return vvv.NBGen3jesRelativeStatECdn(); }
const int &NBGen4jesRelativeStatECdn() { return vvv.NBGen4jesRelativeStatECdn(); }
const int &NLGen0jesRelativeStatECdn() { return vvv.NLGen0jesRelativeStatECdn(); }
const int &NLGen1jesRelativeStatECdn() { return vvv.NLGen1jesRelativeStatECdn(); }
const int &NLGen2jesRelativeStatECdn() { return vvv.NLGen2jesRelativeStatECdn(); }
const int &NLGen3jesRelativeStatECdn() { return vvv.NLGen3jesRelativeStatECdn(); }
const int &NLGen4jesRelativeStatECdn() { return vvv.NLGen4jesRelativeStatECdn(); }
const int &NVQGen0jesRelativeStatECdn() { return vvv.NVQGen0jesRelativeStatECdn(); }
const int &NVQGen1jesRelativeStatECdn() { return vvv.NVQGen1jesRelativeStatECdn(); }
const int &NVQGen2jesRelativeStatECdn() { return vvv.NVQGen2jesRelativeStatECdn(); }
const int &NVQGen3jesRelativeStatECdn() { return vvv.NVQGen3jesRelativeStatECdn(); }
const int &NVQGen4jesRelativeStatECdn() { return vvv.NVQGen4jesRelativeStatECdn(); }
const int &NiFJjesRelativeStatECdn() { return vvv.NiFJjesRelativeStatECdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesRelativeStatECdn() { return vvv.iFJ0jesRelativeStatECdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesRelativeStatECdn() { return vvv.iFJ1jesRelativeStatECdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesRelativeStatECdn() { return vvv.iFJ2jesRelativeStatECdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesRelativeStatECdn() { return vvv.iFJ3jesRelativeStatECdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesRelativeStatECdn() { return vvv.iFJ4jesRelativeStatECdn(); }
const float &iVMD0jesRelativeStatECdn() { return vvv.iVMD0jesRelativeStatECdn(); }
const float &iVMD1jesRelativeStatECdn() { return vvv.iVMD1jesRelativeStatECdn(); }
const float &iVMD2jesRelativeStatECdn() { return vvv.iVMD2jesRelativeStatECdn(); }
const float &iVMD3jesRelativeStatECdn() { return vvv.iVMD3jesRelativeStatECdn(); }
const float &iVMD4jesRelativeStatECdn() { return vvv.iVMD4jesRelativeStatECdn(); }
const float &iWMD0jesRelativeStatECdn() { return vvv.iWMD0jesRelativeStatECdn(); }
const float &iWMD1jesRelativeStatECdn() { return vvv.iWMD1jesRelativeStatECdn(); }
const float &iWMD2jesRelativeStatECdn() { return vvv.iWMD2jesRelativeStatECdn(); }
const float &iWMD3jesRelativeStatECdn() { return vvv.iWMD3jesRelativeStatECdn(); }
const float &iWMD4jesRelativeStatECdn() { return vvv.iWMD4jesRelativeStatECdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesRelativeStatECdn() { return vvv.METjesRelativeStatECdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesRelativeStatECdn() { return vvv.NujesRelativeStatECdn(); }
const int &NJjesRelativeStatECdn() { return vvv.NJjesRelativeStatECdn(); }
const int &NbLoosejesRelativeStatECdn() { return vvv.NbLoosejesRelativeStatECdn(); }
const int &NbMediumjesRelativeStatECdn() { return vvv.NbMediumjesRelativeStatECdn(); }
const int &NbTightjesRelativeStatECdn() { return vvv.NbTightjesRelativeStatECdn(); }
const int &NoORNbLoosejesRelativeStatECdn() { return vvv.NoORNbLoosejesRelativeStatECdn(); }
const int &NoORNbMediumjesRelativeStatECdn() { return vvv.NoORNbMediumjesRelativeStatECdn(); }
const int &NoORNbTightjesRelativeStatECdn() { return vvv.NoORNbTightjesRelativeStatECdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesRelativeStatECdn() { return vvv.J0jesRelativeStatECdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesRelativeStatECdn() { return vvv.J1jesRelativeStatECdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesRelativeStatECdn() { return vvv.J2jesRelativeStatECdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesRelativeStatECdn() { return vvv.J3jesRelativeStatECdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesRelativeStatECdn() { return vvv.J4jesRelativeStatECdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesRelativeStatECdn() { return vvv.J5jesRelativeStatECdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesRelativeStatECdn() { return vvv.J6jesRelativeStatECdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesRelativeStatECdn() { return vvv.J7jesRelativeStatECdn(); }
const vector<int> &NQJGenjesRelativeStatECdn() { return vvv.NQJGenjesRelativeStatECdn(); }
const vector<int> &NBJGenjesRelativeStatECdn() { return vvv.NBJGenjesRelativeStatECdn(); }
const vector<int> &NLJGenjesRelativeStatECdn() { return vvv.NLJGenjesRelativeStatECdn(); }
const float &MVVXjesRelativeStatECdn() { return vvv.MVVXjesRelativeStatECdn(); }
const float &PtVVXjesRelativeStatECdn() { return vvv.PtVVXjesRelativeStatECdn(); }
const float &HTjesRelativeStatECdn() { return vvv.HTjesRelativeStatECdn(); }
const float &HTJjesRelativeStatECdn() { return vvv.HTJjesRelativeStatECdn(); }
const float &HTFJjesRelativeStatECdn() { return vvv.HTFJjesRelativeStatECdn(); }
const float &SumPtFJjesRelativeStatECdn() { return vvv.SumPtFJjesRelativeStatECdn(); }
const float &SumPtJjesRelativeStatECdn() { return vvv.SumPtJjesRelativeStatECdn(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesRelativeStatHFup() { return vvv.JsjesRelativeStatHFup(); }
const int &NFJjesRelativeStatHFup() { return vvv.NFJjesRelativeStatHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesRelativeStatHFup() { return vvv.FJ0jesRelativeStatHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesRelativeStatHFup() { return vvv.FJ1jesRelativeStatHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesRelativeStatHFup() { return vvv.FJ2jesRelativeStatHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesRelativeStatHFup() { return vvv.FJ3jesRelativeStatHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesRelativeStatHFup() { return vvv.FJ4jesRelativeStatHFup(); }
const float &VMD0jesRelativeStatHFup() { return vvv.VMD0jesRelativeStatHFup(); }
const float &VMD1jesRelativeStatHFup() { return vvv.VMD1jesRelativeStatHFup(); }
const float &VMD2jesRelativeStatHFup() { return vvv.VMD2jesRelativeStatHFup(); }
const float &VMD3jesRelativeStatHFup() { return vvv.VMD3jesRelativeStatHFup(); }
const float &VMD4jesRelativeStatHFup() { return vvv.VMD4jesRelativeStatHFup(); }
const float &WMD0jesRelativeStatHFup() { return vvv.WMD0jesRelativeStatHFup(); }
const float &WMD1jesRelativeStatHFup() { return vvv.WMD1jesRelativeStatHFup(); }
const float &WMD2jesRelativeStatHFup() { return vvv.WMD2jesRelativeStatHFup(); }
const float &WMD3jesRelativeStatHFup() { return vvv.WMD3jesRelativeStatHFup(); }
const float &WMD4jesRelativeStatHFup() { return vvv.WMD4jesRelativeStatHFup(); }
const int &NQGen0jesRelativeStatHFup() { return vvv.NQGen0jesRelativeStatHFup(); }
const int &NQGen1jesRelativeStatHFup() { return vvv.NQGen1jesRelativeStatHFup(); }
const int &NQGen2jesRelativeStatHFup() { return vvv.NQGen2jesRelativeStatHFup(); }
const int &NQGen3jesRelativeStatHFup() { return vvv.NQGen3jesRelativeStatHFup(); }
const int &NQGen4jesRelativeStatHFup() { return vvv.NQGen4jesRelativeStatHFup(); }
const int &NBGen0jesRelativeStatHFup() { return vvv.NBGen0jesRelativeStatHFup(); }
const int &NBGen1jesRelativeStatHFup() { return vvv.NBGen1jesRelativeStatHFup(); }
const int &NBGen2jesRelativeStatHFup() { return vvv.NBGen2jesRelativeStatHFup(); }
const int &NBGen3jesRelativeStatHFup() { return vvv.NBGen3jesRelativeStatHFup(); }
const int &NBGen4jesRelativeStatHFup() { return vvv.NBGen4jesRelativeStatHFup(); }
const int &NLGen0jesRelativeStatHFup() { return vvv.NLGen0jesRelativeStatHFup(); }
const int &NLGen1jesRelativeStatHFup() { return vvv.NLGen1jesRelativeStatHFup(); }
const int &NLGen2jesRelativeStatHFup() { return vvv.NLGen2jesRelativeStatHFup(); }
const int &NLGen3jesRelativeStatHFup() { return vvv.NLGen3jesRelativeStatHFup(); }
const int &NLGen4jesRelativeStatHFup() { return vvv.NLGen4jesRelativeStatHFup(); }
const int &NVQGen0jesRelativeStatHFup() { return vvv.NVQGen0jesRelativeStatHFup(); }
const int &NVQGen1jesRelativeStatHFup() { return vvv.NVQGen1jesRelativeStatHFup(); }
const int &NVQGen2jesRelativeStatHFup() { return vvv.NVQGen2jesRelativeStatHFup(); }
const int &NVQGen3jesRelativeStatHFup() { return vvv.NVQGen3jesRelativeStatHFup(); }
const int &NVQGen4jesRelativeStatHFup() { return vvv.NVQGen4jesRelativeStatHFup(); }
const int &NiFJjesRelativeStatHFup() { return vvv.NiFJjesRelativeStatHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesRelativeStatHFup() { return vvv.iFJ0jesRelativeStatHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesRelativeStatHFup() { return vvv.iFJ1jesRelativeStatHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesRelativeStatHFup() { return vvv.iFJ2jesRelativeStatHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesRelativeStatHFup() { return vvv.iFJ3jesRelativeStatHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesRelativeStatHFup() { return vvv.iFJ4jesRelativeStatHFup(); }
const float &iVMD0jesRelativeStatHFup() { return vvv.iVMD0jesRelativeStatHFup(); }
const float &iVMD1jesRelativeStatHFup() { return vvv.iVMD1jesRelativeStatHFup(); }
const float &iVMD2jesRelativeStatHFup() { return vvv.iVMD2jesRelativeStatHFup(); }
const float &iVMD3jesRelativeStatHFup() { return vvv.iVMD3jesRelativeStatHFup(); }
const float &iVMD4jesRelativeStatHFup() { return vvv.iVMD4jesRelativeStatHFup(); }
const float &iWMD0jesRelativeStatHFup() { return vvv.iWMD0jesRelativeStatHFup(); }
const float &iWMD1jesRelativeStatHFup() { return vvv.iWMD1jesRelativeStatHFup(); }
const float &iWMD2jesRelativeStatHFup() { return vvv.iWMD2jesRelativeStatHFup(); }
const float &iWMD3jesRelativeStatHFup() { return vvv.iWMD3jesRelativeStatHFup(); }
const float &iWMD4jesRelativeStatHFup() { return vvv.iWMD4jesRelativeStatHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesRelativeStatHFup() { return vvv.METjesRelativeStatHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesRelativeStatHFup() { return vvv.NujesRelativeStatHFup(); }
const int &NJjesRelativeStatHFup() { return vvv.NJjesRelativeStatHFup(); }
const int &NbLoosejesRelativeStatHFup() { return vvv.NbLoosejesRelativeStatHFup(); }
const int &NbMediumjesRelativeStatHFup() { return vvv.NbMediumjesRelativeStatHFup(); }
const int &NbTightjesRelativeStatHFup() { return vvv.NbTightjesRelativeStatHFup(); }
const int &NoORNbLoosejesRelativeStatHFup() { return vvv.NoORNbLoosejesRelativeStatHFup(); }
const int &NoORNbMediumjesRelativeStatHFup() { return vvv.NoORNbMediumjesRelativeStatHFup(); }
const int &NoORNbTightjesRelativeStatHFup() { return vvv.NoORNbTightjesRelativeStatHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesRelativeStatHFup() { return vvv.J0jesRelativeStatHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesRelativeStatHFup() { return vvv.J1jesRelativeStatHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesRelativeStatHFup() { return vvv.J2jesRelativeStatHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesRelativeStatHFup() { return vvv.J3jesRelativeStatHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesRelativeStatHFup() { return vvv.J4jesRelativeStatHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesRelativeStatHFup() { return vvv.J5jesRelativeStatHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesRelativeStatHFup() { return vvv.J6jesRelativeStatHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesRelativeStatHFup() { return vvv.J7jesRelativeStatHFup(); }
const vector<int> &NQJGenjesRelativeStatHFup() { return vvv.NQJGenjesRelativeStatHFup(); }
const vector<int> &NBJGenjesRelativeStatHFup() { return vvv.NBJGenjesRelativeStatHFup(); }
const vector<int> &NLJGenjesRelativeStatHFup() { return vvv.NLJGenjesRelativeStatHFup(); }
const float &MVVXjesRelativeStatHFup() { return vvv.MVVXjesRelativeStatHFup(); }
const float &PtVVXjesRelativeStatHFup() { return vvv.PtVVXjesRelativeStatHFup(); }
const float &HTjesRelativeStatHFup() { return vvv.HTjesRelativeStatHFup(); }
const float &HTJjesRelativeStatHFup() { return vvv.HTJjesRelativeStatHFup(); }
const float &HTFJjesRelativeStatHFup() { return vvv.HTFJjesRelativeStatHFup(); }
const float &SumPtFJjesRelativeStatHFup() { return vvv.SumPtFJjesRelativeStatHFup(); }
const float &SumPtJjesRelativeStatHFup() { return vvv.SumPtJjesRelativeStatHFup(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesRelativeStatHFdn() { return vvv.JsjesRelativeStatHFdn(); }
const int &NFJjesRelativeStatHFdn() { return vvv.NFJjesRelativeStatHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesRelativeStatHFdn() { return vvv.FJ0jesRelativeStatHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesRelativeStatHFdn() { return vvv.FJ1jesRelativeStatHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesRelativeStatHFdn() { return vvv.FJ2jesRelativeStatHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesRelativeStatHFdn() { return vvv.FJ3jesRelativeStatHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesRelativeStatHFdn() { return vvv.FJ4jesRelativeStatHFdn(); }
const float &VMD0jesRelativeStatHFdn() { return vvv.VMD0jesRelativeStatHFdn(); }
const float &VMD1jesRelativeStatHFdn() { return vvv.VMD1jesRelativeStatHFdn(); }
const float &VMD2jesRelativeStatHFdn() { return vvv.VMD2jesRelativeStatHFdn(); }
const float &VMD3jesRelativeStatHFdn() { return vvv.VMD3jesRelativeStatHFdn(); }
const float &VMD4jesRelativeStatHFdn() { return vvv.VMD4jesRelativeStatHFdn(); }
const float &WMD0jesRelativeStatHFdn() { return vvv.WMD0jesRelativeStatHFdn(); }
const float &WMD1jesRelativeStatHFdn() { return vvv.WMD1jesRelativeStatHFdn(); }
const float &WMD2jesRelativeStatHFdn() { return vvv.WMD2jesRelativeStatHFdn(); }
const float &WMD3jesRelativeStatHFdn() { return vvv.WMD3jesRelativeStatHFdn(); }
const float &WMD4jesRelativeStatHFdn() { return vvv.WMD4jesRelativeStatHFdn(); }
const int &NQGen0jesRelativeStatHFdn() { return vvv.NQGen0jesRelativeStatHFdn(); }
const int &NQGen1jesRelativeStatHFdn() { return vvv.NQGen1jesRelativeStatHFdn(); }
const int &NQGen2jesRelativeStatHFdn() { return vvv.NQGen2jesRelativeStatHFdn(); }
const int &NQGen3jesRelativeStatHFdn() { return vvv.NQGen3jesRelativeStatHFdn(); }
const int &NQGen4jesRelativeStatHFdn() { return vvv.NQGen4jesRelativeStatHFdn(); }
const int &NBGen0jesRelativeStatHFdn() { return vvv.NBGen0jesRelativeStatHFdn(); }
const int &NBGen1jesRelativeStatHFdn() { return vvv.NBGen1jesRelativeStatHFdn(); }
const int &NBGen2jesRelativeStatHFdn() { return vvv.NBGen2jesRelativeStatHFdn(); }
const int &NBGen3jesRelativeStatHFdn() { return vvv.NBGen3jesRelativeStatHFdn(); }
const int &NBGen4jesRelativeStatHFdn() { return vvv.NBGen4jesRelativeStatHFdn(); }
const int &NLGen0jesRelativeStatHFdn() { return vvv.NLGen0jesRelativeStatHFdn(); }
const int &NLGen1jesRelativeStatHFdn() { return vvv.NLGen1jesRelativeStatHFdn(); }
const int &NLGen2jesRelativeStatHFdn() { return vvv.NLGen2jesRelativeStatHFdn(); }
const int &NLGen3jesRelativeStatHFdn() { return vvv.NLGen3jesRelativeStatHFdn(); }
const int &NLGen4jesRelativeStatHFdn() { return vvv.NLGen4jesRelativeStatHFdn(); }
const int &NVQGen0jesRelativeStatHFdn() { return vvv.NVQGen0jesRelativeStatHFdn(); }
const int &NVQGen1jesRelativeStatHFdn() { return vvv.NVQGen1jesRelativeStatHFdn(); }
const int &NVQGen2jesRelativeStatHFdn() { return vvv.NVQGen2jesRelativeStatHFdn(); }
const int &NVQGen3jesRelativeStatHFdn() { return vvv.NVQGen3jesRelativeStatHFdn(); }
const int &NVQGen4jesRelativeStatHFdn() { return vvv.NVQGen4jesRelativeStatHFdn(); }
const int &NiFJjesRelativeStatHFdn() { return vvv.NiFJjesRelativeStatHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesRelativeStatHFdn() { return vvv.iFJ0jesRelativeStatHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesRelativeStatHFdn() { return vvv.iFJ1jesRelativeStatHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesRelativeStatHFdn() { return vvv.iFJ2jesRelativeStatHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesRelativeStatHFdn() { return vvv.iFJ3jesRelativeStatHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesRelativeStatHFdn() { return vvv.iFJ4jesRelativeStatHFdn(); }
const float &iVMD0jesRelativeStatHFdn() { return vvv.iVMD0jesRelativeStatHFdn(); }
const float &iVMD1jesRelativeStatHFdn() { return vvv.iVMD1jesRelativeStatHFdn(); }
const float &iVMD2jesRelativeStatHFdn() { return vvv.iVMD2jesRelativeStatHFdn(); }
const float &iVMD3jesRelativeStatHFdn() { return vvv.iVMD3jesRelativeStatHFdn(); }
const float &iVMD4jesRelativeStatHFdn() { return vvv.iVMD4jesRelativeStatHFdn(); }
const float &iWMD0jesRelativeStatHFdn() { return vvv.iWMD0jesRelativeStatHFdn(); }
const float &iWMD1jesRelativeStatHFdn() { return vvv.iWMD1jesRelativeStatHFdn(); }
const float &iWMD2jesRelativeStatHFdn() { return vvv.iWMD2jesRelativeStatHFdn(); }
const float &iWMD3jesRelativeStatHFdn() { return vvv.iWMD3jesRelativeStatHFdn(); }
const float &iWMD4jesRelativeStatHFdn() { return vvv.iWMD4jesRelativeStatHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesRelativeStatHFdn() { return vvv.METjesRelativeStatHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesRelativeStatHFdn() { return vvv.NujesRelativeStatHFdn(); }
const int &NJjesRelativeStatHFdn() { return vvv.NJjesRelativeStatHFdn(); }
const int &NbLoosejesRelativeStatHFdn() { return vvv.NbLoosejesRelativeStatHFdn(); }
const int &NbMediumjesRelativeStatHFdn() { return vvv.NbMediumjesRelativeStatHFdn(); }
const int &NbTightjesRelativeStatHFdn() { return vvv.NbTightjesRelativeStatHFdn(); }
const int &NoORNbLoosejesRelativeStatHFdn() { return vvv.NoORNbLoosejesRelativeStatHFdn(); }
const int &NoORNbMediumjesRelativeStatHFdn() { return vvv.NoORNbMediumjesRelativeStatHFdn(); }
const int &NoORNbTightjesRelativeStatHFdn() { return vvv.NoORNbTightjesRelativeStatHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesRelativeStatHFdn() { return vvv.J0jesRelativeStatHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesRelativeStatHFdn() { return vvv.J1jesRelativeStatHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesRelativeStatHFdn() { return vvv.J2jesRelativeStatHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesRelativeStatHFdn() { return vvv.J3jesRelativeStatHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesRelativeStatHFdn() { return vvv.J4jesRelativeStatHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesRelativeStatHFdn() { return vvv.J5jesRelativeStatHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesRelativeStatHFdn() { return vvv.J6jesRelativeStatHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesRelativeStatHFdn() { return vvv.J7jesRelativeStatHFdn(); }
const vector<int> &NQJGenjesRelativeStatHFdn() { return vvv.NQJGenjesRelativeStatHFdn(); }
const vector<int> &NBJGenjesRelativeStatHFdn() { return vvv.NBJGenjesRelativeStatHFdn(); }
const vector<int> &NLJGenjesRelativeStatHFdn() { return vvv.NLJGenjesRelativeStatHFdn(); }
const float &MVVXjesRelativeStatHFdn() { return vvv.MVVXjesRelativeStatHFdn(); }
const float &PtVVXjesRelativeStatHFdn() { return vvv.PtVVXjesRelativeStatHFdn(); }
const float &HTjesRelativeStatHFdn() { return vvv.HTjesRelativeStatHFdn(); }
const float &HTJjesRelativeStatHFdn() { return vvv.HTJjesRelativeStatHFdn(); }
const float &HTFJjesRelativeStatHFdn() { return vvv.HTFJjesRelativeStatHFdn(); }
const float &SumPtFJjesRelativeStatHFdn() { return vvv.SumPtFJjesRelativeStatHFdn(); }
const float &SumPtJjesRelativeStatHFdn() { return vvv.SumPtJjesRelativeStatHFdn(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesPileUpDataMCup() { return vvv.JsjesPileUpDataMCup(); }
const int &NFJjesPileUpDataMCup() { return vvv.NFJjesPileUpDataMCup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesPileUpDataMCup() { return vvv.FJ0jesPileUpDataMCup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesPileUpDataMCup() { return vvv.FJ1jesPileUpDataMCup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesPileUpDataMCup() { return vvv.FJ2jesPileUpDataMCup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesPileUpDataMCup() { return vvv.FJ3jesPileUpDataMCup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesPileUpDataMCup() { return vvv.FJ4jesPileUpDataMCup(); }
const float &VMD0jesPileUpDataMCup() { return vvv.VMD0jesPileUpDataMCup(); }
const float &VMD1jesPileUpDataMCup() { return vvv.VMD1jesPileUpDataMCup(); }
const float &VMD2jesPileUpDataMCup() { return vvv.VMD2jesPileUpDataMCup(); }
const float &VMD3jesPileUpDataMCup() { return vvv.VMD3jesPileUpDataMCup(); }
const float &VMD4jesPileUpDataMCup() { return vvv.VMD4jesPileUpDataMCup(); }
const float &WMD0jesPileUpDataMCup() { return vvv.WMD0jesPileUpDataMCup(); }
const float &WMD1jesPileUpDataMCup() { return vvv.WMD1jesPileUpDataMCup(); }
const float &WMD2jesPileUpDataMCup() { return vvv.WMD2jesPileUpDataMCup(); }
const float &WMD3jesPileUpDataMCup() { return vvv.WMD3jesPileUpDataMCup(); }
const float &WMD4jesPileUpDataMCup() { return vvv.WMD4jesPileUpDataMCup(); }
const int &NQGen0jesPileUpDataMCup() { return vvv.NQGen0jesPileUpDataMCup(); }
const int &NQGen1jesPileUpDataMCup() { return vvv.NQGen1jesPileUpDataMCup(); }
const int &NQGen2jesPileUpDataMCup() { return vvv.NQGen2jesPileUpDataMCup(); }
const int &NQGen3jesPileUpDataMCup() { return vvv.NQGen3jesPileUpDataMCup(); }
const int &NQGen4jesPileUpDataMCup() { return vvv.NQGen4jesPileUpDataMCup(); }
const int &NBGen0jesPileUpDataMCup() { return vvv.NBGen0jesPileUpDataMCup(); }
const int &NBGen1jesPileUpDataMCup() { return vvv.NBGen1jesPileUpDataMCup(); }
const int &NBGen2jesPileUpDataMCup() { return vvv.NBGen2jesPileUpDataMCup(); }
const int &NBGen3jesPileUpDataMCup() { return vvv.NBGen3jesPileUpDataMCup(); }
const int &NBGen4jesPileUpDataMCup() { return vvv.NBGen4jesPileUpDataMCup(); }
const int &NLGen0jesPileUpDataMCup() { return vvv.NLGen0jesPileUpDataMCup(); }
const int &NLGen1jesPileUpDataMCup() { return vvv.NLGen1jesPileUpDataMCup(); }
const int &NLGen2jesPileUpDataMCup() { return vvv.NLGen2jesPileUpDataMCup(); }
const int &NLGen3jesPileUpDataMCup() { return vvv.NLGen3jesPileUpDataMCup(); }
const int &NLGen4jesPileUpDataMCup() { return vvv.NLGen4jesPileUpDataMCup(); }
const int &NVQGen0jesPileUpDataMCup() { return vvv.NVQGen0jesPileUpDataMCup(); }
const int &NVQGen1jesPileUpDataMCup() { return vvv.NVQGen1jesPileUpDataMCup(); }
const int &NVQGen2jesPileUpDataMCup() { return vvv.NVQGen2jesPileUpDataMCup(); }
const int &NVQGen3jesPileUpDataMCup() { return vvv.NVQGen3jesPileUpDataMCup(); }
const int &NVQGen4jesPileUpDataMCup() { return vvv.NVQGen4jesPileUpDataMCup(); }
const int &NiFJjesPileUpDataMCup() { return vvv.NiFJjesPileUpDataMCup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesPileUpDataMCup() { return vvv.iFJ0jesPileUpDataMCup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesPileUpDataMCup() { return vvv.iFJ1jesPileUpDataMCup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesPileUpDataMCup() { return vvv.iFJ2jesPileUpDataMCup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesPileUpDataMCup() { return vvv.iFJ3jesPileUpDataMCup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesPileUpDataMCup() { return vvv.iFJ4jesPileUpDataMCup(); }
const float &iVMD0jesPileUpDataMCup() { return vvv.iVMD0jesPileUpDataMCup(); }
const float &iVMD1jesPileUpDataMCup() { return vvv.iVMD1jesPileUpDataMCup(); }
const float &iVMD2jesPileUpDataMCup() { return vvv.iVMD2jesPileUpDataMCup(); }
const float &iVMD3jesPileUpDataMCup() { return vvv.iVMD3jesPileUpDataMCup(); }
const float &iVMD4jesPileUpDataMCup() { return vvv.iVMD4jesPileUpDataMCup(); }
const float &iWMD0jesPileUpDataMCup() { return vvv.iWMD0jesPileUpDataMCup(); }
const float &iWMD1jesPileUpDataMCup() { return vvv.iWMD1jesPileUpDataMCup(); }
const float &iWMD2jesPileUpDataMCup() { return vvv.iWMD2jesPileUpDataMCup(); }
const float &iWMD3jesPileUpDataMCup() { return vvv.iWMD3jesPileUpDataMCup(); }
const float &iWMD4jesPileUpDataMCup() { return vvv.iWMD4jesPileUpDataMCup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesPileUpDataMCup() { return vvv.METjesPileUpDataMCup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesPileUpDataMCup() { return vvv.NujesPileUpDataMCup(); }
const int &NJjesPileUpDataMCup() { return vvv.NJjesPileUpDataMCup(); }
const int &NbLoosejesPileUpDataMCup() { return vvv.NbLoosejesPileUpDataMCup(); }
const int &NbMediumjesPileUpDataMCup() { return vvv.NbMediumjesPileUpDataMCup(); }
const int &NbTightjesPileUpDataMCup() { return vvv.NbTightjesPileUpDataMCup(); }
const int &NoORNbLoosejesPileUpDataMCup() { return vvv.NoORNbLoosejesPileUpDataMCup(); }
const int &NoORNbMediumjesPileUpDataMCup() { return vvv.NoORNbMediumjesPileUpDataMCup(); }
const int &NoORNbTightjesPileUpDataMCup() { return vvv.NoORNbTightjesPileUpDataMCup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesPileUpDataMCup() { return vvv.J0jesPileUpDataMCup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesPileUpDataMCup() { return vvv.J1jesPileUpDataMCup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesPileUpDataMCup() { return vvv.J2jesPileUpDataMCup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesPileUpDataMCup() { return vvv.J3jesPileUpDataMCup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesPileUpDataMCup() { return vvv.J4jesPileUpDataMCup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesPileUpDataMCup() { return vvv.J5jesPileUpDataMCup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesPileUpDataMCup() { return vvv.J6jesPileUpDataMCup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesPileUpDataMCup() { return vvv.J7jesPileUpDataMCup(); }
const vector<int> &NQJGenjesPileUpDataMCup() { return vvv.NQJGenjesPileUpDataMCup(); }
const vector<int> &NBJGenjesPileUpDataMCup() { return vvv.NBJGenjesPileUpDataMCup(); }
const vector<int> &NLJGenjesPileUpDataMCup() { return vvv.NLJGenjesPileUpDataMCup(); }
const float &MVVXjesPileUpDataMCup() { return vvv.MVVXjesPileUpDataMCup(); }
const float &PtVVXjesPileUpDataMCup() { return vvv.PtVVXjesPileUpDataMCup(); }
const float &HTjesPileUpDataMCup() { return vvv.HTjesPileUpDataMCup(); }
const float &HTJjesPileUpDataMCup() { return vvv.HTJjesPileUpDataMCup(); }
const float &HTFJjesPileUpDataMCup() { return vvv.HTFJjesPileUpDataMCup(); }
const float &SumPtFJjesPileUpDataMCup() { return vvv.SumPtFJjesPileUpDataMCup(); }
const float &SumPtJjesPileUpDataMCup() { return vvv.SumPtJjesPileUpDataMCup(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesPileUpDataMCdn() { return vvv.JsjesPileUpDataMCdn(); }
const int &NFJjesPileUpDataMCdn() { return vvv.NFJjesPileUpDataMCdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesPileUpDataMCdn() { return vvv.FJ0jesPileUpDataMCdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesPileUpDataMCdn() { return vvv.FJ1jesPileUpDataMCdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesPileUpDataMCdn() { return vvv.FJ2jesPileUpDataMCdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesPileUpDataMCdn() { return vvv.FJ3jesPileUpDataMCdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesPileUpDataMCdn() { return vvv.FJ4jesPileUpDataMCdn(); }
const float &VMD0jesPileUpDataMCdn() { return vvv.VMD0jesPileUpDataMCdn(); }
const float &VMD1jesPileUpDataMCdn() { return vvv.VMD1jesPileUpDataMCdn(); }
const float &VMD2jesPileUpDataMCdn() { return vvv.VMD2jesPileUpDataMCdn(); }
const float &VMD3jesPileUpDataMCdn() { return vvv.VMD3jesPileUpDataMCdn(); }
const float &VMD4jesPileUpDataMCdn() { return vvv.VMD4jesPileUpDataMCdn(); }
const float &WMD0jesPileUpDataMCdn() { return vvv.WMD0jesPileUpDataMCdn(); }
const float &WMD1jesPileUpDataMCdn() { return vvv.WMD1jesPileUpDataMCdn(); }
const float &WMD2jesPileUpDataMCdn() { return vvv.WMD2jesPileUpDataMCdn(); }
const float &WMD3jesPileUpDataMCdn() { return vvv.WMD3jesPileUpDataMCdn(); }
const float &WMD4jesPileUpDataMCdn() { return vvv.WMD4jesPileUpDataMCdn(); }
const int &NQGen0jesPileUpDataMCdn() { return vvv.NQGen0jesPileUpDataMCdn(); }
const int &NQGen1jesPileUpDataMCdn() { return vvv.NQGen1jesPileUpDataMCdn(); }
const int &NQGen2jesPileUpDataMCdn() { return vvv.NQGen2jesPileUpDataMCdn(); }
const int &NQGen3jesPileUpDataMCdn() { return vvv.NQGen3jesPileUpDataMCdn(); }
const int &NQGen4jesPileUpDataMCdn() { return vvv.NQGen4jesPileUpDataMCdn(); }
const int &NBGen0jesPileUpDataMCdn() { return vvv.NBGen0jesPileUpDataMCdn(); }
const int &NBGen1jesPileUpDataMCdn() { return vvv.NBGen1jesPileUpDataMCdn(); }
const int &NBGen2jesPileUpDataMCdn() { return vvv.NBGen2jesPileUpDataMCdn(); }
const int &NBGen3jesPileUpDataMCdn() { return vvv.NBGen3jesPileUpDataMCdn(); }
const int &NBGen4jesPileUpDataMCdn() { return vvv.NBGen4jesPileUpDataMCdn(); }
const int &NLGen0jesPileUpDataMCdn() { return vvv.NLGen0jesPileUpDataMCdn(); }
const int &NLGen1jesPileUpDataMCdn() { return vvv.NLGen1jesPileUpDataMCdn(); }
const int &NLGen2jesPileUpDataMCdn() { return vvv.NLGen2jesPileUpDataMCdn(); }
const int &NLGen3jesPileUpDataMCdn() { return vvv.NLGen3jesPileUpDataMCdn(); }
const int &NLGen4jesPileUpDataMCdn() { return vvv.NLGen4jesPileUpDataMCdn(); }
const int &NVQGen0jesPileUpDataMCdn() { return vvv.NVQGen0jesPileUpDataMCdn(); }
const int &NVQGen1jesPileUpDataMCdn() { return vvv.NVQGen1jesPileUpDataMCdn(); }
const int &NVQGen2jesPileUpDataMCdn() { return vvv.NVQGen2jesPileUpDataMCdn(); }
const int &NVQGen3jesPileUpDataMCdn() { return vvv.NVQGen3jesPileUpDataMCdn(); }
const int &NVQGen4jesPileUpDataMCdn() { return vvv.NVQGen4jesPileUpDataMCdn(); }
const int &NiFJjesPileUpDataMCdn() { return vvv.NiFJjesPileUpDataMCdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesPileUpDataMCdn() { return vvv.iFJ0jesPileUpDataMCdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesPileUpDataMCdn() { return vvv.iFJ1jesPileUpDataMCdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesPileUpDataMCdn() { return vvv.iFJ2jesPileUpDataMCdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesPileUpDataMCdn() { return vvv.iFJ3jesPileUpDataMCdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesPileUpDataMCdn() { return vvv.iFJ4jesPileUpDataMCdn(); }
const float &iVMD0jesPileUpDataMCdn() { return vvv.iVMD0jesPileUpDataMCdn(); }
const float &iVMD1jesPileUpDataMCdn() { return vvv.iVMD1jesPileUpDataMCdn(); }
const float &iVMD2jesPileUpDataMCdn() { return vvv.iVMD2jesPileUpDataMCdn(); }
const float &iVMD3jesPileUpDataMCdn() { return vvv.iVMD3jesPileUpDataMCdn(); }
const float &iVMD4jesPileUpDataMCdn() { return vvv.iVMD4jesPileUpDataMCdn(); }
const float &iWMD0jesPileUpDataMCdn() { return vvv.iWMD0jesPileUpDataMCdn(); }
const float &iWMD1jesPileUpDataMCdn() { return vvv.iWMD1jesPileUpDataMCdn(); }
const float &iWMD2jesPileUpDataMCdn() { return vvv.iWMD2jesPileUpDataMCdn(); }
const float &iWMD3jesPileUpDataMCdn() { return vvv.iWMD3jesPileUpDataMCdn(); }
const float &iWMD4jesPileUpDataMCdn() { return vvv.iWMD4jesPileUpDataMCdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesPileUpDataMCdn() { return vvv.METjesPileUpDataMCdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesPileUpDataMCdn() { return vvv.NujesPileUpDataMCdn(); }
const int &NJjesPileUpDataMCdn() { return vvv.NJjesPileUpDataMCdn(); }
const int &NbLoosejesPileUpDataMCdn() { return vvv.NbLoosejesPileUpDataMCdn(); }
const int &NbMediumjesPileUpDataMCdn() { return vvv.NbMediumjesPileUpDataMCdn(); }
const int &NbTightjesPileUpDataMCdn() { return vvv.NbTightjesPileUpDataMCdn(); }
const int &NoORNbLoosejesPileUpDataMCdn() { return vvv.NoORNbLoosejesPileUpDataMCdn(); }
const int &NoORNbMediumjesPileUpDataMCdn() { return vvv.NoORNbMediumjesPileUpDataMCdn(); }
const int &NoORNbTightjesPileUpDataMCdn() { return vvv.NoORNbTightjesPileUpDataMCdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesPileUpDataMCdn() { return vvv.J0jesPileUpDataMCdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesPileUpDataMCdn() { return vvv.J1jesPileUpDataMCdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesPileUpDataMCdn() { return vvv.J2jesPileUpDataMCdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesPileUpDataMCdn() { return vvv.J3jesPileUpDataMCdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesPileUpDataMCdn() { return vvv.J4jesPileUpDataMCdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesPileUpDataMCdn() { return vvv.J5jesPileUpDataMCdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesPileUpDataMCdn() { return vvv.J6jesPileUpDataMCdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesPileUpDataMCdn() { return vvv.J7jesPileUpDataMCdn(); }
const vector<int> &NQJGenjesPileUpDataMCdn() { return vvv.NQJGenjesPileUpDataMCdn(); }
const vector<int> &NBJGenjesPileUpDataMCdn() { return vvv.NBJGenjesPileUpDataMCdn(); }
const vector<int> &NLJGenjesPileUpDataMCdn() { return vvv.NLJGenjesPileUpDataMCdn(); }
const float &MVVXjesPileUpDataMCdn() { return vvv.MVVXjesPileUpDataMCdn(); }
const float &PtVVXjesPileUpDataMCdn() { return vvv.PtVVXjesPileUpDataMCdn(); }
const float &HTjesPileUpDataMCdn() { return vvv.HTjesPileUpDataMCdn(); }
const float &HTJjesPileUpDataMCdn() { return vvv.HTJjesPileUpDataMCdn(); }
const float &HTFJjesPileUpDataMCdn() { return vvv.HTFJjesPileUpDataMCdn(); }
const float &SumPtFJjesPileUpDataMCdn() { return vvv.SumPtFJjesPileUpDataMCdn(); }
const float &SumPtJjesPileUpDataMCdn() { return vvv.SumPtJjesPileUpDataMCdn(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesPileUpPtRefup() { return vvv.JsjesPileUpPtRefup(); }
const int &NFJjesPileUpPtRefup() { return vvv.NFJjesPileUpPtRefup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesPileUpPtRefup() { return vvv.FJ0jesPileUpPtRefup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesPileUpPtRefup() { return vvv.FJ1jesPileUpPtRefup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesPileUpPtRefup() { return vvv.FJ2jesPileUpPtRefup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesPileUpPtRefup() { return vvv.FJ3jesPileUpPtRefup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesPileUpPtRefup() { return vvv.FJ4jesPileUpPtRefup(); }
const float &VMD0jesPileUpPtRefup() { return vvv.VMD0jesPileUpPtRefup(); }
const float &VMD1jesPileUpPtRefup() { return vvv.VMD1jesPileUpPtRefup(); }
const float &VMD2jesPileUpPtRefup() { return vvv.VMD2jesPileUpPtRefup(); }
const float &VMD3jesPileUpPtRefup() { return vvv.VMD3jesPileUpPtRefup(); }
const float &VMD4jesPileUpPtRefup() { return vvv.VMD4jesPileUpPtRefup(); }
const float &WMD0jesPileUpPtRefup() { return vvv.WMD0jesPileUpPtRefup(); }
const float &WMD1jesPileUpPtRefup() { return vvv.WMD1jesPileUpPtRefup(); }
const float &WMD2jesPileUpPtRefup() { return vvv.WMD2jesPileUpPtRefup(); }
const float &WMD3jesPileUpPtRefup() { return vvv.WMD3jesPileUpPtRefup(); }
const float &WMD4jesPileUpPtRefup() { return vvv.WMD4jesPileUpPtRefup(); }
const int &NQGen0jesPileUpPtRefup() { return vvv.NQGen0jesPileUpPtRefup(); }
const int &NQGen1jesPileUpPtRefup() { return vvv.NQGen1jesPileUpPtRefup(); }
const int &NQGen2jesPileUpPtRefup() { return vvv.NQGen2jesPileUpPtRefup(); }
const int &NQGen3jesPileUpPtRefup() { return vvv.NQGen3jesPileUpPtRefup(); }
const int &NQGen4jesPileUpPtRefup() { return vvv.NQGen4jesPileUpPtRefup(); }
const int &NBGen0jesPileUpPtRefup() { return vvv.NBGen0jesPileUpPtRefup(); }
const int &NBGen1jesPileUpPtRefup() { return vvv.NBGen1jesPileUpPtRefup(); }
const int &NBGen2jesPileUpPtRefup() { return vvv.NBGen2jesPileUpPtRefup(); }
const int &NBGen3jesPileUpPtRefup() { return vvv.NBGen3jesPileUpPtRefup(); }
const int &NBGen4jesPileUpPtRefup() { return vvv.NBGen4jesPileUpPtRefup(); }
const int &NLGen0jesPileUpPtRefup() { return vvv.NLGen0jesPileUpPtRefup(); }
const int &NLGen1jesPileUpPtRefup() { return vvv.NLGen1jesPileUpPtRefup(); }
const int &NLGen2jesPileUpPtRefup() { return vvv.NLGen2jesPileUpPtRefup(); }
const int &NLGen3jesPileUpPtRefup() { return vvv.NLGen3jesPileUpPtRefup(); }
const int &NLGen4jesPileUpPtRefup() { return vvv.NLGen4jesPileUpPtRefup(); }
const int &NVQGen0jesPileUpPtRefup() { return vvv.NVQGen0jesPileUpPtRefup(); }
const int &NVQGen1jesPileUpPtRefup() { return vvv.NVQGen1jesPileUpPtRefup(); }
const int &NVQGen2jesPileUpPtRefup() { return vvv.NVQGen2jesPileUpPtRefup(); }
const int &NVQGen3jesPileUpPtRefup() { return vvv.NVQGen3jesPileUpPtRefup(); }
const int &NVQGen4jesPileUpPtRefup() { return vvv.NVQGen4jesPileUpPtRefup(); }
const int &NiFJjesPileUpPtRefup() { return vvv.NiFJjesPileUpPtRefup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesPileUpPtRefup() { return vvv.iFJ0jesPileUpPtRefup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesPileUpPtRefup() { return vvv.iFJ1jesPileUpPtRefup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesPileUpPtRefup() { return vvv.iFJ2jesPileUpPtRefup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesPileUpPtRefup() { return vvv.iFJ3jesPileUpPtRefup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesPileUpPtRefup() { return vvv.iFJ4jesPileUpPtRefup(); }
const float &iVMD0jesPileUpPtRefup() { return vvv.iVMD0jesPileUpPtRefup(); }
const float &iVMD1jesPileUpPtRefup() { return vvv.iVMD1jesPileUpPtRefup(); }
const float &iVMD2jesPileUpPtRefup() { return vvv.iVMD2jesPileUpPtRefup(); }
const float &iVMD3jesPileUpPtRefup() { return vvv.iVMD3jesPileUpPtRefup(); }
const float &iVMD4jesPileUpPtRefup() { return vvv.iVMD4jesPileUpPtRefup(); }
const float &iWMD0jesPileUpPtRefup() { return vvv.iWMD0jesPileUpPtRefup(); }
const float &iWMD1jesPileUpPtRefup() { return vvv.iWMD1jesPileUpPtRefup(); }
const float &iWMD2jesPileUpPtRefup() { return vvv.iWMD2jesPileUpPtRefup(); }
const float &iWMD3jesPileUpPtRefup() { return vvv.iWMD3jesPileUpPtRefup(); }
const float &iWMD4jesPileUpPtRefup() { return vvv.iWMD4jesPileUpPtRefup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesPileUpPtRefup() { return vvv.METjesPileUpPtRefup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesPileUpPtRefup() { return vvv.NujesPileUpPtRefup(); }
const int &NJjesPileUpPtRefup() { return vvv.NJjesPileUpPtRefup(); }
const int &NbLoosejesPileUpPtRefup() { return vvv.NbLoosejesPileUpPtRefup(); }
const int &NbMediumjesPileUpPtRefup() { return vvv.NbMediumjesPileUpPtRefup(); }
const int &NbTightjesPileUpPtRefup() { return vvv.NbTightjesPileUpPtRefup(); }
const int &NoORNbLoosejesPileUpPtRefup() { return vvv.NoORNbLoosejesPileUpPtRefup(); }
const int &NoORNbMediumjesPileUpPtRefup() { return vvv.NoORNbMediumjesPileUpPtRefup(); }
const int &NoORNbTightjesPileUpPtRefup() { return vvv.NoORNbTightjesPileUpPtRefup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesPileUpPtRefup() { return vvv.J0jesPileUpPtRefup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesPileUpPtRefup() { return vvv.J1jesPileUpPtRefup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesPileUpPtRefup() { return vvv.J2jesPileUpPtRefup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesPileUpPtRefup() { return vvv.J3jesPileUpPtRefup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesPileUpPtRefup() { return vvv.J4jesPileUpPtRefup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesPileUpPtRefup() { return vvv.J5jesPileUpPtRefup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesPileUpPtRefup() { return vvv.J6jesPileUpPtRefup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesPileUpPtRefup() { return vvv.J7jesPileUpPtRefup(); }
const vector<int> &NQJGenjesPileUpPtRefup() { return vvv.NQJGenjesPileUpPtRefup(); }
const vector<int> &NBJGenjesPileUpPtRefup() { return vvv.NBJGenjesPileUpPtRefup(); }
const vector<int> &NLJGenjesPileUpPtRefup() { return vvv.NLJGenjesPileUpPtRefup(); }
const float &MVVXjesPileUpPtRefup() { return vvv.MVVXjesPileUpPtRefup(); }
const float &PtVVXjesPileUpPtRefup() { return vvv.PtVVXjesPileUpPtRefup(); }
const float &HTjesPileUpPtRefup() { return vvv.HTjesPileUpPtRefup(); }
const float &HTJjesPileUpPtRefup() { return vvv.HTJjesPileUpPtRefup(); }
const float &HTFJjesPileUpPtRefup() { return vvv.HTFJjesPileUpPtRefup(); }
const float &SumPtFJjesPileUpPtRefup() { return vvv.SumPtFJjesPileUpPtRefup(); }
const float &SumPtJjesPileUpPtRefup() { return vvv.SumPtJjesPileUpPtRefup(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesPileUpPtRefdn() { return vvv.JsjesPileUpPtRefdn(); }
const int &NFJjesPileUpPtRefdn() { return vvv.NFJjesPileUpPtRefdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesPileUpPtRefdn() { return vvv.FJ0jesPileUpPtRefdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesPileUpPtRefdn() { return vvv.FJ1jesPileUpPtRefdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesPileUpPtRefdn() { return vvv.FJ2jesPileUpPtRefdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesPileUpPtRefdn() { return vvv.FJ3jesPileUpPtRefdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesPileUpPtRefdn() { return vvv.FJ4jesPileUpPtRefdn(); }
const float &VMD0jesPileUpPtRefdn() { return vvv.VMD0jesPileUpPtRefdn(); }
const float &VMD1jesPileUpPtRefdn() { return vvv.VMD1jesPileUpPtRefdn(); }
const float &VMD2jesPileUpPtRefdn() { return vvv.VMD2jesPileUpPtRefdn(); }
const float &VMD3jesPileUpPtRefdn() { return vvv.VMD3jesPileUpPtRefdn(); }
const float &VMD4jesPileUpPtRefdn() { return vvv.VMD4jesPileUpPtRefdn(); }
const float &WMD0jesPileUpPtRefdn() { return vvv.WMD0jesPileUpPtRefdn(); }
const float &WMD1jesPileUpPtRefdn() { return vvv.WMD1jesPileUpPtRefdn(); }
const float &WMD2jesPileUpPtRefdn() { return vvv.WMD2jesPileUpPtRefdn(); }
const float &WMD3jesPileUpPtRefdn() { return vvv.WMD3jesPileUpPtRefdn(); }
const float &WMD4jesPileUpPtRefdn() { return vvv.WMD4jesPileUpPtRefdn(); }
const int &NQGen0jesPileUpPtRefdn() { return vvv.NQGen0jesPileUpPtRefdn(); }
const int &NQGen1jesPileUpPtRefdn() { return vvv.NQGen1jesPileUpPtRefdn(); }
const int &NQGen2jesPileUpPtRefdn() { return vvv.NQGen2jesPileUpPtRefdn(); }
const int &NQGen3jesPileUpPtRefdn() { return vvv.NQGen3jesPileUpPtRefdn(); }
const int &NQGen4jesPileUpPtRefdn() { return vvv.NQGen4jesPileUpPtRefdn(); }
const int &NBGen0jesPileUpPtRefdn() { return vvv.NBGen0jesPileUpPtRefdn(); }
const int &NBGen1jesPileUpPtRefdn() { return vvv.NBGen1jesPileUpPtRefdn(); }
const int &NBGen2jesPileUpPtRefdn() { return vvv.NBGen2jesPileUpPtRefdn(); }
const int &NBGen3jesPileUpPtRefdn() { return vvv.NBGen3jesPileUpPtRefdn(); }
const int &NBGen4jesPileUpPtRefdn() { return vvv.NBGen4jesPileUpPtRefdn(); }
const int &NLGen0jesPileUpPtRefdn() { return vvv.NLGen0jesPileUpPtRefdn(); }
const int &NLGen1jesPileUpPtRefdn() { return vvv.NLGen1jesPileUpPtRefdn(); }
const int &NLGen2jesPileUpPtRefdn() { return vvv.NLGen2jesPileUpPtRefdn(); }
const int &NLGen3jesPileUpPtRefdn() { return vvv.NLGen3jesPileUpPtRefdn(); }
const int &NLGen4jesPileUpPtRefdn() { return vvv.NLGen4jesPileUpPtRefdn(); }
const int &NVQGen0jesPileUpPtRefdn() { return vvv.NVQGen0jesPileUpPtRefdn(); }
const int &NVQGen1jesPileUpPtRefdn() { return vvv.NVQGen1jesPileUpPtRefdn(); }
const int &NVQGen2jesPileUpPtRefdn() { return vvv.NVQGen2jesPileUpPtRefdn(); }
const int &NVQGen3jesPileUpPtRefdn() { return vvv.NVQGen3jesPileUpPtRefdn(); }
const int &NVQGen4jesPileUpPtRefdn() { return vvv.NVQGen4jesPileUpPtRefdn(); }
const int &NiFJjesPileUpPtRefdn() { return vvv.NiFJjesPileUpPtRefdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesPileUpPtRefdn() { return vvv.iFJ0jesPileUpPtRefdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesPileUpPtRefdn() { return vvv.iFJ1jesPileUpPtRefdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesPileUpPtRefdn() { return vvv.iFJ2jesPileUpPtRefdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesPileUpPtRefdn() { return vvv.iFJ3jesPileUpPtRefdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesPileUpPtRefdn() { return vvv.iFJ4jesPileUpPtRefdn(); }
const float &iVMD0jesPileUpPtRefdn() { return vvv.iVMD0jesPileUpPtRefdn(); }
const float &iVMD1jesPileUpPtRefdn() { return vvv.iVMD1jesPileUpPtRefdn(); }
const float &iVMD2jesPileUpPtRefdn() { return vvv.iVMD2jesPileUpPtRefdn(); }
const float &iVMD3jesPileUpPtRefdn() { return vvv.iVMD3jesPileUpPtRefdn(); }
const float &iVMD4jesPileUpPtRefdn() { return vvv.iVMD4jesPileUpPtRefdn(); }
const float &iWMD0jesPileUpPtRefdn() { return vvv.iWMD0jesPileUpPtRefdn(); }
const float &iWMD1jesPileUpPtRefdn() { return vvv.iWMD1jesPileUpPtRefdn(); }
const float &iWMD2jesPileUpPtRefdn() { return vvv.iWMD2jesPileUpPtRefdn(); }
const float &iWMD3jesPileUpPtRefdn() { return vvv.iWMD3jesPileUpPtRefdn(); }
const float &iWMD4jesPileUpPtRefdn() { return vvv.iWMD4jesPileUpPtRefdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesPileUpPtRefdn() { return vvv.METjesPileUpPtRefdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesPileUpPtRefdn() { return vvv.NujesPileUpPtRefdn(); }
const int &NJjesPileUpPtRefdn() { return vvv.NJjesPileUpPtRefdn(); }
const int &NbLoosejesPileUpPtRefdn() { return vvv.NbLoosejesPileUpPtRefdn(); }
const int &NbMediumjesPileUpPtRefdn() { return vvv.NbMediumjesPileUpPtRefdn(); }
const int &NbTightjesPileUpPtRefdn() { return vvv.NbTightjesPileUpPtRefdn(); }
const int &NoORNbLoosejesPileUpPtRefdn() { return vvv.NoORNbLoosejesPileUpPtRefdn(); }
const int &NoORNbMediumjesPileUpPtRefdn() { return vvv.NoORNbMediumjesPileUpPtRefdn(); }
const int &NoORNbTightjesPileUpPtRefdn() { return vvv.NoORNbTightjesPileUpPtRefdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesPileUpPtRefdn() { return vvv.J0jesPileUpPtRefdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesPileUpPtRefdn() { return vvv.J1jesPileUpPtRefdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesPileUpPtRefdn() { return vvv.J2jesPileUpPtRefdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesPileUpPtRefdn() { return vvv.J3jesPileUpPtRefdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesPileUpPtRefdn() { return vvv.J4jesPileUpPtRefdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesPileUpPtRefdn() { return vvv.J5jesPileUpPtRefdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesPileUpPtRefdn() { return vvv.J6jesPileUpPtRefdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesPileUpPtRefdn() { return vvv.J7jesPileUpPtRefdn(); }
const vector<int> &NQJGenjesPileUpPtRefdn() { return vvv.NQJGenjesPileUpPtRefdn(); }
const vector<int> &NBJGenjesPileUpPtRefdn() { return vvv.NBJGenjesPileUpPtRefdn(); }
const vector<int> &NLJGenjesPileUpPtRefdn() { return vvv.NLJGenjesPileUpPtRefdn(); }
const float &MVVXjesPileUpPtRefdn() { return vvv.MVVXjesPileUpPtRefdn(); }
const float &PtVVXjesPileUpPtRefdn() { return vvv.PtVVXjesPileUpPtRefdn(); }
const float &HTjesPileUpPtRefdn() { return vvv.HTjesPileUpPtRefdn(); }
const float &HTJjesPileUpPtRefdn() { return vvv.HTJjesPileUpPtRefdn(); }
const float &HTFJjesPileUpPtRefdn() { return vvv.HTFJjesPileUpPtRefdn(); }
const float &SumPtFJjesPileUpPtRefdn() { return vvv.SumPtFJjesPileUpPtRefdn(); }
const float &SumPtJjesPileUpPtRefdn() { return vvv.SumPtJjesPileUpPtRefdn(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesPileUpPtBBup() { return vvv.JsjesPileUpPtBBup(); }
const int &NFJjesPileUpPtBBup() { return vvv.NFJjesPileUpPtBBup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesPileUpPtBBup() { return vvv.FJ0jesPileUpPtBBup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesPileUpPtBBup() { return vvv.FJ1jesPileUpPtBBup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesPileUpPtBBup() { return vvv.FJ2jesPileUpPtBBup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesPileUpPtBBup() { return vvv.FJ3jesPileUpPtBBup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesPileUpPtBBup() { return vvv.FJ4jesPileUpPtBBup(); }
const float &VMD0jesPileUpPtBBup() { return vvv.VMD0jesPileUpPtBBup(); }
const float &VMD1jesPileUpPtBBup() { return vvv.VMD1jesPileUpPtBBup(); }
const float &VMD2jesPileUpPtBBup() { return vvv.VMD2jesPileUpPtBBup(); }
const float &VMD3jesPileUpPtBBup() { return vvv.VMD3jesPileUpPtBBup(); }
const float &VMD4jesPileUpPtBBup() { return vvv.VMD4jesPileUpPtBBup(); }
const float &WMD0jesPileUpPtBBup() { return vvv.WMD0jesPileUpPtBBup(); }
const float &WMD1jesPileUpPtBBup() { return vvv.WMD1jesPileUpPtBBup(); }
const float &WMD2jesPileUpPtBBup() { return vvv.WMD2jesPileUpPtBBup(); }
const float &WMD3jesPileUpPtBBup() { return vvv.WMD3jesPileUpPtBBup(); }
const float &WMD4jesPileUpPtBBup() { return vvv.WMD4jesPileUpPtBBup(); }
const int &NQGen0jesPileUpPtBBup() { return vvv.NQGen0jesPileUpPtBBup(); }
const int &NQGen1jesPileUpPtBBup() { return vvv.NQGen1jesPileUpPtBBup(); }
const int &NQGen2jesPileUpPtBBup() { return vvv.NQGen2jesPileUpPtBBup(); }
const int &NQGen3jesPileUpPtBBup() { return vvv.NQGen3jesPileUpPtBBup(); }
const int &NQGen4jesPileUpPtBBup() { return vvv.NQGen4jesPileUpPtBBup(); }
const int &NBGen0jesPileUpPtBBup() { return vvv.NBGen0jesPileUpPtBBup(); }
const int &NBGen1jesPileUpPtBBup() { return vvv.NBGen1jesPileUpPtBBup(); }
const int &NBGen2jesPileUpPtBBup() { return vvv.NBGen2jesPileUpPtBBup(); }
const int &NBGen3jesPileUpPtBBup() { return vvv.NBGen3jesPileUpPtBBup(); }
const int &NBGen4jesPileUpPtBBup() { return vvv.NBGen4jesPileUpPtBBup(); }
const int &NLGen0jesPileUpPtBBup() { return vvv.NLGen0jesPileUpPtBBup(); }
const int &NLGen1jesPileUpPtBBup() { return vvv.NLGen1jesPileUpPtBBup(); }
const int &NLGen2jesPileUpPtBBup() { return vvv.NLGen2jesPileUpPtBBup(); }
const int &NLGen3jesPileUpPtBBup() { return vvv.NLGen3jesPileUpPtBBup(); }
const int &NLGen4jesPileUpPtBBup() { return vvv.NLGen4jesPileUpPtBBup(); }
const int &NVQGen0jesPileUpPtBBup() { return vvv.NVQGen0jesPileUpPtBBup(); }
const int &NVQGen1jesPileUpPtBBup() { return vvv.NVQGen1jesPileUpPtBBup(); }
const int &NVQGen2jesPileUpPtBBup() { return vvv.NVQGen2jesPileUpPtBBup(); }
const int &NVQGen3jesPileUpPtBBup() { return vvv.NVQGen3jesPileUpPtBBup(); }
const int &NVQGen4jesPileUpPtBBup() { return vvv.NVQGen4jesPileUpPtBBup(); }
const int &NiFJjesPileUpPtBBup() { return vvv.NiFJjesPileUpPtBBup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesPileUpPtBBup() { return vvv.iFJ0jesPileUpPtBBup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesPileUpPtBBup() { return vvv.iFJ1jesPileUpPtBBup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesPileUpPtBBup() { return vvv.iFJ2jesPileUpPtBBup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesPileUpPtBBup() { return vvv.iFJ3jesPileUpPtBBup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesPileUpPtBBup() { return vvv.iFJ4jesPileUpPtBBup(); }
const float &iVMD0jesPileUpPtBBup() { return vvv.iVMD0jesPileUpPtBBup(); }
const float &iVMD1jesPileUpPtBBup() { return vvv.iVMD1jesPileUpPtBBup(); }
const float &iVMD2jesPileUpPtBBup() { return vvv.iVMD2jesPileUpPtBBup(); }
const float &iVMD3jesPileUpPtBBup() { return vvv.iVMD3jesPileUpPtBBup(); }
const float &iVMD4jesPileUpPtBBup() { return vvv.iVMD4jesPileUpPtBBup(); }
const float &iWMD0jesPileUpPtBBup() { return vvv.iWMD0jesPileUpPtBBup(); }
const float &iWMD1jesPileUpPtBBup() { return vvv.iWMD1jesPileUpPtBBup(); }
const float &iWMD2jesPileUpPtBBup() { return vvv.iWMD2jesPileUpPtBBup(); }
const float &iWMD3jesPileUpPtBBup() { return vvv.iWMD3jesPileUpPtBBup(); }
const float &iWMD4jesPileUpPtBBup() { return vvv.iWMD4jesPileUpPtBBup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesPileUpPtBBup() { return vvv.METjesPileUpPtBBup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesPileUpPtBBup() { return vvv.NujesPileUpPtBBup(); }
const int &NJjesPileUpPtBBup() { return vvv.NJjesPileUpPtBBup(); }
const int &NbLoosejesPileUpPtBBup() { return vvv.NbLoosejesPileUpPtBBup(); }
const int &NbMediumjesPileUpPtBBup() { return vvv.NbMediumjesPileUpPtBBup(); }
const int &NbTightjesPileUpPtBBup() { return vvv.NbTightjesPileUpPtBBup(); }
const int &NoORNbLoosejesPileUpPtBBup() { return vvv.NoORNbLoosejesPileUpPtBBup(); }
const int &NoORNbMediumjesPileUpPtBBup() { return vvv.NoORNbMediumjesPileUpPtBBup(); }
const int &NoORNbTightjesPileUpPtBBup() { return vvv.NoORNbTightjesPileUpPtBBup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesPileUpPtBBup() { return vvv.J0jesPileUpPtBBup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesPileUpPtBBup() { return vvv.J1jesPileUpPtBBup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesPileUpPtBBup() { return vvv.J2jesPileUpPtBBup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesPileUpPtBBup() { return vvv.J3jesPileUpPtBBup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesPileUpPtBBup() { return vvv.J4jesPileUpPtBBup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesPileUpPtBBup() { return vvv.J5jesPileUpPtBBup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesPileUpPtBBup() { return vvv.J6jesPileUpPtBBup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesPileUpPtBBup() { return vvv.J7jesPileUpPtBBup(); }
const vector<int> &NQJGenjesPileUpPtBBup() { return vvv.NQJGenjesPileUpPtBBup(); }
const vector<int> &NBJGenjesPileUpPtBBup() { return vvv.NBJGenjesPileUpPtBBup(); }
const vector<int> &NLJGenjesPileUpPtBBup() { return vvv.NLJGenjesPileUpPtBBup(); }
const float &MVVXjesPileUpPtBBup() { return vvv.MVVXjesPileUpPtBBup(); }
const float &PtVVXjesPileUpPtBBup() { return vvv.PtVVXjesPileUpPtBBup(); }
const float &HTjesPileUpPtBBup() { return vvv.HTjesPileUpPtBBup(); }
const float &HTJjesPileUpPtBBup() { return vvv.HTJjesPileUpPtBBup(); }
const float &HTFJjesPileUpPtBBup() { return vvv.HTFJjesPileUpPtBBup(); }
const float &SumPtFJjesPileUpPtBBup() { return vvv.SumPtFJjesPileUpPtBBup(); }
const float &SumPtJjesPileUpPtBBup() { return vvv.SumPtJjesPileUpPtBBup(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesPileUpPtBBdn() { return vvv.JsjesPileUpPtBBdn(); }
const int &NFJjesPileUpPtBBdn() { return vvv.NFJjesPileUpPtBBdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesPileUpPtBBdn() { return vvv.FJ0jesPileUpPtBBdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesPileUpPtBBdn() { return vvv.FJ1jesPileUpPtBBdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesPileUpPtBBdn() { return vvv.FJ2jesPileUpPtBBdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesPileUpPtBBdn() { return vvv.FJ3jesPileUpPtBBdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesPileUpPtBBdn() { return vvv.FJ4jesPileUpPtBBdn(); }
const float &VMD0jesPileUpPtBBdn() { return vvv.VMD0jesPileUpPtBBdn(); }
const float &VMD1jesPileUpPtBBdn() { return vvv.VMD1jesPileUpPtBBdn(); }
const float &VMD2jesPileUpPtBBdn() { return vvv.VMD2jesPileUpPtBBdn(); }
const float &VMD3jesPileUpPtBBdn() { return vvv.VMD3jesPileUpPtBBdn(); }
const float &VMD4jesPileUpPtBBdn() { return vvv.VMD4jesPileUpPtBBdn(); }
const float &WMD0jesPileUpPtBBdn() { return vvv.WMD0jesPileUpPtBBdn(); }
const float &WMD1jesPileUpPtBBdn() { return vvv.WMD1jesPileUpPtBBdn(); }
const float &WMD2jesPileUpPtBBdn() { return vvv.WMD2jesPileUpPtBBdn(); }
const float &WMD3jesPileUpPtBBdn() { return vvv.WMD3jesPileUpPtBBdn(); }
const float &WMD4jesPileUpPtBBdn() { return vvv.WMD4jesPileUpPtBBdn(); }
const int &NQGen0jesPileUpPtBBdn() { return vvv.NQGen0jesPileUpPtBBdn(); }
const int &NQGen1jesPileUpPtBBdn() { return vvv.NQGen1jesPileUpPtBBdn(); }
const int &NQGen2jesPileUpPtBBdn() { return vvv.NQGen2jesPileUpPtBBdn(); }
const int &NQGen3jesPileUpPtBBdn() { return vvv.NQGen3jesPileUpPtBBdn(); }
const int &NQGen4jesPileUpPtBBdn() { return vvv.NQGen4jesPileUpPtBBdn(); }
const int &NBGen0jesPileUpPtBBdn() { return vvv.NBGen0jesPileUpPtBBdn(); }
const int &NBGen1jesPileUpPtBBdn() { return vvv.NBGen1jesPileUpPtBBdn(); }
const int &NBGen2jesPileUpPtBBdn() { return vvv.NBGen2jesPileUpPtBBdn(); }
const int &NBGen3jesPileUpPtBBdn() { return vvv.NBGen3jesPileUpPtBBdn(); }
const int &NBGen4jesPileUpPtBBdn() { return vvv.NBGen4jesPileUpPtBBdn(); }
const int &NLGen0jesPileUpPtBBdn() { return vvv.NLGen0jesPileUpPtBBdn(); }
const int &NLGen1jesPileUpPtBBdn() { return vvv.NLGen1jesPileUpPtBBdn(); }
const int &NLGen2jesPileUpPtBBdn() { return vvv.NLGen2jesPileUpPtBBdn(); }
const int &NLGen3jesPileUpPtBBdn() { return vvv.NLGen3jesPileUpPtBBdn(); }
const int &NLGen4jesPileUpPtBBdn() { return vvv.NLGen4jesPileUpPtBBdn(); }
const int &NVQGen0jesPileUpPtBBdn() { return vvv.NVQGen0jesPileUpPtBBdn(); }
const int &NVQGen1jesPileUpPtBBdn() { return vvv.NVQGen1jesPileUpPtBBdn(); }
const int &NVQGen2jesPileUpPtBBdn() { return vvv.NVQGen2jesPileUpPtBBdn(); }
const int &NVQGen3jesPileUpPtBBdn() { return vvv.NVQGen3jesPileUpPtBBdn(); }
const int &NVQGen4jesPileUpPtBBdn() { return vvv.NVQGen4jesPileUpPtBBdn(); }
const int &NiFJjesPileUpPtBBdn() { return vvv.NiFJjesPileUpPtBBdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesPileUpPtBBdn() { return vvv.iFJ0jesPileUpPtBBdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesPileUpPtBBdn() { return vvv.iFJ1jesPileUpPtBBdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesPileUpPtBBdn() { return vvv.iFJ2jesPileUpPtBBdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesPileUpPtBBdn() { return vvv.iFJ3jesPileUpPtBBdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesPileUpPtBBdn() { return vvv.iFJ4jesPileUpPtBBdn(); }
const float &iVMD0jesPileUpPtBBdn() { return vvv.iVMD0jesPileUpPtBBdn(); }
const float &iVMD1jesPileUpPtBBdn() { return vvv.iVMD1jesPileUpPtBBdn(); }
const float &iVMD2jesPileUpPtBBdn() { return vvv.iVMD2jesPileUpPtBBdn(); }
const float &iVMD3jesPileUpPtBBdn() { return vvv.iVMD3jesPileUpPtBBdn(); }
const float &iVMD4jesPileUpPtBBdn() { return vvv.iVMD4jesPileUpPtBBdn(); }
const float &iWMD0jesPileUpPtBBdn() { return vvv.iWMD0jesPileUpPtBBdn(); }
const float &iWMD1jesPileUpPtBBdn() { return vvv.iWMD1jesPileUpPtBBdn(); }
const float &iWMD2jesPileUpPtBBdn() { return vvv.iWMD2jesPileUpPtBBdn(); }
const float &iWMD3jesPileUpPtBBdn() { return vvv.iWMD3jesPileUpPtBBdn(); }
const float &iWMD4jesPileUpPtBBdn() { return vvv.iWMD4jesPileUpPtBBdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesPileUpPtBBdn() { return vvv.METjesPileUpPtBBdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesPileUpPtBBdn() { return vvv.NujesPileUpPtBBdn(); }
const int &NJjesPileUpPtBBdn() { return vvv.NJjesPileUpPtBBdn(); }
const int &NbLoosejesPileUpPtBBdn() { return vvv.NbLoosejesPileUpPtBBdn(); }
const int &NbMediumjesPileUpPtBBdn() { return vvv.NbMediumjesPileUpPtBBdn(); }
const int &NbTightjesPileUpPtBBdn() { return vvv.NbTightjesPileUpPtBBdn(); }
const int &NoORNbLoosejesPileUpPtBBdn() { return vvv.NoORNbLoosejesPileUpPtBBdn(); }
const int &NoORNbMediumjesPileUpPtBBdn() { return vvv.NoORNbMediumjesPileUpPtBBdn(); }
const int &NoORNbTightjesPileUpPtBBdn() { return vvv.NoORNbTightjesPileUpPtBBdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesPileUpPtBBdn() { return vvv.J0jesPileUpPtBBdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesPileUpPtBBdn() { return vvv.J1jesPileUpPtBBdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesPileUpPtBBdn() { return vvv.J2jesPileUpPtBBdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesPileUpPtBBdn() { return vvv.J3jesPileUpPtBBdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesPileUpPtBBdn() { return vvv.J4jesPileUpPtBBdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesPileUpPtBBdn() { return vvv.J5jesPileUpPtBBdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesPileUpPtBBdn() { return vvv.J6jesPileUpPtBBdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesPileUpPtBBdn() { return vvv.J7jesPileUpPtBBdn(); }
const vector<int> &NQJGenjesPileUpPtBBdn() { return vvv.NQJGenjesPileUpPtBBdn(); }
const vector<int> &NBJGenjesPileUpPtBBdn() { return vvv.NBJGenjesPileUpPtBBdn(); }
const vector<int> &NLJGenjesPileUpPtBBdn() { return vvv.NLJGenjesPileUpPtBBdn(); }
const float &MVVXjesPileUpPtBBdn() { return vvv.MVVXjesPileUpPtBBdn(); }
const float &PtVVXjesPileUpPtBBdn() { return vvv.PtVVXjesPileUpPtBBdn(); }
const float &HTjesPileUpPtBBdn() { return vvv.HTjesPileUpPtBBdn(); }
const float &HTJjesPileUpPtBBdn() { return vvv.HTJjesPileUpPtBBdn(); }
const float &HTFJjesPileUpPtBBdn() { return vvv.HTFJjesPileUpPtBBdn(); }
const float &SumPtFJjesPileUpPtBBdn() { return vvv.SumPtFJjesPileUpPtBBdn(); }
const float &SumPtJjesPileUpPtBBdn() { return vvv.SumPtJjesPileUpPtBBdn(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesPileUpPtEC1up() { return vvv.JsjesPileUpPtEC1up(); }
const int &NFJjesPileUpPtEC1up() { return vvv.NFJjesPileUpPtEC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesPileUpPtEC1up() { return vvv.FJ0jesPileUpPtEC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesPileUpPtEC1up() { return vvv.FJ1jesPileUpPtEC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesPileUpPtEC1up() { return vvv.FJ2jesPileUpPtEC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesPileUpPtEC1up() { return vvv.FJ3jesPileUpPtEC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesPileUpPtEC1up() { return vvv.FJ4jesPileUpPtEC1up(); }
const float &VMD0jesPileUpPtEC1up() { return vvv.VMD0jesPileUpPtEC1up(); }
const float &VMD1jesPileUpPtEC1up() { return vvv.VMD1jesPileUpPtEC1up(); }
const float &VMD2jesPileUpPtEC1up() { return vvv.VMD2jesPileUpPtEC1up(); }
const float &VMD3jesPileUpPtEC1up() { return vvv.VMD3jesPileUpPtEC1up(); }
const float &VMD4jesPileUpPtEC1up() { return vvv.VMD4jesPileUpPtEC1up(); }
const float &WMD0jesPileUpPtEC1up() { return vvv.WMD0jesPileUpPtEC1up(); }
const float &WMD1jesPileUpPtEC1up() { return vvv.WMD1jesPileUpPtEC1up(); }
const float &WMD2jesPileUpPtEC1up() { return vvv.WMD2jesPileUpPtEC1up(); }
const float &WMD3jesPileUpPtEC1up() { return vvv.WMD3jesPileUpPtEC1up(); }
const float &WMD4jesPileUpPtEC1up() { return vvv.WMD4jesPileUpPtEC1up(); }
const int &NQGen0jesPileUpPtEC1up() { return vvv.NQGen0jesPileUpPtEC1up(); }
const int &NQGen1jesPileUpPtEC1up() { return vvv.NQGen1jesPileUpPtEC1up(); }
const int &NQGen2jesPileUpPtEC1up() { return vvv.NQGen2jesPileUpPtEC1up(); }
const int &NQGen3jesPileUpPtEC1up() { return vvv.NQGen3jesPileUpPtEC1up(); }
const int &NQGen4jesPileUpPtEC1up() { return vvv.NQGen4jesPileUpPtEC1up(); }
const int &NBGen0jesPileUpPtEC1up() { return vvv.NBGen0jesPileUpPtEC1up(); }
const int &NBGen1jesPileUpPtEC1up() { return vvv.NBGen1jesPileUpPtEC1up(); }
const int &NBGen2jesPileUpPtEC1up() { return vvv.NBGen2jesPileUpPtEC1up(); }
const int &NBGen3jesPileUpPtEC1up() { return vvv.NBGen3jesPileUpPtEC1up(); }
const int &NBGen4jesPileUpPtEC1up() { return vvv.NBGen4jesPileUpPtEC1up(); }
const int &NLGen0jesPileUpPtEC1up() { return vvv.NLGen0jesPileUpPtEC1up(); }
const int &NLGen1jesPileUpPtEC1up() { return vvv.NLGen1jesPileUpPtEC1up(); }
const int &NLGen2jesPileUpPtEC1up() { return vvv.NLGen2jesPileUpPtEC1up(); }
const int &NLGen3jesPileUpPtEC1up() { return vvv.NLGen3jesPileUpPtEC1up(); }
const int &NLGen4jesPileUpPtEC1up() { return vvv.NLGen4jesPileUpPtEC1up(); }
const int &NVQGen0jesPileUpPtEC1up() { return vvv.NVQGen0jesPileUpPtEC1up(); }
const int &NVQGen1jesPileUpPtEC1up() { return vvv.NVQGen1jesPileUpPtEC1up(); }
const int &NVQGen2jesPileUpPtEC1up() { return vvv.NVQGen2jesPileUpPtEC1up(); }
const int &NVQGen3jesPileUpPtEC1up() { return vvv.NVQGen3jesPileUpPtEC1up(); }
const int &NVQGen4jesPileUpPtEC1up() { return vvv.NVQGen4jesPileUpPtEC1up(); }
const int &NiFJjesPileUpPtEC1up() { return vvv.NiFJjesPileUpPtEC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesPileUpPtEC1up() { return vvv.iFJ0jesPileUpPtEC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesPileUpPtEC1up() { return vvv.iFJ1jesPileUpPtEC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesPileUpPtEC1up() { return vvv.iFJ2jesPileUpPtEC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesPileUpPtEC1up() { return vvv.iFJ3jesPileUpPtEC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesPileUpPtEC1up() { return vvv.iFJ4jesPileUpPtEC1up(); }
const float &iVMD0jesPileUpPtEC1up() { return vvv.iVMD0jesPileUpPtEC1up(); }
const float &iVMD1jesPileUpPtEC1up() { return vvv.iVMD1jesPileUpPtEC1up(); }
const float &iVMD2jesPileUpPtEC1up() { return vvv.iVMD2jesPileUpPtEC1up(); }
const float &iVMD3jesPileUpPtEC1up() { return vvv.iVMD3jesPileUpPtEC1up(); }
const float &iVMD4jesPileUpPtEC1up() { return vvv.iVMD4jesPileUpPtEC1up(); }
const float &iWMD0jesPileUpPtEC1up() { return vvv.iWMD0jesPileUpPtEC1up(); }
const float &iWMD1jesPileUpPtEC1up() { return vvv.iWMD1jesPileUpPtEC1up(); }
const float &iWMD2jesPileUpPtEC1up() { return vvv.iWMD2jesPileUpPtEC1up(); }
const float &iWMD3jesPileUpPtEC1up() { return vvv.iWMD3jesPileUpPtEC1up(); }
const float &iWMD4jesPileUpPtEC1up() { return vvv.iWMD4jesPileUpPtEC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesPileUpPtEC1up() { return vvv.METjesPileUpPtEC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesPileUpPtEC1up() { return vvv.NujesPileUpPtEC1up(); }
const int &NJjesPileUpPtEC1up() { return vvv.NJjesPileUpPtEC1up(); }
const int &NbLoosejesPileUpPtEC1up() { return vvv.NbLoosejesPileUpPtEC1up(); }
const int &NbMediumjesPileUpPtEC1up() { return vvv.NbMediumjesPileUpPtEC1up(); }
const int &NbTightjesPileUpPtEC1up() { return vvv.NbTightjesPileUpPtEC1up(); }
const int &NoORNbLoosejesPileUpPtEC1up() { return vvv.NoORNbLoosejesPileUpPtEC1up(); }
const int &NoORNbMediumjesPileUpPtEC1up() { return vvv.NoORNbMediumjesPileUpPtEC1up(); }
const int &NoORNbTightjesPileUpPtEC1up() { return vvv.NoORNbTightjesPileUpPtEC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesPileUpPtEC1up() { return vvv.J0jesPileUpPtEC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesPileUpPtEC1up() { return vvv.J1jesPileUpPtEC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesPileUpPtEC1up() { return vvv.J2jesPileUpPtEC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesPileUpPtEC1up() { return vvv.J3jesPileUpPtEC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesPileUpPtEC1up() { return vvv.J4jesPileUpPtEC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesPileUpPtEC1up() { return vvv.J5jesPileUpPtEC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesPileUpPtEC1up() { return vvv.J6jesPileUpPtEC1up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesPileUpPtEC1up() { return vvv.J7jesPileUpPtEC1up(); }
const vector<int> &NQJGenjesPileUpPtEC1up() { return vvv.NQJGenjesPileUpPtEC1up(); }
const vector<int> &NBJGenjesPileUpPtEC1up() { return vvv.NBJGenjesPileUpPtEC1up(); }
const vector<int> &NLJGenjesPileUpPtEC1up() { return vvv.NLJGenjesPileUpPtEC1up(); }
const float &MVVXjesPileUpPtEC1up() { return vvv.MVVXjesPileUpPtEC1up(); }
const float &PtVVXjesPileUpPtEC1up() { return vvv.PtVVXjesPileUpPtEC1up(); }
const float &HTjesPileUpPtEC1up() { return vvv.HTjesPileUpPtEC1up(); }
const float &HTJjesPileUpPtEC1up() { return vvv.HTJjesPileUpPtEC1up(); }
const float &HTFJjesPileUpPtEC1up() { return vvv.HTFJjesPileUpPtEC1up(); }
const float &SumPtFJjesPileUpPtEC1up() { return vvv.SumPtFJjesPileUpPtEC1up(); }
const float &SumPtJjesPileUpPtEC1up() { return vvv.SumPtJjesPileUpPtEC1up(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesPileUpPtEC1dn() { return vvv.JsjesPileUpPtEC1dn(); }
const int &NFJjesPileUpPtEC1dn() { return vvv.NFJjesPileUpPtEC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesPileUpPtEC1dn() { return vvv.FJ0jesPileUpPtEC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesPileUpPtEC1dn() { return vvv.FJ1jesPileUpPtEC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesPileUpPtEC1dn() { return vvv.FJ2jesPileUpPtEC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesPileUpPtEC1dn() { return vvv.FJ3jesPileUpPtEC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesPileUpPtEC1dn() { return vvv.FJ4jesPileUpPtEC1dn(); }
const float &VMD0jesPileUpPtEC1dn() { return vvv.VMD0jesPileUpPtEC1dn(); }
const float &VMD1jesPileUpPtEC1dn() { return vvv.VMD1jesPileUpPtEC1dn(); }
const float &VMD2jesPileUpPtEC1dn() { return vvv.VMD2jesPileUpPtEC1dn(); }
const float &VMD3jesPileUpPtEC1dn() { return vvv.VMD3jesPileUpPtEC1dn(); }
const float &VMD4jesPileUpPtEC1dn() { return vvv.VMD4jesPileUpPtEC1dn(); }
const float &WMD0jesPileUpPtEC1dn() { return vvv.WMD0jesPileUpPtEC1dn(); }
const float &WMD1jesPileUpPtEC1dn() { return vvv.WMD1jesPileUpPtEC1dn(); }
const float &WMD2jesPileUpPtEC1dn() { return vvv.WMD2jesPileUpPtEC1dn(); }
const float &WMD3jesPileUpPtEC1dn() { return vvv.WMD3jesPileUpPtEC1dn(); }
const float &WMD4jesPileUpPtEC1dn() { return vvv.WMD4jesPileUpPtEC1dn(); }
const int &NQGen0jesPileUpPtEC1dn() { return vvv.NQGen0jesPileUpPtEC1dn(); }
const int &NQGen1jesPileUpPtEC1dn() { return vvv.NQGen1jesPileUpPtEC1dn(); }
const int &NQGen2jesPileUpPtEC1dn() { return vvv.NQGen2jesPileUpPtEC1dn(); }
const int &NQGen3jesPileUpPtEC1dn() { return vvv.NQGen3jesPileUpPtEC1dn(); }
const int &NQGen4jesPileUpPtEC1dn() { return vvv.NQGen4jesPileUpPtEC1dn(); }
const int &NBGen0jesPileUpPtEC1dn() { return vvv.NBGen0jesPileUpPtEC1dn(); }
const int &NBGen1jesPileUpPtEC1dn() { return vvv.NBGen1jesPileUpPtEC1dn(); }
const int &NBGen2jesPileUpPtEC1dn() { return vvv.NBGen2jesPileUpPtEC1dn(); }
const int &NBGen3jesPileUpPtEC1dn() { return vvv.NBGen3jesPileUpPtEC1dn(); }
const int &NBGen4jesPileUpPtEC1dn() { return vvv.NBGen4jesPileUpPtEC1dn(); }
const int &NLGen0jesPileUpPtEC1dn() { return vvv.NLGen0jesPileUpPtEC1dn(); }
const int &NLGen1jesPileUpPtEC1dn() { return vvv.NLGen1jesPileUpPtEC1dn(); }
const int &NLGen2jesPileUpPtEC1dn() { return vvv.NLGen2jesPileUpPtEC1dn(); }
const int &NLGen3jesPileUpPtEC1dn() { return vvv.NLGen3jesPileUpPtEC1dn(); }
const int &NLGen4jesPileUpPtEC1dn() { return vvv.NLGen4jesPileUpPtEC1dn(); }
const int &NVQGen0jesPileUpPtEC1dn() { return vvv.NVQGen0jesPileUpPtEC1dn(); }
const int &NVQGen1jesPileUpPtEC1dn() { return vvv.NVQGen1jesPileUpPtEC1dn(); }
const int &NVQGen2jesPileUpPtEC1dn() { return vvv.NVQGen2jesPileUpPtEC1dn(); }
const int &NVQGen3jesPileUpPtEC1dn() { return vvv.NVQGen3jesPileUpPtEC1dn(); }
const int &NVQGen4jesPileUpPtEC1dn() { return vvv.NVQGen4jesPileUpPtEC1dn(); }
const int &NiFJjesPileUpPtEC1dn() { return vvv.NiFJjesPileUpPtEC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesPileUpPtEC1dn() { return vvv.iFJ0jesPileUpPtEC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesPileUpPtEC1dn() { return vvv.iFJ1jesPileUpPtEC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesPileUpPtEC1dn() { return vvv.iFJ2jesPileUpPtEC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesPileUpPtEC1dn() { return vvv.iFJ3jesPileUpPtEC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesPileUpPtEC1dn() { return vvv.iFJ4jesPileUpPtEC1dn(); }
const float &iVMD0jesPileUpPtEC1dn() { return vvv.iVMD0jesPileUpPtEC1dn(); }
const float &iVMD1jesPileUpPtEC1dn() { return vvv.iVMD1jesPileUpPtEC1dn(); }
const float &iVMD2jesPileUpPtEC1dn() { return vvv.iVMD2jesPileUpPtEC1dn(); }
const float &iVMD3jesPileUpPtEC1dn() { return vvv.iVMD3jesPileUpPtEC1dn(); }
const float &iVMD4jesPileUpPtEC1dn() { return vvv.iVMD4jesPileUpPtEC1dn(); }
const float &iWMD0jesPileUpPtEC1dn() { return vvv.iWMD0jesPileUpPtEC1dn(); }
const float &iWMD1jesPileUpPtEC1dn() { return vvv.iWMD1jesPileUpPtEC1dn(); }
const float &iWMD2jesPileUpPtEC1dn() { return vvv.iWMD2jesPileUpPtEC1dn(); }
const float &iWMD3jesPileUpPtEC1dn() { return vvv.iWMD3jesPileUpPtEC1dn(); }
const float &iWMD4jesPileUpPtEC1dn() { return vvv.iWMD4jesPileUpPtEC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesPileUpPtEC1dn() { return vvv.METjesPileUpPtEC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesPileUpPtEC1dn() { return vvv.NujesPileUpPtEC1dn(); }
const int &NJjesPileUpPtEC1dn() { return vvv.NJjesPileUpPtEC1dn(); }
const int &NbLoosejesPileUpPtEC1dn() { return vvv.NbLoosejesPileUpPtEC1dn(); }
const int &NbMediumjesPileUpPtEC1dn() { return vvv.NbMediumjesPileUpPtEC1dn(); }
const int &NbTightjesPileUpPtEC1dn() { return vvv.NbTightjesPileUpPtEC1dn(); }
const int &NoORNbLoosejesPileUpPtEC1dn() { return vvv.NoORNbLoosejesPileUpPtEC1dn(); }
const int &NoORNbMediumjesPileUpPtEC1dn() { return vvv.NoORNbMediumjesPileUpPtEC1dn(); }
const int &NoORNbTightjesPileUpPtEC1dn() { return vvv.NoORNbTightjesPileUpPtEC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesPileUpPtEC1dn() { return vvv.J0jesPileUpPtEC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesPileUpPtEC1dn() { return vvv.J1jesPileUpPtEC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesPileUpPtEC1dn() { return vvv.J2jesPileUpPtEC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesPileUpPtEC1dn() { return vvv.J3jesPileUpPtEC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesPileUpPtEC1dn() { return vvv.J4jesPileUpPtEC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesPileUpPtEC1dn() { return vvv.J5jesPileUpPtEC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesPileUpPtEC1dn() { return vvv.J6jesPileUpPtEC1dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesPileUpPtEC1dn() { return vvv.J7jesPileUpPtEC1dn(); }
const vector<int> &NQJGenjesPileUpPtEC1dn() { return vvv.NQJGenjesPileUpPtEC1dn(); }
const vector<int> &NBJGenjesPileUpPtEC1dn() { return vvv.NBJGenjesPileUpPtEC1dn(); }
const vector<int> &NLJGenjesPileUpPtEC1dn() { return vvv.NLJGenjesPileUpPtEC1dn(); }
const float &MVVXjesPileUpPtEC1dn() { return vvv.MVVXjesPileUpPtEC1dn(); }
const float &PtVVXjesPileUpPtEC1dn() { return vvv.PtVVXjesPileUpPtEC1dn(); }
const float &HTjesPileUpPtEC1dn() { return vvv.HTjesPileUpPtEC1dn(); }
const float &HTJjesPileUpPtEC1dn() { return vvv.HTJjesPileUpPtEC1dn(); }
const float &HTFJjesPileUpPtEC1dn() { return vvv.HTFJjesPileUpPtEC1dn(); }
const float &SumPtFJjesPileUpPtEC1dn() { return vvv.SumPtFJjesPileUpPtEC1dn(); }
const float &SumPtJjesPileUpPtEC1dn() { return vvv.SumPtJjesPileUpPtEC1dn(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesPileUpPtEC2up() { return vvv.JsjesPileUpPtEC2up(); }
const int &NFJjesPileUpPtEC2up() { return vvv.NFJjesPileUpPtEC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesPileUpPtEC2up() { return vvv.FJ0jesPileUpPtEC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesPileUpPtEC2up() { return vvv.FJ1jesPileUpPtEC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesPileUpPtEC2up() { return vvv.FJ2jesPileUpPtEC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesPileUpPtEC2up() { return vvv.FJ3jesPileUpPtEC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesPileUpPtEC2up() { return vvv.FJ4jesPileUpPtEC2up(); }
const float &VMD0jesPileUpPtEC2up() { return vvv.VMD0jesPileUpPtEC2up(); }
const float &VMD1jesPileUpPtEC2up() { return vvv.VMD1jesPileUpPtEC2up(); }
const float &VMD2jesPileUpPtEC2up() { return vvv.VMD2jesPileUpPtEC2up(); }
const float &VMD3jesPileUpPtEC2up() { return vvv.VMD3jesPileUpPtEC2up(); }
const float &VMD4jesPileUpPtEC2up() { return vvv.VMD4jesPileUpPtEC2up(); }
const float &WMD0jesPileUpPtEC2up() { return vvv.WMD0jesPileUpPtEC2up(); }
const float &WMD1jesPileUpPtEC2up() { return vvv.WMD1jesPileUpPtEC2up(); }
const float &WMD2jesPileUpPtEC2up() { return vvv.WMD2jesPileUpPtEC2up(); }
const float &WMD3jesPileUpPtEC2up() { return vvv.WMD3jesPileUpPtEC2up(); }
const float &WMD4jesPileUpPtEC2up() { return vvv.WMD4jesPileUpPtEC2up(); }
const int &NQGen0jesPileUpPtEC2up() { return vvv.NQGen0jesPileUpPtEC2up(); }
const int &NQGen1jesPileUpPtEC2up() { return vvv.NQGen1jesPileUpPtEC2up(); }
const int &NQGen2jesPileUpPtEC2up() { return vvv.NQGen2jesPileUpPtEC2up(); }
const int &NQGen3jesPileUpPtEC2up() { return vvv.NQGen3jesPileUpPtEC2up(); }
const int &NQGen4jesPileUpPtEC2up() { return vvv.NQGen4jesPileUpPtEC2up(); }
const int &NBGen0jesPileUpPtEC2up() { return vvv.NBGen0jesPileUpPtEC2up(); }
const int &NBGen1jesPileUpPtEC2up() { return vvv.NBGen1jesPileUpPtEC2up(); }
const int &NBGen2jesPileUpPtEC2up() { return vvv.NBGen2jesPileUpPtEC2up(); }
const int &NBGen3jesPileUpPtEC2up() { return vvv.NBGen3jesPileUpPtEC2up(); }
const int &NBGen4jesPileUpPtEC2up() { return vvv.NBGen4jesPileUpPtEC2up(); }
const int &NLGen0jesPileUpPtEC2up() { return vvv.NLGen0jesPileUpPtEC2up(); }
const int &NLGen1jesPileUpPtEC2up() { return vvv.NLGen1jesPileUpPtEC2up(); }
const int &NLGen2jesPileUpPtEC2up() { return vvv.NLGen2jesPileUpPtEC2up(); }
const int &NLGen3jesPileUpPtEC2up() { return vvv.NLGen3jesPileUpPtEC2up(); }
const int &NLGen4jesPileUpPtEC2up() { return vvv.NLGen4jesPileUpPtEC2up(); }
const int &NVQGen0jesPileUpPtEC2up() { return vvv.NVQGen0jesPileUpPtEC2up(); }
const int &NVQGen1jesPileUpPtEC2up() { return vvv.NVQGen1jesPileUpPtEC2up(); }
const int &NVQGen2jesPileUpPtEC2up() { return vvv.NVQGen2jesPileUpPtEC2up(); }
const int &NVQGen3jesPileUpPtEC2up() { return vvv.NVQGen3jesPileUpPtEC2up(); }
const int &NVQGen4jesPileUpPtEC2up() { return vvv.NVQGen4jesPileUpPtEC2up(); }
const int &NiFJjesPileUpPtEC2up() { return vvv.NiFJjesPileUpPtEC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesPileUpPtEC2up() { return vvv.iFJ0jesPileUpPtEC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesPileUpPtEC2up() { return vvv.iFJ1jesPileUpPtEC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesPileUpPtEC2up() { return vvv.iFJ2jesPileUpPtEC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesPileUpPtEC2up() { return vvv.iFJ3jesPileUpPtEC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesPileUpPtEC2up() { return vvv.iFJ4jesPileUpPtEC2up(); }
const float &iVMD0jesPileUpPtEC2up() { return vvv.iVMD0jesPileUpPtEC2up(); }
const float &iVMD1jesPileUpPtEC2up() { return vvv.iVMD1jesPileUpPtEC2up(); }
const float &iVMD2jesPileUpPtEC2up() { return vvv.iVMD2jesPileUpPtEC2up(); }
const float &iVMD3jesPileUpPtEC2up() { return vvv.iVMD3jesPileUpPtEC2up(); }
const float &iVMD4jesPileUpPtEC2up() { return vvv.iVMD4jesPileUpPtEC2up(); }
const float &iWMD0jesPileUpPtEC2up() { return vvv.iWMD0jesPileUpPtEC2up(); }
const float &iWMD1jesPileUpPtEC2up() { return vvv.iWMD1jesPileUpPtEC2up(); }
const float &iWMD2jesPileUpPtEC2up() { return vvv.iWMD2jesPileUpPtEC2up(); }
const float &iWMD3jesPileUpPtEC2up() { return vvv.iWMD3jesPileUpPtEC2up(); }
const float &iWMD4jesPileUpPtEC2up() { return vvv.iWMD4jesPileUpPtEC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesPileUpPtEC2up() { return vvv.METjesPileUpPtEC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesPileUpPtEC2up() { return vvv.NujesPileUpPtEC2up(); }
const int &NJjesPileUpPtEC2up() { return vvv.NJjesPileUpPtEC2up(); }
const int &NbLoosejesPileUpPtEC2up() { return vvv.NbLoosejesPileUpPtEC2up(); }
const int &NbMediumjesPileUpPtEC2up() { return vvv.NbMediumjesPileUpPtEC2up(); }
const int &NbTightjesPileUpPtEC2up() { return vvv.NbTightjesPileUpPtEC2up(); }
const int &NoORNbLoosejesPileUpPtEC2up() { return vvv.NoORNbLoosejesPileUpPtEC2up(); }
const int &NoORNbMediumjesPileUpPtEC2up() { return vvv.NoORNbMediumjesPileUpPtEC2up(); }
const int &NoORNbTightjesPileUpPtEC2up() { return vvv.NoORNbTightjesPileUpPtEC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesPileUpPtEC2up() { return vvv.J0jesPileUpPtEC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesPileUpPtEC2up() { return vvv.J1jesPileUpPtEC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesPileUpPtEC2up() { return vvv.J2jesPileUpPtEC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesPileUpPtEC2up() { return vvv.J3jesPileUpPtEC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesPileUpPtEC2up() { return vvv.J4jesPileUpPtEC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesPileUpPtEC2up() { return vvv.J5jesPileUpPtEC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesPileUpPtEC2up() { return vvv.J6jesPileUpPtEC2up(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesPileUpPtEC2up() { return vvv.J7jesPileUpPtEC2up(); }
const vector<int> &NQJGenjesPileUpPtEC2up() { return vvv.NQJGenjesPileUpPtEC2up(); }
const vector<int> &NBJGenjesPileUpPtEC2up() { return vvv.NBJGenjesPileUpPtEC2up(); }
const vector<int> &NLJGenjesPileUpPtEC2up() { return vvv.NLJGenjesPileUpPtEC2up(); }
const float &MVVXjesPileUpPtEC2up() { return vvv.MVVXjesPileUpPtEC2up(); }
const float &PtVVXjesPileUpPtEC2up() { return vvv.PtVVXjesPileUpPtEC2up(); }
const float &HTjesPileUpPtEC2up() { return vvv.HTjesPileUpPtEC2up(); }
const float &HTJjesPileUpPtEC2up() { return vvv.HTJjesPileUpPtEC2up(); }
const float &HTFJjesPileUpPtEC2up() { return vvv.HTFJjesPileUpPtEC2up(); }
const float &SumPtFJjesPileUpPtEC2up() { return vvv.SumPtFJjesPileUpPtEC2up(); }
const float &SumPtJjesPileUpPtEC2up() { return vvv.SumPtJjesPileUpPtEC2up(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesPileUpPtEC2dn() { return vvv.JsjesPileUpPtEC2dn(); }
const int &NFJjesPileUpPtEC2dn() { return vvv.NFJjesPileUpPtEC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesPileUpPtEC2dn() { return vvv.FJ0jesPileUpPtEC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesPileUpPtEC2dn() { return vvv.FJ1jesPileUpPtEC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesPileUpPtEC2dn() { return vvv.FJ2jesPileUpPtEC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesPileUpPtEC2dn() { return vvv.FJ3jesPileUpPtEC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesPileUpPtEC2dn() { return vvv.FJ4jesPileUpPtEC2dn(); }
const float &VMD0jesPileUpPtEC2dn() { return vvv.VMD0jesPileUpPtEC2dn(); }
const float &VMD1jesPileUpPtEC2dn() { return vvv.VMD1jesPileUpPtEC2dn(); }
const float &VMD2jesPileUpPtEC2dn() { return vvv.VMD2jesPileUpPtEC2dn(); }
const float &VMD3jesPileUpPtEC2dn() { return vvv.VMD3jesPileUpPtEC2dn(); }
const float &VMD4jesPileUpPtEC2dn() { return vvv.VMD4jesPileUpPtEC2dn(); }
const float &WMD0jesPileUpPtEC2dn() { return vvv.WMD0jesPileUpPtEC2dn(); }
const float &WMD1jesPileUpPtEC2dn() { return vvv.WMD1jesPileUpPtEC2dn(); }
const float &WMD2jesPileUpPtEC2dn() { return vvv.WMD2jesPileUpPtEC2dn(); }
const float &WMD3jesPileUpPtEC2dn() { return vvv.WMD3jesPileUpPtEC2dn(); }
const float &WMD4jesPileUpPtEC2dn() { return vvv.WMD4jesPileUpPtEC2dn(); }
const int &NQGen0jesPileUpPtEC2dn() { return vvv.NQGen0jesPileUpPtEC2dn(); }
const int &NQGen1jesPileUpPtEC2dn() { return vvv.NQGen1jesPileUpPtEC2dn(); }
const int &NQGen2jesPileUpPtEC2dn() { return vvv.NQGen2jesPileUpPtEC2dn(); }
const int &NQGen3jesPileUpPtEC2dn() { return vvv.NQGen3jesPileUpPtEC2dn(); }
const int &NQGen4jesPileUpPtEC2dn() { return vvv.NQGen4jesPileUpPtEC2dn(); }
const int &NBGen0jesPileUpPtEC2dn() { return vvv.NBGen0jesPileUpPtEC2dn(); }
const int &NBGen1jesPileUpPtEC2dn() { return vvv.NBGen1jesPileUpPtEC2dn(); }
const int &NBGen2jesPileUpPtEC2dn() { return vvv.NBGen2jesPileUpPtEC2dn(); }
const int &NBGen3jesPileUpPtEC2dn() { return vvv.NBGen3jesPileUpPtEC2dn(); }
const int &NBGen4jesPileUpPtEC2dn() { return vvv.NBGen4jesPileUpPtEC2dn(); }
const int &NLGen0jesPileUpPtEC2dn() { return vvv.NLGen0jesPileUpPtEC2dn(); }
const int &NLGen1jesPileUpPtEC2dn() { return vvv.NLGen1jesPileUpPtEC2dn(); }
const int &NLGen2jesPileUpPtEC2dn() { return vvv.NLGen2jesPileUpPtEC2dn(); }
const int &NLGen3jesPileUpPtEC2dn() { return vvv.NLGen3jesPileUpPtEC2dn(); }
const int &NLGen4jesPileUpPtEC2dn() { return vvv.NLGen4jesPileUpPtEC2dn(); }
const int &NVQGen0jesPileUpPtEC2dn() { return vvv.NVQGen0jesPileUpPtEC2dn(); }
const int &NVQGen1jesPileUpPtEC2dn() { return vvv.NVQGen1jesPileUpPtEC2dn(); }
const int &NVQGen2jesPileUpPtEC2dn() { return vvv.NVQGen2jesPileUpPtEC2dn(); }
const int &NVQGen3jesPileUpPtEC2dn() { return vvv.NVQGen3jesPileUpPtEC2dn(); }
const int &NVQGen4jesPileUpPtEC2dn() { return vvv.NVQGen4jesPileUpPtEC2dn(); }
const int &NiFJjesPileUpPtEC2dn() { return vvv.NiFJjesPileUpPtEC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesPileUpPtEC2dn() { return vvv.iFJ0jesPileUpPtEC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesPileUpPtEC2dn() { return vvv.iFJ1jesPileUpPtEC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesPileUpPtEC2dn() { return vvv.iFJ2jesPileUpPtEC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesPileUpPtEC2dn() { return vvv.iFJ3jesPileUpPtEC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesPileUpPtEC2dn() { return vvv.iFJ4jesPileUpPtEC2dn(); }
const float &iVMD0jesPileUpPtEC2dn() { return vvv.iVMD0jesPileUpPtEC2dn(); }
const float &iVMD1jesPileUpPtEC2dn() { return vvv.iVMD1jesPileUpPtEC2dn(); }
const float &iVMD2jesPileUpPtEC2dn() { return vvv.iVMD2jesPileUpPtEC2dn(); }
const float &iVMD3jesPileUpPtEC2dn() { return vvv.iVMD3jesPileUpPtEC2dn(); }
const float &iVMD4jesPileUpPtEC2dn() { return vvv.iVMD4jesPileUpPtEC2dn(); }
const float &iWMD0jesPileUpPtEC2dn() { return vvv.iWMD0jesPileUpPtEC2dn(); }
const float &iWMD1jesPileUpPtEC2dn() { return vvv.iWMD1jesPileUpPtEC2dn(); }
const float &iWMD2jesPileUpPtEC2dn() { return vvv.iWMD2jesPileUpPtEC2dn(); }
const float &iWMD3jesPileUpPtEC2dn() { return vvv.iWMD3jesPileUpPtEC2dn(); }
const float &iWMD4jesPileUpPtEC2dn() { return vvv.iWMD4jesPileUpPtEC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesPileUpPtEC2dn() { return vvv.METjesPileUpPtEC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesPileUpPtEC2dn() { return vvv.NujesPileUpPtEC2dn(); }
const int &NJjesPileUpPtEC2dn() { return vvv.NJjesPileUpPtEC2dn(); }
const int &NbLoosejesPileUpPtEC2dn() { return vvv.NbLoosejesPileUpPtEC2dn(); }
const int &NbMediumjesPileUpPtEC2dn() { return vvv.NbMediumjesPileUpPtEC2dn(); }
const int &NbTightjesPileUpPtEC2dn() { return vvv.NbTightjesPileUpPtEC2dn(); }
const int &NoORNbLoosejesPileUpPtEC2dn() { return vvv.NoORNbLoosejesPileUpPtEC2dn(); }
const int &NoORNbMediumjesPileUpPtEC2dn() { return vvv.NoORNbMediumjesPileUpPtEC2dn(); }
const int &NoORNbTightjesPileUpPtEC2dn() { return vvv.NoORNbTightjesPileUpPtEC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesPileUpPtEC2dn() { return vvv.J0jesPileUpPtEC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesPileUpPtEC2dn() { return vvv.J1jesPileUpPtEC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesPileUpPtEC2dn() { return vvv.J2jesPileUpPtEC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesPileUpPtEC2dn() { return vvv.J3jesPileUpPtEC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesPileUpPtEC2dn() { return vvv.J4jesPileUpPtEC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesPileUpPtEC2dn() { return vvv.J5jesPileUpPtEC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesPileUpPtEC2dn() { return vvv.J6jesPileUpPtEC2dn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesPileUpPtEC2dn() { return vvv.J7jesPileUpPtEC2dn(); }
const vector<int> &NQJGenjesPileUpPtEC2dn() { return vvv.NQJGenjesPileUpPtEC2dn(); }
const vector<int> &NBJGenjesPileUpPtEC2dn() { return vvv.NBJGenjesPileUpPtEC2dn(); }
const vector<int> &NLJGenjesPileUpPtEC2dn() { return vvv.NLJGenjesPileUpPtEC2dn(); }
const float &MVVXjesPileUpPtEC2dn() { return vvv.MVVXjesPileUpPtEC2dn(); }
const float &PtVVXjesPileUpPtEC2dn() { return vvv.PtVVXjesPileUpPtEC2dn(); }
const float &HTjesPileUpPtEC2dn() { return vvv.HTjesPileUpPtEC2dn(); }
const float &HTJjesPileUpPtEC2dn() { return vvv.HTJjesPileUpPtEC2dn(); }
const float &HTFJjesPileUpPtEC2dn() { return vvv.HTFJjesPileUpPtEC2dn(); }
const float &SumPtFJjesPileUpPtEC2dn() { return vvv.SumPtFJjesPileUpPtEC2dn(); }
const float &SumPtJjesPileUpPtEC2dn() { return vvv.SumPtJjesPileUpPtEC2dn(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesPileUpPtHFup() { return vvv.JsjesPileUpPtHFup(); }
const int &NFJjesPileUpPtHFup() { return vvv.NFJjesPileUpPtHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesPileUpPtHFup() { return vvv.FJ0jesPileUpPtHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesPileUpPtHFup() { return vvv.FJ1jesPileUpPtHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesPileUpPtHFup() { return vvv.FJ2jesPileUpPtHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesPileUpPtHFup() { return vvv.FJ3jesPileUpPtHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesPileUpPtHFup() { return vvv.FJ4jesPileUpPtHFup(); }
const float &VMD0jesPileUpPtHFup() { return vvv.VMD0jesPileUpPtHFup(); }
const float &VMD1jesPileUpPtHFup() { return vvv.VMD1jesPileUpPtHFup(); }
const float &VMD2jesPileUpPtHFup() { return vvv.VMD2jesPileUpPtHFup(); }
const float &VMD3jesPileUpPtHFup() { return vvv.VMD3jesPileUpPtHFup(); }
const float &VMD4jesPileUpPtHFup() { return vvv.VMD4jesPileUpPtHFup(); }
const float &WMD0jesPileUpPtHFup() { return vvv.WMD0jesPileUpPtHFup(); }
const float &WMD1jesPileUpPtHFup() { return vvv.WMD1jesPileUpPtHFup(); }
const float &WMD2jesPileUpPtHFup() { return vvv.WMD2jesPileUpPtHFup(); }
const float &WMD3jesPileUpPtHFup() { return vvv.WMD3jesPileUpPtHFup(); }
const float &WMD4jesPileUpPtHFup() { return vvv.WMD4jesPileUpPtHFup(); }
const int &NQGen0jesPileUpPtHFup() { return vvv.NQGen0jesPileUpPtHFup(); }
const int &NQGen1jesPileUpPtHFup() { return vvv.NQGen1jesPileUpPtHFup(); }
const int &NQGen2jesPileUpPtHFup() { return vvv.NQGen2jesPileUpPtHFup(); }
const int &NQGen3jesPileUpPtHFup() { return vvv.NQGen3jesPileUpPtHFup(); }
const int &NQGen4jesPileUpPtHFup() { return vvv.NQGen4jesPileUpPtHFup(); }
const int &NBGen0jesPileUpPtHFup() { return vvv.NBGen0jesPileUpPtHFup(); }
const int &NBGen1jesPileUpPtHFup() { return vvv.NBGen1jesPileUpPtHFup(); }
const int &NBGen2jesPileUpPtHFup() { return vvv.NBGen2jesPileUpPtHFup(); }
const int &NBGen3jesPileUpPtHFup() { return vvv.NBGen3jesPileUpPtHFup(); }
const int &NBGen4jesPileUpPtHFup() { return vvv.NBGen4jesPileUpPtHFup(); }
const int &NLGen0jesPileUpPtHFup() { return vvv.NLGen0jesPileUpPtHFup(); }
const int &NLGen1jesPileUpPtHFup() { return vvv.NLGen1jesPileUpPtHFup(); }
const int &NLGen2jesPileUpPtHFup() { return vvv.NLGen2jesPileUpPtHFup(); }
const int &NLGen3jesPileUpPtHFup() { return vvv.NLGen3jesPileUpPtHFup(); }
const int &NLGen4jesPileUpPtHFup() { return vvv.NLGen4jesPileUpPtHFup(); }
const int &NVQGen0jesPileUpPtHFup() { return vvv.NVQGen0jesPileUpPtHFup(); }
const int &NVQGen1jesPileUpPtHFup() { return vvv.NVQGen1jesPileUpPtHFup(); }
const int &NVQGen2jesPileUpPtHFup() { return vvv.NVQGen2jesPileUpPtHFup(); }
const int &NVQGen3jesPileUpPtHFup() { return vvv.NVQGen3jesPileUpPtHFup(); }
const int &NVQGen4jesPileUpPtHFup() { return vvv.NVQGen4jesPileUpPtHFup(); }
const int &NiFJjesPileUpPtHFup() { return vvv.NiFJjesPileUpPtHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesPileUpPtHFup() { return vvv.iFJ0jesPileUpPtHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesPileUpPtHFup() { return vvv.iFJ1jesPileUpPtHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesPileUpPtHFup() { return vvv.iFJ2jesPileUpPtHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesPileUpPtHFup() { return vvv.iFJ3jesPileUpPtHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesPileUpPtHFup() { return vvv.iFJ4jesPileUpPtHFup(); }
const float &iVMD0jesPileUpPtHFup() { return vvv.iVMD0jesPileUpPtHFup(); }
const float &iVMD1jesPileUpPtHFup() { return vvv.iVMD1jesPileUpPtHFup(); }
const float &iVMD2jesPileUpPtHFup() { return vvv.iVMD2jesPileUpPtHFup(); }
const float &iVMD3jesPileUpPtHFup() { return vvv.iVMD3jesPileUpPtHFup(); }
const float &iVMD4jesPileUpPtHFup() { return vvv.iVMD4jesPileUpPtHFup(); }
const float &iWMD0jesPileUpPtHFup() { return vvv.iWMD0jesPileUpPtHFup(); }
const float &iWMD1jesPileUpPtHFup() { return vvv.iWMD1jesPileUpPtHFup(); }
const float &iWMD2jesPileUpPtHFup() { return vvv.iWMD2jesPileUpPtHFup(); }
const float &iWMD3jesPileUpPtHFup() { return vvv.iWMD3jesPileUpPtHFup(); }
const float &iWMD4jesPileUpPtHFup() { return vvv.iWMD4jesPileUpPtHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesPileUpPtHFup() { return vvv.METjesPileUpPtHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesPileUpPtHFup() { return vvv.NujesPileUpPtHFup(); }
const int &NJjesPileUpPtHFup() { return vvv.NJjesPileUpPtHFup(); }
const int &NbLoosejesPileUpPtHFup() { return vvv.NbLoosejesPileUpPtHFup(); }
const int &NbMediumjesPileUpPtHFup() { return vvv.NbMediumjesPileUpPtHFup(); }
const int &NbTightjesPileUpPtHFup() { return vvv.NbTightjesPileUpPtHFup(); }
const int &NoORNbLoosejesPileUpPtHFup() { return vvv.NoORNbLoosejesPileUpPtHFup(); }
const int &NoORNbMediumjesPileUpPtHFup() { return vvv.NoORNbMediumjesPileUpPtHFup(); }
const int &NoORNbTightjesPileUpPtHFup() { return vvv.NoORNbTightjesPileUpPtHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesPileUpPtHFup() { return vvv.J0jesPileUpPtHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesPileUpPtHFup() { return vvv.J1jesPileUpPtHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesPileUpPtHFup() { return vvv.J2jesPileUpPtHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesPileUpPtHFup() { return vvv.J3jesPileUpPtHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesPileUpPtHFup() { return vvv.J4jesPileUpPtHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesPileUpPtHFup() { return vvv.J5jesPileUpPtHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesPileUpPtHFup() { return vvv.J6jesPileUpPtHFup(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesPileUpPtHFup() { return vvv.J7jesPileUpPtHFup(); }
const vector<int> &NQJGenjesPileUpPtHFup() { return vvv.NQJGenjesPileUpPtHFup(); }
const vector<int> &NBJGenjesPileUpPtHFup() { return vvv.NBJGenjesPileUpPtHFup(); }
const vector<int> &NLJGenjesPileUpPtHFup() { return vvv.NLJGenjesPileUpPtHFup(); }
const float &MVVXjesPileUpPtHFup() { return vvv.MVVXjesPileUpPtHFup(); }
const float &PtVVXjesPileUpPtHFup() { return vvv.PtVVXjesPileUpPtHFup(); }
const float &HTjesPileUpPtHFup() { return vvv.HTjesPileUpPtHFup(); }
const float &HTJjesPileUpPtHFup() { return vvv.HTJjesPileUpPtHFup(); }
const float &HTFJjesPileUpPtHFup() { return vvv.HTFJjesPileUpPtHFup(); }
const float &SumPtFJjesPileUpPtHFup() { return vvv.SumPtFJjesPileUpPtHFup(); }
const float &SumPtJjesPileUpPtHFup() { return vvv.SumPtJjesPileUpPtHFup(); }
const vector<ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > > &JsjesPileUpPtHFdn() { return vvv.JsjesPileUpPtHFdn(); }
const int &NFJjesPileUpPtHFdn() { return vvv.NFJjesPileUpPtHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ0jesPileUpPtHFdn() { return vvv.FJ0jesPileUpPtHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ1jesPileUpPtHFdn() { return vvv.FJ1jesPileUpPtHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ2jesPileUpPtHFdn() { return vvv.FJ2jesPileUpPtHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ3jesPileUpPtHFdn() { return vvv.FJ3jesPileUpPtHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &FJ4jesPileUpPtHFdn() { return vvv.FJ4jesPileUpPtHFdn(); }
const float &VMD0jesPileUpPtHFdn() { return vvv.VMD0jesPileUpPtHFdn(); }
const float &VMD1jesPileUpPtHFdn() { return vvv.VMD1jesPileUpPtHFdn(); }
const float &VMD2jesPileUpPtHFdn() { return vvv.VMD2jesPileUpPtHFdn(); }
const float &VMD3jesPileUpPtHFdn() { return vvv.VMD3jesPileUpPtHFdn(); }
const float &VMD4jesPileUpPtHFdn() { return vvv.VMD4jesPileUpPtHFdn(); }
const float &WMD0jesPileUpPtHFdn() { return vvv.WMD0jesPileUpPtHFdn(); }
const float &WMD1jesPileUpPtHFdn() { return vvv.WMD1jesPileUpPtHFdn(); }
const float &WMD2jesPileUpPtHFdn() { return vvv.WMD2jesPileUpPtHFdn(); }
const float &WMD3jesPileUpPtHFdn() { return vvv.WMD3jesPileUpPtHFdn(); }
const float &WMD4jesPileUpPtHFdn() { return vvv.WMD4jesPileUpPtHFdn(); }
const int &NQGen0jesPileUpPtHFdn() { return vvv.NQGen0jesPileUpPtHFdn(); }
const int &NQGen1jesPileUpPtHFdn() { return vvv.NQGen1jesPileUpPtHFdn(); }
const int &NQGen2jesPileUpPtHFdn() { return vvv.NQGen2jesPileUpPtHFdn(); }
const int &NQGen3jesPileUpPtHFdn() { return vvv.NQGen3jesPileUpPtHFdn(); }
const int &NQGen4jesPileUpPtHFdn() { return vvv.NQGen4jesPileUpPtHFdn(); }
const int &NBGen0jesPileUpPtHFdn() { return vvv.NBGen0jesPileUpPtHFdn(); }
const int &NBGen1jesPileUpPtHFdn() { return vvv.NBGen1jesPileUpPtHFdn(); }
const int &NBGen2jesPileUpPtHFdn() { return vvv.NBGen2jesPileUpPtHFdn(); }
const int &NBGen3jesPileUpPtHFdn() { return vvv.NBGen3jesPileUpPtHFdn(); }
const int &NBGen4jesPileUpPtHFdn() { return vvv.NBGen4jesPileUpPtHFdn(); }
const int &NLGen0jesPileUpPtHFdn() { return vvv.NLGen0jesPileUpPtHFdn(); }
const int &NLGen1jesPileUpPtHFdn() { return vvv.NLGen1jesPileUpPtHFdn(); }
const int &NLGen2jesPileUpPtHFdn() { return vvv.NLGen2jesPileUpPtHFdn(); }
const int &NLGen3jesPileUpPtHFdn() { return vvv.NLGen3jesPileUpPtHFdn(); }
const int &NLGen4jesPileUpPtHFdn() { return vvv.NLGen4jesPileUpPtHFdn(); }
const int &NVQGen0jesPileUpPtHFdn() { return vvv.NVQGen0jesPileUpPtHFdn(); }
const int &NVQGen1jesPileUpPtHFdn() { return vvv.NVQGen1jesPileUpPtHFdn(); }
const int &NVQGen2jesPileUpPtHFdn() { return vvv.NVQGen2jesPileUpPtHFdn(); }
const int &NVQGen3jesPileUpPtHFdn() { return vvv.NVQGen3jesPileUpPtHFdn(); }
const int &NVQGen4jesPileUpPtHFdn() { return vvv.NVQGen4jesPileUpPtHFdn(); }
const int &NiFJjesPileUpPtHFdn() { return vvv.NiFJjesPileUpPtHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ0jesPileUpPtHFdn() { return vvv.iFJ0jesPileUpPtHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ1jesPileUpPtHFdn() { return vvv.iFJ1jesPileUpPtHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ2jesPileUpPtHFdn() { return vvv.iFJ2jesPileUpPtHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ3jesPileUpPtHFdn() { return vvv.iFJ3jesPileUpPtHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &iFJ4jesPileUpPtHFdn() { return vvv.iFJ4jesPileUpPtHFdn(); }
const float &iVMD0jesPileUpPtHFdn() { return vvv.iVMD0jesPileUpPtHFdn(); }
const float &iVMD1jesPileUpPtHFdn() { return vvv.iVMD1jesPileUpPtHFdn(); }
const float &iVMD2jesPileUpPtHFdn() { return vvv.iVMD2jesPileUpPtHFdn(); }
const float &iVMD3jesPileUpPtHFdn() { return vvv.iVMD3jesPileUpPtHFdn(); }
const float &iVMD4jesPileUpPtHFdn() { return vvv.iVMD4jesPileUpPtHFdn(); }
const float &iWMD0jesPileUpPtHFdn() { return vvv.iWMD0jesPileUpPtHFdn(); }
const float &iWMD1jesPileUpPtHFdn() { return vvv.iWMD1jesPileUpPtHFdn(); }
const float &iWMD2jesPileUpPtHFdn() { return vvv.iWMD2jesPileUpPtHFdn(); }
const float &iWMD3jesPileUpPtHFdn() { return vvv.iWMD3jesPileUpPtHFdn(); }
const float &iWMD4jesPileUpPtHFdn() { return vvv.iWMD4jesPileUpPtHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &METjesPileUpPtHFdn() { return vvv.METjesPileUpPtHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &NujesPileUpPtHFdn() { return vvv.NujesPileUpPtHFdn(); }
const int &NJjesPileUpPtHFdn() { return vvv.NJjesPileUpPtHFdn(); }
const int &NbLoosejesPileUpPtHFdn() { return vvv.NbLoosejesPileUpPtHFdn(); }
const int &NbMediumjesPileUpPtHFdn() { return vvv.NbMediumjesPileUpPtHFdn(); }
const int &NbTightjesPileUpPtHFdn() { return vvv.NbTightjesPileUpPtHFdn(); }
const int &NoORNbLoosejesPileUpPtHFdn() { return vvv.NoORNbLoosejesPileUpPtHFdn(); }
const int &NoORNbMediumjesPileUpPtHFdn() { return vvv.NoORNbMediumjesPileUpPtHFdn(); }
const int &NoORNbTightjesPileUpPtHFdn() { return vvv.NoORNbTightjesPileUpPtHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J0jesPileUpPtHFdn() { return vvv.J0jesPileUpPtHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J1jesPileUpPtHFdn() { return vvv.J1jesPileUpPtHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J2jesPileUpPtHFdn() { return vvv.J2jesPileUpPtHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J3jesPileUpPtHFdn() { return vvv.J3jesPileUpPtHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J4jesPileUpPtHFdn() { return vvv.J4jesPileUpPtHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J5jesPileUpPtHFdn() { return vvv.J5jesPileUpPtHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J6jesPileUpPtHFdn() { return vvv.J6jesPileUpPtHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &J7jesPileUpPtHFdn() { return vvv.J7jesPileUpPtHFdn(); }
const vector<int> &NQJGenjesPileUpPtHFdn() { return vvv.NQJGenjesPileUpPtHFdn(); }
const vector<int> &NBJGenjesPileUpPtHFdn() { return vvv.NBJGenjesPileUpPtHFdn(); }
const vector<int> &NLJGenjesPileUpPtHFdn() { return vvv.NLJGenjesPileUpPtHFdn(); }
const float &MVVXjesPileUpPtHFdn() { return vvv.MVVXjesPileUpPtHFdn(); }
const float &PtVVXjesPileUpPtHFdn() { return vvv.PtVVXjesPileUpPtHFdn(); }
const float &HTjesPileUpPtHFdn() { return vvv.HTjesPileUpPtHFdn(); }
const float &HTJjesPileUpPtHFdn() { return vvv.HTJjesPileUpPtHFdn(); }
const float &HTFJjesPileUpPtHFdn() { return vvv.HTFJjesPileUpPtHFdn(); }
const float &SumPtFJjesPileUpPtHFdn() { return vvv.SumPtFJjesPileUpPtHFdn(); }
const float &SumPtJjesPileUpPtHFdn() { return vvv.SumPtJjesPileUpPtHFdn(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &GenV0() { return vvv.GenV0(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &GenV1() { return vvv.GenV1(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &GenV2() { return vvv.GenV2(); }
const int &isHad0() { return vvv.isHad0(); }
const int &isHad1() { return vvv.isHad1(); }
const int &isHad2() { return vvv.isHad2(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &GenF00() { return vvv.GenF00(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &GenF01() { return vvv.GenF01(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &GenF10() { return vvv.GenF10(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &GenF11() { return vvv.GenF11(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &GenF20() { return vvv.GenF20(); }
const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<float> > &GenF21() { return vvv.GenF21(); }

}
